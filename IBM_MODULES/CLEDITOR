**** SOURCE FILE : M0011533.W02   ***
*
C
C.....FORTRAN SUBROUTINE                   APT301
C*********************************************************
C******                                            *******
C******               CLTAPE EDITOR                *******
C******                                            *******
C*********************************************************
CIBFTC A301    FULIST,REF
C PURPOSE      TO CONTROL OPERATION OF THE GROUP OF SUBROUTINES
C              COMPRISING THE CLTAPE EDITOR FUNCTION.
C LINKAGE      CALL APT301
C ARGUMENTS    NONE - ALL THE DATA REQUIRED BY APT301 IS ON
C              EXFILE.
C SUBSIDIARIES APT302, APT303, APT304, APT305, APT306, APT307,
C              APT308, APT309, APT310, APT311, APT312, APT313,
C              APT314, APT315, APT318, APT319, APT320, APT321,
C              APT322, APT325, APT326, APT327, APT328, APT329,
C              ALT330, APT331, APT332
C...NOTE   THIS ROUTINE HAS BEEN MODIFIED SO THAT IT NO LONGER
C          USES MIXED ARITHMETIC (DOUBLE PRECISION NORMALIZED,
C          DOUBLE PRECISION UNNORMALIZED,AND INTEGER )
      SUBROUTINE APT301
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C     THE FOLLOWING PROGRAM IS THE EXECUTIVE ROUTINE FOR THE CLTAPE
C     EDITOR.IT HAS THREE FUNCTIONS
C     TO PROVIDE A VERIFICATION LISTING OF THE CLFILE,INCLUDING ERROR
C     DIAGNOSTICS
C     TO PROCESS COPY AND VTLAXS COMMANDS
C     TO PROVIDE THE BASE STRUCTURE FOR ANY FUTURE PLOTTING PROGRAMS
C
C     THE EXECUTION OF A PART PROGRAM RESULTS IN THE PREPARATION OF
C     EXFILE.  THE CLEDITOR USES EXFILE  AS INPUT TO PREPARE THE
C     CLFILE.  THE FORMAT OF EXFILE IS NOT IDENTICAL TO THE CLFILE.
C
C
C     ***** COMMON-EQUIVALENCE BLOCK VARIABLES *****
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
C
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))
C
      EQUIVALENCE             (AREA1(1),RECORD(1)),(AREA1(1),IRECRD(1)),
     1  (AREA1(257),CURRNT),(AREA1(258),IDPLOT(1)),(AREA1(260),IPLOTI),
     2   (AREA1(261),IPX)   , (AREA1(262),IPY)   , (AREA1(263),NCAMRA),
     3   (AREA1(264),NRECNO), (AREA1(265),SEQNO) , (AREA1(266),NX)    ,
     4   (AREA1(267),NY), (AREA1(268),PARTNO(1)),  (AREA1(280),PT0(1)),
     5   (AREA1(283),PTU(1)), (AREA1(286),KPLOT) ,
     6 (AREA1(335),IPLTAB(1)),(AREA1(375),MLTFLG), (AREA1(376),NREAD) ,
     7 (AREA1(377),NNNNN(1)), (AREA1(381),NRECF) , (AREA1(382),NRECL) ,
     8   (AREA1(383),NCFL)  , (AREA1(384),NPWDS) , (AREA1(385),NPTAB) ,
     9   (AREA1(386),INDXR) , (AREA1(387),INDXN) , (AREA1(388),NRECN1)
      EQUIVALENCE             (AREA1(389),NTAPE) , (AREA1(390),NCLEND),
     1 (AREA1(391),NRECLS), (AREA1(392),NTAPE1),(AREA1(393),INDTBS(1)),
     2   (AREA1(473),INDXS) , (AREA1(474),EMPTY) , (AREA1(475),ISTFLG),
     3   (AREA1(476),ICPYSW),     (AREA1(287),MATTAB(1,1,1))
      EQUIVALENCE             (AREA1(477),SAVSEQ)
C
      EQUIVALENCE      (AREA2(1),AMATRX(1,1)),     (AREA2(1),AMTR(1)) ,
     1   (AREA2( 37),AN1)   , (AREA2( 38),AN2)   , (AREA2( 39),BRANCH),
     2   (AREA2( 40),CMAT(1,1)),  (AREA2(52),CNTMAT(1,1)),
     3   (AREA2(52),CNTM(1)),  (AREA2(88),CONT(1)),
     4                       (AREA2(91),COUNT(1)), (AREA2( 94),ICLWAS),
     5   (AREA2( 95),ICOPY) , (AREA2( 96),INDN)  ,
     6   (AREA2( 99),INDTAB(1)),  (AREA2( 99),TABIND(1)),
     7                      (AREA2(259),INDXNO(1)),(AREA2(262),IPLOTX),
     8 (AREA2(463),IPLWAS),(AREA2(464),IRECNI(1)),(AREA2(465),JCOPY)  ,
     9   (AREA2(466),KCOPY) , (AREA2(467),LPRINT), (AREA2(468),MAXCOP)
      EQUIVALENCE             (AREA2(485),TNTM(1)),(AREA2(521),VUN)   ,
     1   (AREA2(469),MULTAX), (AREA2(470),NLETRS), (AREA2(471),NTAB)  ,
     2   (AREA2(472),ORIGIN), (AREA2(473),PPRINT(1)),
     3   (AREA2(485),TMATRX(1,1)),  (AREA2(522),TRAMAT(1,1)),
     4   (AREA2(534),NCSMAX), (AREA2(535),LVLCPY), (AREA2(536),NOCPY)
C
      EQUIVALENCE             (AREA3(  1),AX0)   , (AREA3(  2),AX)    ,
     1   (AREA3(  3),AY0)   , (AREA3(  4),AY)    , (AREA3(  5),DC)    ,
     2   (AREA3(  6),DX)    , (AREA3(  7),DY)    , (AREA3(  8),DELX)  ,
     3   (AREA3(  9),DELY)  , (AREA3( 10),IERR)  , (AREA3( 11),ITRUNC),
     4   (AREA3( 12),LOKATE), (AREA3( 13),MCODE) , (AREA3( 14),NX0)   ,
     5   (AREA3( 15),NX1)   , (AREA3( 16),NX2)   , (AREA3( 17),NX4)   ,
     6   (AREA3( 18),NX5)   , (AREA3( 19),NY0)   , (AREA3( 20),NY1)   ,
     7   (AREA3( 21),NY2)   , (AREA3( 22),NY4)   , (AREA3( 23),NY5)   ,
     8   (AREA3( 24),PARAM),                       (AREA3( 75),PNAME) ,
     9   (AREA3( 76),PPT(1)), (AREA3( 79),EMPTY2), (AREA3( 80),TL)
      EQUIVALENCE             (AREA3( 81),X0)    , (AREA3( 82),X1)    ,
     1   (AREA3( 83),X2)    , (AREA3( 84),X3)    , (AREA3( 85),XNEW)  ,
     2   (AREA3( 86),Y0)    , (AREA3( 87),Y1)    , (AREA3( 88),Y2)    ,
     3   (AREA3( 89),Y3)    , (AREA3( 90),YNEW)  , (AREA3( 91),EMPTY3)
C
      DIMENSION   AMATRX(3,4),AMTR  ( 36),CMAT  (3,4),CNTMAT(3,4),
     1CNTM  ( 36),CONT  (  3),COUNT (  3),IDPLOT(  2),INDTAB(160),
     2INDXNO(  3),IRECNI(  3),IRECRD(256),            PARTNO( 12),
     3PPRINT( 12),PPT   (  3),PT0   (  3),PTU   (  3),NNNNN (  4),
     4RECORD(256),TRAMAT(3,4),TABIND(160),TMATRX(3,4),TNTM  ( 36)
C
C
      INCLUDE (KNUMBR)    
C
      COMMON /KFLAGS/ KFLAGS
      DIMENSION  KFLAGS(5)
      EQUIVALENCE             (KFLAGS( 1),CLPRT) , (KFLAGS( 2),CLWRT) ,
     1   (KFLAGS( 3),CLPLOT), (KFLAGS( 4),TAPFLG), (KFLAGS( 5),ITRAFL)
C
      INCLUDE (CLHOLRTH)    
C
      COMMON /NCFSTO/ NCFSTO,CSCALE
      DIMENSION NCFSTO(60000),MATTAB(4,4,3),AMTTAB(4,4,3),IPLTAB(40)
      EQUIVALENCE  (MATTAB(1,1,1),AMTTAB(1,1,1))
C
      COMMON /VERSON/ NEWSYS,ISTAND,IMACHN,IFIRST,NUM,KONSYS(2)
C
      COMMON /NRECC/ NRECC
      DIMENSION  NRECC(21)
C
C...     TYPE DECLARATIONS AND MISCELLANEOUS EQUIVALENCES
C
      DOUBLE PRECISION  NCFSTO, IRECRD, MATTAB, KKSTAK, INDEX
      INTEGER  CLPRT,CLWRT,CLPLOT,CURRNT,BRANCH,PPFLAG,CPFL
      INTEGER  TAPFLG
C
      DIMENSION  ALETRA(3), INDTBS(80)
      DIMENSION PPSTAK(15,30),KKSTAK(15,30),CPFL(48)
      EQUIVALENCE (PPSTAK(1,1),KKSTAK(1,1))
C
      DIMENSION  JRECRD(512)
      EQUIVALENCE  (RECORD(1),JRECRD(1)), (JRECRD(6),NUMWDS)
C
      INTEGER Z4E
      PARAMETER (Z4E=1308622848)
      INTEGER IZERO(2)
      EQUIVALENCE (IZERO(1),ZERO)
C
      CHARACTER*8 CTEST,ENDIND,ENORM,VTLAXS,CLDATA,CLOCK
      CHARACTER HMACR*16,CPFLID*4,IBLK2*2,HENDS*4,HBIGIN*6
      INTEGER BCDF,ITEMP(2)
      EQUIVALENCE (ITEMP(1),DTEMP)
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE (SYMFIL)    
      COMMON/R5AXIS/
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,VCUTER,TEST  ,CRADUS
      COMMON/I5AXIS/
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV
C
      CHARACTER*20 IFMT1,IFMT3
C
      INCLUDE (DARRAY)    
C
C
      DATA IFMT1/'** START CLEDITOR **'/
      DATA IFMT3/'** END   CLEDITOR **'/
      DATA IZERO/Z4E,0/
      DATA ENDIND/'NOMORE  '/,CPFLID/'CPFL'/,IBLK2/'  '/,ENORM/'NORMAL'/
      DATA VTLAXS/'VTLAXS  '/,CLDATA/'CLDATA  '/,CLOCK/' CLOCK  '/
      DATA HMACR/'MACRO PROCESSING'/
      DATA HENDS /'ENDS'/
      DATA HBIGIN/'BEGINS'/
C
C     PRINT WHAT SECTION THIS IS
C
   10 CALL CFORM('1',DARRAY,1,1)
      CALL CFORM(IFMT1,DARRAY,45,20)
      CALL CPRINT(DARRAY)
C
C... READ CPFILE TO OBTAIN CLPRNT AND APTIII CONVERSION REQUIREMENTS
C
      CALL AREAD (CPFILE,1,CPFL,48,IR)
      CALL HOLFRM(CPFL(1),CTEST,1,4,NWD)
      IF ((CTEST(1:4) .EQ. CPFLID) .AND. (CPFL(2) .EQ. 1))  GO TO 6
C
      CALL APT336(30032,'APT301  ')
      RETURN
C
C... INITIALIZE ALL VARIABLES
C
    6 CLPRT=CPFL(4)
      ICLSV=1
      CLWRT=1
      IPLWAS=0
      CLPLOT=0
C...     CHECK CLPRNT REQUIREMENTS
      IF (CLPRT .EQ. 0) GO TO 35
      CALL CFORM('0TAPENO/ISN',DARRAY,1,11)
      CALL CPRINT(DARRAY)
      GO TO 45
   35 CALL CFORM('*** NO CLPRNT HAS BEEN REQUESTED ***',DARRAY,11,36)
      CALL CFORM('0',DARRAY,1,1)
      CALL CPRINT(DARRAY)
C...     CLEAR INDEX NUMBERS FROM TABLE
   45 DO 80 I=1,80
   80 TABIND(I)=K0
 90    COUNT(1) =K0
      IVCUT=0
      ICUT = 0
      IPLFLG=0
      IVTFLG=1
      NRECEX=0
      NRECCL=0
      NCFLSV=1
      ISTFLG=3
      MLTFLG=1
      NREAD=1
      INDXS=0
      NRECF=0
      NRECL=0
      NCFL=1
      NPWDS=0
      NTAB=1
      NPTAB=0
      MAXCOP=3
      NCAMRA=1
      MULTAX=0
      ICLWAS=0
      IDPLOT(1) =0
      IPLOTI=0
      LVLCPY=0
      NOCPY=0
      ICOPY =0
      NCSMAX=60000
      NCSSV=NCSMAX
      ICRDEF=0
      ITRCPY=0
      CURRNT=0
      ITRAFL=0
      ICP3=-1
       CSCALE = 1.
             TSCALE= 1.0
            PPFLAG = K0
                J1 = K1
      CALL APT314(-1,-1)
      I=1
      CALL APT314(EXFILE,I)
      NTAPE = EXFILE
      NTAPE1=K1
      NFIL12=12
      NFIL13=13
C
C**   SET = 1 IF NEW SYSTEM CLTAPE RECS. TO BE WRITTEN
      NEWSYS =K0
C
C**   SET = 1 IF APT III STANDARD CLTAPE TO BE WRITTEN
      ISTAND = K0
C
C**   SET = 1 IF A MACHINE P. P. COMMAND DETECTED IN A-301
      IMACHN = K0
C
C**   FLAG FOR LMCT
      IFIRST = K1
C
C**   INDEX INTO TABLE OF AVAILABLE POST PROCESSORS
      NUM = K1
C
C**   CONTROL SYSTEM NAME FROM W(5), MACHIN P.P.C. RECORD.
      KONSYS(1) = Z4E
      KONSYS(2) = K0
      DO 110 I=1,4
  110 NRECC(I)=K0
      NRECN1=1
C
C     READ EXFILE OR OLD CLFILE OR NCFSTO
C
  190 ICRDEF = K0
      IF(IVTFLG.EQ.6) GO TO 8025
      GO TO (210,200,220,240),NREAD
  200 NRECC(NTAPE1) = NRECC(NTAPE1)-1
      GO TO 211
  210 NRECC(NTAPE1)=NRECC(NTAPE1)+1
  211 CALL APT314(NTAPE,NRECC(NTAPE1))
      GO TO 270
  220 IF (NCFL .GE. (NCSSV-1)) GO TO 229
      K=NCFSTO(NCFL+2)/1000
      K=NCFSTO(NCFL+2)+3-K *1000
      DO 222 I = 1,K
      IRECRD(I) = NCFSTO(NCFL)
  222 NCFL=NCFL+1
      IRECRD(3)=ZERO
      NUMWDS=K-3
      GO TO 270
  229 NREAD=K1
  230 IF (NTAPE1.EQ.K1) GO TO 235
      I=NCFL-NPWDS+1
      K=NCFSTO(I)/1000
      NRECC(NTAPE1) = K
      CALL APT314 (NTAPE,K)
      IF ((IRECRD(1)-NCFSTO(I-1).EQ.0).AND.(IRECRD(2)-NCFSTO(I).EQ.0))
     1  GO TO 235
C
  232 I=AMTTAB(1,4,ICOPY)
      CALL APT336(30024,'APT301  ')
      CALL HELP
      GO TO 341
C
  235 NRECC(     1) = NRECL
      CALL APT314(NTAPE,NRECL)
      IF ((IRECRD(1)-NCFSTO(NRECLS).EQ.0).AND.(IRECRD(2)-NCFSTO(NRECLS+1
     1).EQ.0))GO TO 190
      GO TO 232
  240 IF (NCFL.GT.K0) GO TO 245
      NREAD=K2
      GO TO 230
  245 K=NCFSTO(NCFL+2)/1000
      K=NCFSTO(NCFL+2)+3-K*1000
      J=NCFSTO(NCFL+2)/1000
      M=NCFL
      DO 246 I=1,K
      IRECRD(I)   = NCFSTO(M)
  246 M=M+1
      IRECRD(3)=ZERO
      NUMWDS=K-K3
      NCFL=NCFL-J
C
  270 CALL APT310 (BRANCH,RECORD(1))
C
C     BRANCH ACCORDING TO RECORD NAME
C
      GOTO(300,2000,1400,3000,1450,300,6000,1300,300,1200,7000,1100
     1,7000,1600,8100,8000,5000,9100,5500,9500,4000,9600,8200,9800,9810,
     29000),BRANCH
C
C     THIS IS THE COMMON RETURN POINT FOR ALL SECTIONS OF THE CL EDITOR
C     AND THE POINT AT WHICH THE RECORDS ARE WRITTEN ON CLFILE IF CLWRT
C     =1 AND PRINTED IF CLPRT=1
C
C
C...  WRITE CLFILE,VLFILE AND CLFIL3 IF THE APPROPRIATE FLAGS ARE SET
C
  300 SEQSTO = RECORD(2)
      IF (BRANCH .NE. 3) SAVSEQ=RECORD(2)
      IF(CLWRT.EQ.1.AND.CPFL(6).EQ.1) CALL APT312
      GO TO 335
  330 SEQSTO=RECORD(2)
  335 IF(CLWRT.EQ.1.AND.CPFL(5).EQ.1) CALL CNVRT3(CPFL(7))
      GO TO 337
  336 SEQSTO=RECORD(2)
      SAVSEQ=RECORD(2)
  337 IF(CLPRT.EQ.1.AND.BRANCH.NE.21)CALL APT302
      RECORD(2)=SEQSTO
      IF(IVTFLG.EQ.6.AND.ISTFLG.NE.K1) GO TO 8025
C
C
C     IF FINI START OVER FOR NEXT PART PROGRAM
C
  340 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF(CTEST.NE.FINI) GO TO 350
  341 IF(NRECN1.NE.1.AND.CLWRT.EQ.1.AND.CPFL(6).EQ.0) CALL APT312
      IF(NRECN1.NE.1.AND.CLWRT.EQ.1)  CALL APT313
      IF(CLWRT.EQ.1.AND.CPFL(5).EQ.0) CALL CNVRT3(CPFL(7))
      CALL CFORM('0',DARRAY,1,1)
      CALL CFORM(IFMT3,DARRAY,45,20)
      CALL CPRINT(DARRAY)
      CALL TAPOP(EXFILE,-3)
      CALL TAPOP(NFIL12,-3)
      CALL TAPOP(NFIL13,-3)
      RETURN
C
C     CHECK RECORD FOR LAST ONE FROM AN OLD CLFILE
C
  350 IF (NTAPE1.EQ.K1) GO TO 380
      IF (NCLEND-JRECRD(4)) 400,360,380
  360 CALL APT314(-1,-1)
      NTAPE=EXFILE
      NTAPE1=K1
C
C...     IF WE ARE IN COPY LOOP, STORE RECORD IN NCFSTO
  380 IF (ISTFLG .NE. K1) GO TO 190
C
C IF WE ARE IN CLDAT/OFF-ON PART, NO COPY STORAGE
      IF(CPFL(5).EQ.K0) GOTO 190
C
C...     IF FIRST PASS INSIDE VTLAXS LOOP, NO COPY STORAGE
      CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF (IVTFLG .EQ. 2 .OR. CTEST .EQ. VTLAXS) GO TO 190
C
C...     IF THIS IS CLDATA RECORD, CHECK FOR TRACUT TRANSFORMATION
      IF (ITRCPY .NE. K1) GO TO 387
      ITRCPY=0
      GO TO 190
C
  385 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF (IVTFLG .EQ. 2 .OR. CTEST .EQ. VTLAXS) GO TO 190
      ITRCPY=1
  387 IF ((NCFL + (NUMWDS+3)) .LT. NCSMAX) GO TO 390
      IF((NCFL+(NUMWDS+3)).GE.NCSMAX)CALL APT336(30039,'APT301  ')
      ISTFLG=K2
      NCSSV=NCFL
      GO TO 397
C
C     MOVE RECORD TO STORAGE (NCFSTO)
C
  390 NRECLS=NCFL
      NRECL=NRECC(1)
      K=NUMWDS+3
      DO 395 I=1,K
      NCFSTO(NCFL) = IRECRD(  I)
  395 NCFL=NCFL+1
      IF(NCFL.GE.NCSMAX)CALL APT336(30039,'APT301  ')
      NCFSTO(NRECLS+2)=JRECRD(6)+NPWDS*1000
      NPWDS=NUMWDS+3
C
C..      CHECK FOR A TRACUT TRANSFORMATION OF THIS CLDATA RECORD
  397 IF (ITRCPY .NE. K1) GO TO 190
      IF (ICRDEF .EQ. K1) GO TO 2039
      GO TO 2100
C
C     THE LAST RECORD FROM THE OLD CLFILE WAS NOT FOUND
C
  400 CALL APT336(30031,'APT301  ')
      GO TO 360
C
C     SAVE THE PARTNO BCD TEXT-TO BE PLOTTED IN THE SETUPP SUBROUTINE
C
 1100 K = JRECRD(10)-1
      DO 1110 I=1,K
 1110 PARTNO(I)=RECORD(I+6)
      GO TO 300
C     SET THE MULTAX FLAG
 1200 MULTAX=K1
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF(CTEST.EQ.OFF) MULTAX=0
      GO TO 300
C     INSERT COMMAND
 1300 GO TO 300
C
C...     **** AERR PROCESSING ****
C
 1400 CLWRT=K1
      IF (JRECRD(8) .LT. 0) GO TO 1402
      IF (IVTFLG .EQ. 2) GO TO 1430
C...     SET FLAG IF COPY TRANSFORMATION SHOULD BE BYPASSED
      IF (ISTFLG .LT. 3 .OR. ICOPY .NE. 0) NOCPY=1
      IF (CLPRT .EQ. 0) GO TO 1405
      IF (JRECRD(4) .NE. 2) GO TO 300
      CLPRT=ICLSV
 1402 IF (CLPRT .EQ. 0) CALL APT302
      GO TO 300
C...     TURN ON CLPRNT AND BACKSPACE TO LAST CLDATA RECORD
 1405 DO 1410 JBCK=1,50
      NRECC(1)=NRECC(1)-1
      CALL APT314(NTAPE,NRECC(1))
      CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF (CTEST .EQ. CLDATA .AND. JRECRD(8) .NE. 1) GO TO 1420
      IF (CTEST .EQ. CLOCK) GO TO 1425
 1410 CONTINUE
C
C...     START CLPRNT AT CL MOTION COMMAND AND ISSUE DIAGNOSTIC
 1420 NRECC(1)=NRECC(1)-2
 1425 CALL APT336(30037,'APT301  ')
      ICLSV=0
      CLPRT=1
      GO TO 190
C
C...     IF VTLAXS LOOP, BACKSPACE TO VTLAXS/ON AND BYPASS TRANSFORMING
 1430 IVTFLG=1
      CALL APT336(30036,'APT301  ')
      NRECC(1)=IR
      CALL APT314(NTAPE,NRECC(1))
      CLPRT=1
      BRANCH=16
      GO TO 330
C
C        **** DYNDMP PROCESSING ***
C
 1450 CALL APT302
      GO TO 340
C
C     PPRINT-SAVE THE BCD TEXT
C
 1600 IF (IDPLOT(1) .EQ. K2) GO TO 300
      DO 1620 I=1,NUMWDS,2
 1620 PPRINT (I)= RECORD(I+4)
      GO TO 300
C     FINI. PREPARE FOR END OF FILE EXIT FROM CLTAPE EDITOR
C     IF CLFILE WAS WRITTEN, PLACE AN EOF ON IT
C      RETURN TO BEGINNING OF CLTAPE EDITOR.
C
C     CLDATA.THIS SECTION WILL PROCESS THE CUTTER LOCATION POINTS.IT WIL
C     L TRANSFORM THE POINTS IF A COPY IS IN EFFECT.IT WILL ALSO PLOT TH
C     E TOOL PATH IF THE PLOTTING ROUTINES ARE IN THE SYSTEM.
C
 2000 IF ((JRECRD(8)-K1).NE.0) GO TO 2070
      IF(ICUT.NE.0) GO TO 190
C     STORE THE ORIGIN NAME IF THIS IS AN INITIAL CLDATA RECORD
      ORIGIN=RECORD(5)
      CALL HOLFRM(ORIGIN,CTEST,1,8,NWD)
      IF (CTEST.EQ.GODLTA) GO TO 336
C
C     IF A CANONICAL FORM IS     INCLUDED CHECK FOR CIRCLE
C
      IF(JRECRD(6).EQ.K2) GO TO 300
      IF (JRECRD(18).NE.K4) GO TO 300
C
C...     CHECK FOR A COPY OR TRACUT TRANSFORMATION. IF BOTH ARE ON,
C        STORE THE ORIGINAL CANONICAL FORM BEFORE TRANSFORMING
C
       IF (ICOPY.GT.K0) GO TO 2040
       IF (ITRAFL.NE.K1)  GO TO 300
      IF(ISTFLG.EQ.K3) GO TO 2040
      ICRDEF=K1
      GO TO 385
 2039 ICRDEF=K0
 2040 CALL APT303 (RECORD(10),TMATRX,RECORD(10))
      CALL APT304 (RECORD(13),TMATRX,RECORD(13))
      CALL APT315 (RECORD(13),RECORD(13))
      RECORD(16)=CSCALE*TSCALE*RECORD(16)
      GO TO 300
 2070 CALL HOLFRM(ORIGIN,CTEST,1,8,NWD)
      IF(CTEST.NE.GODLTA) GO TO 2090
      IF(ICUT.NE.0) GO TO 190
      GO TO 336
C...    SET VTLAXS FLAGS AND SAVE LAST SET OF COORDINATES
 2090 IF(IVCUT.NE.1) GO TO 2091
      IVCUT=2
      GO TO 190
 2091 NRECEX=1
      XSTART=RECORD(NUMWDS-2)
      YSTART=RECORD(NUMWDS-1)
      ZSTART=RECORD(NUMWDS)
      IF(ICUT.NE.0) GO TO 190
C...    CHECK IF VTLAXS IS IN EFFECT
      IF(IVTFLG.EQ.K1) GO TO 2095
      CALL APT311
 2095 ITEMP(1)=BCDF(DUMMY9(1:4))
      ITEMP(2)=BCDF(DUMMY9(5:8))
      ORIGIN=DTEMP
C
C...     CHECK FOR A COPY OR TRACUT TRANSFORMATION. IF BOTH ARE ON,
C        STORE THE ORIGINAL CUTTER POINTS BEFORE TRANSFORMING
C
 2097 IF (ITRAFL .EQ. K1 .AND. ISTFLG .EQ. K1) GO TO 385
      IF (ITRAFL .EQ. K1 ) GO TO 2100
      IF (ICOPY) 3719,300,2100
C
C        CHECK FOR NO TOOL AXIS VECTOR TRANSFORMING
 2100 IF (MULTAX .NE. K1) GO TO 2120
      DO 2110 I=5,NUMWDS,7
      CALL APT303 (RECORD(I),TMATRX,RECORD(I))
C     TRANSFORM TOOL AXIS VECTOR
      CALL APT304 (RECORD(I+3),TMATRX,RECORD(I+3))
C     NORMALIZE VECTOR OUTPUT
       CALL APT315 (RECORD(I+3),RECORD(I+3))
 2110 CONTINUE
      GOTO 300
C
C
 2120 NLAST=NUMWDS+3
      DO 2125 I=5,NLAST,4
      CALL APT303(RECORD(I),TMATRX,RECORD(I))
 2125 CONTINUE
      GO TO 300
C
C...     *** COPY COMMAND PROCESSING ***
C
C...     IF VTLAXS IS IN EFFECT ISSUE DIAGNOSTIC
 3000 IF (ICP3.GE.0)GOTO 4011
      IF (IVTFLG .EQ. K4) GO TO 8010
      IF (IVTFLG .EQ. K2) GO TO 330
      CALL APT335
      IF (ICPYSW.EQ.0) GO TO 330
      IF (ICPYSW.GT.0) GO TO 190
      GO TO 232
C
C...     COPY LOGIC ERROR
 3719 CALL APT336(30018,'APT301  ')
      GO TO 330
C
C
C     THIS SECTION PROCESSES THE CLFILE RECORD - CHECKS PARAMETERS FOR
C     VALIDITY AND POSITIONS THE OLD CLFILE IF NECESSARY
C
 4000 CALL APT302
C...     CHECK FOR A CLDAT/2 COMMAND - SET FLAG TO START SAVING CLFILE
C...     WRITE IF XECUTION COMMAND CLDAT/START-NOMORE
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF(CTEST(7:8).NE.IBLK2)GOTO 4006
      IF(CTEST.EQ.ENDIND.OR.CTEST.EQ.ENORM)GOTO 4008
      ICP3=CPFL(5)
      CPFL(5)=0
      GOTO 4009
 4008 CPFL(5)=ICP3
      ICP3=-1
 4009 IF(ICOPY.EQ.0.AND.ITRAFL.EQ.0)GOTO 9000
 4011 CALL APT336(30040,'APT301  ')
      ITRAFL=0
      TSCALE=1.
      ICOPY=0
      ICPYSW=0
      NCFL=0
      NRECL=0
      GOTO 330
C
 4006 ICLDWR=JRECRD(14)
      I34FLG=JRECRD(18)
      IF(ICLDWR.EQ.1) GO TO 4002
      IF(ICLDWR.EQ.2) GO TO 4005
 4001 CALL APT336(30025,'APT301  ')
      GO TO 350
C     WRITE
 4002 CALL HOLFRM(IRECRD(11),CTEST,1,8,NWD)
      IF(CTEST.EQ.ON) GO TO 4003
      IF(CTEST.EQ.OFF) GO TO 4004
      GO TO 4001
C     ON
 4003 IF(I34FLG.EQ.3) CPFL(5)=1
      IF(I34FLG.EQ.4) CPFL(6)=1
      GO TO 9000
C     OFF
 4004 IF(I34FLG.EQ.3) GO TO 4007
      JRECRD(13)=Z4E
      JRECRD(14)=2
      CPFL(6)=0
      GO TO 190
 4007 CPFL(5)=0
      GO TO 9000
C     READ
 4005 IF(I34FLG.NE.4) GO TO 4001
      IF(JRECRD(20).EQ.1) K=JRECRD(22)
      CALL HOLFRM(IRECRD(11),CTEST,1,8,NWD)
      IF(CTEST.EQ.ON) K=10000
      IF(CTEST.EQ.OFF) GO TO 360
      NCLEND=JRECRD(26)
      IF(CTEST.EQ.ON) NCLEND=99990000
      J=K
      K=K/10000
      JTAPE=JRECRD(10)
      IF(JTAPE.NE.12.AND.JTAPE.NE.13) GO TO 4001
      NTAPE1=JTAPE-10
      IF(JTAPE.EQ.12) NTAPE=NFIL12
      IF(JTAPE.EQ.13) NTAPE=NFIL13
      CALL APT314(-1,-1)
      GO TO (4110,4110,4130,4130),NREAD
C
C     POSITION OLD CLFILE AND CHECK RECORD NUMBER
C
 4110 NRECC(NTAPE1)=K
      IF (ISTFLG.NE.K1) GO TO 4120
      IF ((NCFL + (NUMWDS+3)) .GE. NCSMAX) GO TO 4120
      NRECLS=NCFL
      NRECL=NRECC(1)
      K=NUMWDS+3
      DO 4115 I= 1,K
      NCFSTO(NCFL)=IRECRD(I)
 4115 NCFL=NCFL+1
      NCFSTO(NRECLS+2)=JRECRD(6)+NPWDS*1000
      NPWDS=K
 4120 CALL APT314(NTAPE,NRECC(NTAPE1))
      IF(JTAPE.EQ.12) NFIL12=NTAPE
      IF(JTAPE.EQ.13) NFIL13=NTAPE
      IF(J.EQ.10000) GO TO 270
      IF (JRECRD(4)-J.EQ.0) GO TO 270
C
      CALL APT336(30026,'APT301  ')
      GO TO 360
 4130 NRECC(NTAPE1)=K-1
      GO TO 190
C
C     THIS SECTION PROCESSES THE GEOMETRY ERROR RECORD
C
 5000 CLWRT = 1
      IF (CLPRT .EQ. 0) CALL APT302
      GO TO 300
C
C     THIS SECTION PROCESSES THE ARLEM RECORD
C
 5500 GO TO 300
C
C     THIS SECTION PROCESSES THE INDEX INSTRUCTION.IT ALSO SETS PLOT
C     FLAGS AND TESTS TO SEE IF THE PRESENT INDEX IS FOR A PLOT
C
C     CHECK FOR PLOT COMMANDS
C
 6000 IF (IPLFLG.EQ.0) GO TO 6020
C
C     IS THIS INDEX NUMBER ASSOCIATED WITH A PLOT
C
      DO 6010 I=1,NPTAB
      IF (INT(IRECRD(5))-IPLTAB(I).EQ.0) GO TO 300
 6010 CONTINUE
C
C     NOW CHECK COPY COMMANDS INDEX TABLE
C
 6020 IF (NTAB.GT.160) GO TO 6070
      CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)
      IF(JRECRD(6).EQ.4 .AND. CTEST.EQ.ENDIND) GO TO 3000
      IF(NTAB.EQ.1) GO TO 6031
      DO 6030 I = 1,NTAB,2
      IF (INT(IRECRD(5)).EQ. INDTAB(I)) GO TO 6060
 6030 CONTINUE
 6031 INDTAB(NTAB)=INT(IRECRD(5))
      INDTAB(NTAB+1) = NRECC(1)
      I=(NTAB+1)/2
      INDTBS(  I) = NCFL
      NTAB=NTAB+2
 6040 GO TO (6045,330,6050),ISTFLG
C
C        NESTED COPY ENCOUNTERED, INCREASE COPY LEVEL MARKER
 6045 LVLCPY=LVLCPY+1
      GO TO 330
C
C     THIS IS THE FIRST INDEX/N COMMAND SET PARAMETERS TO STORE CLFILE
C
 6050 IF (ICOPY .NE. 0) GO TO 330
      ISTFLG=1
      LVLCPY=1
      GO TO 330
C
C     CHECK TO SEE IF A COPY IS IN EFFECT
C
 6060 IF (ICOPY.NE.0) GO TO 6040
      I=RECORD(5)
      CALL APT336(30020,'APT301  ')
      GO TO 330
C
C
C     ERROR - INDEX TABLE FULL
C
 6070 CALL APT336(30021,'APT301  ')
      GO TO 330
C
C
C     THIS SECTION SETS UP THE PLOT PARAMETERS
C
 7000 IF(JRECRD(8).EQ.2) GOTO300
      IPLFLG=1
      NPTAB=NPTAB+1
      IPLTAB(NPTAB)=INT(IRECRD(5))
      GO TO 300
C
C...     PROCESS THE VTLAXS COMMAND
C
C        CHECK FOR NO PREVIOUS MULTAX COMMAND
 8000 IF (ICOPY.NE.0) GO TO 300
      IF (MULTAX.EQ.1) GO TO 8002
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF (CTEST .EQ. ON) CALL APT336(30006,'APT301  ')
      GO TO 330
C
 8002 IF(CLWRT.EQ.0.AND.IVTFLG.EQ.1.AND.CLPRT.EQ.0) GO TO 300
      IF(IVTFLG.EQ.K2.OR.IVTFLG.EQ.K4) IVTFLG=IVTFLG+K1
      IF(IVTFLG.EQ.3.OR.IVTFLG.EQ.5) IVCUT=0
      CALL APT311
      IF(IVTFLG.NE.6) GO TO 300
      GO TO 2000
 8025 CALL APT311
      GO TO 2097
 8010 CALL APT336(30012,'APT301  ')
      GO TO 330
 8020 CALL APT336(30011,'APT301  ')
      GO TO 330
C     PROCESS THE TRANS COMMAND
 8100 GO TO 300
C
C...  PROCESS CLPRNT/ON OR OFF RECORDS
C
C...  CHECK VTLAXS FLAG
 8200 IF(IVTFLG.EQ.K2) GO TO 330
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF (CTEST.EQ.ON) CLPRT=K1
      IF ((CTEST .EQ. OFF) .AND. (CPFL(4) .EQ. 1))  CLPRT = 0
      GO TO 330
C
C     PROCESS POST PROCESSOR LIKE COMMANDS
C
 9000 IF (PPFLAG.NE.K1) GO TO 300
C
C      STACK THE RECORD
C
               KNT =NUMWDS+K3
      J1=J1+1
      IF (J1 .GT. 15 .OR. KNT .GT. 30) GO TO 9055
         DO 9050 I = 1,KNT
      PPSTAK(J1,I) = RECORD(I)
 9050 CONTINUE
      GO TO 350
C
 9055 CALL APT336(30035,'APT301  ')
      GO TO 350
C
C      THIS SECTION PROCESSES THE TRACUT INSTRUCTION
C
 9100  IF (ICP3.GE.0)GOTO 4011
       IF (CLWRT.NE.K1) GO TO 330
      IF (JRECRD(6)-K2 .EQ. 0) GO TO 9290
C...    CHECK IF VTLAXS IS IN EFFECT
      IF (IVTFLG .EQ. K4) GO TO 8020
      ITRAFL=K1
C
C      STORE TRACUT MATRIX FROM TAPE AND STORE BY COLUMNS
C
      K = K5
       DO 9180 I=1,3
       DO 9180 J=1,4
      K = K + K1
 9180  TRAMAT(I,J) = RECORD(K)
C
 9190  DO  9210 I=1,3
      IF (DABS(TRAMAT(I,4))-0.000001D0) 9210,9210,9270
 9210  CONTINUE
C
       DO 9240 I=2,3
       IF (TRAMAT(1,1)-TRAMAT(I,I)) 9270,9240,9270
 9240  CONTINUE
C
             TSCALE= TRAMAT(1,1)
      GO TO 9300
C
 9270        TSCALE= 1.0
       GO TO 9300
C
 9290  ITRAFL =K0
             TSCALE= 1.0
C
 9300  CALL APT305
      GO TO 330
C
C     PROCESS THE HOLDPP RECORD
C
 9500      PPFLAG = JRECRD(8)
      GO TO (9525,9508,9502,9506),PPFLAG
 9502 IF (CLPRT.EQ.0) GO TO 350
      I=JRECRD(4)
      CALL CFORM('0',DARRAY,1,1)
      CALL ICONV(I,DARRAY,2,8)
      CALL CFORM('.',DARRAY,10,1)
      CALL CFORM(HMACR,DARRAY,14,16)
      CALL CFORM(HBIGIN , DARRAY,31,6)
      CALL CPRINT (DARRAY)
      GOTO 350
 9506 IF (CLPRT .EQ. 0) GO TO 350
      CALL CFORM(HMACR,DARRAY,14,16)
      CALL CFORM(HENDS,DARRAY,31,4)
      CALL CPRINT (DARRAY)
      GOTO 350
 9508 CONTINUE
C
C     UNSTACK THE RECORD
C
      IF (J1 .EQ. 0) GO TO 350
      DO 9520 K=1,J1
      RECORD(1)=PPSTAK(K,1)
      RECORD(2)=PPSTAK(K,2)
      IRECRD(3)=ZERO
      DTEMP = KKSTAK(K,3)
      NUMWDS = ITEMP(2)
      DO 9510 I=1,NUMWDS
      RECORD(I+3)=PPSTAK(K,I+3)
 9510 CONTINUE
      IF(CLWRT.EQ.1.AND.CPFL(6).EQ.1) CALL APT312
C---     CALL TO OUTPUT FEDRAT TO CLFIL3
      IF(CLWRT.EQ.1.AND.CPFL(5).EQ.1) CALL CNVRT3(CPFL(7))
      IF (CLPRT.EQ.1) CALL APT302
 9520 CONTINUE
C---     UNLOAD PP WORDS TO CLFILE DURING INDEX AND COPY
      IF(ISTFLG.EQ.1) CALL APT314(NTAPE,NRECC(NTAPE1))
 9525 J1=0
      GO TO 350
C**   PROCESS THE MACHINE POST PROCESSOR RECORD
C
C**   FLAG USED BY LMCT
 9600 IMACHN = K1
C
C**   CONTROL SYSTEM NAME IN W(5) .  USED BY A400.
C
      KONSYS(1) = JRECRD(9)
      KONSYS(2) = JRECRD(10)
      GO TO 300
C
 9800 ICUT=0
      IF((IVTFLG.EQ.2.OR.IVTFLG.EQ.4).AND.IVCUT.EQ.0)IVCUT=1
      GO TO 9000
 9810 ICUT=1
      GO TO 9000
      END
**** SOURCE FILE : M0011535.W02   ***
*
C
C......     FORTRAN SUBROUTINE APT302             1/71   R.N.
C  PURPOSE     TO WRITE OUT ON THE VERIFICATION LISTING THE DATA
C              BEING PLACED ON CLFILE AND TO OUTPUT ERROR MESSAGES
C              OR OTHER INFORMATION HELPFUL TO THE PART PROGRAMMER.
C  LINKAGE     CALL APT302
C  ARGUMENTS   NONE - APT302 WRITES ON THE VERIFICATION LISTING
C                     THE INFORMATION STORED IN RECORD.
C  SUBSIDIARIES  APT309,APT331,APT332,FCONV,ICONV,CFORM,CPRINT
C
        SUBROUTINE  APT302
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C     CLPRINT PRINTS THE RECORDS RECEIVED FROM EXFILE
C
C     *****   COMMON-EQUIVALENCE BLOCK VARIABLES  *****
C
      COMMON /EDITOR/ EDITOR(1500)
C
      DIMENSION AREA1(1500),AREA2(1000),AREA3(250)
      EQUIVALENCE (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))
C
      DIMENSION RECORD(256),SRECRD(512),JRECRD(512)
      REAL   SRECRD
      EQUIVALENCE (AREA1(1),RECORD(1)),(AREA1(1),JRECRD(1)),
     C            (AREA1(1),SRECRD(1))
      EQUIVALENCE (JRECRD(6),NUMWDS)
      INTEGER BRANCH
      EQUIVALENCE (AREA2(39),BRANCH),(AREA2(94),NUMCLD)
      EQUIVALENCE (AREA2(469),MULTAX)
C
      INCLUDE (DARRAY)    
C
      CHARACTER*8 RTAPNO,ATAPNO
      CHARACTER*12 TAPENO,HCIRC
      CHARACTER*6 CONTR,CUT,HFINI,GODLTA,START,TESTWD,RECTYP,BLANK,PARNT
      CHARACTER*2 JBLK,JSBK
      EQUIVALENCE (RTAPNO,TAPENO)
      LOGICAL GOFLG
C
      DATA GOFLG /.TRUE./
      DATA HCIRC/' = CIRCLE/  '/
      DATA CONTR/'CONT. '/
      DATA IXYZ/0/,KCONT/0/
      DATA CUT/'CUT   '/,BLANK/'      '/,HFINI/'FINI  '/
      DATA GODLTA/'GODLTA'/,START/'START '/,JBLK/'  '/,JSBK/'S '/
      DATA TAPENO/'0     /     '/,ATAPNO/'0     / '/
      DATA PARNT/'(    )'/
C
C.    TAPENO SEQUENCE NO.
C
      RTAPNO=ATAPNO
      I = JRECRD(4)
      I1=I/10000
      IF(I1.NE.0)CALL ICONV(I1,TAPENO,2,5)
      CALL ICONV (I-I1*10000,TAPENO,8,4)
      DARRAY(1:12) = TAPENO
      CALL HOLFRM(RECORD(1),RECTYP,1,6,NWD)
      CALL HOLFRM(RECORD(5),TESTWD,1,6,NWD)
C
C.    BRANCH
C
      IF(BRANCH.GE.22) GO TO 4000
      IF(BRANCH.EQ.2) GO TO 2000
      IF(BRANCH.EQ.6) GO TO 1000
      IF(BRANCH.EQ.3) GO TO 5000
      IF(BRANCH.EQ.5) GO TO 6000
      IF(BRANCH.LE.16) GO TO 4000
      IF(BRANCH.EQ.17) GO TO 7000
      IF(BRANCH.EQ.19) GO TO 1500
      IF(BRANCH.EQ.21) GO TO 3000
      GO TO 4000
C
C.    PRINT LIST
C
  100 CALL CPRINT(DARRAY)
  200 RETURN
C
C.    FINI
C
 1000 DARRAY(14:19) = HFINI
      GO TO 100
C
C.    ARLEM
C
 1500 DARRAY(14:19) = RECTYP
      GO TO 100
C
C
C.    CLDATA RECORDS
C
 2000 IF(JRECRD(8).GE.2) GO TO 2500
      IF (TESTWD.NE.GODLTA) GO TO 2020
      CALL CFORM('   $$',DARRAY,7,5)
      GOFLG=.FALSE.
 2020 DARRAY(14:19) = TESTWD
      IF(JRECRD(6) .EQ. 2) GO TO 100
      CALL CFORM('/',DARRAY,20,1)
      CALL HOLFRM(RECORD(7),DARRAY,22,8,NWD)
      CALL CFORM (PARNT,DARRAY,28,6)
      CALL ICONV(JRECRD(16),DARRAY,29,4)
      IF(JRECRD(6).LE.6) GO TO 100
      DARRAY(34:45) = HCIRC
      K = 44
      DO 2010 I=10,16
      CALL FCONV (RECORD(I),DARRAY,K,11,4)
 2010 K=K+11
      GO TO 100
C
 2500 IF(IXYZ.EQ.0) GO TO 2600
      CALL CFORM(' ',DARRAY,1,1)
 2510 IF(KCONT.EQ.0) GO TO 2550
      DARRAY(14:19) = CONTR
      CALL CPRINT (DARRAY)
 2550 IF(NUMCLD.GT.0.AND.GOFLG) GO TO 2800
      GOFLG=.TRUE.
      IF(MULTAX.NE.1) GO TO 2560
      NPLUS = NUMWDS
      NADD = 5
      INCR = 7
      GO TO 2570
 2560 NPLUS = NUMWDS+3
      NADD = 2
      INCR = 4
 2570 DO 2580 I=5,NPLUS,INCR
      K=I+NADD
      L=15
      DO 2574 J=I,K
      IF(DABS(RECORD(J)).LT.100.0) GO TO 2572
      CALL FCONV(RECORD(J),DARRAY,L,17,7)
      GO TO 2573
 2572 N=L+6
      CALL FCONV(RECORD(J),DARRAY,N,11,7)
 2573 L=L+17
 2574 CONTINUE
      CALL CPRINT(DARRAY)
 2580 CONTINUE
      L=6
 2590 KCONT = 1
      IF(JRECRD(2*NPLUS-L).EQ.3) KCONT = 0
      GO TO 200
C
C     FIRST TIME
 2600 CALL CFORM('X',DARRAY,24,1)
      CALL CFORM('Y',DARRAY,41,1)
      CALL CFORM('Z',DARRAY,58,1)
      IF(MULTAX.NE.1) GO TO 2650
      CALL CFORM('I',DARRAY,75,1)
      CALL CFORM('J',DARRAY,92,1)
      CALL CFORM('K',DARRAY,109,1)
 2650 CALL CPRINT (DARRAY)
      IXYZ = 1
      GO TO 2510
C
C     CLDAT EXTENDED OUTPUT
 2800 NPLUS=NUMWDS
      INCR=4*NUMCLD+1
      DO 2840 I=3,NPLUS,INCR
      M=6
      DO 2830 J=2,INCR,4
      M=M+3
      CALL HOLFRM(RECORD(I+J),DARRAY,M,8,NWD)
      M=M+5
      DO 2820 K=1,3
      L=I+J+K
      IF(DABS(RECORD(L)).LT.100.0) GO TO 2810
      CALL FCONV(RECORD(L),DARRAY,M,16,6)
      GO TO 2820
 2810 N=M+5
      CALL FCONV(RECORD(L),DARRAY,N,11,6)
 2820 M=M+16
      IF(M.LT.100)GOTO 2830
      CALL CPRINT(DARRAY)
      M=6
 2830 CONTINUE
      IF(M.NE.6)CALL CPRINT(DARRAY)
 2840 CONTINUE
      L=2*(NPLUS+4-INCR)
      GO TO 2590
C
C     CLDAT/START,INDEX  ; CLDAT/NOMORE,INDEX
 3000 NUMCLD=0
C.    IS EXTENDED CLDATA FORMAT GIVEN ?
      IF (TESTWD.EQ.START )NUMCLD=(NUMWDS-4)/2
      IF(TESTWD(5:6).EQ.JBLK.OR.TESTWD(5:6).EQ.JSBK)NUMCLD=NUMWDS/2
C.    POST PROCESSOR COMMAND
 4000 DARRAY(14:19) = RECTYP
      IF(JRECRD(6).EQ.2.AND.TESTWD.EQ.BLANK) GO TO 100
      CALL CFORM('/',DARRAY,20,1)
      J=4
      LSAVE=0
 4010 K=21
 4020 L = JRECRD(2*J)
      GO TO (4100,4200,4300,4400,4500),L
C
C.    FLOATING POINT DATA ITEM
C
 4100 IF(K.GT.109) GO TO 4600
      M=4
      IF (RECORD(J+1).GT.9999.9) M=1
      CALL FCONV (RECORD(J+1),DARRAY,K,10,M)
      K=K+10
      J=J+2
      GO TO 4700
C
C.    ALPHA NUMERIC DATA ITEM
 4200 IF(K.GT.111) GO TO 4600
      CALL HOLFRM (RECORD(J+1),DARRAY,K+1,6,NWD)
      K=K+8
      J=J+2
      GO TO 4700
C
C.    ALPHA NUMERIC DATA ITEM STRING
C
 4300 L=(JRECRD(2*J+2)-1)*8
      IF(JRECRD(2*J+2).LE.1) GO TO 4303
      IF(K+L.GT.119) GO TO 4600
      CALL HOLFRM (RECORD(J+3),DARRAY,K+1,L,NWD)
 4303 K=K+L+2
      J=J+JRECRD(2*J+2)+2
      IF(BRANCH.EQ.8.OR.BRANCH.EQ.12.OR.BRANCH.EQ.14.OR.
     C RECTYP.EQ.CUT)  DARRAY(20:20)=' '
      GO TO 4700
C
C.    GEOMETRIC DATA ITEM STRING
C
 4400 L = JRECRD(2*J+2)
 4404 IF(K+11*L.GT.119) GO TO 4650
 4405 J=J+2
      DO 4410 N=1,L
      CALL FCONV (RECORD(J),DARRAY,K,10,4)
      K=K+10
      J=J+1
      IF(N.EQ.L) GO TO 4700
      CALL CFORM (',',DARRAY,K,1)
 4410 K=K+1
      GO TO 4700
C
C.    ERROR
C
 4500 CALL APT336(30027,'APT302  ')
      GO TO 100
C
 4600 CALL CPRINT (DARRAY)
      GO TO 4010
 4650 IF(K.EQ.21) GO TO 4660
      CALL CPRINT (DARRAY)
      GO TO 4010
 4660 LSAVE = L - 9
      L = 9
      GO TO 4405
 4700 IF(J-3.GE.NUMWDS) GO TO 100
      CALL CFORM (',',DARRAY,K,1)
      K=K+1
      IF(LSAVE.GT.0) GO TO 4720
      GO TO 4020
 4720 CALL CPRINT(DARRAY)
      K=21
      L=LSAVE
      LSAVE=0
      J=J-2
      GO TO 4404
C.    AERR
C
 5000 CALL APT331
      GO TO 200
C
C.    DYNDMP
C
 6000 CALL APT332
      GO TO 200
C
C.    GERR
C
 7000 CALL APT309
      GO TO 200
      END
**** SOURCE FILE : M0000420.V01   ***
*
C.....FORTRAN SUBROUTINE              APT303                12/67
C PURPOSE      TO TRANSFORM THE CANONICAL FORM OF A POINT BY
C              A GIVEN MATRIX.
C LINKAGE      CALL APT303 (RESULT, MATRX, PN)
C ARGUMENTS    RESULT    ARRAY TO CONTAIN THE CANONICAL FORM OF
C                        THE RESULTANT POINT
C              MATRX     ARRAY CONTAINING THE INPUT TRANSFORMATION
C                        MATRIX
C              PN        ARRAY CONTAINING THE CANONICAL FORM OF
C                        THE INPUT POINT
C SUBSIDIARIES NONE
      SUBROUTINE APT303 (RESULT,MATRX,PN)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C     THIS ROUTINE TRANSFORMS THE CANONICAL FORM OF A POINT
C     BY A GIVEN MATRIX
      DOUBLE PRECISION MATRX
      DIMENSION RESULT(3), PN(3), P(3), MATRX(3,4)
      DO 20 I=1,3
   20 P(I) =PN(I)
      DO 70 I=1,3
      RESULT(I)=MATRX(I,4)
      DO 70 J=1,3
      RESULT(I)=RESULT(I)+ P(J)* MATRX(I,J)
   70 CONTINUE
      RETURN
       END
**** SOURCE FILE : M0000421.V01   ***
*
C.....FORTRAN SUBROUTINE              APT304                12/67
C PURPOSE      TO TRANSFORM A GIVEN VECTOR BY A GIVEN MATRIX.
C LINKAGE      CALL APT304 (RESULT, MATRX, VCTR)
C ARGUMENTS    RESULT    ARRAY TO CONTAIN THE CANONICAL FROM OF
C                        THE TRANSFORMED VECTOR
C              MATRX     ARRAY CONTAINING THE GIVEN TRANSFORMA-
C                        TION MATRIX (3 X 4)
C              VCTR      ARRAY CONTAINING THE CANONICAL FORM OF
C                        THE VECTOR TO BE TRANSFORMED
      SUBROUTINE APT304(RESULT,MATRX,VCTR)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C     THIS ROUTINE TRANSFORMS THE CANONICAL FORM OF A VECTOR
C     BY A GIVEN MATRIX
      DIMENSION RESULT(3), VCTR(3),VEC(3),MATRX(3,4)
      DOUBLE PRECISION MATRX
      DO 20 I=1,3
   20 VEC(I)=VCTR(I)
      DO 70 I=1,3
      RESULT(I)=0.0D0
      DO 70 J=1,3
         RESULT(I) = RESULT(I)+VEC(J)*MATRX(I,J)
   70 CONTINUE
      RETURN
       END
**** SOURCE FILE : M0000422.V02   ***
*
C
C......    FORTRAN SUBROUTINE APT305    11/69    RC
C PURPOSE      TO GENERATE THE TRANSFORMATION MATRIX, TMATRX.
C LINKAGE      CALL APT305
C ARGUMENTS    NONE
C SUBSIDIARIES APT306, APT308
      SUBROUTINE APT305
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C      THIS SUBROUTINE GENERATES TMATRX FROM AMTTAB AND TRAMAT
C      DEPENDING ON COPY LEVEL (ICOPY) AND TRACUT (ITRAFL)
C
C      MLTFLG DETERMINES MATRIX MULTIPLICATION ORDER 1=POINT 0=PATTERN
C
C
      COMMON /EDITOR/EDITOR/KFLAGS/KFLAGS
      DIMENSION EDITOR(1500),KFLAGS(5),AMTTAB(4,4,3)
      EQUIVALENCE  (EDITOR( 595),ICOPY) , (EDITOR(985),TMATRX),
     1             (EDITOR(1022),TRAMAT), (EDITOR(375),MLTFLG),
     2             (EDITOR( 287),AMTTAB(1,1,1)), (KFLAGS(5),ITRAFL)
C
      IF (ICOPY.EQ.0) GO TO 90
      IF (MLTFLG.EQ.0) GO TO 40
      GO TO (10,20,30),ICOPY
   10 CALL APT308 (TMATRX,AMTTAB(1,1,1))
      GO TO 80
   20 CALL APT306 (TMATRX,AMTTAB(1,1,2),AMTTAB(1,1,1))
      GO TO 80
   30 CALL APT306 (TMATRX,AMTTAB(1,1,2),AMTTAB(1,1,1))
      CALL APT306 (TMATRX,AMTTAB(1,1,3),TMATRX)
      GO TO 80
   40 GO TO (50,60,70),ICOPY
   50 CALL APT308 (TMATRX,AMTTAB(1,1,1))
      GO TO 80
   60 CALL APT306 (TMATRX,AMTTAB(1,1,1),AMTTAB(1,1,2))
      GO TO 80
   70 CALL APT306 (TMATRX,AMTTAB(1,1,1),AMTTAB(1,1,2))
      CALL APT306 (TMATRX,TMATRX,AMTTAB(1,1,3))
C
C...     CHECK FOR TRACUT MODIFICATION OF COPY MATRIX
   80 IF (ITRAFL .EQ. 0) GO TO 100
      CALL APT306(TMATRX,TMATRX,TRAMAT)
      GO TO 100
C
C...     CHECK FOR A TRACUT TRANSFORMATION ONLY
C
   90 IF (ITRAFL .EQ. 0) GO TO 100
      CALL APT308 (TMATRX,TRAMAT)
C
  100 CONTINUE
      RETURN
      END
**** SOURCE FILE : M0000423.V01   ***
*
C.....FORTRAN SUBROUTINE              APT306                12/67
C PURPOSE      TO GENERATE THE PRODUCT MATRIX OF TWO GIVEN
C              3X4 MATRICES.
C LINKAGE      CALL APT306 (RESULT, M1, M2)
C ARGUMENTS    RESULT    ARRAY TO CONTAIN THE ELEMENTS OF THE
C                        PRODUCT MATRIX
C              M1        ARRAY CONTAINING THE ELEMENTS OF THE
C                        PREMULTIPLIER MATRIX
C              M2        ARRAY CONTAINING THE ELEMENTS OF THE
C                        POSTMULTIPLIER MATRIX
C SUBSIDIARIES NONE
      SUBROUTINE APT306 (RESULT,M1,M2)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C     THIS ROUTINE MULTIPLIES TWO MATRICES OF THREE ROWS AND FOUR
C     COLUMNS
      DIMENSION RESULT(3,4),M1(3,4),M2(3,4),GM1(4,4),GM2(4,4),GM3(4,4)
      DOUBLE PRECISION M1,M2
      DO 50  J=1,4
      DO 50  I=1,3
      GM1 (I,J) =M1(I,J)
      GM2 (I,J) =M2(I,J)
   50 CONTINUE
      I=4
      DO 100 J=1,3
      GM1 (I,J)=0.0D0
      GM2 (I,J)=0.0D0
  100 CONTINUE
      GM1 (4,4)=1.0D0
      GM2 (4,4)=1.0D0
      DO 190 I=1,4
      DO 190 J=1,4
      GM3 (I,J)=0.0D0
      DO 190 K=1,4
      GM3 (I,J)= GM3 (I,J)+GM1 (I,K)*GM2 (K,J)
  190 CONTINUE
      DO 230 J =1,4
      DO 230 I =1,3
      RESULT (I,J) =GM3 (I,J)
  230 CONTINUE
      RETURN
       END
**** SOURCE FILE : M0000424.V01   ***
*
C.....FORTRAN SUBROUTINE              APT308                12/67
C PURPOSE      TO MOVE A 3 X 4 MATRIX FROM ONE ARRAY TO ANOTHER.
C LINKAGE      CALL APT308 (RESULT, MATRX1).
C ARGUMENTS    RESULT    ARRAY TO CONTAIN THE MATRIX
C              MATRX1    ARRAY CONTAINING THE MATRIX WHICH IS
C                        TO BE MOVED
C SUBSIDIARIES NONE
       SUBROUTINE APT308 (RESULT,MATRX1)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      THIS ROUTINE MOVES A 3X4 MATRIX FROM ONE ARRAY IN CORE TO ANOTHER
      DIMENSION RESULT(3,4) ,MATRX1 (3,4)
      DOUBLE PRECISION MATRX1
           DO 40 J = 1,4
           DO 40 I = 1,3
      RESULT (I,J) = MATRX1(I,J)
   40 CONTINUE
      RETURN
       END
**** SOURCE FILE : M0011537.V07   ***
*
C
C.....FORTRAN SUBROUTINE                   APT309
C PURPOSE      TO WRITE ON THE VERIFICATION LISTING THE GEOMETRIC
C              DEFINITION ERROR MESSAGES PRODUCED BY THE
C              DEFINITION REDUCTION SUBROUTINES.
C LINKAGE      CALL APT309
C ARGUMENTS    NONE
C SUBSIDIARIES NONE
       SUBROUTINE APT309
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C THIS ROUTINE WRITES THE GEOMETRIC DEFINITION ERROR DIAGNOSTIC MESSAGE
C ASSOCIATED WITH THE ERROR CODE IN IRECRD(4) ON THE VERIFICATION
C LISTING TAPE. A CHECK IS MADE TO SEE THAT THE ERROR CODE DOES NOT
C EXCEED 88.
C
C
      COMMON /EDITOR/ EDITOR
      DIMENSION EDITOR(1500),IRECRD(256)
C
      DIMENSION AREA3(250)
      EQUIVALENCE (EDITOR(1500),AREA3(250))
      DIMENSION JRECRD(512)
      DOUBLE PRECISION IRECRD
      EQUIVALENCE (EDITOR(1),IRECRD(1),JRECRD(1))
      CHARACTER*20 IFMT1,IFMT3,IFMT4
      CHARACTER*8 FMT2
C
      INCLUDE (DARRAY)    
C
      DATA IFMT4/' DEFINITION WARNING '/
      DIMENSION NERRLV(20)
      DATA IERRN/20/,NERRLV/2,3,8,9,30,40,45,49,50,71,84,92,94,5129,6*0/
C
      DATA IFMT1/' DEFINITION ERROR   '/
      DATA FMT2/'ISN NO. '/
      DATA IFMT3/' INVALID ERROR CODE '/
      J=JRECRD(4)
      II=J/10000
      III=J-II*10000
      I=JRECRD(8)
      CALL CFORM('0',DARRAY,1,1)
      CALL ICONV(J,DARRAY,2,8)
      CALL CFORM('.',DARRAY,10,1)
      CALL ICONV(I,DARRAY,34,4)
      CALL ICONV(III,DARRAY,51,4)
      CALL CFORM(FMT2,DARRAY,43,7)
      CALL CFORM('FROM SUBROUTINE ',DARRAY,56,16)
      CALL HOLFRM(IRECRD(5),DARRAY,72,8,NWD)
      IF(JRECRD(8).GE.5000.AND.JRECRD(8).LE.5999) GO TO  700
      IF(JRECRD(8).GT.98) GO TO 100
      DO 800 JJ=1,IERRN
      IF(I.EQ.NERRLV(JJ)) GO TO 810
  800 CONTINUE
  700 IF(JRECRD(8).EQ.5129) GO TO  810
      CALL CFORM(IFMT1,DARRAY,14,20)
C
      GO TO 915
  810 CALL CFORM(IFMT4,DARRAY,14,20)
C
  915 CONTINUE
      CALL CPRINT(DARRAY)
  950 CALL CLEROR(I)
C
      RETURN
  100 CALL CFORM(IFMT3,DARRAY,14,20)
      CALL CPRINT(DARRAY)
C
      GOTO 950
       END
**** SOURCE FILE : M0000426.V02   ***
*
C.....FORTRAN SUBROUTINE                   APT310
C PURPOSE      TO COMPARE A BCD WORD WITH THE CONTENTS OF A
C              HOLERITH ARRAY TO DETERMINE THE PROCESSING TO
C              BE PERFORMED.
C LINKAGE      CALL APT310  (RESULT, BCD)
C ARGUMENTS    RESULT    INTEGER VARIABLE TO CONTAIN THE
C                        SUBSCRIPT OF THE HOLERITH ARRAY
C                        INDICATING THE ELEMENT OF THE ARRAY
C                        THAT MATCHES THE INPUT WORD.
C              BCD       THE INPUT WORD TO BE COMPARED WITH
C                        THE HOLERITH ARRAY.
C SUBSIDIARIES NONE
      SUBROUTINE APT310 (RESULT,BCD )
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C     THIS ROUTINE COMPARES A BCD WORD WITH THE CONTENTS OF A HOLERITH
C     ARRAY TO DETERMINE THE PROCESSING TO BE PERFORMED
      CHARACTER*6 HOLARR(25),TEST
       INTEGER RESULT
      DATA  HOLARR      /'CAMERA','CLDATA','AERR  ','COPY  ','DYNDMP',
C                            1         2      3         4        5
     1 'FINI  ','INDEX ','INSERT','LETTER','MULTAX','OVPLOT','PARTNO',
C        6         7         8        9       10        11       12
     2 'PLOT  ','PPRINT','TRANS ','VTLAXS','GERR  ','TRACUT','ARLEM ',
C        13        14       15       16       17        18       19
     3 'HOLDPP','CLDAT ','MACHIN','CLPRNT','CUT   ','DNTCUT'/
C         20       21       22       23       24        25
               KNT = 26
      CALL HOLFRM(BCD,TEST,1,6,NWD)
           DO 25 I = 1,25
      IF (TEST .EQ. HOLARR(I)) GO TO 50
   25  CONTINUE
      RESULT =KNT
      GO TO 100
   50 RESULT = I
  100 RETURN
       END
**** SOURCE FILE : M0004201.V09   ***
*
C
C......    FORTRAN SUBROUTINE APT311    11/69    RC
C PURPOSE      ALTERS EXFILE POINTS AND TOOL AXIS VECTORS
C              BY PRORATING THE DIFFERENCE BETWEEN THE
C              STARTING AND ENDING ANGLES ALONG THE SUM
C              OF CUT VECTORS FOR SWARF CUTTING.
C LINKAGE      CALL APT311
C ARGUMENTS    NONE
C SUBSIDIARIES APT307,APT314,APT336,APT340,APT341
C
      SUBROUTINE APT311
C********************************************************************
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C***********************************************************************
C     ***** COMMON-EQUIVALENCE BLOCK VARIABLES *****
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
C
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))
C
C
      EQUIVALENCE             (AREA1(1),RECORD(1)),(AREA1(1),IRECRD(1)),
     1  (AREA1(257),CURRNT),(AREA1(258),IDPLOT(1)),(AREA1(260),IPLOTI),
     2   (AREA1(261),IPX)   , (AREA1(262),IPY)   , (AREA1(263),NCAMRA),
     3   (AREA1(264),NRECNO), (AREA1(265),SEQNO) , (AREA1(266),NX)    ,
     4   (AREA1(267),NY), (AREA1(268),PARTNO(1)),  (AREA1(280),PT0(1)),
     5   (AREA1(283),PTU(1)), (AREA1(286),KPLOT) ,
     6 (AREA1(335),IPLTAB(1)),(AREA1(375),MLTFLG), (AREA1(376),NREAD) ,
     7 (AREA1(377),NNNNN(1)), (AREA1(381),NRECF) , (AREA1(382),NRECL) ,
     8   (AREA1(383),NCFL)  , (AREA1(384),NPWDS) , (AREA1(385),NPTAB) ,
     9   (AREA1(386),INDXR) , (AREA1(387),INDXN) , (AREA1(388),NRECN1)
      EQUIVALENCE             (AREA1(389),NTAPE) , (AREA1(390),NCLEND),
     1 (AREA1(391),NRECLS), (AREA1(392),NTAPE1),(AREA1(393),INDTBS(1)),
     2   (AREA1(473),INDXS) , (AREA1(474),EMPTY) , (AREA1(475),ISTFLG),
     3   (AREA1(476),ICPYSW),     (AREA1(287),MATTAB(1,1,1))
      EQUIVALENCE             (AREA1(477),SAVSEQ)
C
      EQUIVALENCE      (AREA2(1),AMATRX(1,1)),     (AREA2(1),AMTR(1)) ,
     1   (AREA2( 37),AN1)   , (AREA2( 38),AN2)   , (AREA2( 39),BRANCH),
     2   (AREA2( 40),CMAT(1,1)),  (AREA2(52),CNTMAT(1,1)),
     3   (AREA2(52),CNTM(1)),  (AREA2(88),CONT(1)),
     4                       (AREA2(91),COUNT(1)), (AREA2( 94),ICLWAS),
     5   (AREA2( 95),ICOPY) , (AREA2( 96),INDN)  ,
     6   (AREA2( 99),INDTAB(1)),  (AREA2( 99),TABIND(1)),
     7                      (AREA2(259),INDXNO(1)),(AREA2(262),IPLOTX),
     8 (AREA2(463),IPLWAS),(AREA2(464),IRECNI(1)),(AREA2(465),JCOPY)  ,
     9   (AREA2(466),KCOPY) , (AREA2(467),LPRINT), (AREA2(468),MAXCOP)
      EQUIVALENCE             (AREA2(485),TNTM(1)),(AREA2(521),VUN)   ,
     1   (AREA2(469),MULTAX), (AREA2(470),NLETRS), (AREA2(471),NTAB)  ,
     2   (AREA2(472),ORIGIN), (AREA2(473),PPRINT(1)),
     3   (AREA2(485),TMATRX(1,1)),  (AREA2(522),TRAMAT(1,1)),
     4   (AREA2(534),NCSMAX), (AREA2(535),LVLCPY), (AREA2(536),NOCPY)
C
C
      EQUIVALENCE             (AREA3(  1),AX0)   , (AREA3(  2),AX)    ,
     1   (AREA3(  3),AY0)   , (AREA3(  4),AY)    , (AREA3(  5),DC)    ,
     2   (AREA3(  6),DX)    , (AREA3(  7),DY)    , (AREA3(  8),DELX)  ,
     3   (AREA3(  9),DELY)  , (AREA3( 10),IERR)  , (AREA3( 11),ITRUNC),
     4   (AREA3( 12),LOKATE), (AREA3( 13),MCODE) , (AREA3( 14),NX0)   ,
     5   (AREA3( 15),NX1)   , (AREA3( 16),NX2)   , (AREA3( 17),NX4)   ,
     6   (AREA3( 18),NX5)   , (AREA3( 19),NY0)   , (AREA3( 20),NY1)   ,
     7   (AREA3( 21),NY2)   , (AREA3( 22),NY4)   , (AREA3( 23),NY5)   ,
     8   (AREA3( 24),PARAM),(AREA3(25),PARRAY(1)), (AREA3( 75),PNAME) ,
     9   (AREA3( 76),PPT(1)), (AREA3( 79),EMPTY2), (AREA3( 80),TL)
      EQUIVALENCE             (AREA3( 81),X0)    , (AREA3( 82),X1)    ,
     1   (AREA3( 83),X2)    , (AREA3( 84),X3)    , (AREA3( 85),XNEW)  ,
     2   (AREA3( 86),Y0)    , (AREA3( 87),Y1)    , (AREA3( 88),Y2)    ,
     3   (AREA3( 89),Y3)    , (AREA3( 90),YNEW)  , (AREA3( 91),EMPTY3)
C
C
      DIMENSION   AMATRX(3,4),AMTR  ( 36),CMAT  (3,4),CNTMAT(3,4),
     1CNTM  ( 36),CONT  (  3),COUNT (  3),IDPLOT(  2),INDTAB(160),
     2INDXNO(  3),IRECNI(  3),IRECRD(256),PARRAY( 50),PARTNO( 12),
     3PPRINT( 12),PPT   (  3),PT0   (  3),PTU   (  3),NNNNN (  4),
     4RECORD(256),TRAMAT(3,4),TABIND(160),TMATRX(3,4),TNTM  ( 36)
C
C
      INCLUDE (KNUMBR)    
C
      COMMON /KFLAGS/ KFLAGS
      DIMENSION  KFLAGS(5)
      EQUIVALENCE             (KFLAGS( 1),CLPRT) , (KFLAGS( 2),CLWRT) ,
     1   (KFLAGS( 3),CLPLOT), (KFLAGS( 4),TAPFLG), (KFLAGS( 5),ITRAFL)
C
      INCLUDE (CLHOLRTH)    
C
      COMMON /NCFSTO/ NCFSTO,CSCALE
      DIMENSION NCFSTO(3000),MATTAB(4,4,3),AMTTAB(4,4,3),IPLTAB(40)
      EQUIVALENCE  (MATTAB(1,1,1),AMTTAB(1,1,1))
C
      COMMON /VERSON/ NEWSYS,ISTAND,IMACHN,IFIRST,NUM,KONSYS(2)
C
C...     TYPE DECLARATIONS AND MISCELLANEOUS EQUIVALENCES
C
      DOUBLE PRECISION  NCFSTO, IRECRD, MATTAB, KKSTAK, INDEX
      INTEGER  CLPRT,CLWRT,CLPLOT,CURRNT,BRANCH,PPFLAG,TAPFLG
C
      DIMENSION  PPSTAK(15,30), KKSTAK(15,30)
      EQUIVALENCE (PPSTAK(1,1),KKSTAK(1,1))
      DIMENSION  ALETRA(3), INDTBS(80)
C
      DIMENSION  JRECRD(512)
      EQUIVALENCE  (RECORD(1),JRECRD(1)), (JRECRD(6),NUMWDS)
C
C...            SYSTEM I/O FILE NAMES
C
C
C***********************************************************************
      COMMON/R5AXIS/
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,CUTTER,TEST  ,CRADUS
      COMMON/I5AXIS/
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV
C********************************************************************
      CHARACTER*8 HCLDAT,HNAME,LEFT,RIGHT,ZSMALL,CTEST
      INTEGER ITEMP(2),BCDF
      EQUIVALENCE (ITEMP(1),TEMP)
      COMMON/NRECC/NRECC
      DIMENSION NRECC(21)
C
      INTEGER Z4E
      PARAMETER (Z4E=1308622848)
      INTEGER IPOW(8)
      EQUIVALENCE (IPOW(1),POW1),(IPOW(3),POW3)
      EQUIVALENCE (IPOW(5),POW6),(IPOW(7),POW7)
C
C...
      DATA LEFT,RIGHT,ZSMALL/'LEFT    ','RIGHT   ','ZSMALL  '/
      DATA IPOW/Z4E,1,Z4E,3,Z4E,6,Z4E,7/
      DATA HCLDAT/'CLDATA  '/
      DATA HNAME/'NONAME  '/
C...
      GO TO (10,200,300,400,500,600),IVTFLG
C...    PROCESS VTLAXS/ON AND INITIALIZE VARIABLES          ***** 1*****
   10 ICLWRT = CLWRT
      ICORN1 = 0
      JSUBER=0
      IFLAG1 = 0
      JFLAG = 0
      RECNOS=RECORD(2)
      NREADS=NREAD
      NTAPES=NTAPE1
      NRECCS=NRECC(NTAPE1)
      ISAVE=K0
      IVTFLG=K2
      ICLPRT=CLPRT
      CLWRT=K0
      CLPRT=K0
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF(CTEST.EQ.ON) GO TO 40
      IF(CTEST.EQ.OFF) GO TO 30
   20 JSUBER=30001
      GOTO 990
   30 JSUBER=30002
      GO TO 990
C...    CHECK FOR FLOATING POINT NUMBERS
   40 DO 50 I=8,12,2
      IF(IRECRD(I).NE.K1) GO TO 20
   50 CONTINUE
C...    GET STARTING ANGLE
      STANG=RECORD(9)/57.2957795131
C...    IS TILT RIGHT OR LEFT
      CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)
      IF(CTEST.EQ.LEFT) GO TO 60
      IF(CTEST.NE.RIGHT) GO TO 20
      STANG=-STANG
C...    STORE HALF CUTTER DIAMETER AND CORNER RADIUS
   60 CUTTER=.5*DABS(RECORD(11))
      CRADUS=RECORD(13)
      IF(CUTTER.GE.CRADUS) GO TO 70
      JSUBER=30008
C...    ERROR 30008 - CORNER RADIUS IS GREATER THAN THE CUTTER RADIUS.
      GOTO 990
C...    IS CUTTER ORIENTATION RIGHT OR LEFT
   70 ZUN=1.0
      CALL HOLFRM(RECORD(15),CTEST,1,8,NWD)
      IF(CTEST.EQ.RIGHT) GO TO 80
      IF(CTEST.NE.LEFT) GO TO 20
      ZUN=-1.0
   80 YUN=0.
      XUN= 0.
      IABOVE=0
C...    LOOK FOR ZSMALL
      IF(NUMWDS-14) 110,90,20
   90 CALL HOLFRM(RECORD(17),CTEST,1,8,NWD)
      IF(CTEST.NE.ZSMALL) GO TO 20
      IF(CRADUS.EQ.0.) GO TO 100
      JSUBER=30009
C...    ERROR 30009 - CORNER RADIUS MUST BE ZERO WHEN USING ZSMALL.
      GOTO 990
C...    SET IABOVE=1 FOR ZSMALL, =0 FOR NOT
  100 IABOVE=1
  110 TLNGTH=0.
      X1=XSTART
      Y1=YSTART
      Z1=ZSTART
      XLM = XSTART
      YLM = YSTART
      ZLM = ZSTART
      XSAVE=XSTART
      YSAVE=YSTART
      ZSAVE=ZSTART
C...    CHECK FOR PREVIOUS MOTION RECORD
      IF(NRECEX.GT.K0) RETURN
      JSUBER=30005
C...    ERROR 30005 - A VTLAXS COMMAND WAS GIVEN WITHOUT A
C...               PREVIOUS MOTION OR FROM COMMAND.
      GOTO 990
C...
C...
C...
C...
  200 IF(ISAVE.EQ.K1) GO TO 210
      ISAVE=K1
      JFLAG=K1
      X2=RECORD(5)
      Y2=RECORD(6)
      Z2=RECORD(7)
C...    CALCULATE TOTAL LENGTH OF MOVES
  210 DO 220 I=5,NUMWDS,7
      XD=RECORD(I)-X1
      YD=RECORD(I+1)-Y1
      ZD=RECORD(I+2)-Z1
      TLNGTH=TLNGTH+DSQRT(XD**2+YD**2+ZD**2)
      XLM = X1
      YLM = Y1
      ZLM = Z1
      X1=RECORD(I)
      Y1=RECORD(I+1)
      Z1=RECORD(I+2)
      IF(IFLAG1.EQ.K0) GO TO 220
      IFLAG1=K0
      XP3 = X1
      YP3 = Y1
      ZP3 = Z1
  220 CONTINUE
      RETURN
C...
C...
C...
C...    IS THIS VTLAXS/OFF
  300 CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF(CTEST.EQ.OFF) GO TO 310
      IF(CTEST.NE.ON) GO TO 20
      JSUBER=30003
C...    ERROR 30003 - TWO VTLAXS/ON COMMANDS GIVEN WITHOUT A
C                     VTLAXS/OFF  BETWEEN THEM.
      GOTO 990
C...    VTLAXS/OFF. SAVE ENDING ANGLE
  310 IRECSV=NRECC(1)
      IF(IRECRD(8).NE.K1) GO TO 20
      ENDANG=RECORD(9)/57.2957795131
      IE=NRECC(1)+K1
C...    IS TILT RIGHT OR LEFT
      CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)
      IF(CTEST.EQ.LEFT) GO TO 320
      IF(CTEST.NE.RIGHT) GO TO 20
      ENDANG=-ENDANG
  320 DANG=ENDANG-STANG
      DLNGTH=0.0
      IF(JFLAG.EQ.K1) GO TO 330
      JSUBER=30010
C...    ERROR 30010 - NO MOTION BETWEEN A VTLAXS/ON AND VTLAXS/OFF
      GOTO 990
C...
C...
C...
C...
C...    CALCULATE VTLAXS REVISION OF POINT JUST PRIOR       ***** 5*****
C...    TO VTLAXS/ON
  330 X1=XSAVE
      Y1=YSAVE
      Z1=ZSAVE
      TSIN=DSIN(STANG)
      TSIN1 =DABS(TSIN)
      TCOS=DCOS(STANG)
      XCV=X2-X1
      YCV=Y2-Y1
      ZCV=Z2-Z1
      X2=X1
      Y2=Y1
      Z2=Z1
      CALL APT341
      IF(JSUBER.NE.K0) GO TO 990
C...    POSITION EXFILE TO THE MOTION RECORD PRIOR
C...    TO THE VTLAXS/ON STATEMENT
      CLWRT=ICLWRT
      CLPRT=ICLPRT
      IVTFLG=6
      ITEMP(1)=BCDF(HCLDAT(1:4))
      ITEMP(2)=BCDF(HCLDAT(5:8))
      RECORD(1)=TEMP
      RECORD(2)=RECNOS
      RECORD(3)=POW6
      RECORD(4)=POW1
      ITEMP(1)=BCDF(GOTO(1:4))
      ITEMP(2)=BCDF(GOTO(5:8))
      RECORD(5)=TEMP
      RECORD(6) = 0.0
      ITEMP(1)=BCDF(HNAME(1:4))
      ITEMP(2)=BCDF(HNAME(5:8))
      RECORD(7)=TEMP
      RECORD(8)=0.0
      RECORD(9)=0.0
      BRANCH =2
      RETURN
C
C...   GENERATE FIRST POINT OF VTLAXIS
C
  600 NREAD = NREADS
      NTAPE1=NTAPES
      NRECC(NTAPE1)=NRECCS-1
      RECORD(3)=POW7
      RECORD(4)=POW3
      RECORD(5)=XCC
      RECORD(6)=YCC
      RECORD(7)=ZCC
      RECORD(8)=XTA
      RECORD(9)=YTA
      RECORD(10)=ZTA
      IVTFLG=4
      BRANCH=2
      RETURN
C...
C...    PROCESS RECORDS AFTER VTLAXS/ON.                    ***** 6*****
  400 CALL HOLFRM(ORIGIN,CTEST,1,8,NWD)
      IF(CTEST.NE.FROM) GOTO 410
C...    FROM
      JSUBER=30004
C...    ERROR 30004 - A FROM COMMAND WAS GIVEN BETWEEN A VTLAXS/ON
C...               COMMAND AND ITS CORRESPONDING VTLAXS/OFF COMMAND.
      GOTO 990
  410 DO 420 I=5,NUMWDS,7
      X2=RECORD(I)
      Y2=RECORD(I+1)
      Z2=RECORD(I+2)
C...    CALCULATE NEW CUTTER LOCATION AND TLAXIS (GOTO)
      CALL APT340
      IF(JSUBER.NE.K0) GO TO 990
      RECORD(I)=XCC
      RECORD(I+1)=YCC
      RECORD(I+2)=ZCC
      RECORD(I+3)=XTA
      RECORD(I+4)=YTA
      RECORD(I+5)=ZTA
      X1=X2
      Y1=Y2
  420 Z1=Z2
      RETURN
C...
C...
C...
  500 CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF(CTEST.EQ.OFF) GO TO 510
      IVTFLG=K4
      RETURN
  510 IVTFLG=K1
      RETURN
  990 CALL APT336(JSUBER,'APT311  ')
C...    POSITION EXFILE TO THE RECORD FOLLOWING VTLAXS/ON
      IVTFLG=K1
      CLWRT=ICLWRT
      CLPRT=ICLPRT
      RETURN
      END
**** SOURCE FILE : M0000428.V05   ***
*
C
C.....FORTRAN SUBROUTINE                   APT312
C PURPOSE      TO BLOCK AND WRITE CLFILE AND TO AUGMENT EACH
C              RECORD WRITTEN BY A UNIQUE SEQUENCE NUMBER.
C LINKAGE      CALL APT312
C ARGUMENTS    NONE
C SUBSIDIARIES NONE
      SUBROUTINE APT312
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C       THIS ROUTINE BLOCKS AND WRITES CLFILE FROM RECORD
C
      COMMON /EDITOR/EDITOR
      DIMENSION  EDITOR(1500),RECORD(256),IRECRD(256),JRECRD(512)
      DOUBLE PRECISION IRECRD
      EQUIVALENCE  (EDITOR(1),IRECRD(1),RECORD(1),JRECRD(1))
      EQUIVALENCE  (EDITOR(388),NRECN1), (JRECRD(6),NUMWDS)
      EQUIVALENCE (EDITOR(477),SAVSEQ)
      CHARACTER*8 AERR,TEST
      CHARACTER*4 KFINI,ATEST
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE (SYMFIL)    
      INTEGER EBUFF(516)
      DATA K/2/,N/0/,KFINI/'FINI'/,EBUFF(1)/1/
      DATA AERR /'AERR    '/
C
      CALL HOLFRM(RECORD(1),TEST,1,8,NWD)
      IF (TEST .NE. AERR) GO TO 10
      IREC=JRECRD(4)
      GO TO 20
C
   10 IREC=(JRECRD(4))/10000
      IREC=JRECRD(4)-IREC*10000
      IREC=IREC+NRECN1*10000
      JRECRD(4)=IREC
      SAVSEQ=IRECRD(2)
   20 NRECN1=NRECN1+1
C.... IF APT4 TYPE POST PROCESSOR USE FORTRAN READ STATEMENT,
C     USE NEXT FORTRAN WRITE
C     WRITE(CLFILE) RECORD(1),IPOW,IREC,IPOW,NUMWDS,
C    1  (RECORD(I+3),I=1,NUMWDS)
C..... IF APT4 TYPE POST PROCESSOR USE APT4 I/O,
C      USE NEXT APT4 I/O WRITE
      J=(NUMWDS+3)*2
C
      IF(K+J.GT.514) GO TO 101
  110 N = N + 1
      EBUFF(K+1) = N
      EBUFF(K+2) = J
      K = K + 2
      DO 120 I = 1,J
      K = K + 1
  120 EBUFF(K) = JRECRD(I)
      CALL HOLFRM(JRECRD(1),ATEST,1,4,NWD)
      IF(ATEST.EQ.KFINI) GO TO 130
      RETURN
  101 EBUFF(2) = N
      NR = 0
      CALL AWRITE(CLFILE,NR,EBUFF,K,IR)
      K = 2
      EBUFF(1) = N + 1
      GO TO 110
  130 EBUFF(2) = N
      NR = 0
      CALL AWRITE(CLFILE,NR,EBUFF,K,IR)
      RETURN
      END
**** SOURCE FILE : M0000429.V03   ***
*
C
C.....FORTRAN SUBROUTINE              APT313                12/67
C PURPOSE      TO TERMINATE WRITING OF CLFILE AT THE END OF
C              THE DATA ON CLFILE.
C LINKAGE      CALL APT313
C ARGUMENTS    NONE
C SUBSIDIARIES NONE
      SUBROUTINE APT313
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE (SYMFIL)    
C
C       THIS ROUTINE TERMINATES WRITING OF CLFILE
C
      CALL TAPOP (CLFILE,-2)
C     ENDFILE
C     REWIND CLFILE
      RETURN
      END
**** SOURCE FILE : M0002942.V03   ***
*
C
C.....FORTRAN SUBROUTINE                   APT314
C PURPOSE      TO READ EXFILE OR AN OLD CLFILE AND PLACE THE
C              RECORD IN THE ARRAY RECORD.
C LINKAGE      CALL APT314
C ARGUMENTS    NONE
C SUBSIDIARIES NONE
      SUBROUTINE APT314 (NTAPE,NREC)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C       THIS SUBROUTINE READS AND UNBLOCKS CLFILE INTO RECORD
C
      COMMON /EDITOR/EDITOR
      DIMENSION  EDITOR(1500),RECORD(256),IRECRD(256),JRECRD(512)
      DOUBLE PRECISION IRECRD
      EQUIVALENCE  (EDITOR(1),IRECRD(1),RECORD(1),JRECRD(1))
C
      INTEGER EBUFF(516)
      IF(NREC.EQ.0)NREC=1
      IF(NREC.NE.-1) GO TO 100
      N=0
      NB=0
      M=0
      K=3
      RETURN
C
  100 IF(NREC.GT.M) GO TO 10
      IF(NREC.LT.N) GO TO 20
      IF(NREC.EQ.EBUFF(K)) GO TO 30
      K=3
    3 IF(NREC.EQ.EBUFF(K)) GO TO 30
      K=K+EBUFF(K+1)+2
      IF(K.GT.516) CALL HELP
      GO TO 3
   30 K=K+1
      L=EBUFF(K)
      DO 31 I=1,L
   31 JRECRD(I)=EBUFF(K+I)
      K=K+L+1
      RETURN
   10 NB=NB+1
   15 K=516
      CALL AREAD(NTAPE,NB,EBUFF,K,IR)
      K=3
      N=EBUFF(1)
      M=EBUFF(2)
      GO TO 100
   20 NB=NB-1
      GO TO 15
      END
**** SOURCE FILE : M0000431.V02   ***
*
C
C.....FORTRAN SUBROUTINE              APT315                12/67
C PURPOSE      TO NORMALIZE A GIVEN VECTOR.
C LINKAGE      CALL APT315 (B,C)
C ARGUMENTS    B    ARRAY TO CONTAIN THE NORMALIZED VECTOR
C              C    ARRAY CONTAINING THE VECTOR TO BE NORMALIZED
C SUBSIDIARIES NONE
      SUBROUTINE APT315 (B,C)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C      NORM NORMALIZES A VECTOR V---NORM= VX/V + VY/V + VZ/V
      DIMENSION A(3),B(3),C(3)
           DO 10 I = 1,3
 10           A(I) = C(I)
      S = DSQRT(A(1)*A(1)+A(2)*A(2)+A(3)*A(3))
      IF (S .LT. 0.000001D0)  S=1.0
C
       DO 2  I=1,3
       B(I)= A(I)/S
      IF ((DABS(B(I)))-0.000001D0) 1,1,2
 1     B(I)=0.0
 2     CONTINUE
       RETURN
       END
**** SOURCE FILE : M0000607.V02   ***
*
C
C
C.....  FORTRAN SUBROUTINE  APT330
C  PURPOSE     TO PRINT DYNDMP INFORMATION
C  LINKAGE     CALL APT330 (J,N(1),N(2),N(3),N(4))
C
C  ARGUMENTS   J     INDEX TO POINT SUBROUTINE NAME AND DYNDMP NUMBER.
C                    IF J IS -1, IT INDICATES CONTINUATION CALL.
C              N(K)  INDEX TO POINT PARAMETER NAME AND ITS VALUE.
C
      SUBROUTINE APT330 (J,N1,N2,N3,N4)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
      COMMON /EDITOR/ EDITOR
      DIMENSION EDITOR(1500),ED(1500),IED(3000),AREA3(250)
      EQUIVALENCE (EDITOR(1500),AREA3(250))
      EQUIVALENCE (EDITOR(1),ED(1),IED(1))
      DIMENSION NN(4)
      CHARACTER*4 NMB(50)
      CHARACTER*8 NAME(131),SUBNAM(50),HDYND
C
      INCLUDE (DARRAY)    
C
      DATA HDYND/'DYNDMP  '/
      DATA NAME(  2)/'NUMBER= '/
      DATA NAME(  4)/'DP=     '/
      DATA NAME(  5)/'DPI=    '/
      DATA NAME(  6)/'FLIPCK= '/
      DATA NAME(  7)/'IAMDCT= '/
      DATA NAME(  8)/'IAUTPS= '/
      DATA NAME(  9)/'INOPS=  '/
      DATA NAME( 10)/'IS=     '/
      DATA NAME( 11)/'IT=     '/
      DATA NAME( 12)/'IWS=    '/
      DATA NAME( 13)/'JCKR=   '/
      DATA NAME( 14)/'JCR=    '/
      DATA NAME( 15)/'JDR=    '/
      DATA NAME( 16)/'JPR=    '/
      DATA NAME( 17)/'JPXR=   '/
      DATA NAME( 18)/'NUMPT1= '/
      DATA NAME( 19)/'NUMSUR= '/
      DATA NAME( 20)/'VL=     '/
      DATA NAME( 21)/'TA(1)=  '/
      DATA NAME( 22)/'TA(2)=  '/
      DATA NAME( 23)/'TA(3)=  '/
      DATA NAME( 24)/'TAK(1)= '/
      DATA NAME( 25)/'TAK(2)= '/
      DATA NAME( 26)/'TAK(3)= '/
      DATA NAME( 27)/'TAL(1)= '/
      DATA NAME( 28)/'TAL(2)= '/
      DATA NAME( 29)/'TAL(3)= '/
      DATA NAME( 30)/'TE(1)=  '/
      DATA NAME( 31)/'TE(2)=  '/
      DATA NAME( 32)/'TE(3)=  '/
      DATA NAME( 33)/'TEK(1)= '/
      DATA NAME( 34)/'TEK(2)= '/
      DATA NAME( 35)/'TEK(3)= '/
      DATA NAME( 36)/'TEL(1)= '/
      DATA NAME( 37)/'TEL(2)= '/
      DATA NAME( 38)/'TEL(3)= '/
      DATA NAME( 39)/'TI(1)=  '/
      DATA NAME( 40)/'TI(2)=  '/
      DATA NAME( 41)/'TI(3)=  '/
      DATA NAME( 42)/'TIK(1)= '/
      DATA NAME( 43)/'TIK(2)= '/
      DATA NAME( 44)/'TIK(3)= '/
      DATA NAME( 45)/'CPLFL=  '/
      DATA NAME( 46)/'CPTST=  '/
      DATA NAME( 47)/'CSD=    '/
      DATA NAME( 48)/'IFAR=   '/
      DATA NAME( 49)/'INDIR=  '/
      DATA NAME( 50)/'IOPSET= '/
      DATA NAME( 51)/'ISFTYP= '/
      DATA NAME( 52)/'ISIGCR= '/
      DATA NAME( 53)/'ISVFL=  '/
      DATA NAME( 54)/'J23=    '/
      DATA NAME( 55)/'JENT=   '/
      DATA NAME( 56)/'JTN=    '/
      DATA NAME( 57)/'JU1=    '/
      DATA NAME( 58)/'PLND=   '/
      DATA NAME( 59)/'PLND1=  '/
      DATA NAME( 60)/'PLTST=  '/
      DATA NAME( 61)/'RC=     '/
      DATA NAME( 62)/'S=      '/
      DATA NAME( 63)/'STCK=   '/
      DATA NAME( 64)/'STCK1=  '/
      DATA NAME( 65)/'STCK2=  '/
      DATA NAME( 66)/'STCKN=  '/
      DATA NAME( 67)/'TAU1=   '/
      DATA NAME( 68)/'TAU2=   '/
      DATA NAME( 69)/'TH=     '/
      DATA NAME( 70)/'Z=      '/
      DATA NAME( 71)/'CC(1)=  '/
      DATA NAME( 72)/'CC(2)=  '/
      DATA NAME( 73)/'CC(3)=  '/
      DATA NAME( 74)/'PLNV(1)='/
      DATA NAME( 75)/'PLNV(2)='/
      DATA NAME( 76)/'PLNV(3)='/
      DATA NAME( 77)/'SN(1)=  '/
      DATA NAME( 78)/'SN(2)=  '/
      DATA NAME( 79)/'SN(3)=  '/
      DATA NAME( 80)/'SP(1)=  '/
      DATA NAME( 81)/'SP(2)=  '/
      DATA NAME( 82)/'SP(3)=  '/
      DATA NAME( 83)/'SPL(1)= '/
      DATA NAME( 84)/'SPL(2)= '/
      DATA NAME( 85)/'SPL(3)= '/
      DATA NAME( 86)/'TEE(1)= '/
      DATA NAME( 87)/'TEE(2)= '/
      DATA NAME( 88)/'TEE(3)= '/
      DATA NAME( 89)/'TN(1)=  '/
      DATA NAME( 90)/'TN(2)=  '/
      DATA NAME( 91)/'TN(3)=  '/
      DATA NAME( 92)/'TP(1)=  '/
      DATA NAME( 93)/'TP(2)=  '/
      DATA NAME( 94)/'TP(3)=  '/
      DATA NAME( 95)/'VNDIR(1)'/
      DATA NAME( 96)/'VNDIR(2)'/
      DATA NAME( 97)/'VNDIR(3)'/
      DATA NAME( 98)/'VT(1)=  '/
      DATA NAME( 99)/'VT(2)=  '/
      DATA NAME(100)/'VT(3)=  '/
      DATA NAME(101)/'ISGCRT= '/
      DATA NAME(102)/'RCT=    '/
      DATA NAME(103)/'ST=     '/
      DATA NAME(104)/'ZT=     '/
      DATA NAME(105)/'CCT(1)= '/
      DATA NAME(106)/'CCT(2)= '/
      DATA NAME(107)/'CCT(3)= '/
      DATA NAME(108)/'SNT(1)= '/
      DATA NAME(109)/'SNT(2)= '/
      DATA NAME(110)/'SNT(3)= '/
      DATA NAME(111)/'SPT(1)= '/
      DATA NAME(112)/'SPT(2)= '/
      DATA NAME(113)/'SPT(3)= '/
      DATA NAME(114)/'SPLT(1)='/
      DATA NAME(115)/'SPLT(2)='/
      DATA NAME(116)/'SPLT(3)='/
      DATA NAME(117)/'SPKIPS 1'/
      DATA NAME(118)/'SPKIPS 2'/
      DATA NAME(119)/'SPKIPS 3'/
      DATA NAME(120)/'TPKIPS 1'/
      DATA NAME(121)/'TPKIPS 2'/
      DATA NAME(122)/'TPKIPS 3'/
      DATA NAME(123)/'SPKIDS 1'/
      DATA NAME(124)/'SPKIDS 2'/
      DATA NAME(125)/'SPKIDS 3'/
      DATA NAME(126)/'TPKIDS 1'/
      DATA NAME(127)/'TPKIDS 2'/
      DATA NAME(128)/'TPKIDS 3'/
      DATA NAME(129)/'CMOVE(1)'/
      DATA NAME(130)/'CMOVE(2)'/
      DATA NAME(131)/'CMOVE(3)'/
      DATA  SUBNAM(1 )/'AJUNDD( '/ , NMB(1 ) /'101)'/
      DATA  SUBNAM(2 )/'AJUNDD( '/ , NMB(2 ) /'102)'/
      DATA  SUBNAM(3 )/'AMIND ( '/ , NMB(3 ) /'103)'/
      DATA  SUBNAM(4 )/'AMIND ( '/ , NMB(4 ) /'104)'/
      DATA  SUBNAM(5 )/'AMIND ( '/ , NMB(5 ) /'105)'/
      DATA  SUBNAM(6 )/'AMIND ( '/ , NMB(6 ) /'106)'/
      DATA  SUBNAM(7 )/'AMIND ( '/ , NMB(7 ) /'107)'/
      DATA  SUBNAM(11)/'ARLM3 ( '/ , NMB(11) /'201)'/
      DATA  SUBNAM(12)/'ARLM3 ( '/ , NMB(12) /'202)'/
      DATA  SUBNAM(13)/'ARLM3 ( '/ , NMB(13) /'203)'/
      DATA  SUBNAM(14)/'ARLM3 ( '/ , NMB(14) /'204)'/
      DATA  SUBNAM(15)/'ARLM3 ( '/ , NMB(15) /'205)'/
      DATA  SUBNAM(16)/'ARLM3 ( '/ , NMB(16) /'206)'/
      DATA  SUBNAM(17)/'ARLM3 ( '/ , NMB(17) /'207)'/
      DATA  SUBNAM(18)/'ARLM3 ( '/ , NMB(18) /'208)'/
      DATA  SUBNAM(19)/'ARLM3 ( '/ , NMB(19) /'209)'/
      DATA  SUBNAM(20)/'ARLM3 ( '/ , NMB(20) /'210)'/
      DATA  SUBNAM(21)/'ARLM3 ( '/ , NMB(21) /'211)'/
      DATA  SUBNAM(22)/'ARLM3 ( '/ , NMB(22) /'212)'/
      DATA  SUBNAM(23)/'ARLM3 ( '/ , NMB(23) /'213)'/
      DATA  SUBNAM(24)/'ARLM3 ( '/ , NMB(24) /'214)'/
      DATA  SUBNAM(25)/'ARLM3 ( '/ , NMB(25) /'215)'/
      DATA  SUBNAM(26)/'ARLM3 ( '/ , NMB(26) /'216)'/
      DATA  SUBNAM(27)/'ARLM3 ( '/ , NMB(27) /'217)'/
      DATA  SUBNAM(31)/'CENTR ( '/ , NMB(31) /'401)'/
      DATA  SUBNAM(32)/'CENTR ( '/ , NMB(32) /'402)'/
      DATA  SUBNAM(33)/'CENTR ( '/ , NMB(33) /'403)'/
      DATA  SUBNAM(34)/'CPLAN ( '/ , NMB(34) /'404)'/
      DATA  SUBNAM(41)/'GO    ( '/ , NMB(41) /'501)'/
      DATA  SUBNAM(42)/'GO    ( '/ , NMB(42) /'502)'/
      DATA  SUBNAM(43)/'GO    ( '/ , NMB(43) /'503)'/
      DATA  SUBNAM(44)/'GO    ( '/ , NMB(44) /'504)'/
      DATA  SUBNAM(45)/'GO    ( '/ , NMB(45) /'505)'/
      DATA  SUBNAM(50)/'BRKPNT( '/ , NMB(50) /'999)'/
      IF(J.EQ.-1) GO TO 10
      CALL CFORM(HDYND,DARRAY,1,7)
      CALL CFORM(SUBNAM(J),DARRAY,8,7)
      CALL CFORM(NMB(J),DARRAY,15,4)
      M=4
   10 L=21
      NN(1)=N1
      NN(2)=N2
      NN(3)=N3
      NN(4)=N4
      DO 100 I=1,4
      L=L+2
      K=NN(I)
      IF(K.EQ.0) GO TO 200
      II = IABS(K)
      CALL CFORM(NAME(II),DARRAY,L,8)
      L=L+8
      IF(K.LT.0) GO TO 50
      CALL FCONV(ED(M),DARRAY,L,13,6)
      L=L+13
      GO TO 100
   50 L=L+2
      KK=2*M-1
      CALL ICONV(IED(KK),DARRAY,L,8)
      L=L+11
  100 M=M+1
  200 CALL CPRINT (DARRAY)
      RETURN
      END
**** SOURCE FILE : M0001850.V13   ***
*
C
C.....FORTRAN SUBROUTINE                   APT331
C
      SUBROUTINE APT331
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C PURPOSE      TO WRITE ONTO THE VERIFICATION LISTING TAPE--
C      1) THE DIAGNOSTIC NUMBER AND THE NAME OF THE PROGRAM
C         WHICH ISSUED THE DIAGNOSTIC
C      2) THE DIAGNOSTIC MESSAGE
C      IF THE DIAGNOSTIC IS A RESTART ERROR IT ALSO WRITES -
C      3) USEFUL INFORMATION ABOUT THE CUTTER AND THE PART,DRIVE,
C         AND CHECK SURFACES AS WELL AS MANY INTERMEDIATE CUTTER
C         LOCATION PARAMETERS
C
C LINKAGE      CALL APT331
C ARGUMENTS    NONE
C SUBSIDIARIES NONE
C
C
      INTEGER BCDF,ITEMP(2)
      EQUIVALENCE (ITEMP(1),DTEMP)
C
      COMMON/EDITOR/EDITOR
      DIMENSION EDITOR(1500),IEDTOR(2,1500)
      EQUIVALENCE (EDITOR(1),IRECRD(1))
      DIMENSION IRECRD(2)
      EQUIVALENCE  (EDITOR(1),IEDTOR(1,1))
      DIMENSION AREA3(250)
      EQUIVALENCE (EDITOR(1500),AREA3(250))
      INCLUDE (DARRAY)    
C
C... *** EQUIVALENCE OF NECESSARY ARELEM VARIABLES***
C
C...     EQUIVALENCE FOR SV BLOCK VARIABLES
C
      EQUIVALENCE           (EDITOR(10),TAU1), (EDITOR(11),TAU2),
     1   (EDITOR(12),TH),   (EDITOR(13),S),    (EDITOR(14),RC),
     2   (EDITOR(15),SP(1)),(EDITOR(18),SN(1)),(EDITOR(21),TN(1)),
     3   (EDITOR(24),CC(1)),(EDITOR(27),VT(1))
      DIMENSION  SP(3), SN(3), TN(3), CC(3), VT(3)
C
C...     EQUIVALENCE FOR ISV BLOCK VARIABLES
C
      EQUIVALENCE   (IEDTOR(2,6),ITLON),  (IEDTOR(2,7),ISFTYP),
     +              (IEDTOR(2,8),IFL4),   (IEDTOR(2,9),IFAR)
C
C...     EQUIVALENCE FOR NECESSARY FXCOR AND IFXCOR VARIABLES
C
      EQUIVALENCE          (EDITOR(6),CUTDAT(1)),  (EDITOR(11),TI(1)),
     +   (EDITOR(14),TE(1)), (EDITOR(18),FWD(1)),  (EDITOR(21),TA(1))
      EQUIVALENCE (EDITOR(8),DPMAX), (EDITOR(10),ELMAX)
      DIMENSION  CUTDAT(7), TI(3), TE(3), TA(3), FWD(3)
C
      EQUIVALENCE              (IEDTOR(2,17),IS), (IEDTOR(2,9),NMPNTS),
     1   (IEDTOR(2,7),ISTRUP), (IEDTOR(2,6),IGO), (IEDTOR(2,4),ICSCNT)
C
C......EQUIVALENCE FOR PREVIOUS SEQ. NO.
      EQUIVALENCE  (EDITOR(477),SAVSEQ)
C
C....***** EQUIVALENCE OF PRINTOUT AND IDENTIFICATION VARIABLES ***
C
C...     EQUIVALENCE FOR QUADRIC SURFACE IDENTIFICATION
C
      EQUIVALENCE  (EDITOR(6),COEFF(1)),  (EDITOR(16),TRANS(1,1))
      EQUIVALENCE (IEDTOR(2,5),IQSDFG)
      DIMENSION   CANFRM(10), COEFF(10), XCOEFF(5), TRANS(3,4)
      EQUIVALENCE (COEFF(6),XCOEFF(1))
C
      CHARACTER*32    QUAD(16),QSDNAM
C
C....    LABEL PRINTOUT
C
      CHARACTER*28   JCODE(5), KCODE(16)
C
C
C....    EQUIVALENCE FOR SURFACE NAME AND TYPE VARIABLES
C        AND CANONICAL FORM ARRAY
C
      EQUIVALENCE  (EDITOR(30),SRFNME),  (EDITOR(34),CANFRM(1)),
     +  (IEDTOR(2,31),ISUB), (IEDTOR(2,32),MODE), (IEDTOR(2,33),ISIZE)
C
C....    EQUIVALENCE FOR IMPORTANT PRINTOUT VARIABLES
C
C
      EQUIVALENCE  (IEDTOR(2,2),ISBTYP), (IEDTOR(2,4),NUMERR(2))
      EQUIVALENCE  (APRNT2(17),R(1)), (APRNT2(21),H(1))
C
      DIMENSION  NUMERR(2),APRNT1(20),APRNT2(76),R(4),H(4)
      DIMENSION   JTLON(2), JSFTYP(2), JFL4(2), JFAR(2)
      CHARACTER*6 GOTYP(7),TYP(6)
      CHARACTER*4 SRFTYP(4)
      CHARACTER*8 BLANK ,BADTYP
      CHARACTER*12 LSTRT,MSTRT,BLNK
C
      INCLUDE (KNUMBR)    
C
C
C..      SURFACE NAME ARRAY
C
      CHARACTER*6 ANAME(30)
C
C        SUBROUTINE NAME INDEX ARRAY
C
      DIMENSION  INDEX(100),INDEXA(50),INDEXB(50)
      EQUIVALENCE   (INDEX(1),INDEXA(1)), (INDEX(51),INDEXB(1))
C
C...  SUBROUTINE NAMES
C
      CHARACTER*6   NAME(100)
C
C        DATA FOR QUADRIC SURFACE TYPES
C
      DATA  QUAD(1)   /' NO RECOGNIZABLE SURFACE        '/
      DATA  QUAD(2)   /' A PLANE                        '/
      DATA  QUAD(3)   /' TWO PARALLEL (COINCIDENT)PLANES'/
      DATA  QUAD(4)   /' A PARABOLIC CYLINDER           '/
      DATA  QUAD(5)   /' TWO INTERSECTING PLANES        '/
      DATA  QUAD(6)   /' A HYPERBOLIC CYLINDER          '/
      DATA  QUAD(7)   /' AN ELLIPTIC CYLINDER           '/
      DATA  QUAD(8)   /' A HYPERBOLIC PARABOLOID        '/
C
      DATA  QUAD(9)   /' AN IMAGINARY ELLIPTIC CYLINDER '/
      DATA  QUAD(10)  /' AN ELLIPTIC PARABOLOID         '/
      DATA  QUAD(11)  /' A HYPERBOLOID OF ONE SHEET     '/
      DATA  QUAD(12)  /' A CONE                         '/
      DATA  QUAD(13)  /' A HYPERBOLOID OF TWO SHEETS    '/
      DATA  QUAD(14)  /' AN ELLIPSOID                   '/
      DATA  QUAD(15)  /' A POINT ELLIPSOID              '/
      DATA  QUAD(16)  /' AN IMAGINARY ELLIPSOID         '/
C
C....    DATA FOR LABEL PRINTOUT
C
      DATA  JCODE(1)   /'    TOOL TO SURFACE RELATION'/
      DATA  JCODE(2)   /'    INTERSECTION NUMBER     '/
      DATA  JCODE(3)   /'    TOLERANCES   OUTTOL     '/
      DATA  JCODE(4)   /'                  INTOL     '/
      DATA  JCODE(5)   /'    THICK SETTINGS          '/
C
      DATA  KCODE(1)   /'    EFF. DIST. TO SURFACE   '/
      DATA  KCODE(2)   /'    EFF. SURFACE POINT     X'/
      DATA  KCODE(3)   /'                           Y'/
      DATA  KCODE(4)   /'                           Z'/
      DATA  KCODE(5)   /'    TOOL POINT             R'/
      DATA  KCODE(6)   /'                           H'/
      DATA  KCODE(7)   /'    SURFACE NORMAL         X'/
      DATA  KCODE(8)   /'                           Y'/
      DATA  KCODE(9)   /'                           Z'/
      DATA  KCODE(10)  /'    TOOL NORMAL            X'/
      DATA  KCODE(11)  /'                           Y'/
      DATA  KCODE(12)  /'                           Z'/
      DATA  KCODE(13)  /'    RADIUS OF CURVATURE     '/
      DATA  KCODE(14)  /'    CENTER OF CURVATURE    X'/
      DATA  KCODE(15)  /'                           Y'/
      DATA  KCODE(16)  /'                           Z'/
C
C     MOTION AND CONTROL SURFACE TYPES
C
      DATA GOTYP/'GOLFT ','GORGT ','GOFWD ','GOBACK','GOUP  ','GODOWN',
     1           '      '/
      DATA   TYP/'TO    ','PAST  ','ON    ','TANTO ','PSTAN ','OFFSET'/
      DATA  SRFTYP/'PS  ','DS  ','CS1 ','CS2 '/,BLANK /'        '/
      DATA LSTRT/'START OF CUT'/,BLNK/'            '/,BADTYP/' UNKNOWN'/
C
C     SURFACE NAME ARRAY DATA
C
      DATA ANAME/ 'LINE  ','PLANE ','CYLNDR','CIRCLE','SPHERE','HYPERB',
     1   'LCONIC','ELLIPS','CONE  ','GCONIC','TABCYL','RLDSRF','POLCON',
     2   'QADRIC','PARSRF','      ','      ','MATRIX','POINT ','VECTOR',
     3   '      ','      ','      ','UNKNOW','      ','PATERN','      ',
     4   '      ','SSURF ','SCURV '/
C
C     SUBROUTINE NAME INDEX ARRAY
C
      DATA  INDEXA /      0,  20001,  20101,  20102,  20103,
     1                20104,  20105,  20106,  20107,  20108,
     2                20201,  20202,  20203,  20204,  20205,
     3                20206,  20207,  20208,  20901,  20902,
     4               -20903,  21001,  21002, -21003,  21101,
     5               -21102,  21301,  22001,  22201,  22202,
     6                22203,  22204,  22205,  22206,  22207,
     7                22208,  22209,  22210, -22211,  22212,
     8                22213,  22214,  22215, -22216,  22217,
     9               -22300,  22301, -22701,  23401,  23501/
      DATA  INDEXB /  23901,  23902,  23903,  23904,  23905,
     1               -22401,  24001,  24002,  24003,  24004,
     2               -24201, -24202,  24203, -24401,  24402,
     3                24403,  24404, -25001,  25002,  25003,
     4                25004,  25005,  25006,  25007,  25008,
     5                    0,  26002,      0,  26001,  26401,
     6                26601, -26801,  26802,  26803, -28801,
     7                20109,  23908,  24005,  24006,  26602,
     8               -27001,  27002,  27003,  27104,  27105,
     9                25009,  20110,  27206,      0,      0/
C
C     SUBROUTINE NAMES
C
      DATA  NAME            /'APT200','APT201','  GO  ',' PSIS ',
     1     ' TLLFT',' TLRGT',' TLON ','TLONPS','TLOFPS','INDIRP',
     2     'INDIRV','SRFVCT',' FROM ','GODLTA',' GOTO ',' CUT  ',
     3     'DNTCUT','NDTEST','COMP3D','OUTTOL','INTOL ','TOLER ',
     4     'CUTTER','TLAXIS','MULTAX','MAXDP ','NUMPTS','THICK ',
     5     ' NOPS ','AUTOPS','GOUGCK','NKNOWN','APT232','APT233',
     6     'APT234','APT235','APT236','APT237','APT238','ARLM2 ',
     7     'ARLM3 ','NKNOWN','CHECK ','NKNOWN','PLANE ','NKNOWN',
     8     'DELTA ','NKNOWN','GOUGE ','NKNOWN','CENTR ','NKNOWN',
     9  'CPLAN ', 'NKNOWN', 'DDSSRF', 'NKNOWN', 'TINKER', 'NKNOWN',
     1     'NKNOWN','NKNOWN','AMIND ','NKNOWN','NKNOWN','NKNOWN',
     2     'U1COMP','NKNOWN','TLNORM','NKNOWN','RADAR ','NKNOWN',
     3     'LCLS  ','DDPARA','FCN   ','NKNOWN','NKNOWN','NKNOWN',
     4     'NKNOWN','NKNOWN','NKNOWN','NKNOWN','NKNOWN','NKNOWN',
     5     ' DDST ','DDPLAN','DDCYLN','DDSPHR','DDQUAD','DDCONE',
     6     'DDTABC','NKNOWN','NKNOWN','NKNOWN',' QUAD ','VNORM ',
     7     'CROSS ','ATAPE ','ASTOS ',' AERR ','DYNDMP','NKNOWN'/
C
C                       ***************                  ***************
C                       ***** WARNING. VLFILE  IS  EQUIVALENCE TO CLLST*
C                       ***************                  ***************
C
C     ------------------------------------------------------------
C
C
C.....   ISBTYP INDICATES TYPE OF ERROR RECORD AS FOLLOWS
C
C     ISBTYP=1 --  DIAGNOSTIC MESSAGE
C     ISBTYP=2 --  FXCOM VARIABLES
C     ISBTYP=3 --  SURFACE VARIABLES(PS)
C     ISBTYP=4 --  SURFACE VARIABLES(DS)
C     ISBTYP=5 --  SURFACE VARIABLES(CS1)
C     ISBTYP=6 --  SURFACE VARIABLES(CS2)
C     ISBTYP=7 --  QUADRIC SURFACE IDENTIFICATION
C     ISBTYP=8 --  POCKET
C
      GO TO  (10,180,30,40,40,40,110,800), ISBTYP
C
C...***** SUB-TYPE 1 - PRINT DIAGNOSTIC MESSAGE AND CUTTER PARAMETERS*
C
   10 NUMABS=IABS(NUMERR(2))
      J2=(NUMABS-20000)/100 + 1
      IF (J2 .LE. 0 .OR. J2 .GT. 100) GO TO 500
C
C...    FIND CORRECT DIAGN MESSAGE NUMBER FOR THIS ERROR
      N=1
      DO 12  M=1,100
      MOUT=M
      IF (NUMABS .EQ. IABS(INDEX(M)) )  GO TO 13
   12 CONTINUE
      N=0
   13 CALL CFORM('0',DARRAY,1,1)
      I=SAVSEQ+0.1
      CALL ICONV(I,DARRAY,2,8)
      IF( NUMERR(2)) 14,18,18
C
C..      WARNING DIAGNOSTIC
   14 CALL CFORM('.    WARNING NUMBER (',DARRAY,10,21)
      CALL ICONV(NUMERR(2),DARRAY,31,6)
      CALL CFORM(') FROM SUBROUTINE',DARRAY,38,17)
      CALL CFORM(NAME(J2),DARRAY,56,6)
      CALL CPRINT(DARRAY)
   15 IF(N .NE. K0) GO TO 16
      M=K1
      MOUT=K1
   16 CALL CLEROR(NUMABS)
C
      IF(NUMERR(2))9000,19,19
C
C...     RESTART DIAGNOSTIC
   18 CALL CFORM('.    ENTERING RESTART MODE. ERROR NUMBER (
     C      ',DARRAY,10,42)
      CALL ICONV(NUMERR(2),DARRAY,52,6)
      CALL CFORM(') FROM SUBROUTINE',DARRAY,59,17)
      CALL CFORM(NAME(J2),DARRAY,77,6)
      CALL CPRINT(DARRAY)
      GO TO 15
C
C        CHECK FOR CUTTER DEFINITION ERROR
   19 IF(J2.EQ.23) GO TO 20
      IF (MOUT .NE. 9 .AND. MOUT .NE. 11) GO TO 25
C
   20 CALL CFORM('0RESTART USING A POINT CUTTER (PARAMETERS ALL ZERO).
     C ',DARRAY,1,52)
      CALL CPRINT(DARRAY)
C
      IF (J2 .NE. 23) GO TO 9000
      CALL CFORM('0ORIGINAL (ERRONEOUS) PARAMETERS WERE--',
     C           DARRAY,1,39)
      CALL CPRINT(DARRAY)
      L=6
      DO 921 I=1,7
      CALL FCONV(CUTDAT(I),DARRAY,L,13,6)
  921 L=L+13
      CALL CPRINT (DARRAY)
      GO TO 9000
C
C...     PRINTOUT CUTTER PARAMETERS
   25 CALL CFORM('0CUTTER PARAMETERS --',DARRAY,1,21)
      CALL CPRINT (DARRAY)
      L=6
      DO 925 I2=1,7
      CALL FCONV(CUTDAT(I2),DARRAY,L,13,6)
  925 L=L+13
      CALL CPRINT(DARRAY)
      GO TO 9000
C
C...***** SUB-TYPE 3 - PART SURFACE VARIABLES *****
C
   30 CALL CFORM('0   SURFACE DATA..........',DARRAY ,1,26)
      CALL CPRINT(DARRAY)
C
C...***** SUB-TYPES 3, 4, 5, 6 - ALL SURFACE CANONICAL FORMS *****
C
C        IT INDEXES THE SURFACE
   40 IT=ISBTYP-2
C
C     CHECK FOR INVALID SURFACE MODE
      IF(MODE.LE.0.OR.MODE.GT.30) MODE=24
C
C        PRINT OUT CANONICAL FORM
      CALL CFORM(SRFTYP(IT),DARRAY,5,4)
      CALL CFORM('...',DARRAY,9,3)
      CALL HOLFRM(SRFNME ,DARRAY,13,6,NWD)
      CALL CFORM('(     ) =',DARRAY,19,9)
      CALL ICONV(ISUB,DARRAY,20,5)
      CALL CFORM(ANAME(MODE),DARRAY,29,6)
      CALL CFORM('/',DARRAY,35,1)
      IF(MODE.EQ.15) GO TO 4720
      K=ISIZE
      IF(ISIZE.GT.7) K=7
      L=37
      DO 4718 I=1,K
      CALL FCONV(CANFRM(I),DARRAY,L,11,4)
 4718 L=L+11
      IF(ISIZE.LE.7) GO TO 4720
      CALL CPRINT(DARRAY)
      L=4
      DO 4719 I=8,ISIZE
      CALL FCONV(CANFRM(I),DARRAY,L,11,4)
 4719 L=L+11
 4720 CALL CPRINT(DARRAY)
C
C        SAVE NECESSARY FLAGS FOR THIS SURFACE.
      NSV=IT-2
      IF (NSV) 58,58,59
   58 JTLON(IT)=ITLON
      GO TO 61
   59 JSFTYP(NSV)=ISFTYP
      JFL4(NSV)  =IFL4
      JFAR(NSV)  =IFAR
C
C        SAVE NECESSARY VARIABLE VALUES FOR THIS SURFACE
   61 APRNT1(IT+ 8)=TAU1
      APRNT1(IT+12)=TAU2
      APRNT1(IT+16)=TH
C
C        APRNT2 VALUES ARE FOR NON-ARLM2 DIAGNOSTICS
      APRNT2(IT)=S
      APRNT2(IT+48)=RC
      DO 81 I=1,3
      J=IT+4*(I-1)
      APRNT2(J+4)=SP(I)
      APRNT2(J+24)=SN(I)
      APRNT2(J+36)=TN(I)
      APRNT2(J+52)=CC(I)
   81 APRNT2(J+64)=VT(I)
      GO TO 9000
C
C....*****  SUB-TYPE 7 - QUADRIC SURFACE IDENTIFICATION *****
C
  110 QSDNAM=QUAD(IQSDFG)
C
C        PRINTOUT FOR QUADRIC IDENTIFICATION
C
      CALL CFORM('0',DARRAY,1,1)
      CALL CFORM(' THE SURFACE IS',DARRAY,21,15)
      CALL CFORM(QSDNAM,DARRAY,37,32)
      CALL CPRINT(DARRAY)
C
      CALL CFORM('ROTATION MATRIX',DARRAY,31,15)
      CALL CPRINT(DARRAY)
C
      DO 136 I=1,3
      L=16
      DO 135 J=1,4
      CALL FCONV(TRANS(I,J),DARRAY,L,16,7)
  135 L=L+16
      CALL CPRINT(DARRAY)
  136 CONTINUE
C
      CALL CFORM('THE TRANSFORMED COEFFICIENTS ARE- ',DARRAY,22,33)
      CALL CPRINT(DARRAY)
C
      L=16
      DO 150 I=1,5
      CALL FCONV (COEFF(I),DARRAY,L,16,7)
  150 L=L+16
      CALL CPRINT(DARRAY)
      L=16
      DO 151 I=1,5
      CALL FCONV(XCOEFF(I),DARRAY,L,16,7)
  151 L=L+16
      CALL CPRINT(DARRAY)
C
      GO TO 9000
C
C...***** SUB-TYPE 2 - PRINT FXCOM AND SURFACE VARIABLE DATA *****
C
C        CHECK FOR A STARTUP MOTION
  180 IF (ISTRUP .EQ. 1) GO TO 181
C
C        CHECK FOR A VALID MOTION COMMAND (IGO BETWEEN 1 AND 6)
      IF ((IGO+5)/6 - 1) 181,182,181
C
C        NO COMMANDED DIRECTION-PRINT BLANKS
  181 IGO=7
      GOTYP(7)=BLANK
C
C        CHECK FOR A STARTUP
  182 IF (ISTRUP.EQ.1) THEN
        MSTRT=LSTRT
      ELSE
        MSTRT=BLNK
      END IF
C
C        CHECK FOR VALID FWD MOTION VECTOR
      DO 184 I=1,3
      IF (FWD(I) .LT. 1.0D-32 .OR. FWD(I) .GT. 1.0D+32) FWD(I)=0.0
  184 CONTINUE
C
      FWDNRM=DSQRT(FWD(1)**2 + FWD(2)**2 + FWD(3)**2)
      IF (DABS(FWDNRM-1.0) .LE. 0.01) GO TO 185
      FWD(1)=0.0
      FWD(2)=0.0
      FWD(3)=0.0
C
C        PRINT OUT MOTION INFORMATION
C
  185 CALLCFORM('0MOTION AND TOOL POSITION DATA..........',DARRAY,1,40)
      CALL CPRINT(DARRAY)
      CALL CFORM('COMMANDED MOTION DIRECTION -',DARRAY,5,28)
      CALL CFORM(MSTRT,DARRAY,33,12)
      CALL CFORM(GOTYP(IGO),DARRAY,48,6)
      CALL CFORM('=',DARRAY,57,1)
      L=59
      DO 187 I=1,3
      CALL FCONV(FWD(I),DARRAY,L,16,7)
  187 L=L+19
      CALL CPRINT(DARRAY)
      CALL CFORM('CURRENT MOTION DIRECTION............................
     C=',DARRAY,5,53)
      L=59
      DO 188 I=1,3
      CALL FCONV(TI(I),DARRAY,L,16,7)
  188 L=L+19
      CALL CPRINT(DARRAY)
      CALL CFORM('CURRENT TOOL POSITION(UNACCEPTED)...................
     C=',DARRAY,5,53)
      L=59
      DO 189 I=1,3
      CALL FCONV(TE(I),DARRAY,L,16,7)
  189 L=L+19
      CALL CPRINT(DARRAY)
      CALL CFORM('CURRENT TOOL AXIS VECTOR............................
     C=',DARRAY,5,53)
      L=59
      DO 190 I=1,3
      CALL FCONV(TA(I),DARRAY,L,16,7)
  190 L=L+19
      CALL CPRINT(DARRAY)
C
C        CHECK FOR A DIAGNOSTIC FROM AMIND ASSOCIATED ROUTINES
      IF ((J2-61)*(J2-73)) 191,191,193
C
  191 IS=IS-1
      CALL CFORM('CURRENT SURFACE=',DARRAY,5,16)
      CALL CFORM(SRFTYP(IS),DARRAY,21,4)
      CALL CPRINT(DARRAY)
C
C..      IF AN ARLM2 DIAGNOSTIC SET KVAL TO 2
  193 KVAL=2
      IF (J2 .EQ. 40) GO TO 196
C
C        GIVE ADDITIONAL INFORMATION IF NOT ARLM2 ERROR
      KVAL=3
      CALL CFORM('0   MAXIMUM STEP (MAXDP)= ',DARRAY,1,25)
      CALL FCONV(DPMAX,DARRAY,26,11,4)
      CALL CFORM('MAXIMUM LENGTH(L)= ',DARRAY,45,18)
      CALL FCONV(ELMAX,DARRAY,63,11,4)
      CALL CFORM('NUMPTS=',DARRAY,82,7)
      CALL ICONV(NMPNTS,DARRAY,91,5)
      CALL CPRINT(DARRAY)
C
  196 CALL CFORM('0   GENERAL DATA - THIS CUT -',DARRAY,1,29)
      CALL CFORM('PART SURF.       DRIVE SURF.',DARRAY,39,28)
      CALL CFORM('CHECK SURF. 1      CHECK SURF. 2',DARRAY,72,32)
      CALL CPRINT(DARRAY)
C
C        FIND CORRECT TOOL TO SURFACE TYPE FOR PART AND DRIVE SURFACES
C
      DO 205  I=1,2
      IF (JTLON(I) .NE. 0) GO TO 204
      ITEMP(1)=BCDF(TYP(3)(1:4))
      ITEMP(2)=BCDF(TYP(3)(5:6))
      APRNT1(I)=DTEMP
      GO TO 205
  204 ITEMP(1)=BCDF(TYP(6)(1:4))
      ITEMP(2)=BCDF(TYP(6)(5:6))
      APRNT1(I)=DTEMP
  205 CONTINUE
C
C        FIND CORRECT TOOL TO SURFACE TYPE FOR CHECK SURFACES
C
      IF (NSV .LE. 0) GO TO 230
      DO 222  I=1,NSV
      IGT=JSFTYP(I)
C
C      TEST IF IGT MARKER GIVES VALID TOOL TO SURFACE RELATION
      IF (((IGT+3)/4 .NE. 1) .AND.(IGT .NE. 8)) GO TO 221
      IF (IGT-4) 217,218,219
C
  217 ITEMP(1)=BCDF(TYP(IGT)(1:4))
      ITEMP(2)=BCDF(TYP(IGT)(5:6))
      APRNT1(I+2)=DTEMP
      GO TO 222
  218 IF (JFL4(I) .EQ. 1) GO TO 219
      ITEMP(1)=BCDF(TYP(4)(1:4))
      ITEMP(2)=BCDF(TYP(4)(5:6))
      APRNT1(I+2)=DTEMP
      GO TO 222
  219 ITEMP(1)=BCDF(TYP(5)(1:4))
      ITEMP(2)=BCDF(TYP(5)(5:6))
      APRNT1(I+2)=DTEMP
      GO TO 222
  221 ITEMP(1)=BCDF(BADTYP(1:4))
      ITEMP(2)=BCDF(BADTYP(5:8))
      APRNT1(I+2)=DTEMP
  222 CONTINUE
C
C        PRINT OUT TOOL INFORMATION
C
  230 CALL CFORM(JCODE(1),DARRAY,6,28)
      L=42
      DO 231 I=1,IT
      CALL HOLFRM(APRNT1(I),DARRAY,L,8,NWD)
  231 L=L+18
      CALL CPRINT(DARRAY)
C
      IF (IT .LE. 2) GO TO 233
      CALL CFORM(JCODE(2),DARRAY,6,28)
      L=77
      DO 232 I=1,NSV
      CALL ICONV(JFAR(I),DARRAY,L,2)
  232 L=L+16
      CALL CPRINT(DARRAY)
C
C        MORE PRINTOUT-TOLERANCES
  233 DO 235  I=1,KVAL
      K=I+2
      M=4*(I-1)+9
      N=M+IT-1
      CALL CFORM(JCODE(K),DARRAY,6,28)
      L=36
      DO 234 J=M,N
      CALL FCONV(APRNT1(J),DARRAY,L,15,7)
  234 L=L+18
      CALL CPRINT(DARRAY)
  235 CONTINUE
C
C        IS IT AN ARLM2 DIAGNOSTIC, IF SO RETURN
C
      IF (KVAL .EQ. 2) GO TO 9000
      CALL CFORM('0   CONDITIONS AT FAILURE',DARRAY,1,25)
      CALL CPRINT(DARRAY)
C
C        COMPUTE R AND H.
C
      DO 246 I=1,IT
      DOT=TA(1)*APRNT2(I+64) + TA(2)*APRNT2(I+68) + TA(3)*APRNT2(I+72)
      VTNORM=DSQRT(APRNT2(I+64)**2 + APRNT2(I+68)**2 + APRNT2(I+72)**2)
      IF(VTNORM) 244,243,244
  243 ACOS=0.
      GO TO 245
  244 ACOS=DOT/VTNORM
  245 ASIN=DSQRT(1.0-ACOS**2)
      R(I)=VTNORM*ASIN
  246 H(I)=VTNORM*ACOS
C
C        PRINT OUT SURFACE VARIABLES.
C
      DO 299  I=1,16
      K=I
      M=4*(I-1)+1
      N=M+IT-1
      CALL CFORM(KCODE(K),DARRAY,6,28)
      L=36
      DO 298 J=M,N
      CALL FCONV(APRNT2(J),DARRAY,L,15,7)
  298 L=L+18
      CALL CPRINT(DARRAY)
  299 CONTINUE
      GO TO 9000
C
C...***** INVALID DIAGNOSTIC NUMBER *****
C
 500  CONTINUE
      NIU=NUMERR(2)
      IF((NIU.GE.3511).AND.(NIU.LE.3599)) GO TO 810
      IF((NIU.GE.5001).AND.(NIU.LE.5999)) GO TO 820
      CALL CFORM('0       ****  ARELEM ERROR',DARRAY,1,26)
      CALL ICONV(NUMABS,DARRAY,29,5)
      CALL CPRINT(DARRAY)
      GO TO 8000
C
C...***** POCKET ERRORS(NUMBERS 3501-3510)  *****
C
  800 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)
      CALL ICONV(NUMERR(2),DARRAY,27,5)
      CALL CFORM('FROM SUBROUTINE POCKET ***',DARRAY,33,26)
      CALL CPRINT(DARRAY)
      GO TO 8000
  810 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)
      CALL ICONV(NIU,DARRAY,28,5)
      CALL CFORM('FROM SMIL OR SCON **',DARRAY,35,20)
      CALL CPRINT(DARRAY)
      GO TO 8000
  820 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)
      CALL ICONV(NIU,DARRAY,28,5)
      CALL CFORM('FROM SS - SYSTEM  **',DARRAY,35,20)
      CALL CPRINT(DARRAY)
 8000 CALL CLEROR(IABS(NUMERR(2)))
 9000 RETURN
      END
**** SOURCE FILE : M0000435.V02   ***
*
C
C.....FORTRAN SUBROUTINE              APT332                12/67
C PURPOSE      TO WRITE ONTO THE VERIFICATION LISTING TAPE A
C              GROUP OF COMMON VARIABLES FOR EACH DYNDMP CALL
C              FROM AN ACTIVATED DYNDMP BREAKPOINT.
C LINKAGE      CALL APT332
C ARGUMENTS    NONE
C SUBSIDIARIES NONE
      SUBROUTINE APT332
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C...  THIS PROGRAM WRITES THE DYNDMP INFORMATION BLOCKS ONTO THE
C     VERIFICATION LISTING TAPE
C
      COMMON / EDITOR/EDITOR
C
      DIMENSION EDITOR (1500)
C
      EQUIVALENCE (EDITOR(1500),ED(1500))
C
      DIMENSION ED(1500)
      INTEGER   WORDNO(2)
C
      DIMENSION NUMBER(2)
      EQUIVALENCE(ED(2),NUMBER(1))
      EQUIVALENCE (NUMBER(1), NUMBR1)
      EQUIVALENCE (NUMBER(2), NUMBR2)
C
      GO TO (101,102,103,104,105,106,107,999,999,999,
     1       201,202,203,204,205,206,207,208,209,210,
     2       211,212,213,214,215,216,217,999,999,999,
     3       401,402,403,404,999,999,999,999,999,999,
     4       501,502,503,504,505,999,999,999,999,999),NUMBR2
  101 CALL APT330 (1,62,92,93,94)
      CALL APT330 (-1,89,90,91,0)
      GO TO 9999
  102 CALL APT330 (2,62,80,81,82)
      CALL APT330 (-1,77,78,79,0)
      GO TO 9999
  103 CALL APT330 (3,-10,-55,-56,-50)
      CALL APT330 (-1,-57,30,31,32)
      CALL APT330 (-1,21,22,23,0)
      GO TO 9999
  104 CALL APT330 (4,-10,62,-52,70)
      CALL APT330 (-1,61,71,72,73)
      CALL APT330 (-1,80,81,82,83)
      CALL APT330 (-1,84,85,77,78)
      CALL APT330 (-1,79,0,0,0)
      GO TO 9999
  105 CALL APT330 (5,-10,92,93,94)
      CALL APT330 (-1,89,90,91,0)
      GO TO 9999
  106 CALL APT330 (6,-10,62,70,6)
      CALL APT330 (-1,-7,80,81,82)
      CALL APT330 (-1,77,78,79,92)
      CALL APT330 (-1,93,94,89,90)
      CALL APT330 (-1,91,0,0,0)
      GO TO 9999
  107 CALL APT330 (7,-10,62,67,68)
      CALL APT330 (-1,70,6,-7,69)
      CALL APT330 (-1,61,80,81,82)
      CALL APT330 (-1,77,78,79,92)
      CALL APT330 (-1,93,94,89,90)
      CALL APT330 (-1,91,71,72,73)
      CALL APT330 (-1,98,99,100,0)
      GO TO 9999
  201 CALL APT330 (11,33,34,35,24)
      CALL APT330 (-1,25,26,42,43)
      CALL APT330 (-1,44,117,118,119)
      CALL APT330 (-1,120,121,122,123)
      CALL APT330 (-1,124,125,126,127)
      CALL APT330 (-1,128,0,0,0)
      GO TO 9999
  202 CALL APT330 (12,4,5,0,0)
      GO TO 9999
  203 CALL APT330 (13,-10,47,5,0)
      GO TO 9999
  204 CALL APT330 (14,4,129,130,131)
      CALL APT330 (-1,36,37,38,27)
      CALL APT330 (-1,28,29,30,31)
      CALL APT330 (-1,32,21,22,23)
      GO TO 9999
  205 CALL APT330 (15,-10,-14,30,31)
      CALL APT330 (-1,32,21,22,23)
      GO TO 9999
  206 CALL APT330 (16,-15,4,0,0)
      GO TO 9999
  207 CALL APT330 (17,-10,-13,47,0)
      GO TO 9999
  208 CALL APT330 (18,20,-18,0,0)
      GO TO 9999
  209 CALL APT330 (19,-14,-12,86,87)
      CALL APT330 (-1,88,0,0,0)
      GO TO 9999
  210 CALL APT330 (20,-10,62,70,-54)
      CALL APT330 (-1,63,64,0,0)
      GO TO 9999
  211 CALL APT330 (21,-10,-54,65,66)
      CALL APT330 (-1,77,78,79,0)
      GO TO 9999
  212 CALL APT330 (22,-10,-15,4,20)
      GO TO 9999
  213 CALL APT330 (23,-10,4,0,0)
      GO TO 9999
  214 CALL APT330 (24,-10,-16,47,0)
      GO TO 9999
  215 CALL APT330 (25,-10,-51,-54,62)
      CALL APT330 (-1,70,63,64,65)
      GO TO 9999
  216 CALL APT330 (26,-51,-54,65,66)
      CALL APT330 (-1,77,78,79,39)
      CALL APT330 (-1,40,41,0,0)
      GO TO 9999
  217 CALL APT330 (27,-10,-48,30,31)
      CALL APT330 (-1,32,21,22,23)
      GO TO 9999
  401 CALL APT330 (31,-17,58,74,75)
      CALL APT330 (-1,76,129,130,131)
      GO TO 9999
  402 CALL APT330 (32,46,45,58,74)
      CALL APT330 (-1,75,76,0,0)
      GO TO 9999
  403 CALL APT330 (33,-10,59,60,0)
      GO TO 9999
  404 CALL APT330 (34,-11,103,-101,104)
      CALL APT330 (-1,102,105,106,107)
      CALL APT330 (-1,111,112,113,114)
      CALL APT330 (-1,115,116,108,109)
      CALL APT330 (-1,110,0,0,0)
      GO TO 9999
  501 CALL APT330 (41,-9,-19,-8,0)
      GO TO 9999
  502 CALL APT330 (42,-10,-49,0,0)
      GO TO 9999
  503 CALL APT330 (43,-10,95,96,97)
      CALL APT330 (-1,30,31,32,0)
      GO TO 9999
  504 CALL APT330 (44,-10,-53,47,77)
      CALL APT330 (-1,78,79,0,0)
      GO TO 9999
  505 CALL APT330 (45,30,31,32,0)
      GO TO 9999
  999 CALL APT330 (50,-2,0,0,0)
 9999 RETURN
       END
**** SOURCE FILE : M0004202.V09   ***
*
C......    FORTRAN SUBROUTINE APT335    11/69    RC
C  PURPOSE     TO PERFORM THE LOGIC NECESSARY TO IMPLEMENT COPY
C              AND SET UP THE TRANSFORMATION MATRIX, TMATRX
C
C  CALLING SEQUENCE  CALL APT335
C
C  CALLED BY   APT301
C
C  SUBSIDIARIES   APT302, APT305, APT306, APT307, APT308, APT315
C
C
      SUBROUTINE APT335
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C     THE FOLLOWING PROGRAM IS THE EXECUTIVE ROUTINE FOR THE CLTAPE
C     EDITOR.IT HAS THREE FUNCTIONS
C     TO PROVIDE A VERIFICATION LISTING OF THE CLFILE, INCLUDING ERROR
C     DIAGNOSTICS
C     TO PROCESS COPY AND VTLAXS COMMANDS
C     TO PROVIDE THE BASE STRUCTURE FOR ANY FUTURE PLOTTING PROGRAMS
C
C     THE EXECUTION OF A PART PROGRAM RESULTS IN THE PREPARATION OF
C     EXFILE. THE CLEDITOR USES EXFILE AS INPUT TO PREPARE THE
C     CLFILE. THE FORMAT OF EXFILE IS NOT IDENTICAL TO THE CLFILE.
C
C
C     ***** COMMON-EQUIVALENCE BLOCK VARIABLES *****
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
C
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))
      EQUIVALENCE             (AREA1(1),RECORD(1)),(AREA1(1),IRECRD(1)),
     1  (AREA1(257),CURRNT),(AREA1(258),IDPLOT(1)),(AREA1(260),IPLOTI),
     2   (AREA1(261),IPX)   , (AREA1(262),IPY)   , (AREA1(263),NCAMRA),
     3   (AREA1(264),NRECNO), (AREA1(265),SEQNO) , (AREA1(266),NX)    ,
     4   (AREA1(267),NY), (AREA1(268),PARTNO(1)),  (AREA1(280),PT0(1)),
     5   (AREA1(283),PTU(1)), (AREA1(286),KPLOT) ,
     6(AREA1(335),IPLTAB(1)), (AREA1(375),MLTFLG), (AREA1(376),NREAD) ,
     7 (AREA1(377),NNNNN(1)), (AREA1(381),NRECF) , (AREA1(382),NRECL) ,
     8   (AREA1(383),NCFL)  , (AREA1(384),NPWDS) , (AREA1(385),NPTAB) ,
     9   (AREA1(386),INDXR) , (AREA1(387),INDXN) , (AREA1(388),NRECN1)
      EQUIVALENCE             (AREA1(389),NTAPE) , (AREA1(390),NCLEND),
     1 (AREA1(391),NRECLS), (AREA1(392),NTAPE1),(AREA1(393),INDTBS(1)),
     2   (AREA1(473),INDXS) , (AREA1(474),EMPTY) , (AREA1(475),ISTFLG),
     3   (AREA1(476),ICPYSW),     (AREA1(287),MATTAB(1,1,1))
      EQUIVALENCE             (AREA1(477),SAVSEQ)
C
      EQUIVALENCE      (AREA2(1),AMATRX(1,1)),     (AREA2(1),AMTR(1)) ,
     1   (AREA2( 37),AN1)   , (AREA2( 38),AN2)   , (AREA2( 39),BRANCH),
     2   (AREA2( 40),CMAT(1,1)),  (AREA2(52),CNTMAT(1,1)),
     3   (AREA2(52),CNTM(1)),  (AREA2(88),CONT(1)),
     4                       (AREA2(91),COUNT(1)), (AREA2( 94),ICLWAS),
     5   (AREA2( 95),ICOPY) , (AREA2( 96),INDN)  ,
     6   (AREA2( 99),INDTAB(1)),  (AREA2( 99),TABIND(1)),
     7                      (AREA2(259),INDXNO(1)),(AREA2(262),IPLOTX),
     8 (AREA2(463),IPLWAS),(AREA2(464),IRECNI(1)),(AREA2(465),JCOPY)  ,
     9   (AREA2(466),KCOPY) , (AREA2(467),LPRINT), (AREA2(468),MAXCOP)
      EQUIVALENCE             (AREA2(485),TNTM(1)),(AREA2(521),VUN)   ,
     1   (AREA2(469),MULTAX), (AREA2(470),NLETRS), (AREA2(471),NTAB)  ,
     2   (AREA2(472),ORIGIN), (AREA2(473),PPRINT(1)),
     3   (AREA2(485),TMATRX(1,1)),  (AREA2(522),TRAMAT(1,1)),
     4   (AREA2(534),NCSMAX), (AREA2(535),LVLCPY), (AREA2(536),NOCPY)
C
      EQUIVALENCE             (AREA3(  1),AX0)   , (AREA3(  2),AX)    ,
     1   (AREA3(  3),AY0)   , (AREA3(  4),AY)    , (AREA3(  5),DC)    ,
     2   (AREA3(  6),DX)    , (AREA3(  7),DY)    , (AREA3(  8),DELX)  ,
     3   (AREA3(  9),DELY)  , (AREA3( 10),IERR)  , (AREA3( 11),ITRUNC),
     4   (AREA3( 12),LOKATE), (AREA3( 13),MCODE) , (AREA3( 14),NX0)   ,
     5   (AREA3( 15),NX1)   , (AREA3( 16),NX2)   , (AREA3( 17),NX4)   ,
     6   (AREA3( 18),NX5)   , (AREA3( 19),NY0)   , (AREA3( 20),NY1)   ,
     7   (AREA3( 21),NY2)   , (AREA3( 22),NY4)   , (AREA3( 23),NY5)   ,
     8   (AREA3( 24),PARAM) ,                      (AREA3( 75),PNAME) ,
     9   (AREA3( 76),PPT(1)), (AREA3( 79),EMPTY2), (AREA3( 80),TL)
      EQUIVALENCE             (AREA3( 81),X0)    , (AREA3( 82),X1)    ,
     1   (AREA3( 83),X2)    , (AREA3( 84),X3)    , (AREA3( 85),XNEW)  ,
     2   (AREA3( 86),Y0)    , (AREA3( 87),Y1)    , (AREA3( 88),Y2)    ,
     3   (AREA3( 89),Y3)    , (AREA3( 90),YNEW)  , (AREA3( 91),EMPTY3)
C
C
      DIMENSION   AMATRX(3,4),AMTR  ( 36),CMAT  (3,4),CNTMAT(3,4),
     1CNTM  ( 36),CONT  (  3),COUNT (  3),IDPLOT(  2),INDTAB(160),
     2INDXNO(  3),IRECNI(  3),IRECRD(256),PARTNO( 12),
     3PPRINT( 12),PPT   (  3),PT0   (  3),PTU   (  3),NNNNN (  4),
     4RECORD(256),TRAMAT(3,4),TABIND(160),TMATRX(3,4),TNTM  ( 36)
C
      INCLUDE (DARRAY)    
C
      INCLUDE (KNUMBR)    
C
      COMMON /KFLAGS/ KFLAGS
      DIMENSION  KFLAGS(5)
      EQUIVALENCE             (KFLAGS( 1),CLPRT) , (KFLAGS( 2),CLWRT) ,
     1   (KFLAGS( 3),CLPLOT), (KFLAGS( 4),TAPFLG), (KFLAGS( 5),ITRAFL)
C
      INCLUDE (CLHOLRTH)    
C
      COMMON /NCFSTO/ NCFSTO,CSCALE
      DIMENSION NCFSTO(60000),MATTAB(4,4,3),AMTTAB(4,4,3),IPLTAB(40)
      EQUIVALENCE  (MATTAB(1,1,1),AMTTAB(1,1,1))
C
C...     TYPE DECLARATIONS AND MISCELLANEOUS EQUIVALENCES
C
      DOUBLE PRECISION  NCFSTO, IRECRD, MATTAB, KKSTAK
      INTEGER  CLPRT,CLWRT,CLPLOT,CURRNT,BRANCH,PPFLAG,TAPFLG
C
      DIMENSION  ALETRA(3), INDTBS(80)
      DIMENSION  PPSTAK(15,30), KKSTAK(15,30), CPFL(6)
      EQUIVALENCE  (PPSTAK(1,1),KKSTAK(1,1))
C
      DIMENSION  JRECRD(512)
      EQUIVALENCE  (RECORD(1),JRECRD(1)), (JRECRD(6),NUMWDS)
C
      INTEGER Z4E
      PARAMETER (Z4E=1308622848)
      INTEGER IPOW(2)
      EQUIVALENCE(IPOW(1),ZERO)
C
C...     SYSTEM I/O FILE NAMES
C
      COMMON/NRECC/NRECC
      DIMENSION NRECC(21)
C
      INTEGER CPYEND
      DIMENSION CPYEND(2,3)
C
      DIMENSION AMATSV(3,4,3)
C
      CHARACTER*8 INDEX,CTEST
      CHARACTER IFMT13*6,IFMT14*20,IFMT17*12,IFMT18*12
C
      DATA IFMT13/' COPY '/
      DATA IFMT14/' HAS BEEN COMPLETED '/
      DATA IFMT17/' BEGIN PASS '/
      DATA IFMT18/' THRU COPY  '/
C
      DATA  IPOW/Z4E,0/
      DATA  INDEX/'INDEX   '/,NOCPSV/0/
C
C...     ***** COPY COMMAND PROCESSING ROUTINE *****
C
C...     IF AN AERR RECORD HAS BEEN ENCOUNTERED DURING THIS COPY LOOP
C        THIS SECTION SETS FLAGS TO BYPASS COPY PROCESSING
C
      IF (NOCPY .EQ. 0 .AND. NOCPSV .EQ. 0) GO TO 3005
      LVLTMP=LVLCPY-1
      IF (LVLTMP .LT. 0) GO TO 3002
      NOCPSV=NOCPY
      IF (LVLTMP .EQ. 0) NOCPY=0
      IF (NOCPSV .EQ. 0) GO TO 3005
      LVLCPY=LVLTMP
 3002 ISTFLG=3
      NCFL=1
      NRECL=1
      ICOPY=0
      CALL APT336(30034,'APT335  ')
      ICPYSW=0
      GO TO 3963
C
C
C
C
C     THIS SECTION PROCESSES THE COPY INSTRUCTION. THE PROGRAM IS SETUP
C
C     TO PERFORM THREE LEVELS OF NESTED COPIES.THE ONLY LIMITATION ON
C
C     THIS IS MAXCOP AND THE AMOUNT OF STORAGE PROVIDED FOR AMATRX,
C
C     CNTMAT,COUNT,INDXNO,AND IRECNI.
C
C     FOR EACH ADDITIONAL NEST AMATRX AND CNTMAT EACH MUST BE INCREASED
C
C     BY 12. COUNT,INDXNO,AND IRECNI EACH MUST BE INCREASED BY 1.
C
C     ALSO MAXCOP MUST BE INCREASED BY 1.
C
C     AMATRX IS THE MATRIX DEFINED BY EACH COPY AS IT IS SENSED AND IS
C
C     SET UP BY XYROT,SAME,OR MODIFY INSTRUCTIONS.
C     CNTMAT IS THE CURRENT RESULTANT COPY MATRIX.
C     COUNT IS THE NUMBER OF TIMES A COPY IS TO LOOP.
C     TMATRXIS THE COMBINATION OF ALL MATRICES PRESENTLY IN EFFECT.
C     INDXNO IS THE NUMBER OF THE COPY JUST SETUP.
C     IRECNI IS THE RECORD NUMBER OF THE CURRENT COPY.
C     CURRNT IS THE RECORD NUMBER OF THE INSTRUCTION JUST READ.
C
C     CHECK FOR VALID INDEX/N
 3005 CSCALE=1.0
      ICPYSW = 0
C
      DO 3010 I=1,NTAB,2
      IF (INT(IRECRD(5))-INDTAB(I).EQ.0) GO TO 3029
 3010 CONTINUE
C
C     INDEX NUMBER NOT FOUND IN INDEX TABLE
C
      CALL APT336(30014,'APT335  ')
 3021 GO TO 3963
C
C     SAVE INDEX POINTER
C
 3029 INDXS=(I+1)/2
      INDXN=I
      INDXR=I+1
C
C...  CHECK IF RECORD IS AN INDEX/N,NOMORE
C...  COMMAND THAT TERMINATES A COPY LOOP
C
      IF (BRANCH.EQ.7.AND.(ICOPY.EQ.0.OR.
     /    RECORD(5).NE.AMTTAB(1,4,ICOPY))) RETURN
      IF (BRANCH.EQ.7) GO TO 3735
C
C     DETERMINE WHAT COPY MODIFIER IS INVOLVED
C
 3030 CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)
      IF(CTEST.EQ.TRANSL) GO TO 3131
C
      IF(CTEST.EQ.XYROT ) GO TO 3361
C
      IF(CTEST.EQ.SAME  ) GO TO 3501
C
      CALL HOLFRM(IRECRD(7),CTEST,1,8,NWD)
      IF(CTEST.EQ.MODIFY) GO TO 3580
C
      IF(CTEST.EQ.MIRROR) GO TO 3670
C
C     IN CORRECT MODIFIER IN A COPY COMMAND
      CALL APT336(30013,'APT335  ')
C
C     TURN OFF WRITING OF CLTAPE,PLOT-TURN ON CLPRNT
 3100 CLWRT =K0
      CLPLOT=0
      CLPRT=1
      ICOPY=K0
      ISTFLG=3
      GO TO 3963
C     THIS SECTION SETS UP THE TRANSL PARAMETERS
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT
 3131 IF (JRECRD(6)-12.LT.0) GO TO 3701
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS
      IF (RECORD(15).LT. 0.5D0) GO TO 3704
C     SET UP THE TRANSL MATRIX
C
      AMATRX(1,4)=RECORD( 9)
      AMATRX(2,4)=RECORD(11)
      AMATRX(3,4)=RECORD(13)
      AMATRX(1,1)=1.0D0
      AMATRX(1,2)=0.0D0
C
      AMATRX(1,3)=0.0D0
C
      AMATRX(2,1)=0.0D0
C
      AMATRX(2,2)=1.0D0
C
      AMATRX(2,3)=0.0D0
C
      AMATRX(3,1)=0.0D0
      AMATRX(3,2)=0.0D0
      AMATRX(3,3)=1.0D0
      ICOUNT=RECORD(15)
      GO TO 3710
C     THIS SECTION SETS UP THE XYROT PARAMETERS
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT
 3361 IF (JRECRD(6)-K8.LT.0) GO TO 3701
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS
      IF (RECORD(11).LT.0.5D0) GO TO 3704
C     SET UP THE XYROT MATRIX
            RADIN  = RECORD(9)* 0.0174532925D0
      AMATRX(1,1) = DCOS(RADIN)
C
      AMATRX(1,2) =-DSIN(RADIN)
C
      AMATRX(1,3)= 0.D0
C
      AMATRX(1,4)=0.0D0
C
      AMATRX(2,1) = DSIN(RADIN)
C
      AMATRX(2,2) = DCOS(RADIN)
C
      AMATRX(2,3)=0.0D0
C
      AMATRX(2,4)=0.0D0
      AMATRX(3,1)=0.0D0
      AMATRX (3,2)=0.D0
      AMATRX (3,3)=1.D0
      AMATRX (3,4)=0.D0
      ICOUNT=RECORD(11)
      GO TO 3710
C     THIS SECTION SETS UP THE SAME PARAMETERS
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT
 3501 IF (JRECRD(6)-K6.LT.0) GO TO 3701
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS
        IF (RECORD(9).LT.0.5D0) GO TO 3704
C     SET UP THE SAME MATRIX
C
C
      DO 3520 I=1,3
      DO 3520 J=1,4
C
 3520 AMATRX (I,J) =0.0D0
C
      AMATRX(1,1)=1.0D0
C
      AMATRX(2,2)=1.0D0
C
      AMATRX(3,3)=1.0D0
C
      ICOUNT=RECORD(9)
      GO TO 3710
C     THIS SECTION SETS UP THE MODIFY PARAMETERS
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT
 3580 IF (JRECRD(6) .NE. 20)  GO TO 3701
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS
      IF (RECORD(23) .LT. 0.5D0)  GO TO 3704
C     SET UP MODIFY MATRIX
      K = 9
      DO 3640 I=1,3
      DO 3640 J=1,4
      K = K + K1
C
 3640 AMATRX(I,J)= RECORD(K)
C
      ICOUNT=RECORD(23)
C      CHECK FOR A SCALE MATRIX
       DO 3653 I=1,3
      IF (DABS( AMATRX(I,4)) - 0.000001D0)  3653,3653,3659
 3653  CONTINUE
       DO 3656 I=2,3
       IF (AMATRX(1,1)-AMATRX(I,I)) 3659,3656,3659
 3656  CONTINUE
      IF (CSCALE-1.0D0) 3658,3657,3658
 3657        CSCALE= AMATRX(1,1)
      GO TO 3710
 3658        CSCALE= CSCALE*AMATRX(1,1)
      GO TO 3710
 3659        CSCALE= 1.0D0
      GO TO 3710
C     THIS SECTION SETS UP THE MIRROR PARAMETERS (NOT OPERATIVE)
C     PRINT DIAGNOSTIC FOR USING A MIRROR MODIFIER
C
 3670 CALL APT336(30017,'APT335  ')
      CLPRT=1
      GO TO 3963
C
C....    ERROR - INCORRECT NUMBER OF PARAMETERS
 3701 CALL APT336(30015,'APT335  ')
      GO TO 3100
C
C....    ERROR - PARAMETER  N  IS ZERO OR MINUS
 3704 CALL APT336(30016,'APT335  ')
      GO TO 3100
C
C     THE TRANSL,XYROT,SAME,MODIFY,OR MIRROR TYPE COPY HAS BEEN SET UP
C     SET RECORD NO. OF CURRENT COPY EQUAL TO RECORD NUMBER OF CURRENT
C     INSTRUCTION
C
 3710 IF (ICOPY.EQ.0) GO TO 3770
      IF (RECORD(5).EQ.AMTTAB(1,4,ICOPY)) GO TO 3730
      IF (INDTAB(INDXR).LT.NRECC(1)) GO TO 3770
C
C     ERROR - THIS COPY NOT CURRENT COPY OR INDEX NOT IN PROPER PLACE
C
 3719 CALL APT336(30018,'APT335  ')
      GO TO 3100
C
C     THIS COPY HAS CURRENT INDEX NO. - CHECK RECORD NO IN CASE THERE
C     ARE MULTIPLE COPIES TO THE SAME INDEX
C
 3730 IF (NRECC(1).NE.MATTAB(2,4,ICOPY  )) GO TO 3770
C
C     THIS IS THE CURRENT COPY - REDUCE COUNT
C
 3735 AMTTAB(4,4,ICOPY)=AMTTAB(4,4,ICOPY)-1.0D0
      IF (AMTTAB(4,4,ICOPY)) 3719,3740,3760
 3740 I=AMTTAB(1,4,ICOPY)
      IF (CLPRT .NE. 1) GO TO 3743
      IO=JRECRD(4)
      CALL ICONV(IO,DARRAY,2,8)
      CALL CFORM('.',DARRAY,10,1)
      CALL CFORM(IFMT13,DARRAY,14,6)
      CALL ICONV(I,DARRAY,20,5)
      CALL CFORM(IFMT14,DARRAY,25,20)
      CALL CPRINT(DARRAY)
 3743 ICOPY=ICOPY-1
      IF (ICOPY) 3719,3745,3750
C
C...     DECREASE COPY LEVEL MARKER AND RESET FLAGS PROPERLY
 3745 ISTFLG=1
      NREAD=1
      LVLCPY=LVLCPY-1
C...     IF COPY LEVEL IS ZERO, RESET FLAGS FOR INITIAL COPY STORAGE
 3750 IF (LVLCPY) 3751,3752,3753
 3751 LVLCPY=0
 3752 NREAD=1
      ISTFLG=3
      NCFL=1
      NRECL=1
      GO TO 3757
C...     RESET FLAGS FOR STORAGE STARTING AFTER THIS COPY COMMAND
 3753 NCFL=CPYEND(2,ICOPY+1)
 3757 CALL APT305
      IF (NREAD.LT.3.AND.NRECC(1).NE.
     /    CPYEND(1,ICOPY+1))
     /  NRECC(1)=CPYEND(1,ICOPY+1)
      NRECC(1)=CPYEND(1,ICOPY+1)
      GO TO 3962
C
C     MAKE ANOTHER PASS THROUGH THIS COPY LOOP - UPDATE MATRIX IN MATTAB
C
 3760 CALL APT306(AMTTAB(1,1,ICOPY),AMTTAB(1,1,ICOPY),AMATSV(1,1,ICOPY))
      GO TO 3820
C
C     FIRST TIME FOR THIS COPY - STORE IN NCFSTO
C
 3770 IF (ISTFLG.NE.1) GO TO 3800
      IF ((NCFL + (NUMWDS+3)) .GE. NCSMAX) GO TO 3800
 3775 K=(NUMWDS +3)
      DO 3780 I = 1,K
      NCFSTO(NCFL)=IRECRD(I)
 3780 NCFL=NCFL+1
      K=NCFL-NUMWDS-1
      NCFSTO(K)=JRECRD(6)+NPWDS*1000
      NPWDS=NUMWDS+3
      NRECL=NRECL+1
C
C     ADVANCE COPY LEVEL INDICATOR (ICOPY)
C
 3800 ICOPY = ICOPY+1
      CPYEND(1,ICOPY)=NRECC(1)
      CPYEND(2,ICOPY)=NCFL
C
      IF (MAXCOP-ICOPY) 3801,3810,3810
C
C     OVER 3 LEVES OF NESTED COPIES
C
 3801 CALL APT336(30019,'APT335  ')
      GO TO 3100
C
C     STORE MATRIX FOR NEW COPY IN MATTAB
C
 3810 IF (CLWRT .EQ. 0) GO TO 3100
      CALL APT308(AMTTAB(1,1,ICOPY),AMATRX(1,1))
      AMTTAB(4,4,ICOPY)=ICOUNT
      MATTAB(3,4,ICOPY  ) = INDTAB(   INDXR)
      MATTAB(2,4,ICOPY  ) = NRECC(1)
      MATTAB(1,4,ICOPY  )= INDTAB(  INDXN)
      CALL APT308(AMATSV(1,1,ICOPY),AMATRX(1,1))
      COUNT(ICOPY)=ICOUNT
C
C     GENERATE PRODUCT TRANSFORMATION MATRIX FOR THIS COPY PASS ---
C
 3820 CALL APT305
C
C     NOW WE SET UP THE POINTER TO THE CLFILE STORAGE AREA AND BACK UP
C      THE INPUT TAPE (IF NECESSARY)
C
C     NRECF = RECORD NUMBER OF FIRST RECORD IN CLFILE STORAGE (NCFSTO)
C     NRECL = RECORD NUMBER OF LAST RECORD IN CLFILE STORAGE
C     NRECC = RECORD NUMBER OF CURRENT RECORD
C     MATTAB(1,4,ICOPY) = INDEX NUMBER
C     MATTAB(2,4,ICOPY) = RECORD NUMBER OF COPY
C     MATTAB(3,4,ICOPY) = RECORD NUMBER OF INDEX
C     ICOPY =  COPY LEVEL
C     NCFL  =  CLFILE STORAGE AREA POINTER   NCFSTO(NCFL)
C
 3900 IF (CLPRT .EQ. 1) CALL APT302
      IF (MATTAB(3,4,ICOPY  ).GT.NRECL) GO TO 3950
      NREAD=K3
      ISTFLG=K2
      NCFL=INDTBS(INDXS)
      K=NCFSTO(NCFL+2)/1000
      K=NCFSTO(NCFL+2)+3-K*1000
      DO 3905 I = 1,K
      IRECRD(I)=NCFSTO(NCFL)
 3905 NCFL=NCFL+1
      IRECRD(3)=ZERO
      NUMWDS=K-3
 3910 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF(CTEST.EQ.INDEX .AND.
     C   DABS(IRECRD(5)-MATTAB(1,4,ICOPY) ).LT. 0.1) GO TO 3960
      ICPYSW = -1
      GO TO 3963
 3950 MATTMP=MATTAB(3,4,ICOPY)
      NRECC(1)=MATTMP
      CALL APT314(NTAPE,NRECC(1))
      GO TO 3910
 3960 I=COUNT(ICOPY)-AMTTAB(4,4,ICOPY)+1.0D0
      K=AMTTAB(1,4,ICOPY)
      IF (CLPRT .NE. 1) GO TO 3962
      IO=JRECRD(4)
      CALL ICONV(IO,DARRAY,2,8)
      CALL CFORM('.',DARRAY,10,1)
      CALL CFORM(IFMT17,DARRAY,14,12)
      CALL ICONV(I,DARRAY,26,4)
      CALL CFORM(IFMT18,DARRAY,30,12)
      CALL CPRINT(DARRAY)
 3962 ICPYSW = 1
 3963 RETURN
      END
**** SOURCE FILE : M0001851.V08   ***
*
C
C.....FORTRAN SUBROUTINE              APT336                 8/1/68  AR
C PURPOSE      TO WRITE ON THE VERIFICATION LISTING THE CLEDITOR
C              ERROR MESSAGES.
C LINKAGE      CALL APT336(IERROR,SUBNAM)
C ARGUMENTS    IERROR    INTEGER VARIABLE CONTAING THE ERROR NUMBER
C SUBSIDIARIES NONE
      SUBROUTINE APT336 (IERROR,SUBNAM)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR
C
          INCLUDE (SUPER)    
C
      INCLUDE (CLERR)    
C
      COMMON /EDITOR/ EDITOR
      DIMENSION EDITOR(1500),AREA3(250)
      EQUIVALENCE (EDITOR(1500),AREA3(250))
      INCLUDE (DARRAY)    
C
C
C
C... INITILIZE ARRAY INDICATING WHICH ERRORS ARE OF SEVERITY LEVEL FOUR.
C
      INTEGER  ERRLEV,IERRN
      DIMENSION  ERRLEV(4)
      CHARACTER SUBNAM*8,NOTEXT*54
      DATA  IERRN/0/,ERRLEV/4*0/
      DATA NOTEXT/' THERE IS NO DIAGNOSTIC MESSAGE FOR THIS ERROR NUMBER
     * '/
C
      CALL CFORM('0       ****  CL EDITING ERROR NO.',DARRAY,1,34)
      CALL ICONV(IERROR,DARRAY,36,5)
      CALL CFORM(' FROM SUBROUTINE ',DARRAY,42,17)
      CALL CFORM(SUBNAM,DARRAY,59,8)
      CALL CFORM('****',DARRAY,67,4)
      CALL CPRINT(DARRAY)
      DO 10 I=1,CERDM
      IF(IERROR.EQ.CERAD1(I))GOTO 40
   10 CONTINUE
      CALL CFORM(NOTEXT,DARRAY,15,54)
      CALL CPRINT(DARRAY)
      GOTO 60
   40 K=CERAD2(I)
      IF (I.EQ.1) THEN
        J=1
      ELSE
        J=CERAD2(I-1)+1
      END IF
      L1=11
      DO 50 I=J,K
        IF (L1.GE.113) THEN
          CALL CPRINT(DARRAY)
          L1=11
        END IF
        L1=L1+4
        DARRAY(L1:L1+3)=CERTXT(I)
   50 CONTINUE
      CALL CPRINT(DARRAY)
C... SET ERROR LEVEL INDICATOR FOR SUPERVISOR.
   60 XTRAS(1) = XTRAS(1) + 1
      IF(ERRX.GT.4) GOTO 320
      ERRX = 4
      DO 310 I=1,IERRN
      IF(IERROR.EQ.ERRLEV(I)) GOTO 320
  310 CONTINUE
      ERRX = 8
  320 RETURN
      END
**** SOURCE FILE : M0000441.V02   ***
*
C
C.....FORTRAN SUBROUTINE                APT340...            8/1/68  AR
C
C PURPOSE      SETS UP CUT VECTOR TO BE USED IN APT341
C LINKAGE      CALL APT340
C ARGUMENTS    NONE
C SUBSIDIARIES APT341
C********************************************************************
      SUBROUTINE APT340
C***********************************************************************
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C     SYSTEM COMMON,DIMENSION, AND EQUIVALENCE STATEMENTS
      COMMON /EDITOR/EDITOR
C
      DIMENSION EDITOR(1500)
C
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)
      EQUIVALENCE (EDITOR(1500),AREA1 (1500),AREA2 (1000),AREA3 (250))
      EQUIVALENCE  (AREA3(82),X1),  (AREA3(83),X2),
     +             (AREA3(87),Y1),  (AREA3(88),Y2)
      COMMON/R5AXIS/
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,CUTTER,TEST  ,CRADUS
      COMMON/I5AXIS/
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV
C...    ESTABLISH CUT VECTOR
      XCV = X2 - X1
      YCV = Y2 - Y1
      ZCV = Z2 - Z1
      DLNGTH = DLNGTH +DSQRT(XCV**2+YCV**2+ZCV**2)
C...    NO WCORN
      CALL APT341
      RETURN
      END
**** SOURCE FILE : M0000442.V02   ***
*
C
C.....FORTRAN SUBROUTINE                APT341...            8/1/68  AR
C
C PURPOSE      COMPUTES THE ALTERED TOOL POSITION. THE TILT
C              ANGLE IS PRORATED OVER THE TOTAL MOVE FROM
C              VTLAXS/ON TO OFF
C LINKAGE      CALL APT341
C ARGUMENTS    NONE
C SUBSIDIARIES APT315,APT342
C********************************************************************
      SUBROUTINE APT341
C***********************************************************************
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C********************************************************************
C     SYSTEM COMMON,DIMENSION, AND EQUIVALENCE STATEMENTS
      COMMON /EDITOR/EDITOR
C
      DIMENSION EDITOR(1500)
C
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)
      EQUIVALENCE (EDITOR(1500),AREA1 (1500),AREA2 (1000),AREA3 (250))
      EQUIVALENCE  (AREA3(82),X1),  (AREA3(83),X2),
     +             (AREA3(87),Y1),  (AREA3(88),Y2)
      COMMON/R5AXIS/
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,CUTTER,TEST  ,CRADUS
      COMMON/I5AXIS/
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV
C
C...    PRORATE TILT ANGLE
      CANG=STANG+(DLNGTH/TLNGTH)*DANG
      TSIN=DSIN(CANG)
      TSIN1 =DABS(TSIN)
      TCOS=DCOS(CANG)
      CALL APT342(ZCV,ZUN,ZTR)
      CALL APT315(ZTR,ZTR)
C...    IS CANG .GT. 80 DEGREES
      IF(DABS(TCOS)-.1736) 5, 5, 90
90    CONTINUE
C...    CALCULATE XYZ COORDINATES OF NEW CUTTER POSITION
      IF(CRADUS)  100, 110, 100
100   CONTINUE
      Z = CRADUS*(1.0-TCOS)+(CUTTER-CRADUS)*TSIN1
      GOTO  120
110   CONTINUE
      Z =DABS(CUTTER*TSIN)
  120 IF(CANG*ZUN)  130, 150, 150
  130 IF(CRADUS)   140, 170, 140
  140 TEST = CRADUS*(TCOS-TSIN1+(TSIN1-1.0)/TCOS)-CUTTER*(TCOS-2.0/TCOS
     1+1.0)
      TEST = -TEST
      GOTO 9
  150 IF(CRADUS)  160,  8, 160
  160 TEST = CRADUS*(TCOS-TSIN1+(TSIN1-1.0)/TCOS)+CUTTER*(1.0-TCOS)
      GOTO 9
  170 IF(IABOVE)  3,  6,  3
    3 Z = -Z
      GOTO 8
    5 JSUBER=30007
C...    ERROR 30007 - TILT ANGLE IS GREATER THAN 80 DEGREES.
      GOTO  40
    6 TEST =-(2.0*CUTTER/TCOS-CUTTER-CUTTER*TCOS)
      GOTO 9
    8 TEST = CUTTER*(1.0-TCOS)
    9 XDO = TEST*XTR
      YDO =TEST*YTR
      ZDO =TEST*ZTR
      XCC=X2+XDO
      YCC=Y2+YDO
      ZCC=Z2+Z
C...    CALCULATE IJK COMPONENTS OF NEW TLAXIS VECTOR
      XTR=TCOS*XTR
      YTR=TCOS*YTR
      IF(ZUN) 10, 20,20
   10 ZTR=TSIN
      CALL APT342(ZCV,ZTR,ZTA)
      GOTO 30
   20 ZTR=-TSIN
      CALL APT342(ZTR,ZCV,ZTA)
   30 CALL APT315(ZTA,ZTA)
      X1=X2
      Y1=Y2
      Z1=Z2
   40 CONTINUE
      RETURN
       END
**** SOURCE FILE : M0000443.V01   ***
*
C.....FORTRAN SUBROUTINE                APT342...            8/1/68  AR
C PURPOSE      TO CALCULATE A VECTOR THAT IS THE CROSS PRODUCT
C              OF TWO SPECIFIED VECTORS.
C LINKAGE      CALL APT342(V1,V2,V3)
C ARGUMENTS    V1,V2 ARE VECTORS WHOSE CROSS PRODUCT IS V3.
C SUBSIDIARIES NONE
      SUBROUTINE APT342(CRA,CRB,CRC)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
      DIMENSION CRA(3),CRB(3),CRC(3)
      CRTEM1=CRA(2)*CRB(3)-CRA(3)*CRB(2)
      CRTEM2=CRA(3)*CRB(1)-CRA(1)*CRB(3)
      CRC(3)=CRA(1)*CRB(2)-CRA(2)*CRB(1)
      CRC(1)=CRTEM1
      CRC(2)=CRTEM2
      RETURN
       END
**** SOURCE FILE : M0000432.V06   ***
*
C
C.....BLOCK DATA ROUTINE BDA316              APT316          12/67
C PURPOSE      THIS IS A BLOCK DATA SUBROUTINE AND IS NOT
C              CALLED OR EXECUTED.  THE SUBROUTINE LOADS THE
C              COMMON STORAGE ARRAY HOLRTH WITH THE BCD REPRESENTATION
C              OF THE RECORD TYPES WHICH REQUIRE SPECIAL HANDLING
C              IN THE CLTAPE EDITOR.
C
      BLOCK DATA BDA316
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
      INCLUDE (CLHOLRTH)    
      CHARACTER*8 HOLRTH (30)
      EQUIVALENCE (HOLRTH(1),ALL)
C
C
       DATA  HOLRTH    /'ALL   ','CIRCLE','FINI  ','FROM  ','GODLTA',
     1'GOTO  ','INDIRP','INDIRV','MODIFY','MIRROR','SAME  ','TRANSL',
     2'XYROT ','YZPLAN','ZXPLAN','XYPLAN','CUT   ','DNTCUT','INTOL ',
     3'OUTTOL','CUTTER','OVPLOT','COPY  ','ON    ','OFF   ','DUMMY5',
     4'DUMMY6','DUMMY7','DUMMY8','DUMMY9'/
      END
**** SOURCE FILE : M0011541.W01   ***
*
C
C...FORTRAN SUBROUTINE CLERRW  (BLOCK DATA)
C
      BLOCK DATA BDCLER
C
      INCLUDE (CLERR)    
C
      INTEGER A,B
      DIMENSION A(34),B(34)
      CHARACTER*4 E(570)
C...CERAD1 : ERROR & WARNING NUMBERS FOR CL EDITOR
C...CERAD2 : POSITION IN ARRAY CERTXT OF END OF ERROR MESSAGE
      EQUIVALENCE (A(1),CERAD1(1))
      EQUIVALENCE (B(1),CERAD2(1))
      EQUIVALENCE (E(1),CERTXT(1))
C
      DATA CERCNT,CERDM     / 570,  34/
C
      DATA A(  1),A(  2),A(  3),A(  4)/  30001,  30002,  30003,  30004/
      DATA A(  5),A(  6),A(  7),A(  8)/  30005,  30006,  30008,  30009/
      DATA A(  9),A( 10),A( 11),A( 12)/  30010,  30011,  30012,  30013/
      DATA A( 13),A( 14),A( 15),A( 16)/  30014,  30015,  30016,  30017/
      DATA A( 17),A( 18),A( 19),A( 20)/  30018,  30019,  30020,  30021/
      DATA A( 21),A( 22),A( 23),A( 24)/  30024,  30025,  30026,  30027/
      DATA A( 25),A( 26),A( 27),A( 28)/  30030,  30031,  30032,  30034/
      DATA A( 29),A( 30),A( 31),A( 32)/  30035,  30036,  30037,  30038/
      DATA A( 33),A( 34)/  30039,  30040/
      DATA B(  1),B(  2),B(  3),B(  4)/      7,     32,     52,     76/
      DATA B(  5),B(  6),B(  7),B(  8)/     94,    110,    126,    141/
      DATA B(  9),B( 10),B( 11),B( 12)/    153,    171,    189,    199/
      DATA B( 13),B( 14),B( 15),B( 16)/    206,    219,    232,    246/
      DATA B( 17),B( 18),B( 19),B( 20)/    272,    279,    287,    294/
      DATA B( 21),B( 22),B( 23),B( 24)/    314,    324,    345,    369/
      DATA B( 25),B( 26),B( 27),B( 28)/    379,    400,    410,    434/
      DATA B( 29),B( 30),B( 31),B( 32)/    461,    487,    514,    521/
      DATA B( 33),B( 34)/    553,    570/
      DATA E(   1),E(   2),E(   3),E(   4)/'INVA','LID ','VTLA','XS S'/
      DATA E(   5),E(   6),E(   7),E(   8)/'TATE','MENT','.   ','A VT'/
      DATA E(   9),E(  10),E(  11),E(  12)/'LAXS','/OFF',' COM','MAND'/
      DATA E(  13),E(  14),E(  15),E(  16)/' WAS',' GIV','EN W','ITHO'/
      DATA E(  17),E(  18),E(  19),E(  20)/'UT A',' VTL','AXS/','ON C'/
      DATA E(  21),E(  22),E(  23),E(  24)/'OMMA','ND O','R  A',' PRE'/
      DATA E(  25),E(  26),E(  27),E(  28)/'VIOU','S VT','LAXS',' ERR'/
      DATA E(  29),E(  30),E(  31),E(  32)/'OR O','CCUR','RED.','    '/
      DATA E(  33),E(  34),E(  35),E(  36)/'TWO ','VTLA','XS/O','N CO'/
      DATA E(  37),E(  38),E(  39),E(  40)/'MMAN','DS W','ERE ','GIVE'/
      DATA E(  41),E(  42),E(  43),E(  44)/'N WI','THOU','T A ','VTLA'/
      DATA E(  45),E(  46),E(  47),E(  48)/'XS/O','FF C','OMMA','ND B'/
      DATA E(  49),E(  50),E(  51),E(  52)/'ETWE','EN T','HEM.','    '/
      DATA E(  53),E(  54),E(  55),E(  56)/'A FR','OM C','OMMA','ND W'/
      DATA E(  57),E(  58),E(  59),E(  60)/'AS G','IVEN',' BET','WEEN'/
      DATA E(  61),E(  62),E(  63),E(  64)/' A V','TLAX','S/ON',' COM'/
      DATA E(  65),E(  66),E(  67),E(  68)/'MAND',' AND',' ITS','  CO'/
      DATA E(  69),E(  70),E(  71),E(  72)/'RRES','POND','ING ','VTLA'/
      DATA E(  73),E(  74),E(  75),E(  76)/'XS/O','FF C','OMMA','ND. '/
      DATA E(  77),E(  78),E(  79),E(  80)/'A VT','LAXS',' COM','MAND'/
      DATA E(  81),E(  82),E(  83),E(  84)/' WAS',' GIV','EN W','ITHO'/
      DATA E(  85),E(  86),E(  87),E(  88)/'UT A',' PRE','VIOU','S MO'/
      DATA E(  89),E(  90),E(  91),E(  92)/'TION',' OR ','FROM','  CO'/
      DATA E(  93),E(  94),E(  95),E(  96)/'MMAN','D.  ','A VT','LAXS'/
      DATA E(  97),E(  98),E(  99),E( 100)/' COM','MAND',' WAS',' GIV'/
      DATA E( 101),E( 102),E( 103),E( 104)/'EN W','ITHO','UT A',' PRE'/
      DATA E( 105),E( 106),E( 107),E( 108)/'VIOU','S MU','LTAX',' COM'/
      DATA E( 109),E( 110),E( 111),E( 112)/'MAND','.   ','VTLA','XS E'/
      DATA E( 113),E( 114),E( 115),E( 116)/'RROR','. CO','RNER',' RAD'/
      DATA E( 117),E( 118),E( 119),E( 120)/'IUS ','IS G','REAT','ER T'/
      DATA E( 121),E( 122),E( 123),E( 124)/'HAN ','THE ','CUTT','ER R'/
      DATA E( 125),E( 126),E( 127),E( 128)/'ADIU','S.  ','VTLA','XS E'/
      DATA E( 129),E( 130),E( 131),E( 132)/'RROR','. CO','RNER',' RAD'/
      DATA E( 133),E( 134),E( 135),E( 136)/'IUS ','MUST',' BE ','ZERO'/
      DATA E( 137),E( 138),E( 139),E( 140)/' WHE','N US','ING ','ZSMA'/
      DATA E( 141),E( 142),E( 143),E( 144)/'LL. ','NO M','OTIO','N BE'/
      DATA E( 145),E( 146),E( 147),E( 148)/'TWEE','N A ','VTLA','XS/O'/
      DATA E( 149),E( 150),E( 151),E( 152)/'N AN','D A ','VTLA','XS/O'/
      DATA E( 153),E( 154),E( 155),E( 156)/'FF. ','TRAC','UT W','AS G'/
      DATA E( 157),E( 158),E( 159),E( 160)/'IVEN',' BET','WEEN',' A V'/
      DATA E( 161),E( 162),E( 163),E( 164)/'TLAX','S/ON',' AND',' ITS'/
      DATA E( 165),E( 166),E( 167),E( 168)/' COR','RESP','ONDI','NG  '/
      DATA E( 169),E( 170),E( 171),E( 172)/'VTLA','XS/O','FF. ','COPY'/
      DATA E( 173),E( 174),E( 175),E( 176)/' WAS',' GIV','EN B','ETWE'/
      DATA E( 177),E( 178),E( 179),E( 180)/'EN A',' VTL','AXS/','ON A'/
      DATA E( 181),E( 182),E( 183),E( 184)/'ND I','TS C','ORRE','SPON'/
      DATA E( 185),E( 186),E( 187),E( 188)/'DING','  VT','LAXS','/OFF'/
      DATA E( 189),E( 190),E( 191),E( 192)/'.   ','INCO','RREC','T MO'/
      DATA E( 193),E( 194),E( 195),E( 196)/'DIFI','ER I','N A ','COPY'/
      DATA E( 197),E( 198),E( 199),E( 200)/' COM','MAND','.   ','INDE'/
      DATA E( 201),E( 202),E( 203),E( 204)/'X NU','MBER',' NOT',' DEF'/
      DATA E( 205),E( 206),E( 207),E( 208)/'INED','.   ','INCO','RREC'/
      DATA E( 209),E( 210),E( 211),E( 212)/'T NU','MBER',' OF ','PARA'/
      DATA E( 213),E( 214),E( 215),E( 216)/'METE','RS I','N TH','E CO'/
      DATA E( 217),E( 218),E( 219),E( 220)/'PY C','OMMA','ND. ','THE '/
      DATA E( 221),E( 222),E( 223),E(224)/'PARA','METE','R ''N',''' IN'/
      DATA E( 225),E( 226),E( 227),E( 228)/' THE',' COP','Y IS',' ZER'/
      DATA E( 229),E( 230),E( 231),E( 232)/'O OR',' NEG','ATIV','E.  '/
      DATA E( 233),E( 234),E( 235),E( 236)/'MIRR','OR, ','MIRR','OR O'/
      DATA E( 237),E( 238),E( 239),E( 240)/'N TH','E WA','LL, ','YOU '/
      DATA E( 241),E( 242),E( 243),E( 244)/'ARE ','NOT ','ALLO','WED '/
      DATA E( 245),E( 246),E( 247),E( 248)/'AT A','LL. ','COPY',' LOG'/
      DATA E( 249),E( 250),E( 251),E( 252)/'IC E','RROR','. CH','ECK '/
      DATA E( 253),E( 254),E( 255),E( 256)/'PART',' PRO','GRAM',' FOR'/
      DATA E( 257),E( 258),E( 259),E( 260)/' OVE','RLAP','PING',' COP'/
      DATA E( 261),E( 262),E( 263),E( 264)/'Y AR','EAS ',' OR ','AN I'/
      DATA E( 265),E( 266),E( 267),E( 268)/'LLEG','AL T','RANS','FER '/
      DATA E( 269),E( 270),E( 271),E( 272)/'INTO',' COP','Y LO','OP. '/
      DATA E( 273),E( 274),E( 275),E( 276)/'COPY',' IS ','OVER',' 3 N'/
      DATA E( 277),E( 278),E( 279),E( 280)/'EST ','LEVE','LS. ','INDE'/
      DATA E( 281),E( 282),E( 283),E( 284)/'X NU','MBER',' PRE','VIOU'/
      DATA E( 285),E( 286),E( 287),E( 288)/'SLY ','USED','.   ','TOO '/
      DATA E( 289),E( 290),E( 291),E( 292)/'MANY',' IND','EX/N',' COM'/
      DATA E( 293),E( 294),E( 295),E( 296)/'MAND','S.  ','SYST','EM F'/
      DATA E( 297),E( 298),E( 299),E( 300)/'AILU','RE. ','POSI','TION'/
      DATA E( 301),E( 302),E( 303),E( 304)/'ING ','ERRO','R IN',' COP'/
      DATA E( 305),E( 306),E( 307),E( 308)/'Y LO','GIC.','  CH','ECK '/
      DATA E( 309),E( 310),E( 311),E( 312)/'COMP','UTER',' PRO','GRAM'/
      DATA E( 313),E( 314),E( 315),E( 316)/'MER.','    ','BAD ','PARA'/
      DATA E( 317),E( 318),E( 319),E( 320)/'METE','R IN',' THI','S CL'/
      DATA E( 321),E( 322),E( 323),E( 324)/'DAT ','STAT','EMEN','T.  '/
      DATA E( 325),E( 326),E( 327),E( 328)/'THE ','FIRS','T RE','CORD'/
      DATA E( 329),E( 330),E( 331),E( 332)/' NUM','BER ','GIVE','N IN'/
      DATA E( 333),E( 334),E( 335),E( 336)/' THE',' CLD','AT S','TATE'/
      DATA E( 337),E( 338),E( 339),E( 340)/'MENT',' WAS',' NOT','  FO'/
      DATA E( 341),E( 342),E( 343),E( 344)/'UND ','IN O','LD C','LFIL'/
      DATA E( 345),E( 346),E( 347),E( 348)/'E.  ','EXFI','LE F','ORMA'/
      DATA E( 349),E( 350),E( 351),E( 352)/'T ER','ROR.',' UNR','ECOG'/
      DATA E( 353),E( 354),E( 355),E( 356)/'NIZA','BLE ','COMM','AND.'/
      DATA E( 357),E( 358),E( 359),E( 360)/' FRA','ME S','IZE ','IS  '/
      DATA E( 361),E( 362),E( 363),E( 364)/'LESS',' THA','N ZE','RO I'/
      DATA E( 365),E( 366),E( 367),E( 368)/'N WI','DTH ','OR L','ENGT'/
      DATA E( 369),E( 370),E( 371),E( 372)/'H.  ','UNID','ENTI','FIED'/
      DATA E( 373),E( 374),E( 375),E( 376)/' POS','T PR','OCES','SOR '/
      DATA E( 377),E( 378),E( 379),E( 380)/'COMM','AND.','    ','THE '/
      DATA E( 381),E( 382),E( 383),E( 384)/'LAST',' REC','ORD ','NUMB'/
      DATA E( 385),E( 386),E( 387),E( 388)/'ER G','IVEN',' IN ','THE '/
      DATA E( 389),E( 390),E( 391),E( 392)/'CLDA','T ST','ATEM','ENT '/
      DATA E( 393),E( 394),E( 395),E( 396)/'WAS ','NOT ',' FOU','ND I'/
      DATA E( 397),E( 398),E( 399),E( 400)/'N OL','D CL','FILE','.   '/
      DATA E( 401),E( 402),E( 403),E( 404)/'INVA','LID ','CLFI','LE R'/
      DATA E( 405),E( 406),E( 407),E( 408)/'ECOR','D. R','UN T','ERMI'/
      DATA E( 409),E( 410),E( 411),E( 412)/'NATE','D.  ','NO C','OPY '/
      DATA E( 413),E( 414),E( 415),E( 416)/'TRAN','SFOR','MATI','ON H'/
      DATA E( 417),E( 418),E( 419),E( 420)/'AS B','EEN ','PERF','ORME'/
      DATA E( 421),E( 422),E( 423),E( 424)/'D BE','CAUS','E AN',' ERR'/
      DATA E( 425),E( 426),E( 427),E( 428)/'OR  ','HAS ','OCCU','RED '/
      DATA E( 429),E( 430),E( 431),E( 432)/'INSI','DE T','HE C','OPY '/
      DATA E( 433),E( 434),E( 435),E( 436)/'LOOP','.   ','THE ','LIMI'/
      DATA E( 437),E( 438),E( 439),E( 440)/'T ON',' THE',' NUM','BER '/
      DATA E( 441),E( 442),E( 443),E( 444)/'OF L','ENGT','H OF',' POS'/
      DATA E( 445),E( 446),E( 447),E( 448)/'TPRO','CESS','OR T','YPE '/
      DATA E( 449),E( 450),E( 451),E( 452)/' COM','MAND','S AF','TER '/
      DATA E( 453),E( 454),E( 455),E( 456)/'A HO','LDPP',' COM','MAND'/
      DATA E( 457),E( 458),E( 459),E( 460)/' HAS',' BEE','N EX','CEED'/
      DATA E( 461),E( 462),E( 463),E( 464)/'ED. ','THE ','FOLL','OWIN'/
      DATA E( 465),E( 466),E( 467),E( 468)/'G VT','LAXS',' SEQ','UENC'/
      DATA E( 469),E( 470),E( 471),E( 472)/'E HA','S NO','T BE','EN P'/
      DATA E( 473),E( 474),E( 475),E( 476)/'ROCE','SSED',' BEC','AUSE'/
      DATA E( 477),E( 478),E( 479),E( 480)/'  AN',' ARE','LEM ','ERRO'/
      DATA E( 481),E( 482),E( 483),E( 484)/'R HA','S OC','CURR','ED W'/
      DATA E( 485),E( 486),E( 487),E( 488)/'ITHI','N IT','.   ','AN A'/
      DATA E( 489),E( 490),E( 491),E( 492)/'RELE','M RE','STAR','T ER'/
      DATA E( 493),E( 494),E( 495),E( 496)/'ROR ','HAS ','CAUS','ED C'/
      DATA E( 497),E( 498),E( 499),E( 500)/'L PR','INTO','UT S','TART'/
      DATA E( 501),E( 502),E( 503),E( 504)/'ING ','AT T','HE  ','CL P'/
      DATA E( 505),E( 506),E( 507),E( 508)/'OINT',' PRE','CEDI','NG T'/
      DATA E( 509),E( 510),E( 511),E( 512)/'HE E','RROR',' INF','ORMA'/
      DATA E( 513),E( 514),E( 515),E( 516)/'TION','.   ','ERRO','NEOU'/
      DATA E( 517),E( 518),E( 519),E( 520)/'S UN','ITS ','COMM','AND.'/
      DATA E( 521),E( 522),E( 523),E( 524)/'    ','TOO ','EXTE','NSIV'/
      DATA E( 525),E( 526),E( 527),E( 528)/'E CO','PY C','OMMA','NDS,'/
      DATA E( 529),E( 530),E( 531),E( 532)/' COM','MON ','NCFS','TO T'/
      DATA E( 533),E( 534),E( 535),E( 536)/'OO S','MALL',': SU','BDIV'/
      DATA E( 537),E( 538),E( 539),E( 540)/'IDE ',' COP','Y-SE','QUEN'/
      DATA E( 541),E( 542),E( 543),E( 544)/'CE, ','OR I','NCRE','ASE '/
      DATA E( 545),E( 546),E( 547),E( 548)/'NCFS','TO-S','TORA','GE ('/
      DATA E( 549),E( 550),E( 551),E( 552)/'SYST','EM P','ROGR','AMME'/
      DATA E( 553),E( 554),E( 555),E( 556)/'R). ','COPY',' OR ','TRAC'/
      DATA E( 557),E( 558),E( 559),E( 560)/'UT P','ROCE','SSIN','G FO'/
      DATA E( 561),E( 562),E( 563),E( 564)/'R EX','TEND','ED C','LDAT'/
      DATA E( 565),E( 566),E( 567),E( 568)/'A FO','RMAT','S NO','T MO'/
      DATA E( 569),E( 570)/'UNTE','D.  '/
C
      END
**** SOURCE FILE : M0000444.V04   ***
*
C
C....FORTRAN SUBROUTINE  ...CLED...       11/69                  HG
      SUBROUTINE CLED
C
C         PURPOSE           ...TO CALL APT301
C
C         CALLING SEQUENCE  ...THIS IS THE MAIN PROGRAM OF THE CLEDITOR
C
C         ARGUMENTS         ...NONE
C
C         CALLED BY         ...NONE
C
C         SUBSIDIARIES      ...TYPE...      ...ENTRY...
C
C                           SUBROUTINE         APT301
C
C         RESTRICTIONS      ...NONE
C
C         DIAGNOSTICS       ...NONE
C....
C
C
C
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR
C
      INCLUDE (SUPER)    
C
C
      INCLUDE (SYMFIL)    
      CALL  APT301
C....    INDICATE NORMAL ENDING
      ABEND=.FALSE.
C
      RETURN
      END
**** SOURCE FILE : M0004176.V02   ***
*
C
C
C.....FORTRAN SUBROUTINE             CLEROR...
C
C PURPOSE      TO PRINT DIAGNOSTICS
C
C LINKAGE      CALL CLEROR(NERR)
C
C ARGUMENTS    NERR       INTEGER ERROR NUMBER
C
C
      SUBROUTINE CLEROR(NERR)
C
C...                ...ERROR DIAGNOSTICS
C
      INCLUDE (EXERR)    
C
      CHARACTER B*120,NOTEXT*54
C
      DATA B/'                                                       ' /
      DATA NOTEXT/'THERE IS NO DIAGNOSTIC MESSAGE FOR THIS ERROR NUMBER
     * '/
C
C...     POSITION OF THE CURRENT ERROR NUMBER
C
      I=0
      NUMMIN=1
      NUMMAX=ERRDM
      NUMBER=IABS(NERR)
   10 NUMMER=(NUMMIN+NUMMAX)/2
      NUMB=ERRAD1(NUMMER)
      IF(I.GT.ERND)GOTO  40
      I=I+1
      IF(NUMBER-NUMB)30,60,20
   20 NUMMIN=NUMMER+1
      GOTO 10
   30 NUMMAX=NUMMER-1
      GOTO 10
   40 CALL CFORM(NOTEXT,B,14,54)
      CALL CPRINT(B)
      GOTO 150
C
   60 KK=ERRAD2(NUMMER)
      IF (NUMMER.EQ.1) THEN
        II=1
      ELSE
        II=ERRAD2(NUMMER-1)+1
      END IF
C
      K=10
      DO 70 I=II,KK
        IF (K.GE.113) THEN
          CALL CPRINT(B)
          K=10
        END IF
        K=K+4
        B(K:K+3)=ERRTXT(I)
   70 CONTINUE
      CALL CPRINT(B)
C
  150 RETURN
C
      END
**** SOURCE FILE : M0011539.W03   ***
*
C
C......    FORTRAN SUBROUTINE CNVRT3    11/69    RC
C.....FORTRAN SUBROUTINE                CNVRT3...            8/1/68  AR
C PURPOSE          TO CONVERT EXFILE RECORDS INTOAPTIII FORMAT AND
C                  WRITE THEM ON CLFIL3.
C
C CALLING SEQUENCE CALL CNVRT3(MLTFLG)
C
C ARGUMENTS        MLTFLG     MULTAX FLAG-0,IF OFF
C                                         1,IF ON
C
C CALLED BY        APT301
C
C SUBSIDIARIES     NONE
C
C DIAGNOSTICS      ERROR CODE   COMMENT
C                  ----------   -------
C                               UNIDENTIFIED POSTPROCESSOR COMMAND---
C                               XXXXXX. SEQUENCE NO. NNNNNN.
C
C                               UNIDENTIFIED MODIFIER--- XXXXXX.
C                               SEQUENCE NO. NNNNNN.
C
C METHOD           THE CURRENT EXFILE RECORD IN THE RECORD ARRAY IS
C                  EXAMINED AND THE APPROPRIATE APTIII CLTAPE RECORDS
C                  ARE WRITTEN ON CLFIL3.
C
C*********************************************************************
C
      SUBROUTINE  CNVRT3(MLTFLG)
      IMPLICIT  DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))
C
      EQUIVALENCE (AREA2(94),NUMCLD)
      DIMENSION  RECORD(256),IRECRD(256),JRECRD(512)
      EQUIVALENCE  (EDITOR(1),IRECRD(1),RECORD(1),JRECRD(1))
      EQUIVALENCE  (JRECRD(6),NUMWDS)
      DOUBLE PRECISION  IRECRD
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE (SYMFIL)    
C
C
      COMMON/I5AXIS/
     1 IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV
C
C... LOCAL VARIABLES
C
      CHARACTER*6 RECTYP,PPNAME,PMNAME,PARAM,PM0,PM1,
     1            PAR0,PAR1,PAR2,PAR3,SPLWDS
      DIMENSION  IRXXXX(515),RXXXX(256),IR1000(7),R1000(2),RECTYP(10),
     1           PPNAME(22),PMNAME(100),PARAM(200),IJK(2),PM0(50),
     2           PM1(50),PAR0(50),PAR1(50),PAR2(50),PAR3(50),SPLWDS(20)
      CHARACTER*6 PP2(2),PM2(8),PAR4(7)
      INTEGER     IPP2(2),IPM2(8),IPAR4(7)
      CHARACTER*8 BLANK,SCALIN(4),TEST8
      CHARACTER*6 OFF,FROM,GODLTA,SCALWD,TEST,ATEST
      EQUIVALENCE  (IJK(2),IRXXXX(1)),(IRXXXX(4),RXXXX(1)),
     1             (IRXXXX(3),SUBTYP),(IR1000(4),R1000(1)),
     3             (PMNAME(1),PM0(1)),(PMNAME(51),PM1(1)),
     3             (PARAM(1),PAR0(1)),(PARAM(51),PAR1(1)),
     4             (PARAM(101),PAR2(1)),(PARAM(151),PAR3(1))
      INTEGER BCDF
      INTEGER  SUBTYP,SUBCLS
      CHARACTER    RCDCHR*1000,BLK,CHAR*8,BLK2*2,BLK4*4
      EQUIVALENCE  (BLK,BLANK),(BLK2,BLANK),(BLK4,BLANK)
      LOGICAL  MULTAX
C
C...     RECORD TYPES AND POST PROCESSOR SUBCLASS WORDS
C
      DATA  RECTYP /'FINI  ','AERR  ','GERR  ','MULTAX','CLDATA',
     1              'CLPRNT','CLDAT ','      ','      ','      '/
C
      DATA  SPLWDS /'CUT   ','2DCALC','******','INTOL ','OUTTOL',
     1              'CUTTER','******','******','DYNDMP','******',
     2              'DNTCUT','3DCALC','TOLER ','THICK ','MAXDP ',
     3              'NUMPTS','GOUGCK','POCKET','******','******'/
C
C
      DATA  PPNAME /'END   ','STOP  ','OPSTOP','ISTOP ','RAPID ',
     1              'SWITCH','RETRCT','DRESS ','PICKUP','UNLOAD',
     2              'PENUP ','PENDWN','ZERO  ','CODEL ','RESET ',
     3              'GOCLER','DRAWLI','PROBY ','PROBX ','ULOCKX',
     4              'LOCKX ','FACEML'/
      DATA PP2/'GOHOME','BREAK '/
      DATA IPP2/   14,    17  /
      DATA  PM0    /'PLUNGE','HEAD  ','MODE  ','CLEARP','TMARK ',
     1              'REWIND','CUTCOM','REVERS','FEDRAT','DELAY ',
     2              'AIR   ','OPSKIP','LEADER','PPLOT ','MACHIN',
     3              'MCHTOL','PIVOTZ','MCHFIN','SEQNO ','INTCOD',
     4              'DISPLY','AUXFUN','CHECK ','POSTN ','TOOLNO',
     5              'ROTABL','ORIGIN','SAFETY','ARCSLP','COOLNT',
     6              'SPINDL','IFRO  ','TURRET','*1034*','ROTHED',
     7              'THREAD','TRANS ','TRACUT','INDEX ','COPY  ',
     8              'PLOT  ','OVPLOT','LETTER','PPRINT','PARTNO',
     9              'INSERT','CAMERA','PREFUN','COUPLE','PITCH '/
      DATA  PM1      /'MDWRIT','MDEND ','ASLOPE','CYCLE ','LOADTL',
     1              'SELCTL','CLRSRF','DWELL ','DRAFT ','CLAMP ',
     2              'PLABEL','MAXDPM','SLOWDN','MAXVEL','LPRINT',
     3              'MOVETO','CORNFD','PBS   ','REGBRK','VTLAXS',
     4              'WCORN ','MAGTAP','*1073*','*1074*','*1075*',
     5              '*1076*','*1077*','*1078*','*1079*','*1080*',
     6              '*1081*','*1082*','*1083*','*1084*','*1085*',
     7  15*'      '/
      DATA PM2/'DELETE','PPLOT','WRTMDI','ENDMDI','POSMAP',
     1              'DEBUGG','LINTOL','******'/
      DATA IPM2/ 1012,  1014  ,  1051  ,  1052  ,   1068 ,
     1                 1032,  1067  ,     0  /
      DATA PAR0    /'ATANGL','CENTER','CROSS ','FUNOFY','INTOF ',
     1              'INVERS','LARGE ','LEFT  ','LENGTH','MINUS ',
     2              'NEGX  ','NEGY  ','NEGZ  ','NOX   ','NOY   ',
     3              'NOZ   ','PARLEL','PERPTO','PLUS  ','POSX  ',
     4              'POSY  ','POSZ  ','RADIUS','RIGHT ','SCALE ',
     5              'SMALL ','TANTO ','TIMES ','TRANSL','UNIT  ',
     6              'XLARGE','XSMALL','XYPLAN','XYROT ','YLARGE',
     7              'YSMALL','YZPLAN','YZROT ','ZLARGE','ZSMALL',
     8              'ZXPLAN','ZXROT ','3PT2SL','4PT1SL','5PT   ',
     9              'INTERC','SLOPE ','IN    ','OUT   ','OPEN  '/
      DATA  PAR1     /'ALL   ','LAST  ','NOMORE','SAME  ','MODIFY',
     1              'MIRROR','START ','ENDARC','CCLW  ','CLW   ',
     2              'MEDIUM','HIGH  ','LOW   ','CONST ','DECR  ',
     3              'INCR  ','GRID  ','ROTREF','TO    ','PAST  ',
     4              'ON    ','OFF   ','IPM   ','IPR   ','CIRCUL',
     5              'LINEAR','PARAB ','RPM   ','MAXRPM','TURN  ',
     6              'FACE  ','BORE  ','BOTH  ','XAXIS ','YAXIS ',
     7              'ZAXIS ','NORMDS','AUTO  ','FLOOD ','MIST  ',
     8              'TAPKUL','STEP  ','MAIN  ','SIDE  ','LINCIR',
     9              'MAXIPM','REV   ','TYPE  ','NIXIE ','LIGHT '/
      DATA PAR2    /'FOURPT','TWOPT ','PTSLOP','PTNORM','SPLINE',
     1              'RTHETA','THETAR','XYZ   ','TANON ','TRFORM',
     2              'NORMAL','UP    ','DOWN  ','LOCK  ','SFM   ',
     3              'XCOORD','YCOORD','ZCOORD','MULTRD','XYVIEW',
     4              'YZVIEW','ZXVIEW','SOLID ','DASH  ','DOTTED',
     5              'CTRLIN','DITTO ','PEN   ','SCRIBE','BLACK ',
     6              'RED   ','GREEN ','BLUE  ','INTENS','LITE  ',
     7              'MED   ','DARK  ','CHUCK ','COLLET','AAXIS ',
     8              'BAXIS ','CAXIS ','TPI   ','OPTION','RANGE ',
     9              'PSTAN ','RANDOM','FRONT ','REAR  ','SADDLE'/
      DATA PAR3      /'MILL  ','THRU  ','DEEP  ','TRAV  ','SETOOL',
     1              'SETANG','HOLDER','MANUAL','ADJUST','CUTANG',
     2              'NOW   ','NEXT  ','DRILL ','BINARY','BCD   ',
     3              'PART  ','REAM  ','TAP   ','CAM   ','NOCLRP',
     4              'REGTOL','TRAVED','MAXWD ','MAXLNG','SPIRAL',
     5              'ANTSPI','ZIGZAG','NOBND ','MAXPTS','GAPLES',
     6              '**181*','ARC   ',' *183*','RETAIN','ZIGZAG',
     7              'OMIT  ','AVOID ',' *188*','AT    ',' *190*',
     8              ' *191*',' *192*',' *193*',' *194*',' *195$',
     9              ' *196*',' *197*',' *198*',' *199*',' *200*'/
      DATA PAR4/'PITCH','RAIL','FULL','SAVMDI','SAVTDI','MMPM','MMPR'/
      DATA IPAR4/ 67   ,  93  , 147  ,   398  ,   396  ,   171,  172/
      DATA IR1000(2)/1000/
      DATA IRCOLD/-1/
      DATA  BLANK,OFF,MULTAX,FROM,GODLTA /'        ','OFF   ',.FALSE.,
     1 'FROM  ','GODLTA'/
      DATA  NNN/0/
      DATA SCALIN /'MM      ','CM      ','INCHES  ','FEET    '/
      DATA SCALWD /'UNITS '/
      DATA I3000/0/
C     --------------------------------------------------------
C
      KKIX=0
      IF (NNN .NE. 0) GO TO 3
      DO 1 I=4,7
        IR1000(I)=BCDF(BLK4)
    1 CONTINUE
C...     STORE SEQUENCE NUMBER AND INITIALIZE
    3 ISEQ=JRECRD(4)
      IR1000(3)=ISEQ-(ISEQ/10000)*10000
      IRXXXX(1)=ISEQ/10000
      IRXXXX(3)=0
      DO 10  I = 1,5
   10 RXXXX(I) = 0.D0
      IX = 0
C
C...     BRANCH ON RECORD TYPE
      CALL HOLFRM(RECORD(1),TEST,1,6,NWD)
      DO 100  IT=1,10
      IF (TEST .NE. RECTYP(IT)) GO TO 100
      GO TO (300,350,400,500,1000, 450,9999,9999,9999,9999), IT
  100 CONTINUE
C
C...     CHECK FOR SPECIAL WORDS--SPECIAL PROCESSING NEEDED
      DO 105 KK=1,20
      IF (TEST .EQ. SPLWDS(KK)) GO TO 600
  105 CONTINUE
C
C...     *** POSTPROCESSOR TYPE COMMANDS***
      IF(TEST.EQ.SCALWD) GO TO 605
      IRXXXX(2) = 2000
      CALL HOLFRM(RECORD(5),TEST8,1,8,NWD)
      IF ((JRECRD(6) .NE. 2) .OR. (TEST8 .NE. BLANK))  GO TO 140
      DO 110 SUBTYP = 1,22
      IF (TEST .EQ. PPNAME(SUBTYP))  GO TO 9000
  110 CONTINUE
      DO 111 I = 1,2
      SUBTYP=IPP2(I)
      IF(TEST.EQ.PP2(I))GOTO 9000
  111 CONTINUE
C
  140 DO 150  SUBTYP = 1001,1100
      IF (TEST .EQ. PMNAME(SUBTYP-1000))  GO TO 160
  150 CONTINUE
      DO 151 I=1,8
      SUBTYP=IPM2(I)
      IF(TEST.EQ.PM2(I))GOTO 160
  151 CONTINUE
C
C...     UNIDENTIFIED POSTPROCESSOR COMMAND--ISSUE ERROR MESSAGE
      CALL APT336(30030,'CNVRT3  ')
      GO TO 9999
C
  160 IR = 4
      LR=NUMWDS+3
      IF (JRECRD(8) .EQ. 3 .AND. JRECRD(12) .EQ. 0)  IX=1
  170 IX = IX + 1
      IT=JRECRD(IR*2)
      GO TO (180,190,230,225), IT
C...     ***  TYPE 1 --- FLOATING POINT DATA ITEM PAIR
  180 RXXXX(IX) = RECORD(IR+1)
      GO TO 250
C...     ***  TYPE 2 --- ALPHANUMERIC DATA ITEM PAIR
  190 CALL HOLFRM(RECORD(IR+1),ATEST,1,6,NWD)
      DO 200  I = 1,200
      IF (ATEST .EQ. PARAM(I))  GO TO 220
  200 CONTINUE
      DO 201 J=1,7
      I=IPAR4(J)
      IF(ATEST.EQ.PAR4(J))GOTO 220
  201 CONTINUE
      CALL HOLFRM(RECORD(IR+1),RCDCHR,1,8,NWD)
      CHAR=BLANK
      N=6
      DO 210  I = 6,1,-1
      IF (RCDCHR(I:I) .EQ. BLK) GO TO 210
      CHAR(N:N) = RCDCHR(I:I)
      N = N - 1
  210 CONTINUE
      IRXXXX(2*IX+2) = BCDF(CHAR(1:4))
      IRXXXX(2*IX+3) = BCDF(CHAR(5:8))
      GO TO 250
  220 MM=2*IX+2
      IRXXXX(MM) = 0
      IRXXXX(MM+1) = I
      GO TO 250
C...     ***  TYPE 4 --- GEOMETRIC VARIABLE
  225 M=JRECRD((IR+1)*2)
      DO 227  I=1,M
      J=IX+I-1
      RXXXX(J)=RECORD(IR+I+1)
  227 CONTINUE
      IX=J
      IR=IR+M
      GO TO 250
C...     ***  TYPE 3 --- ALPHANUMERIC LITERAL STRING
  230 M = JRECRD((IR+2)*2)
      RCDCHR=BLANK
      CALL HOLFRM(RECORD(IR+3),RCDCHR,1,M,NWD)
      N=M/6
      IF (M.GT.N*6) N=N+1
      I=1
      DO 232  KIX=1,N
      CHAR=RCDCHR(I:I+5)//BLK2
      IRXXXX(2*IX+2) = BCDF(CHAR(1:4))
      IRXXXX(2*IX+3) = BCDF(CHAR(5:8))
      IX=IX+1
      I=I+6
  232 CONTINUE
      DO 240  KIX = IX,12
      IRXXXX(2*IX+2) = BCDF(BLANK)
      IRXXXX(2*IX+3) = BCDF(BLANK)
      IF (SUBTYP.GE.1044.AND.SUBTYP.LE.1046)KKIX=11
  240 CONTINUE
      IR = IR + JRECRD((IR+1)*2)
  250 IR = IR + 2
  260 IF (IR.LT.LR)  GOTO 170
      GOTO 9000
               
C...     FINI RECORD...
  300 IRXXXX(2) = 14000
      IF (NNN.EQ.0)RETURN
      GO TO 9000
C
C...     AERR RECORD -- STORE PREVIOUS SEQUENCE NUMBER
  350 IF (JRECRD(4) .NE. 1) GO TO 9999
      IR1000(3)=ISVSEQ-(ISVSEQ/10000)*10000
      IRXXXX(1)=ISVSEQ/10000
C...     GERR RECORD
  400 IRXXXX(2)=13000
      IRXXXX(3) = 3
      IRXXXX(5) = JRECRD(8)
  410 IX=1
      IRXXXX(4)=0
      GO TO 9000
C...     CLPRNT RECORD.....SET ON OR OFF
  450 IRXXXX(2)=13000
      IRXXXX(3)=4
      IRXXXX(5)=1
      CALL HOLFRM(RECORD(5),TEST,1,6,NWD)
      IF (TEST .EQ. OFF) IRXXXX(5)=0
      GO TO 410
C...     MULTAX RECORD -- SET MULTAX FLAG
  500 IRXXXX(2) = 9000
      IRXXXX(3) = 2
      IRXXXX(4)=0
      IRXXXX(5) = 1
      CALL HOLFRM(RECORD(5),TEST,1,6,NWD)
      IF(TEST.EQ.OFF)IRXXXX(5)=0
      MULTAX = .FALSE.
      IF (IRXXXX(5) .EQ. 1)  MULTAX = .TRUE.
      GO TO 410
  605 IRXXXX(2)=9000
      IRXXXX(3)=9
      CALL HOLFRM(RECORD(5),TEST8,1,8,NWD)
      DO 601 I=1,4
      IF(TEST8.EQ.SCALIN(I)) GO TO 603
  601 CONTINUE
C...     ERROR 30038 -- ERRONEOUS UNITS COMMAND
      CALL APT336(30038,'CNVRT3  ')
      GO TO 9999
  603 IRXXXX(5)=I
      GO TO 410
C
C...     ********* CLDATA RECORDS *********
 1000 IF(JRECRD(8)-2) 1010,1030,1030
 1010 SUBCLS = 5
      CALL HOLFRM(RECORD(5),ATEST,1,6,NWD)
      IF (ATEST .EQ.FROM)  SUBCLS = 3
      SAVNAM = RECORD(7)
      SAVSUB = RECORD(8) + .0
      IF(JRECRD(6).LE.6) GO TO 9997
      IX =12
C...     SAVE CIRCLE CANONICAL FORM
      IRXXXX(2) = 3000
      IRXXXX(3) = 2
      IRXXXX(7) = 4
      IRXXXX(9)=9
      RXXXX(4) = RECORD(7)
      RXXXX(5) = RECORD(8)
      DO 1020 I=6,12
1020  RXXXX(I)=RECORD(I+4)
      GO TO 9000
C
C...     SAVE CUTTER LOCATION POINTS
 1030 IRXXXX(2) = 5000
      IRXXXX(3) = SUBCLS
      NSAVE=NNN
      SBCLSV=SUBCLS
      SUBCLS = 6
      RXXXX(1) = SAVNAM
      RXXXX(2) = SAVSUB
      I = 3
      MM=4
      IF (MULTAX) MM=7
      DO 1070  J = 1,NUMWDS
      IF (( (J+1) - ((J-1)/MM * MM) )/3 - 1) 1070,1050,1050
 1050 RXXXX(I) = RECORD(J+3)
      I = I + 1
 1070 CONTINUE
      IX =I - 1
      IF (IRXXXX(3) - 5)  9010,9010,9100
 9000 IF (KKIX .GE. 11)  IX=KKIX
 9010 IF(I3000.EQ.1) GO TO 9050
      IF(IR1000(3).EQ.IRCOLD) GO TO 9100
      NNN=NNN+1
      IRCOLD=IR1000(3)
      IR1000(1) = NNN
      CALL ATAPWT(CLFIL3,IRET,2,IR1000,3,R1000,2)
 9050 I3000=0
 9100 NNN = NNN + 1
      IRXXXX(1) = NNN
C...     CALCULATE CLFIL3 RECORD NUMBER TO LIST ON VLFILE
      ISEQ=IR1000(3)+NNN*10000
      JRECRD(4)=ISEQ
      IF (IX .EQ. 0) GO TO 9200
      IF(IRXXXX(2).EQ.3000) I3000=1
      CALL ATAPWT(CLFIL3,IRET,2,IRXXXX,3,RXXXX,IX)
      GO TO 9998
 9200 CALL ATAPWT(CLFIL3,IRET,1,IRXXXX,3,DUM,1)
 9998 IF (IRXXXX(2) .NE. 14000) GO TO 9999
      CALL ATAPOP(CLFIL3,2,IRET)
      CALL ATAPOP(CLFIL3,1,IRET)
      GO TO 9999
C
C...     ***** SPECIAL POSTPROCESSOR TYPE RECORDS *****
  600 IF (KK .GT. 11) GO TO 9999
      IRXXXX(2)=6000
      GO TO (610,9999,9999,620,620, 620,9999,9999,9999,9999, 610),KK
C
C...     ARELEM FLAGS-CUT,DNTCUT
  610 IRXXXX(3)=KK-KK/10*10
      IRXXXX(5)=0
      IF (KK .GT. 10) IRXXXX(5)=1
      IX=1
      GO TO 410
C
C...     ARELEM DATA ITEMS-CUTTER,INTOL,OUTTOL
  620 IRXXXX(3)=KK
      LR=NUMWDS+3
      DO 625  I=5,LR,2
      IX=I/2-1
      RXXXX(IX)=RECORD(I)
  625 CONTINUE
      GO TO 9000
C
C...     SAVE SEQUENCE NUMBER IF NOT AERR TYPE RECORD
 9997 I=NNN+2
      IF (IR1000(3).EQ.IRCOLD)I=I-1
      JRECRD(4)=IR1000(3)+10000*I
 9999 IF (TEST .NE. RECTYP(2)) ISVSEQ=JRECRD(4)
      RETURN
      END
