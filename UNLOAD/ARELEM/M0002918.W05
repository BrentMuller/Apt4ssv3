*
C.....FORTRAN SUBROUTINE  ....AMIND          8/68                 PH,HG
      SUBROUTINE AMIND
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE (TOTAL)
      INCLUDE (DSHAR4)
      INCLUDE (FXCOR)
      INCLUDE (SV)
      INCLUDE (ISV)
      INCLUDE (IFXCOR)
      INCLUDE (ISHR18)
C
C...  21. ADDCOM BLOCK
      COMMON/ADDCOM/ ADDCOM
      DIMENSION ADDCOM(25)
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),
     2            (ADDCOM(25),KDYNFL)
C
      INCLUDE (BLANKCOM)
C
      DIMENSION TPSAV(3),TNSAV(3),SPSAV(3),SNSAV(3),U1SAV(3)
      COMMON/MODESS/MODESS,MSSCHK,MSSARL
      DIMENSION OLDU1(3),TE1(3)
C
      INCLUDE (CHEKFL)
      INCLUDE (CGOUG)
      CHARACTER*70 MSG
      INCLUDE (CSTART)
C
      DATA ONE,ZERO,ZLIT1,ZLIT2/1.0D0,0.0D0,.99995D0,.995D0/
      DATA ZLIT5/0.99D0/
      DATA Z2,Z9EM1/2.0D0,0.9D0/
C
C------------AMIND - FIND MINIMUM DISTANCE FROM CUTTER TO SURFACE.
C             /-IC IS INDEX TO THE CANON FORM OF IS SURFACE
      IC=ICANON(IS)
C             /-SPECIAL LOGIC FOR SSURF ONLY.  A FAST LOGIC IS
C             /-USED FOR POINT AND BALL CUTTERS AT TIMES ON SSURFS
C             /-MSSCHK SET TO 1 FOR SPECIAL LOGIC, 0 FOR NORMAL
      FLIPMX = ZERO
      FLIPAB = ZERO
      SSAV=1.0D5
      SMODS=1.0D5
      MODESS=0
      MSSCHK=0
      ISTART=0
      UVDIST=ZERO
      DIST=ZERO
      IF(MSSARL.NE.1) GO TO 1101
      IF(ISFIDN(IS).NE.29) GO TO 1101
C             /-JTLFLG IS 1 IF 8 TH CUTTER SEGMENT RQD, 0 OTHERWISE.
      IF(JTLFLG(IS).EQ.1) GO TO 1101
      W1=CUTDAT(2)-CUTDAT(1)
      IF(DABS(W1).GT.0.0001D0) GO TO 1101
      MSSCHK=1
 1101 CONTINUE
      ICBOT=IC-1
C             /-JMIN SWITCH=1 FOR ERR IN AMIND, =0 OTHERWISE
C             /-IAMDCT IS COUNT OF NUMBER OF ITERATIONS WITHIN AMIND
      JMIN=0
      IAMDCT=0
C
C             /-SAVE TN ONLY FOR CHECK SURFACES
      IF(IS.LT.ICS) GO TO 1102
      DO 1105 I=1,3
      TNL(I,IS)=TN(I,IS)
 1105 CONTINUE
 1102 IF(KDYNFL.NE.0) CALL APT238(3)
C              /-DYNDMP(103) --------.
C             /-REPLACE TOOL BY POINT TOOL AT TP(IT) IF TANGENT
C             /-CS IS BEING REFERENCED.
C             /-IOP=1 FOR SMALLEST POSITIVE DIRECTED DISTANCE
C             /-IOP=0 FOR SMALLEST ABSOLUTE DIRECTED DISTANCE
      IOP(IS)=0
C             /-ITLON=0 FOR TOOL ON THIS SURF, =1 OTHERWISE
      ITLON1=ITLON(IS)
      DO 1103 I=1,3
 1103 TE1(I)=TE(I)
C             /-ITLON -2 MEANS FIND DIST FROM DS CONTACT PT TO SURF
C             /-ITLON=-3 MEANS FIND DIST FROM PS CONTACT PT TO SURF
C             /-THESE CASES ARE FORCED BY CHANGING TE TO TP AND TOOL ON.
      IF(ITLON(IS).LT.2) GO TO 1104
      IF(ITLON(IS).EQ.2) K=IDS
      IF(ITLON(IS).EQ.3) K=IPS
      ITLON(IS)=0
C             /-TE IS THE CURRENT TOOL END AND VT IS THE VECTOR FROM THE
C             /-TO THE CONTACT POINT ON THE CUTTER WITH THE SURFACE.
      DO 1107 I=1,3
      TE(I)=TP(I,K)-TH(K)*TN(I,K)
      VT(I,IS)=ZERO
 1107 CONTINUE
C
C             /-FOR INITIAL ENTRY FOR A GIVEN SURFACE,JENT=1. THEN
C             /-FOLLOW INITIAL ENTRY ROUTES. START WITH TP = TM.
 1104 CONTINUE
C
C     SPECIAL HANDLING WHEN GFLG=1
C
      IF (GFLG.GT.ZERO) THEN
        CFAKT=ONE
        GFLG=-ONE
77008   CONTINUE
        DO 7008 I=1,3
          TP(I,IS)=TE(I)+CFAKT*CUTDAT(1)*TI(I)
C.... SAVE TN
          TNSAV(I)=TN(I,IS)
 7008   CONTINUE
        ITSEG(IS)=IBEGIN
        MODESS=11
        CALL AJUNDD
        MODESS=0
C
C.... TN,SN TROUBLE ? (ITNCHG=1)
C
        IF (ITNCHG.EQ.0) THEN
          GOTO 252
        ELSE
          DO 77011 I=1,3
            TN(I,IS)=TNSAV(I)
77011     CONTINUE
          IF (CFAKT.LT.0.3D0) THEN
            GOTO 252
          ELSE
            CFAKT=CFAKT-0.1D0
            GOTO 77008
          ENDIF
        ENDIF
      ENDIF
C-----------------------------------------------
C             /-JENT =1 FOR FIRST ENTRY TO AMIND, 0 OTHERWISE.
      IF(JENT(IS).EQ.0) GO TO 2012
C             /-INITIAL ENTRY - CONSTRUCT FIRST TP IN MIDDLE OF CUTTER
      W1=CUTDAT(7)/2.0
      IF(MSSCHK.EQ.1) W1=CUTDAT(2)
      DO 1108 I=1,3
      TM(I)=TE(I)+W1*TA(I)
      TP(I,IS)=TM(I)
 1108 CONTINUE
C
      BLONGD=2.0D0*W1
      IF (BLONGD.LT.15.0D0) BLONGD=1.D5
C
C             /-Z ADJUSTS SURFACE NORMAL TO POINT TO CUTTER SIDE
C             /-RC IS THE RADIUS OF CURVATURE AT THE SURFACE POINT.
C             /-RC1 INITIALLY 4500 INCHES(ENGLISH UNITS)
      RC(IS)=RC1
      Z(IS)=ONE
C
C             /-IAFL = 0 IF PS PLANE PERPTO TA,OR DS,CS PLANE LL TA.
C             /-IAFL = 1 IF SURF LINE ELEMENT LL TA
C             /-IAFL = -1 OTHERWISE
C             /-FOLLOW SPECIAL ANALYTIC ROUTE FOR IAFL = 0
      IF(IAFL(IS).EQ.0) GO TO 202
      IF(IAFL(IS).GT.0) GO TO 1109
C             /-SINCE IAFL IS LT 0, SET TOOL SEG TO FIRST SEG.
      ITSEG(IS)=IBEGIN
      GO TO  251
 1109 CONTINUE
C             /-IAFL(IS) IS GT 0, SO SET TP TO TOP OF TOOL
C             /-TOOLHT ARE TOOL TOP COORDS(HT*TA)- RELATED TO SURFACE
      DO 1111 I=1,3
 1111 TP(I,IS)=TE(I)+TOOLHT(I,IS)
C
  251 CONTINUE
C             /-INITIAL ENTRY ROUTE,NORMAL CASE. PROBLEM IS TO SET
C             /-SIGN OF SN(IS) AND HENCE Z(IS) CORRECTLY.
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.
C             /-USE TP,TN TO FIND SP,SN,S SO THAT TP+S*TN=SP
      MODESS=11
      CALL AJUNDD
      MODESS=0
C
  252 CONTINUE
      IAMDCT=1
C***       BRANCH TO 2999 ON FATAL ERROR
       IF(IAERR.NE.0) GO TO 2999
C             /-JTN FLAG IS 1 FOR TN CONTROL OF SURFACE(LIKE CS)
C             /-JTN FLAG IS SET TO 0 FOR SN CONTROL(LIKE PS,DS)
      IF(JTN(IS).EQ.0) GO TO 1110
C             /-TN CONTROL CASE, SET TN TO CURRENT SURF NORMAL , GO ON
      DO 1115 I=1,3
      TN(I,IS)=SN(I,IS)
 1115 CONTINUE
      GO TO 2009
C
 1110 CONTINUE
C             /-SN CONTROL, SET Z SO Z*SN POINTS TO CUTTER SIDE OF SURF
      CALL DOTF(Z(IS),TN(1,IS),SN(1,IS))
      IF(DABS(Z(IS)).GT.0.000001) GO TO 1112
C             /-INNER PRODUCT SMALL, TN AND SN PERPENDICULAR. TRY NEW TN
      DO 1113 I=1,3
      TN(I,IS)=SN(I,IS)+TN(I,IS)
 1113 CONTINUE
      CALL VNORM(TN(1,IS),TN(1,IS))
C             /-RESORE Z
      Z(IS)=ONE
C             /-CALL SURFACE DISTANCE CALC AGAIN
      GO TO  251
C
 1112 CONTINUE
C             /-SET Z SO THAT Z*SN AND TP-SP ARE IN SAME DIRECTION
      IF(S(IS).NE.ZERO) Z(IS)=S(IS)*Z(IS)
      Z(IS)=-DSIGN(ONE,PAST(IS)*Z(IS))
C             /-PAST IS -1 IF ISFTYP=2 (PAST CASE ), 1 OTHERWISE
C             /-ADJUST SN BY Z AND SET TN TO -SN
      DO 1114 I=1,3
        SN(I,IS)=Z(IS)*SN(I,IS)
        TN(I,IS)=-SN(I,IS)
 1114   CONTINUE
      GO TO 2009
C
C -------------------------------------------------------
C             /-NORMAL ENTRY ROUTE. SET FIRST TRIAL TP USING VT.
C             /-SWITCH TO SPECIAL ANALYTIC IAFL = 0 ROUTES IF NEEDED
C             /-ALSO USE SPECIAL ROUTE IF CYLINDER LL TA.
 2012 CONTINUE
C             /-PLACE TOOL POINT ON THICK ENVELOPE IN DIRECTION OF TN
      DO 1122 I=1,3
      TP(I,IS)=VT(I,IS)+TH(IS)*TN(I,IS)+TE(I)
 1122 CONTINUE
C             /-IAFL -1, GENERAL SURF PATH
      IF(IAFL(IS).LT.0) GO TO 2009
C             /-IAFL =0, PLANE SURF PERPEN, OR PLANE DRIVE SURF PARLLEL
      IF(IAFL(IS).EQ.0) GO TO 212
C             /-IAFL +1, SURF ELEMENT PARALLEL TO TA
C             /-IF SURFACE TYPE LT 5,(IE PLANE,LINE,CYLIN) GO TO 4000
      IF(ISFIDN(IS).GE.5) GO TO 2009
C
C-------------------------------------------------------
C             /-SPECIAL U1COMP ROUTE FOR TA LL CYLINDER AXIS.
C             /-USEFUL IF CUTTER RADIUS NEARLY CYLINDER RADIUS
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.
C
      MODESS=12
      CALL AJUNDD
      MODESS=0
C
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))
      DO 1142 I=1,3
      TEMP(I+3)=CC(I,IS)
 1142 CC(I,IS)=CANON(ICBOT+I)
      CALL U1COMP
      DO 1143 I=1,3
 1143 CC(I,IS)=TEMP(I+3)
      GO TO 2038
C
C-------------------------* CALL SURFACE FOR DIRECTED DISTANCE *--------
C             /-OTHERWISE, GO THE GENERAL SURFACE PATH
C             /-2ND PHASE OF INITIAL ENTRY TO AMIND(JENT=1)
C             /-WITH CURRENT TP,TN CALL SURFACE ROUTINE FOR SP,SPL,SN
C             /-THEN USE CCURV TO FIND RC,CC.  USE CENTER OF CURVATURE C
C             /-TO FIND THE CORRECT SIDE OF THE CUTTER.
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.
 2009 CONTINUE
      IF(MSSCHK.EQ.1) GO TO 2038
      MODESS=13
      CALL AJUNDD
      MODESS=0
C
C***        TERMINATE FOR FATAL ERROR
      IF(IAERR.NE.0) GO TO 2999
C             /-FIND ISIGCR, RC AND CC.  CENTER OF CURV= SP-RC*SN.
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))
C             /-ISIGCR -1 FOR PLANE, 0 NORMAL CASE, 1 IF PREV RC USED
      IF(ISIGCR(IS).GE.0) GO TO 1116
C             /-SPECIAL CALC OF CC IN PLANE CASE
      DO 1117 I=1,3
        CC(I,IS)=TP(I,IS)-RC(IS)*SN(I,IS)
 1117 CONTINUE
 1116 CONTINUE
C             /-IF TOOL IS ON THIS SURF, SKIP U1(TOOL SIDE) CALCULATION
      IF(ITLON(IS).EQ.0) GO TO 338
C             /-DETERMINE THE SIDE OF THE CUTTER TO CONTACT SURFACE
      CALL U1COMP
C
      IF(IAERR.NE.0) GO TO 2999
      IF(JENT(IS).LE.0) GO TO 1118
C             /-FURTHER ADJUSTMENT NEEDED FOR FIRST AMIND ENTRY
      IF(JTN(IS).NE.0) GO TO 1118
C             /-SURFACE NORMAL CONTROL, JTN=0
      IF(RC(IS).GE.ZERO) GO TO 1118
C             /-RC NEGATIVE  ADJUST U1 IF CC-TE.U1 IS POSITIVE
      DO 1119 I=1,3
 1119 TEMP(I)=CC(I,IS)-TE(I)
      CALL DOTF(TEM,U1(1,IS),TEMP)
      IF(TEM(1).LE.ZERO) GO TO 1118
C             /-SET U1 TO OTHER SIDE OF CUTTER
      DO 1120 I=1,3
      U1(I,IS)=-U1(I,IS)
 1120 CONTINUE
 1118 CONTINUE
      DO 1121 I=1,3
 1121 OLDU1(I)=U1(I,IS)
C
C -------------------------------------------------------
  338 CONTINUE
      IF(KDYNFL.NE.0) CALL APT238(4)
C              /-DYNDMP(104) --------.
C             /-***** START ITERATIVE LOOP. CALL TLNORM FOR TP,TN **
C             /-***** CALL AJUNDD FOR SP,SN,S. COMPUTE FLIPCK=TN.SN
 2038 CONTINUE
C             /-MAP IS A RESTART FLAG, =0 REVERSE U1 AND TRY AGAIN
C             /-MAP=1 MEANS RESTART EFFECTIVE, ERROR IS FATAL NOW.
      MAP=0
C
C             /-TLNORM CALL GETS LINEUP FROM SURF TO TOOL IN U1 DIREC.
 2712 CONTINUE
C
C.... VW MODIFICATION FOR SITUATION WHEN DISTANCE BETWEEN TOOL
C     AND SURFACE IS LARGE - ONLY APPLIES TO DS AND PS
C
      IF (IS.LT.ICS) THEN
        IF (JENT(IS).NE.0) THEN
          IF ((UVDIST.LT.0.4D0).OR.(DIST.LT.BLONGD)) THEN
            ISTART=0
          ELSE
            ISTART=1
            DO 27121 I=1,3
              TN(I,IS)=SPBOND(I)-TP(I,IS)
              SP(I,IS)=SPBOND(I)
27121       CONTINUE
            CALL VNORM(TN(1,IS),TN(1,IS))
            DO 27123 I=1,3
              SN(I,IS)=-TN(I,IS)
27123       CONTINUE
            IF (S(IS).GT.BLONGD) S(IS)=BLONGD
            GOTO 711
          ENDIF
        ENDIF
      ENDIF
C             /-GENERATE TP ON TOOL SURFACE CLOSE TO CC.
      CALL TLNORM(U1(1,IS))
C-------------------------* TLNORM CALLS SURF FOR DIRECTED DIST *---
C             /-PLACE TP OUT ON THICK ENVELOPE OFF TOOL SURF
      DO 1163 I=1,3
        TP(I,IS)=TP(I,IS)+TH(IS)*TN(I,IS)
 1163 CONTINUE
C***        TERMINATE ON FATAL ERROR
      IF(IAERR.NE.0) GO TO 2999
      IF(KDYNFL.NE.0) CALL APT238(5)
C              /-DYNDMP(105) --------.
C
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.
      MODESS=14
      IF(MSSCHK.EQ.0) CALL AJUNDD
      MODESS=0
C
C***        TERMINATE ON FATAL ERROR
      IF(IAERR.NE.0) GO TO 2999
      IF (ISTART.EQ.1) GOTO 711
C             /-CHECK LINEUP BETWEEN TN AND SN.
      CALL DOTF(FLIPCK,TN(1,IS),SN(1,IS))
C             /-SPECIAL ROUTE. IF FLIPCK WRONG SIGN AFTER 10
C             /-ITERATIONS,REVERSE SIGN OF U1
      IF(IAMDCT.LE.10) GO TO 1123
      TEM(7)=JTN(IS)-0.5
      IF(TEM(7)*FLIPCK.LT.ZERO.AND.MAP.EQ.0) GO TO 710
 1123 IF(KDYNFL.NE.0) CALL APT238(6)
C              /-DYNDMP(106) --------.
C             /-FLIPCK TEST. IF TN.SN WELL ALIGNED EXIT FROM LOOP
C             /-FLIPCK SHOULD BE VERY NEAR 1 FOR CONVERGENCE
      IF(DABS(FLIPCK).GT.ZLIT1) GO TO 2041
C
C --- WEAKER CONVERGENCE-TEST
C
      IF(DABS(FLIPCK).LE.ZLIT2.OR.DABS(FLIPCK).LE.FLIPAB) GO TO 29
      IF ((MDIC.LE.0).AND.(((JTN(IS)-.5)*FLIPCK).LT.ZERO)) GO TO 29
      IF (IPL(IS).LE.0) THEN
        TEMP(1)=TAU(IS)-EPS8(IS)
        IF (RC(IS).GT.ZERO.AND.JTN(IS).NE.0) TEMP(1)=EPS8(IS)
        IF (RC(IS).LE.ZERO.AND.JTN(IS).EQ.0) TEMP(1)=EPS8(IS)
        SMOD=S(IS)-TAU2(IS)-TEMP(1)
      ENDIF
      IF ((FLIPAB.GT.ZLIT2).AND.(ABS(SMOD).GT.ABS(SMODS))) GO TO 29
C
C --- STORE DATA, IF WEAKER CONVERGENCE-TEST IS OK
C
      FLIPMX = FLIPCK
      FLIPAB = DABS(FLIPCK)
      RCSAV = RC(IS)
      SSAV = S(IS)
      SMODS=SMOD
      ITSAV = ITSEG(IS)
      DO 2900 I=1,3
      TPSAV(I) = TP(I,IS)
      TNSAV(I) = TN(I,IS)
      SPSAV(I) = SP(I,IS)
      SNSAV(I) = SN(I,IS)
      U1SAV(I) = U1(I,IS)
 2900 CONTINUE
C             /-INCREMENT AMIND COUNT AND TRY AGAIN TO IMPROVE LINEUP
C
   29 CONTINUE
      IAMDCT=IAMDCT+1
      IF(IAMDCT.LT.25) GO TO 32
      IF(IAMDCT.GT.25) GO TO 1124
C             /-IAMDCT IS 25, ONE LAST TRY WITH WEAKER CONVERGENCE TEST
      IF(FLIPAB.EQ.ZERO) GO TO 1124
C
      IF (FLIPAB.GT.ZLIT5) THEN
        CONTINUE
      ELSE IF (FLIPAB.GT.ZLIT2) THEN
C... PRINT WARNING
        WRITE(MSG,7100) FLIPAB
 7100 FORMAT('*** WARNING *** FLIPAB = ',D12.5,
     +       ' AT 3RD (WEAKER) CONVERGENCE TEST IN AMIND')
        CALL OUTMSG(MSG)
      ELSE
        GOTO 1124
      ENDIF
C
C --- RESTORE DATA OF WEAKER CONVERGENCE-TEST
C
      RC(IS) = RCSAV
      S(IS) = SSAV
      ITSEG(IS) = ITSAV
      DO 2910 I=1,3
      TP(I,IS) = TPSAV(I)
      TN(I,IS) = TNSAV(I)
      SP(I,IS) = SPSAV(I)
      SN(I,IS) = SNSAV(I)
      U1(I,IS) = U1SAV(I)
 2910 CONTINUE
      GO TO 2041
 1124 CONTINUE
C             /-JMINR IS SET TO 1 IF NO AERR CALL SHOULD BE MADE, 0 OTHE
C***        AMIND ITERATIONS FAILED TO CONVERGE AFTER ALL TRIES.
      IF(JMINR.NE.1) CALL AERR(26002,'AMIND   ')
C             /-JMIN SET TO 1 FOR AMIND FAILURE, 0 OTHERWISE
      JMIN=1
      GO TO 2999
C -------------------------------------------------------
C             /-FLIPCK TEST FAILS. CALL CCURV, U1COMP, AND NEW
C             /-ITERATION. FUDGE ROUTE IF TA LL SURF LINE ELEMENT
C             /-AND IAFL NOT EQUAL TO 1
   32 CONTINUE
      IF(IAMDCT.LT.10) GO TO 1126
C             /-RC1 USED FOR PROPER UNITS/ IMPLEMENTATION
      IF(DABS(RC(IS)).NE.RC1/100.D0) GO TO 1126
      CALL DOTF(W1,TA,TN(1,IS))
      CALL DOTF(TEM(7),TA,TNL(1,IS))
      IF(DSIGN(ONE,W1).NE.DSIGN(ONE,TEM(7))) GO TO 1126
      TEM(7)=DSIGN((100000.D0*RC1/4500.D0),RC(IS))
      DO 1127 I=1,3
        CC(I,IS)=SP(I,IS)-TEM(7)*SN(I,IS)
 1127 CONTINUE
C             /-RETURN TO TLNORM WITH NEW CC AIMING POINT.
      GO TO 2038
C
 1126 CONTINUE
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))
      IF(ITLON(IS).EQ.0) GO TO 2038
      CALL U1COMP
C***        TERMINATE ON FATAL ERROR
      IF(IAERR.NE.0) GO TO 2999
C             /-JU1 LOGIC. USE IF U1.OLDU1 .LT. ZERO
C             /-JU1 SET TO 1 MEANS U1 SHOULD BE CHKED WITH OLDU1
      IF(JU1(IS).NE.0) GO TO 2038
      CALL DOTF(TEM,OLDU1,U1(1,IS))
      IF(TEM(1).GE.ZERO) GO TO 2038
C             /-U1 AND OLDU1 CHANGED CUTTER SIDES
      CALL DOTF(TEM,SN(1,IS),SNL(1,IS))
      IF(TEM(1).GE.Z9EM1) GO TO 2038
      IF (TEM(1).EQ.ZERO) GOTO 2038
C             /-SURFACE NORMALS CHANGED SIGNIFICANTLY
      IF (ICHEKF.EQ.1) GOTO 2038
      DO 1128 I=1,3
      OLDU1(I)=-U1(I,IS)
      U1(I,IS)=-U1(I,IS)
      TN(I,IS)=-TN(I,IS)
      TP(I,IS)=TP(I,IS)+Z2*TH(IS)*TN(I,IS)
 1128 CONTINUE
C             /-IOP SET TO 1 TO FIND SMALLEST POSITIVE DIRECTED DISTANCE
      IOP(IS)=1
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.
      MODESS=15
      IF(MSSCHK.EQ.0) CALL AJUNDD
      MODESS=0
C
C             /-RESET IOP TO FIND SMALLEST ABSOLUTE DISTANCE
      IOP(IS)=0
      DO 1129 I=IS,ISLIM
      TN(I,IS)=-TN(I,IS)
 1129 CONTINUE
      S(IS)=-S(IS)
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))
      GO TO 2038
C
C             /-IF RADAR USED,DO ANOTHER ITERATION (TE MAY BE OUT)
 2041 CONTINUE
C             /-MDIC, COUNT OF NUM OF RADAR TRIALS
      IF(MDIC.LE.0) GO TO 1130
C             /-IF CUTTER NOT ON AND NOT A POINT, GO TO 29
      IF(ITLON(IS)*IPT1.NE.0) GO TO 29
C             /-TOOL-ON OR POINT TOOL CASE
C             /-EPS1 IS .1*TAU(INITIALLY .00005)
      W1=ZERO
      DO 1133 I=1,3
 1133 W1=W1+DABS(TP(I,IS)-TE(I))
      IF(W1.GT.EPS1(IS)) GO TO 29
C             /-IFL1PCK WRONG SIGN, REVERSE U1. SET MAP=1.
 1130 CONTINUE
      TEM(7)=JTN(IS)-.5
      IF(TEM(7)*FLIPCK.GE.ZERO) GO TO 711
C***          ERROR IN AMIND - SET JMIN AND RETURN.
      IF(MAP.GT.0) JMIN=1
      IF(MAP.GT.0) GO TO 2999
  710 MAP=1
      DO 1131 I=1,3
        U1(I,IS)=-U1(I,IS)
 1131 CONTINUE
C             /-GO BACK AND FIND TOOL TO SURF RELATIONSHIP
      GO TO 2712
C
C             /-MINIMUM DISTANCE S(IS)O.K.. ADJUST TO CORRECT PART
C             /-TOLERANCE BAND
  711 CONTINUE
      JMIN=0
C             /-IPL=1 FOR PLANE, 0 OTHERWISE
      IF(IPL(IS).GT.0) GO TO 1132
C             /-TAU = TOTAL TOLERANCE TAU1-TAU2
C             /-EPS8 =EPS1 OR 2*EPS1 WHERE EPS1=.1*TAU
C             /-PLACE CUTTER WITHIN 10PC OF TOLERANCE BAND OF LEAST CURV
      TEMP(1)=TAU(IS)-EPS8(IS)
      IF(RC(IS).GT.ZERO.AND.JTN(IS).NE.0) TEMP(1)=EPS8(IS)
      IF(RC(IS).LE.ZERO.AND.JTN(IS).EQ.0) TEMP(1)=EPS8(IS)
C             /-TAU2 IS NEGATIVE AND IS INNER TOLERANCE(AWAY FROM CUTTER
      S(IS)=S(IS)-TAU2(IS)-TEMP(1)
C
C             /-UPDATE SPK,TPK,SNK ETC. JENT = 0. COMPUTE VT
C             /-********* EXIT  ROUTE **********.
 1132 CONTINUE
      IF(JENT(IS).EQ.0) GO TO 2046
C
C             /-FOR FIRST ENTRY SAVE LAST GOOD VALUES
 2044 CONTINUE
      DO 1134 I=1,3
      TPK(I,IS)=TP(I,IS)
      SPK(I,IS)=SP(I,IS)
      U1K(I,IS)=U1(I,IS)
      SNK(I,IS)=SN(I,IS)
 1134 CONTINUE
      IF (ISTART.EQ.0) JENT(IS)=0
C             /-SET ENTRY FLAG TO ZERO, INITIAL ENTRY FINISHED
      JENT(IS)=0
C             /-SAVE INDEX TO PERTINENT TOOL SEGMENT
      ITSEGK(IS) = ITSEG(IS)
C
 2046 CONTINUE
      MSSCHK=0
C             /-SAVE DISPLACEMENT VECTOR FROM TE TO CONTACT PT
      DO 1135 I=1,3
        VT(I,IS)=TP(I,IS)-TH(IS)*TN(I,IS)-TE(I)
 1135 CONTINUE
      IF(KDYNFL.NE.0) CALL APT238(7)
C              /-DYNDMP(107) --------.
C***       ERROR EXIT PATH AND END OF NORMAL EXIT
 2999 CONTINUE
      ITLON(IS)=ITLON1
      DO 1136 I=1,3
 1136 TE(I)=TE1(I)
      RETURN
C
C
C     -------------------------------------------------*
C             /-IAFL(IS)=0 SPECIAL ANALYTIC ROUTE. INITIAL ENTRY.
C             /-SURF IS PLANE PERPEN TO TA OR PLANE PARL TO DS,CS
C             /-CANON(IC+0,+1,+2)=I,J,K NORMAL, AND CN(IC+3)=ORIGIN DIST
  202 CONTINUE
      DO 1150 I=1,3
 1150 TN(I,IS)=CANON(ICBOT+I)
      AJENT=JENT(IS)
      CALL DOTF(TEM,TP(1,IS),CANON(IC))
      SAVE(IS)=ONE
      IF(JENT(IS).EQ.0) GO TO 204
C             /-CHANGE SIGN OF PLANE NORMAL IF TP IS ON OPPOSITE SIDE
      IF(PAST(IS)*(CANON(IC+3)-TEM(1)).GE.ZERO) GO TO 204
      SAVE(IS)=-ONE
      DO 1154 I=1,3
        TN(I,IS)=-TN(I,IS)
 1154 CONTINUE
  204 CONTINUE
      IF(ITLON(IS).NE.0) GO TO 327
C             /-USE TE FOR TP IF TOOL IS ON SURF
      DO 1151 I=1,3
 1151 TP(I,IS)=TE(I)
      GO TO 305
  327 CONTINUE
C             /-COMPUTE A NEW TOOL POINT
      IF(IS.NE.IPS) GO TO 303
      W1=CUTDAT(7)/2.0
      DO 1152 I=1,3
        TP(I,IS)=TP(I,IS)+W1*TN(I,IS)
 1152 CONTINUE
      GO TO 305
  303 CONTINUE
C             /-SET TP AT TOP PERIPHERY OF TOOL FOR DS,CS
      DO 1153 I=1,3
        TP(I,IS)=TE(I)+TOOLHT(I,IS)+TOOLWD(IS)*TN(I,IS)
 1153 CONTINUE
C             /-FIND SIGNED NORMAL DISTANCE OF TP FROM PLANE USING SAVE.
  305 CALL DOTF(TEM,TP(1,IS),CANON(IC))
      S(IS)=SAVE(IS)*(CANON(IC+3)-TEM(1))
C             /-COMPUTE SN,S AND MAYBE U1
      IF(JTN(IS).EQ.0) GO TO 208
      Z(IS)=SAVE(IS)
      DO 1155 I=1,3
        SN(I,IS)=TN(I,IS)
        U1(I,IS)=TN(I,IS)
 1155 CONTINUE
      GO TO 209
  208 Z(IS)=-SAVE(IS)
      DO 1156 I=1,3
        SN(I,IS)=-TN(I,IS)
 1156 CONTINUE
  209 RC(IS)=RC1
      DO 1157 I=1,3
        SNL(I,IS)=SN(I,IS)
 1157 CONTINUE
      ISIGCR(IS)=-1
C             /-COMPENSATE DISTANCE S BY THICK PARAMETER
      S(IS)=S(IS)-TH(IS)
C             /-TOOL POINT IS PLACED OUT ON THICK ENVELOPE ARND TOOL
      DO 1158 I=1,3
        TP(I,IS)=TP(I,IS)+TH(IS)*TN(I,IS)
 1158 CONTINUE
C
  213 CONTINUE
      DO 1161 I=1,3
        SP(I,IS)=TP(I,IS)+S(IS)*TN(I,IS)
        CC(I,IS)=SP(I,IS)-RC(IS)*SN(I,IS)
 1161 CONTINUE
C             /-RETURN WITH MINOR HOUSEKEEPING
      IF(JENT(IS).EQ.0) GO TO 2046
C             /-SAVE SPL FOR THE INTITIAL ENTRY ONLY
      DO 1159 I=1,3
        SPL(I,IS)=SP(I,IS)
 1159 CONTINUE
C             /-RETURN WITH HOUSEKEEPING - SAVE LAST VALUES(SPK,TPK,..)
      GO TO 2044
C
C-------------------------------------------------------
C             /-IAFL(IS)=0 SPECIAL ANALYTIC ROUTE. NORMAL ENTRY.
  212 CONTINUE
      IF(JTN(IS).EQ.0) GO TO 307
C             /-TOOL NORMAL CONTROL, GENERATE TP,TN.
      CALL DOTF(TEM,TN(1,IS),U1(1,IS))
      IF(TEM(1).LT.ZERO) GO TO 309
      DO 310 I=1,3
        TN(I,IS)=U1(I,IS)
        TP(I,IS)=TE(I)+VT(I,IS)+TH(IS)*TN(I,IS)
  310 CONTINUE
      GO TO 307
C
  309 CONTINUE
      Z(IS)=-Z(IS)
      SAVE(IS)=-SAVE(IS)
      DO 311 I=1,3
      TN(I,IS)=-U1(I,IS)
      SNL(I,IS)=SN(I,IS)
      SN(I,IS)=-SN(I,IS)
      U1(I,IS)=TN(I,IS)
      TP(I,IS)=TE(I)+TOOLHT(I,IS)+(TH(IS)+TOOLWD(IS))*TN(I,IS)
  311 CONTINUE
C
  307 CONTINUE
      CALL DOTF(TEM,TP(1,IS),CANON(IC))
      S(IS)=SAVE(IS)*(CANON(IC+3)-TEM(1))
      DO 312 I=1,3
        SPL(I,IS)=SP(I,IS)
  312 CONTINUE
C             /-FINISH UP WITH SP,CC AND RETURN WITH HOUSEKEEPING
      GO TO 213
C
      END
