*
C
C              FORTRAN SUBROUTINE LABCON
C
C LINKAGE      SUBROUTINE LABCON(K)
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    BINBCD          SUBROUTINE    PRO026
C          SUBROUTINE    ALARM           SUBROUTINE    RECOG
C
      SUBROUTINE LABCON(K)
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE (NAMETB)
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),LABEL(2)
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '
      EQUIVALENCE (LABEL(1),CODE(43))
C
C       11.    SEQUENCE NUMBER STORAGE
C
      COMMON/SEQCOM/SEQCOM
      DIMENSION SEQCOM(3),SEQNUM(2)
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER
      EQUIVALENCE (SEQNO,SEQCOM(1))
C SEQNUM:      ALPHANUMERIC REPRESENTATION OF CURRRENT STATEMENT NUMBER
      EQUIVALENCE (SEQNUM(1),SEQCOM(2))
C
C       14.    I. L. LIST OPTION FLAGS
C
      COMMON/PRT/PRT
      LOGICAL PRTERR
      DIMENSION PRT(7)
C PRTERR:      TRUE IF PPOPTN/PRTER,ON. PRINTOUT OF STACK OR ARGSTK
      EQUIVALENCE (PRTERR,PRT(6))
C
C       22.    MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      LOGICAL ILHLT
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE
      EQUIVALENCE (ILHLT,MACXX1(14))
      DIMENSION MACXX1(71)
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C
C       43.    DO LOOP CONTROL VALUES
C
      COMMON/DOLOOP/DOLOOP
      DIMENSION DOLOOP(8)
C JUMPTO:      MARKER SET AFTER JUMPTO OR IF FOR LABEL CONTROL
      EQUIVALENCE (JUMPTO,DOLOOP(1))
C*
      DIMENSION     LABARY(2,150)
      LOGICAL    PRTER
      DATA ISEQ,LABCNT,LABARY/302*0/,LABDM/151/
C**
      IF(ILHLT)GOTO 150
      L=IABS(K)
      IF (L.GT.0) THEN
      M=MODULO*(NAMTBL(L)/MODULO)
      ENDIF
      IF(K)50,100,10
C
C     JUMPTO STATEMENT,SEARCH FOR FORMER LABEL
C
   10 IF(M.EQ.LABEL(1))GOTO 40
C
C     NO FORMER LABEL, SEARCH FOR FORMER JUMPTO
C
      DO 20 I=1,LABCNT
      IF(LABARY(1,I).NE.K)GOTO 20
      IF(LABARY(2,I).EQ.0)GOTO 40
   20 CONTINUE
      LABCNT=LABCNT+1
      IF(LABCNT-LABDM)30,160,40
   30 LABARY(1,LABCNT)=K
      LABARY(2,LABCNT)=SEQNO
   40 IF(ISEQ.EQ.SEQNO)GOTO 150
      ISEQ=SEQNO
      GOTO 130
C
C     LABEL STATEMENT, SEARCH FOR FORMER JUMPTO
C
   50 DO 60 I=1,LABCNT
      IF(LABARY(1,I).EQ.L)LABARY(2,I)=0
   60 CONTINUE
      GOTO 140
C
C     FINI OR TERMAC HAS COME
C
  100 IF(LABCNT.EQ.0)GOTO 130
      IF(LABCNT.GE.LABDM)LABCNT=LABDM-1
      L=SEQNUM(1)
      M=SEQNUM(2)
      PRTER=PRTERR
      PRTERR=.FALSE.
      DO 110 I=1,LABCNT
      IF(LABARY(2,I).EQ.0)GOTO 110
      CALL BINBCD(LABARY(2,I),SEQNUM,N)
      LABARY(2,I)=0
      CALL ALARM(1002,0,4,'LABCON  ')
  110 CONTINUE
      LABCNT=0
      SEQNUM(1)=L
      SEQNUM(2)=M
      PRTERR=PRTER
  130 IF(JUMPTO.NE.0)CALL ALARM(1009,0,4,'LABCON  ')
  140 JUMPTO=0
      IF(K.GT.0)JUMPTO=SEQNO+2
C
  150 RETURN
  160 CALL ALARM(40,0,4,'LABCON  ')
      GOTO 130
      END
