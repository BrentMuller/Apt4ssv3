*
      SUBROUTINE CUTREG(WORD,CDIR,UST,VST,PDIR,IDTYPE,IQUAL,
     X   TUL,PTOLI,PTOLO,DTOL,AMAXDP,ELMAX,MAXCL,ISKP,IRR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C---PURPOSE IS TO CALL PATH ROUTINE, SSPATH, TO GENERATE THE NECESSARY
C---CLRECORDS IN RESPONSE TO AN AREA CLEARANCE COMMAND
C
C
      COMMON/IBUGG/IBUG,I1,I2
      COMMON/XDS/DGEOM(4),DLIM(4),TLDIR(3),DOFSET,ITLDIR,IDTOOL,NDS
      COMMON/XPS/PGEOM(4),PSIDE,PTHICK,IPTOOL,NPS
      COMMON/XFEED/CLRPLN(4),FED(4),NCLRPL,NFEED
      COMMON/XSTEPO/SSTEP(4),NSTEPO
      COMMON/XAXIS/AXIS(3),IAXIS,NAXIS
C
      INCLUDE (BLANKCOM)
C
      DIMENSION TUL(1),TE(3),TA(3),TD(3),PAR(2),PLIM(4)
      DIMENSION PSAVE(2),ALIM(4),ADIR(2)
      DIMENSION SVTE(3),SVTA(3),SVTD(3)
C
      DATA ZERO,ONE,SMAL/0.0D0,1.0D0,1.0D-14/
      DATA APICKF/166.D0/
      DATA AZIGZA/61.D0/
C
C---      COUNT OF MAXIMUM CALLS TO SSPATH
      IPATHK=0
C---      MAXIMUM NUMBER OF CALLS ALLOWED TO SSPATH
      MXPATH=SSTEP(4)
C---      MXPATH=0, MEANS ESSENTIALLY  NO LIMIT
      IF(MXPATH.LE.0) MXPATH=1000000
      IF(WORD.EQ.APICKF) GO TO 500
      IF(WORD.EQ.AZIGZA) GO TO 100
      GO TO 999
C
C---ZIGZAG PATTERN MACHINING
  100 CONTINUE
      IPASS=1
      IFIN=0
      ICLSKP=0
      IF(ISKP.EQ.1) ICLSKP=1
      IPART=PGEOM(4)
      IDRIV=DGEOM(4)
      PAR(1)=UST
      PAR(2)=VST
      DSTEP=ONE
      SCALHT=SSTEP(1)
      STEPMX=SSTEP(2)
      STEPOV=ZERO
C
  120 CONTINUE
C---COMMON ENTRY POINT FOR ALL PASSES IN MAIN DIRECTION
      IF(IBUG.NE.11) GO TO 105
      CALL BAD(-1,0,' ',0)
      CALL BAD(1,0,'PASS',IPASS)
      CALL BAD(-2,1,'PAR ',PAR)
  105 CONTINUE
C
      DO 110 I=1,4
  110 PLIM(I)=DLIM(I)
      TPDIR=PDIR
      IF(MOD(IPASS,2).EQ.0) TPDIR=-PDIR
      IRR=0
      CALL CLPUT(TE,TA,-1)
C
      UST=PAR(1)
      VST=PAR(2)
      CALL SSPATH( COM(IDRIV), IDTYPE, TPDIR, DTOL, DSTEP, DOFSET,
     X           PLIM, IDTOOL, IAXIS, AXIS, ITLDIR,
     X       TLDIR, COM(IPART), PSIDE, PTHICK, PTOLI, PTOLO, IPTOOL,
     X           TUL, UST,  VST, SCALHT, STEPOV, STEPMX,
     X           AMAXDP, ELMAX, MAXCL, ICLSKP, IQUAL,
     X           TE, TA, TD, PAR, IRR )
      IF(IRR.NE.0) GO TO 999
C
C---      INCREMENT COUNT OF CALLS TO SSPATH, QUIT WHEN OVER LIMIT
      IPATHK=IPATHK+1
      IF(IPATHK.GE.MXPATH) GO TO 999
C---IF FINAL FLAG HAS BEEN SET THEN QUIT NOW
      IF(IFIN.EQ.1) GO TO 999
C---NOW CALCULATE PARAMETERS NECESSARY FOR A SIDE STEP
      TPDIR=CDIR
      MIDTYP=3-IDTYPE
      ICR=2
      IF(IDTYPE.EQ.2) ICR=1
      ILC=2*ICR-1
      DO 210 I=1,2
  210 PSAVE(I)=PAR(I)
      CALL PCHG(PAR(ICR),CDIR,STEPOV)
      PAR(ICR)=PAR(ICR)+CDIR*STEPOV
      DO 220 I=1,4
  220 PLIM(I)=DLIM(I)
      IF(PAR(ICR).LT.DLIM(ILC)+SMAL.AND.CDIR.LT.ZERO) IFIN=1
      IF(PAR(ICR).LT.DLIM(ILC)+SMAL.AND.CDIR.LT.ZERO)PAR(ICR)=DLIM(ILC)
      IF(PAR(ICR).GT.DLIM(ILC+1)-SMAL.AND.CDIR.GT.ZERO) IFIN=1
      IF(PAR(ICR).GT.DLIM(ILC+1)-SMAL.AND.CDIR.GT.ZERO) PAR(ICR)=
     X   DLIM(ILC+1)
C---NOW TEMPORARILY LOAD NEW LIMITS FOR SIDE STEPPING
      IF(CDIR.LT.ZERO) GO TO 230
      PLIM(ILC)=PSAVE(ICR)
      PLIM(ILC+1)=PAR(ICR)
      GO TO 240
C
  230 CONTINUE
      PLIM(ILC)=PAR(ICR)
      PLIM(ILC+1)=PSAVE(ICR)
  240 CONTINUE
C
      TSCALH=ZERO
      TSTEPO=ZERO
      TSTEPM=ZERO
C---WHEN LIFTUP HAS NOT BEEN SPECIFIED, SKIP THE FIRST CUT VECTOR
      TPTHIC=SSTEP(3)+PTHICK
      MICLSK=1
      IF(SSTEP(3).GT.SMAL) MICLSK=0
C
      IF(FED(2).GT.SMAL) CALL FEDPUT(FED(2))
      CALL CLPUT(TE,TA,-1)
C
      IF(IBUG.NE.11) GO TO 250
      CALL BAD(-1,0,' ',0)
      CALL BAD(1,0,'STEP',IPASS)
      CALL BAD(2,1,'PSAV',PSAVE)
      CALL BAD(-2,1,'PAR ',PAR)
  250 CONTINUE
C---GENERATE THE SIDE MOTION TO THE NEXT POSITION
C
      CALL SSPATH( COM(IDRIV), MIDTYP, TPDIR, DTOL, DSTEP, DOFSET,
     X           PLIM, IDTOOL, IAXIS, AXIS, ITLDIR,
     X       TLDIR, COM(IPART), PSIDE, TPTHIC, PTOLI, PTOLO, IPTOOL,
     X           TUL, PSAVE(1), PSAVE(2), TSCALH,TSTEPO, TSTEPM,
     X           AMAXDP, ELMAX, MAXCL, MICLSK, IQUAL,
     X           TE, TA, TD, PAR, IRR)
      IF(IRR.NE.0) GO TO 999
C
C---      INCREMENT COUNT OF CALLS TO SSPATH, QUIT WHEN OVER LIMIT
      IPATHK=IPATHK+1
      IF(IPATHK.GE.MXPATH) GO TO 999
C---IF THE THIRD FEED RATE IS AVAILABLE AND LIFTUP SPECIFIED
C---THEN USE THE PLUNGE PROCEDURE
      IF(SSTEP(3).LT.SMAL) GO TO 260
      IF(FED(3).GT.SMAL) CALL FEDPUT(FED(3))
      MMAXCL=1
      MICLSK=0
      DO 270 I=1,4
  270 PLIM(I)=DLIM(I)
      CALL CLPUT(TE,TA,-1)
C---DROP BACK TO THE SURFACE AT THE PLUNGE FEED RATE
C
      UST=PAR(1)
      VST=PAR(2)
      CALL SSPATH( COM(IDRIV), MIDTYP, TPDIR, DTOL, DSTEP, DOFSET,
     X           PLIM, IDTOOL, IAXIS, AXIS, ITLDIR,
     X       TLDIR, COM(IPART),  PSIDE, PTHICK, PTOLI, PTOLO, IPTOOL,
     X            TUL, UST,  VST, TSCALH, TSTEPO, TSTEPM,
     X            AMAXDP, ELMAX, MMAXCL, MICLSK, IQUAL,
     X            TE, TA, TD, PAR, IRR)
      IF(IRR.NE.0) GO TO 999
C
C---      INCREMENT COUNT OF CALLS TO SSPATH, QUIT WHEN OVER LIMIT
      IPATHK=IPATHK+1
      IF(IPATHK.GE.MXPATH) GO TO 999
  260 CONTINUE
C
C--- NOW CONTINUE BY ZAGGING DOWN NEXT CUT PATH
  300 CONTINUE
      IPASS=IPASS+1
C---      MOD(IBUG,100) IS THE PASS NUMBER WHEN IBUG SHOULD BE RESET
      IBUGT=MOD(IBUG,100)
      IF(IBUG/100.EQ.IPASS) IBUG=IBUGT
      ICLSKP=1
      DO 310 I=1,4
  310 PLIM(I)=DLIM(I)
      DSTEP=ONE
      SCALHT=SSTEP(1)
      STEPMX=SSTEP(2)
      STEPOV=ZERO
C
C---GENERATE FEED RATE FOR PATH MOTION
      IF(FED(1).GT.SMAL) CALL FEDPUT(FED(1))
      GO TO 120
C
C
  500 CONTINUE
C---PICKFD PATTERN MACHINING
C---CUTTER ZIGS ALONG MAIN PATH COMPUTING SCALOP FOR NEXT PASS
C---IT THEN RETRACTS AT RAPID TO THE CLEARANCE PLANE
C---RETRACTS TO A POSITION OVER THE FIRST POINT
C---AND PLUNGES TO THE FIRST PATH POINT AT A REDUCED FEEDRATE
C---IT THEN STEPS OVER IN THE SAME MANNER AS THE ZIGZAG ROUTINE
C---AND PROCEEDS IN THE SAME DIRECTION DOWN THE NEXT PATH
      IPASS=1
      IFIN=0
      ICLSKP=0
      IF(ISKP.EQ.1) ICLSKP=1
      IPART=PGEOM(4)
      IDRIV=DGEOM(4)
      PAR(1)=UST
      PAR(2)=VST
      DSTEP=ONE
      SCALHT=SSTEP(1)
      STEPMX=SSTEP(2)
      STEPOV=ZERO
C---GENERATE LIMITS BASED ON A SECTOR OF THE BOUNDED REGION
      I=1
      IF(IDTYPE.EQ.2) I=2
      ADIR(I)=PDIR
      ADIR(3-I)=CDIR
      DO 750 I=1,2
      IF(ADIR(I).LT.ZERO) GO TO 720
      ALIM(2*I-1)=PAR(I)
      ALIM(2*I)=DLIM(2*I)
      GO TO 750
  720 CONTINUE
      ALIM(2*I-1)=DLIM(2*I-1)
      ALIM(2*I)=PAR(I)
  750 CONTINUE
      IF(IBUG.EQ.11) CALL BAD(-4,1,'ALIM',ALIM)
      IF(IBUG.EQ.11) CALL BAD(-2,1,'ADIR',ADIR)
C
  520 CONTINUE
C---COMMON ENTRY POINT FOR CONSECUTIVE PASSES IN MAIN DIRECTION.
      IF(IBUG.NE.11) GO TO 505
      CALL BAD(-1,0,' ',0)
      CALL BAD(1,0,'PASS',IPASS)
      CALL BAD(-2,1,'PAR ',PAR)
  505 CONTINUE
C
      DO 510 I=1,4
  510 PLIM(I)=ALIM(I)
      TPDIR=PDIR
      IRR=0
      CALL CLPUT(TE,TA,-1)
C
C---FIRST DO A STARTUP TO SAVE THE FIRST PATH POINT
      MICLSK=-1
      MMAXCL=1
C
      CALL SSPATH( COM(IDRIV), IDTYPE, TPDIR, DTOL, DSTEP, DOFSET,
     X           PLIM, IDTOOL, IAXIS, AXIS, ITLDIR,
     X       TLDIR, COM(IPART), PSIDE, PTHICK, PTOLI, PTOLO, IPTOOL,
     X           TUL, PAR(1), PAR(2), SCALHT, STEPOV, STEPMX,
     X           AMAXDP, ELMAX, MMAXCL, MICLSK, IQUAL,
     X          SVTE,SVTA,SVTD, PAR, IRR)
      IF(IRR.NE.0) GO TO 999
C---      INCREMENT COUNT OF CALLS TO SSPATH, QUIT WHEN OVER LIMIT
      IPATHK=IPATHK+1
      IF(IPATHK.GE.MXPATH) GO TO 999
C
C---NOW PROCEED DOWN PATH IN NORMAL FASHION
      ICLSKP=0
      IF(IPASS.EQ.1.AND.ISKP.GT.0) ICLSKP=1
C
      UST=PAR(1)
      VST=PAR(2)
      CALL SSPATH( COM(IDRIV), IDTYPE, TPDIR, DTOL, DSTEP, DOFSET,
     X           PLIM, IDTOOL, IAXIS, AXIS, ITLDIR,
     X       TLDIR, COM(IPART), PSIDE, PTHICK, PTOLI, PTOLO, IPTOOL,
     X           TUL, UST,  VST, SCALHT, STEPOV, STEPMX,
     X           AMAXDP, ELMAX, MAXCL, ICLSKP, IQUAL,
     X           TE, TA, TD, PAR, IRR )
C
      IF(IRR.NE.0) GO TO 999
C---      INCREMENT COUNT OF CALLS TO SSPATH, QUIT WHEN OVER LIMIT
      IPATHK=IPATHK+1
      IF(IPATHK.GE.MXPATH) GO TO 999
C---TERMINATE PROCESS WHEN IFIN IS NOT ZERO.
      IF(IFIN.EQ.1) GO TO 999
C---RESTORE THE PARAMETERS TO THEIR INITIAL VALUES
      PAR(1)=UST
      PAR(2)=VST
C---NOW RETRACT TO CLEARANCE PLANE AT RAPID
      IF(FED(4).GT.SMAL) CALL FEDPUT(FED(4))
C
      CALL CLPUT(TE,TA,-1)
      CALL CLIFT(TE,CLRPLN,TE)
      CALL CLPUT(TE,TA,0)
C---POSITION OVER BEGINNING CL POINT OF THIS PATH
      CALL CLIFT(SVTE,CLRPLN,TE)
      CALL CLPUT(TE,SVTA,1)
C---NOW ACTIVATE THE PLUNGE FEED RATE
      IF(FED(3).GT.SMAL) CALL FEDPUT(FED(3))
      CALL CLPUT(TE,TA,-1)
      CALL CLPUT(SVTE,SVTA,1)
C---NOW MAKE SIDE STEP MOVE FOR NEXT TOOL PASS
      TPDIR=CDIR
      MIDTYP=3-IDTYPE
      ICR=2
      IF(IDTYPE.EQ.2) ICR=1
      ILC=2*ICR-1
      DO 610 I=1,2
  610 PSAVE(I)=PAR(I)
      CALL PCHG(PAR(ICR),CDIR,STEPOV)
      PAR(ICR)=PAR(ICR)+CDIR*STEPOV
      DO 620 I=1,4
  620 PLIM(I)=ALIM(I)
      IF(PAR(ICR).LT.ALIM(ILC)+SMAL.AND.CDIR.LT.ZERO) IFIN=1
      IF(PAR(ICR).LT.ALIM(ILC)+SMAL.AND.CDIR.LT.ZERO)PAR(ICR)=ALIM(ILC)
      IF(PAR(ICR).GT.ALIM(ILC+1)-SMAL.AND.CDIR.GT.ZERO) IFIN=1
      IF(PAR(ICR).GT.ALIM(ILC+1)-SMAL.AND.CDIR.GT.ZERO)PAR(ICR)=
     X   ALIM(ILC+1)
C---NOW TEMPORARILY LOAD NEW LIMITS FOR SIDE STEPPING
      IF(CDIR.LT.ZERO) GO TO 630
      PLIM(ILC)=PSAVE(ICR)
      PLIM(ILC+1)=PAR(ICR)
      GO TO 640
C
  630 CONTINUE
      PLIM(ILC)=PAR(ICR)
      PLIM(ILC+1)=PSAVE(ICR)
  640 CONTINUE
C
      TSCALH=ZERO
      TSTEPO=ZERO
      TSTEPM=ZERO
      TPTHIC=SSTEP(3)+PTHICK
      MICLSK=1
      IF(SSTEP(3).GT.SMAL) MICLSK=0
C
      IF(FED(2).GT.SMAL) CALL FEDPUT(FED(2))
      CALL CLPUT(TE,TA,-1)
C
      IF(IBUG.NE.11) GO TO 650
      CALL BAD(-1,0,' ',0)
      CALL BAD(1,0,'STEP',IPASS)
      CALL BAD(2,1,'PSAV',PSAVE)
      CALL BAD(-2,1,'PAR ',PAR)
  650 CONTINUE
C
      CALL SSPATH( COM(IDRIV), MIDTYP, TPDIR, DTOL, DSTEP, DOFSET,
     X           PLIM, IDTOOL, IAXIS, AXIS, ITLDIR,
     X       TLDIR, COM(IPART), PSIDE, TPTHIC, PTOLI, PTOLO, IPTOOL,
     X           TUL, PSAVE(1), PSAVE(2), TSCALH,TSTEPO, TSTEPM,
     X           AMAXDP, ELMAX, MAXCL, MICLSK, IQUAL,
     X           TE, TA, TD, PAR, IRR)
      IF(IRR.NE.0) GO TO 999
C---      INCREMENT COUNT OF CALLS TO SSPATH, QUIT WHEN OVER LIMIT
      IPATHK=IPATHK+1
      IF(IPATHK.GE.MXPATH) GO TO 999
C
C---IF THE THIRD FEED RATE IS AVAILABLE AND LIFTUP SPECIFIED
C---THEN USE THE PLUNGE PROCEDURE
      IF(SSTEP(3).LT.SMAL) GO TO 660
      IF(FED(3).GT.SMAL) CALL FEDPUT(FED(3))
      MMAXCL=1
      MICLSK=0
      DO 670 I=1,4
  670 PLIM(I)=ALIM(I)
      CALL CLPUT(TE,TA,-1)
C
      UST=PAR(1)
      VST=PAR(2)
      CALL SSPATH( COM(IDRIV), MIDTYP, TPDIR, DTOL, DSTEP, DOFSET,
     X           PLIM, IDTOOL, IAXIS, AXIS, ITLDIR,
     X       TLDIR, COM(IPART),  PSIDE, PTHICK, PTOLI, PTOLO, IPTOOL,
     X            TUL, UST,  VST, TSCALH, TSTEPO, TSTEPM,
     X            AMAXDP, ELMAX, MMAXCL, MICLSK, IQUAL,
     X            TE, TA, TD, PAR, IRR)
      IF(IRR.NE.0) GO TO 999
C
C---      INCREMENT COUNT OF CALLS TO SSPATH, QUIT WHEN OVER LIMIT
      IPATHK=IPATHK+1
      IF(IPATHK.GE.MXPATH) GO TO 999
  660 CONTINUE
C
C---NOW RESET PARAMETERS FOR MOVING DOWN NEXT CUT PATH
  700 CONTINUE
      IPASS=IPASS+1
C---      MOD(IBUG,100) IS THE PASS NUMBER WHEN IBUG SHOULD BE RESET
      IBUGT=MOD(IBUG,100)
      IF(IBUG/100.EQ.IPASS) IBUG=IBUGT
      ICLSKP=1
      DO 710 I=1,4
  710 PLIM(I)=ALIM(I)
      DSTEP=ONE
      SCALHT=SSTEP(1)
      STEPMX=SSTEP(2)
      STEPOV=ZERO
C
      IF(FED(1).GT.SMAL) CALL FEDPUT(FED(1))
      GO TO 520
C
  999 CONTINUE
      RETURN
      END
