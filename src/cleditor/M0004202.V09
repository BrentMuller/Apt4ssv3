*
C......    FORTRAN SUBROUTINE APT335    11/69    RC
C  PURPOSE     TO PERFORM THE LOGIC NECESSARY TO IMPLEMENT COPY
C              AND SET UP THE TRANSFORMATION MATRIX, TMATRX
C
C  CALLING SEQUENCE  CALL APT335
C
C  CALLED BY   APT301
C
C  SUBSIDIARIES   APT302, APT305, APT306, APT307, APT308, APT315
C
C
      SUBROUTINE APT335
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C     THE FOLLOWING PROGRAM IS THE EXECUTIVE ROUTINE FOR THE CLTAPE
C     EDITOR.IT HAS THREE FUNCTIONS
C     TO PROVIDE A VERIFICATION LISTING OF THE CLFILE, INCLUDING ERROR
C     DIAGNOSTICS
C     TO PROCESS COPY AND VTLAXS COMMANDS
C     TO PROVIDE THE BASE STRUCTURE FOR ANY FUTURE PLOTTING PROGRAMS
C
C     THE EXECUTION OF A PART PROGRAM RESULTS IN THE PREPARATION OF
C     EXFILE. THE CLEDITOR USES EXFILE AS INPUT TO PREPARE THE
C     CLFILE. THE FORMAT OF EXFILE IS NOT IDENTICAL TO THE CLFILE.
C
C
C     ***** COMMON-EQUIVALENCE BLOCK VARIABLES *****
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
C
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))
      EQUIVALENCE             (AREA1(1),RECORD(1)),(AREA1(1),IRECRD(1)),
     1  (AREA1(257),CURRNT),(AREA1(258),IDPLOT(1)),(AREA1(260),IPLOTI),
     2   (AREA1(261),IPX)   , (AREA1(262),IPY)   , (AREA1(263),NCAMRA),
     3   (AREA1(264),NRECNO), (AREA1(265),SEQNO) , (AREA1(266),NX)    ,
     4   (AREA1(267),NY), (AREA1(268),PARTNO(1)),  (AREA1(280),PT0(1)),
     5   (AREA1(283),PTU(1)), (AREA1(286),KPLOT) ,
     6(AREA1(335),IPLTAB(1)), (AREA1(375),MLTFLG), (AREA1(376),NREAD) ,
     7 (AREA1(377),NNNNN(1)), (AREA1(381),NRECF) , (AREA1(382),NRECL) ,
     8   (AREA1(383),NCFL)  , (AREA1(384),NPWDS) , (AREA1(385),NPTAB) ,
     9   (AREA1(386),INDXR) , (AREA1(387),INDXN) , (AREA1(388),NRECN1)
      EQUIVALENCE             (AREA1(389),NTAPE) , (AREA1(390),NCLEND),
     1 (AREA1(391),NRECLS), (AREA1(392),NTAPE1),(AREA1(393),INDTBS(1)),
     2   (AREA1(473),INDXS) , (AREA1(474),EMPTY) , (AREA1(475),ISTFLG),
     3   (AREA1(476),ICPYSW),     (AREA1(287),MATTAB(1,1,1))
      EQUIVALENCE             (AREA1(477),SAVSEQ)
C
      EQUIVALENCE      (AREA2(1),AMATRX(1,1)),     (AREA2(1),AMTR(1)) ,
     1   (AREA2( 37),AN1)   , (AREA2( 38),AN2)   , (AREA2( 39),BRANCH),
     2   (AREA2( 40),CMAT(1,1)),  (AREA2(52),CNTMAT(1,1)),
     3   (AREA2(52),CNTM(1)),  (AREA2(88),CONT(1)),
     4                       (AREA2(91),COUNT(1)), (AREA2( 94),ICLWAS),
     5   (AREA2( 95),ICOPY) , (AREA2( 96),INDN)  ,
     6   (AREA2( 99),INDTAB(1)),  (AREA2( 99),TABIND(1)),
     7                      (AREA2(259),INDXNO(1)),(AREA2(262),IPLOTX),
     8 (AREA2(463),IPLWAS),(AREA2(464),IRECNI(1)),(AREA2(465),JCOPY)  ,
     9   (AREA2(466),KCOPY) , (AREA2(467),LPRINT), (AREA2(468),MAXCOP)
      EQUIVALENCE             (AREA2(485),TNTM(1)),(AREA2(521),VUN)   ,
     1   (AREA2(469),MULTAX), (AREA2(470),NLETRS), (AREA2(471),NTAB)  ,
     2   (AREA2(472),ORIGIN), (AREA2(473),PPRINT(1)),
     3   (AREA2(485),TMATRX(1,1)),  (AREA2(522),TRAMAT(1,1)),
     4   (AREA2(534),NCSMAX), (AREA2(535),LVLCPY), (AREA2(536),NOCPY)
C
      EQUIVALENCE             (AREA3(  1),AX0)   , (AREA3(  2),AX)    ,
     1   (AREA3(  3),AY0)   , (AREA3(  4),AY)    , (AREA3(  5),DC)    ,
     2   (AREA3(  6),DX)    , (AREA3(  7),DY)    , (AREA3(  8),DELX)  ,
     3   (AREA3(  9),DELY)  , (AREA3( 10),IERR)  , (AREA3( 11),ITRUNC),
     4   (AREA3( 12),LOKATE), (AREA3( 13),MCODE) , (AREA3( 14),NX0)   ,
     5   (AREA3( 15),NX1)   , (AREA3( 16),NX2)   , (AREA3( 17),NX4)   ,
     6   (AREA3( 18),NX5)   , (AREA3( 19),NY0)   , (AREA3( 20),NY1)   ,
     7   (AREA3( 21),NY2)   , (AREA3( 22),NY4)   , (AREA3( 23),NY5)   ,
     8   (AREA3( 24),PARAM) ,                      (AREA3( 75),PNAME) ,
     9   (AREA3( 76),PPT(1)), (AREA3( 79),EMPTY2), (AREA3( 80),TL)
      EQUIVALENCE             (AREA3( 81),X0)    , (AREA3( 82),X1)    ,
     1   (AREA3( 83),X2)    , (AREA3( 84),X3)    , (AREA3( 85),XNEW)  ,
     2   (AREA3( 86),Y0)    , (AREA3( 87),Y1)    , (AREA3( 88),Y2)    ,
     3   (AREA3( 89),Y3)    , (AREA3( 90),YNEW)  , (AREA3( 91),EMPTY3)
C
C
      DIMENSION   AMATRX(3,4),AMTR  ( 36),CMAT  (3,4),CNTMAT(3,4),
     1CNTM  ( 36),CONT  (  3),COUNT (  3),IDPLOT(  2),INDTAB(160),
     2INDXNO(  3),IRECNI(  3),IRECRD(256),PARTNO( 12),
     3PPRINT( 12),PPT   (  3),PT0   (  3),PTU   (  3),NNNNN (  4),
     4RECORD(256),TRAMAT(3,4),TABIND(160),TMATRX(3,4),TNTM  ( 36)
C
      INCLUDE (DARRAY)
C
      INCLUDE (KNUMBR)
C
      COMMON /KFLAGS/ KFLAGS
      DIMENSION  KFLAGS(5)
      EQUIVALENCE             (KFLAGS( 1),CLPRT) , (KFLAGS( 2),CLWRT) ,
     1   (KFLAGS( 3),CLPLOT), (KFLAGS( 4),TAPFLG), (KFLAGS( 5),ITRAFL)
C
      INCLUDE (CLHOLRTH)
C
      COMMON /NCFSTO/ NCFSTO,CSCALE
      DIMENSION NCFSTO(60000),MATTAB(4,4,3),AMTTAB(4,4,3),IPLTAB(40)
      EQUIVALENCE  (MATTAB(1,1,1),AMTTAB(1,1,1))
C
C...     TYPE DECLARATIONS AND MISCELLANEOUS EQUIVALENCES
C
      DOUBLE PRECISION  NCFSTO, IRECRD, MATTAB, KKSTAK
      INTEGER  CLPRT,CLWRT,CLPLOT,CURRNT,BRANCH,PPFLAG,TAPFLG
C
      DIMENSION  ALETRA(3), INDTBS(80)
      DIMENSION  PPSTAK(15,30), KKSTAK(15,30), CPFL(6)
      EQUIVALENCE  (PPSTAK(1,1),KKSTAK(1,1))
C
      DIMENSION  JRECRD(512)
      EQUIVALENCE  (RECORD(1),JRECRD(1)), (JRECRD(6),NUMWDS)
C
      INTEGER Z4E
      PARAMETER (Z4E=1308622848)
      INTEGER IPOW(2)
      EQUIVALENCE(IPOW(1),ZERO)
C
C...     SYSTEM I/O FILE NAMES
C
      COMMON/NRECC/NRECC
      DIMENSION NRECC(21)
C
      INTEGER CPYEND
      DIMENSION CPYEND(2,3)
C
      DIMENSION AMATSV(3,4,3)
C
      CHARACTER*8 INDEX,CTEST
      CHARACTER IFMT13*6,IFMT14*20,IFMT17*12,IFMT18*12
C
      DATA IFMT13/' COPY '/
      DATA IFMT14/' HAS BEEN COMPLETED '/
      DATA IFMT17/' BEGIN PASS '/
      DATA IFMT18/' THRU COPY  '/
C
      DATA  IPOW/Z4E,0/
      DATA  INDEX/'INDEX   '/,NOCPSV/0/
C
C...     ***** COPY COMMAND PROCESSING ROUTINE *****
C
C...     IF AN AERR RECORD HAS BEEN ENCOUNTERED DURING THIS COPY LOOP
C        THIS SECTION SETS FLAGS TO BYPASS COPY PROCESSING
C
      IF (NOCPY .EQ. 0 .AND. NOCPSV .EQ. 0) GO TO 3005
      LVLTMP=LVLCPY-1
      IF (LVLTMP .LT. 0) GO TO 3002
      NOCPSV=NOCPY
      IF (LVLTMP .EQ. 0) NOCPY=0
      IF (NOCPSV .EQ. 0) GO TO 3005
      LVLCPY=LVLTMP
 3002 ISTFLG=3
      NCFL=1
      NRECL=1
      ICOPY=0
      CALL APT336(30034,'APT335  ')
      ICPYSW=0
      GO TO 3963
C
C
C
C
C     THIS SECTION PROCESSES THE COPY INSTRUCTION. THE PROGRAM IS SETUP
C
C     TO PERFORM THREE LEVELS OF NESTED COPIES.THE ONLY LIMITATION ON
C
C     THIS IS MAXCOP AND THE AMOUNT OF STORAGE PROVIDED FOR AMATRX,
C
C     CNTMAT,COUNT,INDXNO,AND IRECNI.
C
C     FOR EACH ADDITIONAL NEST AMATRX AND CNTMAT EACH MUST BE INCREASED
C
C     BY 12. COUNT,INDXNO,AND IRECNI EACH MUST BE INCREASED BY 1.
C
C     ALSO MAXCOP MUST BE INCREASED BY 1.
C
C     AMATRX IS THE MATRIX DEFINED BY EACH COPY AS IT IS SENSED AND IS
C
C     SET UP BY XYROT,SAME,OR MODIFY INSTRUCTIONS.
C     CNTMAT IS THE CURRENT RESULTANT COPY MATRIX.
C     COUNT IS THE NUMBER OF TIMES A COPY IS TO LOOP.
C     TMATRXIS THE COMBINATION OF ALL MATRICES PRESENTLY IN EFFECT.
C     INDXNO IS THE NUMBER OF THE COPY JUST SETUP.
C     IRECNI IS THE RECORD NUMBER OF THE CURRENT COPY.
C     CURRNT IS THE RECORD NUMBER OF THE INSTRUCTION JUST READ.
C
C     CHECK FOR VALID INDEX/N
 3005 CSCALE=1.0
      ICPYSW = 0
C
      DO 3010 I=1,NTAB,2
      IF (INT(IRECRD(5))-INDTAB(I).EQ.0) GO TO 3029
 3010 CONTINUE
C
C     INDEX NUMBER NOT FOUND IN INDEX TABLE
C
      CALL APT336(30014,'APT335  ')
 3021 GO TO 3963
C
C     SAVE INDEX POINTER
C
 3029 INDXS=(I+1)/2
      INDXN=I
      INDXR=I+1
C
C...  CHECK IF RECORD IS AN INDEX/N,NOMORE
C...  COMMAND THAT TERMINATES A COPY LOOP
C
      IF (BRANCH.EQ.7.AND.(ICOPY.EQ.0.OR.
     /    RECORD(5).NE.AMTTAB(1,4,ICOPY))) RETURN
      IF (BRANCH.EQ.7) GO TO 3735
C
C     DETERMINE WHAT COPY MODIFIER IS INVOLVED
C
 3030 CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)
      IF(CTEST.EQ.TRANSL) GO TO 3131
C
      IF(CTEST.EQ.XYROT ) GO TO 3361
C
      IF(CTEST.EQ.SAME  ) GO TO 3501
C
      CALL HOLFRM(IRECRD(7),CTEST,1,8,NWD)
      IF(CTEST.EQ.MODIFY) GO TO 3580
C
      IF(CTEST.EQ.MIRROR) GO TO 3670
C
C     IN CORRECT MODIFIER IN A COPY COMMAND
      CALL APT336(30013,'APT335  ')
C
C     TURN OFF WRITING OF CLTAPE,PLOT-TURN ON CLPRNT
 3100 CLWRT =K0
      CLPLOT=0
      CLPRT=1
      ICOPY=K0
      ISTFLG=3
      GO TO 3963
C     THIS SECTION SETS UP THE TRANSL PARAMETERS
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT
 3131 IF (JRECRD(6)-12.LT.0) GO TO 3701
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS
      IF (RECORD(15).LT. 0.5D0) GO TO 3704
C     SET UP THE TRANSL MATRIX
C
      AMATRX(1,4)=RECORD( 9)
      AMATRX(2,4)=RECORD(11)
      AMATRX(3,4)=RECORD(13)
      AMATRX(1,1)=1.0D0
      AMATRX(1,2)=0.0D0
C
      AMATRX(1,3)=0.0D0
C
      AMATRX(2,1)=0.0D0
C
      AMATRX(2,2)=1.0D0
C
      AMATRX(2,3)=0.0D0
C
      AMATRX(3,1)=0.0D0
      AMATRX(3,2)=0.0D0
      AMATRX(3,3)=1.0D0
      ICOUNT=RECORD(15)
      GO TO 3710
C     THIS SECTION SETS UP THE XYROT PARAMETERS
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT
 3361 IF (JRECRD(6)-K8.LT.0) GO TO 3701
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS
      IF (RECORD(11).LT.0.5D0) GO TO 3704
C     SET UP THE XYROT MATRIX
            RADIN  = RECORD(9)* 0.0174532925D0
      AMATRX(1,1) = DCOS(RADIN)
C
      AMATRX(1,2) =-DSIN(RADIN)
C
      AMATRX(1,3)= 0.D0
C
      AMATRX(1,4)=0.0D0
C
      AMATRX(2,1) = DSIN(RADIN)
C
      AMATRX(2,2) = DCOS(RADIN)
C
      AMATRX(2,3)=0.0D0
C
      AMATRX(2,4)=0.0D0
      AMATRX(3,1)=0.0D0
      AMATRX (3,2)=0.D0
      AMATRX (3,3)=1.D0
      AMATRX (3,4)=0.D0
      ICOUNT=RECORD(11)
      GO TO 3710
C     THIS SECTION SETS UP THE SAME PARAMETERS
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT
 3501 IF (JRECRD(6)-K6.LT.0) GO TO 3701
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS
        IF (RECORD(9).LT.0.5D0) GO TO 3704
C     SET UP THE SAME MATRIX
C
C
      DO 3520 I=1,3
      DO 3520 J=1,4
C
 3520 AMATRX (I,J) =0.0D0
C
      AMATRX(1,1)=1.0D0
C
      AMATRX(2,2)=1.0D0
C
      AMATRX(3,3)=1.0D0
C
      ICOUNT=RECORD(9)
      GO TO 3710
C     THIS SECTION SETS UP THE MODIFY PARAMETERS
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT
 3580 IF (JRECRD(6) .NE. 20)  GO TO 3701
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS
      IF (RECORD(23) .LT. 0.5D0)  GO TO 3704
C     SET UP MODIFY MATRIX
      K = 9
      DO 3640 I=1,3
      DO 3640 J=1,4
      K = K + K1
C
 3640 AMATRX(I,J)= RECORD(K)
C
      ICOUNT=RECORD(23)
C      CHECK FOR A SCALE MATRIX
       DO 3653 I=1,3
      IF (DABS( AMATRX(I,4)) - 0.000001D0)  3653,3653,3659
 3653  CONTINUE
       DO 3656 I=2,3
       IF (AMATRX(1,1)-AMATRX(I,I)) 3659,3656,3659
 3656  CONTINUE
      IF (CSCALE-1.0D0) 3658,3657,3658
 3657        CSCALE= AMATRX(1,1)
      GO TO 3710
 3658        CSCALE= CSCALE*AMATRX(1,1)
      GO TO 3710
 3659        CSCALE= 1.0D0
      GO TO 3710
C     THIS SECTION SETS UP THE MIRROR PARAMETERS (NOT OPERATIVE)
C     PRINT DIAGNOSTIC FOR USING A MIRROR MODIFIER
C
 3670 CALL APT336(30017,'APT335  ')
      CLPRT=1
      GO TO 3963
C
C....    ERROR - INCORRECT NUMBER OF PARAMETERS
 3701 CALL APT336(30015,'APT335  ')
      GO TO 3100
C
C....    ERROR - PARAMETER  N  IS ZERO OR MINUS
 3704 CALL APT336(30016,'APT335  ')
      GO TO 3100
C
C     THE TRANSL,XYROT,SAME,MODIFY,OR MIRROR TYPE COPY HAS BEEN SET UP
C     SET RECORD NO. OF CURRENT COPY EQUAL TO RECORD NUMBER OF CURRENT
C     INSTRUCTION
C
 3710 IF (ICOPY.EQ.0) GO TO 3770
      IF (RECORD(5).EQ.AMTTAB(1,4,ICOPY)) GO TO 3730
      IF (INDTAB(INDXR).LT.NRECC(1)) GO TO 3770
C
C     ERROR - THIS COPY NOT CURRENT COPY OR INDEX NOT IN PROPER PLACE
C
 3719 CALL APT336(30018,'APT335  ')
      GO TO 3100
C
C     THIS COPY HAS CURRENT INDEX NO. - CHECK RECORD NO IN CASE THERE
C     ARE MULTIPLE COPIES TO THE SAME INDEX
C
 3730 IF (NRECC(1).NE.MATTAB(2,4,ICOPY  )) GO TO 3770
C
C     THIS IS THE CURRENT COPY - REDUCE COUNT
C
 3735 AMTTAB(4,4,ICOPY)=AMTTAB(4,4,ICOPY)-1.0D0
      IF (AMTTAB(4,4,ICOPY)) 3719,3740,3760
 3740 I=AMTTAB(1,4,ICOPY)
      IF (CLPRT .NE. 1) GO TO 3743
      IO=JRECRD(4)
      CALL ICONV(IO,DARRAY,2,8)
      CALL CFORM('.',DARRAY,10,1)
      CALL CFORM(IFMT13,DARRAY,14,6)
      CALL ICONV(I,DARRAY,20,5)
      CALL CFORM(IFMT14,DARRAY,25,20)
      CALL CPRINT(DARRAY)
 3743 ICOPY=ICOPY-1
      IF (ICOPY) 3719,3745,3750
C
C...     DECREASE COPY LEVEL MARKER AND RESET FLAGS PROPERLY
 3745 ISTFLG=1
      NREAD=1
      LVLCPY=LVLCPY-1
C...     IF COPY LEVEL IS ZERO, RESET FLAGS FOR INITIAL COPY STORAGE
 3750 IF (LVLCPY) 3751,3752,3753
 3751 LVLCPY=0
 3752 NREAD=1
      ISTFLG=3
      NCFL=1
      NRECL=1
      GO TO 3757
C...     RESET FLAGS FOR STORAGE STARTING AFTER THIS COPY COMMAND
 3753 NCFL=CPYEND(2,ICOPY+1)
 3757 CALL APT305
      IF (NREAD.LT.3.AND.NRECC(1).NE.
     /    CPYEND(1,ICOPY+1))
     /  NRECC(1)=CPYEND(1,ICOPY+1)
      NRECC(1)=CPYEND(1,ICOPY+1)
      GO TO 3962
C
C     MAKE ANOTHER PASS THROUGH THIS COPY LOOP - UPDATE MATRIX IN MATTAB
C
 3760 CALL APT306(AMTTAB(1,1,ICOPY),AMTTAB(1,1,ICOPY),AMATSV(1,1,ICOPY))
      GO TO 3820
C
C     FIRST TIME FOR THIS COPY - STORE IN NCFSTO
C
 3770 IF (ISTFLG.NE.1) GO TO 3800
      IF ((NCFL + (NUMWDS+3)) .GE. NCSMAX) GO TO 3800
 3775 K=(NUMWDS +3)
      DO 3780 I = 1,K
      NCFSTO(NCFL)=IRECRD(I)
 3780 NCFL=NCFL+1
      K=NCFL-NUMWDS-1
      NCFSTO(K)=JRECRD(6)+NPWDS*1000
      NPWDS=NUMWDS+3
      NRECL=NRECL+1
C
C     ADVANCE COPY LEVEL INDICATOR (ICOPY)
C
 3800 ICOPY = ICOPY+1
      CPYEND(1,ICOPY)=NRECC(1)
      CPYEND(2,ICOPY)=NCFL
C
      IF (MAXCOP-ICOPY) 3801,3810,3810
C
C     OVER 3 LEVES OF NESTED COPIES
C
 3801 CALL APT336(30019,'APT335  ')
      GO TO 3100
C
C     STORE MATRIX FOR NEW COPY IN MATTAB
C
 3810 IF (CLWRT .EQ. 0) GO TO 3100
      CALL APT308(AMTTAB(1,1,ICOPY),AMATRX(1,1))
      AMTTAB(4,4,ICOPY)=ICOUNT
      MATTAB(3,4,ICOPY  ) = INDTAB(   INDXR)
      MATTAB(2,4,ICOPY  ) = NRECC(1)
      MATTAB(1,4,ICOPY  )= INDTAB(  INDXN)
      CALL APT308(AMATSV(1,1,ICOPY),AMATRX(1,1))
      COUNT(ICOPY)=ICOUNT
C
C     GENERATE PRODUCT TRANSFORMATION MATRIX FOR THIS COPY PASS ---
C
 3820 CALL APT305
C
C     NOW WE SET UP THE POINTER TO THE CLFILE STORAGE AREA AND BACK UP
C      THE INPUT TAPE (IF NECESSARY)
C
C     NRECF = RECORD NUMBER OF FIRST RECORD IN CLFILE STORAGE (NCFSTO)
C     NRECL = RECORD NUMBER OF LAST RECORD IN CLFILE STORAGE
C     NRECC = RECORD NUMBER OF CURRENT RECORD
C     MATTAB(1,4,ICOPY) = INDEX NUMBER
C     MATTAB(2,4,ICOPY) = RECORD NUMBER OF COPY
C     MATTAB(3,4,ICOPY) = RECORD NUMBER OF INDEX
C     ICOPY =  COPY LEVEL
C     NCFL  =  CLFILE STORAGE AREA POINTER   NCFSTO(NCFL)
C
 3900 IF (CLPRT .EQ. 1) CALL APT302
      IF (MATTAB(3,4,ICOPY  ).GT.NRECL) GO TO 3950
      NREAD=K3
      ISTFLG=K2
      NCFL=INDTBS(INDXS)
      K=NCFSTO(NCFL+2)/1000
      K=NCFSTO(NCFL+2)+3-K*1000
      DO 3905 I = 1,K
      IRECRD(I)=NCFSTO(NCFL)
 3905 NCFL=NCFL+1
      IRECRD(3)=ZERO
      NUMWDS=K-3
 3910 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF(CTEST.EQ.INDEX .AND.
     C   DABS(IRECRD(5)-MATTAB(1,4,ICOPY) ).LT. 0.1) GO TO 3960
      ICPYSW = -1
      GO TO 3963
 3950 MATTMP=MATTAB(3,4,ICOPY)
      NRECC(1)=MATTMP
      CALL APT314(NTAPE,NRECC(1))
      GO TO 3910
 3960 I=COUNT(ICOPY)-AMTTAB(4,4,ICOPY)+1.0D0
      K=AMTTAB(1,4,ICOPY)
      IF (CLPRT .NE. 1) GO TO 3962
      IO=JRECRD(4)
      CALL ICONV(IO,DARRAY,2,8)
      CALL CFORM('.',DARRAY,10,1)
      CALL CFORM(IFMT17,DARRAY,14,12)
      CALL ICONV(I,DARRAY,26,4)
      CALL CFORM(IFMT18,DARRAY,30,12)
      CALL CPRINT(DARRAY)
 3962 ICPYSW = 1
 3963 RETURN
      END
