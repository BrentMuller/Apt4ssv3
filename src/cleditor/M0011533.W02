*
C
C.....FORTRAN SUBROUTINE                   APT301
C*********************************************************
C******                                            *******
C******               CLTAPE EDITOR                *******
C******                                            *******
C*********************************************************
CIBFTC A301    FULIST,REF
C PURPOSE      TO CONTROL OPERATION OF THE GROUP OF SUBROUTINES
C              COMPRISING THE CLTAPE EDITOR FUNCTION.
C LINKAGE      CALL APT301
C ARGUMENTS    NONE - ALL THE DATA REQUIRED BY APT301 IS ON
C              EXFILE.
C SUBSIDIARIES APT302, APT303, APT304, APT305, APT306, APT307,
C              APT308, APT309, APT310, APT311, APT312, APT313,
C              APT314, APT315, APT318, APT319, APT320, APT321,
C              APT322, APT325, APT326, APT327, APT328, APT329,
C              ALT330, APT331, APT332
C...NOTE   THIS ROUTINE HAS BEEN MODIFIED SO THAT IT NO LONGER
C          USES MIXED ARITHMETIC (DOUBLE PRECISION NORMALIZED,
C          DOUBLE PRECISION UNNORMALIZED,AND INTEGER )
      SUBROUTINE APT301
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C     THE FOLLOWING PROGRAM IS THE EXECUTIVE ROUTINE FOR THE CLTAPE
C     EDITOR.IT HAS THREE FUNCTIONS
C     TO PROVIDE A VERIFICATION LISTING OF THE CLFILE,INCLUDING ERROR
C     DIAGNOSTICS
C     TO PROCESS COPY AND VTLAXS COMMANDS
C     TO PROVIDE THE BASE STRUCTURE FOR ANY FUTURE PLOTTING PROGRAMS
C
C     THE EXECUTION OF A PART PROGRAM RESULTS IN THE PREPARATION OF
C     EXFILE.  THE CLEDITOR USES EXFILE  AS INPUT TO PREPARE THE
C     CLFILE.  THE FORMAT OF EXFILE IS NOT IDENTICAL TO THE CLFILE.
C
C
C     ***** COMMON-EQUIVALENCE BLOCK VARIABLES *****
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
C
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))
C
      EQUIVALENCE             (AREA1(1),RECORD(1)),(AREA1(1),IRECRD(1)),
     1  (AREA1(257),CURRNT),(AREA1(258),IDPLOT(1)),(AREA1(260),IPLOTI),
     2   (AREA1(261),IPX)   , (AREA1(262),IPY)   , (AREA1(263),NCAMRA),
     3   (AREA1(264),NRECNO), (AREA1(265),SEQNO) , (AREA1(266),NX)    ,
     4   (AREA1(267),NY), (AREA1(268),PARTNO(1)),  (AREA1(280),PT0(1)),
     5   (AREA1(283),PTU(1)), (AREA1(286),KPLOT) ,
     6 (AREA1(335),IPLTAB(1)),(AREA1(375),MLTFLG), (AREA1(376),NREAD) ,
     7 (AREA1(377),NNNNN(1)), (AREA1(381),NRECF) , (AREA1(382),NRECL) ,
     8   (AREA1(383),NCFL)  , (AREA1(384),NPWDS) , (AREA1(385),NPTAB) ,
     9   (AREA1(386),INDXR) , (AREA1(387),INDXN) , (AREA1(388),NRECN1)
      EQUIVALENCE             (AREA1(389),NTAPE) , (AREA1(390),NCLEND),
     1 (AREA1(391),NRECLS), (AREA1(392),NTAPE1),(AREA1(393),INDTBS(1)),
     2   (AREA1(473),INDXS) , (AREA1(474),EMPTY) , (AREA1(475),ISTFLG),
     3   (AREA1(476),ICPYSW),     (AREA1(287),MATTAB(1,1,1))
      EQUIVALENCE             (AREA1(477),SAVSEQ)
C
      EQUIVALENCE      (AREA2(1),AMATRX(1,1)),     (AREA2(1),AMTR(1)) ,
     1   (AREA2( 37),AN1)   , (AREA2( 38),AN2)   , (AREA2( 39),BRANCH),
     2   (AREA2( 40),CMAT(1,1)),  (AREA2(52),CNTMAT(1,1)),
     3   (AREA2(52),CNTM(1)),  (AREA2(88),CONT(1)),
     4                       (AREA2(91),COUNT(1)), (AREA2( 94),ICLWAS),
     5   (AREA2( 95),ICOPY) , (AREA2( 96),INDN)  ,
     6   (AREA2( 99),INDTAB(1)),  (AREA2( 99),TABIND(1)),
     7                      (AREA2(259),INDXNO(1)),(AREA2(262),IPLOTX),
     8 (AREA2(463),IPLWAS),(AREA2(464),IRECNI(1)),(AREA2(465),JCOPY)  ,
     9   (AREA2(466),KCOPY) , (AREA2(467),LPRINT), (AREA2(468),MAXCOP)
      EQUIVALENCE             (AREA2(485),TNTM(1)),(AREA2(521),VUN)   ,
     1   (AREA2(469),MULTAX), (AREA2(470),NLETRS), (AREA2(471),NTAB)  ,
     2   (AREA2(472),ORIGIN), (AREA2(473),PPRINT(1)),
     3   (AREA2(485),TMATRX(1,1)),  (AREA2(522),TRAMAT(1,1)),
     4   (AREA2(534),NCSMAX), (AREA2(535),LVLCPY), (AREA2(536),NOCPY)
C
      EQUIVALENCE             (AREA3(  1),AX0)   , (AREA3(  2),AX)    ,
     1   (AREA3(  3),AY0)   , (AREA3(  4),AY)    , (AREA3(  5),DC)    ,
     2   (AREA3(  6),DX)    , (AREA3(  7),DY)    , (AREA3(  8),DELX)  ,
     3   (AREA3(  9),DELY)  , (AREA3( 10),IERR)  , (AREA3( 11),ITRUNC),
     4   (AREA3( 12),LOKATE), (AREA3( 13),MCODE) , (AREA3( 14),NX0)   ,
     5   (AREA3( 15),NX1)   , (AREA3( 16),NX2)   , (AREA3( 17),NX4)   ,
     6   (AREA3( 18),NX5)   , (AREA3( 19),NY0)   , (AREA3( 20),NY1)   ,
     7   (AREA3( 21),NY2)   , (AREA3( 22),NY4)   , (AREA3( 23),NY5)   ,
     8   (AREA3( 24),PARAM),                       (AREA3( 75),PNAME) ,
     9   (AREA3( 76),PPT(1)), (AREA3( 79),EMPTY2), (AREA3( 80),TL)
      EQUIVALENCE             (AREA3( 81),X0)    , (AREA3( 82),X1)    ,
     1   (AREA3( 83),X2)    , (AREA3( 84),X3)    , (AREA3( 85),XNEW)  ,
     2   (AREA3( 86),Y0)    , (AREA3( 87),Y1)    , (AREA3( 88),Y2)    ,
     3   (AREA3( 89),Y3)    , (AREA3( 90),YNEW)  , (AREA3( 91),EMPTY3)
C
      DIMENSION   AMATRX(3,4),AMTR  ( 36),CMAT  (3,4),CNTMAT(3,4),
     1CNTM  ( 36),CONT  (  3),COUNT (  3),IDPLOT(  2),INDTAB(160),
     2INDXNO(  3),IRECNI(  3),IRECRD(256),            PARTNO( 12),
     3PPRINT( 12),PPT   (  3),PT0   (  3),PTU   (  3),NNNNN (  4),
     4RECORD(256),TRAMAT(3,4),TABIND(160),TMATRX(3,4),TNTM  ( 36)
C
C
      INCLUDE (KNUMBR)
C
      COMMON /KFLAGS/ KFLAGS
      DIMENSION  KFLAGS(5)
      EQUIVALENCE             (KFLAGS( 1),CLPRT) , (KFLAGS( 2),CLWRT) ,
     1   (KFLAGS( 3),CLPLOT), (KFLAGS( 4),TAPFLG), (KFLAGS( 5),ITRAFL)
C
      INCLUDE (CLHOLRTH)
C
      COMMON /NCFSTO/ NCFSTO,CSCALE
      DIMENSION NCFSTO(60000),MATTAB(4,4,3),AMTTAB(4,4,3),IPLTAB(40)
      EQUIVALENCE  (MATTAB(1,1,1),AMTTAB(1,1,1))
C
      COMMON /VERSON/ NEWSYS,ISTAND,IMACHN,IFIRST,NUM,KONSYS(2)
C
      COMMON /NRECC/ NRECC
      DIMENSION  NRECC(21)
C
C...     TYPE DECLARATIONS AND MISCELLANEOUS EQUIVALENCES
C
      DOUBLE PRECISION  NCFSTO, IRECRD, MATTAB, KKSTAK, INDEX
      INTEGER  CLPRT,CLWRT,CLPLOT,CURRNT,BRANCH,PPFLAG,CPFL
      INTEGER  TAPFLG
C
      DIMENSION  ALETRA(3), INDTBS(80)
      DIMENSION PPSTAK(15,30),KKSTAK(15,30),CPFL(48)
      EQUIVALENCE (PPSTAK(1,1),KKSTAK(1,1))
C
      DIMENSION  JRECRD(512)
      EQUIVALENCE  (RECORD(1),JRECRD(1)), (JRECRD(6),NUMWDS)
C
      INTEGER Z4E
      PARAMETER (Z4E=1308622848)
      INTEGER IZERO(2)
      EQUIVALENCE (IZERO(1),ZERO)
C
      CHARACTER*8 CTEST,ENDIND,ENORM,VTLAXS,CLDATA,CLOCK
      CHARACTER HMACR*16,CPFLID*4,IBLK2*2,HENDS*4,HBIGIN*6
      INTEGER BCDF,ITEMP(2)
      EQUIVALENCE (ITEMP(1),DTEMP)
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE (SYMFIL)
      COMMON/R5AXIS/
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,VCUTER,TEST  ,CRADUS
      COMMON/I5AXIS/
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV
C
      CHARACTER*20 IFMT1,IFMT3
C
      INCLUDE (DARRAY)
C
C
      DATA IFMT1/'** START CLEDITOR **'/
      DATA IFMT3/'** END   CLEDITOR **'/
      DATA IZERO/Z4E,0/
      DATA ENDIND/'NOMORE  '/,CPFLID/'CPFL'/,IBLK2/'  '/,ENORM/'NORMAL'/
      DATA VTLAXS/'VTLAXS  '/,CLDATA/'CLDATA  '/,CLOCK/' CLOCK  '/
      DATA HMACR/'MACRO PROCESSING'/
      DATA HENDS /'ENDS'/
      DATA HBIGIN/'BEGINS'/
C
C     PRINT WHAT SECTION THIS IS
C
   10 CALL CFORM('1',DARRAY,1,1)
      CALL CFORM(IFMT1,DARRAY,45,20)
      CALL CPRINT(DARRAY)
C
C... READ CPFILE TO OBTAIN CLPRNT AND APTIII CONVERSION REQUIREMENTS
C
      CALL AREAD (CPFILE,1,CPFL,48,IR)
      CALL HOLFRM(CPFL(1),CTEST,1,4,NWD)
      IF ((CTEST(1:4) .EQ. CPFLID) .AND. (CPFL(2) .EQ. 1))  GO TO 6
C
      CALL APT336(30032,'APT301  ')
      RETURN
C
C... INITIALIZE ALL VARIABLES
C
    6 CLPRT=CPFL(4)
      ICLSV=1
      CLWRT=1
      IPLWAS=0
      CLPLOT=0
C...     CHECK CLPRNT REQUIREMENTS
      IF (CLPRT .EQ. 0) GO TO 35
      CALL CFORM('0TAPENO/ISN',DARRAY,1,11)
      CALL CPRINT(DARRAY)
      GO TO 45
   35 CALL CFORM('*** NO CLPRNT HAS BEEN REQUESTED ***',DARRAY,11,36)
      CALL CFORM('0',DARRAY,1,1)
      CALL CPRINT(DARRAY)
C...     CLEAR INDEX NUMBERS FROM TABLE
   45 DO 80 I=1,80
   80 TABIND(I)=K0
 90    COUNT(1) =K0
      IVCUT=0
      ICUT = 0
      IPLFLG=0
      IVTFLG=1
      NRECEX=0
      NRECCL=0
      NCFLSV=1
      ISTFLG=3
      MLTFLG=1
      NREAD=1
      INDXS=0
      NRECF=0
      NRECL=0
      NCFL=1
      NPWDS=0
      NTAB=1
      NPTAB=0
      MAXCOP=3
      NCAMRA=1
      MULTAX=0
      ICLWAS=0
      IDPLOT(1) =0
      IPLOTI=0
      LVLCPY=0
      NOCPY=0
      ICOPY =0
      NCSMAX=60000
      NCSSV=NCSMAX
      ICRDEF=0
      ITRCPY=0
      CURRNT=0
      ITRAFL=0
      ICP3=-1
       CSCALE = 1.
             TSCALE= 1.0
            PPFLAG = K0
                J1 = K1
      CALL APT314(-1,-1)
      I=1
      CALL APT314(EXFILE,I)
      NTAPE = EXFILE
      NTAPE1=K1
      NFIL12=12
      NFIL13=13
C
C**   SET = 1 IF NEW SYSTEM CLTAPE RECS. TO BE WRITTEN
      NEWSYS =K0
C
C**   SET = 1 IF APT III STANDARD CLTAPE TO BE WRITTEN
      ISTAND = K0
C
C**   SET = 1 IF A MACHINE P. P. COMMAND DETECTED IN A-301
      IMACHN = K0
C
C**   FLAG FOR LMCT
      IFIRST = K1
C
C**   INDEX INTO TABLE OF AVAILABLE POST PROCESSORS
      NUM = K1
C
C**   CONTROL SYSTEM NAME FROM W(5), MACHIN P.P.C. RECORD.
      KONSYS(1) = Z4E
      KONSYS(2) = K0
      DO 110 I=1,4
  110 NRECC(I)=K0
      NRECN1=1
C
C     READ EXFILE OR OLD CLFILE OR NCFSTO
C
  190 ICRDEF = K0
      IF(IVTFLG.EQ.6) GO TO 8025
      GO TO (210,200,220,240),NREAD
  200 NRECC(NTAPE1) = NRECC(NTAPE1)-1
      GO TO 211
  210 NRECC(NTAPE1)=NRECC(NTAPE1)+1
  211 CALL APT314(NTAPE,NRECC(NTAPE1))
      GO TO 270
  220 IF (NCFL .GE. (NCSSV-1)) GO TO 229
      K=NCFSTO(NCFL+2)/1000
      K=NCFSTO(NCFL+2)+3-K *1000
      DO 222 I = 1,K
      IRECRD(I) = NCFSTO(NCFL)
  222 NCFL=NCFL+1
      IRECRD(3)=ZERO
      NUMWDS=K-3
      GO TO 270
  229 NREAD=K1
  230 IF (NTAPE1.EQ.K1) GO TO 235
      I=NCFL-NPWDS+1
      K=NCFSTO(I)/1000
      NRECC(NTAPE1) = K
      CALL APT314 (NTAPE,K)
      IF ((IRECRD(1)-NCFSTO(I-1).EQ.0).AND.(IRECRD(2)-NCFSTO(I).EQ.0))
     1  GO TO 235
C
  232 I=AMTTAB(1,4,ICOPY)
      CALL APT336(30024,'APT301  ')
      CALL HELP
      GO TO 341
C
  235 NRECC(     1) = NRECL
      CALL APT314(NTAPE,NRECL)
      IF ((IRECRD(1)-NCFSTO(NRECLS).EQ.0).AND.(IRECRD(2)-NCFSTO(NRECLS+1
     1).EQ.0))GO TO 190
      GO TO 232
  240 IF (NCFL.GT.K0) GO TO 245
      NREAD=K2
      GO TO 230
  245 K=NCFSTO(NCFL+2)/1000
      K=NCFSTO(NCFL+2)+3-K*1000
      J=NCFSTO(NCFL+2)/1000
      M=NCFL
      DO 246 I=1,K
      IRECRD(I)   = NCFSTO(M)
  246 M=M+1
      IRECRD(3)=ZERO
      NUMWDS=K-K3
      NCFL=NCFL-J
C
  270 CALL APT310 (BRANCH,RECORD(1))
C
C     BRANCH ACCORDING TO RECORD NAME
C
      GOTO(300,2000,1400,3000,1450,300,6000,1300,300,1200,7000,1100
     1,7000,1600,8100,8000,5000,9100,5500,9500,4000,9600,8200,9800,9810,
     29000),BRANCH
C
C     THIS IS THE COMMON RETURN POINT FOR ALL SECTIONS OF THE CL EDITOR
C     AND THE POINT AT WHICH THE RECORDS ARE WRITTEN ON CLFILE IF CLWRT
C     =1 AND PRINTED IF CLPRT=1
C
C
C...  WRITE CLFILE,VLFILE AND CLFIL3 IF THE APPROPRIATE FLAGS ARE SET
C
  300 SEQSTO = RECORD(2)
      IF (BRANCH .NE. 3) SAVSEQ=RECORD(2)
      IF(CLWRT.EQ.1.AND.CPFL(6).EQ.1) CALL APT312
      GO TO 335
  330 SEQSTO=RECORD(2)
  335 IF(CLWRT.EQ.1.AND.CPFL(5).EQ.1) CALL CNVRT3(CPFL(7))
      GO TO 337
  336 SEQSTO=RECORD(2)
      SAVSEQ=RECORD(2)
  337 IF(CLPRT.EQ.1.AND.BRANCH.NE.21)CALL APT302
      RECORD(2)=SEQSTO
      IF(IVTFLG.EQ.6.AND.ISTFLG.NE.K1) GO TO 8025
C
C
C     IF FINI START OVER FOR NEXT PART PROGRAM
C
  340 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF(CTEST.NE.FINI) GO TO 350
  341 IF(NRECN1.NE.1.AND.CLWRT.EQ.1.AND.CPFL(6).EQ.0) CALL APT312
      IF(NRECN1.NE.1.AND.CLWRT.EQ.1)  CALL APT313
      IF(CLWRT.EQ.1.AND.CPFL(5).EQ.0) CALL CNVRT3(CPFL(7))
      CALL CFORM('0',DARRAY,1,1)
      CALL CFORM(IFMT3,DARRAY,45,20)
      CALL CPRINT(DARRAY)
      CALL TAPOP(EXFILE,-3)
      CALL TAPOP(NFIL12,-3)
      CALL TAPOP(NFIL13,-3)
      RETURN
C
C     CHECK RECORD FOR LAST ONE FROM AN OLD CLFILE
C
  350 IF (NTAPE1.EQ.K1) GO TO 380
      IF (NCLEND-JRECRD(4)) 400,360,380
  360 CALL APT314(-1,-1)
      NTAPE=EXFILE
      NTAPE1=K1
C
C...     IF WE ARE IN COPY LOOP, STORE RECORD IN NCFSTO
  380 IF (ISTFLG .NE. K1) GO TO 190
C
C IF WE ARE IN CLDAT/OFF-ON PART, NO COPY STORAGE
      IF(CPFL(5).EQ.K0) GOTO 190
C
C...     IF FIRST PASS INSIDE VTLAXS LOOP, NO COPY STORAGE
      CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF (IVTFLG .EQ. 2 .OR. CTEST .EQ. VTLAXS) GO TO 190
C
C...     IF THIS IS CLDATA RECORD, CHECK FOR TRACUT TRANSFORMATION
      IF (ITRCPY .NE. K1) GO TO 387
      ITRCPY=0
      GO TO 190
C
  385 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF (IVTFLG .EQ. 2 .OR. CTEST .EQ. VTLAXS) GO TO 190
      ITRCPY=1
  387 IF ((NCFL + (NUMWDS+3)) .LT. NCSMAX) GO TO 390
      IF((NCFL+(NUMWDS+3)).GE.NCSMAX)CALL APT336(30039,'APT301  ')
      ISTFLG=K2
      NCSSV=NCFL
      GO TO 397
C
C     MOVE RECORD TO STORAGE (NCFSTO)
C
  390 NRECLS=NCFL
      NRECL=NRECC(1)
      K=NUMWDS+3
      DO 395 I=1,K
      NCFSTO(NCFL) = IRECRD(  I)
  395 NCFL=NCFL+1
      IF(NCFL.GE.NCSMAX)CALL APT336(30039,'APT301  ')
      NCFSTO(NRECLS+2)=JRECRD(6)+NPWDS*1000
      NPWDS=NUMWDS+3
C
C..      CHECK FOR A TRACUT TRANSFORMATION OF THIS CLDATA RECORD
  397 IF (ITRCPY .NE. K1) GO TO 190
      IF (ICRDEF .EQ. K1) GO TO 2039
      GO TO 2100
C
C     THE LAST RECORD FROM THE OLD CLFILE WAS NOT FOUND
C
  400 CALL APT336(30031,'APT301  ')
      GO TO 360
C
C     SAVE THE PARTNO BCD TEXT-TO BE PLOTTED IN THE SETUPP SUBROUTINE
C
 1100 K = JRECRD(10)-1
      DO 1110 I=1,K
 1110 PARTNO(I)=RECORD(I+6)
      GO TO 300
C     SET THE MULTAX FLAG
 1200 MULTAX=K1
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF(CTEST.EQ.OFF) MULTAX=0
      GO TO 300
C     INSERT COMMAND
 1300 GO TO 300
C
C...     **** AERR PROCESSING ****
C
 1400 CLWRT=K1
      IF (JRECRD(8) .LT. 0) GO TO 1402
      IF (IVTFLG .EQ. 2) GO TO 1430
C...     SET FLAG IF COPY TRANSFORMATION SHOULD BE BYPASSED
      IF (ISTFLG .LT. 3 .OR. ICOPY .NE. 0) NOCPY=1
      IF (CLPRT .EQ. 0) GO TO 1405
      IF (JRECRD(4) .NE. 2) GO TO 300
      CLPRT=ICLSV
 1402 IF (CLPRT .EQ. 0) CALL APT302
      GO TO 300
C...     TURN ON CLPRNT AND BACKSPACE TO LAST CLDATA RECORD
 1405 DO 1410 JBCK=1,50
      NRECC(1)=NRECC(1)-1
      CALL APT314(NTAPE,NRECC(1))
      CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)
      IF (CTEST .EQ. CLDATA .AND. JRECRD(8) .NE. 1) GO TO 1420
      IF (CTEST .EQ. CLOCK) GO TO 1425
 1410 CONTINUE
C
C...     START CLPRNT AT CL MOTION COMMAND AND ISSUE DIAGNOSTIC
 1420 NRECC(1)=NRECC(1)-2
 1425 CALL APT336(30037,'APT301  ')
      ICLSV=0
      CLPRT=1
      GO TO 190
C
C...     IF VTLAXS LOOP, BACKSPACE TO VTLAXS/ON AND BYPASS TRANSFORMING
 1430 IVTFLG=1
      CALL APT336(30036,'APT301  ')
      NRECC(1)=IR
      CALL APT314(NTAPE,NRECC(1))
      CLPRT=1
      BRANCH=16
      GO TO 330
C
C        **** DYNDMP PROCESSING ***
C
 1450 CALL APT302
      GO TO 340
C
C     PPRINT-SAVE THE BCD TEXT
C
 1600 IF (IDPLOT(1) .EQ. K2) GO TO 300
      DO 1620 I=1,NUMWDS,2
 1620 PPRINT (I)= RECORD(I+4)
      GO TO 300
C     FINI. PREPARE FOR END OF FILE EXIT FROM CLTAPE EDITOR
C     IF CLFILE WAS WRITTEN, PLACE AN EOF ON IT
C      RETURN TO BEGINNING OF CLTAPE EDITOR.
C
C     CLDATA.THIS SECTION WILL PROCESS THE CUTTER LOCATION POINTS.IT WIL
C     L TRANSFORM THE POINTS IF A COPY IS IN EFFECT.IT WILL ALSO PLOT TH
C     E TOOL PATH IF THE PLOTTING ROUTINES ARE IN THE SYSTEM.
C
 2000 IF ((JRECRD(8)-K1).NE.0) GO TO 2070
      IF(ICUT.NE.0) GO TO 190
C     STORE THE ORIGIN NAME IF THIS IS AN INITIAL CLDATA RECORD
      ORIGIN=RECORD(5)
      CALL HOLFRM(ORIGIN,CTEST,1,8,NWD)
      IF (CTEST.EQ.GODLTA) GO TO 336
C
C     IF A CANONICAL FORM IS     INCLUDED CHECK FOR CIRCLE
C
      IF(JRECRD(6).EQ.K2) GO TO 300
      IF (JRECRD(18).NE.K4) GO TO 300
C
C...     CHECK FOR A COPY OR TRACUT TRANSFORMATION. IF BOTH ARE ON,
C        STORE THE ORIGINAL CANONICAL FORM BEFORE TRANSFORMING
C
       IF (ICOPY.GT.K0) GO TO 2040
       IF (ITRAFL.NE.K1)  GO TO 300
      IF(ISTFLG.EQ.K3) GO TO 2040
      ICRDEF=K1
      GO TO 385
 2039 ICRDEF=K0
 2040 CALL APT303 (RECORD(10),TMATRX,RECORD(10))
      CALL APT304 (RECORD(13),TMATRX,RECORD(13))
      CALL APT315 (RECORD(13),RECORD(13))
      RECORD(16)=CSCALE*TSCALE*RECORD(16)
      GO TO 300
 2070 CALL HOLFRM(ORIGIN,CTEST,1,8,NWD)
      IF(CTEST.NE.GODLTA) GO TO 2090
      IF(ICUT.NE.0) GO TO 190
      GO TO 336
C...    SET VTLAXS FLAGS AND SAVE LAST SET OF COORDINATES
 2090 IF(IVCUT.NE.1) GO TO 2091
      IVCUT=2
      GO TO 190
 2091 NRECEX=1
      XSTART=RECORD(NUMWDS-2)
      YSTART=RECORD(NUMWDS-1)
      ZSTART=RECORD(NUMWDS)
      IF(ICUT.NE.0) GO TO 190
C...    CHECK IF VTLAXS IS IN EFFECT
      IF(IVTFLG.EQ.K1) GO TO 2095
      CALL APT311
 2095 ITEMP(1)=BCDF(DUMMY9(1:4))
      ITEMP(2)=BCDF(DUMMY9(5:8))
      ORIGIN=DTEMP
C
C...     CHECK FOR A COPY OR TRACUT TRANSFORMATION. IF BOTH ARE ON,
C        STORE THE ORIGINAL CUTTER POINTS BEFORE TRANSFORMING
C
 2097 IF (ITRAFL .EQ. K1 .AND. ISTFLG .EQ. K1) GO TO 385
      IF (ITRAFL .EQ. K1 ) GO TO 2100
      IF (ICOPY) 3719,300,2100
C
C        CHECK FOR NO TOOL AXIS VECTOR TRANSFORMING
 2100 IF (MULTAX .NE. K1) GO TO 2120
      DO 2110 I=5,NUMWDS,7
      CALL APT303 (RECORD(I),TMATRX,RECORD(I))
C     TRANSFORM TOOL AXIS VECTOR
      CALL APT304 (RECORD(I+3),TMATRX,RECORD(I+3))
C     NORMALIZE VECTOR OUTPUT
       CALL APT315 (RECORD(I+3),RECORD(I+3))
 2110 CONTINUE
      GOTO 300
C
C
 2120 NLAST=NUMWDS+3
      DO 2125 I=5,NLAST,4
      CALL APT303(RECORD(I),TMATRX,RECORD(I))
 2125 CONTINUE
      GO TO 300
C
C...     *** COPY COMMAND PROCESSING ***
C
C...     IF VTLAXS IS IN EFFECT ISSUE DIAGNOSTIC
 3000 IF (ICP3.GE.0)GOTO 4011
      IF (IVTFLG .EQ. K4) GO TO 8010
      IF (IVTFLG .EQ. K2) GO TO 330
      CALL APT335
      IF (ICPYSW.EQ.0) GO TO 330
      IF (ICPYSW.GT.0) GO TO 190
      GO TO 232
C
C...     COPY LOGIC ERROR
 3719 CALL APT336(30018,'APT301  ')
      GO TO 330
C
C
C     THIS SECTION PROCESSES THE CLFILE RECORD - CHECKS PARAMETERS FOR
C     VALIDITY AND POSITIONS THE OLD CLFILE IF NECESSARY
C
 4000 CALL APT302
C...     CHECK FOR A CLDAT/2 COMMAND - SET FLAG TO START SAVING CLFILE
C...     WRITE IF XECUTION COMMAND CLDAT/START-NOMORE
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF(CTEST(7:8).NE.IBLK2)GOTO 4006
      IF(CTEST.EQ.ENDIND.OR.CTEST.EQ.ENORM)GOTO 4008
      ICP3=CPFL(5)
      CPFL(5)=0
      GOTO 4009
 4008 CPFL(5)=ICP3
      ICP3=-1
 4009 IF(ICOPY.EQ.0.AND.ITRAFL.EQ.0)GOTO 9000
 4011 CALL APT336(30040,'APT301  ')
      ITRAFL=0
      TSCALE=1.
      ICOPY=0
      ICPYSW=0
      NCFL=0
      NRECL=0
      GOTO 330
C
 4006 ICLDWR=JRECRD(14)
      I34FLG=JRECRD(18)
      IF(ICLDWR.EQ.1) GO TO 4002
      IF(ICLDWR.EQ.2) GO TO 4005
 4001 CALL APT336(30025,'APT301  ')
      GO TO 350
C     WRITE
 4002 CALL HOLFRM(IRECRD(11),CTEST,1,8,NWD)
      IF(CTEST.EQ.ON) GO TO 4003
      IF(CTEST.EQ.OFF) GO TO 4004
      GO TO 4001
C     ON
 4003 IF(I34FLG.EQ.3) CPFL(5)=1
      IF(I34FLG.EQ.4) CPFL(6)=1
      GO TO 9000
C     OFF
 4004 IF(I34FLG.EQ.3) GO TO 4007
      JRECRD(13)=Z4E
      JRECRD(14)=2
      CPFL(6)=0
      GO TO 190
 4007 CPFL(5)=0
      GO TO 9000
C     READ
 4005 IF(I34FLG.NE.4) GO TO 4001
      IF(JRECRD(20).EQ.1) K=JRECRD(22)
      CALL HOLFRM(IRECRD(11),CTEST,1,8,NWD)
      IF(CTEST.EQ.ON) K=10000
      IF(CTEST.EQ.OFF) GO TO 360
      NCLEND=JRECRD(26)
      IF(CTEST.EQ.ON) NCLEND=99990000
      J=K
      K=K/10000
      JTAPE=JRECRD(10)
      IF(JTAPE.NE.12.AND.JTAPE.NE.13) GO TO 4001
      NTAPE1=JTAPE-10
      IF(JTAPE.EQ.12) NTAPE=NFIL12
      IF(JTAPE.EQ.13) NTAPE=NFIL13
      CALL APT314(-1,-1)
      GO TO (4110,4110,4130,4130),NREAD
C
C     POSITION OLD CLFILE AND CHECK RECORD NUMBER
C
 4110 NRECC(NTAPE1)=K
      IF (ISTFLG.NE.K1) GO TO 4120
      IF ((NCFL + (NUMWDS+3)) .GE. NCSMAX) GO TO 4120
      NRECLS=NCFL
      NRECL=NRECC(1)
      K=NUMWDS+3
      DO 4115 I= 1,K
      NCFSTO(NCFL)=IRECRD(I)
 4115 NCFL=NCFL+1
      NCFSTO(NRECLS+2)=JRECRD(6)+NPWDS*1000
      NPWDS=K
 4120 CALL APT314(NTAPE,NRECC(NTAPE1))
      IF(JTAPE.EQ.12) NFIL12=NTAPE
      IF(JTAPE.EQ.13) NFIL13=NTAPE
      IF(J.EQ.10000) GO TO 270
      IF (JRECRD(4)-J.EQ.0) GO TO 270
C
      CALL APT336(30026,'APT301  ')
      GO TO 360
 4130 NRECC(NTAPE1)=K-1
      GO TO 190
C
C     THIS SECTION PROCESSES THE GEOMETRY ERROR RECORD
C
 5000 CLWRT = 1
      IF (CLPRT .EQ. 0) CALL APT302
      GO TO 300
C
C     THIS SECTION PROCESSES THE ARLEM RECORD
C
 5500 GO TO 300
C
C     THIS SECTION PROCESSES THE INDEX INSTRUCTION.IT ALSO SETS PLOT
C     FLAGS AND TESTS TO SEE IF THE PRESENT INDEX IS FOR A PLOT
C
C     CHECK FOR PLOT COMMANDS
C
 6000 IF (IPLFLG.EQ.0) GO TO 6020
C
C     IS THIS INDEX NUMBER ASSOCIATED WITH A PLOT
C
      DO 6010 I=1,NPTAB
      IF (INT(IRECRD(5))-IPLTAB(I).EQ.0) GO TO 300
 6010 CONTINUE
C
C     NOW CHECK COPY COMMANDS INDEX TABLE
C
 6020 IF (NTAB.GT.160) GO TO 6070
      CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)
      IF(JRECRD(6).EQ.4 .AND. CTEST.EQ.ENDIND) GO TO 3000
      IF(NTAB.EQ.1) GO TO 6031
      DO 6030 I = 1,NTAB,2
      IF (INT(IRECRD(5)).EQ. INDTAB(I)) GO TO 6060
 6030 CONTINUE
 6031 INDTAB(NTAB)=INT(IRECRD(5))
      INDTAB(NTAB+1) = NRECC(1)
      I=(NTAB+1)/2
      INDTBS(  I) = NCFL
      NTAB=NTAB+2
 6040 GO TO (6045,330,6050),ISTFLG
C
C        NESTED COPY ENCOUNTERED, INCREASE COPY LEVEL MARKER
 6045 LVLCPY=LVLCPY+1
      GO TO 330
C
C     THIS IS THE FIRST INDEX/N COMMAND SET PARAMETERS TO STORE CLFILE
C
 6050 IF (ICOPY .NE. 0) GO TO 330
      ISTFLG=1
      LVLCPY=1
      GO TO 330
C
C     CHECK TO SEE IF A COPY IS IN EFFECT
C
 6060 IF (ICOPY.NE.0) GO TO 6040
      I=RECORD(5)
      CALL APT336(30020,'APT301  ')
      GO TO 330
C
C
C     ERROR - INDEX TABLE FULL
C
 6070 CALL APT336(30021,'APT301  ')
      GO TO 330
C
C
C     THIS SECTION SETS UP THE PLOT PARAMETERS
C
 7000 IF(JRECRD(8).EQ.2) GOTO300
      IPLFLG=1
      NPTAB=NPTAB+1
      IPLTAB(NPTAB)=INT(IRECRD(5))
      GO TO 300
C
C...     PROCESS THE VTLAXS COMMAND
C
C        CHECK FOR NO PREVIOUS MULTAX COMMAND
 8000 IF (ICOPY.NE.0) GO TO 300
      IF (MULTAX.EQ.1) GO TO 8002
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF (CTEST .EQ. ON) CALL APT336(30006,'APT301  ')
      GO TO 330
C
 8002 IF(CLWRT.EQ.0.AND.IVTFLG.EQ.1.AND.CLPRT.EQ.0) GO TO 300
      IF(IVTFLG.EQ.K2.OR.IVTFLG.EQ.K4) IVTFLG=IVTFLG+K1
      IF(IVTFLG.EQ.3.OR.IVTFLG.EQ.5) IVCUT=0
      CALL APT311
      IF(IVTFLG.NE.6) GO TO 300
      GO TO 2000
 8025 CALL APT311
      GO TO 2097
 8010 CALL APT336(30012,'APT301  ')
      GO TO 330
 8020 CALL APT336(30011,'APT301  ')
      GO TO 330
C     PROCESS THE TRANS COMMAND
 8100 GO TO 300
C
C...  PROCESS CLPRNT/ON OR OFF RECORDS
C
C...  CHECK VTLAXS FLAG
 8200 IF(IVTFLG.EQ.K2) GO TO 330
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)
      IF (CTEST.EQ.ON) CLPRT=K1
      IF ((CTEST .EQ. OFF) .AND. (CPFL(4) .EQ. 1))  CLPRT = 0
      GO TO 330
C
C     PROCESS POST PROCESSOR LIKE COMMANDS
C
 9000 IF (PPFLAG.NE.K1) GO TO 300
C
C      STACK THE RECORD
C
               KNT =NUMWDS+K3
      J1=J1+1
      IF (J1 .GT. 15 .OR. KNT .GT. 30) GO TO 9055
         DO 9050 I = 1,KNT
      PPSTAK(J1,I) = RECORD(I)
 9050 CONTINUE
      GO TO 350
C
 9055 CALL APT336(30035,'APT301  ')
      GO TO 350
C
C      THIS SECTION PROCESSES THE TRACUT INSTRUCTION
C
 9100  IF (ICP3.GE.0)GOTO 4011
       IF (CLWRT.NE.K1) GO TO 330
      IF (JRECRD(6)-K2 .EQ. 0) GO TO 9290
C...    CHECK IF VTLAXS IS IN EFFECT
      IF (IVTFLG .EQ. K4) GO TO 8020
      ITRAFL=K1
C
C      STORE TRACUT MATRIX FROM TAPE AND STORE BY COLUMNS
C
      K = K5
       DO 9180 I=1,3
       DO 9180 J=1,4
      K = K + K1
 9180  TRAMAT(I,J) = RECORD(K)
C
 9190  DO  9210 I=1,3
      IF (DABS(TRAMAT(I,4))-0.000001D0) 9210,9210,9270
 9210  CONTINUE
C
       DO 9240 I=2,3
       IF (TRAMAT(1,1)-TRAMAT(I,I)) 9270,9240,9270
 9240  CONTINUE
C
             TSCALE= TRAMAT(1,1)
      GO TO 9300
C
 9270        TSCALE= 1.0
       GO TO 9300
C
 9290  ITRAFL =K0
             TSCALE= 1.0
C
 9300  CALL APT305
      GO TO 330
C
C     PROCESS THE HOLDPP RECORD
C
 9500      PPFLAG = JRECRD(8)
      GO TO (9525,9508,9502,9506),PPFLAG
 9502 IF (CLPRT.EQ.0) GO TO 350
      I=JRECRD(4)
      CALL CFORM('0',DARRAY,1,1)
      CALL ICONV(I,DARRAY,2,8)
      CALL CFORM('.',DARRAY,10,1)
      CALL CFORM(HMACR,DARRAY,14,16)
      CALL CFORM(HBIGIN , DARRAY,31,6)
      CALL CPRINT (DARRAY)
      GOTO 350
 9506 IF (CLPRT .EQ. 0) GO TO 350
      CALL CFORM(HMACR,DARRAY,14,16)
      CALL CFORM(HENDS,DARRAY,31,4)
      CALL CPRINT (DARRAY)
      GOTO 350
 9508 CONTINUE
C
C     UNSTACK THE RECORD
C
      IF (J1 .EQ. 0) GO TO 350
      DO 9520 K=1,J1
      RECORD(1)=PPSTAK(K,1)
      RECORD(2)=PPSTAK(K,2)
      IRECRD(3)=ZERO
      DTEMP = KKSTAK(K,3)
      NUMWDS = ITEMP(2)
      DO 9510 I=1,NUMWDS
      RECORD(I+3)=PPSTAK(K,I+3)
 9510 CONTINUE
      IF(CLWRT.EQ.1.AND.CPFL(6).EQ.1) CALL APT312
C---     CALL TO OUTPUT FEDRAT TO CLFIL3
      IF(CLWRT.EQ.1.AND.CPFL(5).EQ.1) CALL CNVRT3(CPFL(7))
      IF (CLPRT.EQ.1) CALL APT302
 9520 CONTINUE
C---     UNLOAD PP WORDS TO CLFILE DURING INDEX AND COPY
      IF(ISTFLG.EQ.1) CALL APT314(NTAPE,NRECC(NTAPE1))
 9525 J1=0
      GO TO 350
C**   PROCESS THE MACHINE POST PROCESSOR RECORD
C
C**   FLAG USED BY LMCT
 9600 IMACHN = K1
C
C**   CONTROL SYSTEM NAME IN W(5) .  USED BY A400.
C
      KONSYS(1) = JRECRD(9)
      KONSYS(2) = JRECRD(10)
      GO TO 300
C
 9800 ICUT=0
      IF((IVTFLG.EQ.2.OR.IVTFLG.EQ.4).AND.IVCUT.EQ.0)IVCUT=1
      GO TO 9000
 9810 ICUT=1
      GO TO 9000
      END
