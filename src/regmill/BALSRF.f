**** SOURCE FILE : M0001043.V03   ***
*
      SUBROUTINE BALSRF(SURF,SIDE,TC,RAD,TD,NPAT,U,V,DIST,
     X                  R,TOL,MODE,IRR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C           /-PURPOSE IS TO DETERMINE CONTACT POINT FROM TOOL TO SURFACE
C           /-INPUT
C           /-SURF INPUT SCULPTURED SURFACE
C           /- 1 OR -1 TO INDICATE CUTTING SIDE OF SURFACE
C           /-TC,TD,RAD TOOL CENTER, RADIUS AND DIRECTION
C           /-TOL TOLERANCE FOR TOOL ALIGNMENT
C           /-MODE 0 FOR FIRST CALL, 1 FOR CONTINUING CALLS
C           /-OUTPUT
C           /-NPAT,U,V OUTPUT PATCH NUMBER AND U,V COORDS AT CONTACT
C           /-DIST DISTANCE TOOL MUST MOVE TO CONTACT POINT
C           /-R SURFACE DERIVATIVES AT POINT OF CONTACT
C           /-IRR ERROR FLAG, 0 IF NO ERROR, NON ZERO OTHERWISE.
C
      DIMENSION SURF(*),TC(*),TD(*),R(*)
      DIMENSION B(64),IFLAG(6),ITOP(6,4)
      DATA ZERO,ONE,HALF,ONEBIG/0.0D0,1.0D0,0.5D0,1.00001D0/
      DATA ONELIT/0.99999D0/
      DATA MXSRCH,MXNITS,MXEXCH/1,25,15/
C
C            /-ISRCH IS A COUNT OF CALLS FOR GLOBAL SEARCH
C            /-IEXCHG IS A COUNT OF PATCH EXCHANGES
      ISRCH=0
      IEXCHG=0
      U1=U
      V1=V
C***  CALL BAD(-1,0,4HMODE,MODE)
C***  CALL BAD(1,0,4HU   ,U)
C***  CALL BAD(-1,0,4HV   ,V)
C
      IF(MODE.EQ.0) GO TO 20
   10 CONTINUE
C           /-INITIAL ENTRY OR RELOAD PATH
      ISRCH=ISRCH+1
      IRR=1
      IF(ISRCH.GT.MXSRCH) GO TO 999
C
      CALL BALSCN(SURF,SIDE,TC,RAD,TD,U1,V1,DIST,NPAT,IR)
C***  CALL BAD(1,0,4HBSCN,IR)
C***  CALL BAD(1,1,4HDIST,DIST)
C***  CALL BAD(1,1,4HU1  ,U1)
C***  CALL BAD(1,1,4HV1  ,V1)
C***  CALL BAD(-1,0,4HNPAT,NPAT)
      IRR=2
      IF(IR.NE.0) GO TO 999
C
      CALL LODPCH(SURF,B,IFLAG,ITOP,NPAT,3)
C
   20 CONTINUE
C           /-SET ITERATION COUNTER FOR PATCH TO TOOL LINEUP
      NITS=0
      IOKLAS=0
C
   30 CONTINUE
C***  CALL BAD(-1,0,4HNITS,NITS)
      NITS=NITS+1
      IF(NITS.GT.MXNITS) GO TO 10
C           /-CALCULATE SURFACE DERIVATIVES AT THIS U,V
      CALL CNSURF(U1,V1,B,R,IFLAG,1)
C***  CALL BAD(-12,1,4HCNSF,R)
C           /- DETERMINE IF PATCH IS WITHIN TOLERANCE OF TOOL YET
      CALL BALTOL(R,SIDE,TC,RAD,TD,DIST,TOL,IOK)
C***  CALL BAD(1,1,4HTOL ,TOL)
C***  CALL BAD(1,1,4HDIST,DIST)
C***  CALL BAD(-1,0,4HIOK ,IOK)
      IF(IOK.NE.0) GO TO 40
C           /-TOOL IN TOLERANCE , EXAMINE U,V VALUES FURTHER
      CALL CHKTOP(U1,V1,ITOP,IOK)
C***  CALL BAD(2,2,4HU1  ,U1)
C***  CALL BAD(2,2,4HV1   ,V1)
C***  CALL BAD(-1,0,4HCTOP,IOK)
      IRR=0
      IF(IOK.EQ.0) GO TO 100
C
   70 CONTINUE
C***  CALL BAD(-1,0,4HEXCG,IEXCHG)
      IEXCHG=IEXCHG+1
      IRR=3
      IF(IEXCHG.GT.MXEXCH) GO TO 999
      NPAT=IOK
C            /-IOK IS A CANDIDATE PATCH IF NON ZERO.
      U1=HALF
      V1=HALF
      CALL LODPCH(SURF,B,IFLAG,ITOP,NPAT,3)
      IFREE=0
      MAXREP=5
      CALL BALLOC(B,IFLAG,ITOP,SIDE,TC,RAD,TD,
     X            U1,V1,DIST,MAXREP,IFREE,IRR)
C***  CALL BAD(1,0,4HBLOC,IRR)
C***  CALL BAD(1,1,4HU1  ,U1)
C***  CALL BAD(1,1,4HV1  ,V1)
C***  CALL BAD(-1,1,4HDIST,DIST)
      IF(IRR.NE.0) GO TO 10
      GO TO 20
C
   40 CONTINUE
      CALL BALONE(R,SIDE,TC,RAD,TD,DU,DV,DA,IRR)
C***  CALL BAD(1,0,4HBONE,IRR)
C***  CALL BAD(1,1,4HDU  ,DU)
C***  CALL BAD(1,1,4HDV  ,DV)
C***  CALL BAD(-1,1,4HDA  ,DA)
      DUK=DU
      DVK=DV
      MAXREP=25
      CALL BALTWO(R,SIDE,TC,RAD,TD,DU,DV,DA,MAXREP,TOL,IRR)
C***  CALL BAD(1,0,4HBTWO,IRR)
C***  CALL BAD(1,1,4HDU  ,DU)
C***  CALL BAD(1,1,4HDV  ,DV)
C***  CALL BAD(-1,1,4HDA  ,DA)
      IF(IRR.EQ.0) GO TO 50
      DU=DUK
      DV=DVK
   50 CONTINUE
C***  CALL BAD(2,2,4HU1  ,U1)
C***  CALL BAD(-2,2,4HV1  ,V1)
C***  CALL BAD(2,2,4HDU  ,DU)
C***  CALL BAD(-2,2,4HDV  ,DV)
      CALL SQRBN(U1,V1,DU,DV,DUK,DVK,ONE,IOK)
C***  CALL BAD(2,2,4HDUK ,DUK)
C***  CALL BAD(-2,2,4HDVK ,DVK)
C***  CALL BAD(-1,0,4HSRBN,IOK)
      IF(IOK.EQ.0.OR.IOK.EQ.5) GO TO 60
      IF(IOKLAS.NE.0) GO TO 55
C             /-CASE.  IOK.NE.0.AND.IOKLAS.EQ.0
C             /-CUT DU,DV TO LIE WITHIN PRESENT SECTOR AND PROCEED AGAIN
      DU=DUK
      DV=DVK
      GO TO 60
   55 CONTINUE
C             /-CASE.  IOK.NE.0.AND.IOKLAS.NE.0
C             /-SET DU,DV SO THAT POINT MOVES TO NEW SECTOR
C             /-CHECK TO SEE IF THE NEW MOVEMENT IS SMALL
      CALL DOTV(W,R(5),R(5))
      DU1=DU*DSQRT(W)
      CALL DOTV(W,R(9),R(9))
      DV1=DV*DSQRT(W)
      IF(DSQRT(DU1**2+DV1**2).GT.TOL/2.) GO TO 56
C             /-MOVEMENT IS WITHIN TOLERANCE BAND
      IOK=0
      DU=DUK
      DV=DVK
      GO TO 60
C
   56 CONTINUE
      DU=DUK*ONEBIG
      DV=DVK*ONEBIG
      U2=U1+DU
      V2=V1+DV
C             /-CHECK TO SEE IF NEW U,V LIE IN LEGITIMATE REGION
C             /-ELSE, OBTAIN A NEW PATCH.
      CALL CHKTOP(U2,V2,ITOP,IOK)
C***  CALL BAD(-1,0,4HCKTP,IOK)
C***  CALL BAD(2,2,4HU2  ,U2)
C***  CALL BAD(2,2,4HV2  ,V2)
C***  CALL BAD(1,1,4HU2  ,U2)
C***  CALL BAD(-1,1,4HV2  ,V2)
      IF(IOK.EQ.0) GO TO 60
      IOKLAS=0
      NPAT=IOK
      GO TO 70
C
   60 CONTINUE
      IOKLAS=IOK
      U1=U1+DU
      V1=V1+DV
      DIST=DA
C***  CALL BAD(1,0,4H101 ,IOK)
C***  CALL BAD(1,1,4HU1  ,U1)
C***  CALL BAD(1,1,4HV1  ,V1)
C***  CALL BAD(-1,1,4HDIST,DIST)
      IRR=0
      GO TO 30
C
  100 CONTINUE
      U=U1
      V=V1
C
  999 CONTINUE
      RETURN
      END
