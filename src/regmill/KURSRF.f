**** SOURCE FILE : M0001074.V02   ***
*
      SUBROUTINE KURSRF(R,SIDE,CX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C           /-INPUT
C           /-SURFACE POINT, FIRST AND SECOND DERIVATIVES IN R
C           /-SIDE(CUTTER SIDE) OF SURFACE =1 OR -1.
C           /-OUTPUT
C           /-SURFACE CURVATURE ANALYSIS, ALL DATA STORED IN CX
C
C           /-PURPOSE TO COMPUTE PRINCIPAL CURVATURES AND OTHER QUANTITI
C           /-RELATED TO SURFACE AT THIS POINT.
C
      COMMON/IBUGG/IBUG,IPCOMC,IPCOLC
      DIMENSION R(32),CX(24)
      DIMENSION DVEC(3)
      DATA DVEC/0.13D0,0.23D0,0.33D0/
      DATA ZERO,ONE/0.0D0,1.0D0/
      DATA SMAL/1.0D-19/
C
      DO 5 I=1,24
    5 CX(I)=ZERO
C
C           /-COMPUTE G11,G12,G22
      CALL DOTV(CX(13),R(5),R(5))
      CALL DOTV(CX(14),R(5),R(9))
      CALL DOTV(CX(15),R(9),R(9))
      CX(16)=ONE
C           /-COMPUTE L11,L12,L22
      CALL DOTV(CX(17),R(13),R(29))
      CALL DOTV(CX(18),R(17),R(29))
      CALL DOTV(CX(19),R(21),R(29))
      DO 10 I=17,19
   10 CX(I)=SIDE*CX(I)
      CX(20)=ONE
C           /-COMPUTE COEFFICIENTS OF CURVATURE EQUATION A.KSQ+B.K+C=0
C           /-A=DET(G),B=-(L11*G22-2*L12G12+L22*G11),C=DET(L)
      CX(21)=CX(13)*CX(15)-CX(14)**2
      CX(22)=-(CX(13)*CX(19)-2.*CX(14)*CX(18)+CX(15)*CX(17))
      CX(23)=CX(17)*CX(19)-CX(18)**2
      CX(24)=ONE
C           /-SOLVE THIS EQUATION TO OBTAIN TWO PRINCIPAL CURVATURES
      DISC=CX(22)**2-4.*CX(21)*CX(23)
      DISC=DMAX1(ZERO,DISC)
      DISC=DSQRT(DISC)
      DENOM=CX(21)+CX(21)
      CX(1)=(-CX(22)+DISC)/DENOM
      CX(2)=(-CX(22)-DISC)/DENOM
      CX(4)=ONE
C           /-FINALLY DETERMINE SPATIAL DIRECTIONS OF THESE CURVATURES
C           /- THE DIRECTION OF K IS ACHIEVED BY (-L12+KG12,L11-KG11)
C           /- IMISS IS THE COUNT OF THE NUMBER OF MISSES
      IMISS=0
      DO 20 I=1,2
      A=-(CX(18)-CX(I)*CX(14))
      B=CX(17)-CX(I)*CX(13)
      L=4*I
      IF(DABS(A)+DABS(B).GT.SMAL) GO TO 50
C            /-TRY AGAIN TO OBTAIN A NON ZERO A,B
      A=-(CX(19)-CX(I)*CX(15))
      B=CX(18)-CX(I)*CX(14)
      IF(DABS(A)+DABS(B).GT.SMAL) GO TO 50
      IMISS=IMISS+1
      GO TO 20
   50 CONTINUE
      DO 30 J=1,3
   30 CX(L+J)=A*R(J+4)+B*R(J+8)
      CALL VNORM(CX(L+1),CX(L+1))
      CX(L+4)=ONE
      GO TO 100
   20 CONTINUE
C
  100 CONTINUE
      IF(IMISS.EQ.2) GO TO 130
C-- A GOOD VECTOR WAS OBTAINED, COMPUTE THE OTHER BY CROSS PRODUCT
      LNXT=L+4
      IF(L.EQ.8) LNXT=L-4
      CALL CROSS(CX(L+1),R(29),CX(LNXT+1))
      CALL VNORM(CX(LNXT+1),CX(LNXT+1))
      CX(LNXT+4)=ONE
      GO TO 140
C-- NO GOOD VECTORS AVAILABLE, GENERATE ANY TWO NORMAL TO R(29)
  130 CONTINUE
      CALL CROSS(DVEC,R(29),CX(5))
      CALL VNORM(CX(5),CX(5))
      CALL CROSS(CX(5),R(29),CX(9))
      CALL VNORM(CX(9),CX(9))
      CX(8)=ONE
      CX(12)=ONE
C
  140 CONTINUE
C
      IF(IBUG.NE.11) GO TO 60
      DO 70 I=1,21,4
      CALL BAD(-4,1,'KRSF',R(I))
   70 CONTINUE
      DO 80 I=1,9,4
      CALL BAD(-4,1,'CX  ',CX(I))
   80 CONTINUE
C
   60 CONTINUE
      RETURN
      END
