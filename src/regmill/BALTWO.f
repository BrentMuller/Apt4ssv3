**** SOURCE FILE : M0001045.W01   ***
*
      SUBROUTINE BALTWO(R,SIDE,TC,RAD,TD,U,V,A,MAXREP,TOL,IRR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM
      DIMENSION PS(3),SU(3),SV(3)
      DIMENSION CA(3),CU(3),CV(3),COEF(3)
      DIMENSION TC(3),TD(3),R(32)
      CHARACTER*20 BADMSG
      DATA SMAL,SMAL1/1.D-3,1.D-4/
C           /-PURPOSE OF ROUTINE IS TO USE NEWTON RHAPSON METHOD
C           /-TO MOVE BALL CUTTER INTO CONTACT WITH 2ND ORDER EXPANSION
C           /-SURFACE ABOUT A POINT.
C           /-INPUT
C           /-R SURFACE POINT, FIRST AND SECOND DERIVATIVES
C           /-TC,TD BALL CENTER, DIRECTION OF MOVEMENT
C           /-RAD IS  RADIUS OF BALL
C           /- SIDE IS 1 IF RU X RV GIVES CUTTER SIDE OF SURF, -1 OTHERW
C           /- MAXREP IS MAXIMUM NUMBER OF REPETITIIONS OF NEWNTON METHO
C           /- TOL IS THE TOLERANCE SPECIFICATION FOR STOPPING ITERATION
C
C           /- INPUT-OUTPUT
C           /-A IS DISTANCE CUTTER SHOULD MOVE IN TD DIRECTION
C           /-U,V ARE SURFACE COORDINATES DESCRIBING CONTACT
C
      NITS=0
   10 CONTINUE
      NITS=NITS+1
      IF(NITS.GT.MAXREP) GO TO 999
C           /-EVALUATE QUANTITIES WHICH DEPEND ON CURRENT A,U,V
      HUSQ=U*U/2.
      UV=U*V
      HVSQ=V*V/2.
      DO 20 I=1,3
      PS(I)=TC(I)+A*TD(I)
     X     -(R(I)+U*R(I+4)+V*R(I+8)
     X     +HUSQ*R(I+12)+UV*R(I+16)+HVSQ*R(I+20))
      SU(I)=R(I+4)+U*R(I+12)+V*R(I+16)
      SV(I)=R(I+8)+U*R(I+16)+V*R(I+20)
   20 CONTINUE
C
C           /-USE SURFACE REPRESENTATION BY TAYLOR 2ND ORDER METHOD
C           /-S(U,V)=R+U*RU+V*RV+HUSQ*RUU+UV*RUV+HVSQ*RVV
C           /-NEWTON RHAPSON ITERATION IS USED TO SOLVE 3 EQNS IN 3 UNKN
C           /-F(A,U,V)=(TC+A*TD-S(U,V))**2-RAD**2=0
C           /-G(A,U,V)=(TC+A*TD-S(U,V),SU)=0
C           /-H(A,U,V)=(TC+A*TD-S(U,V),SV)=0
C           /-CHANGES IN A,U,V NAMELY DA,DU,DV ARE FOUND BY THE FOLLOWIN
C           /- 0-F=DA*FA+DU*FU+DV*FV
C           /- 0-G=DA*GA+DU*GU+DV*GV
C           /- 0-H=DA*HA+DU*HU+DV*HV
C           /- CA(1)=FA, CA(2)=GA, CA(3)=HA, CU(1)=FU ETC.
C           /- COEF(1)=-F, COEF(2)=-G, COEF(3)=-H
C
      CALL DOTF(CA(1),PS,TD)
      CA(1)=2.*CA(1)
      CALL DOTF(CU(1),PS,SU)
      CU(1)=-2.*CU(1)
      CALL DOTF(CV(1),PS,SV)
      CV(1)=-2.*CV(1)
C
      CALL DOTF(CA(2),TD,SU)
      CALL DOTF(SUSQ,SU,SU)
      CALL DOTF(CU(2),PS,R(13))
      CU(2)=-SUSQ+CU(2)
      CALL DOTF(SUV,SU,SV)
      CALL DOTF(CV(2),PS,R(17))
      CV(2)=-SUV+CV(2)
C
      CALL DOTF(CA(3),TD,SV)
      CU(3)=CV(2)
      CALL DOTF(SVSQ,SV,SV)
      CALL DOTF(CV(3),PS,R(21))
      CV(3)=CV(3)-SVSQ
C
      CALL DOTF(PSQ,PS,PS)
      COEF(1)=-(PSQ-RAD**2)
C----     CALL DOTF(COEF(2),PS,SU)
      COEF(2)=CU(1)/2.
C----     CALL DOTF(COEF(3),PS,SV)
      COEF(3)=CV(1)/2.
C           /-3X3 EQN IS READY, FIRST CHECK DISCRIMINANT
      DISCR=DET3(CA,CU,CV)
      IF(DABS(DISCR).GT.SMAL) GO TO 50
C           /-DISCRIMINANT TOO SMALL, CHANGE A,U,V AND TRY AGAIN
      A=.9*A+SMAL1
      U=.9*U+SMAL1
      V=.9*V+SMAL1
      GO TO 10
C
   50 CONTINUE
C           /-SOLVE FOR DA,DU,DV
      DA=DET3(COEF,CU,CV)/DISCR
      DU=DET3(CA,COEF,CV)/DISCR
      DV=DET3(CA,CU,COEF)/DISCR
      IF(IBUG.NE.11) GO TO 9991
      CALL BAD(-1,0,' ',0)
      BADMSG=' AFTER BALTWO'
      CALL CPRINT(BADMSG)
      CALL BAD(-3,1,'COEF',COEF)
 9991 CONTINUE
      A=A+DA
      U=U+DU
      V=V+DV
      W=DABS(COEF(1))
      W=DSQRT(W)
      W=W+DABS(COEF(2))+DABS(COEF(3))
      IF(W.GT.TOL) GO TO 10
  100 CONTINUE
C
  999 CONTINUE
      RETURN
      END
