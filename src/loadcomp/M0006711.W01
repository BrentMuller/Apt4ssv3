*
C
C              FORTRAN SUBROUTINE LOADB
C
C LINKAGE       CALL   LOADB
C
C          SUBSIDIARIES                  CALLED FROM
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    BINBCD          SUBROUTINE    LOADP
C          SUBROUTINE    LOADA
C          SUBROUTINE    LOADI
C          SUBROUTINE    LOADU
C          SUBROUTINE    LOAD0
C          SUBROUTINE    CFORM
C          SUBROUTINE    SORT
C          SUBROUTINE    SPILL
C
      SUBROUTINE LOADB
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE (NAMETB)
C  NAMTBL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY
C  CNAMTB:     NAME TABLE OR DICTIONARY
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(3002),PRODR(3000)
C  PRODR:      ORDINAL NUMBERS OF THE PRD. TABLES IN SEQUENT. MODE
      EQUIVALENCE (PRODR(1),STKLST(3))
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODES/CODES
      DIMENSION CODES(150),DIGIT(2)
C  DIGIT:      (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '
      EQUIVALENCE (DIGIT(1),CODES(19))
C
C        6.    SYMBOLIC FILE DEFINITIONS
C
      COMMON/SYMFIL/SYMFIL
      DIMENSION SYMFIL(6)
C  ELFILE:     I/O FILE NUMBER OF TRANSFORMED PRODUCTION TABLE
      EQUIVALENCE (ELFILE,SYMFIL(4))
C  LCDATA      INPUT FILE NUMBER OF PRODUCTION TABLES SEQUEN. MODE
      EQUIVALENCE (LCDATA,SYMFIL(5))
C  VLFILE:     VERIFICATION LISTING FILE
      EQUIVALENCE (VLFILE,SYMFIL(6))
C
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL
C
      COMMON/LDXSIZ/LDXSIZ
      DIMENSION LDXSIZ(28)
C  QLENGT:     DIMENSION OF ARRAY LENGTH
      EQUIVALENCE (QLENGT,LDXSIZ(6))
C  QSTACK:     DIMENSION OF ARRAY PRODR
      EQUIVALENCE (QSTACK,LDXSIZ(12))
C  QLEVPO:     DIMENSION OF ARRAY LEVPOS
      EQUIVALENCE (QLEVPO,LDXSIZ(13))
C
C        8.    CONTROL FLAGS AND POINTERS
C
      INCLUDE (LDSCOM)
C  ERROR:      FLAG SET IF ERROR IN PRODUCTION TABLE
C  IBKPNT:     NAMTBL INDEX OF BRKPNT
C  PRODI:      POINTER TO LAST ENTRY IN PRODN TABLE
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES
C  BREAK:      VALUE OF POSTN FOR BRKPNT
C  KNT:        NAMTBL INDEX OF ALL
C
C        9.    ITEM AND GROUP CONTROL
C
      INCLUDE (ASSOC)
C
C       10.    ITEM AND GROUP CONTROL
C
      COMMON/LENGTH/LENGTH
C  LENGTH:     TABLE OF GROUPS AND NUMBER OF CONTAINED ELEMENTS
      DIMENSION LENGTH(3,100)
C
C       13.    SPACE FOR PRODUCTION LISTS
C
      INCLUDE (PRODN)
C  PROD2:      CONTAINS PRODUCTION TABLES IN JUMP MODE
C
C       14.    LEVEL START OF THE PRODUCTIONS IN PRODR
C
      COMMON/LEVPOS/LEVPOS
      DIMENSION LEVPOS(12,250)
C
C       16.    RELATION OF ORDINAL NUMBERS TO NAMTBL INDEXES
C
      COMMON/CLSWRD/CLSWRD
      DIMENSION CLSWRD(100)
C
C       17.    OUTPUT SPACE FOR TRANSFORMED PRODUCTION LIST
C
      COMMON/OUTARY/OUTARY
      CHARACTER*80 OUTARY
C
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION
C
      COMMON/BRANCH/BRANCH
      DIMENSION BRANCH(515)
C  TENMIL:     CONTAINS DIVISOR 10000
      EQUIVALENCE (TENMIL,BRANCH(2))
C  LEVEL:      ACTUALLY PROCESSED PRODUCTION LEVEL
      EQUIVALENCE (LEVEL,BRANCH(5))
C  MAXCLS:     NUMBER OF DEFINITIONS IN A TRANSFORMATION SECTIION
      EQUIVALENCE (MAXCLS,BRANCH(6))
C  CONCAT:     =1 IF TRANSFORMATION OF THE CONCATENATING PRODUCTIONS
      EQUIVALENCE (CONCAT,BRANCH(15))
C*
C PURPOSE      TO CHANGE THE BASIC PRODUCTION TABLE FROM
C              SEQUENTIAL READ FORMAT TO A JUMP MODE TABLE.
C
      CHARACTER*6 JALL,IDIGIT
      LOGICAL ERRPRT
      DATA IDIGIT/'DIGIT'/,ERRPRT/.FALSE./,JALL/'ALL'/
      CHARACTER*6  MACPRD(25)
      DATA   MACPRD           /'RTERM'   ,'10028'   ,'MCLTRM'  ,
     *  '10060'    ,'ALL'     ,'10080'   ,'MCLTRM'  ,'56'      ,
     *  'TERMAC'   ,'10048'   ,'10088'   ,'MCLTRM'  ,'54'      ,
     *  '10104'    ,'MCLTRM'  ,'58'      ,'ALL'     ,'10096'   ,
     *  'MACVBL'   ,'MCLTRM'  ,'60'      ,'ALL'     ,'10096'   ,
     *  'MCLTRM'   ,'55'      /
C**
      QPRODR=QSTACK*2
      CNAMTB(KNT)=JALL
C
      CLSWRD(MAXCLS)=KNT
C
C     SAVE CONTENT OF PRODN IN PRODR AFTER HAVING REPLACED THE NAMTBL-
C     ADDRESSES OF THE CLASS WORDS BY THE PRIORITY NUMBER.
C     FILL THE ARRAY LEVPOS (LEVEL POSITION). IT IS
C     LEVPOS( 1,X)   PRIORITY NUMBER
C     LEVPOS( 2,X)   START ADDRESS (IN PRODR) OF THE 2ND LEVEL
C     LEVPOS( 3,X)   START ADDRESS (IN PRODR) OF THE 3RD LEVEL
C     LEVPOS( 4,X)   START ADDRESS (IN PRODR) OF THE 4TH LEVEL
C     LEVPOS( 5,X)   START ADDRESS (IN PRODR) OF THE 5TH LEVEL
C     LEVPOS( 6,X)   START ADDRESS (IN PRODR) OF THE 6TH LEVEL
C     LEVPOS( 7,X)   START ADDRESS (IN PRODR) OF THE 7TH LEVEL
C     LEVPOS( 8,X)   START ADDRESS (IN PRODR) OF THE 8TH LEVEL
C     LEVPOS( 9,X)   START ADDRESS (IN PRODR) OF THE 9TH LEVEL
C     LEVPOS(10,X)   NUMBER OF LEVELS OF THE PRODUCTION
C     LEVPOS(11,X)   PRODUCTION NUMBER (NAMTBL ADDR.) AT FAILING SEARCH
C     LEVPOS(12,X)   PRODUCTION NUMBER (NAMTBL ADDR.)
C
      DO 11 J=1,QLEVPO
      DO 10 I=1,11
   10 LEVPOS(I,J)=0
   11 CONTINUE
      DO 15 J=1,QLENGT
   15 LENGTH(1,J)=0
C
      M=1
      IPRO=0
      NSIGN=-1
      LEVPOS(1,1)=1
      DO 60 I=1,PRODI
      J=PRODN(I)
      K=IABS(J)
      IF(I.GE.IPROD)NSIGN=1
      IF(NAMTBL(K).EQ.DIGIT(1).AND.CNAMTB(K).NE.IDIGIT)GOTO 50
      DO 20 L=1,MAXCLS
      IF(K.EQ.CLSWRD(L))GOTO 30
   20 CONTINUE
      ERROR=.TRUE.
      ERRPRT=.TRUE.
      CASSOC(1)=CNAMTB(K)
      GOTO 60
   30 IPRO=IPRO+1
      IF(IPRO.GT.QPRODR)CALL SPILL(12,'LOADB   ')
      PRODR(IPRO)=L*ISIGN(1,J)
      IF(J.NE.K)LEVEL=LEVEL+1
      IF(LEVEL.GT.8.OR.LEVEL.LT.1)GOTO 60
      IF(LEVPOS(LEVEL+1,M).EQ.0)LEVPOS(LEVEL+1,M)=IPRO+1
      GOTO 60
   50 IF(ERRPRT)WRITE(VLFILE,98)CNAMTB(K),CASSOC(1)
   98 FORMAT(36H ERROR NO. 7045  IN SUBROUTINE LOADB/1H ,14HIN PRODUCTIO
     *N ,   A6/1H ,   A6,67H  IS AN INVALID CLASS WORD OR A CLASS WORD W
     *ITHOUT A PRIORITY VALUE)
      ERRPRT=.FALSE.
      IPRO=IPRO+1
      IF(IPRO.GT.QPRODR)CALL SPILL(12,'LOADB   ')
      PRODR(IPRO)=J
      LEVPOS(10,M)=LEVEL
      LEVPOS(12,M)=K*NSIGN
      IF(LEVEL.EQ.0)M=M-1
      LEVEL=0
      M=M+1
      IF(M.GT.QLEVPO)CALL SPILL(13,'LOADB   ')
      LEVPOS(1,M)=IPRO+1
   60 CONTINUE
      M=M-1
C
C
C     EXTEND LEVPOS ARRAY IN A WAY, THAT ONLY ONE PRIORITY NUMBER (CLASS
C     WORD) IS LEADING A TOTAL LINE OF LEVPOS
C
      KPRO=M
      DO 90 I=1,M
      KK=LEVPOS(1,I)
      LL=LEVPOS(2,I)-1
      LEVPOS(1,I)=IABS(PRODR(KK))
      IF(KK.EQ.LL)GOTO 90
      KK=KK+1
      DO 80 J=KK,LL
      IF(KPRO.GE.QLEVPO)CALL SPILL(13,'LOADB   ')
      KPRO=KPRO+1
      DO 70 L=2,12
   70 LEVPOS(L,KPRO)=LEVPOS(L,I)
   80 LEVPOS(1,KPRO)=IABS(PRODR(J))
   90 CONTINUE
C
      CALL LOAD0(IPRO,KPRO)
C
C     START POSITION AND NUMBER OF 'ALL' PRODUCTIONS
C
      JPRO=IPRO+1
      DO 100 KK=1,KPRO
      NN=KPRO+1-KK
      IF(LEVPOS(1,NN).NE.MAXCLS)GOTO 110
  100 CONTINUE
  110 LL=NN+1
      JJ=KPRO
C
C     'ALL' IS INCLUDING THE OTHER CLASS WORDS, IF THE CLASS WORDS
C     DO NOT END IN A PRODUCTION NUMBER AHEAD OF 'ALL'
C
      L=LEVPOS(1,JPRO)
      N=LEVPOS(1,NN)
      DO 130 J=L,N
      IF(LENGTH(1,J).EQ.0)GOTO 130
      BREAK=PRODI
      IF(LENGTH(2,J).LT.0)BREAK=-LENGTH(2,J)
      DO 120 I=LL,JJ
      IF(LEVPOS(2,I).GT.BREAK)GOTO 130
      KPRO=KPRO+1
      IF(KPRO.GT.QLEVPO)CALL SPILL(13,'LOADB   ')
      DO 115 K=2,12
  115 LEVPOS(K,KPRO)=LEVPOS(K,I)
      LEVPOS(1,KPRO)=J
  120 CONTINUE
  130 CONTINUE
C
      CALL SORT(LEVPOS(1,JPRO),12,KPRO-IPRO,1,2)
C
C     LOAD ONE LEVEL PRODUCTION NUMBER FOR SECOND PRODUCTION NUMBER
C     DELETE ONE LEVEL PRODUCTIONS NOT STANDING ALLONE
C
      KPRO=KPRO+NN-JJ
      N=2
      J=1
  131 DO 140 I=N,IPRO
      IF(LEVPOS(10,I).NE.1)GOTO 140
      LL=LEVPOS(1,I)
      NN=I-1
      DO 135 L=J,NN
      IF(LEVPOS(1,L).NE.LL)GOTO 135
      LEVPOS(1,I)=0
      LEVPOS(11,L)=IABS(LEVPOS(12,I))
  135 CONTINUE
  140 CONTINUE
      IF(J.NE.1)GOTO 150
      N=JPRO+1
      J=JPRO
      IPRO=KPRO
      GOTO 131
C
C     COMPRESS LEVPOS TABLE
C
  150 N=KPRO
      KPRO=0
      IPRO=0
      DO 170 I=1,N
      IF(LEVPOS(1,I).EQ.0)GOTO 170
      IF(LEVPOS(12,I).LT.0)IPRO=IPRO+1
      KPRO=KPRO+1
      DO 160 K=1,11
  160 LEVPOS(K,KPRO)=LEVPOS(K,I)
      LEVPOS(12,KPRO)=IABS(LEVPOS(12,I))
  170 CONTINUE
C
C         START DATA FOR CONCATENATING PRODUCTIONS
C
      IPROD=0
      LL=1
      CONCAT=1
      CALL LOADU(LL,IPRO)
C
C         END OF THE CONCATENATING PRODUCTIONS
C
      PROD2(1,IPROD)=0
      PROD2(2,IPROD)=-IBKPNT
      CALL LOADA
C
C     OUTPUT OF THE MACRO TEXT TRANSFER PRODUCTIONS
C
      DO 350 J=1,25
      OUTARY(1:72)=' '
      L=TENMIL+4*J
      CALL BINBCD(L,OUTARY(73:80),N)
      CALL CFORM(MACPRD(J),OUTARY,8,6)
  350 WRITE(ELFILE,999)OUTARY
      CALL CFORM('BRKPNT  ',OUTARY,8,8)
      CALL CFORM('        ',OUTARY,73,8)
      WRITE(ELFILE,999)OUTARY
C
C         START FOR THE BASIC PRODUCTIONS
C
      LL=IPRO+1
      IPROD=0
      CONCAT=0
      CALL LOADU(LL,KPRO)
C
C     OUTPUT OF THE BASIC PRODUCTIONS
C
      CALL LOADA
C
C
      OUTARY=' '
      CALL CFORM('FINI',OUTARY,8,4)
      WRITE(ELFILE,999)OUTARY
      REWIND ELFILE
      KK=1
      LL=LCDATA
      LCDATA=ELFILE
      CALL LOADI(KK)
      LCDATA=LL
C
      RETURN
  999 FORMAT(A80)
      END
