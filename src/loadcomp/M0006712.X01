*
C
C              FORTRAN SUBROUTINE LOADG
C
C LINKAGE       CALL   LOADG
C
C          SUBSIDIARIES                  CALLED FROM
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    LOADI                         MAIN
C          SUBROUTINE    LOADN
C          SUBROUTINE    LOADS
C          SUBROUTINE    LOADT
C          INTEGER FCT.  NAME
C          SUBROUTINE    BCDBIN
C          SUBROUTINE    SORT
C          SUBROUTINE    SPILL
C
      SUBROUTINE LOADG
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE (NAMETB)
C  CHARST:     BEGINNING OF BASIC CHARACTER SECTION OF NAMTBL
C  CHARND:     END OF BASIC CHARACTER SECTION OF NAMTBL
C  INAMST:     BEGIN GEOMETRIC DEFINITION ROUTINE NAME SECTION(NAMTBL)
C  INAMND:     END OF GEOMETRIC DEFINITION ROUTINE NAME SECTION(NAMTBL)
C  NAMEST:     NAMTBL INDEX OF BEGIN OF THE PART PROGRAM NAME  SECTION
C  NAMMAX:     NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION
C  IFIXST:     INDEX OF BEGINNING OF FIXED POINT NUMBER SECTION,CNUMTB
C  IFIXND:     INDEX OF START OF FIXED POINT NUMBER SECTION OF CNUMTB
C  NUMBST:     INDEX OF BEGINNING OF NUMBER SECTION OF CNUMTB
C  NUMBND:     INDEX OF END OF NUMBER SECTION OF CNUMTB
C  NAMTBL:     INTEGER CODES FOR CORRESPONDING NAME TABLE ENTRIES
C  CNAMTB:     NAME TABLE OR DICTIONARY
C  CNUMTB:     NUMBER TABLE
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODES/CODES
      DIMENSION CODES(150),DIGIT(2),IDENT(2)
C  DIGIT:      (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '
      EQUIVALENCE (DIGIT(1),CODES(19))
C  IDENT:      (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '
      EQUIVALENCE (IDENT(1),CODES(69))
C
C        5.    CLASS CODE MODULI
C
C  MODULO:     NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      COMMON/MODULI/MODULO
C
C        6.    SYMBOLIC FILE DEFINITIONS
C
      COMMON/SYMFIL/SYMFIL
      DIMENSION SYMFIL(6)
C  NTFILE:     BLOCK DATA OUTPUT OF NAMTBL AND NAMTBL POINTERS
      EQUIVALENCE (NTFILE,SYMFIL(2))
C  GPFILE:     BLOCK DATA OUTPUT OF GEOMETRIC PRODUCTIONS
      EQUIVALENCE (GPFILE,SYMFIL(3))
C
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL
C
      COMMON/LDXSIZ/LDXSIZ
      DIMENSION LDXSIZ(28)
C  QPMIDT:     DIMENSION OF ARRAY PMIDTB
      EQUIVALENCE (QPMIDT,LDXSIZ(3))
C  QGEOML:     DIMENSION OF ARRAY GEOMLC
      EQUIVALENCE (QGEOML,LDXSIZ(5))
C  QPRODN:     DIMENSION OF ARRAY PRODN
      EQUIVALENCE (QPRODN,LDXSIZ(7))
C  QIAGMX:     DIMENSION OF ARRAY IAGMXY
      EQUIVALENCE (QIAGMX,LDXSIZ(10))
C  QARGMX:     DIMENSION OF ARRAY ARGMXY (OUTPUT)
      EQUIVALENCE (QARGMX,LDXSIZ(15))
C  QGEOLO:     DIMENSION OF ARRAY GEOLOC
      EQUIVALENCE (QGEOLO,LDXSIZ(17))
C  QIPRMI:     DIMENSION OF ARRAY IPRMID
      EQUIVALENCE (QIPRMI,LDXSIZ(18))
C  QNAMTB:     DIMENSION OF ARRAY NAMTBL(OUTPUT)
      EQUIVALENCE (QNAMTB,LDXSIZ(27))
C  QNUMTB:     DIMENSION OF ARRAY CNUMTB(OUTPUT)
      EQUIVALENCE (QNUMTB,LDXSIZ(28))
C
C        8.    CONTROL FLAGS AND POINTERS
C
      INCLUDE (LDSCOM)
C  ERROR:      FLAG SET IF ERROR IN PRODUCTION TABLE
C IBKPNT:      NAMTBL INDEX OF BRKPNT
C  NUMEL:      NUMBER OF ELEMENTS IN ASSOC TABLE
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES
C  PDERR:      NAMTBL INDEX OF '28' = PROD. NOT FOUND
C
C        9.    ITEM AND GROUP CONTROL
C
      INCLUDE (ASSOC)
C
C       11.    GEOMETRIC TABLE LOCATIONS
C
C  GEOMLC:     START POSITION FOR A SRF TYPE IN THE GEOMETRIC TABLE
      COMMON/GEOMLC/GEOMLC
      DIMENSION GEOMLC(50)
C
C       12.    BIT OUTPUT PATTERNS
C
      COMMON/ELBIT/ELBIT
      DIMENSION ELBIT(200)
C
C       13.    SPACE FOR PRODUCTION LISTS
C
      INCLUDE (PRODN)
C
C       19.    BIT CONSTANTS
C
      INCLUDE (ALLBTS)
C  Z9999:      SIGNALIZES START OF A SURFACE PRODUCTION SEQUENCE
C  ZAAAA:      SIGNALIZES JUMP ADDRESSES IN THE PRODUCTION TABLE
C  ZCCCC:      SIGNALIZES A PRODUCTION NUMBER IN THE TABLE
C*
C PURPOSE      TO CAUSE THE READING OF DATA TO BE LOADED INTO
C              NAMTBL, AND THE GEOMETRIC PRODUCTION TABLES,
C              AND TO PRODUCE FORTRAN BLOCK DATA PROGRAMS FOR
C              VARIOUS PRESET POINTERS TO ITEMS IN NAMTBL,
C              FOR THE LOADING OF NAMTBL, AND FOR THE LOADING
C              OF THE GEOMETRIC TABLES.
C
C LOCAL                                INITIAL
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION
C
C              I                  I            GENERAL
C              IAGMXY      250    I            FOR STORAGE OF ARGMXY
C                                              TABLE
C              IPRMID     3*35    I            CORRESPONDENCE BETWEEN
C                                              PERMID'S AND INTEGERS.
C                                              SEE 7LDG FOR INITIAL
C                                              VALUE
C              I200               C            CONTAINS 200 IN BCD
C              J                  I            USED FOR PRODUCTION NO.
C              K                  I            PARAMETER TO LOADI
C              L                  I            USED IN DO LOOP
C              L1                 I            USED IN DO LOOP
C              M                  I            COUNTER FOR DECK NAME
C                                              NUMBERS
C              N                  I            USED FOR NO. OF CHARS.
C                                              IN CALL TO BCDBIN
C
C    CHARACTER FUNCTION TO CONVERT INTEGER TO HEXADECIMAL STRING
      CHARACTER*8 HEX
C
      DIMENSION IAGMXY(250)
      CHARACTER*6 I200,TEMP,BKPNT
      CHARACTER*6 CPRMID(35)
      DIMENSION IPRMID(35)
      DATA I200/'200'/,BKPNT/'BRKPNT'/
      DATA CPRMID(1),IPRMID(1)/'XLARGE',1/,
     1     CPRMID(2),IPRMID(2)/'YLARGE',2/,
     2     CPRMID(3),IPRMID(3)/'ZLARGE',3/,
     3     CPRMID(4),IPRMID(4)/'XSMALL',4/,
     4     CPRMID(5),IPRMID(5)/'YSMALL',5/,
     5     CPRMID(6),IPRMID(6)/'ZSMALL',6/,
     6     CPRMID(7),IPRMID(7)/'XYPLAN',1/,
     7     CPRMID(8),IPRMID(8)/'YZPLAN',2/,
     8     CPRMID(9),IPRMID(9)/'ZXPLAN',3/
      DATA CPRMID(10),IPRMID(10)/'RIGHT', 1/,
     1     CPRMID(11),IPRMID(11)/'LEFT ', 2/,
     2     CPRMID(12),IPRMID(12)/'ATANGL',1/,
     3     CPRMID(13),IPRMID(13)/'SLOPE', 2/,
     4     CPRMID(14),IPRMID(14)/'LARGE', 1/,
     5     CPRMID(15),IPRMID(15)/'SMALL', 2/,
     6     CPRMID(16),IPRMID(16)/'IN   ', 1/,
     7     CPRMID(17),IPRMID(17)/'OUT  ', 2/,
     8     CPRMID(18),IPRMID(18)/'INTAN', 1/,
     9     CPRMID(19),IPRMID(19)/'OUTAN', 2/
      DATA CPRMID(20),IPRMID(20)/'POSX ', 1/,
     1     CPRMID(21),IPRMID(21)/'POSY ', 2/,
     2     CPRMID(22),IPRMID(22)/'POSZ ', 3/,
     3     CPRMID(23),IPRMID(23)/'NEGX ', 4/,
     4     CPRMID(24),IPRMID(24)/'NEGY ', 5/,
     5     CPRMID(25),IPRMID(25)/'NEGZ ', 6/,
     6     CPRMID(26),IPRMID(26)/'XYROT', 1/,
     7     CPRMID(27),IPRMID(27)/'YZROT', 2/,
     8     CPRMID(28),IPRMID(28)/'ZXROT', 3/,
     9     CPRMID(29),IPRMID(29)/'XAXIS', 1/
      DATA CPRMID(30),IPRMID(30)/'YAXIS', 2/,
     1     CPRMID(31),IPRMID(31)/'5PT  ', 1/,
     2     CPRMID(32),IPRMID(32)/'4PT1SL',2/,
     3     CPRMID(33),IPRMID(33)/'3PT2SL',3/,
     4     CPRMID(34),IPRMID(34)/'TANTO ',1/,
     5     CPRMID(35),IPRMID(35)/'PERPTO',2/
C**
C...     CALL LOADN TO READ ITEMS INTO NAMTBL
C
      CALL LOADN
      PDERR=NAME(I200)
      NAMTBL(PDERR)=DIGIT(1)
      IBKPNT=NAME(BKPNT)
      NAMTBL(IBKPNT)=99000
      DO 300 I=1,QGEOML
  300 GEOMLC(I) = 0
      K=2
C
C...     CALL LOADI TO READ GEOMETRY TABLES
C
      CALL LOADI(K)
      IF(ERROR)RETURN
      CALL LOADT
      DO 301 I=1,QIAGMX
C
C...     SET UP IAGMXY AS FOLLOWS - IAGMXY(K) = L
C...     WHERE   K = MODE OF GEOMETRIC MODIFIER
C...     AND     L = NAMTBL INDEX OF INTEGER ASSOCIATED WITH IT
C
  301 IAGMXY(I)=0
      DO 22  I=1,QIPRMI
      K = NAME(CPRMID(I))
      IF (NAMTBL(K).EQ.0) GOTO 22
      K = NAMTBL(K)-IDENT(1)
      IF (K.GT.QIAGMX) CALL SPILL(10,'LOADG   ')
      IAGMXY(K) = IFIXST + IPRMID(I)
   22 CONTINUE
C
C...     PRODUCE LISTING OF NAMTBL LOADING AND BLOCK DATA PROGRAMS
C...     TO SET UP NAMTBL.
C
      L=CHARST
      L1 = INAMST+100
C
C...     WRITE HEADING FOR BLOCK DATA PROGRAM
C
      WRITE(NTFILE,401) QNAMTB ,QNAMTB ,QNUMTB
  401 FORMAT(6X,17HBLOCK DATA BDNAME,57X/
     *35HC     BLOCK DATA PROGRAM FOR NAMETB,45X/
     16X,22HIMPLICIT INTEGER (A-Z),52X/
     26X,65HCOMMON /NAMETB/ CHARST,CHARND,INAMST,INAMND,NAMEST,NAMMAX,IF
     3IXST, 9X/
     45X,29H/ IFIXND,NUMBST,NUMBND,NAMTBL,46X/
     56X,27HCOMMON/CNAMTB/CNAMTB,CNUMTB ,47X/
     66X,17HDIMENSION NAMTBL( ,I4,1H) ,52X/
     76X,19HCHARACTER*6 CNAMTB( ,I4,1H) ,50X/
     86X,20HCHARACTER*12 CNUMTB( ,I4,1H) ,49X)
      WRITE(NTFILE,500) CHARST,CHARND,INAMST,INAMND,NAMEST,NAMMAX,
     1             IFIXST,IFIXND,NUMBST,NUMBND,QNAMTB,QNAMTB,QNUMTB
  500 FORMAT(6X,47HDATA CHARST,CHARND,INAMST,INAMND,NAMEST,NAMMAX/,27X/
     1       5X,1H1,5X,  I6,1H, I6,1H, I6,1H, I6,1H, I6,1H, I6,2H/,26X/
     25X,1H2,5X,28HIFIXST,IFIXND,NUMBST,NUMBND/,41X/
     3       5X,1H3,5X,  I6,1H, I6,1H, I6,1H, I6,1H/,41X/
     4       6X,12HDATA NAMTBL/,I5,3H*0/,54X/
     5       6X,12HDATA CNAMTB/,I5,5H*' '/,52X/
     6       6X,12HDATA CNUMTB/,I5,5H*' '/,52X)
      NAMTBL(IBKPNT)=0
   23 DO 50 I=L,L1
C
C...     IS THIS CELL FILLED
C
      IF ((NAMTBL(I).EQ.0).OR.(NAMTBL(I).EQ.DIGIT(1).AND.I.GT.CHARND
     1 )) GOTO 50
C
C...     YES. OUTPUT TO LIST AND BLOCK DATA PROGRAM.
C
C... CHECK FOR QUOTE
      IF (CNAMTB(I).EQ.'''') THEN
        TEMP=''''''
        WRITE(NTFILE,4)CNAMTB(I),I,I,NAMTBL(I),TEMP
      ELSE
        WRITE(NTFILE,4)CNAMTB(I),I,I,NAMTBL(I),CNAMTB(I)
      ENDIF
    4 FORMAT(28HC          NAMTBL ENTRY FOR ,A6,46X/
     *6X,12HDATA NAMTBL(,I4,12H),   CNAMTB(,I4,1H),41X/
     *5X,10H*        /,I5,10H   ,     ',A6,2H'/,42X)
   50 CONTINUE
C
C...     HAVE WE REACHED NAMMAX YET
C
      IF (L1.LT.NAMMAX) GOTO 51
C
C...     YES. OUTPUT FIXED POINT AREA OF CNUMTB TO LIST AND B.D.PROGRAM
C
      WRITE(NTFILE,52)
   52 FORMAT (42HC     CNUMTB ENTRIES FROM IFIXST TO IFIXND,38X)
      DO 55 I=IFIXST,IFIXND
      WRITE(NTFILE,54)I,CNUMTB(I)
   54 FORMAT(6X,12HDATA CNUMTB(,I4,4H) /',A12,2H'/,40X)
   55 CONTINUE
   51 CONTINUE
C
C...     END OF THIS PROGRAM. RETURN TO PRODUCE ANOTHER IF ALL OF
C...     NAMTBL HAS NOT BEEN COVERED
C
    6 FORMAT (7X,3HEND,70X)
      L=L1+1
      IF(L.GT.NAMMAX)GO TO 60
      L1=L+99
      IF(L1.GT.NAMMAX)L1=NAMMAX
      GO TO 23
   60 CONTINUE
      WRITE(NTFILE,6)
C
C...     IF THERE WAS NO ERROR IN THE GEOMETRIC PRODUCTION TABLES
C...     CALL LOADS TO ASSIGN BIT PATTERNS AND PRODUCE INTERNAL
C...     GEOMETRIC PRODUCTION TABLES
C
      CALL LOADS
      QGEOMT=(IPROD+QGEOLO)/10*10
      J=QGEOMT+QGEOLO+QPMIDT+QARGMX
C
C...     PRODUCE BLOCK DATA PROGRAMS TO SET UP GEOMETRY TABLES
C
      WRITE(GPFILE,3000)
 3000 FORMAT(6X,17HBLOCK DATA BDGMTY,57X/1HC,79X/
     16X,22HIMPLICIT INTEGER (A-Z),52X/
     26X,16HCOMMON/GMTY/GMTY,58X)
      WRITE(GPFILE,3001) J,QGEOMT,QGEOLO,QPMIDT,QARGMX
 3001 FORMAT(6X,15HDIMENSION GMTY(I4, 9H),GEOMTB(,I4, 9H),GEOLOC(,I4,
     1 9H),PMIDTB(,I4,2H),,14X/5X,10H1  ARGMXY(,I4,1H),60X)
      I=QGEOLO+1
      II=QPMIDT+I
      JJ=QARGMX+II
      WRITE(GPFILE,3009)I,II,JJ
 3009 FORMAT(6X,32HEQUIVALENCE (GEOLOC(1),GMTY(1)),,42X/
     1       5X,29H1            (PMIDTB(1),GMTY(I3,3H)),,40X/
     2       5X,29H2            (ARGMXY(1),GMTY(I3,3H)),,40X/
     3       5X,29H3            (GEOMTB(1),GMTY(I3,3H)) ,40X)
      WRITE(GPFILE,3010)QIAGMX
 3010 FORMAT(1HC,79X/6X,12HDATA ARGMXY/,I3,3H*0/,56X)
C
C...     ARGMXY CONTAINS NAMTBL POINTERS TO THE INTEGERS ASSOCIATED
C...     WITH PERMANENT IDENTIFIERS
C
      DO 1 I=1,QIAGMX
      IF (IAGMXY(I).EQ.0)GOTO 1
      WRITE(GPFILE,3050)I,IAGMXY(I)
    1 CONTINUE
 3050 FORMAT (6X,12HDATA ARGMXY(,I3,2H)/,I4,1H/,52X)
C
C...     PMIDTB CONTAINS THE INTERNAL REPRESENTATION OF IDENTIFIERS
C...     AND GEOMETRICS. THE I.R. IS STORED IN THE CELL CORRESPONDING
C...     TO THE MODE OF GEOMETRICS, THE MODE+25 OF IDENTIFIERS
C...     USE ARRAY IAGMXY TO RECORD ENTRIES MADE IN PMIDTB.
C
      WRITE(GPFILE,3020)QPMIDT,ALLBTS(1)
 3020 FORMAT(33HC                     /Z7FFFFFFF/,47X/
     *       6X,12HDATA PMIDTB/,I3,1H*,I11,1H/,47X)
      DO 2 I=1,NUMEL
      K=ASSOC(1,I)
      L = MOD(NAMTBL(K),MODULO)
      IF ((NAMTBL(K)-L).EQ.IDENT(1)) L=L+50
      IF(L.GT.QPMIDT) CALL SPILL(3,'LOADG   ')
    2 WRITE(GPFILE,3002)HEX(ELBIT(I)),L,ELBIT(I)
 3002 FORMAT(25HC                     / Z,A8,1H/,46X/
     *       6X,12HDATA PMIDTB(,I3,2H)/,I11,1H/,46X)
      DO 30 I=1,QGEOLO
      WRITE(GPFILE,3062) I
 3062 FORMAT (1HC,10X,12HSURFACE TYPE,I2,55X)
C
C...     GEOLOC CONTAINS FOR EACH SURFACE TYPE THE POSITION IN THE
C...     GEOMTB TO START SEARCHING
C
   30 WRITE(GPFILE,3003)I,GEOMLC(I)
 3003 FORMAT(6X,12HDATA GEOLOC(,I2,2H)/,I4,1H/,53X)
C
C
C...     WRITE DATA STATEMENTS TO PRODUCE GEOMETRIC TABLE
C
      L1=0
      DO 90 I=1,50
      IF(GEOMLC(I).EQ.0)GOTO 90
      L1=L1+1
      GEOMLC(L1)=GEOMLC(I)
   90 CONTINUE
      L1=L1+1
      GEOMLC(L1)=QPRODN
      CALL SORT(GEOMLC(1),1,L1,1,1)
      JJ=0
      L1=1
      WRITE(GPFILE,3012)
 3012 FORMAT(1HC,79X)
C
      DO 100 I=1,IPROD
      JJ=JJ+1
C
C...     IF NEXT ITEM IS NEGATIVE IT IS THE TERMINATOR OF THIS
C...     PRODUCTION. IS IT NEGATIVE
C
      IF(JJ.LT.GEOMLC(L1))GOTO 502
      K=4*(JJ-1)
      WRITE(GPFILE,3008)K,JJ,(Z9999+K)
 3008 FORMAT(36HC                         /Z9999/ + ,I4,40X/
     *       6X,12HDATA GEOMTB(,I6,3H) /I11,1H/,42X)
      JJ=JJ+1
      L1=L1+1
      IF(JJ.LT.GEOMLC(L1))GOTO 502
      JJ=JJ-1
      GO TO 100
  502 IF(PRODN(I).LT.0)GOTO 98
C
C...     NO. WRITE DATA STATEMENT ASSIGNING BIT PATTERN
   97 WRITE(GPFILE,3004)HEX(PRODN(I)),JJ,PRODN(I)
 3004 FORMAT(29HC                         / Z,A8,1H/,42X/
     *       6X,12HDATA GEOMTB(,I6,3H) /I11,1H/,42X)
      GO TO 100
C
C...     THIS ITEM IS NEGATIVE, -(NO. OF PRODUCTION).
C...     FETCH BCD OF ITS MODULUS FROM THE NAMTBL AND WRITE
C...     DATA STATEMENT FOR NEGATIVE INTEGER.
C
   98 J=-PRODN(I)
      CALL BCDBIN(CNAMTB(J),K,M)
      IF(K.GE.10000)GOTO 99
      WRITE(GPFILE,3005)K,JJ,(ZCCCC+K)
 3005 FORMAT(36HC                         /ZCCCC/ + ,I4,40X/
     *       6X,12HDATA GEOMTB(,I6,3H) /I11,1H/,42X)
      GOTO 100
   99 K=K-10000
      WRITE(GPFILE,3006)K,JJ,(ZAAAA+K)
 3006 FORMAT(36HC                         /ZAAAA/ + ,I4,40X/
     *       6X,12HDATA GEOMTB(,I6,3H) /I11,1H/,42X)
  100 CONTINUE
C
C...     BLOCK DATA PROGRAM IS NOW WRITTEN.
C...     WRITE END CARD AND RETURN.
C
      WRITE(GPFILE,3007)
 3007 FORMAT(7X,3HEND,70X)
      RETURN
       END
