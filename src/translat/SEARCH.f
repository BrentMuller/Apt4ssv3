**** SOURCE FILE : SEARCH00.ORG   ***
*
*
*  *  SEARCH  *   INTEGER FUNCTION   25.6.86   E.MCLELLAN
*
*  PURPOSE     TO COMPARE SOURCE STRUCTURE TO A LIST OF
*              PRODUCTIONS AND TO DETERMINE WHICH PRODUCTION
*              IS 'MATCHED' BY THE SOURCE STRUCTURE
*
*  CALLING SEQUENCE
*              INTEGER= SEARCH (SOURCE,IADR,PRODCT,ERRPT)
*
*  ARGUMENTS   SOURCE   ARRAY CONTAINING SOURCE STRUCTURE.
*              IADR     ADDRESS OF FIRST ELEMENT.
*                       THE REMAINING ELEMENTS ARE STORED
*                       IN SUCCESSIVELY LOWER CORE LOCATIONS
*              PRODCT   ADDRESS OF THE FIRST ELEMENT OF THE
*                       FIRST PRODUCTION. THE REMAINING
*                       ELEMENTS ARE STORED IN SUCCESSIVELY
*                       HIGHER CORE LOCATIONS
*              ERRPT    ADDRESS OF THE PRODCT POSITION IN WHICH
*                       A MISMATCHED PRODUCTION WAS DETECTED
*
*  CALLED BY            GOPAT,INPAT,LARGES,PRO020,PRO021,RECOG,
*                       SSDEF,TSSMIL
*
*  SUBSIDIARIES         NONE
*
      INTEGER FUNCTION SEARCH(SOURCE,IADR,PRODCT,ERRPT)
C
      INTEGER SOURCE,IADR,PRODCT,ERRPT,IADSAV,ORIGIN,SUBPAT
      DIMENSION SOURCE(*),PRODCT(*)
      INTEGER ANDF
      INTEGER Z9999,ZAAAA,ZCCCC,ZFFFF
C
      INCLUDE 'SDP.INC'
C     IWRD: NO. OF BYTES PER WORD
C
      DATA Z9999/-1718026240/,ZAAAA/-1431699456/,
     +     ZCCCC/-859045888/,ZFFFF/-65536/
C
C.... SAVE INITIAL STACK ADDRESS
      IADSAV=IADR
C.... PRODCT ADDRESS
      J=1
C.... INITIAL VALUE OF ERRPT
   5  K=ERRPT
C.... INITIAL STACK ADDRESS
      I=IADSAV
C.... IS ADDRESS IN PRODCT A BREAK POINT ?
      SUBPAT=ANDF(PRODCT(J),ZFFFF)
      IF (SUBPAT.EQ.Z9999) THEN
C.... YES - STORE THE BASIC ADDRESS, INCREMENT PRODCT ADDRESS BY 1
        ORIGIN=J
        J=J+1
      ELSE
C.... NOT A BREAK POINT - DECREASE STACK ADDRESS BY 2
C                         DECREASE ERRPT BY 1
        I=I-2
        K=K-1
      ENDIF
C
C.... NEW PRODUCTION
C
  10  CONTINUE
      IF (PRODCT(J).GE.0) THEN
C.... COMPARE IF NEXT INFORMATION IS AN ARGUMENT,
C     IF SO CHANGE TO SEQUENTIAL MODE
        IF (PRODCT(J+1).GT.0) GOTO 50
C....COMPARE STACK AND PRODCT
        SUBPAT=ANDF(SOURCE(I),PRODCT(J))
        IF (SOURCE(I).EQ.SUBPAT) THEN
C.... PRODUCTION STILL OK, INCREMENT PRODCT BY 1
C                          DECREMENT STACK BY 2
          J=J+1
          I=I-2
C.... DECREMENT ERRPT
          K=K-1
        ELSE
C.... MAINTAIN STACK ADDRESS CONSTANT, INCREMENT PRODCT BY 2
C     AND SEARCH NEW PRODUCTION
          J=J+2
        ENDIF
        GOTO 10
C
      ELSE
C.... IS PRODCT A PRODUCTION NUMBER
        SUBPAT=ANDF(PRODCT(J),ZFFFF)
        IF (SUBPAT.EQ.ZCCCC) THEN
          GOTO 80
C
C.... IS IT A DISPLACEMENT
        ELSE IF (SUBPAT.EQ.ZAAAA) THEN
C.... YES
          J=(PRODCT(J)-ZAAAA)/IWRD
          J=J+ORIGIN
          GOTO 10
        ELSE
          GOTO 5
        ENDIF
      ENDIF
C
C.... SEQUENTIAL SEARCHING
C
  50  SUBPAT=ANDF(SOURCE(I),PRODCT(J))
      IF (SOURCE(I).EQ.SUBPAT) THEN
C.... NEXT HIGHER PRODCT ADDRESS, NEXT LOWER STACK ADDRESS
        J=J+1
        I=I-2
C.... DECREMENT ERRPT
        K=K-1
C.... IS PRODCT A PRODUCTION NUMBER
        SUBPAT=ANDF(PRODCT(J),ZFFFF)
        IF (SUBPAT.EQ.ZCCCC) THEN
          GOTO 80
        ELSE
          GOTO 50
        ENDIF
      ELSE
C.... SEARCHING FAILED. FINAL PROCESS.
C     SEARCH FOR NEXT FINAL PRODUCTION NUMBER
  60    J=J+1
        SUBPAT=ANDF(PRODCT(J),ZFFFF)
        IF (SUBPAT.EQ.ZCCCC) THEN
          J=J+1
          GOTO 80
        ELSE
          GOTO 60
        ENDIF
      ENDIF
C
C.... PRODUCTION NUMBER
C
  80  SEARCH=PRODCT(J)-ZCCCC
      ERRPT=K
      RETURN
      END
