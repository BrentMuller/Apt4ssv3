**** SOURCE FILE : M0006655.V04   ***
*
C
C              FORTRAN SUBROUTINE MNPROC
C
C LINKAGE      SUBROUTINE MNPROC
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    HELP            SUBROUTINE    MACREC
C          SUBROUTINE    ALARM           SUBROUTINE    PRO026
C          SUBROUTINE    ONEARG
C          SUBROUTINE    OPCODE
C          SUBROUTINE    MACLBL
C          SUBROUTINE    RLSLIN
C
      SUBROUTINE MNPROC
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE 'NAMETB.INC'
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),NUMBER(2),LABEL(2),MACVBL(2)
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'
      EQUIVALENCE (NUMBER(1),CODE(27))
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '
      EQUIVALENCE (LABEL(1),CODE(43))
C MACVBL:      (1)=CODE CLASS 36000,(2)=NAMTBL INDEX OF 'MACVBL'
      EQUIVALENCE (MACVBL(1),CODE(71))
C
C       11.    SEQUENCE NUMBER STORAGE
C
      COMMON/SEQCOM/SEQCOM
      DIMENSION SEQCOM(3)
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER
      EQUIVALENCE (SEQNO,SEQCOM(1))
C
C       16.    LITERALS FOR I. L. OPERATION CODES
C
      COMMON/IL/IL
      DIMENSION IL(21)
C ENTRYX:      CONTAINS COMMAND CODE ( 7) FOR ENTRY COMMAND
      EQUIVALENCE (ENTRYX,IL(7))
C
C       22.    MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      LOGICAL ILHLT,FINMAC,ENTRY,MACEND
      DIMENSION MACXX1(71)
C MACDFP:      POINTER TO LAST ENTRY IN MACDF1 AND MACDF2 ARRAYS
      EQUIVALENCE (MACDFP,MACXX1(1))
C MCHSTP:      POINTER TO LAST MACHST ENTRY
      EQUIVALENCE (MCHSTP,MACXX1(3))
C MCSAVP:      PRESENT NEST LEVEL DURING MACRO PROCESSING
      EQUIVALENCE (MCSAVP,MACXX1(5))
C MNMVBP:      POINTER TO LAST MNMVB AND MNMVC TABLE ENTRY
      EQUIVALENCE (MNMVBP,MACXX1(6))
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE
      EQUIVALENCE (ILHLT,MACXX1(14))
C TEXTST:      POINTER TO MCBUFF OF MACRO TEXT WORD BEING PROCESSED
      EQUIVALENCE (TEXTST,MACXX1(15))
C MAXSPS:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO
      EQUIVALENCE (MAXSPS,MACXX1(21))
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING
      EQUIVALENCE (FINMAC,MACXX1(24))
C NMLINE:      EQUALS NUMBER OF EXPRESSIONS THAT REQUIRE BRANCHING I.L.
      EQUIVALENCE (NMLINE,MACXX1(25))
C NUMCAL:      CONTAINS NUMBER OF CALLS FOR CURRENT MACRO
      EQUIVALENCE (NUMCAL,MACXX1(28))
C BITWDS:      NUMBER OF WORDS NEEDED FOR ALL CALL QUALITIES OF MACRO
      EQUIVALENCE (BITWDS,MACXX1(29))
C NUMBIT:      CONTAINS NUMBER OF BITS IN A FIXED POINT WORD
      EQUIVALENCE (NUMBIT,MACXX1(56))
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION
      EQUIVALENCE (ENTRY,MACXX1(40))
C MACTOP:      POINTER TO EXPRESSION NUMBER IN MACSPD TABLE
      EQUIVALENCE (MACTOP,MACXX1(42))
C LNUSDP:      INDEX OF LAST LINUSD ENTRY
      EQUIVALENCE (LNUSDP,MACXX1(51))
C MCSPDP:      POINTER TO LAST ENTRY IN MACSPD TABLE
      EQUIVALENCE (MCSPDP,MACXX1(57))
C MCSRCH:      AT FINAL MACRO PRECESSING MACDF1 POINTER
      EQUIVALENCE (MCSRCH,MACXX1(59))
C MACFND:      1 IF NO MACRO OF CURRENT LEVEL ENCOUNTERED. OTHERWISE 0
      EQUIVALENCE (MACFND,MACXX1(60))
C NUMARG:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO
      EQUIVALENCE (NUMARG,MACXX1(61))
C MACEND:      TRUE WHEN ALL MACRO PROCESSING IS FINISHED
      EQUIVALENCE (MACEND,MACXX1(62))
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED
      EQUIVALENCE (WHCHMN,MACXX1(63))
C LARGMV:      KEEPS TRACK OF LARGEST NUMBER OF MACRO VARIABLES
      EQUIVALENCE (LARGMV,MACXX1(64))
C MSPDDM:      CONTAINS DIMENSION OF THE ARRAY MACSPD
      EQUIVALENCE (MSPDDM,MACXX1(65))
C PATHLN:      CURRENT ACTUAL BRANCHING EXPRESSION. INITIALLY=NUMARG
      EQUIVALENCE (PATHLN,MACXX1(68))
C NXTLN:       POINTER TO NEXT LINUSD POSITION TO BE EXAMINED
      EQUIVALENCE (NXTLN,MACXX1(69))
C PATHCH:      CURRENT ACTUAL BRANCHING EXPRESSION. INITIALLY=NUMARG
      EQUIVALENCE (PATHCH,MACXX1(71))
C
C       24.    MACRO PROCESSING ARRAYS
C
      COMMON/MACXX3/MACXX3
      DIMENSION MACXX3(1430),MACDF1(400),MACDF2(400),MACHST(600)
C MACDF1:      STORES MACRO NAME AND ALL MACRO VBL NAMTBL POINTERS
      EQUIVALENCE (MACDF1(1),MACXX3(1))
C MACDF2:      STORES NORMAL VALUES FOR ALL MACRO VARIABLES
      EQUIVALENCE (MACDF2(1),MACXX3(401))
C MACHST:      MACRO CALL HISTORY TABLE
      EQUIVALENCE (MACHST(1),MACXX3(801))
C
C       25.    MACRO PROCESSING ARRAYS
C
      COMMON/MACXX4/MACXX4
      DIMENSION MACXX4(100),MNMVB(25),MNMVC(25),MACSEQ(50)
C MNMVB:       INDICATES MACROS IN WHICH ARE ASSIGNED VALUES
      EQUIVALENCE (MNMVB(1),MACXX4(1))
C MNMVC:       CALLED MACRO FOR WHICH CORRESPONDING MNMVB ENTRY IS MADE
      EQUIVALENCE (MNMVC(1),MACXX4(26))
C MACSEQ:      PRESERVES INITIAL SEQUENCE NUMBERS OF THE MACROS
      EQUIVALENCE (MACSEQ(1),MACXX4(51))
C
C      26A.    MACRO PROCESSING ARRAYS
C
      COMMON/MACXX6/MACXX6
      DIMENSION MACXX6(1300),MACSPD(1300)
C MACSPD:      NAMTBL POINTERS OF THE ASSIGNED VALUES FOR MACRO CALL
      EQUIVALENCE (MACSPD(1),MACXX6(1))
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C MODHLF:      NORMAL MODE CODE LIMIT 500
      EQUIVALENCE (MODHLF,MODULI(2))
C
C       41.    NUMBER TABLE OVERFLOW VARIABLES
C
      COMMON/NTBL/NTBL
      DIMENSION NTBL(6)
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE
      EQUIVALENCE (NLAST,NTBL(4))
C
C..... LOCAL ARRAY TO KEEP TRACK OF ASSIGNED VARIABLES TO AVOID
C      CORRUPTING NAME AND NUMBER TABLES
       DIMENSION IASV(6000)
       external alarm
C**
C...     LARGMV KEEPS COUNT OF NUMBER OF MACRO VARIABLES AND LINKAGE
C...     CELLS NEEDED FOR ALL MACROS OF CURRENT LEVEL.
C
      IF(MAXSPS.GT.LARGMV)LARGMV=MAXSPS
C
C...     BRANCH IF NOT FIRST MACRO TO UNDERGO FINAL PROCESSING.
C
      IF(MCSRCH.NE.0)GO TO 35
      MCSAVP = 1
   71 MCSRCH=1
C
C...     BRANCH IF ALL MACROS OF CURRENT LEVEL HAVE BEEN PROCESSED.
C
    1 IF(MCSRCH.GT.MACDFP)GO TO 65
      MCSPDP=0
C
C...       SKIP IF MACRO WAS NOT CALLED
C
      IF(MACDF2(MCSRCH+2).EQ.0)GO TO 35
C
C...     CHECK IF MACRO BEING EXAMINED IS OF CURRENT LEVEL.
C...     = NEGATIVE - MACRO ALREADY PROCESSED.
C...     = ZERO     - PROCESS IT.
C...     = PLUS     - NOT READY TO PROCESS THIS MACRO.
C
    2 IF(MACDF2(MCSRCH)-MCSAVP)35,7,6
C
C...     DETERMINE LOCATION OF NEXT MACRO IN MACDF1 TABLE.
C
   35 IF(MACDF1(MCSRCH+2))3,3,4
    3 MCSRCH=MCSRCH+3
      GO TO 1
    4 MCSRCH=MACDF1(MCSRCH+2)+1
      GO TO 1
C
C...     MACFND SET TO 1 IF NO MACRO OF CURRENT LEVEL ENCOUNTERED.
C...     OTHERWISE SET TO 0.
C
    6 MACFND=IABS(MACFND)
      GO TO 35
    7 MACFND=0
C
C...     COMPUTE BEGINNING (NUMBEG) AND END (NUMARG) OF MACRO VARIABLES
C...     IN THE MACDF1 TABLE.
C
      NUMARG=MACDF1(MCSRCH+2)
    8 NUMBEG=MCSRCH+3
C
C...     INITIALLY ZERO THE MACSPD TABLE PRIOR TO STORING CALL HISTORY.
C
      DO 51 I=1,1300
   51 MACSPD(I)=0
      MCSPDP=1
      IF(NUMARG.NE.0)MCSPDP=NUMARG-MCSRCH-1
C
C...     BEGIN SCANNING THE MACHST TABLE TO RETRIEVE, EXPAND, AND PLACE
C...     IN THE MACSPD TABLE CALL INFORMATION FOR CURRENT MACRO.
C
      L=2
C
C...     DO NOT BRANCH IF CALL INFORMATION FOR CURRENT MACRO FOUND.
C
    9 IF(MACHST(L).NE.MCSRCH)GO TO 5
      K=1
      M=L
      IF(MACHST(L+1).EQ.0)GO TO 91
      IF(NUMARG.EQ.0)GO TO 93
      IF(MCSPDP+NUMARG-NUMBEG+2.LE.MSPDDM)GO TO 94
   95 CALL ALARM(31,0,8,'MNPROC  ')
      CALL HELP
C
C...     PLACE ASSIGNED VALUES FOR THIS CALL IN MACSPD TABLE.
C
   94 DO 12 I=NUMBEG,NUMARG
      IF(K.NE.(MACHST(L+2)/100000))GO TO 10
      MACSPD(MCSPDP+1)=MACHST(L+2)-100000*K
      L=L+1
      GO TO 11
   10 MACSPD(MCSPDP+1)=MACDF2(I)
      IF(NLAST.GT.0)MACSPD(MCSPDP+1)=-MACSPD(MCSPDP+1)
   11 MCSPDP=MCSPDP+1
   12 K=K+1
C
C...     PLACE CALL NUMBER IN MACSPD TABLE.
C
   93 MCSPDP=MCSPDP+1
      IF(MCSPDP.GT.MSPDDM)GO TO 95
      MACSPD(MCSPDP)=MACHST(M+1)
   91 L=L+2
   92 IF(MCHSTP-L)13,14,14
C
C...     NO MORE CALL INFORMATION REMAINS TO BE SCANNED.
C
   13 MCHSTP=M-2
C
C...     BRANCH IF THERE ARE NO MACRO VARIABLES.
C
   18 IF(NUMARG.EQ.0)GO TO 19
      NUMARG=NUMARG-NUMBEG+2
C
C...     GENERATE MACRO VARIABLE NAMES, STORE THEM IN NAMTBL, AND PLACE
C...     THEIR NAMTBL INDICES IN THE MACSPD TABLE.
C
      DO 32 I=2,NUMARG
      CALL MACLBL(-MCSAVP,-I,L)
C      PROTECT NAMTBL ENTRY ON SUBSEQUENT CALLS
      NAMTBL(L) = MACVBL(1)
   32 MACSPD(I-1)=L
C
C...     BRANCH IF NO MACRO VARIABLES HAVE BEEN ASSIGNED MACRO NAMES.
C
   19 IF(MNMVBP.EQ.0)GO TO 20
      I=1
   61 IF(MNMVC(I).NE.MCSRCH)GO TO 62
C
C...     REMOVE REFERENCES TO CURRENT MACRO FROM MNMVC TABLE.
C
      MNMVBP=MNMVBP-1
      MNMVB(I)=MNMVB(MNMVBP+1)
      MNMVC(I)=MNMVC(MNMVBP+1)
   63 IF(MNMVBP.LT.I)GO TO 20
      GO TO 61
   62 I=I+1
      GO TO 63
C
C...     INITIALIZE COUNTERS,POINTERS, AND FLAGS USED IN FINAL MACRO
C...     PROCESSING.
C
   20 TEXTST=MACDF1(MCSRCH+1)
      WHCHMN=MACDF2(MCSRCH+1)
      SEQNO=MACSEQ(WHCHMN)
      ILHLT=.TRUE.
      FINMAC=.FALSE.
      MACTOP=MCSPDP
      ENTRY=.FALSE.
      NMLINE=NUMARG
      NUMCAL=MACDF2(MCSRCH+2)
      IF(NUMARG.EQ.0)GO TO 53
C
C...     FOR EACH MACRO VARIABLE SELECT AS ITS NORMAL VALUE THE MOST
C...     COMMONLY USED ASSIGNED VALUE. ALSO ESTABLISH AS THE CLASS AND
C...     MODE OF EACH MACRO VARIABLE THAT OF ITS FIRST ASSIGNED VALUE.
C
      I=1
   52 I=I+1
      J=MACSPD(I-1)
      L=NUMARG+I
      K=MACSPD(L-1)
      IF((NLAST.GT.0).AND.(K.LT.0))K=-K
      NAMTBL(J)=NUMBER(1)+MODHLF
      IF(K.GT.NAMMAX)GO TO 55
      KK=NAMTBL(K)
      IF(KK-MODULO*(KK/MODULO).LT.MODHLF)KK=KK+MODHLF
      NAMTBL(J)=KK
   55 IF(NLAST.GT.0)GO TO 140
      L=0
C
C...IASV IS USED TO KEEP TRACK OF THE FREQUENCY OF THE ASSIGNED VALUES.
C
      M=I
      DO 109 J=1,NUMCAL
      M=M+NUMARG
      N=MACSPD(M-1)
  109 IASV(N)=0
C
C...     K POINTS TO MOST COMMONLY USED ASSIGNED VALUE.
C...     L KEEPS TRACK OF ITS FREQUENCY.
C
      DO 110 J=1,NUMCAL
      M=J*NUMARG+I
      N=MACSPD(M-1)
      IASV(N)=IASV(N)+1
      IF(N.EQ.K)GO TO 102
      IF(IASV(N).LE.L)GO TO 110
      L=IASV(N)
      K=N
      GO TO 110
  102 L=L+1
  110 CONTINUE
      GO TO 130
C
C...     INITIALIZE PARAMETERS AND COUNTERS USED IN MACRO PROCESSING.
C
   53 BITWDS=(NUMCAL-1)/NUMBIT+1
      MAXSPS=NUMARG
      NXTLN=1
      LNUSDP=0
      PATHLN=NUMARG
      PATHCH=NUMARG
      RETURN
C
C...     COMPRESS MACHST TABLE TO ERASE CURRENT CALL INFORMATION STRING.
C
   14 DO 15 I=L,MCHSTP
      J=I-(L-M+1)
   15 MACHST(J)=MACHST(I)
      MACHST(J+1)=0
      MCHSTP=J
      L=M
      GO TO 9
C
C...     LOCATE NEXT CALL INFORMATION STRING IN MACHST.
C
    5 IF(MACHST(L+2)/100000)16,17,16
   16 L=L+1
      GO TO 5
   17 L=L+3
      IF(L-MCHSTP)9,9,18
   65 IF(LARGMV)27,27,25
C
C...     GENERATE I.L. TRANSFER COMMANDS FOR MACRO VARIABLES AND LINKAGE
C...     CELLS FOR CURRENT MACRO DEPTH LEVEL.
C
   25 DO 26 I=2,LARGMV
      CALL MACLBL(-MCSAVP,-I,L)
      NAMTBL(L) = LABEL(1)
      CALL OPCODE(ENTRYX)
      CALL ONEARG(L)
   26 CALL RLSLIN
   27 IF(MACFND)28,29,30
C
C...     PREPARE TO PROCESS MACROS OF NEXT DEPTH LEVEL.
C
   29 MCSAVP=MCSAVP+1
      LARGMV=0
      MACFND=-1
      IF(MNMVBP.EQ.0)GO TO 73
C
C...     ADJUST DEPTH LEVEL IN MACDF2 TABLE OF THOSE UNPROCESSED MACROS
C...     WHICH ARE MACRO VARIABLE ASSIGNED VALUES.
C
      DO 72 I=1,MNMVBP
      K=MNMVC(I)
   72 IF(MACDF2(K).LE.MCSAVP)MACDF2(K)=MCSAVP+1
C
C...     ADJUST DEPTH LEVEL OF THOSE MACROS WHICH ARE DIRECTLY CALLED BY
C...     UNPROCESSED MACROS WHICH ARE MACRO VARIABLE ASSIGNED VALUES.
C
   73 I=1
   74 IF(I.GT.MCHSTP)GO TO 71
      K=MACHST(I)
      IF(MACDF2(K).LT.MCSAVP)GO TO 75
      J=MACHST(I+1)
      IF(MACDF2(J).LE.MACDF2(K))MACDF2(J)=MACDF2(K)+1
   75 I=I+2
   76 I=I+1
      IF((MACHST(I)/100000).EQ.0)GO TO 74
      GO TO 76
C
C...     NO MORE MACROS REMAIN TO BE PROCESSED.
C
   28 MACEND=.TRUE.
      RETURN
C
C...     1022 - RECURSIVE USE OF MACROS
C
   30 CALL ALARM(1022,0,8,'MNPROC  ')
      GO TO 28
C
C     MARK MOST COMMON ASSIGNMENT
  130 DO 120 L=1,NUMCAL
      J=NUMCAL-L+1
      M = J*NUMARG+I
      N=MACSPD(M-1)
      IF(N.EQ.K)MACSPD(M-1)=-MACSPD(M-1)
  120 CONTINUE
      IF(I.LT.NUMARG) GOTO 52
      GO TO 53
  140 KK=NUMARG+I-1
      K=MACSPD(KK)
      IF(K.LT.0)GO TO 180
      DO 150 L=1,NUMCAL
      J=NUMCAL-L+1
      M=J*NUMARG+I
      N=MACSPD(M-1)
      IF(N.LT.0)GO TO 180
  150 CONTINUE
      DO 160 L=1,NUMCAL
      J=NUMCAL-L+1
      M=J*NUMARG+I
      N=MACSPD(M-1)
      IF(N.EQ.K)MACSPD(M-1)=-MACSPD(M-1)
  160 CONTINUE
  180 IF(I.LT.NUMARG)GO TO 52
      GO TO 53
      END
