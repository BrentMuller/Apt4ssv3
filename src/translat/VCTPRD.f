**** SOURCE FILE : M0006692.V01   ***
*
C
C              FORTRAN SUBROUTINE VCTPRD
C
C LINKAGE      SUBROUTINE  VCTPRD(JMP)
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          INTEGER FCT.  NAME            SUBROUTINE    RECOG
C          SUBROUTINE    SETCHR
C
      SUBROUTINE  VCTPRD(JMP)
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      COMMON/NAMETB/NAMETB
      DIMENSION NAMETB(3007),NAMTBL(3,999)
C NAMTBL:      NAME TABLE OR DICTIONARY
      EQUIVALENCE (NAMTBL(1,1),NAMETB(11))
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)
C TOP:         POINTER TO LAST STACK ENTRY
      EQUIVALENCE (TOP,STKLST(1))
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY
      EQUIVALENCE (ARGTOP,STKLST(2))
C STACK:       WORKING STACK
      EQUIVALENCE (STACK(1,1),STKLST(4))
C ARGSTK:      ARGUMENT STACK
      EQUIVALENCE (ARGSTK(1),STKLST(202))
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),SLASH(2),LPAREN(2),RPAREN(2),DOT(2),PERMID(2)
C LPAREN:      (1)=CODE CLASS  2000,(2)=NAMTBL INDEX OF '(     '
      EQUIVALENCE (LPAREN(1),CODE(3))
C RPAREN:      (1)=CODE CLASS  3000,(2)=NAMTBL INDEX OF ')     '
      EQUIVALENCE (RPAREN(1),CODE(5))
C SLASH:       (1)=CODE CLASS  5000,(2)=NAMTBL INDEX OF '/     '
      EQUIVALENCE (SLASH(1),CODE(9))
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'
      EQUIVALENCE (PERMID(1),CODE(39))
C DOT:         (1)=CODE CLASS 25000,(2)=NAMTBL INDEX OF 'DOT   '
      EQUIVALENCE (DOT(1),CODE(49))
C
C        4.    PRODUCTION TABLE
C
      COMMON/SRCTBL/SRCTBL
      DIMENSION SRCTBL(501),META(50)
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES
      EQUIVALENCE (META(1),SRCTBL(3))
C
C        5.    PROGRAM CONTROL FLAGS
C
      COMMON/FLAGS/FLAGS
      LOGICAL ENDFLG
      DIMENSION FLAGS(4)
C ENDFLG:      TRUE WHEN SOURCE STATEMENT TOTALLY IN STACK
      EQUIVALENCE (ENDFLG,FLAGS(1))
C
C        7.    STRING STORAGE AREA
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT
      COMMON/INPTR/CNT
C
C       22.    MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      LOGICAL MACRED
      DIMENSION MACXX1(71)
C MACRED:      SET TRUE TO INDICATE INPUT FROM MCBUFF TABLE
      EQUIVALENCE (MACRED,MACXX1(18))
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C**
      DATA NMTB/0/
C
      IF(JMP.LT.0)GOTO 10
      JMP=1
      IF(NMTB.EQ.0)GOTO 50
      JMP=2
      TOP=TOP+1
      STACK(1,TOP)=NMTB
      STACK(2,TOP)=META(NAMTBL(1,NMTB)/MODULO)
      GOTO 40
C
C     VECTOR AND SCALAR PRODUCT
C
   10 IF(NAMTBL(1,STACK(1,TOP-2)).EQ.DOT(1))GOTO 30
C
      ARGTOP=2
      ARGSTK(1)=STACK(1,TOP-1)
      I=NAME('$CROSS   ')
      IF(MODULO*(NAMTBL(1,I)/MODULO).EQ.PERMID(1))GOTO 20
      NAMTBL(1,I)=PERMID(1)+40
   20 ARGSTK(2)=I
      STACK (1,TOP-1)=STACK(1,TOP-3)
      STACK (2,TOP-1)=STACK(2,TOP-3)
      CALL SETCHR(TOP-2,SLASH)
      STACK(1,TOP-3)=NAME('VECTOR  ')
      STACK(2,TOP-3)=META(NAMTBL(1,STACK(1,TOP-3))/MODULO)
C
      GOTO 40
C
   30 ARGTOP=1
      NMTB=STACK(1,TOP)
      ARGSTK(1)=STACK(1,TOP-1)
      CALL SETCHR(TOP,RPAREN)
      STACK (1,TOP-1)=STACK(1,TOP-3)
      STACK (2,TOP-1)=STACK(2,TOP-3)
      CALL SETCHR(TOP-2,LPAREN)
      STACK(1,TOP-3)=NAME('DOTF    ')
      STACK(2,TOP-3)=META(NAMTBL(1,STACK(1,TOP-3))/MODULO)
      IF(MACRED)GOTO 50
      ENDFLG=.FALSE.
      CNT=CNT-1
C
   40 NMTB=0
   50 RETURN
C
      END
