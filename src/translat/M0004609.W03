*
C
C              RENTRAN SUBROUTINE ALARM
C
C LINKAGE      SUBROUTINE ALARM(NUMBER,IPOS,ERLV,SUBNAM)
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    BINBCD          SUBROUTINE    BOOLIF
C          SUBROUTINE    FOUTXX          SUBROUTINE    COMSTR
C          SUBROUTINE    MCXTRN          SUBROUTINE    GOLO
C          ASM ROUT.     CFORM           SUBROUTINE    GOPAT
C          ASM ROUT.     MOVE            SUBROUTINE    ICMPRS
C          ASM ROUT.     IVERGL          SUBROUTINE    INPAT
C                                        SUBROUTINE    INPUT
C                                        SUBROUTINE    ISSCOD
C                                        SUBROUTINE    LABCON
C                                        SUBROUTINE    LARGES
C                                        SUBROUTINE    LCANON
C                                        SUBROUTINE    LOOP
C                                        SUBROUTINE    MACLBL
C                                        SUBROUTINE    MACREC
C                                        SUBROUTINE    MATCH
C                                        SUBROUTINE    MCXTRN
C                                        SUBROUTINE    MNPROC
C                                        SUBROUTINE    MOTION
C                                        INTEGER FCT.  NAME
C                                        SUBROUTINE    ONEARG
C                                        SUBROUTINE    OPCODE
C                                        SUBROUTINE    PRO020
C                                        SUBROUTINE    PRO021
C                                        SUBROUTINE    PRO026
C                                        SUBROUTINE    PRO027
C                                        SUBROUTINE    READ
C                                        SUBROUTINE    RECOG
C                                        SUBROUTINE    RECOGN
C                                        SUBROUTINE    REFREF
C                                        SUBROUTINE    REPLAC
C                                        SUBROUTINE    RESERV
C                                        SUBROUTINE    RESRED
C                                        SUBROUTINE    SSDEF
C                                        SUBROUTINE    SUBCOD
C                                        SUBROUTINE    TSSMIL
C                                        SUBROUTINE    TWOARG
C
      SUBROUTINE ALARM(NUMBER,IPOS,ERLV,SUBNAM)
C
      IMPLICIT INTEGER (A-Z)
C
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE (NAMETB)
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C CNUMTB:      NUMBER TABLE
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)
C TOP:         POINTER TO LAST STACK ENTRY
      EQUIVALENCE (TOP,STKLST(1))
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY
      EQUIVALENCE (ARGTOP,STKLST(2))
C STACK:       WORKING STACK
      EQUIVALENCE (STACK(1,1),STKLST(4))
C ARGSTK:      ARGUMENT STACK
      EQUIVALENCE (ARGSTK(1),STKLST(202))
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),RTERM(2)
C RTERM:       (1)=CODE CLASS  4000,(2)=NAMTBL INDEX OF 'RTERM '
      EQUIVALENCE (RTERM(1),CODE(7))
C
C        7.    STRING STORAGE AREA
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT
      COMMON/INPTR/CNT
C
C       11.    SEQUENCE NUMBER STORAGE
C
      INCLUDE (SEQCOM)
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER
C SEQNUM:      ALPHANUMERIC REPRESENTATION OF CURRRENT STATEMENT NUMBER
C
C       14.    I. L. LIST OPTION FLAGS
C
      COMMON/PRT/PRT
      LOGICAL PRTERR
      DIMENSION PRT(7)
C PRTERR:      TRUE IF PPOPTN/PRTER,ON. PRINTOUT OF STACK OR ARGSTK
      EQUIVALENCE (PRTERR,PRT(6))
C
C       21.    ERROR TEXT TABLE
C
      INCLUDE (ERRTXT)
C ERND:        DIMENSION OF ERRAD1 AND ERRAD2 (PARTS OF ERRTXT)
C ERRDM:       DIMENSION OF ERRTXT
C ERRTXT:      STORAGE OF ERROR MESSAGES
C ERRAD1:      TRANSLATOR ERROR AND WARNING NUMBERS
C ERRAD2:      START POSITIONS OF ERROR MESSAGES IN ERRTXT
C
C       22.    MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      LOGICAL ILHLT,FINMAC
      DIMENSION MACXX1(71)
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE
      EQUIVALENCE (ILHLT,MACXX1(14))
C FINMAC:      TRUE DURING FINAL MACRO PROCESSING
      EQUIVALENCE (FINMAC,MACXX1(24))
C
C       33.    SYMBOLIC FILE DEFINITIONS
C
      INCLUDE (SYMFIL)
C VLFILE:      VERIFICATION LISTING FILE
C
C       40.    PARAMETERS REQUIRED BY SUPERVISOR
C
      COMMON/SUPER/SUPER
      DIMENSION SUPER(36),XTRAS(7)
C ERRX:        ERROR LEVEL USED FOR SUPERVISOR
      EQUIVALENCE (ERRX,SUPER(5))
C XTRAS:       SPACE FOR ADDITIONAL PARAMETERS
      EQUIVALENCE (XTRAS(1),SUPER(10))
C
C       41.    NUMBER TABLE OVERFLOW VARIABLES
C
      COMMON/NTBL/NTBL
      DIMENSION NTBL(6)
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE
      EQUIVALENCE (NLAST,NTBL(4))
C
C       44.    ERROR POSITION TABLE
C
      COMMON/ERRPOS/ERRPOS
      INTEGER ERRPOS,ERRPNT,ESTACK,ERGSTK
      LOGICAL NOWARN
      DIMENSION ERRPOS(302),ERRPNT(100),ESTACK(100),ERGSTK(100)
C NOWARN:      FLAG TRUE IS SUPPRESSING OUTPUT OF WARNING NR. 50
      EQUIVALENCE (NOWARN,ERRPOS(1))
C ERRPNT:      CONTAINS POINTERS TO INPUT STATEMENT TEXT POSITION
      EQUIVALENCE (ERRPNT(1),ERRPOS(3))
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK
      EQUIVALENCE (ESTACK(1),ERRPOS(103))
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))
C*
C ARGUMENTS    NUMBER     INTEGER ERROR NUMBER
C              SUBNAM     NAME OF THE CALLING SUBROUTINE
C              IPOS       ERROR POSITION IN STACK OR ARGSTK
C
C... INITILIZE ARRAY INDICATING WHICH ERRORS ARE OF SEVERITY LEVEL FOUR.
C
      CHARACTER B*92,HERRNO*8,HEQU*16,HWARN*8,NOTEXT*52,FROM*16,SUBNAM*8
      CHARACTER*4 ASTRT,ESTRT,WSTRT,BLK,ISNCDE
      DATA B/' '/
      DATA ASTRT/'**  '/,ESTRT/'*$$*'/,WSTRT/'*$*$'/,BLK/'    '/
      DATA HERRNO/'ERR.NO. '/,HEQU/' EQUIVALENT TO  '/,HWARN/'WARNING '/
      DATA NOTEXT
     *     /'THERE IS NO DIAGNOSTIC MESSAGE FOR THIS ERROR NUMBER'/
      DATA ISNCDE/'ISN '/,ISEQ,INUM/2*0/
      DATA FROM /'FROM SUBROUTINE '/
C**
C...     CONVERT ERROR NO. TO BCD AND OUTPUT ERROR MESSAGE
C
C...     IF MACRO PROCESSING, ONLY OUTPUT ERROR DURING FINAL PASS
      IF((NUMBER.GE.20).AND.(NUMBER.LT.50))GO TO 5
      IF(ILHLT)GO TO 10
      IF(NUMBER.EQ.50.AND.NOWARN)GOTO 10
C
C...     POSITION OF ERROR IN THE INPUT STATEMENT
C
    5 IF(IPOS)510,550,520
  510 KK=ERGSTK(-IPOS)
      GOTO 530
  520 IF(IPOS.LT.2)IPOS=2
      KK=ESTACK(IPOS)
  530 IF(FINMAC)GOTO 600
      JJ=KK/100+1
      KK=MOD(KK,100)+12
      IF(JJ.EQ.1)GOTO 820
      CALL ICONV(JJ,B,KK+2,2)
      GOTO 820
  600 JJ=TOP
      IF(STACK(1,TOP).EQ.RTERM(2))JJ=JJ-1
      IF(IPOS.GT.0)JJ=MIN(IPOS+2,JJ)
      K=2
      KK=0
  605 B(1:88)=BLK
      J=12
C
      DO 650 I=K,JJ
      II=STACK(1,I)
      IF(II.LE.NAMMAX)GOTO 610
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB
      II=II-NAMMAX
      IF(NLAST.GT.0)CALL MCXTRN(5,II,IDUMMY)
      B(J:J+11)=CNUMTB(II)
      GOTO 620
  610 IF(II.LT.0)II=-NAMTBL(II)
      B(J:J+5)=CNAMTB(II)
  620 IF(I.EQ.IPOS)KK=J-1
      L=INDEX(B(J:J+11),' ')
      IF (L.EQ.0) THEN
        J=J+13
      ELSE
        J=J+L
      ENDIF
      IF(J.GT.68)GOTO 660
  650 CONTINUE
C
  660 IF(KK.GT.0)GOTO 790
      IF(I.GE.JJ)GOTO 670
      CALL FOUTXX(VLFILE,B,88)
      K=I+1
      GOTO 605
C
  670 IF(IPOS.GT.0)GOTO 550
      LL=-IPOS
      K=1
      GOTO 700
C
  680 B(1:88)=BLK
      J=12
C
  700 DO 750 I=K,ARGTOP
      B(J:J+1)=', '
      J=J+2
      L=ARGTOP+1-I
      II=ARGSTK(L)
      IF(II.LE.NAMMAX)GOTO 710
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB
      II=II-NAMMAX
      IF(NLAST.GT.0)CALL MCXTRN(5,II,IDUMMY)
      B(J:J+11)=CNUMTB(II)
      GOTO 720
  710 IF(II.LT.0)II=-NAMTBL(II)
      B(J:J+5)=CNAMTB(II)
  720 IF(L.NE.LL)GOTO 725
      KK=J-1
      GOTO 790
  725 L=INDEX(B(J:J+11),' ')
      IF (L.EQ.0) THEN
        J=J+13
      ELSE
        J=J+L
      ENDIF
      IF(J.GT.68)GOTO 760
  750 CONTINUE
C
  760 IF(KK.GT.0)GOTO 790
      IF(I.GE.ARGTOP)GOTO 550
      CALL FOUTXX(VLFILE,B,88)
      K=I+1
      GOTO 680
C
  790 CALL FOUTXX(VLFILE,B,88)
      B(1:88)=BLK
  820 CALL CFORM('A',B,KK,1)
      CALL FOUTXX(VLFILE,B,88)
      CALL CFORM('    ',B,KK,4)
C
C...     POSITION OF THE CURRENT ERROR NUMBER
C
  550 I=0
      NUMMIN=1
      NUMMAX=ERND
  200 NUMMER=(NUMMIN+NUMMAX)/2
      NUMB=ERRAD1(NUMMER)
      IF(I.GT.ERND)GOTO 230
      I=I+1
      IF(NUMBER-NUMB)220,230,210
  210 NUMMIN=NUMMER+1
      GOTO 200
  220 NUMMAX=NUMMER-1
      GOTO 200
  230 B(1:4)=ESTRT
      B(5:8)=ESTRT
      B(9:12)=ASTRT
      B(13:20)=HERRNO
      CALL BINBCD(NUMBER,B(21:),N)
      B(29:32)=BLK
      B(33:36)=ISNCDE
      B(37:44)=SEQNUM
      B(45:48)=BLK
      B(49:64)=FROM
      B(65:72)=SUBNAM
C
C... SET ERROR LEVEL INDICATOR FOR THE SUPERVISOR.
C
      I=2-ERLV/8
      XTRAS(I)=XTRAS(I)+1
      IF(ERLV.GT.ERRX)ERRX=ERLV
      IF(ERLV.EQ.8)GOTO 8
      B(1:4)=WSTRT
      B(5:8)=WSTRT
      B(13:20)=HWARN
    8 CALL FOUTXX(VLFILE,B,88)
C
      IF(ISEQ.EQ.SEQNO.AND.INUM.EQ.NUMBER)GOTO 150
      IF(I.LE.ERND)GOTO 235
      B(13:64)=NOTEXT
      GOTO 245
  235 KK=ERRAD2(NUMMER)
      IF (NUMMER.EQ.1) THEN
        II=NUMMER
      ELSE
        II=ERRAD2(NUMMER-1)+1
      ENDIF
  237 K=12
      DO 240 I=II,KK
      IF(K.GE.92)GOTO 245
      K=K+4
  240 B(K-3:K)=ERRTXT(I)
  245 IF (NUMBER.EQ.2058) THEN
        B(49:56)=CNAMTB(STACK(1,TOP+2))//'  '
        B(69:76)=CNAMTB(STACK(1,TOP+1))//'  '
        SEQNO=0
      ENDIF
      CALL FOUTXX(VLFILE,B,K)
      IF((KK-II).LT.20)GOTO 150
      II=I
      GOTO 237
C
  150 IF (.NOT. PRTERR) GO TO 250
      I=NUMBER/1000+1
      J = 1
      B(1:44)=BLK
C
C...     BRANCH ON ERROR TYPE (= NUMBER/1000) TO SET UP DUMP LIMITS
C
      GO TO(250,20,30,40),I
C
C...     1000 SERIES - DUMP STACK (FROM 1 TO TOP)
C
   20 K=TOP
      IF(NUMBER.EQ.1028) K=TOP-1
      GO TO 50
C
C...     2000 SERIES - DUMP ARGSTK (FROM 1 TO ARGTOP)
C
   30 K=ARGTOP
      GO TO 50
C
C...     3000 SERIES - DUMP NAME PORTION OF NAMTBL (FROM 1 TO NAMMAX)
C
   40 K=NAMMAX
      GOTO 50
C
C...     THIS LOOP DUMPS APPROPRIATE TABLE
C
   50 DO 120 L=J,K
C
C...     BRANCH ON ERROR TYPE TO DUMP APPROPRIATE TABLE
C
      GO TO(250,70,80,90),I
C
C...     1000 SERIES - EXTRACT NAMTBL POINTER FROM STACK
C
   70 M=STACK(1,L)
      GO TO 60
C
C...     2000 SERIES - EXTRACT NAMTBL POINTER FROM ARGSTK
C
   80 M=ARGTOP+1-L
      M=ARGSTK(M)
      GO TO 60
C
C...     3000 SERIES - USE NAMTBL POINTER
C
   90 M=L
C
C...     BRANCH IF ITEM IS NOT A NUMBER
C
   60 IF (M.LE.NAMMAX) GOTO 61
C
C...     STORE BCD OF NUMBER
C
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB
      M=M-NAMMAX
      IF(NLAST.GT.0)CALL MCXTRN(5,M,IDUMMY)
      B(5:16) = CNUMTB(M)
      B(17:20)=B(1:4)
      GOTO 62
C
C...     STORE BCD OF NAME
C
   61 B(5:10) =CNAMTB(M)
C
C...     IS IT A SYNONYM
C
      IF(NAMTBL(M).LT.0) GO TO 105
C
C...     NO. CONVERT CLASS/MODE TO BCD.
C
      CALL BINBCD(NAMTBL(M),B(13:),N)
C
C...     OUTPUT LINE
C
   62 IF(PRTERR) CALL FOUTXX(VLFILE,B,20)
      GOTO 110
C
C...     SYNONYM - FIND EQUIVALENT NAME, CONVERT TO BCD AND OUTPUT
C
  105 M = -NAMTBL(M)
      B(13:28)=HEQU
      B(29:34) = CNAMTB(M)
      CALL BINBCD(NAMTBL(M),B(37:),N)
      IF(PRTERR) CALL FOUTXX(VLFILE,B,44)
  110 CONTINUE
C
C.....   END OF LOOP
C
  120 CONTINUE
C
C...     ALL OF RELEVANT INFORMATION HAS BEEN PRINTED - RETURN
C
  250 B(1:88)=BLK
      CALL FOUTXX(VLFILE,B,88)
      ISEQ=SEQNO
      INUM=NUMBER
   10 RETURN
      END
