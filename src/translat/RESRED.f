**** SOURCE FILE : M0006678.W01   ***
*
C
C              FORTRAN SUBROUTINE RESRED
C
C LINKAGE      SUBROUTINE RESRED
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    ICONV           SUBROUTINE    RECOG
C          SUBROUTINE    LIBOPC
C          SUBROUTINE    LIBRD
C          SUBROUTINE    LIBSCH
C          SUBROUTINE    BCDBIN
C          SUBROUTINE    MCXTRN
C          SUBROUTINE    ALARM
C          SUBROUTINE    CFORM
C          SUBROUTINE    RESRVZ
C
      SUBROUTINE RESRED
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE 'NAMETB.INC'
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(300),STACK(2,99)
C TOP:         POINTER TO LAST STACK ENTRY
      EQUIVALENCE (TOP,STKLST(1))
C STACK:       WORKING STACK
      EQUIVALENCE (STACK(1,1),STKLST(4))
C
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE
      COMMON/TMP/TXXXX
      DIMENSION TXXXX(2,32)
C
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS
C
      COMMON/CFSIZE/CFSIZE
      DIMENSION CFSIZE(205),MAXSIZ(2),CANSIZ(2,100)
C CANTOP:      POINTER TO THE LAST CANSIZ ENTRY
      EQUIVALENCE (CANTOP,CFSIZE(1))
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))
C CANSIZ:      NUMBER OF ITEMS A. NAMTBL INDEX OF EACH LARGE DATA ARRAY
      EQUIVALENCE (CANSIZ(1,1),CFSIZE(6))
C
C       15.    ARRAY LIMIT STORAGE
C
      COMMON/SBSCPT/SBSCPT
      DIMENSION SBSCPT(101),RANGE(100)
C RNGPT:       POINTER TO NEXT RANGE ENTRY
      EQUIVALENCE (RNGPT,SBSCPT(1))
C RANGE:       STORAGE FOR APT RESERVE STATEMENT INFORMATION
      EQUIVALENCE (RANGE(1),SBSCPT(2))
C
C       36.    SYSTEM MACRO AND SEGMENT READ VARIABLES
C
      COMMON/MACSEG/MACSEG
      LOGICAL ALOPN
      DIMENSION MACSEG(6)
C ALOPN:       TRUE AFTER MACRO OR PART PROGRAM SEGMENT LIBRARY OPENED
      EQUIVALENCE (ALOPN,MACSEG(1))
C
C       41.    NUMBER TABLE OVERFLOW VARIABLES
C
      COMMON/NTBL/NTBL
      DIMENSION NTBL(6)
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE
      EQUIVALENCE (NLAST,NTBL(4))
      external alarm
C**
      CHARACTER*6 NAM1,NAM2,BLA*1
      INTEGER INP(20)
      DATA BLA/' '/
C    CREATION OF AN INDICATED NAME
      I=STACK(1,TOP-2)
      IF(I.GT.NAMMAX)GOTO 10
C   ILLEGAL SYMBOLIC NUMBER-STATEMENT AS IDNEX ON READ-COMMAND
      CALL ALARM(2054,TOP-2,8,'RESRED  ')
      RETURN
C   CONSTRUCT STORAGE NAME
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB
   10 I=I-NAMMAX
      IF(NLAST.GT.0)CALL MCXTRN(5,I,IDUMMY)
      CALL BCDBIN (CNUMTB(I),M,N)
      CALL ICONV (M+10000000,NAM2,0,8)
      CALL CFORM (CNAMTB(STACK(1,TOP-4)),NAM1,0,8)
      DO 20 J=1,8
      IF(NAM1(J:J).EQ.BLA)GOTO 20
      NAM2(J:J)=NAM1(J:J)
   20 CONTINUE
C   POSSIBLY OPEN THE PDS
      IF(ALOPN) GOTO 30
      CALL LIBOPC(1,IFLAG)
      IF(IFLAG.EQ.0) GOTO 25
      IERROR=72
   24 CALL ALARM(IERROR,0,8,'RESRED  ')
      GOTO 41
   25 ALOPN=.TRUE.
   30 CALL LIBSCH(NAM2,IFLAG)
      IF(IFLAG.EQ.0)GOTO 40
   32 IERROR=73
      GOTO 24
C   READ FIRST CARD
   40 CALL LIBRD(NAM2,IFLAG,INP)
      IF(IFLAG.NE.0)GOTO 32
   41 CALL LIBOPC(2,IFLA)
      ALOPN=.FALSE.
      IF(IFLAG.NE.0)RETURN
C  TRANSFER MODE AND RESERVE VARIABLE, IF NECESSARY
      J=STACK(1,TOP-4)
      IF(MODE(J).NE.0)GOTO 7000
      NAMTBL(J)=NAMTBL(J)+INP(5)
C  SEARCH VARIABLE IN RESERV STORAGE
      N1=RNGPT-2
      DO 50 N=1,N1,2
      IF(RANGE(N).EQ.J)GOTO 60
   50 CONTINUE
C   THE ERROR IS REPORTED BY THE FOLLOWING CALL SUBCOD
      RETURN
C  RESERVE STORAGE
   60 CALL RESRVZ(J,INP(5),TXXXX(1,INP(5)),RANGE(N+1))
C THE LENGTH OF THE CANONICAL FORM IS STORED IN INP(8)
C  CHANGE MAXSIZ IF NECESSARY
 7000 IF(INP(8).LE.(IABS(MAXSIZ(2))))GOTO 7040
      IF(INP(8).LE.(IABS(MAXSIZ(1))))GOTO 7030
      MAXSIZ(2)=MAXSIZ(1)
      MAXSIZ(1)=INP(8)
      GOTO7040
 7030 MAXSIZ(2)=INP(8)
C INTERROGATE FOR FREE SPACE
 7040 JJ=MOD(J,CANTOP)
      DO 7050 I=1,CANTOP
      JJ=MOD(JJ,CANTOP)+1
      IF(CANSIZ(2,JJ).EQ.J)GOTO 7060
      IF(CANSIZ(1,JJ).NE.0)GOTO 7050
      CANSIZ(1,JJ)=INP(8)
      CANSIZ(2,JJ)=J
      RETURN
 7050 CONTINUE
      RETURN
 7060 CANSIZ(1,JJ)=INP(8)+CANSIZ(1,JJ)
      RETURN
      END
