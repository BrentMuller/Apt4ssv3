**** SOURCE FILE : M0006657.V06   ***
*
C
C              FORTRAN SUBROUTINE MOTION
C
C LINKAGE       SUBROUTINE MOTION
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    CALLZZ          SUBROUTINE    PRO026
C          SUBROUTINE    BCDBIN
C          SUBROUTINE    MACLBL
C          SUBROUTINE    MCXTRN
C          INTEGER FCT.  MODE
C          INTEGER FCT.  NAME
C          SUBROUTINE    ONEARG
C          SUBROUTINE    OPCODE
C          SUBROUTINE    ARGCVT
C          SUBROUTINE    RLSLIN
C          SUBROUTINE    TWOARG
C          SUBROUTINE    ALARM
C
       SUBROUTINE MOTION
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE 'NAMETB.INC'
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(300),ARGSTK(99)
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY
      EQUIVALENCE (ARGTOP,STKLST(2))
C ARGSTK:      ARGUMENT STACK
      EQUIVALENCE (ARGSTK(1),STKLST(202))
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),TEMP(2),PERMID(2),LABEL(2),IMPLAB(2),VBL(2)
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '
      EQUIVALENCE (TEMP(1),CODE(33))
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'
      EQUIVALENCE (PERMID(1),CODE(39))
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '
      EQUIVALENCE (LABEL(1),CODE(43))
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'
      EQUIVALENCE (IMPLAB(1),CODE(45))
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '
      EQUIVALENCE (VBL(1),CODE(61))
C
C        8.    NAME TABLE POINTERS TO BCD LITERALS
C
      COMMON/BCDPTR/BCDPTR
      DIMENSION BCDPTR(7)
C DOTAC:       NAMTBL POINTER TO ALPHAMERIC LITERAL '.AC.'
      EQUIVALENCE (DOTAC,BCDPTR(1))
C FEDRAT:      NAMTBL POINTER TO ALPHAMERIC LITERAL 'FEDRAT'
      EQUIVALENCE (FEDRAT,BCDPTR(2))
C TO:          NAMTBL POINTER TO ALPHAMERIC LITERAL 'TO'
      EQUIVALENCE (TO,BCDPTR(3))
C
C        9.    NAME TABLE POINTERS TO NUMBERS
C
      COMMON/NUMPTR/NUMPTR
      DIMENSION NUMPTR(12)
C ONEPT:       NAMTBL POINTER TO '1.    '
      EQUIVALENCE (ONEPT,NUMPTR(4))
C
C       16.    LITERALS FOR I. L. OPERATION CODES
C
      COMMON/IL/IL
      DIMENSION IL(21)
C VBLJMP:      CONTAINS COMMAND CODE (20) FOR VBLJMP COMMAND
      EQUIVALENCE (VBLJMP,IL(20))
C
C       17.    MODE CODES
C
      COMMON/MODX/MODX
      DIMENSION MODX(32)
C REAL:        MODE CODE (24) FOR A SCALAR
      EQUIVALENCE (REAL,MODX(21))
C
C       22.    MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      DIMENSION MACXX1(71)
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED
      EQUIVALENCE (WHCHMN,MACXX1(63))
C
C       27.    OPERAND MODIFIERS
C
      COMMON/OPMOD/OPMOD
      DIMENSION OPMOD(6)
C DBLDLR:      CONTAINS OPERAND TYPE CODE 2
      EQUIVALENCE (DBLDLR,OPMOD(3))
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5
      EQUIVALENCE (QUIDLR,OPMOD(6))
C
C       28.    OPERAND MODIFIERS
C
      COMMON/SUBLST/SUBLST
      DIMENSION SUBLST(136)
C APT200:      NAMTBL POINTER FOR APT200
      EQUIVALENCE (APT200,SUBLST(127))
C APT201:      NAMTBL POINTER FOR APT201
      EQUIVALENCE (APT201,SUBLST(128))
C APT299:      NAMTBL POINTER FOR APT299
      EQUIVALENCE (APT299,SUBLST(131))
C ERROR:       NAMTBL POINTER TO EXECUTION SUBROUTINE ERROR
      EQUIVALENCE (ERROR,SUBLST(132))
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C MODHLF:      NORMAL MODE CODE LIMIT 500
      EQUIVALENCE (MODHLF,MODULI(2))
C
C       31.    COMMON BLOCK FOR PRO026 AND MOTION
C
      COMMON/COMP26/COMP26
      LOGICAL FEDSAV,FMTERR,MCSJMP,JMPING
      DIMENSION COMP26(16),TAGTBL(3)
C INTOF:       DESIRED DS AND CS INTERSECTION IN MULTIPLE INTERS. CASE
      EQUIVALENCE (INTOF,COMP26(1))
C ARGCNT:      POINTER FOR CURRENT ARGSTK ELEMENT
      EQUIVALENCE (ARGCNT,COMP26(2))
C CSPNTR:      CONTAINS NAMTBL POINTER TO CS
      EQUIVALENCE (CSPNTR,COMP26(3))
C JMPCS:       TAGTBL POINTER
      EQUIVALENCE (JMPCS,COMP26(4))
C NUMBCS:      NUMBER OF CHECK SURFACES
      EQUIVALENCE (NUMBCS,COMP26(5))
C TEST:        NAMTBL INDEX OF CURRENT ARGUMENT
      EQUIVALENCE (TEST,COMP26(6))
C TEST1:       CLASS OF CURRENT ARGUMENT
      EQUIVALENCE (TEST1,COMP26(7))
C FEDSAV:      INDICATES FINAL ARGUMENT MAY BE A FEEDRATE SPECIFICATION
      EQUIVALENCE (FEDSAV,COMP26(8))
C FMTERR:      ERROR FLAG FOR CERTAIN MOTION STATEMENTS
      EQUIVALENCE (FMTERR,COMP26(9))
C MCSJMP:      MULTIBLE CHECK SUBTRACT INDICATOR
      EQUIVALENCE (MCSJMP,COMP26(10))
C JMPING:      INDICATES LABEL POINTER ADDED TO TAGTBL
      EQUIVALENCE (JMPING,COMP26(11))
C K:           NAMTBL POINTER TO MAJOR WORD
      EQUIVALENCE (K,COMP26(12))
C LERR:        ERROR TYPE INDICATOR
      EQUIVALENCE (LERR,COMP26(13))
C TAGTBL:      NAMTBL POINTERS TO LABELS USED AT MULTIBLE CHECK SURFACE
      EQUIVALENCE (TAGTBL(1),COMP26(14))
C
C       41.    NUMBER TABLE OVERFLOW VARIABLES
C
      COMMON/NTBL/NTBL
      DIMENSION NTBL(6)
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE
      EQUIVALENCE (NLAST,NTBL(4))
C
      CHARACTER*6 ITANTO
      DATA ITANTO/'TANTO '/
      external alarm
C**
C...     GOFWD, GOBACK, GOUP, GODOWN, GOLFT, OR GORGT / ......
C...     INITIALISE CHECK SURFACE COUNT.
C
 1901 NUMBCS=0
C
C...     INITIALIZE MULTIPLE CHECK SURFACE EXISTENCE FLAG.
C
      MCSJMP = .FALSE.
      FMTERR = .FALSE.
      INTOF=0
      LERR=0
      IF (MODE (ARGSTK (1) ) .NE. REAL)  GO TO 13
      TEST = ARGSTK (1)
      IF (TEST .LE. NAMMAX)  GO TO 11
C...  MAY BE A FEDRAT SPECIFICATION
      TEST = ARGSTK (2)
      IF(TEST.GT.NAMMAX)GO TO 11
      I=NAMTBL(TEST)/MODULO
      IF(((I.NE.(VBL(1)/MODULO)).AND.
     / (I.NE.(TEMP(1)/MODULO))))GO TO 11
C...  RESERVE JUDGEMENT
      FEDSAV = .TRUE.
      ARGCNT = 2
      JMPCS=1
      GO TO 16
C...  NO FEDRAT SPECIFICATION IN THIS STATEMENT
   13 ARGCNT = 1
      GO TO 15
C...  FEDRAT SPECIFICATION
   11 ARGCNT = 2
   14 CALL CALLZZ (APT299)
      CALL TWOARG (QUIDLR,1)
      CALL TWOARG (DBLDLR,FEDRAT)
      CALL TWOARG (QUIDLR,1)
      CALL ARGCVT(ARGSTK(1))
      CALL RLSLIN
   15 FEDSAV=.FALSE.
      JMPCS=1
   16 IF(ARGTOP-ARGCNT)17,18,68
   17 CALL ALARM(2020,-ARGTOP,8,'MOTION  ')
      LERR = -1
      GO TO 900
   18 IF(.NOT.FEDSAV) GO TO 19
      IF(NUMBCS.LE.1) GO TO 14
C...  TWO OR MORE CHECK SURFACES HAVE BEEN COUNTED
      TAGTBL(1)=ARGSTK(1)
      JMPCS=1
C...  CHECK MODE OF DRIVE SURFACE FOR ACCEPTABILITY
   19 TEST=MODE(ARGSTK(ARGCNT))
      ERRPT=-ARGCNT
      IF((TEST.LT.1 .OR. TEST.GT.17) .AND.
     1   (TEST.LT.29 .OR. TEST.GT.30)) GO TO 17
C...  RELEASE DRIVE SURFACE CALL TO ARELEM STACK
   20 CALL CALLZZ(APT201)
      CALL ARGCVT (ARGSTK(ARGTOP))
      CALL ARGCVT(K)
      IF(MCSJMP) GO TO 21
  900 RETURN
C...  THE JUMP TABLE (TAGTBL) MUST BE DUMPED FOR PROPER RETURN
   21 CALL RLSLIN
   23 CALL OPCODE(VBLJMP)
      CALL ARGCVT(DOTAC)
      DO 24    I=1,NUMBCS
      TEST=TAGTBL(JMPCS)
 6003 IF(TEST.GT.NAMMAX)GO TO 6005
      IF(WHCHMN.NE.0)GO TO 6002
      GO TO 6006
C     DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB
 6005 TEST=TEST-NAMMAX
      IF(NLAST.GT.0)CALL MCXTRN(5,TEST,IDUMMY)
      CALL BCDBIN(CNUMTB(TEST),KK,ICOUNT)
      TEST=KK+10000
 6002 CALL MACLBL(TEST,-WHCHMN,TEST)
      IF(NAMTBL(TEST).EQ.0)NAMTBL(TEST)=IMPLAB(1)+WHCHMN
 6006 CALL ONEARG(TEST)
      JMPCS=JMPCS+1
   24 CONTINUE
      GO TO 900
C...  EVALUATE CHECK SURFACE EXPRESSSION
C     IS THE LAST ITEM A SURFACE NAME
   68 TEST = MODE(ARGSTK(ARGCNT))
      IF((TEST.LT.1 .OR. TEST.GT.17) .AND.
     1   (TEST.LT.29 .OR. TEST.GT.30)) GO TO 78
C...  THE LAST ITEM IS THE NAME OF A SURFACE
      CSPNTR=ARGSTK(ARGCNT)
C...  ADVANCE ARGUMENT STACK POINTER
   50 ARGCNT=ARGCNT+1
C...  COMPUTE NAMTBL INDEX OF NEXT ITEM
   69 TEST=ARGSTK(ARGCNT)
C...  WHAT ARE THE MODIFIERS FOR THIS CHACK SURFACE
C     IS THE NEXT ITEM A PERMANENT IDENTIFIER
      IF(TEST.GT.NAMMAX)GO TO 71
      IF(NAMTBL(TEST)/MODULO.NE.PERMID(1)/MODULO)GO TO 71
C...  YES, IS IT DEFINED FOR THIS FORMAT
      L = NAMTBL(TEST) - PERMID(1)
      IF(L.GE.MODHLF)L=L-MODHLF
      IF(L.EQ.6)GO TO 73
      IF(L.EQ.3.OR.L.EQ.4.OR.L.EQ.147) GO TO 6004
C...  NO MATCH FOR THIS ITEM IN DEFINED LIST
C     SET CHECK SURFACE MODIFIER FOR TO STOPPING POSSITION
   71 TEST=0
      GO TO 74
C...  TEST FOR MULTIPLE CHECK SURFACE TAG, SINCE LAST ITM IS NOT SFC
   78 TEST=ARGSTK(ARGCNT)
C...  IS IT A NUMBER
C...  IF IT IS DO NOT CHANGE MODE
      IF (TEST.GT.NAMMAX) GOTO 81
      TEST1 = MODULO*(NAMTBL(TEST)/MODULO)
C...  IS THE LAST ITEM A LABEL OR IMPLIED LABEL
      IF((TEST1.EQ.LABEL(1)).OR.(TEST1.EQ.IMPLAB(1))) GO TO 81
C...  IS IT A PERMANENT IDENTIFIER
      IF(TEST1.EQ.PERMID(1)) GO TO 80
C)..  FORMAT IS NOT-SFC,ID OR SFC.
      CALL ALARM(2022,-ARGCNT,8,'MOTION  ')
      FMTERR =.TRUE.
C...  IGNORE THE UNACCEPTABLE ITEM
      GO TO 50
C...  CHANGE THE MODE ASSIGNMENT
   80 IF(JMPING)GO TO 88
      NAMTBL(TEST)=IMPLAB(1)
C...  ITEM QUALIFIES AS A LABEL OF SOME KIND
C     COMPUTE JMPTBL INDEX,ALLOWING FOR FEDSAV ACTION
   81 I=NUMBCS+JMPCS
      IF(I.GT.3)CALL ALARM(14,-ARGCNT,4,'MOTION  ')
C...  VERIFY WE CAN WRITE INTO TAG TABLE FOR THIS CHECK SURFACE
      IF(JMPING) GO TO 88
      TAGTBL(I)=TEST
      MCSJMP=.TRUE.
C...  INDICATE TAG ADDED TO TAGTBL
      JMPING=.TRUE.
      ARGCNT=ARGCNT+1
C...  GO BACK TO FIND THE ASSOCIATED CHECK SURFACE
      GO TO 68
C...  PERMID DEFINED FOR THIS FORMAT, IS IT INTOF
C...  NO, PICK UP MODIFIER AS HMOD
 6004 ARGCNT=ARGCNT+1
C...  HAVE WE PASSED THROUGH WITHOUT ERROR
   74 IF(FMTERR) GO TO 75
C...  YES, FORMAT SEEMS OK
      NUMBCS=NUMBCS+1
C...  SET UP INTERMEDIATE LANGUAGE CALL FOR THIS CHECK SURFACE
      CALL CALLZZ(APT200)
      IF(TEST)6007,6007,6008
 6007 I=TO
      GO TO 6016
 6008 IF(L.NE.147) GO TO 6015
      I=NAME(ITANTO)
 6016 CALL TWOARG(DBLDLR,I)
      GO TO 6009
 6015 CALL ARGCVT(TEST)
 6009 CALL ARGCVT(CSPNTR)
      IF(INTOF)6010,6010,6011
 6010 CALL ARGCVT(ONEPT)
      GO TO 77
 6011 CALL ARGCVT(INTOF)
C...  RESTORE NORMAL SEETTING FOR INTOF
   77 INTOF=0
C...  ENTER IN ARELEM STACK
      CALL RLSLIN
C...  SHOW TAG MATCHED WITH CHECK SURFACE
      JMPING=.FALSE.
C,..  CHECK TO SEE IF THERE ARE ANY MORE CHECK SURFACES
      GO TO 16
   88 CALL ALARM(2023,1-ARGCNT,8,'MOTION  ')
      LERR=-1
      JMPING=.FALSE.
      GO TO 900
C...  A FORMAT ERROR WAS DETECTED, REQUIRING ARELEM RESTART.
   75 FMTERR=.FALSE.
      CALL CALLZZ(ERROR)
      CALL TWOARG(QUIDLR,83)
      GO TO 77
C...  INTOF MODIFIER DETECTED
   73 TEST=ARGSTK(ARGCNT+1)
      IF (MODE(TEST).NE.REAL) GOTO 76
C...  SPECIFICATION NOT A NUMBER OR SCALAR
   85 INTOF=TEST
      ARGCNT=ARGCNT+2
C...  CHECK FOR OTHER MODIFIERS
      GO TO 69
C...  ERROR IN INTOF FORMAT, WARNING ONLY
   76 CALL ALARM(2024,-ARGCNT-1,4,'MOTION  ')
C...  FMTERR WOULD BE SET HERE IF ARELEM RESTART WERE DESIRED.
      GO TO 50
       END
