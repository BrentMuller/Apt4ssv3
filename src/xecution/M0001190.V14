*
C.....FORTRAN ROUTINE              ..INIT..    HL GRAY 3/68, 8/68
      SUBROUTINE  INIT
C--------------------------------------------------------------CDE PAK
C UNLABELED COMMON
C
      INCLUDE (BLANKCOM)
      INCLUDE (INTRPEQ)
C NAME TABLE
      INCLUDE (NAMETB)
C SYSTEM DEPENDENT PARAMETERS
      INCLUDE (SDP)
C
C STOR--COMMON CONTAINING STORAGE PARAMETERS
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN,  CFB,  NBLK
      INTEGER       NTB,      FPB,      PPB,      COMN,  CFB,  NBLK
C
C   ADDITIONAL STOR PARAMETERS USED FOR NUMBER TABLE DIRECT ACCESS
C
      COMMON/STOR/  NRECRD,  NTPARM
      DIMENSION     NRECRD(10), NTPARM(10)
      EQUIVALENCE   (NTPARM(1),NUMST), (NTPARM(2),NUMOD ),
     X              (NTPARM(3),NDAFLG), (NTPARM(4),NRECST),
     X              (NTPARM(5),IPAGE )
C
C WORK--COMMON CONTAINING WORKING VARIABLES
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC
      INTEGER       PGC,      PGCN,     ILC,      IXC
C
      COMMON/WORK/  SCP,      SAP,      NSP,      IAP,   CFP,   COMP
      INTEGER       SCP,      SAP,      NSP,      IAP,   CFP,   COMP
C CONST--COMMON CONTAINING CONSTANTS
C
      COMMON/CONST/KCOMT,KCOMF,CILPRT,KCBN
      LOGICAL CILPRT
C
      INCLUDE (TOTAL)
      INCLUDE (LDEF)
C               SYSTEM I/O FILE NAMES
      INCLUDE (SYMFIL)
C
      DIMENSION IN(23)
      EQUIVALENCE (IN(2),SCN),(IN(3),SAN),(IN(4),NSN)
     1           ,(IN(5),IAN),(IN(6),COMS),(IN(12),LPG)
     2           ,(IN(13),FPN),(IN(14),NTN),(IN(15),PPPG)
     3           ,(IN(16),MTPG),(IN(18),LOGCAL)
     4           ,(IN(22),MAXSZ1),(IN(23),MAXSZ2)
      LOGICAL LOGCAL
C
      INCLUDE (DARRAY)
C
C---     MAXLDA CONTAINS THE MAXIMUM SPACE AVAILABLE FOR LDA'S
      COMMON/MAXLDA/MAXLDA
C---------------------------------------------------------------------
C
      INTEGER  SCN,SAN,NSN,LPG,PPPG,MTPG,IAN,FPN,NTN,COMS,K
      DOUBLE PRECISION ZERO
      CHARACTER*8 BLANK
      INTEGER BCDF
      DATA ZERO/0.D0/,KPGN/256/,BLANK/'        '/
C
C---     COMN REFLECTS THE TOTAL SPACE AVAILABLE IN BLANK COMMON (COM)
C---     IF DIMENSION OF COM IS CHANGED, THEN VALUE OF COMN IS CHANGED
C---     HERE AUTOMATICALLY
      COMN=COMSIZ
      IRISK=1
C---      IF IRISK IS 1, THEN SYSTEM WILL NOT TERMINATE FOR
C---      LACK OF SPACE BUT WILL PROCEED AT RISK
C     ---------
      COM(1) = ZERO
      NR=0
      CALL AREAD (ELFIL4,NR,IN,23,IR)
      CILPRT = LOGCAL
      NUMST = IN(19)
      NDAFLG = IN(20)
      NRECST = IN(21)
C
C---     PRELIMINARY CALCULATION TO SET ASIDE SPACE FOR LARGE DDATA
C---     FIXED ALLOCATIONS ARE MADE FOR ARELEM PART,DRIVE AND
C---     AND CHECK SURFACES,TEMPORARY MATRIX, NAME TABLE
C---     AND NUMBER TABLE
      NCFB=KCOMF+NTN+KCOMT+FPN
C---     MINIMUM SPACE FOR CANON DATA AND PART PROGRAM DATA
      MCANPG=SCN+SAN+NSN+IAN
      KK1=9*KCBN
      KK2=(KPGN/4)*4+1
      IF(MCANPG.GT.KK1) MCANPG=KK1+KK2
      IF(MCANPG.LE.KK1) MCANPG=MCANPG+KK2
C
C---      FIRST ATTEMPT, SPACE FOR THE LARGEST PLUS NEXT LARGEST
C---      ALLOCATE SPACE (COMS) FOR LARGE DATA ARRAYS
      COMS=MAXSZ1+MAXSZ2+90
      ISURP=COMN-COMS-MCANPG-NCFB
      IF(ISURP.LT.0) GO TO 5
      COMS=COMS+ISURP/2
      GO TO 6
    5 CONTINUE
C---      TRY SPACE FOR ONLY ONE LDA IN MEMORY
      COMS=COMS-MAXSZ2
      ISURP=ISURP+MAXSZ2
C---      QUIT NOW IF THERE IS NOT SPACE FOR EVEN ONE LDA.
      IF(ISURP.LT.0.AND.IRISK.EQ.0) GO TO 80
C------ALTERNATE CODE TO CONTINUE AT RISK
      COMS=COMN-MCANPG-NCFB
      IF(COMS.LT.0) GO TO 80
      CALL CFORM(' PREDICTED LDA SIZE TOO LARGE, PROCEED AT RISK',
     X  DARRAY,1,46)
      CALL CPRINT(DARRAY)
      CALL BAD(1,0,'COMN',COMN)
      CALL BAD(1,0,'COMS',COMS)
      CALL BAD(1,0,'MXS1',MAXSZ1)
      CALL BAD(-1,0,'MXS2',MAXSZ2)
C---      NOW COMS IS THE TOTAL SPACE FOR LARGE DATA.
    6 CONTINUE
      MAXLDA=COMS
      J0 = IN(17)
      JN = NTN
      NR=0
C---     READ IN THE NAME TABLE ENTRIES
      CALL CHREAD (ELFIL4,NR,CNAMTB(J0),JN,IR)
C
C... LOAD BCD EQUIVALENT OF CNAMTB ENTRIES IN NT
C
      J1=KCOMF+KCOMT+COMS+1
      J2=J0+NTN-1
      DO 8 J=J0,J2
        NT(1,J1)=BCDF(CNAMTB(J)(1:IWRD))
        NT(2,J1)=BCDF(CNAMTB(J)(IWRD+1:)//BLANK)
        J1=J1+1
   8  CONTINUE
C
C---     PRINT OUT THE COMPLETE NAME TABLE IF COMPRESSED PRINT IS ON
      IF(.NOT.CILPRT) GO TO 50
      CALL CFORM('0 LIST OF ALPHANUMERIC NAME TABLE ENTRIES',
     X    DARRAY,1,41)
      CALL CPRINT(DARRAY)
      KLL=IN(17)-1
      JCOL=2
      JTOP=J0+NTN-1
      DO 60 LL=J0,JTOP
      KLL=KLL+1
      IF(CNAMTB(LL).EQ.BLANK) GO TO 60
      CALL ICONV(KLL,DARRAY,JCOL,4)
      JCOL=JCOL+5
      CALL CFORM(CNAMTB(LL),DARRAY,JCOL,6)
      JCOL=JCOL+9
      IF(JCOL+14.LE.120) GO TO 60
      CALL CPRINT(DARRAY)
      JCOL=2
   60 CONTINUE
      CALL CPRINT(DARRAY)
   50 CONTINUE
C
      K0 = J1
      J0 = J1 - NTN
C
C        IF NDAFLG IS NOT ZERO THEN DIRECT ACCESS IS USED TO STORE
C        NUMBER TABLE VALUES. ONLY FIXED NUMBERS ARE PASSED ON ELFIL4.
      IF (NDAFLG .EQ. 0) GO TO 1003
      NUMOD = FPN-NUMST
      KN=(FPN-NUMOD)
      GO TO 1004
C
 1003 KN=FPN
 1004 NR = 0
      IF(J0+NTN+KN.GT.COMN) GO TO 80
      CALL FREAD(ELFIL4,NR,FP(K0),KN,IR,3)
      CALL TAPOP (ELFIL4,-1)
C
      NTB = J0-IN(17)
      FPB = NTB
      COMP = KCOMF + 1
      SCP = K0 + FPN
      CFB = SCP
      SAP= SCP+ SCN
      NSP = SAP+ SAN
      IAP = NSP + NSN
      PPB = (IAP + IAN)*2 - 1
      KCOMT = KCOMF + COMS + 1
C
      IF(.NOT.CILPRT) GOTO 90
C PRINT  INTERPRETER PARAMETERS
      CALL CFORM('1   EXECUTION PHASE ',DARRAY,1,20)
      CALL CPRINT (DARRAY)
      CALL CFORM('ENTR=INIT TABLES',DARRAY,4,16)
      CALL CPRINT(DARRAY)
      CALL BAD(-23,0,'IN  ',IN)
      CALL BAD(1,0,'KCMF',KCOMF)
      CALL BAD(1,0,'COMS',COMS)
      CALL BAD(1,0,'MXS1',MAXSZ1)
      CALL BAD(1,0,'MXS2',MAXSZ2)
      CALL BAD(-1,0,'KCMT',KCOMT)
      CALL BAD(1,0,'NTN ',NTN)
      CALL BAD(1,0,'FPN ',FPN)
      CALL BAD(1,0,'KCBN',KCBN)
      CALL BAD(1,0,'KPGN',KPGN)
      CALL BAD(-1,0,'COMN',COMN)
C        CAN ALL CANNONICAL FORMS PLUS 4 PAGES OF I.L. FIT IN CORE
   90 IF((PPB+4*KPGN-1).LE.2*COMN) GOTO 20
C        NO, STORE CANNONICAL FORMS ON EXTERNAL FILE.
      CANFLG = .TRUE.
C        AT LEAST 9 BLOCKS OF CANNON & 4 PAGES OF I.L. MUST FIT IN CORE
      I = COMN-CFB-9*KCBN-4*KPGN/2+1
      IF(I.GE.0) GOTO 10
C
C---     TERMINATE EXECUTION PHASE FOR LACK OF SPACE
   80 CONTINUE
      CALL CFORM('029002 LARGEST CANONICAL FORM IS TOO LARGE',
     1      DARRAY,1,42)
      CALL CPRINT(DARRAY)
      CALL CFORM('0TABLE SIZES FROM TRANSLATOR',DARRAY,1,28)
      CALL CPRINT(DARRAY)
      CALL BAD(23,0,'IN  ',IN)
      CALL BAD(-1,0,' ',0)
C
      KKMIN=NCFB+MCANPG+MAXSZ1+40
      KKREC=KKMIN+MAXSZ2
      CALL CFORM('0SPACE NOW ALLOCATED ',DARRAY,1,21)
      CALL ICONV(COMN,DARRAY,25,5)
      CALL CPRINT(DARRAY)
      CALL CFORM('0MIN SPACE RQD',DARRAY,1,14)
      CALL ICONV(KKMIN,DARRAY,22,5)
      CALL CFORM('RECOMMENDED SPACE IS',DARRAY,35,20)
      CALL ICONV(KKREC,DARRAY,57,5)
      CALL CPRINT(DARRAY)
C
      CALL HELP
C
C        DIVIDE SPACE LEFT - A BLOCK OF CANNON FOR EACH PAGE OF I.L.
   10 NBLK = I/(KCBN+KPGN/2)+9
C        ADJUST POINTERS
      PPB = (CFB+NBLK*KCBN)*2-1
C        DETERMINE NUMBER OF ADDITIONAL WORDS REQUIRED FOR EACH TYPE OF
C        CANNONICAL FORM.
      ISCN = (SCN/KCBN+1)*2
      ISAN = (SAN/KCBN+1)*2
      INSN = (NSN/KCBN+1)*11
      SAP = SCP+((SCN+ISCN)/KCBN+1)*KCBN
      NSP = SAP+((SAN+ISAN)/KCBN+1)*KCBN
      IAP = NSP+((NSN+INSN)/KCBN+1)*KCBN
C
      IF(.NOT.CILPRT) GOTO 20
      CALL CFORM(' XCANON IN EFFECT ',DARRAY,1,17)
      CALL CPRINT(DARRAY)
   20 RETURN
      END
