*
      SUBROUTINE PARAL(VECA,DIST,VECB,AVDIST,NSPL,NPTS,IPARA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION VECA(*),DIST(*),VECB(*),AVDIST(*)
C---      PURPOSE OF PARAL IS TO DETERMINE LENGTHS OF TANGENT
C---      VECTORS IN ONE PARAMETRIC DIRECTION ACROSS A MESH SURFACE
C---      VECA IS THE ARRAY OF UNITIZED INPUT TANGENTS AND
C---      ON OUTPUT IS THE ENTERING VECTOR FOR A PATCH AT EACH POINT
C---      DIST IS THE ARRAY OF POLYGONAL DISTANCES BETWEEN POINTS
C---      VECB IS AN OUTPUT ARRAY OF EXITING VECTORS FOR EACH PAOINT
C---      AVDIST IS AN INPUT ARRAY USED TO TEMPORARILY HOLD THE
C---      AVERAGE WIDTH OF CHORDAL BANDS ACROSS THE SURFACE
C---      NSPL IS THE TOTAL NUMBER OF SPLINE CURVES AND
C---      NPTS IS THE NUMBER OF POINTS PER SPLINE(BOTH INPUT)
C---      IPARA IS SET TO 1 IF ROUGHLY PARALLEL CHORDAL BANDS
C---      ARE DETECTED ACROSS THE SURFACE, AND 0 OTHERWISE
C---      IPARA IS SET TO 1 ON OUTPUT.
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC
C
C---      NUMBER OF CHORDS PER SPLINE
      NSEG=NPTS-1
      ANSPL=NSPL
C---      CHECK FOR ROUGH EQUALITY OF CHORDS ACROSS SURFACE
      DO 10 JSEG=1,NSEG
C---      COMPUTE THE AVERAGE BAND WIDTH OF THE JTH CHORDS.
      SUM=0.0
      DO 20 ISPL=1,NSPL
      JJ=NSEG*(ISPL-1)+JSEG
      SUM=SUM+DIST(JJ)
   20 CONTINUE
C---      AVERAGE BANDWIDTH
      AVDIST(JSEG)=SUM/ANSPL
C---      IF IPARA IS 1 ON INPUT, THEN ASSUME PARALLELISM
      IF(IPARA.EQ.1) GO TO 10
C
C---      SET TOLERANCE FOR EQUALITY OF CHORDS
      BOT=AVDIST(JSEG)*0.95
      TOP=AVDIST(JSEG)*1.06
C---      CHECK ALL CHORDS IN THIS BAND.
      DO 30 ISPL=1,NSPL
      JJ=NSEG*(ISPL-1)+JSEG
      IF(BOT.LE.DIST(JJ).AND.DIST(JJ).LE.TOP) GO TO 30
C---      PARALLELISM CHECK FAILED
      IPARA=0
      GO TO 90
   30 CONTINUE
C
   10 CONTINUE
C
C---      SURFACE WILL BE TREATED AS PARALLEL.
      IPARA=1
   90 CONTINUE
C---      IF SURFACE HAS ONLY A SINGLE CROSS BAND, USE NON-PARALLEL
      IF(NSEG.LE.1) IPARA=0
C
C---      SECOND PHASE, ASSIGN LENGTHS TO INCOMING AND OUTGOING
C---      VECTORS AT EACH POINT
C
      DO 100 ISPL=1,NSPL
      DO 100 IPT=1,NPTS
      IVEC=(IPT-1+(ISPL-1)*NPTS)*3
C---      A SEPARATE POINTER IS SET UP FOR THE ARRAY OF
C---      EXITING VECTORS VECB. THIS ARRAY IS OF DIMENSION
C---      NSEG X NSPL COMPARED WITH NPTS X NSPL FOR VECA AND
C---      POINTERS FOR VECB ARE SET UP SO THAT THE FIRST ENTRY
C---      IS OVERWRITTEN IN NPT PASSES THRU THIS LOOP
      IPTB=MAX0(IPT-1,1)
      IVECB=((IPTB-1)+(ISPL-1)*NSEG)*3
C---      COMPUTE REFERENCE CHORD FOR VECTOR LENGTHS
      J1=MAX0(IPT-1,1)
      J2=MIN0(IPT,NSEG)
C
      IF(IPARA.EQ.1) GO TO 110
C---      SHARED VECTOR CASE
      J1=J1+(ISPL-1)*NSEG
      J2=J2+(ISPL-1)*NSEG
C---      CHOOSE THE MINIMUM OF THE TWO SURROUNDING CHORDS
      ALEN1=DIST(J1)
      IF(ALEN1.GT.DIST(J2)) ALEN1=DIST(J2)
      ALEN2=ALEN1
      GO TO 120
C---      PARALLEL CASE, CHOOSE SEPARATE LENGTHS
  110 CONTINUE
      ALEN1=AVDIST(J2)
      ALEN2=AVDIST(J1)
  120 CONTINUE
C---      VECB IS SET TO THE LENGTH OF THE EXITING VECTOR
      DO 130 K=1,3
      KVEC=IVEC+K
      KVECB=IVECB+K
      VECB(KVECB)=ALEN2*VECA(KVEC)
      VECA(KVEC)=ALEN1*VECA(KVEC)
  130 CONTINUE
C
  100 CONTINUE
C
C---      END OF LOOP, CHANGE IPARA TO 1
      IF(IBUG.EQ.11) CALL BAD(-1,0,'IPAR',IPARA)
      IPARA=1
C---      CLEAN UP AVDIST ARRAY
      DO 200 I=1,NSEG
  200 AVDIST(I)=0.0
C
  999 CONTINUE
      RETURN
      END
