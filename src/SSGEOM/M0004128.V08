*
      SUBROUTINE  SSPICT(SS,SSNAME,ISPRNT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C------ THIS ROUTINE GENERATES A VERIFICATION LISTING REPORT FOR A
C------ SCULPTURED SURFACE CANONICAL ARRAY
C------ IN ADDITION THE ROUTINE CONDUCTS AVERAGING FOR PNTSON CASE
C
      CHARACTER*8 BLANK
      CHARACTER*4 NA(8,2),NB(8,2),NC(8)
C
      DIMENSION SS(*),B(64),SV(32),U(9),V(9),IFLAG(4),ITOP(6,4)
      DIMENSION UZ(4),VZ(4),SNM(3)
      DIMENSION IA(8),IB(8),PZ(3,2)
      DIMENSION PARE(9)
      CHARACTER*24 SSHD(9)
      CHARACTER*16 SSNAME
C------ SETUP VARIABLES TO SAVE MESH POINTS DURING DEFINITION
C---     NSCNMX IS THE MAXIMUM SPACE AVAILABLE IN SCAN
C---     ISCAN IS THE LAST USED LOCATION IN SCAN
C---     SCAN IS A SCRATCH PAD WORK AREA FOR SS CALCULATIONS
      INCLUDE (SSPAD)
C---     ARRAY IISCAN IS USED  TO STORE INTEGERS IN SCAN
      DIMENSION IISCAN(2*ISCN)
      EQUIVALENCE (IISCAN(1),SCAN(1))
C---     ASSUMPTION ONE INTEGER IS ONE HALF THE LENGTH OF A REAL.
C
      DIMENSION PT(3,4),SNT(3,4)
      DIMENSION LOC(4),MP(4),MS(4),IAR(12)
      CHARACTER*120 DARRAY,HEADR1,HEADR2,HEADR3,
     C HEADR4,HEADR5
      CHARACTER*3 IB1234(4)
      DATA IB1234/'B1=','B2=','B3=','B4='/
      DATA HEADR1   /   ' PT=SURFACE POINT,TN=FIRST(SPLINE) DIRECTION,CS
     C =SECOND(CROSS SPLINE) DIRECTION, NR=SURFACE NORMAL
     C       '/
      DATA HEADR2   /   ' EACH PATCH HAS FOUR CORNERS PT00,PT10,PT01,PT1
     C1. BOUNDARY B1=PT00-PT10, B2=PT00-PT01, B3=PT10-PT11, B4=PT01-PT11
     C       '/
      DATA HEADR3   /   ' NR50,NR05, ETC REPRESENT SURFACE NORMALS AT IN
     CTERIM PTS. NR05 REPRESENTS A NORMAL AT U=0,V=0.5 MIDWAY BETWEEN PT
     C00-PT01'/
      DATA HEADR4   /   ' POSITIVE RADII AND CURVATURES ARE CUPPED IN TH
     CE DIRECTION OF THE SURFACE NORMALS NRI,NRJ,NRK
     C       '/
      DATA HEADR5    /   ' PATCH     X        Y        Z        W
     C         X        Y        Z        W              NRI     NRJ
     C NRK    '/
C
      DATA SSHD/
     X   'VALUE TABLE SIZE        ',
     X   'TOPOLOGY TABLE SIZE     ',
     X   'NUMBER OF PATCHES       ',
     X   'SURFACE TYPE(MESH=2)    ',
     X   'PNTVEC,POLYGN,PNTSON    ',
     X   'SIGN OF NORMAL(TN X CR) ',
     X   'TOTAL SIZE OF SURF      ',
     X   'NUMBER OF SPLINES       ',
     X   'NUMBER OF CROSS SPLINES '/
      DATA NA/'PT00','PT10','TN00','TN10','CR00','CR10','TW00','TW10',
     X        'PT00','PT50','PT10','PT01','PT51','PT11','PT05','PT15'/
      DATA NB/'PT01','PT11','TN01','TN11','CR01','CR11','TW01','TW11',
     X        'CR00','CR50','CR10','CR01','CR51','CR11','CR05','CR15'/
      DATA NC/'NR00','NR50','NR10','NR01','NR51','NR11','NR05','NR15'/
      DATA UZ,VZ/0.0D0,1.0D0,0.0D0,1.0D0,0.0D0,0.0D0,1.0D0,1.0D0/
      DATA U/0.0D0,0.5D0,1.0D0,0.0D0,0.5D0,1.0D0,0.0D0,1.0D0,0.5D0/
      DATA V/3*0.0D0,3*1.0D0,3*0.5D0/
      DATA IA/1,2,3,4,9,10,11,12/
      DATA IB/5,6,7,8,13,14,15,16/
      DATA IAR/3,9,4,10,7,13,8,14,11,12,15,16/
      DATA LOC/1,3,4,6/
      DATA ZERO,SMAL1/0.0D0,1.0D-11/
      DATA BLANK/'        '/
C
      NTOT=SS(4)
      NP=SS(10)
      NS=SS(9)
      NMESH=SS(5)
      NTYP=SS(6)
      CMAX=-1.0D+5
      CMIN=1.0D+5
      IF(NMESH.NE.2) SS(9)=0.0
      IF(NMESH.NE.2) SS(10)=0.0
C------ AT THIS POINT PATCH AVERAGING IS DONE FOR THE
C------ POINTS ON CASE
C---     COMPUTE LOCATIONS FOR DATA STORAGE IN SCAN
C---     ALSO DETERMINE WHETHER SCAN HAS ENOUGH ROOM
C---     IF THE DATA IS TOO VOLUMINOUS THE DISPLAY IS SKIPPED
      NPTMAX=SS(4)*4.
      IF(NMESH.EQ.2) NPTMAX=NP*NS
      NPTMAX=NPTMAX+1
C---     INDEX TO CORNER POINT STORAGE
      IPMESH=0
C---     INDEX TO SCAN FOR CORNER SURFACE NORMALS
      ISNMES=NPTMAX*3-1
C---     AREAS FOR STORAGE OF INTEGER ARRAYS
      INUN=NPTMAX*6*2-1
      INUNQ=INUN+NPTMAX
      ICOMP=INUNQ+NPTMAX
C
      NQMAX=(15*NPTMAX)/2+2
      IF(NQMAX.LE.NSCNMX) GO TO 773
C****    NOT ENOUGH SPACE FOR SSPICT CALCULATION.  BYPASS.
      CALL CFORM('0 NOT ENOUGH SPACE TO DISPLAY ',DARRAY,1,29)
      CALL CFORM(SSNAME,DARRAY,37,16)
      CALL CPRIN1(DARRAY)
      GO TO 130
  773 CONTINUE
      IF(NMESH.NE.1.OR.NTYP.NE.3) GO TO 1000
C------ COMMENCE PATCH AVERAGING BY CONSTRUCTING A TABLE OF
C------ CORNER POINTS AND CORNER NORMALS
      NCT=0
      DO 1010 I=1,NTOT
      CALL LODPCH(SS,B,IFLAG,ITOP,I,3)
      DO 1010 L=1,4
      CALL CNSURF(UZ(L),VZ(L),B,SV,IFLAG,1)
      NCT=NCT+1
      DO 1020 K=1,3
      SCAN(IPMESH+NCT*3-3+K)=SV(K)
      SCAN(ISNMES+NCT*3-3+K)=SV(K+28)
 1020 CONTINUE
 1010 CONTINUE
      NCOMP=4*NTOT
      DO 1030 I=1,NCOMP
 1030 IISCAN(ICOMP+I)=I
C------ SEARCH THRU THE TABLE OF POINTS TO FIND EQUALS
C------ IF A LATER POINT EQUALS AN EARLIER, THEN REFERENCE
C------ THE EARLIER POINT IN ICOMP
      ICOMPC=0
      NCOMPM=NCOMP-1
C------ ICOMPC KEEPS TRACK OF THE TOTAL NUMBER OF UNIQUE POINTS
      DO 1040 I=1,NCOMPM
      IF(IISCAN(ICOMP+I).NE.I) GO TO 1040
      J=I+1
      DO 1050 K=J,NCOMP
      II=IPMESH+I*3-3
      KK=IPMESH+K*3-3
      D=(SCAN(II+1)-SCAN(KK+1))**2+(SCAN(II+2)-SCAN(KK+2))**2
     X  +(SCAN(II+3)-SCAN(KK+3))**2
      IF(D.LT.SMAL1) IISCAN(ICOMP+K)=I
 1050 CONTINUE
      ICOMPC=ICOMPC+1
      IISCAN(INUN+ICOMPC)=I
C------ICOMPC CONTAINS THE NUMBER OF UNIQUE POINTS AND IISCAN(INUN+)
C------ CONTAINS THE FIRST POINT IN EACH UNIQUE STRING.
 1040 CONTINUE
      DO 1060 I=1,ICOMPC
      J=IISCAN(INUN+I)
      NCT=0
      DO 1065 K=1,3
 1065 SNM(K)=0.0
      DO 1070 K=J,NCOMP
      IF(IISCAN(ICOMP+K).NE.J) GO TO 1070
      JJ=ISNMES+J*3-3
      KK=ISNMES+K*3-3
      W=SCAN(JJ+1)*SCAN(KK+1)+SCAN(JJ+2)*SCAN(KK+2)
     X  +SCAN(JJ+3)*SCAN(KK+3)
      SQ=1.0
      IF(W.LT.0.0D0) SQ=-1.0
      DO 1080 L=1,3
 1080 SNM(L)=SNM(L)+SQ*SCAN(ISNMES+K*3-3+L)
      NCT=NCT+1
      IISCAN(INUNQ+NCT)=K
 1070 CONTINUE
      DSNM=0.0
      DO 1090 K=1,3
      SNM(K)=SNM(K)/NCT
      DSNM=DSNM+SNM(K)**2
 1090 CONTINUE
      DSNM=DSQRT(DSNM)
      DO 1100 L=1,3
 1100 SNM(L)=SNM(L)/DSNM
C------SNM IS AN AVERAGED SURFACE NORMAL AT THE CURRENT UNIQUE PT
C------ REPLACE EACH NORMAL VECTOR IN THE LIST WITH ITS CORRES-
C------ PONDING AVERAGED NORMAL.
      DO 1110 L=1,NCT
      DO 1110 K=1,3
      M=IISCAN(INUNQ+L)
      SCAN(ISNMES+M*3-3+K)=SNM(K)
 1110 CONTINUE
 1060 CONTINUE
C------ FINALLY ALTER THE TANGENTS AND ZERO THE TWISTS
      DO 1120 L=1,NTOT
      DO 1120 K=1,4
      IC=K+4*(L-1)
      IBREL=10+6*(L-1)+5
      IBREL=SS(IBREL)-1.0
      DO 1130 M=1,2
      MC=2*(K-1)+M
      IV=IBREL+IAR(MC)
      IIC=ISNMES+3*IC-3
      DOT=SS(IV)*SCAN(IIC+1)+SS(IV+16)*SCAN(IIC+2)
     X    +SS(IV+32)*SCAN(IIC+3)
      DO 1140 LL=1,3
 1140 SS(IV+16*LL-16)=SS(IV+16*LL-16)-DOT*SCAN(ISNMES+IC*3-3+LL)
 1130 CONTINUE
C------ ZERO OUT TWIST VECTORS
      DO 1150 M=9,12
      IV=IAR(M)+IBREL
      DO 1150 LL=1,3
      SS(IV+16*LL-16)=ZERO
 1150 CONTINUE
 1120 CONTINUE
 1000 CONTINUE
C------ THE PNTSON  SURFACE HAS NOW BEEN AVERAGED
C
      DO 3000 I=1,15
      I8=I*8
 3000 DARRAY(I8-7:I8)=BLANK
      CALL CFORM('1',DARRAY,1,1)
      CALL CPRIN1(DARRAY)
      CALL CFORM(' SCULPTURED SURFACE ',DARRAY,20,20)
      CALL CFORM(SSNAME,DARRAY,52,16)
      CALL CPRIN1(DARRAY)
      CALL CFORM('0',DARRAY,1,1)
      CALL CPRIN1(DARRAY)
      IF(ISPRNT.EQ.2) GO TO 3020
      DARRAY=HEADR1
      CALL CPRIN1(DARRAY)
      DARRAY=HEADR2
      CALL CPRIN1(DARRAY)
      DARRAY=HEADR3
      CALL CPRIN1(DARRAY)
      DARRAY=HEADR4
      CALL CPRIN1(DARRAY)
 3020 CALL CFORM('0SS HEADER TABLE',DARRAY,1,16)
      CALL CPRIN1(DARRAY)
C---     WRITE OUT SS HEADER INFORMATION
      DO 3008 J=1,9
      CALL CFORM(SSHD(J),DARRAY,2,24)
      NIU=SS(J+1)
      CALL ICONV(NIU,DARRAY,27,6)
      CALL CPRIN1(DARRAY)
 3008 CONTINUE
C
      CALL CFORM('0',DARRAY,1,1)
      CALL CPRIN1(DARRAY)
      IF(ISPRNT.EQ.2) GO TO 3121
      DARRAY=HEADR5
      CALL CPRIN1(DARRAY)
C
 3121 AREA=0.0
      DO 90 I=1,NTOT
      IF(ISPRNT.EQ.2) GO TO 3021
      CALL VORSCH( 12,HEADR5)
      CALL CFORM(' PATCH NUMBER ',DARRAY,1,14)
      CALL ICONV(I,DARRAY,16,5)
      CALL CPRIN1(DARRAY)
 3021 CALL LODPCH(SS,B,IFLAG,ITOP,I,3)
      DO 80 L=1,8
      CALL CNSURF(U(L),V(L),B,SV,IFLAG,1)
      D=DSQRT(SV(25)**2+SV(26)**2+SV(27)**2)
      PARE(L)=D
      MA=IA(L)
      MB=IB(L)
C--- COMPUTE THE EUCLIDEAN X,Y,Z COORDINATES FOR DISPLAY
      MDIF=MB-MA
C---     SET INDEX TO NA TO NON-GENCUR TYPE
      IGENCR=1
C---     SPECIAL TEMPORARY PATH FOR GENCUR SURFACE
      IF(IFLAG(1).LT.9) GO TO 47
C---     SET INDEX TO NA TO GENCUR TYPE
      IGENCR=2
C
      DO 46 IIL=1,3
      PZ(IIL,1)=SV(IIL)
      PZ(IIL,2)=SV(IIL+8)
   46 CONTINUE
      GO TO 61
   47 CONTINUE
      IF(L.LT.3) GO TO 41
      IF(L.LT.7) GO TO 51
C--- LEAVE TWIST VECTORS AS IS
      DO 62 IM=1,2
      MM=MA+MDIF*(IM-1)
      DO 62 IL=1,3
   62 PZ(IL,IM)=B(MM+16*IL-16)
      GO TO 61
C--- DIVIDE X,Y, AND Z COORDINATES BY W
   41 CONTINUE
      DO 42 IM=1,2
      MM=MA+MDIF*(IM-1)
      W=B(MM+48)+SMAL1
      DO 42 IL=1,3
   42 PZ(IL,IM)=B(MM+IL*16-16)/W
      GO TO 61
   51 CONTINUE
C--- DERIVATIVES ARE MODIFIED BY (DX*W-DW*X)/W**2
      DO 52 IM=1,2
      MM=MA+MDIF*(IM-1)
      MMP=MOD(L+1,2)+1+(IM-1)*4
      W=B(MMP+48)
      WP=B(MM+48)
      DO 52 IL=1,3
      PZ(IL,IM)=(W*B(MM+16*IL-16)-WP*B(MMP+16*IL-16))/(W+SMAL1)**2
   52 CONTINUE
   61 CONTINUE
      IF(ISPRNT.EQ.2) GO TO 3022
C
      CALL CFORM(NA(L,IGENCR),DARRAY,2,4)
      K=7
      DO 3031 IW=1,3
      CALL FCONV(PZ(IW,1),DARRAY,K,9,3)
      K=K+9
 3031 CONTINUE
      CALL FCONV(B(MA+48),DARRAY,K,9,3)
      K=K+12
      CALL CFORM(NB(L,IGENCR),DARRAY,K,4)
      K=K+5
      DO 3032 IY=1,3
      CALL FCONV(PZ(IY,2),DARRAY,K,9,3)
      K=K+9
 3032 CONTINUE
      CALL FCONV(B(MB+48),DARRAY,K,9,3)
      K=K+12
      CALL CFORM(NC(L),DARRAY,K,4)
      K=K+6
      DO 3033 IZ=29,31
      CALL FCONV(SV(IZ),DARRAY,K,8,5)
      K=K+8
 3033 CONTINUE
      CALL CPRIN1(DARRAY)
C
C------SAVE CORNER POINTS AND NORMALS AS THEY ARE GENERATED
 3022 IF(NMESH.NE.2) GO TO 330
      DO 310 LLOC=1,4
      LLC=LOC(LLOC)
      IF(LLC.NE.L) GO TO 310
C------ CASE L HAS GENERATED THE LLOC TH CORNER.  SAVE POINT AND NORMAL
      DO 320 LK=1,3
      PT(LK,LLOC)=SV(LK)
      SNT(LK,LLOC)=SV(LK+28)
  320 CONTINUE
  310 CONTINUE
  330 CONTINUE
   80 CONTINUE
      CALL CNSURF(U(9),V(9),B,SV,IFLAG,1)
C
      IF(ISPRNT.EQ.2) GO TO 3023
      IF(IGENCR.NE.2)GOTO 3045
C    GENCUR-OBERFLAECHE HAT KEINE RELEVANTEN FLAGS
      K=8
      GOTO 3046
 3045 CALL CFORM(' FLAGS=',DARRAY,1,7)
      K=8
      DO 3040 JJ=1,4
      CALL ICONV(IFLAG(JJ),DARRAY,K,1)
      K=K+1
      CALL CFORM(',',DARRAY,K,1)
      K=K+1
 3040 CONTINUE
 3046 K=K+1
      DO 3041 LL=1,4
      CALL CFORM(IB1234(LL),DARRAY,K,3)
      K=K+3
      CALL ICONV(ITOP(2,LL),DARRAY,K,3)
      K=K+4
 3041 CONTINUE
      CALL CFORM(' PT55 ',DARRAY,K,6)
      K=K+6
      DO 3042 LJ=1,3
      CALL FCONV(SV(LJ),DARRAY,K,9,3)
 3042 K=K+12
      CALL CFORM('NR55 ',DARRAY,K,5)
      K=K+5
      DO 3043 JL=29,31
      CALL FCONV(SV(JL),DARRAY,K,8,4)
 3043 K=K+8
      CALL CPRIN1(DARRAY)
C
 3023 D=DSQRT(SV(25)**2+SV(26)**2+SV(27)**2)
      PARE(L)=D
      PAREA=(PARE(1)+PARE(3)+PARE(4)+PARE(6)+2.0*(PARE(2)+PARE(5)+
     C        PARE(7)+PARE(8))+4.0*PARE(9))/16.0
      G11=SV(5)**2+SV(6)**2+SV(7)**2
      G12=SV(5)*SV(9)+SV(6)*SV(10)+SV(7)*SV(11)
      G22=SV(9)**2+SV(10)**2+SV(11)**2
      A11=SV(13)*SV(29)+SV(14)*SV(30)+SV(15)*SV(31)
      A12=SV(17)*SV(29)+SV(18)*SV(30)+SV(19)*SV(31)
      A22=SV(21)*SV(29)+SV(22)*SV(30)+SV(23)*SV(31)
      C=A11*A22-A12*A12
      E=-G11*A22+2.0*G12*A12-G22*A11
      A=G11*G22-G12*G12
      DD=E*E-4.0*A*C
      IF(DD.LT.ZERO)GO TO 170
      DD=DSQRT(DD)
      CA=(-E+DD)/(A+A)
      CB=(-E-DD)/(A+A)
      HM=(CA+CB)/2.D0
      GK=CA*CB
      SMAL=1.0D-5
      RA=1.0/(CA+SMAL)
      RB=1.0/(CB+SMAL)
C------ SAVE THE CRITICAL CURVATURES
      CBIG=CA
      CSMAL=CA
      IF(CBIG.LT.CB) CBIG=CB
      IF(CSMAL.GT.CB) CSMAL=CB
      IF(CBIG.LT.CMAX) GO TO 210
      CMAX=CBIG
      ICMAX=I
  210 IF(CSMAL.GT.CMIN) GO TO 220
      CMIN=CSMAL
      ICMIN=I
  220 CONTINUE
C
      IF(ISPRNT.EQ.2) GO TO 170
      CALL CFORM(' PATCH AREA=',DARRAY,1,12)
      K=13
      CALL FCONV(PAREA,DARRAY,K,12,5)
      K=K+12
      CALL CFORM(' CURVATURES=',DARRAY,K,12)
      K=K+12
      CALL FCONV(CA,DARRAY,K,10,4)
      K=K+10
      CALL FCONV(CB,DARRAY,K,10,4)
      K=K+10
      CALL CFORM(' MEAN & GAUSS=',DARRAY,K,14)
      K=K+14
      CALL FCONV(HM,DARRAY,K,10,4)
      K=K+10
      CALL FCONV(GK,DARRAY,K,10,4)
      K=K+10
      CALL CFORM(' RADII=',DARRAY,K,7)
      K=K+7
      CALL FCONV(RA,DARRAY,K,12,3)
      K=K+12
      CALL FCONV(RB,DARRAY,K,10,3)
      CALL CPRIN1(DARRAY)
      CALL CPRIN1(DARRAY)
C
  170 CONTINUE
      IF(NMESH.NE.2) GO TO 350
C------ PACK THE FOUR CORNER POINTS AND NORMALS INTO THE MESH ARRAY
C------ MP IS THE POINT LOCATION ON A SPLINE
C------ MS IS THE SPLINE NUMBER
      MP(1)=MOD(I-1,NP-1)+1
      MS(1)=(I-1)/(NP-1)+1
      MP(2)=MP(1)+1
      MS(2)=MS(1)
      MP(3)=MP(1)
      MS(3)=MS(1)+1
      MP(4)=MP(1)+1
      MS(4)=MS(3)
      DO 380 KK=1,4
      NCURR=(MS(KK)-1)*NP+MP(KK)
      DO 380 KKK=1,3
      SCAN(IPMESH+NCURR*3-3+KKK)=PT(KKK,KK)
      SCAN(ISNMES+NCURR*3-3+KKK)=SNT(KKK,KK)
  380 CONTINUE
  350 CONTINUE
      AREA=AREA+PAREA
   90 CONTINUE
C
      CALL VORSCH ( 7,DARRAY)
      CALL CPRIN1(DARRAY)
      CALL CFORM('0',DARRAY,1,1)
      CALL CPRIN1(DARRAY)
      CALL CFORM(' APPROXIMATE TOTAL SURFACE AREA=',DARRAY,1,32)
      K=35
      CALL FCONV(AREA,DARRAY,K,15,6)
      CALL CPRIN1(DARRAY)
C
      RMAX=1.0/(CMAX+SMAL)
      RMIN=1.0/(CMIN+SMAL)
C
C
      CALL CFORM('0  CRITICAL CURVATURES ON THE SURFACE',DARRAY,1,37)
      CALL CPRIN1(DARRAY)
      CALL CFORM('MAXIMUM SIGNED CURVATURE AND RADIUS=',DARRAY,10,36)
      K=46
      CALL FCONV(CMAX,DARRAY,K,15,5)
      K=K+17
      CALL FCONV(RMAX,DARRAY,K,15,5)
      K=K+15
      CALL CFORM('   AT PATCH NUMBER',DARRAY,K,18)
      K=K+18
      CALL ICONV(ICMAX,DARRAY,K,5)
      CALL CPRIN1(DARRAY)
      CALL CFORM('MINIMUM SIGNED CURVATURE AND RADIUS=',DARRAY,10,36)
      K=46
      CALL FCONV(CMIN,DARRAY,K,15,5)
      K=K+17
      CALL FCONV(RMIN,DARRAY,K,15,5)
      K=K+15
      CALL CFORM('   AT PATCH NUMBER',DARRAY,K,18)
      K=K+18
      CALL ICONV(ICMIN,DARRAY,K,5)
      CALL CPRIN1(DARRAY)
C
C
      IF(NMESH.NE.2) GO TO 480
      CALL VORSCH(15,DARRAY)
      CALL CFORM('0',DARRAY,1,1)
      CALL CPRIN1(DARRAY)
      CALL CFORM('MESH PATTERN OF POINTS AND NORMALS',DARRAY,10,34)
      CALL CPRIN1(DARRAY)
      CALL CFORM('0  POINT',DARRAY,1,8)
      K=17
      CALL CFORM('X',DARRAY,K,1)
      K=K+13
      CALL CFORM('Y',DARRAY,K,1)
      K=K+13
      CALL CFORM('Z',DARRAY,K,1)
      K=K+26
      CALL CFORM('SNI',DARRAY,K,3)
      K=K+13
      CALL CFORM('SNJ',DARRAY,K,3)
      K=K+13
      CALL CFORM('SNK',DARRAY,K,3)
      CALL CPRIN1(DARRAY)
C
      DO 440 IMM=1,NS
C
      CALL VORSCH( 5,DARRAY)
      CALL CFORM('0',DARRAY,1,1)
      CALL CFORM('SPLINE NUMBER=',DARRAY,15,14)
      CALL ICONV(IMM,DARRAY,30,6)
      CALL CFORM('(V=....)',DARRAY,40,8)
      CALL ICONV(IMM-1,DARRAY,43,4)
      CALL CPRIN1(DARRAY)
C
      DO 440 IIP=1,NP
      NCURR=(IMM-1)*NP+IIP
C
      CALL VORSCH ( 1,DARRAY)
      CALL ICONV(IIP,DARRAY,4,4)
      CALL CFORM('*',DARRAY,8,1)
      K=12
      DO 3050 LLL=1,3
      CALL FCONV(SCAN(IPMESH+NCURR*3-3+LLL),DARRAY,K,12,5)
      CALL CFORM(',',DARRAY,K+12,1)
      K=K+13
 3050 CONTINUE
      K=K+10
      DO 3051 LN=1,3
      CALL FCONV(SCAN(ISNMES+NCURR*3-3+LN),DARRAY,K,12,5)
      IF(LN.LT.3) CALL CFORM(',',DARRAY,K+12,1)
      K=K+13
 3051 CONTINUE
      CALL CFORM('(U=....)',DARRAY, K+6,8)
      CALL ICONV(IIP-1,DARRAY,K+9,4)
      CALL CPRIN1(DARRAY)
C
  440 CONTINUE
C
C        PRINT OUT CROSS SPLINE INFORMATION
C
      CALL CFORM('0',DARRAY,1,1)
      CALL CPRIN1(DARRAY)
C
      DO 450 IIP=1,NP
      CALL VORSCH ( 5,DARRAY)
      CALL CFORM('0',DARRAY,1,1)
      CALL CFORM('CROSS SPLINE NUMBER=',DARRAY,15,20)
      CALL ICONV(IIP,DARRAY,36,6)
      CALL CFORM('(U=....)',DARRAY,46,8)
      CALL ICONV(IIP-1,DARRAY, 49,4)
      CALL CPRIN1(DARRAY)
C
      DO 450 IMM=1,NS
      MCURR=IMM*NP-(NP-IIP)
      CALL VORSCH ( 1,DARRAY)
      CALL ICONV(IMM,DARRAY,4,4)
      CALL CFORM('*',DARRAY,8,1)
      K=12
      DO 460 LLL=1,3
      CALL FCONV(SCAN(IPMESH+MCURR*3-3+LLL),DARRAY,K,12,5)
      CALL CFORM(',',DARRAY,K+12,1)
       K=K+13
 460  CONTINUE
      K=K+10
      DO 470 LN=1,3
      CALL FCONV(SCAN(ISNMES+MCURR*3-3+LN),DARRAY,K,12,5)
      IF(LN.LT.3) CALL CFORM(',',DARRAY,K+12,1)
      K=K+13
 470  CONTINUE
      CALL CFORM('(V=....)',DARRAY, K+6,8)
      CALL ICONV(IMM-1,DARRAY,K+9,4)
      CALL CPRIN1(DARRAY)
 450  CONTINUE
C
  480 CONTINUE
  130 RETURN
      END
