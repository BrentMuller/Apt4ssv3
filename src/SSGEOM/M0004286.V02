*
C
      SUBROUTINE PNTSON(BIN,OUT,KTYP,KTWS,IRR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION OUT(49),DUV(4),NEXCH(16),IP(4),JP(4)
      DIMENSION BIN( 3, 16 ), BOU( 3, 16 ), KTYP( 5 )
      DIMENSION U( 4 ), V( 4 ), DUM( 3 ), DUM1( 3 ), KTWS( 5 )
      DIMENSION TEMP(4,3)
      DIMENSION  DUM2(3)
      DATA NEXCH/1,2,3,4,13,14,15,16,5,9,8,12,6,7,10,11/
      DATA IP,JP/1,5,1,4,4,8,5,8/
C------INPUT SIXTEEN POINTS ON A PATCH STORED IN THE ARRAY BIN.
C------OUTPUT  SIXTEEN COONS VECTORS OF A COONS PATCH WHICH PASSES
C------ THRU THE INPUT POINTS
C------ IN ADDITION, KTYP() CONTAINS INFORMATION ON SURFACE TYPE AND
C------KTYP=1=NULL CURVE, =2=STRAIGHT SEG, =3=3 PT CURVE,
C------KTYP=4= 4 PT CURVE, =10=ERROR ON CURVE
C------ SOURCES OF TROUBLE IN THE INPUT
C------ IRR .NE. 0 MEANS THE PROCESSING WAS UNSUCESSFUL
C------INITIALIZE VARIOUS VALUES
      IDIAG = 5390
      IRR = 0
C------ BEGIN BY ALTERING THE ORDER OF INPUT FROM SSX2 FORMAT TO THE
C------ OLD SSX1 FORMAT( THIS IS DONE TO SAVE REWORKING PNTSON)
      DO 5 J=1,16
      N=NEXCH(J)
      DO 5 I=1,3
      BOU(I,J)=BIN(I,N)
    5 CONTINUE
      DO 6 J=1,16
      DO 6 I=1,3
    6 BIN(I,J)=BOU(I,J)
      DO 1  I = 1, 5
      KTWS(I) = 0
    1 KTYP(I) = 0
      DO 2 I  = 1, 16
      DO 2 J = 1, 3
      KTYP(3)=2
      KTYP(4)=2
    2 BOU(J,I) = 0.
      DO 3 J = 1, 3
      BOU(J,1) = BIN(J,1)
      BOU(J,2) = BIN(J,4)
      BOU(J,5) = BIN(J,5)
    3 BOU(J,6) = BIN(J,8)
      CRIT = 0.00001
C------NEXT FIT THE FIRST TWO BOUNDARIES
      CALL CURFIT( BIN(1,1), BIN(1,2), BIN(1,3), BIN(1,4),
     1             BOU(1,3), BOU(1,4), KTYP(1), IRR )
      IF ( IRR .NE. 0 ) KTYP(1) = 10
      CALL CURFIT( BIN(1,5),BIN(1,6),BIN(1,7),BIN(1,8),
     1             BOU(1,7),BOU(1,8), KTYP(2), IRR )
      IF ( IRR .NE. 0 ) KTYP(2) = 10
C------NEXT, CHECK FOR TOTAL EQUALITY AMONG THE EIGHT CENTRAL VECTORS
C------ SUCH EQUALITY IMPLIES THE SURFACE IS RULED
      DO 10 I = 9, 15
      N = I + 1
      DO 10 J = N, 16
      DO 20 K = 1, 3
      W  =  BIN( K, J ) - BIN( K, I )
      IF ( DABS(W) .GT. CRIT ) GO TO 300
   20 CONTINUE
   10 CONTINUE
C------ ALL EQUALITY CHECKS HAVE BEEN MET -- A RULED SURFACE FOLLOWS
C------DETERMINE THE REMAINING TANGENTS AND TWISTS
      KTYP(5) = 1
      DO 210 J = 1, 3
C------SET UP THE CROSS TANGENTS FIRST
      BOU(J,9) = BIN(J,5) - BIN(J,1)
      BOU(J,13) = BOU(J,9)
      BOU(J,10) = BIN(J,8) - BIN(J,4)
      BOU(J,14) = BOU(J,10)
C------NOW SET UP TWIST VECTORS
      BOU(J,11) = BOU(J,7) - BOU(J,3)
      BOU(J,15) = BOU(J,11)
      BOU(J,12) = BOU(J,8) - BOU(J,4)
      BOU(J,16) = BOU(J,12)
  210 CONTINUE
C------FINALLY RESET IRR
      DO 220 I = 1, 2
  220 IF ( KTYP(I) .EQ. 10 ) IRR = IDIAG + 1
      GO TO 999
C-----------   END OF RULED SURFACE PROCESSING   -------------
  300 CONTINUE
C------NEXT COMPARE FOR TWO EQUAL CENTER POINTS
      NUMTWS = 4
      DO 310 I = 13, 15
      N = I + 1
      DO 310 J = N , 16
      DO 320 K = 1 , 3
      W  =  BIN(K,J) - BIN(K,I)
      IF ( DABS(W) .GT. CRIT ) GO TO 310
  320 CONTINUE
      NUMTWS = 0
  310 CONTINUE
C------NUMTWS=0 MEANS ZERO TWISTS, .NE.0 MEANS NON ZERO TWISTS
C------NEXT CALL FOR A FIT OF THE REMAINING TWO BOUNDARIES
      CALL CURFIT( BIN(1,1),BIN(1,9),BIN(1,10),BIN(1,5),
     1             BOU(1,9),BOU(1,13), KTYP(3), IRR)
      IF ( IRR .NE. 0 ) KTYP(3) = 10
      CALL CURFIT( BIN(1,4),BIN(1,11),BIN(1,12),BIN(1,8),
     1             BOU(1,10),BOU(1,14), KTYP(4), IRR )
      IF ( IRR .NE. 0 ) KTYP(4) = 10
C------IF TWISTS HAVE YET TO BE DETERMINED GO TO 500
      IF ( NUMTWS .NE. 0 ) GO TO 500
C------FINISH THE ZERO TWIST CASE BY RESETTING IRR
      DO 410 I = 1, 4
  410 IF ( KTYP(I) .EQ. 10 ) IRR = IDIAG + 2
      KTYP(5) = 2
      GO TO 999
C------THE DETERMINATION OF FOUR TWISTS FOLLOWS
  500 CONTINUE
C------FIRST PROJECT EACH OF THE POINTS BIN(,I), I = 13,14,15,16
C------IN SUCCESSION ONTO THE ZERO TWIST PATCH
      ONE = 1.0
      DO 510 I = 13, 16
      DO 550 LL=1,4
      IS=IP(LL)
      IE=JP(LL)
      BXS=BIN(1,IS)
      BYS=BIN(2,IS)
      BZS=BIN(3,IS)
      DX=BIN(1,IE)-BXS
      DY=BIN(2,IE)-BYS
      DZ=BIN(3,IE)-BZS
      PX=BIN(1,I)-BXS
      PY=BIN(2,I)-BYS
      PZ=BIN(3,I)-BZS
      DP=DX*DX+DY*DY+DZ*DZ+1.0D-30
      DUV(LL)=(PX*DX+PY*DY+PZ*DZ)/DP
  550 CONTINUE
      U(I-12)=(DUV(1)+DUV(2))/2.0
      V(I-12)=(DUV(3)+DUV(4))/2.0
  510 CONTINUE
C------NOW RESET IRR IF TROUBLE HAS OCCURRED AND RETURN
C------KTWS HERE ALWAYS ZERO !!!!!!!!, WHY ????????????
      DO 520 I = 1, 4
  520 IF ( KTWS(I) .NE. 0 ) IRR = IDIAG + 3
      IF(IRR.NE.0) RETURN
C------FINALLY COMPUTE TWISTS BASED ON PARAMETER VALUES WHICH HAVE
C------ BEEN COMPUTED
      DO 530 I = 1, 4
      DO 530 K = 1, 3
      N = 12 + I
  530 TEMP(I,K) = BIN(K,N)
C     WRITE(6,571)(U(M),M=1,4),(V(MM),MM=1,4),TEMP
C 571 FORMAT(10X,4F15.4,/)
      CALL COMPTW ( BOU, TEMP, U, V, IRR )
      KTYP(5) = 3
  999 CONTINUE
      DO 560 I=1,3
      DO 560 K=1,4
      DO 560 J=1,4
      IN=(I-1)*16+(K-1)*4+J
      OUT(IN)=BOU(I,4*K-4+J)
  560 CONTINUE
      RETURN
      END
