**** SOURCE FILE : M0000398.W01   ***
*
C
C...  FORTRAN SUBROUTINE           ACNTRL...         RC,AR
C     MODIFIED FOR SSV3  E.MCLELLAN
C
      SUBROUTINE ACNTRL(ARRAY,FILEA)
      IMPLICIT  DOUBLE PRECISION(A-H,O-Z)
C
C...  THIS SUBROUTINE RECEIVES CONTROL FOR THE POSTEXEC LOAD MODULE.
C     IT READS CPFILE AND AND LISTS THE NAMES OF THE NECESSARY
C     POSTPROCESSORS.
C     CLFILE(S) ARE ALSO SAVED FOR FUTURE POST PROCESSING
C
      INCLUDE 'SYMFIL.INC'
      CHARACTER*6 PPNAME
C
C     ****         ****      ****      ****      ****      ****
C
C
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR
C
          COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS
          DIMENSION XTRAS(7),CFLAGS(4),LXTRAS(7)
          INTEGER   ERRX,XTRAS
          LOGICAL   ERR,FINI,XC,CL,ASM,LXTRAS,CFLAGS,PX,END,ABEND
          EQUIVALENCE (LXTRAS(1),XTRAS(1)),(CFLAGS(1),ERR)
C
      DIMENSION NNN(48),PPS(2,10)
      EQUIVALENCE (NNN(6),NOP),(NNN(3),N)
      EQUIVALENCE (PPS(1,1),NNN(9))
C
C
      CALL AREAD(CPFILE,1,NNN,48,IR)
C
C... IS POST PROCESSING REQUIRED
C
      IF(N.NE.0) THEN
C
C...CLOSE CLFILES AND KEEP
C
        CALL TAPOP(CLFILP,-3)
        IF (NOP.EQ.1) CALL TAPOP(CLFILE,-3)
        CALL TAPOP(CLFIL3,-3)
C
C....WRITE CURRENT POST PROCESSOR NAMES TO FILE - PPFILE.DAT
C
        NUMPST=N/2
C
        DO 50 I=1,NUMPST
          CALL HOLFRM(PPS(1,I),PPNAME,1,6,NWD)
          CALL OUTMSG(' POST PROCESSOR '//PPNAME//' REQUESTED')
   50   CONTINUE
C
      ENDIF
C
      ABEND=.FALSE.
C
      END
**** SOURCE FILE : M0000396.V02   ***
*
C
C....  FORTRAN SUBROUTINE  CLRD4                          8/1/72
C  PURPOSE     TO READ CLFIL2 AND PLACE RHE RECORD IN THE ARRAY.
C  LINKAGE     CALL CLRD4  (FILE,NR,NBUFF,IR)
C
C  ARGUMENTS   FILE    FILE NUMBER IN THE SYMFIL COMMON.
C                      IF FILE=-1, RESET ALL COUNTERS FOR OTHER FILE.
C              NR      CONTAINING RECORD NUMBER TO BE RETRIEVED.
C              NBUFF   DATA ARRAY TO CONTAIN THE RETRIEVED RECORD.
C              IR      RETURN ERROR FLAG. =0 NOERROR, =1 ERROR.
C
      SUBROUTINE CLRD4  (FILE,NR,NBUFF,IR)
      INTEGER FILE,EBUFF(516),NBUFF(2)
      SAVE N,NB,M,K
      DATA N/0/,NB/0/,M/0/,K/3/
      IF(FILE.NE.-1) GO TO 100
C     INITIALIZE FLAGS
C     N IS MAXIMUM RECORD NUMBER IN THIS BLOCK
      N=0
C     NB IS BLOCK NUMBER COUNTER
      NB=0
C     M IS MINIMUM RECORD NUMBER IN THIS BLOCK
      M=0
C     K IS POINTER OF BUFFER
      K=3
C     CHECK SPECIFIED RECORD IS IN CURRENT BLOCK
  100 IF(NR.GT.M) GO TO 10
      IF(NR.LT.N) GO TO 20
C     YES, SPECIFIED RECORD IS IN CURRENT BLOCK
      IF(NR.EQ.EBUFF(K)) GO TO 30
      K=3
C     FIND THE POSITION OF THE RECORD
    3 IF (NR.EQ.EBUFF(K)) GO TO 30
      K=K+EBUFF(K+1)+2
      IF(K.GT.516) GO TO 200
      GO TO 3
   30 K=K+1
C     GET THE SIZE OF RECORD
      L=EBUFF(K)
C     MOVE THE RECORD
      DO 31 I=1,L
   31 NBUFF(I)=EBUFF(K+I)
      K=K+L+1
      RETURN
C     TRY NEXT BLOCK
   10 NB=NB+1
   15 K=516
      CALL AREAD(FILE,NB,EBUFF,K,KR)
      IF(KR.EQ.3) GO TO 200
      K=3
      N=EBUFF(1)
      M=EBUFF(2)
      GO TO 100
C     TRY PREVIOUS RECORD
   20 NB = NB -1
      GO TO 15
  200 IR=1
      RETURN
      END
