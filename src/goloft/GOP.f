**** SOURCE FILE : M0012240.V01   ***
*
      SUBROUTINE GOP(MOD,U,V,SPV,J11,IRET)
C
C
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'GLFLGS.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'SV.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'ISV.INC'
C
C SS - ARELEM - COMMON
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)
C
C
C  LENGTH OF PROJECTION OF NEW AXIS ON OLD AXIS
      DOUBLE PRECISION AL(2)
C
C  PAIRS OF SIN AND COSIN VALUES
      DOUBLE PRECISION SIND(2),COSD(2)
C
C  TWO POSSIBLE TOOL AXIS IN 4 OR 5 AXIS CASE
      DOUBLE PRECISION AX(3,2)
      DOUBLE PRECISION LEIT(9)
      INTEGER ILEIT(18)
      EQUIVALENCE (LEIT(1),ILEIT(1))
      DOUBLE PRECISION PENUP (5)
      INTEGER IPENU(10)
      EQUIVALENCE (PENUP (1),IPENU(1))
      DOUBLE PRECISION PENDWN(5)
      INTEGER IPEND(10)
      EQUIVALENCE (PENDWN(1),IPEND(1))
      DOUBLE PRECISION FEDRAT(5)
      INTEGER IFEDR(10)
      EQUIVALENCE (FEDRAT(1),IFEDR(1))
C
C  OUTPUT-ARRAY OF THE HEADER
      DOUBLE PRECISION MODF(7)
      INTEGER IMODF(2,7)
      EQUIVALENCE (MODF(1),IMODF(1,1))
      CHARACTER*8 CMODF(7)
C
      COMMON/CCLEAR/ DIRMOT(3,4)
     *              ,GOFEED(4)
     *              ,GLFEED
     *              ,REGLDA(2)
     *              ,IRETRO(4)
     *              ,IDIRMO(4)
     *              ,ICANIN(4)
     *              ,IFEEDF
C
C   GOLOFT/PLOTFT-COMMON
C
      DIMENSION ICSEG(10),NLIOCI(10)
      DIMENSION COSAL(10),SINAL(10)
      DIMENSION CUTY(10),CUTX(10),CUTL(10),VTA(3)
C
      COMMON/PLGOL/ID(24),OBNAM1,JCSEG,NCSEG,ICSEG,NLIOCI,
     *             COSAL,SINAL,
     *             CUTY,CUTX,CUTL,VTA
C     EQUIVALENCE (ID(1),UVCONS)
C     EQUIVALENCE (ID(3),UVA)
C     EQUIVALENCE (ID(5),UVE)
C     EQUIVALENCE (ID(7),TOL)
C     EQUIVALENCE (ID(9),VL)
C     EQUIVALENCE (ID(11),NU)
C     EQUIVALENCE (ID(12),NV)
C
C   IART: 1,2: PLOTING CURVES; 3,4: PLOTING SURFACE LINES
C           5: PLOT SURF GRID; 6,7: SURFACE CUTTING
      EQUIVALENCE (ID(13),IART)
C INVERS: INVERT THE TRAVEL DIRECTION IF =1
C     EQUIVALENCE (ID(14),INVERS)
C MIRROR: INVERT NORMAL DIRECTION IF =1
      EQUIVALENCE (ID(15),MIRROR)
C NORMAL: TAKE THE SURFACE NORMAL AS TOOL AXIS IF =1
      EQUIVALENCE (ID(16),NORMAL)
C   INCR: CURVATURE CALCULATION NECESSARY IF NOT =1
      EQUIVALENCE (ID(17),INCR)
C
C  JCSEG: USED CUTTER SEGMENT
C  NCSEG: NUMBER OF VALID CUTTER SEGMENTS
C  ICSEG: CUTTER SEGMENT IN TLLDAT ARRAYS
C NLIOCI: NATURE OF SEGMENT
C  COSAL: COMPONENTS OF SEGMENT AND UNIT NORMAL
C  SINAL: POINTING INTO THE CUTTER
C   CUTY: DISTANCE PARALLEL TO THE CUTTER AXIS
C   CUTX: DISTANCE TO THE CUTTER AXIS
C   CUTL: ELEMENT LENGTH
C    VTA: VECTOR-COMPONENTS OF THE TOOL-AXIS-VECTOR
C
C     BLANK-COMMON
      INCLUDE 'BLANKCOM.INC'
C
C SYSTEM - I/O NAMES
      INCLUDE 'SYMFIL.INC'
C
C   POINT STORAGE FOR TRANSFORMATION PURPOSE
      DOUBLE PRECISION PT(3),PT1(4)
      EQUIVALENCE(PT1(2),PT(1))
C   VECTOR STORAGE FOR TRANSFORMATION PURPOSE
      DOUBLE PRECISION VT0(3),VT1(4),VT2(3)
      EQUIVALENCE(VT1(2),VT0(1))
C   MOTION DIRECTION AND CROSS VECTOR
      DOUBLE PRECISION DM(3),Q(3)
C   EVALUATION FIELDS
      DOUBLE PRECISION SPV(52),PATCH(64)
      INTEGER IFLAG(4) , ITOP(6,4)
      INCLUDE 'DARRAY.INC'
C
      INTEGER ITEST5
C
C       SS PRINT CONTROL
      COMMON/SSPRT/SSPRT,SSTEST
      LOGICAL SSPRT,SSTEST
C
      INTEGER J11O
C
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
C
      LOGICAL FIRST
      SAVE FIRST,LEIT,PENUP,PENDWN,FEDRAT,MODF
                                              
      DATA ILEIT/0,0,Z4E,0,Z4E,6,Z4E,1,0,0,Z4E,0,0,0,Z4E,0,Z4E,0/
      DATA IPENU/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/
      DATA IPEND/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/
      DATA IFEDR/0,0,Z4E,0,Z4E,2,Z4E,1,0,0/
      DATA CMODF/'PLOTKP  ','PLOTKF  ','PLOTFU  ',
     *   'PLOTFV  ','PLOTGR  ','GOFLU   ','GOFLV   '/
      DATA PT1/19030000.0D0,3*.0D0/
      DATA VT1/20030000.0D0,3*.0D0/
      DATA ITEST5/1/,J11O/-1/
      DATA FIRST/.TRUE./
C
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
C
C     INITIALISE CHARACTER ITEMS FOR OUTPUT TO EXFILE
C
      IF (FIRST) THEN
        DO 5 I=1,7
          IMODF(1,I)=BCDF(CMODF(I)(1:4))
          IMODF(2,I)=BCDF(CMODF(I)(5:8))
    5   CONTINUE
        ILEIT(1)=BCDF('CLDA')
        ILEIT(2)=BCDF('TA  ')
        LEIT(5)=MODF(5)
        IPENU(1)=BCDF('PENU')
        IPENU(2)=BCDF('P   ')
        IPENU(9)=BCDF('    ')
        IPENU(10)=IPENU(9)
        IPEND(1)=BCDF('PEND')
        IPEND(2)=BCDF('WN  ')
        PENDWN(5)=PENUP(5)
        IFEDR(1)=BCDF('FEDR')
        IFEDR(2)=BCDF('AT  ')
        FIRST=.FALSE.
      ENDIF
C  PREPARATION OF THE EVALUATION RESULT STORAGE
      IF(INCR.EQ.1)GOTO 11
      DO 10 I=33,52
   10 SPV(I)=0.D0
C
C   CURVE OR SURFACE ?
   11 IF(IART.GE.3) GOTO 1000
      MM=0
      IF(MOD.NE.2)MM=2
      CALL CURFLO(U,SSCAN(J11+1),SPV,MM,0)
      DO 80 I=1,3
      PT(I)=SPV(I)
   80 SPV(32+I)=SPV(I)
      IF(MOD.EQ.1)RETURN
      DO 90 I=1,3
   90 TEK(I)=TE(I)
      CALL TRANSM(TE,PT,2,3,0)
      GOTO 7100
C
C    COMPUTATION OF PATCH NUMBER AND FETCHING OF THE PATCH
 1000 NSPL=SSCAN(J11+9)-1.0D0
      NPNT=SSCAN(J11+10)-1.0D0
      IU=U
      IV=V
      IF(IU.LT.NPNT) GOTO 2110
      IU=NPNT-1
 2130 UP=U-IU
 2140 IF(IV.LT.NSPL) GOTO 2120
      IV=NSPL-1
 2150 VP=V-IV
 2160 NPATCH=IV*NPNT+IU+1
      GOTO 2310
 2110 IF(IU.GE.0) GOTO 2130
      IU=0
      UP=U
      GOTO 2140
 2120 IF(IV.GE.0) GOTO 2150
      IV=0
      VP=V
      GOTO 2160
 2310 IF(J11.EQ.J11O.AND.
     *   NPATCH.EQ.NPATO.AND.
     *   SSCAN(J11+1).EQ.CANOLD) GOTO 2315
      CALL LODPCH(SSCAN(J11+1),PATCH,IFLAG,ITOP,NPATCH,1)
      J11O=J11
      NPATO=NPATCH
      CANOLD=SSCAN(J11+1)
 2315 MM=2
      CALL CNSURF(UP,VP,PATCH,SPV,IFLAG,MM)
C
C STORE VALUES FOR ATAPE
      UU(1)=UP
      VV(1)=VP
      IPNUM(1)=NPATCH
C
C STORE SURFACE POINT WITH NORMAL FOR ATAPE
      DO 2320 I=1,3
      PT(I)=SPV(I)
      VT0(I)=SPV(I+28)
 2320 CONTINUE
      CALL TRANSM(SP(1,IPS),PT,2,3,0)
      CALL TRANSM(SN(1,IPS),VT0,3,3,0)
C
C  CALCULATION OF MOTION DIRECTION
      IWO=8
      IF(IART.EQ.7)IWO=4
      DO 4080 I=1,3
 4080 DM(I)=SPV(IWO+I)
C
C  LENGTH OF MOTION DIRECTION
      VLL=DSQRT(DM(1)*DM(1)+DM(2)*DM(2)+DM(3)*DM(3))
C  INVERT LENGTH IF MOTION DIRECTION IS INVERS
      IF(INVERS.EQ.1)VLL=-VLL
C  NORMALIZE MOTION DIRECTION
      DO 4090 I=1,3
      DM(I)=DM(I)/VLL
 4090 VT0(I)=DM(I)
      CALL TRANSM(TI,VT0,3,3,0)
C
C   INVERSION OF NORMAL
      IF(MIRROR.NE.1)GOTO 4000
      DO 3090 I=29,31
 3090 SPV(I)=-SPV(I)
C
C   IS THE SURFACE NORMAL TO BE USED AS TOOL AXIS ?
 4000 IF(NORMAL.EQ.1)GOTO 4050
      IF(JTLFLG(IPS).NE.0) GOTO 4070
C
C  GIVEN TOOL-AXIS IS USED
      DO 4010 I=1,3
 4010 VT0(I)=TA(I)
      CALL TRANSM(SPV(37),VT0,3,3,-1)
      GOTO 5000
C
C SURFACE NORMAL AS TOOL-AXIS
 4050 DO 4060 I=1,3
 4060 SPV(36+I)=SPV(28+I)
      GOTO 5000
C
C ********** 4 AND 5 AXIS CALCULATION **************
C
C  ONLY GOLOFT ALLOWED
 4070 IF(IART.NE.6.AND.IART.NE.7)GOTO 5000
C
C TLAXIS PARLELL CASE
      IF(MANTAX.EQ.2.AND.NUMAX.EQ.2)GOTO 4300
C
C  CALCULATE CROSS VECTOR
      CALL CROSS(DM,SPV(29),Q)
C
C 5 AXIS CALCULATION
 4100 IF(MANTAX.NE.2.OR.NUMAX.NE.1)GOTO 4200
C  NEAR NORMAL SURFACE CONDITION
      IF(DABS(SAGL).LT.1.D-5)GOTO 4110
C  INTERSECTION CONDITION
      IF(DABS(DSIN(ALP)/SAGL).LE.1.D0)GOTO 4120
C  TOOL AXIS CAN NOT BE COMPUTED
 4110 IRET=MAX0(IRET,2)
      IF(.NOT.SSTEST) GOTO 4115
C
C  TOOL-AXIS CAN NOT BE COMPUTED.
      CALL AERR (22222,'GOP     ')
C
      CALL BAD(1,1,'SAGL',SAGL)
      CALL BAD(1,1,'CAGL',CAGL)
      CALL BAD(1,1,'VN  ',VN  )
      CALL BAD(1,1,'VM  ',VM  )
      CALL BAD(-1,1,'VQ  ',VQ  )
      CALL BAD(2,1,'SIND',SIND)
      CALL BAD(-2,1,'COSD',COSD)
      CALL BAD(1,1,'A   ',A   )
      CALL BAD(1,1,'B   ',B   )
      CALL BAD(-1,1,'W   ',W   )
C
 4115 SPV(37)=0.D0
      SPV(38)=0.D0
      SPV(39)=1.D0
      GOTO 5000
C
C  SIN OF DELTA
 4120 SIND(1)=-DSIN(ALP)/SAGL
      SIND(2)=SIND(1)
C
C  COSIN OF DELTA
      COSD(1)=DSQRT(1.D0-SIND(1)*SIND(1))
      COSD(2)=-COSD(1)
      GOTO 4280
C
C 4 AXIS CALCULATION
 4200 IF(MANTAX.NE.2.OR.NUMAX.NE.0)GOTO 5000
C  NEAR NORMAL SURFACE CONDITION
      IF(DABS(SAGL).LT.1.D-5)GOTO 4110
C  COMPUTE COMPONENTS OF 4 AXIS VECTOR IN NORMAL MOTION AND CROSS DIR
      VN=0.D0
      VM=0.D0
      VQ=0.D0
      DO 4210 I=1,3
      VN=VN+SPV(28+I)*AX4(I)
      VM=VM+DM(I)*AX4(I)
 4210 VQ=VQ+Q(I)*AX4(I)
C  COMPUTE SOLUTIONS FOR QUADRATIC EQUATION FOR COSIN(DELTA)
      B=CAGL/SAGL*VN*VQ
      A=VQ*VQ+VM*VM
C  4 AXIS VECTOR NEAR NORMAL SURFACE
      IF(A.LT.1.D-10)GOTO 4110
      W=A-(CAGL/SAGL*VN)**2
C  NO INTERSECTION
      IF(W.LT.0.D0)GOTO 4110
      W=VM*DSQRT(W)
      COSD(1)=(B+W)/A
      COSD(2)=(B-W)/A
      IF(DABS(COSD(1)).GT.1.D0)COSD(1)=COSD(2)
      IF(DABS(COSD(2)).GT.1.D0)COSD(2)=COSD(1)
      IF(DABS(COSD(2)).GT.1.D0)GOTO 4110
      SIND(1)=(CAGL/SAGL*VN-COSD(1)*VQ)/VM
      SIND(2)=(CAGL/SAGL*VN-COSD(2)*VQ)/VM
C  COMPUTE THE TWO POSSIBLE AXIS VECTORS AND THE SCALAR PRODUCT
C   WITH THE PREVIOUS AXIS VECTOR
 4280 DO 4285 J=1,2
      AL(J)=0.D0
      DO 4285 I=1,3
      AX(I,J)=SAGL*(Q(I)*COSD(J)+DM(I)*SIND(J))-CAGL*SPV(28+I)
      AL(J)=AL(J)+AX(I,J)*VTA(I)
 4285 CONTINUE
C  SELECTION OF THE NEW TOOL AXIS VECTOR WICH IS CLOSER TO THE OLD ONE
      J=1
      IF(AL(2).GT.AL(1))J=2
C  NEW AXIS DIRECTION
      DO 4290 I=1,3
      VTA(I)=AX(I,J)
 4290 SPV(36+I)=VTA(I)
      GOTO 5000
C PARALLEL AXIS CALCULATION (ALONG RULINGS)
C  SELECTION OF CROSS DIRECTION
 4300 IWO=4
      IF(IART.EQ.7)IWO=8
      DO 4310 I=1,3
 4310 Q(I)=SPV(IWO+I)
C  LENGTH OF CROSS DIRECTION
      VLL=DSQRT(Q(1)**2+Q(2)**2+Q(3)**2)
C  USE INVERTED LENGTH IF CROSS DIRECTION HAS TO BE INVERTED
C   NEW AXIS SHOULD HAVE THE SAME ORIENTATION AS THE OLD ONE
      IF(Q(1)*VTA(1)+Q(2)*VTA(2)+Q(3)*VTA(3).LT.0.D0)VLL=-VLL
C  NEW AXIS DIRECTION PLUS A SMALL AMOUNT IN ORDER TO AVOID JUMPING
      DO 4320 I=1,3
      VTA(I)=Q(I)/VLL+1.D-12*SPV(28+I)
 4320 SPV(36+I)=VTA(I)
C  STORING NEW POINT
 5000 DO 5090 I=1,3
C  PART SURFACE THICKNES IS USED
 5090 SPV(32+I)=SPV(I)+TH(IPS)*SPV(28+I)
C  END OF CALCULATION IF PLOTING
      IF (IART.LT.6) GOTO 7000
C  END OF CALCULATION IF NORMAL CONDITION
      IF(NORMAL.EQ.1)GOTO 7000
C  END OF CALCULATION IF ZERO CUTTER
      IF(CUTDAT(1).LT..001) GOTO 7000
C  CALCULATION OF VECTOR PERPENDICULAR TO SURFACE NORMAL AND TOOL AXIS
      CALL CROSS(SPV(29),SPV(37),VT0)
C  LENGTH OF CROSS VECTOR
      VLL=VT0(1)*VT0(1)+VT0(2)*VT0(2)+VT0(3)*VT0(3)
C  END OF CALCULATION IF SURFACE NORMAL AND TOOL AXIS ARE PARALLEL
      IF(VLL.LE.1.D-10) GOTO 7000
      VLL=DSQRT(VLL)
C  PROJECTION OF SURFACE NORMAL
      CALL CROSS(SPV(37),VT0,VT2)
C  NEW TOOL-TIP CALCULATION
C  IS RING CUTTER GIVEN ?
      IF(.NOT.RINGFG) GOTO 6070
C  STORE RING AS 10TH SEGMENT
      JCSEG=10
      CUTL(JCSEG)=0.D0
      CUTX(JCSEG)=RI(8)
      CUTY(JCSEG)=TLHITE(8)
      GOTO 6075
C   COMPUTATION OF THE COSIN OF THE ANGLE BETWEEN THE TOOL-AXIS
C   AND THE SURFACE NORMAL
 6070 CGAMMA=0.D0
      DO 6080 I=1,3
 6080 CGAMMA=SPV(36+I)*SPV(28+I)+CGAMMA
      DO 6081 I=1,NCSEG
      JCSEG=I
      IF(NLIOCI(I).EQ.1) GOTO 6081
      IF(COSAL(I).LE.CGAMMA) GOTO 6082
 6081 CONTINUE
 6082 CONTINUE
C
C NEW TOOL-TIP CALCULATION
 6075 DO 6090 I=1,3
 6090 SPV(32+I)=SPV(32+I)
     *                   +SPV(28+I)*CUTL(JCSEG)
     *                   +VT2(   I)*CUTX(JCSEG)/VLL
     *                   -SPV(36+I)*CUTY(JCSEG)
C  NO CURVATURE CALCULATION IF INCR=1
 7000 IF(INCR.EQ.1)GOTO 7005
C  COMPUTATION OF THE FUNDAMENTAL FORMS
      E=0.D0
      F=0.D0
      G=0.D0
      XL=0.D0
      XN=0.D0
      XM=0.D0
C  PROJECTION LENGTH
      PL=0.D0
      DO 7002 I=1,3
      SUPI=SPV(4+I)
      SVPI=SPV(8+I)
      E=SUPI*SUPI+E
      F=SUPI*SVPI+F
      G=SVPI*SVPI+G
      XNORM=SPV(28+I)
      XL=SPV(12+I)*XNORM+XL
      XM=SPV(16+I)*XNORM+XM
      XN=SPV(20+I)*XNORM+XN
C  PROJECTION LENGTH
 7002 PL=(SPV(32+I)-SPV(I))*SPV(28+I)+PL
      SPV(45)=E
      SPV(46)=F
      SPV(47)=G
      SPV(49)=XL
      SPV(50)=XM
      SPV(51)=XN
C  PROJECTION LENGTH
      SPV(52)=PL
C  READY IF ONLY PLOTING
      IF(IART.LE.5)GOTO 7005
C   LENGTH OF NORMAL
      XNL=DSQRT(E*G-F*F)+1.D-12
C   COMPUTATION OF THE MAIN CURVATURE DIRECTION
C   A=G*M-F*N
      A=G*SPV(50)-F*SPV(51)
C   B=G*L-E*N
      B=G*SPV(49)-E*SPV(51)
C   C=F*L-E*M
      C=F*SPV(49)-E*SPV(50)
      T1=B*B-4.D0*A*C
      T2=DSQRT(T1)
      T3=E*B-2.D0*F*C
      IF(T3.LT.0.D0)T2=-T2
      T4=DSQRT(2.D0*E*E*T1+2.D0*E*T3*T2)
      IF(DABS(T4).GT.0.D-20)GO TO 7060
C   NO MAIN CURVATURE DIRECTION FOUND
      SINALF=0.D0
      COSALF=1.D0
      GOTO 7070
 7060 SINALF=(T3+E*T2)/T4
      COSALF=(2.D0*C*XNL)/T4
 7070 WE=DSQRT(E)
      DO 7300 I=1,3
C  U-TANGENT
 7300 VT0(I)=SPV(4+I)/WE
C  VECTOR PERPENTICULAR TO U-TANGENT
      IF(MIRROR.NE.1)CALL CROSS(SPV(29),VT0,VT2)
      IF(MIRROR.EQ.1)CALL CROSS(VT0,SPV(29),VT2)
C  DIRECTION OF 1. MAIN CURVATURE
      DO 7310 I=1,3
 7310 SPV(40+I)=COSALF*VT0(I)+SINALF*VT2(I)
C  COMPUTATION OF 1. MAIN CURVATURE
      DV=E*SINALF
      DU= XNL*COSALF-F*SINALF
      SPV(40)=(SPV(49)*DU*DU+2.D0*SPV(50)*DU*DV+SPV(51)*DV*DV)/
     *        (E*DU*DU+2.D0*F*DU*DV+G*DV*DV)
C  COMPUTATION OF 2. MAIN CURVATURE
      DV=E*COSALF
      DU=-XNL*SINALF-F*COSALF
      SPV(44)=(SPV(49)*DU*DU+2.D0*SPV(50)*DU*DV+SPV(51)*DV*DV)/
     *        (E*DU*DU+2.D0*F*DU*DV+G*DV*DV)
C  RETURN ,IF COMPUTATION OF POSITIONS ONLY
 7005 IF(MOD.EQ.1)RETURN
C  IS THE TOOL AXIS TO BE CHANGED
      IF(NORMAL.NE.1.AND.MANTAX.NE.2)GOTO 7020
C  STORING TOOL AXIS
      DO 7010 I=1,3
      TAK(I)=TA(I)
 7010 VT0(I)=SPV(36+I)
      CALL TRANSM(TA,VT0,3,3,0)
C  STORING TOOL TIP
 7020 DO 7030 I=1,3
      TEK(I)=TE(I)
 7030 PT(I)=SPV(32+I)
      CALL TRANSM(TE,PT,2,3,0)
C   CL FILE OUTPUT
      IF(IART.NE.5)GOTO 7100
      IF(ITEST5.EQ.0.AND.ICL.EQ.2)GOTO 7100
      IF(ITEST5.EQ.0)GOTO 7050
C   1. POINT OD A 'GRID' CURVE
      ICL=3
      CALL ATAPE
      ICL=2
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IPEND(4)=ISEQNO
      CALL EWRITE(EXFILE,NR,PENDWN,J,IR)
      NR=0
      J=18
      CALL RECORD(ISEQNO)
      ILEIT(4)=ISEQNO
      LEIT(5)=MODF(IART)
      LEIT(7)=OBNAM1
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)
      ITEST5=0
      GOTO 7200
C   LAST POINT
 7050 CALL ATAPE
      ITEST5=1
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IPENU(4)=ISEQNO
      CALL EWRITE(EXFILE,NR,PENUP,J,IR)
      GOTO 7200
C
C  IS THE GLOBAL FEEDRAT TO BE WRITTEN
 7100 IF(IFEEDF.NE.1.OR.IART.LT.6)GOTO 7150
C
C  OUTPUT POINT
      ICL=3
      CALL ATAPE
      ICL=2
C
C  FEDRAT AFTER FIRST GOLOFT POINT
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IFEDR(4)=ISEQNO
      FEDRAT(5)=GLFEED
      CALL EWRITE(EXFILE,NR,FEDRAT,J,IR)
      NR=0
      J=18
      CALL RECORD(ISEQNO)
      ILEIT(4)=ISEQNO
      LEIT(5)=MODF(IART)
      LEIT(7)=OBNAM1
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)
      IFEEDF=0
      GOTO 7200
 7150 CALL ATAPE
 7200 IF(.NOT.SSTEST)RETURN
      CALL CFORM('0PKT.,NORM.:',DARRAY,1,12)
      CALL FCONV(SPV(1),DARRAY, 13,14,4)
      CALL FCONV(SPV(2),DARRAY, 28,14,4)
      CALL FCONV(SPV(3),DARRAY, 43,14,4)
      CALL FCONV(SPV(29),DARRAY,61,14,6)
      CALL FCONV(SPV(30),DARRAY,76,14,6)
      CALL FCONV(SPV(31),DARRAY,91,14,6)
      CALL CPRINT(DARRAY)
      CALL CFORM(' TE,TA     :   ',DARRAY,1,15)
      CALL FCONV(TE(1),DARRAY, 15,14,4)
      CALL FCONV(TE(2),DARRAY, 30,14,4)
      CALL FCONV(TE(3),DARRAY, 45,14,4)
      CALL FCONV(TA(1),DARRAY,63,14,6)
      CALL FCONV(TA(2),DARRAY,78,14,6)
      CALL FCONV(TA(3),DARRAY,93,14,6)
      CALL CPRINT(DARRAY)
      IF(INCR.EQ.1)RETURN
      CALL CFORM(' E,F,G,L,M,N:  ',DARRAY,1,15)
      CALL FCONV(E,DARRAY, 15,14,6)
      CALL FCONV(F,DARRAY, 30,14,6)
      CALL FCONV(G,DARRAY, 45,14,6)
      CALL FCONV(SPV(49),DARRAY,63,14,6)
      CALL FCONV(SPV(50),DARRAY,78,14,6)
      CALL FCONV(SPV(51),DARRAY,93,14,6)
      CALL CPRINT(DARRAY)
      IF(IART.LE.5)RETURN
      CALL CFORM(' SIN,COS,K,K:  ',DARRAY,1,15)
      CALL FCONV(SINALF,DARRAY, 15,14,6)
      CALL FCONV(COSALF,DARRAY, 30,14,6)
      CALL FCONV(SPV(40),DARRAY,45,14,6)
      CALL FCONV(SPV(44),DARRAY,63,14,6)
      CALL CPRINT(DARRAY)
      CALL CFORM(' TANGENT    :  ',DARRAY,1,15)
      CALL FCONV(SPV(41),DARRAY,15,14,6)
      CALL FCONV(SPV(42),DARRAY,30,14,6)
      CALL FCONV(SPV(43),DARRAY,45,14,6)
      CALL CPRINT(DARRAY)
      RETURN
      END
