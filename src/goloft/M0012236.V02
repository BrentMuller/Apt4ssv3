*
      SUBROUTINE GOLOVO(ADRESS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C...  1.MAIN CDE PACKAGE. INCLUDED IN EVERY PROGRAM IN THE SUBROUTINE
C...    LIBRARY.
C
      INCLUDE (TOTAL)
C
      INCLUDE (ISV)
C
      INCLUDE (FXCOR)
C
      INCLUDE (IFXCOR)
C
      INCLUDE (BLANKCOM)
C
      DOUBLE PRECISION HMOD,WORD
      INTEGER IWORD(2)
      EQUIVALENCE (WORD,IWORD(1))
C
      COMMON/PLGOL/ID(26)
C
C UVCONS: U-, V- CONSTANTS, GIVEN BY "UCONST,U" OR "VCONST,V"
      EQUIVALENCE (ID( 1),UVCONS)
C    UVA: START PARAMETER GIVEN BY "START,S"
      DIMENSION UVA(2)
      EQUIVALENCE (ID( 3),UVA(1))
C    UVE: END PARAMETER GIVEN BY "THRU,T"
      EQUIVALENCE (ID( 5),UVE   )
C    TOL: INCREMENTS BY "INCR,I", ERROR OF CHORD BY "CHORD,C"
      EQUIVALENCE (ID( 7),TOL   )
C     VL: LENGTH-PARAMETER GIVEN BY "LENGTH,L"
      EQUIVALENCE (ID( 9),VL    )
C     NU: AMOUNT OF INTERMEDIATE LINES IN DIRECTION    UCONST
      EQUIVALENCE (ID(11),NU    )
C     NV: AMOUNT OF INTERMEDIATE LINES IN DIRECTION    VCONST
      EQUIVALENCE (ID(12),NV    )
C IART:      IART = 1   PLOTFT/SCURV,.........,PARAM,....
C            IART = 2   PLOTFT/SCURV,.........,FLOW ,....
C            IART = 3   PLOTFT/SSURF,UCONST,U,...........
C            IART = 4   PLOTFT/SSURF,VCONST,V,...........
C            IART = 5   PLOTFT/SSURF,GRID,...............
C            IART = 6   GOLOFT/SSURF,UCONST,U,...........
C            IART = 7   GOLOFT/SSURF,VCONST,V,...........
      EQUIVALENCE (ID(13),IART  )
C INVERS: INVERT THE TRAVEL DIRECTION IF =1
      EQUIVALENCE (ID(14),INVERS)
C MIRROR: INVERT NORMAL DIRECTION IF =1
      EQUIVALENCE (ID(15),MIRROR)
C NORMAL: TAKE THE SURFACE NORMAL AS TOOL AXIS IF =1
      EQUIVALENCE (ID(16),NORMAL)
C   INCR: =1 IF "INCR,I", =0 IF "CHORD,C" GIVEN
C           CURVATURE CALCULATION NECESSARY IF NOT =1
      EQUIVALENCE (ID(17),INCR  )
C    IAT: IAT   = 0 AT NOT PROGRAMMED
C         IAT   = 1 AT   "AT,A",        = 2 AT   "AT,TO,PL1"
C         IAT   = 3 AT   "AT,ON,PL1,    = 4 AT   "AT,PAST,PL1
      EQUIVALENCE (ID(18),IAT   )
C  ISTRT: ISTRT = 0 START NOT PROGRAMMED
C         ISTRT = 1 AT   "START,A",     = 2 AT   "START,TO,PL1"
C         ISTRT = 3 AT   "START,ON,PL1, = 4 AT   "START,PAST,PL1
      EQUIVALENCE (ID(19),ISTRT )
C  ITHRU: ITHRU = 0 THRU NOT PROGRAMMED
C         ITHRU = 1 AT   "THRU,A",      = 2 AT   "THRU,TO,PL1"
C         ITHRU = 3 AT   "THRU,ON,PL1,  = 4 AT   "THRU,PAST,PL1
      EQUIVALENCE (ID(20),ITHRU )
C   IPL1: CF-BEGIN OF THE "AT" OR "START" PLANE IN THE ARRAY SSCAN
      EQUIVALENCE (ID(21),IPL1  )
C   IPL2: CF-BEGIN OF THE "THRU" PLANE IN THE ARRAY SSCAN
      EQUIVALENCE (ID(22),IPL2  )
C  ISCAN: FIRST FREE LOCATION IN SSCAN AFTER GOLOFT DATA
      EQUIVALENCE (ID(23),ISCAN )
C
      LOGICAL CKDEF
      DIMENSION JART(3),ADRESS(1)
      EQUIVALENCE(JART(1),IAT)
C
      CHARACTER*6 TEST,UCONST,VCONST,START,THRU,AT,TO,ON,PAST,PARAM,
     +            FLOW,RINCR,CHORD,RMIROR,RINVRS,RLENGT
      LOGICAL FIRST
      INTEGER BCDF
      SAVE FIRST,HMOD
C
      DATA UCONST/'UCONST'/,   VCONST/'VCONST'/,   START /'START '/
      DATA THRU  /'THRU  '/,   AT    /'AT    '/,   TO    /'TO    '/
      DATA ON    /'ON    '/,   PAST  /'PAST  '/,   PARAM /'PARAM '/
      DATA FLOW  /'FLOW  '/,   RINCR /'INCR  '/,   CHORD /'CHORD '/
      DATA RMIROR/'MIRROR'/,   RINVRS/'INVERS'/,   RLENGT/'LENGTH'/
      DATA RLW /21./
      DATA FIRST/.TRUE./
C
      IF (FIRST) THEN
        IWORD(1)=BCDF('TO  ')
        IWORD(2)=BCDF('    ')
        HMOD=WORD
        FIRST=.FALSE.
      ENDIF
C
      IF(CKDEF(ADRESS)) GOTO 170
C  INITIALIZE PART SURFACE
      IS=IPS
      CALL APT234(HMOD,ADRESS)
      UVA(1)=-1.D30
      UVE   = 1.D30
      TOL=.05
C  USE OF MAXDP/DPMAX,... AS DEFAULT
      VL=DPMAX
      NU=-1
      NV=-1
      DO 1 I=14,22
    1 ID(I)=0
      INCR=1
      IF(GAMMA.NE.0.D0.OR.NUMAX.NE.1)GOTO 5
      IF(DABS(ALP).EQ.0.D0)NORMAL=JTLFLG(IPS)
    5 IART=SSCAN(1)
      ISCAN=SSCAN(2)
      GOTO(45,45,20,20,30,10,10),IART
   10 CALL HOLFRM(SSCAN(ISCAN-3),TEST,1,6,NWD)
      IF (TEST.NE.RLENGT)GOTO 20
      VL=SSCAN(ISCAN-1)
      ISCAN=ISCAN-4
   20 UVCONS=SSCAN(9)
      ICUR=11
      GOTO 50
C
   30 ICUR=9
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      IF(TEST.NE.UCONST)GOTO 40
      ICUR=ICUR+2
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      NU=1
      IF(SSCAN(ICUR-1).NE.RLW)GOTO 40
      NU=DABS(SSCAN(ICUR))
      ICUR=ICUR+2
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
   40 IF(TEST.NE.VCONST)GOTO 140
      ICUR=ICUR+2
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      NV=1
      IF(SSCAN(ICUR-1).NE.RLW)GOTO 140
      NV=DABS(SSCAN(ICUR))
      ICUR=ICUR+2
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      GOTO 140
C
   45 ICUR=7
   50 IF(ICUR.GE.ISCAN)GOTO 160
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      IF(TEST.NE.AT)GOTO 60
      K=1
      GOTO 80
   60 IF(TEST.NE.START)GOTO 70
      K=2
      GOTO 80
   70 IF(TEST.NE.THRU)GOTO 120
      K=3
C
   80 ICUR=ICUR+2
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      JART(K)=1
      IF(SSCAN(ICUR-1).NE.RLW)GOTO 90
      UVA(1+K/3)=SSCAN(ICUR)
      ICUR=ICUR+2
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      GOTO 110
   90 IF(TEST.EQ.TO  )JART(K)=2
      IF(TEST.EQ.ON  )JART(K)=3
      IF(TEST.EQ.PAST)JART(K)=4
      ICUR=ICUR+2
      IF(CKDEF(SSCAN(ICUR)))GOTO 170
      ID(21+K/3)=ICUR
      ICUR=ICUR+5
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
  110 IF(K.EQ.2)GOTO 70
C
  120 IF(ICUR.GT.ISCAN)GOTO 160
      IF(TEST.EQ.PARAM.OR.TEST.EQ.FLOW) THEN
        ICUR=ICUR+2
        CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      ENDIF
      IF(TEST.NE.RINVRS)GOTO 130
      ICUR=ICUR+2
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      INVERS=1
  130 IF(TEST.NE.RMIROR)GOTO 140
      ICUR=ICUR+2
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)
      MIRROR=1
C
  140 IF(TEST.EQ.RINCR)GOTO 150
      IF(TEST.NE.CHORD)GOTO 160
      INCR=0
  150 TOL=SSCAN(ICUR+2)
C
  160 IF(IART.NE.5)GOTO 161
      IF(NU.NE.-1.OR.NV.NE.-1)GOTO 161
      NU=0
      NV=0
  161 CALL GOL(ADRESS)
      RETURN
  170 CALL AERR(5157,'GOLOVO  ')
      IAERR=1
      RETURN
      END
