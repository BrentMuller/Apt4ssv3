*
      SUBROUTINE GORETR (LSEG,U,V,SPV,J11,IRET)
C
C  RETRACT AND MOVEIN ROUTINE FOR >GOL<
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C  GOLOFT COMMON
      COMMON/PLGOL/ID(24),OBNAM1
C
C IART:      IART = 1   PLOTFT/SCURV,.........,PARAM,....
C            IART = 2   PLOTFT/SCURV,.........,FLOW ,....
C            IART = 3   PLOTFT/SSURF,UCONST,U,...........
C            IART = 4   PLOTFT/SSURF,VCONST,V,...........
C            IART = 5   PLOTFT/SSURF,GRID,...............
C            IART = 6   GOLOFT/SSURF,UCONST,U,...........
C            IART = 7   GOLOFT/SSURF,VCONST,V,...........
      EQUIVALENCE (ID(13),IART  )
C
C INVERS:    INVERSION OF THE POINT-SEQUENCE
      EQUIVALENCE (ID(14),INVERS)
C
C  BLANK-COMMON
      INCLUDE (BLANKCOM)
C
C   POINT STORAGE FOR TRANSFORMATION PURPOSE
      DOUBLE PRECISION PT(3),PT1(4)
      EQUIVALENCE(PT1(2),PT(1))
C
C   VECTOR STORAGE FOR TRANSFORMATION PURPOSE
      DOUBLE PRECISION VT(3),VT1(4),VT2(3)
      EQUIVALENCE(VT1(2),VT(1))
C
C  OUTPUT-ARRAY OF THE HEADER
      CHARACTER*8 CMODF(9)
      DOUBLE PRECISION OBNAME,MODF(9)
      DOUBLE PRECISION LEIT(9)
      INTEGER ILEIT(18),IMODF(2,9)
      EQUIVALENCE (LEIT(7),OBNAME),(LEIT(1),ILEIT(1))
      EQUIVALENCE (MODF(1),IMODF(1,1))
      DOUBLE PRECISION RAPID (5)
      INTEGER IRAPI(10)
      EQUIVALENCE (RAPID (1),IRAPI(1))
      DOUBLE PRECISION FEDRAT(5)
      INTEGER IFEDR(10)
      EQUIVALENCE (FEDRAT(1),IFEDR(1))
C
      INCLUDE (TOTAL)
      INCLUDE (FXCOR)
      INCLUDE (IFXCOR)
C
C  SYSTEM - INPUT/OUTPUT-NAMES
      INCLUDE (SYMFIL)
C
C  STORAGE OF POINTS
      DOUBLE PRECISION SPV(52)
C
C  MOTION DIRECTIONS (LATER RETRACT POINT), CLEAR POINT
      DOUBLE PRECISION DM(3) , CP(3)
C
      COMMON/CCLEAR/ DIRMOT(3,4)
     *              ,GOFEED(4)
     *              ,GLFEED
     *              ,REGLDA(2)
     *              ,IRETRO(4)
     *              ,IDIRMO(4)
     *              ,ICANIN(4)
     *              ,IFEEDF
C
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
      LOGICAL FIRST
      SAVE FIRST,ILEIT,IRAPI,IFEDR,MODF
C
      DATA PT1/19030000.0D0,3*.0D0/
      DATA VT1/20030000.0D0,3*.0D0/
      DATA CMODF/'PLOTKP  ','PLOTKF  ','PLOTFU  ',
     *   'PLOTFV  ','PLOTGR  ','GOFLU   ','GOFLV   ',
     *   'CLEARS  ','CLEARP  '/
      DATA ILEIT/0,0,Z4E,0,Z4E,6,Z4E,1,0,0,Z4E,0,0,0,Z4E,0,Z4E,0/
      DATA IRAPI/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/
      DATA IFEDR/0,0,Z4E,0,Z4E,2,Z4E,1,0,0/
      DATA FIRST/.TRUE./
C
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
C
C.... INITIALIZE CHARACTER ITEMS FOR EXFILE RECORD
C
      IF (FIRST) THEN
        DO 5 I=1,9
          IMODF(1,I)=BCDF(CMODF(I)(1:4))
          IMODF(2,I)=BCDF(CMODF(I)(5:8))
   5    CONTINUE
        ILEIT(1)=BCDF('CLDA')
        ILEIT(2)=BCDF('TA  ')
        IRAPI(1)=BCDF('RAPI')
        IRAPI(2)=BCDF('D   ')
        IFEDR(1)=BCDF('FEDR')
        IFEDR(2)=BCDF('AT  ')
        IBLNK   =BCDF('    ')
        IRAPI(9)=IBLNK
        IRAPI(10)=IBLNK
        FIRST=.FALSE.
      ENDIF
C
C  SET FLAG FOR GLOBAL FEED
      IFEEDF=0
C
C  SAVE CL-FLAG
      ICLS=ICL
C
C  RETRACT AND FEEDRAT ONLY FOR GOLOFT
      IF(IART.LE.5)GOTO 90
C
C  EXTRA MOTION IF FLAG IS ONE
      IF(IRETRO(LSEG).EQ.0)GOTO 90
C
C  COMPUTE THE POINT IF PLUNGE IN MOTION
      IF((INVERS.EQ.0.AND.(LSEG.EQ.1.OR.LSEG.EQ.3)).OR.
     *   (INVERS.EQ.1.AND.(LSEG.EQ.2.OR.LSEG.EQ.4)))
     *  CALL GOP (1,U,V,SPV,J11,IRET)
C
C  CALCULATION OF MOTION DIRECTION
      DO 9 I=1,3
    9 DM(I)=0.D0
      IF(IDIRMO(LSEG).NE.1)GOTO 20
      IWO=8
      IF(IART.EQ.7)IWO=4
      DO 10 I=1,3
   10 DM(I)=SPV(IWO+I)
C
C  LENGTH OF MOTION DIRECTION
      VLL=DSQRT(DM(1)*DM(1)+DM(2)*DM(2)+DM(3)*DM(3))
C  INVERT LENGTH IF MOTION DIRECTION IS INVERS
      IF(INVERS.EQ.1)VLL=-VLL
C  NORMALIZE MOTION DIRECTION
      DO 11 I=1,3
      DM(I)=DM(I)/VLL
   11 VT(I)=DM(I)
C
C  CALCULATE EXTRA MOTION
      DO 12 I=1,3
   12 DM(I)=DM(I)*DIRMOT(1,LSEG)+SPV(28+I)*DIRMOT(2,LSEG)
      GOTO 30
C
C  VECTOR MOTION
   20 IF(IDIRMO(LSEG).NE.2) GOTO 30
      DO 22 I=1,3
   22 DM(I)=DIRMOT(I,LSEG)
C
C  COMPUTE STEP IN OR RETRACT POINT
   30 VLL=1.D0
      IF(INVERS.EQ.1)VLL=-1.D0
      IF((INVERS.EQ.0.AND.(LSEG.EQ.1.OR.LSEG.EQ.3)).OR.
     *   (INVERS.EQ.1.AND.(LSEG.EQ.2.OR.LSEG.EQ.4)))VLL=-VLL
      DO 32 I=1,3
   32 DM(I)=SPV(32+I)+DM(I)*VLL
C
C  COMPUTE CLEARENCE POSITION
      IF(ICANIN(LSEG).EQ.0)GOTO 45
C
C  COMPUTE POINT DISTANCE
      VLL=COM(ICANIN(LSEG))*DM(1)+COM(ICANIN(LSEG)+1)*DM(2)
     *   +COM(ICANIN(LSEG)+2)*DM(3)-COM(ICANIN(LSEG)+3)
C
C  COMPUTE CLEAR POINT ON CLEAR PLANE
      DO 40 I=1,3
   40 CP(I)=DM(I)-COM(ICANIN(LSEG)+I-1)*VLL
   45 CONTINUE
C
C  DECISION IF STEP IN OR STEP OUT
      IF((INVERS.EQ.0.AND.(LSEG.EQ.2.OR.LSEG.EQ.4)).OR.
     *   (INVERS.EQ.1.AND.(LSEG.EQ.1.OR.LSEG.EQ.3)))GOTO 70
C
C  STEP IN ******************************
      IF(ICANIN(LSEG).EQ.0)GOTO 55
C
C   RAPID
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IRAPI(4)=ISEQNO
      CALL EWRITE(EXFILE,NR,RAPID,J,IR)
C
C   CLEAR POINT
      NR=0
      J=18
      CALL RECORD(ILEIT(4))
      ISEQNO=ILEIT(4)
      LEIT(5)=MODF(8)
      LEIT(7)=OBNAM1
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)
      ICL=3
C
C  STORING TOOL AXIS
      DO 50 I=1,3
      TAK(I)=TA(I)
   50 VT(I)=SPV(36+I)
      CALL TRANSM(TA,VT,3,3,0)
C
C  STORING TOOL TIP
      DO 51 I=1,3
      TEK(I)=TE(I)
   51 PT(I)=CP(I)
      CALL TRANSM(TE,PT,2,3,0)
      CALL ATAPE
C
C NEAR POINT ?
   55 IF(IDIRMO(LSEG).EQ.0) GOTO 90
C
C   RAPID
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IRAPI(4)=ISEQNO
      CALL EWRITE(EXFILE,NR,RAPID,J,IR)
C
C  NEAR POINT
      NR=0
      J=18
      CALL RECORD(ILEIT(4))
      ISEQNO=ILEIT(4)
      LEIT(5)=MODF(9)
      LEIT(7)=OBNAM1
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)
      ICL=3
C
C  STORING TOOL AXIS
      DO 61 I=1,3
      TAK(I)=TA(I)
   61 VT(I)=SPV(36+I)
      CALL TRANSM(TA,VT,3,3,0)
C
C  STORING TOOL TIP
      DO 62 I=1,3
      TEK(I)=TE(I)
   62 PT(I)=DM(I)
      CALL TRANSM(TE,PT,2,3,0)
      CALL ATAPE
C
C FEDRATE FOR NEAR POINT
      IF(GOFEED(LSEG).EQ.0.D0)GOTO 90
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IFEDR(4)=ISEQNO
      FEDRAT(5)=GOFEED(LSEG)
      CALL EWRITE(EXFILE,NR,FEDRAT,J,IR)
C
C  SET FLAG FOR GLOBAL FEEDRAT OUTPUT IN >GOP<
      IF(ICLS.EQ.2)IFEEDF=1
C
C  CONTINUE WITH NORMAL PATH
      GOTO 90
C
C  STEP OUT ********************************
C
C  NEAR POINT ?
   70 IF(IDIRMO(LSEG).EQ.0) GOTO 80
C
C FEDRATE FOR NEAR POINT
      IF(GOFEED(LSEG).EQ.0.D0) GOTO 75
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IFEDR(4)=ISEQNO
      FEDRAT(5)=GOFEED(LSEG)
      CALL EWRITE(EXFILE,NR,FEDRAT,J,IR)
C
C  NEAR POINT
   75 NR=0
      J=18
      CALL RECORD(ILEIT(4))
      ISEQNO=ILEIT(4)
      LEIT(5)=MODF(9)
      LEIT(7)=OBNAM1
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)
      ICL=3
C
C  STORING TOOL AXIS
      DO 76 I=1,3
      TAK(I)=TA(I)
   76 VT(I)=SPV(36+I)
      CALL TRANSM(TA,VT,3,3,0)
C
C  STORING TOOL TIP
      DO 77 I=1,3
      TEK(I)=TE(I)
   77 PT(I)=DM(I)
      CALL TRANSM(TE,PT,2,3,0)
      CALL ATAPE
C
C  FEDRAT FOR NORMAL GOLOFT
      IF(GOFEED(LSEG).EQ.0.D0.OR.LSEG.EQ.2.OR.LSEG.EQ.3)GOTO 80
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IFEDR(4)=ISEQNO
      FEDRAT(5)=GLFEED
      CALL EWRITE(EXFILE,NR,FEDRAT,J,IR)
C
C  CLEAR POINT
   80 IF(ICANIN(LSEG).EQ.0)GOTO 99
C
C   RAPID
      NR=0
      J=10
      CALL RECORD(ISEQNO)
      IRAPI(4)=ISEQNO
      CALL EWRITE(EXFILE,NR,RAPID,J,IR)
C
C   CLEAR POINT
      NR=0
      J=18
      CALL RECORD(ILEIT(4))
      ISEQNO=ILEIT(4)
      LEIT(5)=MODF(8)
      LEIT(7)=OBNAM1
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)
      ICL=3
C
C  STORING TOOL AXIS
      DO 81 I=1,3
      TAK(I)=TA(I)
   81 VT(I)=SPV(36+I)
      CALL TRANSM(TA,VT,3,3,0)
C
C  STORING TOOL TIP
      DO 82 I=1,3
      TEK(I)=TE(I)
   82 PT(I)=CP(I)
      CALL TRANSM(TE,PT,2,3,0)
      CALL ATAPE
      GOTO 99
C
C  OUTPUT OF THE HEADER
   90 IF((INVERS.EQ.0.AND.(LSEG.EQ.2.OR.LSEG.EQ.4)).OR.
     *   (INVERS.EQ.1.AND.(LSEG.EQ.1.OR.LSEG.EQ.3)))GOTO 99
      NR=0
      J=18
      CALL RECORD(ILEIT(4))
      ISEQNO=ILEIT(4)
      LEIT(5)=MODF(IART)
      LEIT(7)=OBNAM1
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)
      ICL=ICLS
C
   99 RETURN
      END
