*
      SUBROUTINE INTOUT(IOUT,PTT,NP,IORD,J11,J12,SNAME,SINDEX)
C
C   OUTPUT OF INTERSECTION ROUTINES
C
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
      DOUBLE PRECISION PTT(9,1)
C
C   OUTPUT FIELD FOR CANON
      CHARACTER*80 OF
C
      INCLUDE (TOTAL)
      INCLUDE (IFXCOR)
      INCLUDE (FXCOR)
      INCLUDE (SV)
C
C
C   COMMON FOR 2 SURFACE INTERSECTION
      COMMON/INTCOM/IKEEP(255)
C   EVALUATION VECTOR FOR PS AND DS
      DOUBLE PRECISION SPV(4,8,2)
      EQUIVALENCE (IKEEP(  1),SPV(1,1,1))
C   PATCH NUMBER FOR PS AND DS (SURFACE RECNO*1000 + PATCH NO)
      INTEGER IPNR(2)
      EQUIVALENCE (IKEEP(254),IPNR(1))
C
C SS - ARELEM - COMMON
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)
C
C  EXFILE INTRODUCTION
      DOUBLE PRECISION LEIT(9)
      INTEGER ILEIT(18)
      EQUIVALENCE (LEIT(1),ILEIT(1))
C
C     BLANK-COMMON
      INCLUDE (BLANKCOM)
C
C SYSTEM - I/O NAMES
      INCLUDE (SYMFIL)
C
C   POINT STORAGE FOR TRANSFORMATION PURPOSE
      DOUBLE PRECISION PT(3),PT1(4)
      EQUIVALENCE(PT1(2),PT(1))
C   VECTOR STORAGE FOR TRANSFORMATION PURPOSE
      DOUBLE PRECISION VN(3),VT1(4),VT2(3)
      EQUIVALENCE(VT1(2),VN(1))
C
C  MOTION DIRECTION
      DOUBLE PRECISION DM(3)
C
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
      LOGICAL FIRST
      SAVE FIRST,ILEIT
      DATA ILEIT/0,0,Z4E,0,Z4E,6,Z4E,1,0,0,Z4E,0,0,0,Z4E,0,Z4E,0/
      DATA PT1/19030000.0D0,3*.0D0/
      DATA VT1/20030000.0D0,3*.0D0/
      DATA FIRST/.TRUE./
C
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
C
C     INITIALISE CHARACTER ITEMS FOR OUTPUT TO EXFILE
C
      IF (FIRST) THEN
        ILEIT(1)=BCDF('CLDA')
        ILEIT(2)=BCDF('TA  ')
        ILEIT(9)=BCDF('INTS')
        ILEIT(10)=BCDF('EC  ')
        ILEIT(13)=BCDF('    ')
        ILEIT(14)=ILEIT(13)
        FIRST=.FALSE.
      ENDIF
                                                                        M0006899
C  TYPE OF OPERATION
      ITYPE=IOUT+1
C
C  START AND INCREMENTS FOR OUTPUT
      IP=1
      IF(IORD.LT.0)IP=NP
      IPD=1
      IF(IORD.LT.0)IPD=-1
C
C  PREPARATION FOR EXFILE OUTPUT
      IF(ITYPE.NE.1)GOTO 10
      NR=0
      J=18
      CALL RECORD(ISEQNO)
      ILEIT(4)=ISEQNO
C  NAME
      LEIT(7)=SNAME
      ILEIT(16)=SINDEX
      ILEIT(18)=29
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)
C
C  OUTPUT LOOP
   10 DO 50 I=1,NP
      GOTO (20,30,40),ITYPE
      RETURN
C
C   EXFILE OUTPUT ****************************************************
C
C  STORING INTERSECTION POINT
   20 DO 110 J=1,3
      TEK(J)=TE(J)
  110 PT(J)=PTT(J,IP)
      CALL TRANSM(TE,PT,2,3,0)
C
C LOAD PS PATCH IF NECESSARY
      IPATCH=PTT(9,IP)
      IPA=IPATCH-IPATCH/1000*1000
      IF(IPNR(1).NE.IPATCH)
     *CALL LODPCH(SSCAN(J12+1),BB(1,1),IIFLAG(1,1),IITOP(1,1,1),IPA,0)
      IPNR(1)=IPATCH
C
C STORE (U,V,P)-VALUES OF PS FOR ATAPE
      UU(1)=PTT(7,IP)
      VV(1)=PTT(8,IP)
      IPNUM(1)=IPA
C
C  EVALUATE POINT
      CALL CNSURF(UU(1),VV(1),BB(1,1),SPV(1,1,1),IIFLAG(1,1),2)
C
C STORE SURFACE POINT WITH NORMAL FOR ATAPE
      DO 120 J=1,3
      PT(J)=PTT(J,IP)
      VN(J)=SPV(J,8,1)
  120 CONTINUE
      CALL TRANSM(SP(1,IPS),PT,2,3,0)
      CALL TRANSM(SN(1,IPS),VN,3,3,0)
C
C LOAD DS PATCH IF NECESSARY
      IF(IIFLAG(1,2).LE.0)GOTO 124
      IPATCH=PTT(6,IP)
      IPA=IPATCH-IPATCH/1000*1000
      IF(IPNR(2).NE.IPATCH)
     *CALL LODPCH(SSCAN(J11+1),BB(1,2),IIFLAG(1,2),IITOP(1,1,2),IPA,0)
      IPNR(2)=IPATCH
C
C STORE (U,V,P)-VALUES OF PS FOR ATAPE
      UU(2)=PTT(4,IP)
      VV(2)=PTT(5,IP)
      IPNUM(2)=IPA
C
C  EVALUATE POINT
      CALL CNSURF(UU(2),VV(2),BB(1,2),SPV(1,1,2),IIFLAG(1,2),2)
      GOTO 126
C
C  PLANE DS
  124 UU(2)=0.D0
      VV(2)=0.D0
      IPNUM(2)=0
C
C STORE SURFACE POINT WITH NORMAL FOR ATAPE
  126 DO 130 J=1,3
      PT(J)=PTT(J,IP)
      IF(IIFLAG(1,2).LE.0)SPV(J,8,2)=BB(J,2)
      VN(J)=SPV(J,8,2)
  130 CONTINUE
      CALL TRANSM(SP(1,IDS),PT,2,3,0)
      CALL TRANSM(SN(1,IDS),VN,3,3,0)
C
C  NORMALIZE MOTION DIRECTION
      CALL CROSS(SPV(1,8,2),SPV(1,8,1),DM)
      VLL=DSQRT(DM(1)**2+DM(2)**2+DM(3)**2)
      DO 140 J=1,3
      DM(J)=DM(J)/VLL
  140 VN(J)=DM(J)
      CALL TRANSM(TI,VN,3,3,0)
C
C  STORE POSITION ON EXFILE
      ICL=2
      IF(I.EQ.NP)ICL=3
      CALL ATAPE
      GOTO 49
C
C   SSCAN OUTPUT *******************************************************
   30 CONTINUE
C   PS PATCH INDEX FOR POINT NAME
      IPA=PTT(9,IP)
      OF=' '
      CALL ICONV (IPA+10000,OF,1,5)
      CALL CFORM ('PT',OF,1,2)
      CALL CFORM ('(',OF,7,1)
C  POINT INDEX
      CALL ICONV (I,OF,8,4)
      CALL CFORM (')=POINT/',OF,12,8)
C  X,Y,Z
      CALL FCONV (PTT(1,IP),OF,20,16,6)
      CALL CFORM (',',OF,36,1)
      CALL FCONV (PTT(2,IP),OF,37,16,6)
      CALL CFORM (',',OF,53,1)
      CALL FCONV (PTT(3,IP),OF,54,16,6)
C  FILLER
      CALL CFORM ('  ',OF,70,2)
      GOTO 48
C
C   HEX OUTPUT *********************************************************
   40 CONTINUE
      OF=' HEX OUTPUT NOT SUPPORTED IN THIS VERSION'
      CALL CPRINT(OF)
      GOTO 30
C   PS PATCH INDEX FOR POINT NAME
C      IPA=PTT(9,IP)
C      CALL ICONV (IPA+10000,OF,1,5)
C      CALL CFORM ('PT',OF,0,2)
C      CALL CFORM ('  ',OF,6,2)
C  POINT INDEX
C      PP=I
C      CALL CFORM (PP,OF,8,8)
C  POINT TYPE AND LENGTH OF SSCANICAL FORM
C      CALL CFORM (1,OF,16,4)
C      CALL CFORM (6,OF,20,4)
C  FILLER
C      CALL CFORM (0.D0,OF,24,8)
C  X,Y,Z
C      CALL CFORM (PTT(1,IP),OF,32,8)
C      CALL CFORM (PTT(2,IP),OF,40,8)
C      CALL CFORM (PTT(3,IP),OF,48,8)
C  FILLER
C      CALL CFORM (0.D0,OF,56,8)
C      CALL CFORM (0.D0,OF,64,8)
C  COMMON OUTPUT OF SSCAN AND HEX
   48 CALL HOLFRM (SNAME,OF(73:80),1,6,N)
      CALL CFORM ('  ',OF,79,2)
      INDEX=SINDEX
      IF(INDEX.NE.0)CALL ICONV(INDEX,OF,79,2)
      CALL CPUNCH(OF,1)
C
C  POINT INDEX INCREMENTING
   49 IP=IP+IPD
   50 CONTINUE
C
C  END PUNCH OUTPUT FOR HEX FORMAT
C      IF(ITYPE.NE.3)GOTO 99
C      CALL CFORM ('(ENDPCH)',OF,1,8)
C      DO 60 I=8,65,8
C      CALL CFORM ('        ',OF,I,8)
C   60 CONTINUE
C      CALL CFORM (-1,OF,73,4)
C      CALL CFORM (-1,OF,77,4)
C      CALL CPUNCH(OF,1)
C
   99 RETURN
      END
