**** SOURCE FILE : M0012108.V03   ***
*
C
C              FORTRAN SUBROUTINE PRO028
C
C LINKAGE      SUBROUTINE PRO028(ERAS)
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    ALARM           SUBROUTINE    PRO026
C          SUBROUTINE    ARGCVT
C          SUBROUTINE    ARGGEN
C          SUBROUTINE    CALLZZ
C          INTEGER FCT.  GETTMP
C          INTEGER FCT.  MODE
C          SUBROUTINE    OPCODE
C          SUBROUTINE    PUTTMP
C          SUBROUTINE    REFGEN
C          SUBROUTINE    RESRVZ
C          SUBROUTINE    RLSLIN
C          INTEGER FCT.  SEARCH
C          SUBROUTINE    TWOARG
C
      SUBROUTINE PRO028(ERAS)
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE 'NAMETB.INC'
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION
C CNAMTB:      NAME TABLE OR DICTIONARY
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)
C TOP:         POINTER TO LAST STACK ENTRY
      EQUIVALENCE (TOP,STKLST(1))
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY
      EQUIVALENCE (ARGTOP,STKLST(2))
C STACK:       WORKING STACK
      EQUIVALENCE (STACK(1,1),STKLST(4))
C ARGSTK:      ARGUMENT STACK
      EQUIVALENCE (ARGSTK(1),STKLST(202))
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),NUMBER(2),TEMP(2),PERMID(2),VBL(2)
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'
      EQUIVALENCE (NUMBER(1),CODE(27))
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '
      EQUIVALENCE (TEMP(1),CODE(33))
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'
      EQUIVALENCE (PERMID(1),CODE(39))
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '
      EQUIVALENCE (VBL(1),CODE(61))
C
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR
C
      INCLUDE 'GMTY.INC'
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE
C
C        8.    NAME TABLE POINTERS TO BCD LITERALS
C
      COMMON/BCDPTR/BCDPTR
      DIMENSION BCDPTR(7)
C ERASB:       NAMTBL POINTER TO ALPHAMERIC LITERAL 'APTER'
      EQUIVALENCE (ERASB,BCDPTR(5))
C
C        9.    NAME TABLE POINTERS TO NUMBERS
C
      COMMON/NUMPTR/NUMPTR
      DIMENSION NUMPTR(12)
C ZEROPT:      NAMTBL POINTER TO '0.    '
      EQUIVALENCE (ZEROPT,NUMPTR(2))
C ONEPT:       NAMTBL POINTER TO '1.    '
      EQUIVALENCE (ONEPT,NUMPTR(4))
C
C       16.    LITERALS FOR I. L. OPERATION CODES
C
      COMMON/IL/IL
      DIMENSION IL(21)
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND
      EQUIVALENCE (REPL,IL(17))
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND
      EQUIVALENCE (MOVE,IL(19))
C
C       17.    MODE CODES
C
      COMMON/MODX/MODX
      DIMENSION MODX(32)
C VECTOR:      MODE CODE (20) FOR VECTOR
      EQUIVALENCE (VECTOR,MODX(20))
C REAL:        MODE CODE (24) FOR A SCALAR
      EQUIVALENCE (REAL,MODX(21))
C
C       27.    OPERAND MODIFIERS
C
      COMMON/OPMOD/OPMOD
      DIMENSION OPMOD(6)
C NOUGHT:      CONTAINS OPERAND TYPE 0
      EQUIVALENCE (NOUGHT,OPMOD(1))
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5
      EQUIVALENCE (QUIDLR,OPMOD(6))
C
C       28.    OPERAND MODIFIERS
C
      COMMON/SUBLST/SUBLST
      DIMENSION SUBLST(136)
C TLAXIS:      NAMTBL POINTER FOR XECUTION SUBROUTINE TLAXIS
      EQUIVALENCE (TLAXIS,SUBLST(135))
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C MODHLF:      NORMAL MODE CODE LIMIT 500
      EQUIVALENCE (MODHLF,MODULI(2))
C*
      LOGICAL ERAS
      DIMENSION LENGTH(22)
      CHARACTER HCS*6,HPS*2
      DATA HCS/'CS    '/,HPS/'PS'/
      DATA LENGTH/7,5,5,3,2,1,1,1,1,4,2,6,4,4,2,4,3,4,3,3,2,2/
C**
C     PREPARE MODES AND PERMANENT IDENTIFIERS OF THE ARGSTK ARGUMENTS
C          AND MOVE THEM TO STACK(2,TOP+1) AND HIGHER ADDR.
C
      external alarm
      IF(ARGTOP.LT.1)GOTO 4100
      TP=TOP+1
      STACK(2,TP)=-1
      DO 40 ERRPT=1,ARGTOP
      NN=0
      J=ARGSTK(ERRPT)
      IF(J.GT.NAMMAX)GOTO 20
      CLASS=NAMTBL(J)/MODULO*MODULO
      MM=NAMTBL(J)-CLASS
      IF(MM.GT.MODHLF)MM=MM-MODHLF
      IF(CLASS.NE.PERMID(1))GOTO 10
      NN=50
      MM=MM+NN
      GOTO 30
   10 IF(CLASS.EQ.VBL(1).OR.CLASS.EQ.TEMP(1))GOTO 30
      IF(CLASS.NE.NUMBER(1))GOTO 4300
   20 MM=REAL
   30 TP=TP+1
      STACK(1,TP)=MM-NN
   40 STACK(2,TP)=PMIDTB(MM)
C
C
C     SEARCH FOR THE PRODUCTION NUMBER AND BRANCH
C
      MM=ARGTOP
      LL=MM
      NN=GEOLOC(49)
      LPROD=0
      II=0
   50 ERRPT=LL
      TP2=TP*2
      PROD=SEARCH(STACK,TP2,GEOMTB(NN),ERRPT)
C
C                   ERROR DIAGNOSTICS
C
      IF(PROD.EQ.200)GOTO 4400
      IF((LL-ERRPT).GT.LENGTH(PROD))GOTO 4500
      IF(PROD.LT.6)GOTO 90
      IF(ERRPT.NE.0)GOTO 4200
C
C                   PRODUCTION NUMBERS
C             1    2    3    4    5    6    7    8    9   10   11
   90 GOTO( 100, 200, 200, 400, 500, 600, 700, 800, 800,1000,1000,
C            12   13   14   15   16   17   18   19   20   21   22
     *     1200,1300,1300,1500,2200,2200,2200,2200,2000,2100,2200),PROD
C                                                          PS
C                PRODUCTION 1, 2, 3, 4  -->  TLAXIS/ATANGL,DS,.......
C
  100 ARGSTK(ARGTOP-5)=ARGSTK(ARGTOP-6)
      ARGSTK(ARGTOP-6)=ARGSTK(ARGTOP-2)
      ARGSTK(ARGTOP-3)=ARGSTK(ARGTOP-1)
      ARGSTK(ARGTOP-2)=ARGSTK(ARGTOP  )
      ARGTOP=ARGTOP-2
      MM=ARGTOP
      GOTO 410
C
  200 JJ=ARGSTK(ARGTOP-2)
      ARGSTK(ARGTOP-2)=ARGSTK(ARGTOP-4)
      ARGSTK(ARGTOP-3)=ARGSTK(ARGTOP-4)
      ARGSTK(ARGTOP-4)=JJ
      GOTO 410
C
  400 ARGTOP=ARGTOP+2
      ARGSTK(ARGTOP)=ARGSTK(ARGTOP-2)
      ARGSTK(ARGTOP-1)=ARGSTK(ARGTOP-3)
      ARGSTK(ARGTOP-2)=ZEROPT
      ARGSTK(ARGTOP-3)=ZEROPT
  410 MM=ARGTOP
      IF(CNAMTB(ARGSTK(MM-1)).EQ.HCS)GOTO 4600
      LPROD=PROD
      IF(ERRPT.EQ.0)GOTO 3000
      JJ=LENGTH(PROD)-1
      STACK(2,TP-JJ)=STACK(2,TP)
      TP=TP-JJ
      LL=LL-JJ
      GOTO 50
C
C            PRODUCTION 5    TLAXIS/<REAL>,<REAL>,.......,<REAL>
C
  500 IF(ARGTOP-3)3000,510,530
  510 ERRPT=1
      IF(MODE(ARGSTK(ERRPT)).NE.REAL)GOTO 4300
      KK=GETTMP(VECTOR)
      CALL OPCODE(MOVE)
      CALL TWOARG(NOUGHT,KK)
      DO 520 I=1,MM
  520 CALL ARGCVT(ARGSTK(MM+1-I))
      CALL RLSLIN
      CALL REFGEN(3,KK)
      CALL PUTTMP(VECTOR)
      PROD=7
      GOTO 3900
C
  530 IF(ARGTOP.LT.10)GOTO 540
      CALL ALARM(2052,9-ARGTOP,4,'PRO028  ')
      MM=9
  540 DO 550 ERRPT=4,MM
      IF(MODE(ARGSTK(ERRPT)).NE.REAL)GOTO 4300
  550 CONTINUE
      GOTO 3000
C                 PRODUCTION 6  -->  TLAXIS/ LAST
C                 PRODUCTION 7  -->  TLAXIS/<VECTOR>
C                 PRODUCTION 8  -->  TLAXIS/NORMDS ; TLAXIS/NORMPS
C                 PRODUCTION 9  -->  TLAXIS/ 1.
  600 KK=ONEPT
      PROD=9
      GOTO 3900
  700 MM=3
  800 KK=ARGSTK(ARGTOP)
      IF(CNAMTB(KK)(5:6).EQ.HPS)PROD=6
      GOTO 3900
C
C                 PRODUCTION 10 -->  TLAXIS/PARLEL,<REAL>,<REAL>,<REAL>
C                 PRODUCTION 11 -->  TLAXIS/PARLEL,<REAL>
C
 1000 GOTO 3000
C                                                          PS
C                PRODUCTION 12,13,14,15  ->  TLAXIS/PARLEL,DS,.......
C
 1200 ARGSTK(ARGTOP-4)=ARGSTK(ARGTOP-3)
      ARGSTK(ARGTOP-3)=ARGSTK(ARGTOP-1)
      ARGSTK(ARGTOP-2)=ARGSTK(ARGTOP  )
      ARGTOP=ARGTOP-2
      GOTO 1520
C
 1300 ARGSTK(ARGTOP-2)=ARGSTK(ARGTOP-3)
      GOTO 1520
C
 1500 ARGTOP=ARGTOP+2
      ARGSTK(ARGTOP)=ARGSTK(ARGTOP-2)
      ARGSTK(ARGTOP-1)=ARGSTK(ARGTOP-3)
      ARGSTK(ARGTOP-2)=ZEROPT
      ARGSTK(ARGTOP-3)=ZEROPT
 1520 MM=ARGTOP
      IF(CNAMTB(ARGSTK(MM-1)).EQ.HCS)GOTO 4600
      GOTO 3000
C                                                          ..,MOTDIR,..
C                PRODUCTION 16 BIS 22  -->  TLAXIS/ATANGL,...,CUTANG,..
C                                                          ..,PERPTO,..
 2000 II=ARGSTK(1)
      I=3
      DO 2010 JJ=I,ARGTOP
 2010 ARGSTK(JJ-2)=ARGSTK(JJ)
      ARGTOP=ARGTOP-2
      GOTO 2200
C
 2100 II=ARGSTK(1)
      I=2
 2110 DO 2120 JJ=I,ARGTOP
 2120 ARGSTK(JJ-1)=ARGSTK(JJ)
      ARGTOP=ARGTOP-1
C
 2200 MM=ARGTOP
      IF(LPROD.EQ.0)GOTO 4600
      PROD=100*LPROD+PROD
C
C      I. L. OUTPUT
C
 3000 IF(ERAS)GOTO 3100
      CALL RESRVZ(ERASB,0,9,1)
      ERAS=.TRUE.
C
 3100 CALL OPCODE(MOVE)
      CALL TWOARG(NOUGHT,ERASB)
      CALL ARGGEN
      CALL RLSLIN
      IF(II.EQ.0)GOTO 3800
C
C          REPLACE FOR PLANE, LINE OR VECTOR DEFINITION
C
      CALL OPCODE(REPL)
      CALL ONEARG(3)
      CALL TWOARG(-6,ERASB)
      CALL ARGCVT(II)
      CALL RLSLIN
      MM=MM+3
C
 3800 KK=ERASB
 3900 CALL CALLZZ(TLAXIS)
      CALL TWOARG(QUIDLR,MM)
      CALL TWOARG(QUIDLR,PROD)
      CALL ARGCVT(KK)
      CALL RLSLIN
C
 4000 RETURN
C
 4100 ERRPT=1-TOP
 4200 CALL ALARM(2052,-ERRPT,8,'PRO028  ')
      GOTO 4000
 4300 CALL ALARM(2021,-ERRPT,8,'PRO028  ')
      GOTO 4000
 4400 IF(ERRPT.LE.0)ERRPT=1
      CALL ALARM(2001,-ERRPT,8,'PRO028  ')
      GOTO 4000
 4500 ERRPT=ERRPT+1
      GOTO 4200
 4600 ERRPT=ARGTOP-1
      GOTO 4300
C
      END
