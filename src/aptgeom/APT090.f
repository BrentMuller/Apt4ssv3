**** SOURCE FILE : M0002774.V05   ***
*
C
C...  FORTRAN SUBROUTINE               APT090    3/69      SR
C
C              FORTRAN SUBROUTINE APT090
C
C PURPOSE      TO GENERATE THE EXTERNAL CANONICAL FORM FOR A SURFACE
C              DEFINED AS A PATERN  AND WRITE IT ON PERIPHERAL STORAGE
C
C LINKAGE      CALL APT090(MM,RESULT,KLL,ARG1,ARG2,ARG3,ARG4,ARG5)
C
C ARGUMENTS    MM      BCANON INDEX OF ARRAY IN WHICH GENERATED
C                      EXTERNAL CANONICAL FORM IS TO BE STORED
C              RESULT  ARRAY CONTAINING THE INTERNAL CANONICAL FORM OF
C                      THE SURFACE
C              KLL     PATERN  SUBTYPE CODE AND DEFINITION FORMAT
C                      INDICATOR, K = SUBTYPE CODE, LL = DEFINITION
C                      FORMAT NUMBER
C                      K=1,LINEAR,   =2,CIRCULAR,  =3,GRID,
C                       =4,RANDOM,   =5,PERIPHERAL
C              ARG1    ONE-TO-ONE REPRESENTATION IN E.L. EQUIVALENT
C              THROUGH OF PATERN DEFINITION STATEMENT AS SPECIFIED BY
C              ARG5    PART PROGRAM EXCEPT FOR RANDOM PATERN WHERE
C                      ARG1 = NUMBER OF POINTS AND/OR PATERNS SPECIFIED
C                      IN DEFINITION STATEMENT
C
C SUBSIDIARIES TYPE                ENTRY
C
C              SUBROUTINE          APT094
C              LOGICAL FUNCTION    CKDEF
C              SUBROUTINE          ERROR
C              SUBROUTINE          UNDEF
C              SUBROUTINE          VNORM
C
      SUBROUTINE APT090 (MM, RESULT, KLL, ARG1, ARG2, ARG3, ARG4, ARG5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      INCLUDE 'BLANKCOM.INC'
C
      DIMENSION ARG1(7),ARG2(3),ARG4(50),ARG5(50),BARG(110),DIRVEC(3),
     1           RESULT(2)
      LOGICAL  CKDEF
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'KNUMBR.INC'
C
      CHARACTER*8 AT,C,PAT,TEST
C
      DATA  AT, C/'AT      ','CLW     '/
      DATA PAT/'ZPATRN  '/
      DATA D360 / 360.D0/
C
C     BRANCH ON PATERN SUBTYPE CODE
      K=KLL/100
      GO TO (100,200,300,400,300),K
C
C     LINEAR PATERN , STORE SUBTYPE CODE
  100 BCANON(MM+1)=Z1
C
C     C.F. EXISTS FOR STARTING POINT
      IF (CKDEF(ARG1)) GO TO 1300
C     YES, STORE COORDS. OF STARTING POINT
      DO 101 I = 1,3
      LL = MM + 3 + I
  101 BCANON(LL) = ARG1(I)
C     BRANCH ON DEFINITION FORMAT NUMBER
      K=KLL-100
      GO TO (105, 110, 125), K
C     DEFN. BY STARTING,ENDING AND NO. OF PTS.,C.F. EXISTS FOR END PT.
  105 IF (CKDEF(ARG2)) GO TO 1300
C     YES, COMPUTE DIFFERENCE VECTOR,NORMALIZE AND STORE
      DO 106  I = 1,3
  106 DIRVEC(I) = ARG2(I) - ARG1(I)
      CALL VNORM (DIRVEC ,DIRVEC)
      GO TO 112
C     DEFN. BY POINT, VECTOR AND NO. OF PTS.,C.F. EXISTS FOR VECTOR
  110 IF (CKDEF(ARG2)) GO TO 1300
      CALL VNORM (ARG2 ,DIRVEC)
  112 IF (IER) 116,116,114
  114 CALL ERROR (65,'APT090  ')
      GO TO 1300
  116 DO 117  I = 1,3
      LL = MM+6+I
  117 BCANON(LL) = DIRVEC(I)
      IF (ARG3)    118,118,120
  118 CALL ERROR (66,'APT090  ')
      GO TO 1300
C     STORE NO.OF POINTS IN PATERN
  120 BCANON(MM+3)=ARG3
C     COMPUTE INCREMENTAL SPACING AND SET UP INCR LIST
C
      SINC=VTEM/(ARG3-Z1)
      IF(K.EQ.K2)SINC=VTEM
      NINC=BCANON(MM+3)+Z1EM5-Z1
      DO 122  I = 1,NINC
      LL=MM+9+I
  122 BCANON(LL) = SINC
C     SAVE FINAL BCANON INDEX
      NECF = LL
C     SIZE OF E.C.F.= FINAL BCANON INDEX MINUS INITIAL BCANON INDEX
C     STORE IN E.C.F. AND I.C.F.
      SIZE=NECF-MM
      BCANON(MM+2)=SIZE
      RESULT(2)=SIZE+Z1
      GO TO 1200
C     DEFN. BY POINT, VECTOR AND INCR. LIST, C.F. EXISTS FOR VECTOR
  125 IF (CKDEF(ARG2)) GO TO 1300
      CALL VNORM (ARG2, DIRVEC)
  127 IF (IER)  130,130,128
  128 CALL ERROR(65,'APT090  ')
      GO TO 1300
C     STORE COMPONENTS OF NORMALIZED VECTOR AND PROCESS INCR LIST DATA
  130 DO 132  I = 1,3
      LL = MM+6+I
  132 BCANON(LL) = DIRVEC(I)
C
C     INITIALIZE BCANON INDEX FOR STORAGE OF INCREMENTS
      J = MM + K10
      GO TO 1010
C     RETURN FROM INCR LIST PROCESSING
C     COMPUTE AND STORE SIZE OF E.C.F. AND NO. OF PTS.
  135 SIZE=NECF-MM
      BCANON(MM+2)=SIZE
      RESULT(2)=SIZE+Z1
      BCANON(MM+3)=SIZE-8.
      GO TO 1200
C     CIRCULAR PATERN, STORE SUBTYPE CODE
  200 BCANON(MM+1)=Z2
C     C.F. EXISTS FOR SPECIFIED CIRCLE
      IF (CKDEF(ARG1)) GO TO 1300
C     YES, STORE COORDS. OF CIRCLE CENTER AND CIRCLE RADIUS
      DO 202  I = 1,3
      LL= MM+3+I
  202 BCANON(LL) = ARG1(I)
      IF(ZFLAG)GO TO 201
      BCANON(MM+6)=Z0
      IF(REF(1,3).EQ.Z0)GO TO 201
      BCANON(MM+6)=(REF(1,4)-REF(1,1)*BCANON(MM+4)-REF(1,2)*
     /   BCANON(MM+5))/REF(1,3)
  201 BCANON(MM+7)=ARG1(7)
C
C     STORE STARTING ANGLE - IF GREATER THAN 360, REDUCE MOD 360,
C     IF NEGATIVE, CHANGE TO POSITIVE
C
      BCANON(MM+8) = ARG2(1)
      IF(DABS(BCANON(MM+8)).LT.D360)GO TO 206
  204 BCANON(MM+8)=DMOD(BCANON(MM+8),D360)
  206 IF (BCANON(MM+8)) 208,210,210
  208 BCANON(MM+8)=BCANON(MM+8)+D360
C
C     BRANCH ON DEFN FORMAT NUMBER
  210 K=KLL-200
      GO TO (215 ,250),K
C
C     DEFN BY STARTING AND ENDING ANGLES AND NUMBER OF PTS.
C     STORE DIRECTION OF GENERATION,  +1.0 FOR CCLW, -1.0 FOR CLW
C
  215 CALL HOLFRM(ARG4(1),TEST,1,8,NWD)
      IF (TEST .EQ. C) GO TO 217
C     ASSUME CCLW
      BCANON(MM+9)=Z1
      GO TO 218
  217 BCANON(MM+9)=ZM1
C
C     USE   SPECIFIED ENDING ANGLE AS EQUIV. POSITIVE ANGLE, MOD 360
  218 ENANG = ARG3
      IF(DABS(ENANG).LT.D360)GO TO 222
  220 ENANG=DMOD(ENANG,D360)
  222 IF (ENANG) 224,226,226
  224 ENANG=ENANG+D360
C
C     ADJUST COMPUTED DIFFERENCE BETWEEN ENDING AND STARTING ANGLES
C     TO BE COMPATIBLE WITH SPECIFIED DIRECTION OF GENERATION
C
  226 DIFF = ENANG - BCANON(MM+8)
      IF (DIFF) 228,232,234
  228 IF(BCANON(MM+9).EQ.Z1)GO TO 236
  230 DIFF=DABS(DIFF)
      GO TO 238
  232 DIFF=D360
      GO TO 238
  234 IF(BCANON(MM+9).EQ.Z1)GO TO 238
  236 DIFF=D360-DABS(DIFF)
C
  238 IF (ARG5(1)) 240,242,242
  240 CALL ERROR (66,'APT090  ')
      GO TO 1300
C     STORE NUMBER OF PTS. IN PATERN
  242 BCANON(MM+3)=ARG5(1)
C
C     COMPUTE INCREMENTAL SPACING AND SET UP INCR LIST
C
      SINC=DIFF/(ARG5(1)-Z1)
      NINC=BCANON(MM+3)+Z1EM5-Z1
      DO 244 I = 1,NINC
      LL = MM+9+I
  244 BCANON(LL) = SINC
C     SAVE FINAL BCANON INDEX
      NECF = LL
C     SIZE OF E.C.F. = FINAL INDEX MINUS INITIAL INDEX
C     STORE IN E.C.F. AND I.C.F.
      SIZE=NECF-MM
      BCANON(MM+2)=SIZE
      RESULT(2)=SIZE+Z1
      GO TO 1200
C
C     DEFN BY STARTING ANGLE AND INCREMENT LIST
C     STORE DIRECTION OF GENERATION, +1.0 FOR CCLW, -1.0 FOR CLW
C
  250 CALL HOLFRM(ARG3,TEST,1,8,NWD)
      IF (TEST .EQ. C) GO TO 252
C     ASSUME CCLW
      BCANON(MM+9)=Z1
      GO TO 254
  252 BCANON(MM+9)=ZM1
C     INITIALIZE BCANON INDEX FOR STORAGE OF INCREMENTS
  254 J= MM + K10
      GO TO 1020
C
C     RETURN FROM INCR LIST PROCESSING
C     COMPUTE AND STORE SIZE OF E.C.F. AND NO. OF PTS.
  255 SIZE=NECF-MM
      BCANON(MM+2)=SIZE
      RESULT(2)=SIZE+Z1
      BCANON(MM+3)=SIZE-8.
      GO TO 1200
C     GRID OR PERIPHERAL PATERN STORE RELATED SUBTYPE CODE
  300 BCANON(MM+1)=Z3
      IF(K.EQ.K5)BCANON(MM+1)=Z5
C
C     C.F. EXISTS FOR FIRST PATERN
  302 IF (CKDEF(ARG1)) GO TO 1300
C     YES, RETRIEVE E.C.F. AND STORE IN BCANON
C
      CALL APT094(2, ARG1, BCANON(MM+3))
C     RETRIEVAL O.K.
      IF (CKDEF(ARG1)) GO TO 1300
C
C     YES - PATERN IS LINEAR
      IF(BCANON(MM+4).EQ.Z1)GO TO 306
  304 CALL ERROR(67,'APT090  ')
      GO TO 1300
C     COMPUTE BCANON INDEX FOR STORAGE OF SECOND PATERN,INITIAL VALUE=M
  306 ICVT=BCANON(MM+6)+Z1EM5
      M=MM+ICVT+K12
C     BRANCH ON DEFINITION FORMAT INDICATOR
      I=KLL-(K*100)
      GO TO (310,320,340), I
C     DEFINITION BY TWO LINEAR PATERNS, C.F. EXISTS FOR SECOND PATERN
  310 IF (CKDEF(ARG2)) GO TO 1300
C     YES - RETRIEVE AND STORE IN BCANON
      SAVE=BCANON(M-1)
      CALL APT094(2,ARG2,BCANON(M-1))
      BCANON(M-1)=SAVE
      IF (CKDEF(ARG2)) GO TO 1300
C     IS THIS PATERN LINEAR
      IF(BCANON(M).EQ.Z1)GO TO 314
  312 CALL ERROR(67,'APT090  ')
      GO TO 1300
C     YES, TRANSLATE ORIGIN OF SECOND PATERN TO THAT OF FIRST PATERN
  314 DO 316  I = 1,3
      JJ = M+2+I
      LL = MM+6+I
  316 BCANON(JJ) = BCANON(LL)
C
C     COMPUTE AND STORE E.C.F. SIZE
      SIZE=BCANON(MM+6)+BCANON(M+2)+19.
      BCANON(MM+2)=SIZE
      RESULT(2)=SIZE+Z1
      GO TO 357
C     DEFINITION BY PATERN,VECTOR, AND NO. OF ROWS OR COLUMNS
  320 IF (CKDEF(ARG2)) GO TO 1300
      CALL VNORM (ARG2 , DIRVEC)
      IF (IER) 324, 324, 322
  322 CALL ERROR(65,'APT090  ')
      GO TO 1300
C     SET SUBTYPE CODE = 1 FOR SECOND PATERN AND SET ORIGIN SAME AS
C     THAT OF FIRST PATERN, STORE COMPONENTS OF NORMALIZED VECTOR
  324 BCANON(M)=Z1
      DO 326  I = 1,3
      JJ = M+2+I
      LL = MM+6+I
  326 BCANON(JJ) = BCANON(LL)
      DO 328  I = 1,3
      JJ = M+5+I
  328 BCANON(JJ) = DIRVEC(I)
      IF (ARG3) 330,330,332
  330 CALL ERROR(63,'APT090  ')
      GO TO 1300
C     STORE NO. OF PTS. IN PATERN
  332 BCANON(M+2)=ARG3
C        COMPUTE AND STORE ECF SIZE FOR SECOND PATERN
      BCANON(M+1)=BCANON(M+2)+8.
C     COMPUTE INCREMENTAL SPACING AND SET UP INCR LIST
      SINC=VTEM
      NINC=BCANON(M+2)+Z1EM5-Z1
      DO 334  I = 1,NINC
      JJ = M+8+I
  334 BCANON(JJ) = SINC
C     SAVE FINAL BCANON INDEX
      NECF = JJ
C     COMPUTE AND STORE E.C.F. SIZE
      SIZE=NECF-MM
      BCANON(MM+2)=SIZE
      RESULT(2)=SIZE+Z1
      GO TO 357
C     DEFN. BY PATERN, VECTOR, AND INCR LIST
  340 IF (CKDEF(ARG2)) GO TO 1300
      CALL VNORM (ARG2,DIRVEC)
      IF (IER) 344,344,342
  342 CALL ERROR(65,'APT090  ')
      GO TO 1300
C     STORE FOR SECOND PATERN - SUBTYPE CODE,COORDS. OF ORIGIN AND
C     COMPONENTS OF NORMALIZED VECTOR
  344 BCANON(M)=Z1
      DO 346 I = 1,3
      JJ = M+2+I
      LL = MM+6+I
  346 BCANON(JJ) = BCANON(LL)
      DO 348 I = 1,3
      JJ = M+5+I
  348 BCANON(JJ) = DIRVEC(I)
C     INITIALIZE BCANON INDEX FOR STORAGE OF INCREMENTS
      J = M + 9
      GO TO 1010
C     RETURN FROM INCR LIST PROCESSING - COMPUTE AND STORE NO. OF PTS.
C     AND SIZE OF SECOND PATERN
  355 SIZE=NECF-MM
      BCANON(M+2)=SIZE-BCANON(MM+6)-19.
      BCANON(M+1)=BCANON(M+2)+8.
C     STORE SIZE OF E.C.F.
      BCANON(MM+2)=SIZE
      RESULT(2)=SIZE+Z1
C     COMPUTE NO. OF PTS.IN PATERN BEING DEFINED BASED ON
C     PATERN SUBTYPE
  357 IF(BCANON(MM+1).EQ.Z5)GO TO 359
C     PATERN IS GRID
      BCANON(MM+3)=BCANON(MM+6)*BCANON(M+2)
      GO TO 1200
C
C     PATERN IS PERIPHERAL
  359 BCANON(MM+3)=Z2*(BCANON(MM+6)+BCANON(M+2))-4.
      GO TO 1200
C
C     RANDOM PATERN, STORE SUBTYPE CODE
C
  400 BCANON(MM+1)=4.0
C        CHECK FOR DEFINITION OF REQUIRED POINTS AND PATTERNS
      IF(BCANON(MM).LT.0.0)GO TO 1300
C     INITIALIZE COUNTER FOR NUMBER OF PTS. IN RANDOM PATERN
      PNTCNT=Z0
C     INITIALIZE POINTER TO FIRST ELEMENT OF POINT OR PATERN DATA
C     BEING PROCESSED - THIS POINTER WILL BE ADVANCED IN SCANNING
C     THE RANDOM PATERN E.C.F. WHICH HAS BEEN STORED IN BCANON
      J = MM + K4
C
C     INITIALIZE DATA SET COUNTER
      I = K1
C
C     ARG1 IS NUMBER OF DATA SETS, THAT IS, NUMBER OF PTS. AND/OR
C     PATERNS SPECIFIED IN RANDOM PATERN DEFN STATEMENT
      ILIM = ARG1(1)
C     IS DATA FOR POINT OR PATERN
C
  405 CALL HOLFRM(BCANON(J),TEST,1,8,NWD)
      IF(TEST.EQ.PAT)GO TO 415
C        INCREMENT POINT COUNTER AND ADVANCE J TO NEXT DATA SET
      PNTCNT=PNTCNT+K1
      J = J + K4
      GO TO 420
C     UPDATE POINT COUNTER AND ADVANCE J TO NEXT DATA SET
  415 PNTCNT=PNTCNT+BCANON(J+3)
      ICVT=BCANON(J+2)+Z1EM5
      J=J+ICVT+K1
C
C     HAVE ALL DATA SETS BEEN PROCESSED
  420 IF (I .EQ. ILIM) GO TO 425
      I = I + K1
      GO TO 405
C
C     COMPUTE AND STORE E.C.F. SIZE AND NUMBER OF PTS. IN PATERN
  425 SIZE=J-K1-MM
      BCANON(MM+2)=SIZE
      RESULT(2)=SIZE+Z1
      BCANON(MM+3)=PNTCNT
      GO TO 1200
C     TRANSFER INCREMENT LIST TO LOCAL WORKING STORAGE
C     NDLIST IS INDEX FOR END OF INCREMENT LIST DATA
C
C     SET UP FOR LINEAR,GRID,OR PERIPHERAL
 1010 BARG(1) = ARG4(1)
      NDLIST = BARG(1)
      NDLIST = NDLIST+K1
      DO 1011 I = 2,NDLIST
 1011 BARG(I) = ARG4(I)
      GO TO 1099
C
C     SET UP FOR CIRCULAR
 1020 BARG(1) = ARG5(1)
      NDLIST = BARG(1)
      NDLIST = NDLIST+K1
      DO 1021 I = 2,NDLIST
 1021 BARG(I) = ARG5(I)
C
C     BEGIN PROCESSING INCR. LIST DATA - LOGIC ASSUMES MIN(NDLIST) = 3
C
 1099 I = 2
 1100 IF (BARG(I)) 1160,1160,1101
 1101 I = I+1
      IF (I - NDLIST) 1105,1145,1145
 1105 CALL HOLFRM(BARG(I),TEST,1,8,NWD)
      IF (TEST.NE.AT)GO TO 1135
C
 1110 I = I+1
      IF (BARG(I)) 1160,1160,1115
C
C     INCR. LIST DATA OF FORM - N AT I
C
 1115 NINC = BARG(I-2)
      MMM = J+ NINC - 1
      LL = J - 1
      DO 1120 JJ = J, MMM
      LL = LL + 1
 1120 BCANON(JJ) = BARG(I)
      J = LL
C     IS THAT ALL
      IF (I - NDLIST) 1130,1125,1125
C     YES - INCR LIST PROCESSING IS DONE, SAVE FINAL BCANON INDEX
 1125 NECF = J
      GO TO 1150
C     NO - CONTINUE LIST PROCESSING
 1130 I = I+1
      J = J+1
C
C     END INCR LIST PROCESSING NOW
      IF (I - NDLIST) 1100,1131,1131
 1131 IF (BARG(I)) 1160,1160,1132
 1132 BCANON(J) = BARG(I)
      NECF = J
      GO TO 1150
C     INCR LIST DATA OF FORM NUMBER,NUMBER,NUMBER OR NUMBER,NUMBER,AT
C
 1135 IF (BARG(I)) 1160,1160,1140
 1140 BCANON(J) = BARG(I-1)
      J = J+1
      GO TO 1101
C
C     END PROCESSING OF INCR LIST DATA OF FORM NUMBER,NUMBER
C     SAVE FINAL BCANON INDEX
 1145 BCANON(J) = BARG(I-1)
      BCANON(J+1) = BARG(I)
      NECF = J+1
C     COMPLETE  E.C.F. BASED ON KLL CODE
 1150 K=KLL/100
      GO TO (135, 255,355,1300,355),K
 1160 CALL ERROR(64,'APT090  ')
      GO TO 1300
C
C     WRITE E.C.F. ONTO PERIPHERAL STORAGE
C
 1200 CALL APT094(1,RESULT,BCANON(MM))
      GO TO 1310
 1300 CALL UNDEF (RESULT)
 1310 CONTINUE
      RETURN
      END
