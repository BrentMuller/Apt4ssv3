**** SOURCE FILE : INTCHK.ORG   ***
*
      SUBROUTINE INTCHK(PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,TUL,
     +                  TE,TA,R,NPAT,UP,VP,LRET,INTLOC)
C
C     PURPOSE : TO PERFORM INTERFERENCE CHECKING
C
C     ARGUMENTS:
C
C     PSURF   -  CANONICAL FORM OF PART SURFACE (SSURF)
C     IPSIZE  -  SIZE OF CANONICAL FORM
C     PSIDE   -  1 OR -1 TO AJUST SURFACE NORMAL (RU X RV)
C     PTHICK  -  THICKNESS OFFSET FROM SURFACE
C     TOLIN   -  TOLERANCE (PS INTOL)
C     TUL     -  TOOL GEOMETRY
C     TE      -  TOOL END COORDINATES
C     TA      -  TOOL AXIS VECTOR
C     R       -  SURFACE CONTACT POINT AND DERIVATIVES
C     NPAT    -  PATCH NUMBER FOR CONTACT POINT
C     UP,VP   -  U AND V PARAMETERS FOR CONTACT POINT
C     LRET    -  RETURN FLAG = .TRUE.  IF INTERFERENCE OCCURS
C                            = .FALSE. IF NO INTERFERENCE
C     INTLOC  -  LOCATION IN INTERFERENCE TABLE OF LARGEST INTERFERENCE
C
      DOUBLE PRECISION PSURF,PSIDE,PTHICK,TUL,TOLIN,TE,TA,R,UP,VP
      INTEGER IPSIZE,NPAT,INTLOC
      LOGICAL LRET
C
      DIMENSION PSURF(IPSIZE),TUL(7),TE(3),TA(3),R(32)
C
C.... LOCAL VARIABLES
C
C     LSUSP   -  LIST OF SUSPECT PATCHES
C     NSUSP   -  NUMBER OF SUSPECT PATCHES
C
      INTEGER NSUSP,LSUSP,MXSUSP
      PARAMETER (MXSUSP=1000)
C
      DIMENSION LSUSP(MXSUSP)
C
      INCLUDE 'INTERF.INC'
      INCLUDE 'IBUGG.INC'
C
      CHARACTER MSG*120
C
      LRET=.FALSE.
      INTLOC=0
C
C.... DEBUG PRINT
C
      IF (IBUG.EQ.11) THEN
        CALL BAD(-1,0,' ',0)
        MSG='0ENTER INTCHK'
        CALL CPRINT(MSG)
        CALL BAD(3,1,'TE  ',TE)
        CALL BAD(-3,1,'TA  ',TA)
      ENDIF
C
C.... TEST REMOTE (NON-CURRENT) PATCHES FOR POSSIBLE INTERFERENCE
C
      CALL REMSCN(TE,TA,TUL,R,PSIDE,PTHICK,TOLIN,NPAT,LSUSP,NSUSP)
C
      IF (NSUSP.GT.0) THEN
C.... DEBUG PRINT
        IF (IBUG.EQ.11) THEN
          MSG=' POSSIBLE REMOTE INTERFERENCE'
          CALL CPRINT(MSG)
          N=-NSUSP
          CALL BAD(N,0,'SUSP',LSUSP)
        ENDIF
C
C.... CHECK OUT SUSPECT REMOTE PATCHES AND STORE ANY PENETRATION DATA
C     IN INTERFERENCE TABLE
C
        CALL REMINT(TE,TA,TUL,PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,
     +              LSUSP,NSUSP)
      ENDIF
C
C.... CHECK CURRENT PATCH AND STORE ANY PENETRATION DATA
C     IN INTERFERENCE TABLE
C
      CALL CURINT(PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,TUL,TE,TA,
     +            R,NPAT,UP,VP)
C
C.... HAS ANY INTERFERENCE BEEN DETECTED
C
      IF (NPINTR.GT.0) THEN
C
        LRET=.TRUE.
        INTLOC=1
        DO 100 I=1,NPINTR
C.... FIND AND SAVE LOCATION OF LARGEST PENETRATION
          IF (DINTR(I).GT.DINTR(INTLOC)) INTLOC=I
C
C.... DEBUG PRINT OF INTERFERENCE TABLE
C
          IF (IBUG.EQ.11) THEN
            CALL BAD(-1,0,' ',0)
            CALL BAD(1,0,'PAT ',PINTR(I))
            CALL BAD(1,1,'U   ',UINTR(I))
            CALL BAD(1,1,'V   ',VINTR(I))
            CALL BAD(1,1,'PEN ',DINTR(I))
            CALL BAD(-1,1,'ISEG',ISEG(I))
            CALL BAD(3,1,'TP  ',TPINTR(1,I))
            CALL BAD(3,1,'SP  ',SPINTR(1,I))
            CALL BAD(-3,1,'SN  ',SNINTR(1,I))
          ENDIF
 100    CONTINUE
C
      ENDIF
C
      END
