*
C
C...  FORTRAN SUBROUTINE               GOTOPN    3/69      SR
C
C PURPOSE      TO POSITION THE TOOL AS INDICATED BY A
C              PATERN MOTION STATEMENT
C
C LINKAGE      CALL GOTOPN(PAT,IARG1,IARG2,IARG3,IARG4,OMTLST,AVDLST)
C
C ARGUMENTS    PAT     ARRAY CONTAINING THE I.C.F. OF THE PATERN
C              IARG1   INTEGER 1 IF INVERS APPLIES, OTHERWISE 0
C              IARG2   INTEGER 1 IF ZIGZAG APPLIES, OTHERWISE 0
C              IARG3   INTEGER INDICATING TYPE (OMIT, RETAIN) AND
C                      NUMBER OF 2-ELEMENT ENTRIES IN OMTLST
C                      IARG3=0       NEITHER OMIT NOR RETAIN MODIFIER
C                                    USED
C                      0)IARG3)1000  OMTLST CONTAINS POINTS TO BE
C                                    OMITTED AND
C                                    IARG3=NUMBER OF ENTRIES
C                      1000)IARG3    OMTLST CONTAINS POINTS TO BE
C                                    RETAINED AND
C                                    1000-IARG3=NUMBER OF ENTRIES
C              IARG4   INTEGER INDICATING NUMBER OF 3-ELEMENT
C                      ENTRIES IN AVDLST
C              OMTLST  ARRAY CONTAINING FIRST AND LAST POINT OF
C                      EACH OMIT OR RETAIN SEQUENCE
C              AVDLST  ARRAY CONTAINING THE OFFSET AND THE FIRST
C                      AND LAST POINT OF EACH AVOID SEQUENCE
C
C SUBSIDIARIES TYPE                ENTRY
C              LOGICAL FUNCTION    CKDEF
C              SUBROUTINE          APT094
C              SUBROUTINE          APT202
C              SUBROUTINE          APT233
C              SUBROUTINE          APT299
C              SUBROUTINE          ERROR
C              SUBROUTINE          NPAT
C
      SUBROUTINE GOTOPN(PAT,IARG1,IARG2,IARG3,IARG4,OMTLST,AVDLST)
C
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE (TOTAL)
      INCLUDE (FXCOR)
      INCLUDE (ZNUMBR)
      INCLUDE (IFXCOR)
      INCLUDE (KNUMBR)
C
      INCLUDE (BLANKCOM)
C
      DOUBLE PRECISION OMTLST
      DIMENSION PAT(2),           OMTLST(2,49),AVDLST(3,34),RES(3)
C
      CHARACTER*4 HGOTO
      CHARACTER*5 HCYCLE
      CHARACTER*2 HON
      CHARACTER*6 HNOMOR
      LOGICAL CKDEF
      DATA HGOTO /'GOTO'/, HCYCLE /'CYCLE'/, HON /'ON'/,
     1 HNOMOR /'NOMORE'/
C
C          MOVE THE EXTERNAL CANONICAL FORM TO BCANON
C
      IF(CKDEF(PAT))GO TO 999
      CALL APT094(2,PAT,BCANON)
      IF(CKDEF(PAT))GO TO 999
C
C          DETERMINE NUMBER OF POINTS IN PATERN
C
      N=BCANON(4)+Z1EM5
C
C          IF ZIGZAG IS TO APPLY, PATERN MUST BE GRID
C
      ISVA2=IARG2
      IF(ISVA2.EQ.K0)GO TO 10
      IF(BCANON(2).EQ.Z3)GO TO 5
      CALL ERROR(45,'GOTOPN  ')
      ISVA2=K0
      GO TO 10
C
C          DETERMINE NUMBER OF POINTS IN FIRST SIDE OF GRID PATERN
C
    5 NPAT1=BCANON(7)+Z1EM5
C
C          IF OMTLST HAS ENTRIES, PUT THEM IN ORDER
C
   10 ISVA3=IARG3
      IF(ISVA3.LT.1000)GO TO 11
      ISVA3=-(ISVA3-1000)
   11 IF(ISVA3)12,20,14
   12 IPARG3=-ISVA3
      GO TO 16
   14 IPARG3=ISVA3
   16 DO 18 I=1,IPARG3
      IF(OMTLST(1,I).LE.OMTLST(2,I))GO TO 18
      TMPSAV=OMTLST(1,I)
      OMTLST(1,I)=OMTLST(2,I)
      OMTLST(2,I)=TMPSAV
   18 CONTINUE
C
C          CHECK FOR AVOID
C
   20 IF(IARG4.EQ.K0)GO TO 70
C
C          PUT AVDLST ENTRIES IN ORDER
C
      DO 60 I=1,IARG4
      IF(AVDLST(2,I).LT.AVDLST(3,I))GO TO 40
      IF(AVDLST(3,I).EQ.Z0)GO TO 22
C
C          REVERSE ORDER
C
      TMPSAV=AVDLST(2,I)
      AVDLST(2,I)=AVDLST(3,I)
      AVDLST(3,I)=TMPSAV
      GO TO 40
C
C          INSERT AS END POINT THE NEXT NON-OMITTED POINT
C
   22 AVDLST(3,I)=AVDLST(2,I)+Z1
      PT=N
      IF(ISVA3)24,60,32
   24 DO 26 J=1,IPARG3
      IF((AVDLST(3,I).GE.OMTLST(1,J)).AND.(AVDLST(3,I).LE.OMTLST(2,J)))
     1 GO TO 46
   26 CONTINUE
      IF(AVDLST(3,I).GE.PT)GO TO 1000
      AVDLST(3,I)=AVDLST(3,I)+Z1
      GO TO 24
   32 DO 36 J=1,IPARG3
      IF((AVDLST(3,I).GE.OMTLST(1,J)).AND.(AVDLST(3,I).LE.OMTLST(2,J)))
     1 GO TO 38
   36 CONTINUE
      GO TO 54
   38 IF(AVDLST(3,I).GE.PT)GO TO 1000
      AVDLST(3,I)=AVDLST(3,I)+Z1
      GO TO 32
C
C          CHECK FOR OMITTED FIRST OR END POINT IN AVOID STRING
C
   40 IF(ISVA3)42,60,50
   42 DO 44 J=1,IPARG3
      IF((AVDLST(3,I).GE.OMTLST(1,J)).AND.(AVDLST(3,I).LE.OMTLST(2,J)))
     1 GO TO 46
   44 CONTINUE
      GO TO 1000
   46 DO 48 J=1,IPARG3
      IF((AVDLST(2,I).GE.OMTLST(1,J)).AND.(AVDLST(2,I).LE.OMTLST(2,J)))
     1 GO TO 60
   48 CONTINUE
      GO TO 1000
   50 DO 52 J=1,IPARG3
      IF((AVDLST(3,I).GE.OMTLST(1,J)).AND.(AVDLST(3,I).LE.OMTLST(2,J)))
     1 GO TO 1000
   52 CONTINUE
   54 DO 58 J=1,IPARG3
      IF((AVDLST(2,I).GE.OMTLST(1,J)).AND.(AVDLST(2,I).LE.OMTLST(2,J)))
     1 GO TO 1000
   58 CONTINUE
   60 CONTINUE
C
   70 IAERR=0
      CALL APT202(PAT,2)
      MODFER=HGOTO
C
C          INITIALIZE FOR AVOID
C
      IAVTYP=K1
      AVDEND=Z0
      JSAV=K0
C
C
  100 DO 900 I=1,N
      NO=I
C
C          CHECK FOR INVERSE
C
      IF(IARG1.EQ.K0)GO TO 105
      NO=N-I+K1
C
C          CHECK FOR ZIGZAG
C
  105 IF(ISVA2.EQ.K0)GO TO 110
      NCOL=(NO-K1)/NPAT1
      NCOLMD=MOD(NCOL,K2)
      IF(((NCOLMD.EQ.K1).AND.(IARG1.EQ.K0)).OR.((NCOLMD.EQ.K0).AND.
     /  (IARG1.EQ.K1))) NO=NPAT1*(K2*NCOL+K1)-NO+K1
  110 PT=NO
C
C          CHECK FOR OMIT OR RETAIN
C
      IF(ISVA3)140,160,120
C
C          OMIT
C
  120 DO 124 J=1,IPARG3
      IF((PT.GE.OMTLST(1,J)).AND.(PT.LE.OMTLST(2,J)))GO TO 900
  124 CONTINUE
      GO TO 160
C
C          RETAIN
C
  140 DO 144 J=1,IPARG3
      IF((PT.GE.OMTLST(1,J)).AND.(PT.LE.OMTLST(2,J)))GO TO 160
  144 CONTINUE
      GO TO 900
C
C          CHECK FOR AVOID
C
  160 IF(IARG4.EQ.K0)GO TO 200
C
C          AVOID
C
      IF(AVDEND.NE.Z0)GO TO 170
C
C          LOOK FOR FIRST POINT
C
      DO 164 J=1,IARG4
      IF(PT.NE.AVDLST(2,J))GO TO 163
      AVDEND=AVDLST(3,J)
  162 JSAV=J
      AVDUP=AVDLST(1,J)
      AVDDN=AVDLST(1,J)
      IAVTYP=K2
      GO TO 200
  163 IF(PT.NE.AVDLST(3,J))GO TO 164
      AVDEND=AVDLST(2,J)
      GO TO 162
  164 CONTINUE
      GO TO 200
C
C          LOOK FOR END POINT
C
  170 IF(PT.EQ.AVDEND)GO TO 180
      IAVTYP=K3
      GO TO 200
C
C          IS THIS END POINT A FIRST POINT OF NEXT STRING
C
  180 DO 184 J=1,IARG4
      IF(PT.NE.AVDLST(2,J))GO TO 183
      IF(J.EQ.JSAV)GO TO 184
      AVDEND=AVDLST(3,J)
  182 AVDUP=AVDLST(1,J)
      IAVTYP=K3
      GO TO 200
  183 IF((PT.NE.AVDLST(3,J)).OR.(J.EQ.JSAV))GO TO 184
      AVDEND=AVDLST(2,J)
      GO TO 182
  184 CONTINUE
      JSAV=K0
      AVDEND=Z0
      IAVTYP=K4
C
C          CALL NPAT TO DETERMINE COORDINATES OF POINT
C
  200 CALL NPAT(RES,NO)
C
C          BRANCH ON IAVTYP
C             1-AVOID DOES NOT APPLY     2-FIRST POINT IN AVOID STRING
C             3-INTERMEDIATE POINT       4-END POINT
C
      GO TO(240,240,220,210),IAVTYP
  210 IAVTYP=K1
  220 DO 224 J=1,3
      TEK(J)=TE(J)
  224 TE(J)=RES(J)
      TE(3)=TE(3)+AVDDN
      CALL APT233
      CALL APT299(K1,HCYCLE,K2,HON)
      AVDDN=AVDUP
  240 DO 244 J=1,3
      TEK(J)=TE(J)
  244 TE(J)=RES(J)
      CALL APT233
      IF(IAVTYP.EQ.K1)GO TO 900
      CALL APT299(K1,HCYCLE,K2,HNOMOR)
      DO 250 J=1,3
      TEK(J)=TE(J)
  250 TE(J)=RES(J)
      TE(3)=TE(3)+AVDUP
      CALL APT233
  900 CONTINUE
C
      IGOTO=0
C
  999 RETURN
C
C          OMIT HAS BEEN APPLIED (OR RETAIN HAS NOT BEEN APPLIED)
C             TO A FIRST OR AN END POINT OF AN AVOID STRING
C
 1000 CALL ERROR(46,'GOTOPN  ')
      GO TO 999
C
      END
