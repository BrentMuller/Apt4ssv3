**** SOURCE FILE : AFORM000.ORG   ***
*
         
*
*  * AFORM *  FORTRAN 77 SUBROUTINE  9/9/86  M.D.LIPSCOMBE
*
*  PURPOSE:  TO FORM INDISCRIMINATE VALUES INTO ONE ARRAY
*
*  CALLING SEQUENCE:
*                   CALL AFORM(ARR,VALS,L)
*
*
*  ARGUMENTS:
*                   TYPE       DESCRIPTION
*
*  ARR      DOUBLE PRECISION   ARRAY TO CONTAIN GATHERED INDISCRIMINATE
*  VALS     DOUBLE PRECISION   INDISCRIMINATE VALUES (POSSIBLY PACKED)
*  L        INTEGER            NUMBER OF CONTIGUOUS 8-BYTE WORDS HOLDING
*
*
*  GLOBAL VARIABLES:  NONE
*
*  LOCAL VARIABLES:  NONE
*
*  FILES:  NONE
*
*  SUBSIDIARIES:  NONE
*
*
      SUBROUTINE AFORM(ARR,VALS,L)
C
      DOUBLE PRECISION ARR(100),VALS(L)
C
      DO 20 I=1,L
      ARR(I)=VALS(I)
   20 CONTINUE
C
      RETURN
      END
**** SOURCE FILE : M0000695.V06   ***
*
C
C              FORTRAN SUBROUTINE APT024
C
C PURPOSE      TO SET XECUTION FLAGS SPECIFIED BY THE PPOPTN STATEMENT.
C
C LINKAGE      CALL APT024(IARG)
C
C ARGUMENT     IARG  =1, REFMOT ON
C                    =2, REFMOT OFF
C                    =3, ALTMLT ON
C                    =4, ALTMLT OFF
C
      SUBROUTINE APT024(IARG)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'LDEF.INC'
C
      LOGICAL CILPRT
      COMMON/CONST/KCOMT,KCOMF,CILPRT,KCBN
      INCLUDE 'DARRAY.INC'
C
      GO TO (1,2,3,4,5,6),IARG
    1 REFMOT=.TRUE.
      GO TO 9
    2 REFMOT=.FALSE.
      GO TO 9
    3 ALTMLT=.TRUE.
      GO TO 9
    4 ALTMLT=.FALSE.
      GO TO 9
    5 CILPRT=.TRUE.
      CALL CFORM('0 CILPRT TURNED ON',DARRAY,1,18)
      CALL CPRINT(DARRAY)
      GO TO 9
    6 CILPRT=.FALSE.
      CALL CFORM('0 CILPRT TURNED OFF',DARRAY,1,19)
      CALL CPRINT(DARRAY)
      GO TO 9
    9 CONTINUE
      RETURN
      END
**** SOURCE FILE : M0000825.V03   ***
*
C
C.....FORTRAN SUBROUTINE             APT075...              3/1/68   GK
C
C              FORTRAN SUBROUTINE APT075
C
C PURPOSE      TO GENERATE THE SOLUTION OF THREE SIMULTANEOUS
C              EQUATIONS IN THREE UNKNOWS.
C
C LINKAGE      CALL APT075 (RESULT, AIN)
C
C ARGUMENTS    RESULT              ARRAY TO CONTAIN VALUES OF X, Y,
C                                  AND Z AS RESULT (1), RESULT (2),
C                                  AND RESULT (3), RESPECTIVELY.
C              AIN (1-3, 1)        COEFFICIENTS OF X, Y, Z IN THE
C                                  FIRST EQUATION
C              AIN (1-3, 2)        COEFFICIENTS OF X, Y, Z IN THE
C                                  SECOND EQUATION
C              AIN (1-3, 3)        COEFFICIENTS OF X, Y, Z IN THE
C                                  THIRD EQUATION
C              AIN (4, 1-3)        CONSTANT TERM IN EACH OF THE
C                                  THREE EQUATIONS
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          CROSS
C              SUBROUTINE          DOTF
C
      SUBROUTINE APT075 (RESULT,AIN)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION RESULT(3),AIN(4,3),ST(3,4)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'IDEF.INC'
      INCLUDE 'ISHR16.INC'
      INCLUDE 'KNUMBR.INC'
C
      EQUIVALENCE (ST(1,1),SC(1))
C
C
C...     STORE ARRAY IN S, INTERCHANGING ROWS AND COLUMNS
C
      DO 10 I=1,3
      DO 10 J=1,4
   10 ST(I,J) = AIN(J,I)
C
C...     SOLVE EQUATIONS BY KRAMER'S RULE
C
      CALL CROSS(ST(1,2) ,ST(1,3),V)
      CALL DOTF(DENOM,ST(1,1),V)
      IF (DABS(DENOM).LE.Z1EM6) GO TO 30
      CALL DOTF (RESULT(1),V,ST(1,4))
      RESULT(1)=RESULT(1)/DENOM
      CALL CROSS (ST(1,4),ST(1,3),V)
      CALL DOTF (RESULT(2),V,ST(1,1))
      RESULT(2)=RESULT(2)/DENOM
      CALL CROSS (ST(1,2),ST(1,4),V)
      CALL DOTF (RESULT(3),V,ST(1,1))
      RESULT(3)=RESULT(3)/DENOM
      GO TO 99
   30 IERROR=K52
   99 RETURN
       END
**** SOURCE FILE : M0000826.V02   ***
*
C.....FORTRAN SUBROUTINE             APT076...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT076
C
C PURPOSE      TO GENERATE THE PRODUCT OF TWO SQUARE
C              MATRICES OF EQUAL DIMENSION AS A SQUARE
C              MATRIX OF THE SAME DIMENSION.
C
C LINKAGE      CALL APT076 (RESULT, XM1, XM2, MN)
C
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE RESULTING MATRIX
C                      STORED BY ROWS
C              XM1     ARRAY CONTAINING THE FIRST INPUT
C                      MATRIX STORED BY ROWS
C              XM2     ARRAY CONTAINING THE SECOND INPUT
C                      MATRIX STORED BY ROWS
C              N       NUMBER OF ROWS (OR COLUMNS) IN THE
C                      MATRICES
C
C SUBSIDIARIES NONE
C
      SUBROUTINE APT076 (RESULT,XM1,XM2,MN)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION RESULT(MN,MN),XM1(MN,MN),XM2(MN,MN)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'ISHR16.INC'
C
C
      K=MN
      DO 10 I=1,K
      DO 10 J=1,K
      RESULT(I,J) = Z0
C
C...     ELEMENT I,J IS THE PRODUCT OF J-TH ROW OF MX1 WITH I-TH COLUMN
C        OF MX2
      DO 10 M=1,K
   10 RESULT(I,J) = RESULT(I,J) +XM1(M,J)*XM2(I,M)
      RETURN
       END
**** SOURCE FILE : M0000827.V03   ***
*
C
C.....FORTRAN SUBROUTINE             APT077...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT077
C
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE
C              TRANSFORMATION OF THE CANONICAL FORM OF A LINE
C              OR PLANE WHEN A REFSYS STATEMENT IS IN EFFECT.
C
C LINKAGE      CALL APT077 (SI, IE)
C
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE
C                      TRANSFORMED.
C              IE      INTEGER WHICH INDICATES TRANSFORMATION
C                      DIRECTION, AND AN ERROR CODE NUMBER WHEN
C                      AN INPUT LINE IS TO BE CHECKED TO BE SURE
C                      IT IS A VERTICAL PLANE.
C                      IE + O TRANSFORM LOCAL TO BASE
C                      IE = O TRANSFORM BASE TO LOCAL
C                      IE = O TRANSFORM BASE TO LOCAL AND CHECK
C                          FOR VERTICAL PLANE
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          TRANSF
C
      SUBROUTINE APT077 (SI,IE)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION SI(10)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'KNUMBR.INC'
C
C
      CALL TRANSF (L,SI,K4,K4,IE)
       RETURN
       END
**** SOURCE FILE : M0000828.V02   ***
*
C.....FORTRAN SUBROUTINE             APT078...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT078
C
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE
C              TRANSFORMATION OF THE CANONICAL FORM OF A VECTOR
C              WHEN A REFSYS STATEMENT IS IN EFFECT.
C
C LINKAGE      CALL APT078 (SI, IE)
C
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE
C                      TRANSFORMED.
C              IE      INTEGER INDICATING TRANSFORMATION DIRECTION.
C                      IE + O TRANSFORM LOCAL TO BASE
C                      IE = O TRANSFORM BASE TO LOCAL
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          TRANSF
C
      SUBROUTINE APT078 (SI,IE)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION SI(10)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'KNUMBR.INC'
C
      CALL TRANSF (V,SI,K3,K3,IE)
       RETURN
       END
**** SOURCE FILE : M0000829.V02   ***
*
C.....FORTRAN SUBROUTINE             APT079...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT079
C
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE
C              TRANSFORMATION OF THE CANONICAL FORM OF A QUADRIC
C              SURFACE WHEN A REFSYS STATEMENT IS IN EFFECT.
C
C LINKAGE      CALL APT079 (SI, IE)
C
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE
C                      TRANSFORMED.
C              IE      INTEGER INDICATING TRANSFORMATION DIRECTION.
C                      IE + O TRANSFORM LOCAL TO BASE
C                      IE = O TRANSFORM BASE TO LOCAL
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          TRANSF
C
      SUBROUTINE APT079 (SI,IE)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION SI(10)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'KNUMBR.INC'
C
C
      CALL TRANSF (G,SI,K1,K10,IE)
       RETURN
       END
**** SOURCE FILE : M0000830.V03   ***
*
C.....FORTRAN SUBROUTINE  ....APT081         8/68                    AR
C.....FORTRAN SUBROUTINE             APT081...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT081
C
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE
C              TRANSFORMATION OF THE CANONICAL FORM OF A
C              POINT OR SPHERE WHEN A REFSYS STATEMENT IS
C              IN EFFECT.
C
C LINKAGE      CALL APT081 (SI, IE)
C
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE
C                      TRANSFORMED.
C              IE      INTEGER INDICATING TRANSFORMATION DIRECTION.
C                      IE + O TRANSFORM LOCAL TO BASE
C                      IE = O TRANSFORM BASE TO LOCAL
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          TRANSF
C
      SUBROUTINE APT081 (SI,IE)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION SI(10)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'KNUMBR.INC'
C
C
      CALL TRANSF(P,SI,K2,K4,IE)
       RETURN
       END
**** SOURCE FILE : M0000831.V02   ***
*
C.....FORTRAN SUBROUTINE             APT083...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT083
C
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE
C              TRANSFORMATION OF THE CANONICAL FORM OF A
C              CIRCLE, CONE OR CYLINDER WHEN A REFSYS STATE-
C              MENT IS IN EFFECT.
C
C LINKAGE      CALL APT083 (SI, IE)
C
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE
C                      TRANSFORMED
C              IE      INTEGER WHICH INDICATES TRANSFORMATION
C                      DIRECTION AND AN ERROR CODE NUMBER WHEN AN
C                      INPUT CIRCLE IS TO BE CHECKED TO BE SURE IT
C                      IS A VERTICAL CYLINDER
C                      IE + O TRANSFORM LOCAL TO BASE
C                      IE = O TRANSFORM BASE TO LOCAL
C                      IE = O TRANSFORM BASE TO LOCAL AND CHECK
C                             FOR VERTICAL CYLINDER.
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          TRANSF
C
      SUBROUTINE APT083 (SI,IE)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION SI(10)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'KNUMBR.INC'
C
      CALL TRANSF (C,SI,K5,K7,IE)
       RETURN
       END
**** SOURCE FILE : M0000832.V04   ***
*
C
C.....FORTRAN SUBROUTINE             APT085...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT085
C
C PURPOSE      TO SET THE REFSYS FLAG, REFFLG, .FALSE. AND
C              SET UP THE CANONICAL FORM OF THE ZSURF PLANE
C              EQUATION IN THE LOCAL COORDINATE SYSTEM EQUAL
C              TO THE CANONICAL FORM IN THE BASE SYSTEM.
C
C LINKAGE      CALL APT085
C
C ARGUMENTS    NONE
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          ZSURF
C
      SUBROUTINE APT085
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'LDEF.INC'
C
C
C
      DIMENSION SC(4)
      REFFLG = .FALSE.
      IF (ZFLAG) GOTO 20
      DO 10 I=1,4
   10 SC(I) = REF(2,I)
      CALL ZSURF(SC)
   20 RETURN
       END
**** SOURCE FILE : M0000833.V02   ***
*
C.....FORTRAN SUBROUTINE             APT086...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT086
C
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A MATRIX AS
C              THE TRANSPOSE OF A GIVEN SQUARE MATRIX.
C
C LINKAGE      CALL APT086 (RESULT, AIN, NM)
C
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF
C                      THE RESULTING MATRIX
C              AIN     ARRAY TO CONTAIN THE CANONICAL FORM OF
C                      THE INPUT MATRIX
C              NM      INTEGER CONTAINING THE NUMBER OF ROWS
C                      IN THE INPUT MATRIX
C
C SUBSIDIARIES NONE
C
      SUBROUTINE APT086 (RESULT,AIN,NM)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION RESULT(NM,NM),AIN(NM,NM)
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'ISHR16.INC'
C
C
C
      DO 10 I=1,NM
      DO 10 J=1,NM
   10 RESULT(J,I) = AIN(I,J)
      RETURN
       END
**** SOURCE FILE : M0000834.V02   ***
*
C.....FORTRAN SUBROUTINE             APT087...              5/1/68   GK
C
C              FORTRAN SUBROUTINE APT087
C
C PURPOSE      TO GENERATE THE POLAR COORDINATES OF A GIVEN
C              POINT.
C
C LINKAGE      CALL APT087 (RESULT, RECT)
C
C ARGUMENTS    RESULT (1)          DISTANCE FROM ORIGIN TO INPUT POINT
C              RESULT (2)          ANGLE IN DEGREES BETWEEN INPUT POINT
C                                  AND POSITIVE X-AXIS
C              RECT                ARRAY CONTAINING THE CANONICAL FORM
C                                  OF INPUT POINT IN RECTANGULAR
C                                  COORDINATES
C
C SUBSIDIARIES TYPE                ENTRY
C              REAL FUNCTION       ATAN2
C              LOGICAL FUNCTION    CKDEF
C              REAL FUNCTION       SQRT
C
      SUBROUTINE APT087 (RESULT,RECT)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION RESULT(2), RECT(2)
      LOGICAL CKDEF
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'LDEF.INC'
C
C
C
C
C...     CHANGE RECTANGULAR COORDINATES TO POLAR - RESULT(1)=RAD,
C        RESULT(2) = ANGLE
      SC(1) = RECT(1)
      SC(2) = RECT(2)
      UNFLAG = CKDEF(SC)
      RESULT(1)=DSQRT(SC(1)**2+SC(2)**2)
      RESULT(2)= Z0
      IF(RESULT(1).NE.Z0) RESULT(2)=DATAN2(SC(2),SC(1))/DEGRAD
      RETURN
       END
**** SOURCE FILE : M0001865.W01   ***
*
      SUBROUTINE  APT094(LDAFLG,LDAARY,CANLOC)
C
C PURPOSE      THE PURPOSE OF THIS SUBROUTINE IS TO READ OR WRITE LARGE
C              DATA ARRAY CANONICAL FORMS IN OR OUT OF UNLABELED COMMON
C              AND TO UNDEFINE ERRONEOUS L.D.A. CANONICAL FORMS.
C ARGUMENTS    LDAFLG        =1, IF WRITE
C                            =2, IF READ INTO A SPECIFIC LOCATION.(USED
C                                  TO INCORPORATE PREVIOUSLY DEFINED
C                                  CANONICAL FORMS INTO A NEWLY CREATED
C                                  CANONICAL FORM)
C                            =3, IF READ INTO NEXT AVAILABLE UNLABELED
C                                COMMON AREA.(USED TO RETRIEVE CANONICAL
C                                  FORMS FOR USE IN ARLEM MOTION
C                                  STATEMENT PROCESSSING)
C                            =4, IF DEFINITION ERROR.
C                            =5, LIKE =1 WITHOUT WRITING:FOR SPACE-
C                                RESERVATION IN BLANK COMMON FOR NEW
C                                GEOMETRY OR OTHER USE OF SPACE BEGINN-
C                                ING AT >BCANON(1)< .
C                            =6, UPDATE IN PLACE (ON FILE)
C                            =7, READ THE FIRST TWO WORDS OF DATA
C              LDAARY        SURFACE
C              CANLOC        THE LOCATION IN UNLABELED COMMON FROM WHICH
C                            TO READ OR WRITE. IF LDAFLG = 3, THEN THE
C                            CANONICAL FORM IS READ INTO THE NEXT
C                            AVAILABLE LOCATION AND ITS CANON INDEX IS
C                            RETURNED IN CANLOC.
C SUBSIDIARIES MACHINE LANGUAGE SUBROUTINE        UNDEF
C              FORTRAN SUBROUTINE                 ERROR
C
C LOCAL VARIABLES
C              LDATOP        BCANON INDEX INDICATING THE STARTING
C                            POSITION FOR THE NEXT CANONICAL FORM TO
C                            BE READ INTO CORE.
C              LDACOR        ARRAY CONTAINING THE RECORD NUMBER AND
C                            BCANON INDEX OF EACH CANONICAL FORM
C                            CURRENTLY IN CORE. THE ORDER OF LDACOR
C                            ENTRIES CORRESPONDS TO THE RELATIVE
C                            POSITION OF THEIR ASSOCIATED FORMS IN
C                            BCANON.
C              CORTOP        LDACOR INDEX INDICATING RELATIVE POSITION
C                            OF FORM BEGINNING AT LDATOP IN BCANON.
C              NOLDAS        TOTAL NUMBER OF FORMS CURRENTLY IN CORE.
C
C              RECNUM        LAST RECORD NUMBER ASSIGNED TO A FORM.
C              KANIND        CANONICAL FORM INDEX IN BLANK COMMON
C NOTES        THE FIRST 40 POSITIONS OF UNLABELED COMMON ARE RESERVED
C              FOR NON LARGE DATA ARRAY CANONICAL FORMS OF SURFACES
C              USED IN A MOTION STATEMENT AND ARE REFERED TO BY
C              REFERENCING THE CANON ARRAY. THE REMAINING SPACE IS USED
C              FOR LARGE DATA ARRAY CANONICAL FORM STORAGE AND IS
C              REFERENCED BY REFERING TO THE BCANON ARRAY. MAXLDA
C              CONTAINS THE SIZE OF BCANON.
C IMPLIED ASSUMPTION.  IF LDAFLG=1 FOR WRITE, IT IS ASSUMED THAT
C         THE CANON FORM IS LOCATED IN CANON(41) ON, EVEN THOUGH
C         LARGE DATA IS PASSED AS AN ADDRESS.
C
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
      DOUBLE PRECISION LDAARY
C
      INCLUDE 'BLANKCOM.INC'
C
      INCLUDE 'SYMFIL.INC'
      COMMON/MAXLDA/MAXLDA
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'IDEF.INC'
C
C   STORAGE ADDRESS FUNCTION
      INTEGER ADDRSS
C---       LOCAL VARIABLES
      DIMENSION LDACOR(2,40),LDA(2),LDAARY(2),CANLOC(*)
C
      EQUIVALENCE (JJJ,AAA)
      INTEGER RECNUM,CORTOP,KANIND
      DOUBLE PRECISION JUNK
      LOGICAL CKDEF
C... SAVE LOCAL VARIABLES
      SAVE LDACOR,CORTOP,NOLDAS,KANIND
C
      DATA RECNUM,NOLDAS /2*0/
      DATA  LDACOR,MAXLDC /80*0,40/
C
C---      DETERMINE IF A READ, WRITE, OR AN UNDEFINITION.
      LDA(2)=LDAARY(2)
      IF (.NOT.CKDEF(LDAARY(1))) THEN
      LDA(1)=LDAARY(1)
      ENDIF
      GO TO (10,200,220,500,10,700,800), LDAFLG
C RETURN, WHEN WRONG LDAFLG
      RETURN
C---      WRITE NEWLY CREATED CANONICAL FORM.
C---      ASSIGN THE C.F. A RECORD NUMBER.
   10 RECNUM=-5
      CALL TAPOP(AXFILE,RECNUM)
      CANLOC(1)=RECNUM
      LDA(1) = RECNUM
C---      WRITE THE CANONICAL FORM AND UPDATE THE DICTIONARY OF CANONICA
C---      FORMS CURRENTLY IN MEMORY.
      NR=0
C---      BRANCH TO ERROR IF LDA EXCEEDED SPACE AVAILABLE
      IF(LDA(2).GE.MAXLDA) GO TO 410
      IF(LDAFLG.EQ.5) GO TO 12
      J=LDA(2)*2
C---      COMPUTE R*8 FIELD INDEX OF CANONICAL FORM IN BLANK COMMON
      KANIND=(ADDRSS(LDAARY(1))-ADDRSS(CANON(1)))/8+1
C---      REPLACE ON EXTERNAL STORAGE RECORD NUMBER BY STORAGE INDEX
      CANLOC(1)=KANIND
      CALL AWRITE(AXFILE,NR,CANLOC(1),J,IR)
C---      RESTORE RECORD NUMBER
      CANLOC(1)=LDA(1)
      IF(IR.NE.0) GOTO 409
   12 LDATOP = 1
      CORTOP = 1
C  KONTROLLE OB DIE OBERFLAECHE AN DER VERMUTETEN STELLE LIEGT
      DO 11 I=1,10
      IF(CANLOC(I).NE.BCANON(I))GOTO 235
   11 CONTINUE
      GO TO 250
C---      READ A CANONICAL FORM INTO A SPECIFIC LOCATION.
C---      READ THE CANONICAL FORM AND RETURN TO CALLER.
  200 J=LDA(2)*2
      CALL AREAD(AXFILE,LDA(1),CANLOC(1),J,IR)
      KANIND=CANLOC(1)
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5) GO TO 1100
      CANLOC(1)=LDA(1)
      GO TO 9999
C
C---      READ A CANONICAL FORM INTO THE NEXT AVAILABLE AREA.
C---      CHECK TO SEE IF CANONICAL FORM IS ALREADY IN CORE.
  220 AAA=CANLOC(1)
      IF(NOLDAS.EQ.0) GO TO 231
      DO 230 I=1,NOLDAS
      IF (LDACOR(1,I) .NE. LDA(1))  GO TO 230
      JJJ=LDACOR(2,I)+40
      CANLOC(1)=AAA
      GO TO 9999
  230 CONTINUE
  231 CONTINUE
C
C---      CANONICAL FORM IS NOT IN CORE,POSITION TAPE TO FORM RECORD
C---      READ FORM INTO NEXT AVAILABLE LOCATION IN UNLABELED COMMON
C---      CHECK IF FORM WILL FIT ABOVE LDATOP
  235 IF(MAXLDA-LDATOP.LT.LDA(2)) GO TO 400
C
C---      FORM WILL FIT
  240 JJJ=LDATOP+40
      CANLOC(1)=AAA
C   LDACOR(2,MAXLDC) KANN UEBERSPEICHERT WERDEN
      IF(CORTOP.GE.MAXLDC)GOTO 400
      J=LDA(2)*2
      CALL AREAD(AXFILE,LDA(1),BCANON(LDATOP),J,IR)
      KANIND=BCANON(LDATOP)
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5) GO TO 1100
      BCANON(LDATOP)=LDA(1)
      CORTOP = CORTOP + 1
  250 K = 0
C
C---      CHECK IF NEW CORTOP LESS THAN NOLDAS
      IF (NOLDAS - CORTOP)  320,260,260
C---      DETERMINE THE NUMBER OF FORMS ABOVE LDATOP THAT WERE OVERLAID
  260 DO 270  N = CORTOP,NOLDAS
      IF(LDACOR(2,N) .GE. (LDATOP + LDA(2)))  GO TO 280
  270 K = K + 1
      GO TO 320
C
C---      DETERMINE WHETHER LDACOR ENTRIES HAVE TO BE REPOSITIONED
  280 IF (K-1)  290,320,310
C
C---      SLIDE ENTRIES STARTING WITH CORTOP UP ONE POSITION
  290 IF(NOLDAS.LT.MAXLDC)GOTO 291
      K= 1
      GOTO 320
  291 DO 300  I = CORTOP,NOLDAS
      J = NOLDAS + CORTOP - I
      LDACOR(1,J+1) = LDACOR(1,J)
  300 LDACOR(2,J+1) = LDACOR(2,J)
      GO TO 320
C
C---      SLIDE GOOD ENTRIES ABOVE CORTOP + 1 DOWN SO THAT THE FIRST GOO
C---      ENTRY COINCIDES WITH CORTOP + 1
  310 DO 315  I = N,NOLDAS
      J = CORTOP + 1 - N + I
      LDACOR(1,J) = LDACOR(1,I)
  315 LDACOR(2,J) = LDACOR(2,I)
C
C---      INSERT NEW ENTRY IN LDACOR, ADJUST LDATOP AND NOLDAS
  320 LDACOR(1,CORTOP) = LDA(1)
      LDACOR(2,CORTOP) = LDATOP
      LDATOP = LDATOP + LDA(2)
      NOLDAS = NOLDAS - K + 1
      GO TO 9999
C---      FORM WILL NOT FIT ABOVE LDATOP. READ IT IN STARTING AT BCANON(
C
  400 CONTINUE
      IF(MAXLDA.GE.LDA(2)) GO TO 401
C
C NOT ENOUGH ROOM IN >LDA<
  410 CALL ERROR(5061,'APT094  ')
      GO TO 500
C NOT ENOUGH ROOM ON FILE 9(EXTERNAL LDA)
  409 CALL ERROR(5062,'APT094  ')
      LDATOP=1
      CORTOP=1
      NOLDAS=0
      GOTO 510
  401 CONTINUE
      JJJ=41
      CANLOC(1)=AAA
  402 J=LDA(2)*2
      CALL AREAD(AXFILE,LDA(1),BCANON(1),J,IR)
      KANIND=BCANON(1)
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5)     GO TO 1100
      BCANON(1)=LDA(1)
      LDATOP = 1
      CORTOP = 1
      GO TO 250
C
C---      DEFINITION ERROR : ELIMINATE LDA FROM LIST
C
  500 IF(NOLDAS.EQ.0)GOTO 510
      DO 503 I=1,NOLDAS
      IF(LDACOR(1,I).EQ.LDA(1))GOTO 506
  503 CONTINUE
      GOTO 510
  506 IF(I.LE.CORTOP)CORTOP=CORTOP-1
      NOLDAS=NOLDAS-1
      IF(NOLDAS.EQ.0)GOTO 510
      IF(NOLDAS.LT.I)GOTO 510
      DO 508 N=I,NOLDAS
      LDACOR(1,N) = LDACOR(1,N+1)
  508 LDACOR(2,N) = LDACOR(2,N+1)
  510 CALL UNDEF(LDAARY(1))
      GO TO 9998
C ERROR DURING READ OF A LARGE DATA ARRAY >LDA< FROM FILE 9.
C---      RECORD NUMBER ERROR
C---      PRINT ERROR MESSAGE ON VLFILE AND UNDEFINE THE CANONICAL FORM.
 1100 CALL ERROR(5060,'APT094  ')
      GO TO 500
 9999 LDAARY(1)=LDA(1)
C.
 9998 CONTINUE
      RETURN
C  UPDATE IN PLACE
  700 IF(NOLDAS.EQ.0)GOTO 730
      DO 710 I=1,NOLDAS
      IF(LDACOR(1,I).EQ.LDA(1))GOTO 720
  710 CONTINUE
      GOTO 730
C   GEOMETRIE IN CORE
  720 N=LDA(2)
      NN=LDACOR(2,I)
      DO 725 I=1,N
      BCANON(NN)=CANLOC(I)
  725 NN=NN+1
C  WRITE UPDATE
  730 J=LDA(2)*2
      NR=LDA(1)
C---      COMPUTE R*8 FIELD INDEX OF CANONICAL FORM IN BLANK COMMON
      KANIND=(ADDRSS(LDAARY(1))-ADDRSS(CANON(1)))/8+1
C---      REPLACE ON EXTERNAL STORAGE RECORD NUMBER BY STORAGE INDEX
      CANLOC(1)=KANIND
      CALL AWRITE(AXFILE,NR,CANLOC(1),J,IR)
C---      RESTORE RECORD NUMBER
      CANLOC(1)=LDA(1)
      RETURN
C---      READ SHORT
  800 J=2
      CALL AREAD(AXFILE,LDA(1),CANLOC(1),J,IR)
      KANIND=CANLOC(1)
      RETURN
      END
**** SOURCE FILE : M0002807.V05   ***
*
C.....FORTRAN SUBROUTINE               APT100    3/69      SR,DE
      SUBROUTINE APT100(IFLAG,ARG)
C
C     PURPOSE       TO MOVE POINTS AND PATERNS USED AS ARGUMENTS
C                   IN THE DEFINITION OF A RANDOM PATERN TO THE LDA
C                   STAGING AREA, AND PERFORM ERROR CHECKS
C
C     CALLING SEQ   CALL APT100(IFLAG,ARG)
C
C     ARGUMENTS     FLAG  INDICATOR SHOWING TYPE OF PROCESSING DESIRED
C                   ARG   A POINT OR PATTERN WHOSE CANONICAL FORM IS TO
C                   BE MOVED TO THE LDA STAGING AREA
C
C     RESTRICTIONS  CURRENT VERSION CANNOT HANDLE
C                   NESTED PATTERN DEFINITIONS
C
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
      LOGICAL CKDEF
C
      INCLUDE 'BLANKCOM.INC'
C
      DIMENSION ARG(3)
      INTEGER ITEMP(2),BCDF
      DOUBLE PRECISION TEMP
      EQUIVALENCE (TEMP,ITEMP(1))
C
C...                BRANCH IF NOT INITIALIZATION CALL
      IF(IFLAG.NE.0)GO TO 100
C                             INITIALIZE COMMON STORAGE INDEX
      INEXT=5
C                             INITIALIZE FIRST WORD OF COMMON STORAGE
C                             AREA TO NO ERROR CONDITION
      BCANON(1)=0.0
      GO TO 900
C...                IF ERROR HAS ALREADY OCCURRED IN THIS DEFINITION,
C...                RETURN
  100 IF(BCANON(1).LT.0.0)GO TO 900
      IF(CKDEF(ARG))GO TO 800
C...                BRANCH IF PATERN TYPE ARG
      IF(IFLAG.EQ.2)GO TO 200
C...                PROCESS POINT TYPE ARG
C                             INSERT ALPHANUMERIC IDENTIFIER
      ITEMP(1) = BCDF('ZPOI')
      ITEMP(2) = BCDF('NT  ')
      BCANON(INEXT)=TEMP
C                             INSERT CANONICAL FORM
      DO 110 I=1,3
      J=INEXT+I
      BCANON(J)=ARG(I)
  110 CONTINUE
C                             UPDATE STORAGE INDEX
      INEXT=INEXT+4
      GO TO 900
C
C...                PROCESS PATERN ARG
  200 CALL APT094(2,ARG,BCANON(INEXT))
      IF(CKDEF(ARG))GO TO 800
C                             INSERT ALPHANUMERIC IDENTIFIER
      ITEMP(1) = BCDF('ZPAT')
      ITEMP(2) = BCDF('RN  ')
      BCANON(INEXT)=TEMP
C                             IF ARGUMENT PATERN IS ALSO RANDOM, ISSUE
C                             DIAGNOSTIC AND STORE ERROR FLAGS
      REAL=BCANON(INEXT+1)
      IF(REAL.NE.4.0)GO TO 220
      CALL ERROR(82,'APT100  ')
  800 BCANON(1)=-1.0
      GO TO 900
C                             UPDATE STORAGE INDEX
  220 INT=BCANON(INEXT+2)+1.00001
      INEXT=INEXT+INT
  900 RETURN
      END
**** SOURCE FILE : M0002815.V09   ***
*
C
C...  FORTRAN SUBROUTINE APT104                  5/70      RW
C
C                         FORTRAN SUBROUTINE APT104
C
C
C PURPOSE      TO GENERATE THE CFSFIL FILE FOR THE SUBSEQUENT PREP-
C              ARATION OF OBJECT PLOTS AND/OR ENGINEERING COMPUTATIONS
C              AS EFFECTED BY THE FOLLOWING APT STATEMENT
C
C              CFSAVE/PART
C
C CALLING SEQUENCE    CALL APT104(PART)
C
C ARGUMENTS    PART          ARRAY CONTAINING THE CANONICAL FORM FOR
C                            THE OBJECT OF INTEREST.
C
C CALLED BY    NONE
C
C SUBSIDIARIES TYPE              ENTRY
C              INTEGER FUNCTION  ADDRSS
C              SUBROUTINE        ERROR
C              SUBROUTINE        GSURF
C              SUBROUTINE        INCAN
C              INTEGER FUNCTION  XCANON
C              SUBROUTINE        UNPACK
C
C RESTRICTIONS NONE
C
C DIAGNOSTICS  ERROR CODE    COMMENT
C
C              85            REFERENCED ELEMENT NOT PROPERLY DEFINED.
C
C              89            INVALID OR ERRONEOUS CANONICAL FORM
C                            ENCOUNTERED.  BOUNDED GEOMETRY PROCESSING
C                            TERMINATED.
C
C              90            TOO MUCH EMBEDDEDNESS IN BOUNDS AND
C                            OBJECT STATEMENTS.  BOUNDED GEOMETRY
C                            PROCESSING TERMINATED.
C
C
C
      SUBROUTINE APT104(PART)
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)
      DIMENSION PART(1)
C
      INCLUDE 'BLANKCOM.INC'
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'IDEF.INC'
      INCLUDE 'KNUMBR.INC'
C
C...            SYSTEM I/O FILE NAMES
      INCLUDE 'SYMFIL.INC'
      COMMON/DARRAY/DARRAY(15)
C
C
C...  LOCAL VARIABLES
C
      DIMENSION MSTK(30),IWHICH(30),ISIZE(31),COEBUF(10),
     1               IARRAY(2,24),BNDARY(24)
      LOGICAL CKSTR,CKDTR
      LOGICAL BNDFLG,ERRFLG
      INTEGER ADDRSS,XCANON,BPRTFL,CFSFIL
      EXTERNAL ADDRSS,XCANON
      INTEGER BCDF
      DATA   KMAX,KSMAX/30,24/
C
C...  INITIALIZE.
C
      K = 1
      BNDFLG = .FALSE.
C
C...  DETERMINE VIRTUAL INDEX OF PART(1) IN COM-ARRAY.
C
      IABS = (ADDRSS(PART) - ADDRSS(COM))/KWRDSZ + 1
      INDEX = IABS
      IF (CANFLG) CALL INCAN(INDEX)
      INDEX = INDEX - IBLK1
C
C...  DETERMINE SIZE AND MODE OF CANONICAL FORM FOR PART.
C
      CALL UNPACK(COM(IABS),MODE,ISIZE(1),ISUB)
C
      IF (MODE .NE. 28) GO TO 900
C
C...  PRINT VERIFICATION LISTING.
C
      NN = ISIZE(1) + 1
      BNDNAM = PART(NN)
      CALL CFORM('0',DARRAY,0,1)
      CALL CFORM('CFSAVE/',DARRAY,6,7)
      CALL CFORM(BNDNAM,DARRAY,13,6)
      CALL CPRINT(DARRAY)
      CALL CFORM('NAME PRI.  SUB      * * *  B O U N D I N G   S U R F
     1 A C E S   * * *',DARRAY,1,68)
      CALL CPRINT(DARRAY)
      CALL CFORM('SURF       1ST   SUB MOD  2ND   SUB MOD  3RD   SUB
     1MOD  4TH   SUB MOD  5TH   SUB MOD 6TH   SUB MOD  7TH   SUB MOD
     2 ', DARRAY,6,114)
      CALL CPRINT(DARRAY)
      GO TO 40
C
C...  DETERMINE MODE, SIZE AND SUBSCRIPT OF NEXT FORM AND CHECK VALIDITY
C
   20 NN = K + 1
      CALL UNPACK (COM(IABS),MODE,ISIZ,ISUB)
      IF(ISIZ.LE.0.OR.ISIZ.GT.48.OR.ISUB.LT.0.OR.ISUB.GT.999.OR.MODE.LE.
     1        0) GO TO 900
      ISIZE(NN) = ISIZ
      ASSIGN 90 TO M
C
C...  DETERMINE IF FORM HAS BEEN DEFINED AND CHECK ITS MODE.
C     BYPASS WRITING OF BEVISION INPUT FILE IF PRIOR ERRORS HAVE OCCURED
C
      IF (MODE - 28) 25,30,30
   25 IF (CKDTR(COM(IABS))) GO TO 28
      IF (MODE .EQ. 27) GO TO 60
C
C...  BYPASS WRITING CFSAVE FILE IF PRIOR BOUNDED GEOM. ERR DETECTED.
C
      IF (BNDERR) GO TO 140
      CALL GSURF(COEBUF,COM(IABS),MODE,ISIZ,ERRFLG)
      IF (.NOT. ERRFLG) GO TO 110
C
C...  ERROR 85 - REFERENCED ELEMENT NOT PROPERLY DEFINED.
C
   28 BNDERR = .TRUE.
      CALL ERROR(85,'APT104  ')
      GO TO 140
C...  AN OBJECT.
C
   30 K = K + 1
      IF (K .GT. KMAX) GO TO 910
C
C...  SET MAIN STACK.
C
   40 MSTK(K) = INDEX
      IWHICH(K) = INDEX + 1
      IF (MODE .NE. 28) GO TO 70
C
C...  MAKE SURE CANONICAL FORM IN OBJECT ARGUMENT IS NOT ERRONEOUSLY DE-
C     FINED.  SAVE ITS VIRTUAL INDEX.
C
   45 IF (CKSTR(COM(IABS))) GO TO 900
      INDEX = COM(IABS + 1)
C
C...  DETERMINE ABSOLUTE INDEX.
C
   50 IABS = INDEX + IBLK1
      IF (CANFLG) IABS = XCANON(IABS - 1) + 1
      GO TO 20
C
C...  A BOUNDS.
C     IF NOT THE FIRST BOUND AFTER AN OBJECT GO GET PRIMARY SURFACE.
C
   60 IF (BNDFLG) GO TO 65
C
C...  FOR FIRST BOUND AFTER ENCOUNTERING AN OBJECT STATEMENT, PUT ON STK
C
      BNDFLG = .TRUE.
      GO TO 30
C
C...  SET TO SAVE HALF-SPACE MODIFIER ASSOCIATED WITH BOUNDS ARGUMENT.
C
   65 ASSIGN 100 TO M
      GO TO 80
C
C...  FIRST TIME THRU A BOUNDS STATEMENT.  SET TO PRINT ITS NAME.
C
   70 KS = 1
      NN = ISIZE(K)
      BNDNAM = COM(IABS + NN)
C
C...  DETERMINE VIRTUAL INDEX AND SUBSCRIPT FROM BOUNDS PACKED WORD.
C     SAVE ITS NAME IN BNDARY(KS), HALF-SPACE MODIFIER IN IARRAY(1,KS),
C     AND SUBSCRIPT IN IARRAY(2,KS).
C
   80 BNDARY(KS) = COM(IABS)
      NN = COM(IABS + 1)
      INDEX = NN/K1E4
      IARRAY(2,KS) = (NN - INDEX * K1E4)/K10
      GO TO M, (90,100)
C
C...  SAVE OLD HALF-SPACE MODIFIER IF BOUNDS ARGUMENT IS A BOUNDS.
C
   90 IARRAY(1,KS) = NN - INDEX * K1E4 - IARRAY(2,KS) * K10
C
C...  IF CANONICAL FORM IN BOUNDS ARGUMENT IS ERRONEOUSLY DEFINED,
C     SKIP IT.  IF OKAY, DETERMINE ITS ABSOLUTE INDEX.
C
  100 IF (.NOT.CKSTR(COM(IABS))) GO TO 50
      CALL BADNAM(BNDARY(KS))
      GO TO 140
C
C...  WRITE BEVISION INPUT FILE.
C
  110 IF (KS .EQ. 1) GO TO 120
C
C     WRITE BOUNDING SURFACE COEFFICIENTS.
C
C     WRITE (CFSFIL,112) IARRAY(1,KS),(COEBUF(I), I=1,10)
  112 FORMAT (I2,6F12.6/1X,4F12.6)
      GO TO 140
C
C     WRITE NUMBER OF BOUNDS.
C
  120 ISIZ = (ISIZE(K) - 2)/2
C     WRITE (CFSFIL,125) ISIZ
  125 FORMAT (I4)
C
C     WRITE PRIMARY SURFACE COEFFICIENTS.
C
C     WRITE (CFSFIL,128) (COEBUF(I), I=1,10)
  128 FORMAT (1X,6F12.6/1X,4F12.6)
C
C...  LOOK AT NEXT BOUNDS ARGUMENT AND SAVE POINTER UNTIL ALL BOUNDS
C     ARE FOUND.
C
  140 INDEX = IWHICH(K) + 2
      IS = MSTK(K)
C
C...  TEST FOR END OF A BOUNDS STATEMENT.
C
      IF (INDEX .GT. IS + ISIZE(K)) GO TO 150
      KS = KS + 1
      IF (KS .GT. KSMAX) GO TO 910
C
C...  MORE BOUNDING SURFACES.
C
      IWHICH(K) = INDEX
      IABS = IBLK1 + INDEX - 1
      IF (CANFLG) IABS = XCANON(IABS)
      GO TO 80
C
C...  END OF A BOUNDS STATEMENT.  WRITE IT OUT ON VERIFICATION LISTING.
C
  150 DO 160 I = 2,KS
      IF (IARRAY(1,I) - 2) 152,154,156
  152 IARRAY(1,I) = BCDF('IN  ')
      GO TO 160
  154 IARRAY(1,I) = BCDF('OUT ')
      GO TO 160
  156 IARRAY(1,I) = BCDF('  * ')
  160 CONTINUE
      CALL CFORM(BNDNAM,DARRAY,1,6)
      CALL CPRINT (DARRAY)
      CALL CFORM(BNDARY(1),DARRAY,5,6)
      CALL CFORM('(   )',DARRAY,11,5)
      CALL ICONV(IARRAY(2,1),DARRAY,12,3)
      L=16
      DO 165 I=2,KS
      CALL CFORM(BNDARY(I),DARRAY,L,6)
      CALL CFORM('(   )',DARRAY,L+6,5)
      CALL ICONV(IARRAY(2,I),DARRAY,L+7,3)
      CALL CFORM(IARRAY(1,I),DARRAY,L+11,3)
      L=L+15
      IF(I.EQ.KS) GO TO 164
      IF(L.LT.110) GO TO 165
  164 CALL CPRINT(DARRAY)
      L=16
  165 CONTINUE
      BNDFLG = .FALSE.
  170 K = K - 1
C
C...  ARE WE FINISHED.
C
      IF (K .EQ. 0) GO TO 180
      INDEX = IWHICH(K) + 2
      IS = MSTK(K)
C
C...  TEST FOR END OF OBJECT STATEMENT.
C
      IF (INDEX .GT. IS + ISIZE(K)) GO TO 170
C
C...  MORE OBJECT ARGUMENTS.
C
      IWHICH(K) = INDEX
      IABS = IBLK1 + INDEX - 1
      IF (CANFLG) IABS = XCANON(IABS)
      GO TO 45
C
C...  WRITE MESSAGE IF PRIOR ERRORS DETECTED.
C
  180 IF (BNDERR) GO TO 998
      CALL CFORM('GEOMETRY GENERATION COMPLETED.',DARRAY,8,30)
      CALL CPRINT(DARRAY)
      GO TO 999
C
C...  ERROR 89 - INVALID OR ERRONEOUS CANONICAL FORM ENCOUNTERED.
C     BOUNDED GEOMETRY PROCESSING TERMINATED.
C
  900 CALL ERROR(89,'APT104  ')
      GO TO 998
C
C...  ERROR 90 - TOO MUCH EMBEDDEDNESS IN BOUNDS AND OBJECT STATEMENTS.
C     BOUNDED GEOMETRY PROCESSING TERMINATED.
  910 CALL ERROR(90,'APT104  ')
  998 CALL CFORM('***BOUNDED GEOMETRY ERRORS DETECTED. NO BEVISION INP
     1UT FILE WRITTEN.', DARRAY,8,68)
      CALL CPRINT(DARRAY)
C     REWIND CFSFIL
C
C...  WRITE END OF FILE INDICATOR.
C
  999 CONTINUE
C     WRITE (CFSFIL,125) KM1
C     END FILE CFSFIL
C     REWIND CFSFIL
      RETURN
      END
**** SOURCE FILE : M0000848.V07   ***
*
C
C.....   FORTRAN SUBROUTINE                 APT202...    4/1/69  RC
C
      SUBROUTINE  APT202(ADRESS,ISRFLG)
      IMPLICIT  DOUBLE PRECISION (A-H,O-Z)
C
C  PURPOSE         TO STORE THE SURFACE NAMES AND SUBSCRIPTS
C                  INTO COMMON BLOCKS DSNAME AND SRFNAM
C
C  CALLING SEQNCE  CALL APT202(ADRESS,ISRFLG)
C
C  ARGUMENTS       ADRESS    INDEX TO SURFACE DATA
C                  ISRFLG    FLAG POINTER FOR SURFACE --
C                                 1.  PART SURFACE
C                                 2.  DRIVE SURFACE
C                                 3.  CHECK SURFACE 1
C                                 4.  CHECK SURFACE 2
C
C  CALLED BY       APT234,  FROM,  GOTO
C
C  SUBSIDIARIES    UNPACK
C  DIAGNOSTICS     NONE
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'IDEF.INC'
C
C
C        COMMON BLOCKS FOR SURFACE NAME AND SUBSCRIPT STORAGE
C
C     23.   DSNAME BLOCK
      COMMON/DSNAME/DSNAME,NAMSUB
C
C     24.   SRFNAM BLOCK
      COMMON /SRFNAM/ PSNAME,CS1NAM,CS2NAM,IPSSUB,ICS1SB,ICS2SB
C
C...     INFORMATION ASSOCIATED WITH CANONICAL FORMS STORAGE
C
      INCLUDE 'BLANKCOM.INC'
      DOUBLE PRECISION X(COMSIZ)
      EQUIVALENCE (COM(1),X(1))
      INTEGER  XCANON,ADDRSS
      EXTERNAL XCANON,ADDRSS
C
      EQUIVALENCE  (CVAL,ISKIP)
C
      DIMENSION  ADRESS(*)
      CHARACTER  DOLLAR,TEMP*4,HNAME*8
      LOGICAL  FIRST
      INTEGER  ITEMP(2),BCDF
      EQUIVALENCE  (TMPNAM,ITEMP(1))
      DATA   DOLLAR,HNAME  / '$','NONAME  ' /
C
C     ------------------------------------------------------------
C
      CALL UNPACK(ADRESS,MODE,ISIZE,ISBSCT)
      IF (ISBSCT .GT. 1) GO TO 200
      K=ISIZE+1
      TMPNAM=ADRESS(K)
      CALL HOLFRM(ITEMP,TEMP,1,4,NWD)
    5 IF (DOLLAR .EQ. TEMP(1:1)) THEN
        ITEMP(1) = BCDF(HNAME(1:4))
        ITEMP(2) = BCDF(HNAME(5:6))
      ENDIF
C
C        BRANCH FOR PROPER SURFACE GIVEN BY ISRFLG
      GO TO (10,20,30,40), ISRFLG
C
   10 PSNAME=TMPNAM
      IPSSUB=ISBSCT
      GO TO 100
C
   20 DSNAME=TMPNAM
      NAMSUB=ISBSCT
      GO TO 100
C
   30 CS1NAM=TMPNAM
      ICS1SB=ISBSCT
      GO TO 100
C
   40 CS2NAM=TMPNAM
      ICS2SB=ISBSCT
C
  100 RETURN
C
C
C
C...     DETERMINE VIRTUAL INDEX OF ADRESS(1) IN X-ARRAY
C
  200 I=(ADDRSS(ADRESS) - ADDRSS(X))/KWRDSZ + ISIZE + 1
      K = I
      IF (CANFLG) CALL INCAN(I)
C
C...     FIND BCD NAME OF THIS SURFACE
C
      DO 400 J=2,ISBSCT
  250 CVAL=X(K)
      IF (ISKIP .LE. 0 .OR. ISKIP .GT. 1024) GO TO 300
      I=I+ISKIP
      K = I
      IF (CANFLG) K = XCANON(I)
      GO TO 250
  300 K = K + ISIZE + 1
      I = I + ISIZE + 1
  400 CONTINUE
      TMPNAM = X(K)
      GO TO 5
      END
**** SOURCE FILE : M0000861.V02   ***
*
C.....FORTRAN SUBROUTINE              APT295               4/30/68
C
C PURPOSE      TO HANDLE EXPONENTIATION
C
C LINKAGE      CALL APT295 (RESULT,A,B)
C
C ARGUMENTS    RESULT  ARRAY TO CONTAIN RESULT
C              A       BASE
C              B       EXPONENT
C
C SUBSIDIARIES TYPE                ENTRY
C              REAL FUNCTION       DABS
C
      SUBROUTINE APT295 (RESULT,A,B)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
      DIMENSION RESULT(1),A(1),B(1)
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'ZNUMBR.INC'
C
C
      BABS=DABS(B(1))
      RESULT(1)=DABS(A(1))**BABS
      IF(A(1).GE.Z0)GO TO 10
C
C          WARNING - THE FOLLOWING PROCEDURE WILL GIVE AN INCORRECT
C          RESULT FOR THE PART PROGRAM COMBINATION NEGATIVE A
C          AND NON-INTEGER B
C
      IBABS=BABS+Z1EM2
      RESULT(1)=(ZM1**IBABS)*RESULT(1)
   10 IF(B(1).GE.Z0)GO TO 20
      RESULT(1)=Z1/RESULT(1)
   20 RETURN
       END
**** SOURCE FILE : M0000706.W01   ***
*
      SUBROUTINE APT296
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'IFXCOR.INC'
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE 'SYMFIL.INC'
      DIMENSION KHOLDP(8)
      LOGICAL FIRST
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
      SAVE IFIRST,KHOLDP
      DATA KHOLDP/0,0,Z4E,0,Z4E,1,Z4E,3/
      DATA FIRST/.TRUE./
C
C     THIS SUBROUTINE WRITES THE HOLDPP
C      RECORD ON EXFILE AT THE BEGINNING OF MACRO OUT PUT
C
      IF (FIRST) THEN
        KHOLDP(1)=BCDF('HOLD')
        KHOLDP(2)=BCDF('PP  ')
        FIRST=.FALSE.
      ENDIF
      CALL RECORD(KHOLDP(4))
      NR=0
      CALL EWRITE(EXFILE,NR,KHOLDP,8,IR)
      RETURN
      END
C
C---    APT297 ENTERED TO WRITE END RECORD FOR MACRO ON EXFILE
      SUBROUTINE APT297
C
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'IFXCOR.INC'
                          
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE 'SYMFIL.INC'
      DIMENSION KHOLDP(8)
      LOGICAL FIRST
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
      SAVE IFIRST,KHOLDP
      DATA KHOLDP/0,0,Z4E,0,Z4E,1,Z4E,4/
      DATA FIRST/.TRUE./
C
C     THIS SUBROUTINE WRITES THE HOLDPP
C      RECORD ON EXFILE AT THE BEGINNING OF MACRO OUT PUT
C
      IF (FIRST) THEN
        KHOLDP(1)=BCDF('HOLD')
        KHOLDP(2)=BCDF('PP  ')
        FIRST=.FALSE.
      ENDIF
      CALL RECORD(KHOLDP(4))
      NR=0
      CALL EWRITE(EXFILE,NR,KHOLDP,8,IR)
      RETURN
      END
**** SOURCE FILE : M0004117.V11   ***
*
C
C...  FORTRAN SUBROUTINE                    APT298
      SUBROUTINE  APT298(CODE,PPROC1,PPROC2)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'IFXCOR.INC'
C
C... LOCAL VARIABLES
C
      INTEGER CLPRNT,CNVERT,CODE,PPFLG,ONE,PPFLAG
C
C
      DIMENSION PPS(2,10),PPLIBR(10),NAME(2)
C
      DIMENSION A4ARY(24)
      DIMENSION I4ARY(48)
      EQUIVALENCE (A4ARY(1),I4ARY(1))
      EQUIVALENCE (ONE,I4ARY(2))
      EQUIVALENCE (NOPPS,I4ARY(3))
      EQUIVALENCE (CLPRNT,I4ARY(4))
      EQUIVALENCE (CNVERT,I4ARY(5))
      EQUIVALENCE (PPFLG,I4ARY(6))
      EQUIVALENCE (MLTFLG,I4ARY(7))
      EQUIVALENCE (PPS(1,1),I4ARY(9))
      SAVE I4ARY
      COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS(7),
     C           IRDSAV(20)
      LOGICAL ERR,XC,CL,PX,END,FINI,ASM,ABEND
      INTEGER ERRX,XTRAS
C
C          SYMFIL I/O FILES NAME
C
      INCLUDE 'SYMFIL.INC'
      CHARACTER*8 PPLIBR,PROC1
C
      INTEGER BCDF
C
      DATA ONE,LIBTOP,NOPPS,CLPRNT,CNVERT,PPFLAG,PPFLG
     / /   1,  10,    0,    0,     0,     0,     0    /
      DATA PPS(1,1),PPS(2,1) /0. ,0./
C
C...     APT4 POSTPROCESSOR LIBRARY
      DATA PPLIBR/'APT4PP','CLCMP4',8*'      '/
C
C ********************************************************************
C
      GO TO (10,20,30,100), CODE
   10 CLPRNT=1
      RETURN
   20 PPFLAG=1
      PX=.TRUE.
      CNVERT=0
      PPFLG=0
      NOPPS=0
      RETURN
   30 CONTINUE
      PPNAME=PPROC1
      CALL HOLFRM(PPNAME,PROC1,1,8,NWD)
C
C...     CHECK FOR APT4 POSTPROCESSOR
   38 DO 40 I=1,LIBTOP
      IF (PPLIBR(I) .EQ. PROC1) GO TO 70
   40 CONTINUE
C
      IF(PPFLAG.EQ.0) CNVERT=1
      GO TO 90
C
   70 IF(PPFLAG.EQ.0) PPFLG=1
C
C     STORE POSTPROCESSOR NAME
C
   90 NOPPS = NOPPS + 1
      PPS(1,NOPPS)=PPNAME
      PPS(2,NOPPS) = PPROC2
      RETURN
C
  100 MLTFLG=MULOUT
      CALL TAPOP(CPFILE,-1)
  110 NR =0
      NOPPS=NOPPS*2
      I4ARY(1)=BCDF('CPFL')
      CALL AWRITE(CPFILE,NR,I4ARY,48,IR)
C
      CALL TAPOP(CPFILE,-2)
C
      RETURN
      END
**** SOURCE FILE : M0004142.V09   ***
*
C.....FORTRAN SUBROUTINE  ....APT299         8/68                 AR,HG
C.....FORTRAN SUBROUTINE      APT299                4/18/68    AR
C
C PURPOSE      TO CREATE AND WRITE EXFILE RECORDS FROM DATA SUPPLIED BY
C              THE PART PROGRAM.
C
C LINKAGE      CALL APT299(ARG1,ARG2,ARG3,ARG4)
C
C NOTE 1       APT299 IS CALLED REPEATEDLY BY THE PART PROGRAM UNTIL ALL
C              ARGUMENTS NECESSARY FOR THE CREATION OF THE EXFILE RECORD
C              HAVE BENN PASSED.
C
C ARGUMENTS    ARG1           IN THE FIRST CALL TO APT299 ARG1 = THE
C                             NUMBER OF DATA ITEM ARGUMENT PAIRS.
C                             THEREAFTER IT IS THE FIRST ELEMENT OF A
C                             DATA ITEM ARGUMENT PAIR.
C              ARG2           IN THE FIRST CALL TO APT299 ARG2 = THE
C                             MAJOR WORD OF THE PART PROGRAM STATEMENT
C                             THAT IS CAUSING AN EXFILE RECORD TO BE
C                             CREATED. THEREAFTER IT IS THE SECOND
C                             ITEM OF A DATA ITEM ARGUMENT PAIR.
C              ARGK (K=1,3)   THE FIRST ELEMENT OF A DATA ITEM ARGUMENT
C                             PAIR. IT IS USED AS AN INDEX ON THE CLSIZE
C                             ARRAY TO LOCATE THE SIZE OF AN ITEM.
C              ARGL (L=2,4)   THE SECOND ELEMENT OF A DATA ITEM ARGUMENT
C                             PAIR. IT IS EITHER A SINGLE DATA ITEM OR
C                             AN ARRAY CONTAINING A STRING OF DATA ITEMS
C
C NOTE 2       A DATA ITEM ARGUMENT PAIR OCCURS FOR EACH SINGLE ITEM OR
C              EACH STRING OF ITEMS TO BE INCLUDED IN THE EXFILE RECORD.
C
C SUBSIDARY    MACHINE LANGUAGE SUBROUTINE        RECORD
C
C
      SUBROUTINE APT299(ARG1,ARG2,ARG3,ARG4)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'KNUMBR.INC'
      INCLUDE 'SYMFIL.INC'
C......  LOCAL VARIABLES
C
      LOGICAL  FIRST,ODD
      INTEGER  CLSIZE,SIZE,START,T,ARG1,ARG2,ARG3,ARG4,W,BLANK,BCDF
      INTEGER  Z4E
      PARAMETER (Z4E=1308622848)
C
      DIMENSION ARG1(1),ARG2(*),ARG3(1),ARG4(*),W(200),
     / CLSIZE(27)
C
      SAVE FIRST,BLANK
C
      DATA  FIRST,IUNORM /.TRUE.,Z4E/
      DATA  CLSIZE /1,1,4,4,7,7,4,3*10,7,10,0,0,79,10,3*0,12,3,3,4*1,0/
C
C ********************************************************************
C
C
C... CHECK IF THIS IS THE FIRST CALL TO APT299 FOR THE CURRENT EXFILE
C... RECORD BEING CREATED. IF NOT,CONTINUE INSERTING ITEMS IN THE
C... RECORD. IF IT IS THE FIRST CALL,DO HOUSEKEEPING.
C
      IF (.NOT. FIRST)  GO TO 15
C
C... SET FIRST CALL FLAG FALSE.
C
      FIRST = .FALSE.
C
C    INITIALIZE BLANK
      BLANK = BCDF('    ')
C
C... SET NOPAIR = THE NUMBER OF DATA ITEM ARGUMENT PAIRS.
C
      NOPAIR=ARG1(1)
C
C... SET FIRST RECORD WORD = MAJOR WORD.
C... SET SECOND RECORD WORD = PART PROGRAM STATEMENT INTERNAL SEQUENCE
C... NUMBER
C
      W(3)=IUNORM
      W(1)=ARG2(1)
      W(2)=ARG2(2)
      CALL RECORD(W(4))
C
C... IF THERE ARE NO MORE ARGUMENTS,ADD ALPHANUMERIC DATA ITEM
C... AND WRITE THE RECORD.
C
      IF (NOPAIR .GT. K0)  GO TO 10
    5 W(7)=IUNORM
      W(8)=K2
      W(9)=BLANK
      W(10)=BLANK
      J=10
      GO TO 80
C
C... INITIALIZE RECORD INDEX
C
   10 J=K6
C
C... INSERT DATA ITEMS IN RECORD.
C... INITIALIZE DO LOOP INDEX
C
      IDO = K1
   15 START = IDO
      DO 70  I = START,NOPAIR
C
C... IF I IS EVEN,SET ODD = .FALSE. INDICATING ARG1 AND ARG2 ARE TO BE
C...    USED DURING THIS ITERATION.
C... IF I IS ODD, SET ODD = .TRUE. INDICATING ARG3 AND ARG4 ARE TO BE
C...    USED DURING THIS ITERATION.
C
      ODD = .TRUE.
      IF ((I - K2*(I/K2)) .EQ. K0)  ODD = .FALSE.
C
C... INSERT ITEM INDICATOR CODE IN RECORD.
C
      J=J+K2
      W(J-1)=IUNORM
      W(J)=ARG1(1)
      IF(ODD) W(J)=ARG3(1)
      T=W(J)
      IF(T.GT.K2.AND.T.LT.K27)  W(J)=K4
      IF(T.EQ.K27) W(J)=K3
C
C... SET SIZE = CLSIZE FOR THIS ITEM. FROM THE MAGNITUDE OF SIZE
C... DETERMINE THE TYPE OF THE ITEM.
C
      SIZE = CLSIZE(T)
      IF (SIZE - K1)  20,40,30
C
C... ALPHANUMERIC DATA ITEM STRING --- INSERT NUMBER OF ITEMS,TOTAL
C... CHARACTER COUNT, AND DATA ITEMS IN THE RECORD.
C... RESET SIZE = NUMBER OF ITEMS IN THE STRING.
C
   20 J=J+K4
      W(J-1)=IUNORM
      W(J-3)=IUNORM
      SIZE=ARG4(1)
      W(J)=ARG4(2)
      IF(ODD) GO TO 22
      SIZE=ARG2(1)
      W(J)=ARG2(2)
      GO TO 25
   22 IF(W(J).NE.K0) GO TO 25
      W(J-2)=K2
      J=J+K2
      W(J-1)=BLANK
      W(J)=BLANK
      GO TO 80
C
C... SET STRING ARRAY SUBSCRIPT =3.
C
   25 W(J-2)=(SIZE+K1)/K2
      L=K3
      GO TO 50
C
C... GEOMETRIC VARIABLE --- INSERT NUMBER OF ITEMS AND GEOMETRIC DATA.
C
   30 J=J+K2
      W(J-1)=IUNORM
      W(J)=SIZE
C
C... FLOATING POINT OR ALPHANUMERIC DATA ITEM.--- SET ARRAY SUBSCRIPT
C... =1.
C
   40 L = K1
C
      SIZE=SIZE*2
C... ADD ARRAY ELEMENTS TO RECORD.
   50 L1=L
      DO 60 L=L1,SIZE
      J = J + K1
      W(J) = ARG2(L)
      IF (ODD)  W(J) = ARG4(L)
   60 CONTINUE
C
C... CHECK IF IT IS NECESSARY TO RETURN TO THE PART PROGRAM FOR MORE
C... ARGUMENTS.
C
      IF ((.NOT. ODD) .OR. (I .EQ. NOPAIR))  GO TO 70
      IDO = I + 1
      GO TO 99
   70 CONTINUE
C
C... SET THIRD RECORD WORD = NUMBER OF DATA ITEMS, RESET FIRST CALL FLAG
C... .TRUE., WRITE RECORD TO EXFILE ,AND RETURN TO CALLER.
C
   80 W(5)=IUNORM
      IF((J-K2*(J/K2)).EQ.K0) GO TO 85
      J=J+1
      W(J)=BLANK
   85 W(6)=J/2-K3
      FIRST = .TRUE.
      NR=0
      CALL EWRITE(EXFILE,NR,W,J,IR)
   99 RETURN
       END
**** SOURCE FILE : M0011445.W02   ***
*
C.....FORTRAN SUBROUTINE  ....ATAPE          8/68                    HG
C
C  PURPOSE     TO FORM THE CL RECORD AND WRITE IT ON EXFILE.
C
C  LINKAGE     CALL  ATAPE
C
C  ARGUMENTS   NONE
C
C  IMPORTANT VARIABLES
C              ICL     INDICATOR
C                      =2  CONTINUATING CL POINT.
C                      =3  LAST CL POINT.
C              KCR     CONTAINING THE LAST ICL VALUE.
C              MAXNR   MAXIMUM NUMBER OF RECORD PRODUCED BY THIS
C                      MOTION STATEMENT.
C              NUMCNT  MAXIMUM NUMBER OF POINT PRODUCED BY THE LAST
C                      MOTION STATEMENT.
C              JAXNR   EQUAL TO MAXNR BUT SAVED UNTIL NEXT MOTION
C                      STATEMENT.
C              ISIZE   COUNTER OF THE BUFFER.
C              NR      RECORD NUMBER ASSIGNED BY EWRITE.
C              CLPONT  BUFFER TO CONTAIN CL DATA.
C              ILPONT  INTEGER BUFFER ARRAY EQUIVALENT TO CLPONT.
C              KB      MAXIMUM NUMBER OF CL DATA IN THE BUFFER.
C                      63 OR 36 ACCORDING TO THE MULTAX SPECIFICATION.
C              JB      THE RECORD NUMBER WHERE THE SPECIFIED POINT
C                      WILL EXIST.
C              IEE     ERROR RETURN INDICATOR.
C
      SUBROUTINE ATAPE
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'HOLRTH.INC'
      INCLUDE 'SV.INC'
      INCLUDE 'ISV.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'KNUMBR.INC'
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE 'SYMFIL.INC'
C
      INCLUDE 'BLANKCOM.INC'
C
      COMMON/SSARLM/B(64,4),U(4),V(4),ITOP(6,4,4),IFLAG(4,4),IPNUM(4)
C
      INCLUDE 'CLDT.INC'
C
      LOGICAL ERRCTR
      DIMENSION MODSRF(2)
C
      DIMENSION CLPONT(256),ILPONT(512),R(6)
      EQUIVALENCE (CLPONT(1),ILPONT(1))
      CHARACTER*6 GODLTA
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
      LOGICAL FIRST
      SAVE CLPONT,FIRST
      DATA FIRST/.TRUE./
      DATA ILPONT(3)/Z4E/,ILPONT(5)/Z4E/
      DATA ISIZE,KCR,IPOW /2*3,Z4E/
      DATA JMP /1/,GODLTA /'GODLTA'/
C... INITIALIZE CLDAT BUFFER
      IF (FIRST) THEN
        ILPONT(1)=BCDF('CLDA')
        ILPONT(2)=BCDF('TA  ')
        FIRST=.FALSE.
      ENDIF
C
C...     TEST FOR AN ARELEM ERROR OR FOR DNTCUT
  185 IF(IAERR.NE.0.OR.ICUT.NE.0) GO TO 3
      IF(KCR.NE.3) GO TO 7
      IF(CLDFG) ICLTAB(2,ICLINE)=ICLTAB(2,ICLINE)+NUMCNT
      NUMCNT=0
      NSIZE =0
      ERRCTR=.FALSE.
    7 KCR=ICL
      IF(MODFER.EQ.GODLTA)GOTO 5
      NUMCNT=NUMCNT+1
    5 ILPONT(2*ISIZE+1)=IPOW
      ILPONT(2*ISIZE+2) = ICL
      JMP=1
      IF(ICLCOD.GT.1)GOTO 100
    6 DO 1 I=1,3
      CLPONT(ISIZE+2)=TE(I)
C
C...CHECK IF THERE SHOULD BE NO TOOL AXIS PRINTOUT
      IF (MULOUT.EQ.K0) GO TO 1
C
      CLPONT(ISIZE+5)=TA(I)
    1 ISIZE=ISIZE+K1
      ISIZE = ISIZE + K4
      IF (MULOUT.EQ.K0) ISIZE=ISIZE-K3
    4 IF((ICL.EQ.K2).AND.(ISIZE.LT.255)) GO TO 190
    2 NR=0
      J=2*ISIZE
      ILPONT(4) = ISEQNO
      ILPONT(6) = ISIZE - 3
      CALL EWRITE(EXFILE,NR,CLPONT,J,IR)
      KNR=NR
      KNB=ICLBLK
      ISIZE = 3
      GOTO(190,5),JMP
    3 IF(ISIZE.GT.3) GO TO 2
  190 RETURN
C
  200 ISIZE=NSIZE
      JMP=2
      GOTO 2
C
C...SPECIAL CLDAT - PRINTOUT REQUESTED
C
  100 IF(ERRCTR)GOTO 119
      ERRCTR=.TRUE.
      MODSRF(1)=ISFIDN(IPS)
      MODSRF(2)=ISFIDN(IDS)
C
      DO 120 I=1,6
      IF(MOD(ICLCOD,IPTVEC(I+3)).NE.0)GOTO 120
C          PDS NDS PPS NPS UVPDS UVPPS
      GOTO(111,111,115,115,  113,  117),I
  111 IF(MODSRF(2).GT.0.AND.MODSRF(2).LT.18)GOTO 120
  113 IF(MODSRF(2).EQ.29)GOTO 120
      GOTO 118
  115 IF(MODSRF(1).GT.0.AND.MODSRF(1).LT.18)GOTO 120
  117 IF(MODSRF(1).EQ.29)GOTO 120
  118 CALL ERROR(98,'ATAPE   ')
      GOTO 119
  120 CONTINUE
C
  119 NSIZE=ISIZE
      IF(MODFER.EQ.GODLTA)GOTO 6
      ISIZE=ISIZE+K1
      DO 140 I=1,9
      IF(MOD(ICLCOD,IPTVEC(I)).NE.0)GOTO 140
      ISIZE=ISIZE+K1
      IF(ISIZE.GT.253)GOTO 200
      ISIZ2=2*ISIZE
      ILPONT(ISIZ2-1)=BCDF(PNTVCT(I)(1:4))
      ILPONT(ISIZ2)=BCDF(PNTVCT(I)(5:8))
      DO 130 J=1,3
      ISIZE=ISIZE+K1
      GOTO(121,122,123,124,125,126,127,128,129),I
  121 CLPONT(ISIZE)=TE(J)
      GOTO 130
  122 CLPONT(ISIZE)=TA(J)
      GOTO 130
  123 CLPONT(ISIZE)=TI(J)
      GOTO 130
  124 CLPONT(ISIZE)=SP(J,IDS)
      GOTO 130
  125 CLPONT(ISIZE)=SN(J,IDS)
      GOTO 130
  126 CLPONT(ISIZE)=SP(J,IPS)
      GOTO 130
  128 LL=IDS-1
      GOTO 131
  129 LL=IPS-1
  131 CONTINUE
      CLPONT(ISIZE)=0.
      ISIZE=ISIZE+2
      CLPONT(ISIZE)=0.
      CLPONT(ISIZE-1)=0.
      IF(MODSRF(LL).NE.29)GOTO 140
      CLPONT(ISIZE-2)=U(LL)
      CLPONT(ISIZE-1)=V(LL)
      JJ=CANON((LL-1)*10+1)
      CLPONT(ISIZE)=JJ*1000+IPNUM(LL)
      GOTO 140
  127 CLPONT(ISIZE)=SN(J,IPS)
  130 CONTINUE
  140 CONTINUE
      GOTO 4
      END
C
C....  ATAPER
C
      SUBROUTINE  ATAPER (R,NN,JJ,KK,IEE)
C  PURPOSE  TO RETRIEVE CL POINT FROM CLTAPE.
C
C  LINKAGE  CALL ATAPER (R,NN,JJ,KK,IEE)
C
C  ARGUMENTS   R   ARRAY TO CONTAIN THE CL DATA.
C              NN  INTEGER INDICATING CL POINT NUMBER
C              JJ  INTEGER CLDAT SECTION NUMBER
C              KK  INTEGER DATA TYPE
C
C     CHECK IF THE SPECIFIED POINT NUMBER IN THE SPECIFIED SECTION.
C
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
C
      INCLUDE 'IFXCOR.INC'
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE 'SYMFIL.INC'
C
      INCLUDE 'CLDT.INC'
C
      DIMENSION CLPONT(256),ILPONT(512),R(6)
      EQUIVALENCE (CLPONT(1),ILPONT(1))
      INTEGER Z4E,KCST
      PARAMETER (Z4E=1308622848)
      SAVE KCST
      DATA IPOW/Z4E/,KCST/Z4E/
      NR=NN
      IF(JJ.GT.0)GOTO 480
      IF(NR.LE.0.OR.NR.GT.NUMCNT)GOTO 610
C      IF(NSIZE.GT.0)GOTO 610
C
C     RETRIEVE A POINT OR A VECTOR OF THE LAST MOTION COMMAND
C     STORE 0,0,1 AS I,J,K
  440 R(4) = 0.
      R(5) = 0.
      R(6) = 1.
      ISZ=4+3*MULOUT
      I  =252/ISZ
      I1 =(NUMCNT-1)/I
      I2 =(NR    -1)/I
      IF(I1.NE.I2)GOTO 460
C
C     DESIRED POSITION OF MOTION COMMAND IS IN CLPONT
      J = 5+ILPONT(6)-ISZ*(NUMCNT-NR+1)
      K = J-2+ISZ
      L=0
      DO 450 I=J,K
      L=L+1
  450 R(L)=CLPONT(I)
      GOTO 600
C
C     FETCH EXFILE BLOCK CONTAINING DESIRED POSITION
  460 NBF=KNB-I1+I2+1
      NRP=I*(I2+1)
      CALL EREAD(EXFILE,R,NR,NBF,NRF,NRP,-ISZ,IR)
      GOTO 600
C
C     SEQUENTIAL SEARCH FROM BEGIN OF  'CLDAT/START,..'  REGION
  480 IF(JJ.EQ.KSCT)GOTO 510
      DO 490 LINE=1,ICLCNT
      IF(ICLTAB(1,LINE).EQ.JJ)GOTO 500
  490 CONTINUE
      GOTO 610
C
  500 KKF=IPOW
      I33=IPOW
  510 I3 =ICLTAB(3,LINE)
      IF(CLDFG.OR.NR.LE.0.OR.NR.GT.ICLTAB(2,LINE))GOTO 610
      IF(I3.GT.1)GOTO 520
      IF(KK.GT.2)GOTO 610
      ISZ=4+3*MULOUT
      NRP=0
      GOTO 540
C
  520 IF(MOD(I3,IPTVEC(KK)).NE.0)GOTO 610
      IF(KK.EQ.KKF.AND.I33.EQ.I3)GOTO 550
      NRS=0
      DO 530 I=1,9
      IF(MOD(I3,IPTVEC(I)).EQ.0)NRS=NRS+1
      IF(KK.EQ.I)NRP=NRS
  530 CONTINUE
      ISZ=NRS*4+1
  540 KSCT=JJ
      KKF   =KK
      I33   =I3
      NBF   =ICLTAB(4,LINE)
      NRF   =ICLTAB(5,LINE)
C
C  NR             RECORD NUMBER IN THE DESIRED CLDAT SECTION.
C  NBF            FISRT EXFILE BLOCK  NUMBER OF THE CLDAT SECTION.
C  NRF            FISRT EXFILE RECORD NUMBER OF THE CLDAT SECTION.
C  ISZ            CLDAT RECORD SIZE.(DATA OF ONE POSITION = POINT)
C  NRP            POSITION OF THE DATA WANTED.
C
  550 CALL EREAD (EXFILE,R,NR,NBF,NRF,NRP,ISZ,IR)
C
  600 IEE = 0
      RETURN
  610 IEE = 1
      KSCT=IPOW
      RETURN
      END
**** SOURCE FILE : M0001039.V08   ***
*
      SUBROUTINE BAD(ICNTRL,ITYPE,ID,VALUE)
C---  ROUTINE TO FORMAT AND PRINT LINES OF PRINT FOR DEBUGGING
C---  EACH LINE CONTAINS UP TO SIX VALUES WITH IDENTIFIERS FOR EACH
C---  ICNTRL=-1  MEANS RELEASE THE BUFFER (DARRAY) FOR PRINTING AND BLNK
C---  ICNTRL=0 MEANS BLANK THE BUFFER AND SET COLUMN POINTER NCOL TO 4
C---  ICNTRL GT 0 MEANS  TO PLACE ICNTRL ITEMS INTO THE BUFFER AND
C---  ICNTRL=-N MEANS PRINT N ITEMS AND THEN RELEASE BUFFER TO PRINT.
C---  AUTOMATICALLY PRINT THE BUFFER AS ROOM IS EXHAUSTED
C---  ITYPE =0 MEANS PRINT THE INTEGER AT VALUE
C---    AND =1 MEANS PRINT THE DOUBLE PRECISION
C---  ID IS THE 4 CHARACTER IDENTIFYING NAME FOR VALUE AND VALUE
C---     IS THE DATA TO BE FORMATTED INTO THE PRINT LINE.
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INCLUDE 'DARRAY.INC'
      CHARACTER BLANK*3,STAR*2,EQUAL,ID*4
      INTEGER VALUE
      DIMENSION VALUE(*)
      DIMENSION II(2)
      EQUIVALENCE (AA,II(1))
C
      SAVE NCOL
C
C
C---     BUFFUL IS A FLAG TO SIGNAL THAT A BUFFER IS NOW FULL
C---     SO THAT IT SHOULD NOW BE EMPTIED BEFORE INSERTING MORE DATA
      LOGICAL BUFFUL
C
      DATA BLANK/'   '/,STAR/'**'/,NCOL/4/,EQUAL/'='/
C---
C---  IC IS A COUNT DOWN VARIABLE FOR CASES WHEN ICNTRL GT 1
      IC=0
      BUFFUL=.FALSE.
C---     TRANSFER ICNTRL TO ICNTRX SO ICNTRL IS NOT ALTERED
      ICNTRX=ICNTRL
C---     THIS IS A PATCH TO ENABLE DUMPING OF DATA AT END OF CALL
C---     IF ICNTRX IS NEGATIVE, THEN DATA SHOULD BE DUMPED AT
C---     AT THE END OF THE CURRENT CALL
      IRLSE=1
      IF(ICNTRX.LT.0) IRLSE=-1
C---     IF ID IS ZERO AND ICNTRX IS NEGATIVE THEN RELEASE NOW
      IF(ID(1:1).EQ.' '.AND.ICNTRX.LT.0) GO TO 300
C---     SET ICNTRX POSITIVE, SINCE IRLSE HOLDS THE NEGATIVE INDICATION
      ICNTRX=IABS(ICNTRX)
      IF ( ICNTRX ) 300, 100, 200
C
C---  INITIALIZE THE BUFFER BY BLANK FILLING AND COLUMN SETTING
  100 CONTINUE
      DARRAY=BLANK
      NCOL=4
      IF(.NOT.BUFFUL) GO TO 999
C---  BUFFER HAS JUST BEEN AUTOMATICALLY EMPTIED.  NOW INSERT DATA
      BUFFUL=.FALSE.
      GO TO 210
C
C---   ADD A NEW DATA ELEMENT INTO THE BUFFER LINE
  200 CONTINUE
      BUFFUL=.TRUE.
      IF(NCOL+18.GT.120) GO TO 300
  210 CALL CFORM(BLANK,DARRAY,NCOL,1)
      NCOL=NCOL+1
      IC=IC+1
C---   PLACE AN ID FOR THE FIRST ARRAY EL, COUNTERS THEREAFTER
      IF(IC.EQ.1)  CALL CFORM(ID,DARRAY,NCOL,4)
      IF(IC.GT.1) CALL ICONV(IC,DARRAY,NCOL,4)
      NCOL=NCOL+4
      CALL CFORM(EQUAL,DARRAY,NCOL,1)
      NCOL=NCOL+1
C---   BRANCH BASED ON TYPE OF DATA -- INTEGER OR REAL
      IF (ITYPE.EQ.0) THEN
C---   ADD AN INTEGER TO THE LINE BUFFER
C---  THE INTEGER JJ IS SETUP BY THE MOVEMENT OF VALUE INTO AA
      CALL ICONV(VALUE(IC),DARRAY,NCOL,10)
      NCOL=NCOL+10
      CALL CFORM(BLANK,DARRAY,NCOL,3)
      NCOL=NCOL+3
      ELSE IF (ITYPE.EQ.1) THEN
C---   ADD A REAL TO THE LINE BUFFER
C---  CARE MUST BE TAKEN TO TRANSFER DATA TO A DOUBLE WORD  BOUNDARY
      II(1)=VALUE(2*IC-1)
      II(2)=VALUE(2*IC)
C---  THE DOUBLE VALUE IS NOW AVAILABLE IN AA THRU EQUIVALENCE
      INPUT=VALUE(2*IC-1)
      CALL FCONV(AA,DARRAY,NCOL,13,5)
      NCOL=NCOL+13
      ELSE
        CALL CFORM('******',DARRAY,NCOL,6)
        NCOL=NCOL+13
      ENDIF
      GOTO 999
C
C
C---   PRINT THE BUFFER AND BLANK THE LINE
  300 CONTINUE
C---  IF THE BUFFER IS EMPTIED AUTOMATICALLY, MARK IT WITH STARS
      IF(.NOT.BUFFUL) GO TO 310
      IF(IRLSE.GT.0) CALL CFORM(STAR,DARRAY,2,2)
  310 CALL CPRINT(DARRAY)
      GO TO 100
C---
  999 CONTINUE
C---  CHECK TO SEE IF AN ARRAY HAS BEEN EXHAUSTED
      IF(ICNTRX.GT.0.AND.IC.LT.ICNTRX) GO TO 200
C---     IF IRLSE IS NEGATIVE THEN THE BUFFER SHOULD BE
C---     RELEASED NOW
      IF(IRLSE.GT.0) GO TO 9999
      IF(NCOL.EQ.4) GO TO 9999
C---     DATA IS PRESENT SO RELEASE THE BUFFER
      CALL CPRINT(DARRAY)
      NCOL=4
C
 9999 CONTINUE
      RETURN
      END
**** SOURCE FILE : M0000873.V02   ***
*
C.....FORTRAN SUBROUTINE ....CHKRET              8/68               RN
C
C              FORTRAN SUBROUTINE CHKRET
C
C PURPOSE      THIS SUBROUTINE IS A TABCYL INTERVAL SCREENING TECHNIQUE
C              THAT CONSTRUCTS A RECTANGLE AROUND THE INTERVAL BEING
C              CONSIDERED.
C
C LINKAGE      CALL CHKRET(IHU,RAD,INTRCT,D,S)
C
C ARGUMENTS    IHU    INDEX OF CURRENT TABCYL SEGMENT
C              RAD    THE RADIUS OF THE CIRCLE
C              INTRCT
C
C              D      THE ARRAY CONTAINING THE TABCYL EXTERNAL
C                     CANONICAL FORM
C              S      THE ARRAY CONTAINING LINE CANONICAL FORM
C SUBSIDIARIES  NONE
C
      SUBROUTINE CHKRET(IHU,RAD,INTRCT,D,S)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION PX(6),PY(6),D(*),S(4)
      IVERTL=0
      MINUS=0
      IPLUS=0
  400 DELY=D(IHU+8)-D(IHU+1)
      DELX=D(IHU+7)-D(IHU)
      DIHU4=D(IHU+4)
      IF(DABS(DIHU4).LT.1.0D-7) DIHU4=1.0D-7
      SL1Y=DELY/DIHU4
      SL1X=DELX/DIHU4
      SL2Y=SL1X
      SL2X=-SL1Y
      RD=RAD+1.0D-6
      BO1=RD*SL1X
      BO2=RD*SL1Y
      BO3=DABS(D(IHU+5))+RD
      BO4=BO3*SL2X
      BO5=BO3*SL2Y
      BO6=DABS(D(IHU+6))+RD
      BO7=BO6*SL2X
      BO8=BO6*SL2Y
      PX(5)=D(IHU)-BO1
      PY(5)=D(IHU+1)-BO2
      PX(1)=PX(5)+BO4
      PY(1)=PY(5)+BO5
      PX(4)=PX(5)-BO7
      PY(4)=PY(5)-BO8
      PX(6)=D(IHU+7)+BO1
      PY(6)=D(IHU+8)+BO2
      PX(2)=PX(6)+BO4
      PY(2)=PY(6)+BO5
      PX(3)=PX(6)-BO7
      PY(3)=PY(6)-BO8
      XPLINE=S(1)*S(4)
      IF(DABS(S(2))-1.0D-7)1,1,2
    1 IVERTL=1
      GO TO 3
    2 SLPLIN=-S(1)/S(2)
      X1PLIN=S(1)*S(4)
      Y1PLIN=S(2)*S(4)
      BPLIN=Y1PLIN-SLPLIN*X1PLIN
    3 DO 10 I=1,4
      IF(IVERTL) 5,5,6
    5 YPLINE=(SLPLIN)*PX(I)+BPLIN
      VALUE=PY(I)-YPLINE
      GO TO 4
    6 VALUE=PX(I)-XPLINE
    4 IF(VALUE) 11,12,13
   11 MINUS=1
      GO TO 10
   13 IPLUS=1
   10 CONTINUE
   14 IF(MINUS-IPLUS) 15,12,15
C
C     THE APPROPRIATE LINE, THAT IS,THE ACTUAL LINE FOR TABPNT OR THE
C     RADIUS PARALLEL LINE FOR TABCIR DOES NOT INTERSECT THE RECTANGLE
C     THUS THIS INTERVAL IS ELIMINATED FROM FURTHER CONSIDERATION.
C
   15 INTRCT=0
      GO TO 16
C
C     THE APPROPRIATE LINE DOES INTERSECT THE RECTANGLE SO THIS INTERVAL
C     MUST BE EXAMINED FURTHER
C
   12 INTRCT=1
   16 CONTINUE
      RETURN
      END
**** SOURCE FILE : M0002823.V03   ***
*
C.....FORTRAN SUBROUTINE             CIRDEF...              5/1/68   GK
C
C              FORTRAN LOGICAL FUNCTION CIRDEF
C
C PURPOSE      TO DETERMINE WHETHER A CIRCLE HAS BEEN DEFINED
C              AND IS A VERTICAL CYLINDER.
C
C LINKAGE      CALL CIRDEF (A, N)
C
C ARGUMENTS    A       ARRAY CONTAINING THE CANONICAL FORM OF THE
C                      CIRCLE
C              N       ERROR CODE OF THE DIAGNOSTIC TO BE PRINTED
C                      IN CASE THE CYLINDER IS NOT VERTICAL
C
C SUBSIDIARIES TYPE                ENTRY
C              REAL FUNCTION       ABS
C              LOGICAL FUNCTION    CKDEF
C              SUBROUTINE          ERROR
C
      LOGICAL FUNCTION CIRDEF (CIR,MN)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION CIR(7)
      LOGICAL CKDEF
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'ZNUMBR.INC'
C
C
C...     CHECK WHETHER INPUT CANONICAL FORM IS DEFINED
C
      IF (CKDEF(CIR)) GO TO 1
C
C...     CHECK WHETHER CYLINDER IS WITHIN TOLERANCE OF VERTICAL
C
      IF (DABS(DABS(CIR(6))-Z1).LE.Z1EM5
     1    .AND.DABS(CIR(4)) .LE.Z1EM5
     2    .AND.DABS(CIR(5)) .LE.Z1EM5) GO TO 2
C
C...     ISSUE DIAGNOSTIC
C
      CALL ERROR(MN,'CIRDEF  ')
C
C...     RETURN VALUE TRUE
C
    1 CIRDEF=.TRUE.
      GO TO 9
C
C...     RETURN VALUE FALSE
C
    2 CIRDEF=.FALSE.
    9 RETURN
       END
**** SOURCE FILE : CKDEF000.V01   ***
*
*
*  * CKDEF *
*
*  LOGICAL FUNCTION CKDEF
*
*  PURPOSE  TO DETERMINE THAT THE ARGUMENT IS PROPERLY DEFINED
*           THE VALUE .FALSE. IS RETURNED IF DEFINED,.TRUE. OTHERWISE
*
      LOGICAL FUNCTION CKDEF(ARG)
C
      INCLUDE 'SDP.INC'
C
      INTEGER ARG(2),STR,DTR,ASH,I3,I2
      LOGICAL FIRST
      SAVE STR,DTR,ASH,FIRST
C
      DATA FIRST/.TRUE./
C
      IF (FIRST) THEN
        I3=3*NBCHAR
        I2=2*NBCHAR
        STR=ISHFT(ICHAR('*'),I3)+ISHFT(ICHAR('T'),NBCHAR)+ICHAR('R')
        DTR=ISHFT(ICHAR('$'),I3)+ISHFT(ICHAR('T'),NBCHAR)+ICHAR('R')
        ASH=ISHFT(ICHAR('A'),I3)+ISHFT(ICHAR('S'),I2)
     +     +ISHFT(ICHAR('H'),NBCHAR)
        FIRST=.FALSE.
      ENDIF
C
      IF ((ARG(1).EQ.STR).AND.(ARG(2).EQ.ASH)) THEN
        CKDEF=.TRUE.
        CALL ERROR(1,'CKDEF   ')
      ELSE IF ((ARG(1).EQ.DTR).AND.(ARG(2).EQ.ASH)) THEN
        CKDEF=.TRUE.
      ELSE
        CKDEF=.FALSE.
      END IF
      RETURN
      END
*
*  * CKSTR *
*
*  LOGICAL FUNCTION CKSTR
*
*  PURPOSE  TO DETERMINE THAT THE ARGUMENT HAS BEEN SET TO '* TRASH'
*           THE VALUE .TRUE. IS RETURNED IF SET ,.FALSE. OTHERWISE
*
      LOGICAL FUNCTION CKSTR(ARG)
C
      INCLUDE 'SDP.INC'
C
      INTEGER ARG(2),STR,ASH,I3
      LOGICAL FIRST
      SAVE STR,ASH,FIRST
C
      DATA FIRST/.TRUE./
C
      IF (FIRST) THEN
        I3=3*NBCHAR
        I2=2*NBCHAR
        STR=ISHFT(ICHAR('*'),I3)+ISHFT(ICHAR('T'),NBCHAR)+ICHAR('R')
        ASH=ISHFT(ICHAR('A'),I3)+ISHFT(ICHAR('S'),I2)
     +     +ISHFT(ICHAR('H'),NBCHAR)
        FIRST=.FALSE.
      ENDIF
      IF ((ARG(1).EQ.STR).AND.(ARG(2).EQ.ASH)) THEN
       CKSTR=.TRUE.
      ELSE
       CKSTR=.FALSE.
      END IF
      RETURN
      END
*
*  * CKDTR *
*
*  LOGICAL FUNCTION CKDTR
*
*  PURPOSE  TO DETERMINE THAT THE ARGUMENT IS SET TO '$ TRASH'
*           THE VALUE .TRUE. IS RETURNED IF SET, .FALSE. OTHERWISE
*
      LOGICAL FUNCTION CKDTR(ARG)
C
      INCLUDE 'SDP.INC'
C
      INTEGER ARG(2),DTR,ASH,I3
      LOGICAL FIRST
      SAVE DTR,ASH,FIRST
C
      DATA FIRST/.TRUE./
C
      IF (FIRST) THEN
        I3=3*NBCHAR
        I2=2*NBCHAR
        DTR=ISHFT(ICHAR('$'),I3)+ISHFT(ICHAR('T'),NBCHAR)+ICHAR('R')
        ASH=ISHFT(ICHAR('A'),I3)+ISHFT(ICHAR('S'),I2)
     +     +ISHFT(ICHAR('H'),NBCHAR)
        FIRST=.FALSE.
      ENDIF
      IF ((ARG(1).EQ.DTR).AND.(ARG(2).EQ.ASH)) THEN
       CKDTR=.TRUE.
      ELSE
       CKDTR=.FALSE.
      END IF
      RETURN
      END
**** SOURCE FILE : DARSIN00.ORG   ***
*
      DOUBLE PRECISION FUNCTION DARSIN(X)
C DOUBLE PRECISION ARC SINE FUNCTION USING STANDARD FUNCTION
C
      DOUBLE PRECISION X
C
      DARSIN=DASIN(X)
      RETURN
      END
C
C
C
      DOUBLE PRECISION FUNCTION DARCOS(X)
C DOUBLE PRECISION ARC COS FUNCTION USING STANDARD FUNCTION
C
      DOUBLE PRECISION X
C
      DARCOS=DACOS(X)
      RETURN
      END
C
C
C
      DOUBLE PRECISION FUNCTION DCOTAN(X)
C DOUBLE PECISION COTANGENT USING DTAN FUNCTION
C
      DOUBLE PRECISION X,T
C
      T=DTAN(X)
      IF(T.NE.0.0) GO TO 10
      DCOTAN=1.0D38
      RETURN
  10  DCOTAN=1.0/T
      RETURN
      END
**** SOURCE FILE : M0002832.V06   ***
*
C
C.....FORTRAN SUBROUTINE             DEFEXT...              3/1/68   GK
C
C              FORTRAN SUBROUTINE DEFEXT
C
C PURPOSE      TO PROVIDE A COMMON EXIT TO THE DEFINITION
C              REDUCTION SUBROUTINES, TO MOVE THE RESULTANT
C              CANONICAL FORM INTO THE RESULT CELLS, PRINT
C              ERROR MESSAGES, PRINT THE CANONICAL FORM
C              IF THE APPROPRIATE PRINT COMMAND IS IN
C              EFFECT AND TO RESTORE THE ARRAY R TO ITS
C              INITIAL VALUE.
C
C LINKAGE      CALL DEFEXT (RESULT)
C
C ARGUMENTS    RESULT  AN ARRAY TO CONTAIN THE RESULTANT
C                      CANONICAL FORM
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          ERROR
C              SUBROUTINE          PRINT
C              SUBROUTINE          UNDEF
C              SUBROUTINE          UNPACK
C
      SUBROUTINE DEFEXT (RESULT)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION RESULT(*)
      INTEGER INAM(37,2)
      CHARACTER*8  RNAME, RNAM(22)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'IDEF.INC'
      INCLUDE 'ISHR16.INC'
C
      DATA INAM / 4, 6,15,16,18,19,23,24,25,27,
     1                    29,37,38,43,44,47,48,51,57,58,
     2                    59,69,70,73,74,75,76,77,79,93,
     3 5153,5154,5155,5156,5157,5158,5159,
     4                     1, 2, 3, 3, 4, 5, 6, 6, 6, 7,
     5                     8, 9, 9,10,11,12,13,14,15,16,
     6                    10,17,17,18,18,18,18,21,21,19,
     6   20,  20,  20,  20,  20,  20,  20/
      DATA RNAM
     1 /'APT003  ','APT004  ','APT008  ','APT009  ','APT012  ',
     2  'APT016  ','APT023  ','APT027  ','APT106  ','APT013  ',
     3  'APT044  ','APT059  ','APT056  ','APT073  ','APT053  ',
     4  'APT055  ','APT074  ','APT070  ','APT105  ','APT109  ',
     5  'APT034  ','DEFEXT??'/
C IMAX: ANZAHL FEHLERNUMMERN, MAX: ANZAHL ROUTINENEN-NAMEN + 1 '??'
      DATA IMAX /37/, MAX /22/
C
C
C...     CHECK FOR ERRORS
C
      IF (IERROR.EQ.0) GO TO 20
      DO 810 I=1,IMAX
      IN=MAX
      IF (IERROR.NE.INAM(I,1))GOTO 810
      IN=INAM(I,2)
      GOTO 820
  810 CONTINUE
  820 RNAME=RNAM(IN)
      CALL ERROR (IERROR,RNAME)
   10 CALL UNDEF (RESULT)
      UNFLAG=.FALSE.
      GO TO 40
C
   20 IF (UNFLAG) GO TO 10
C
C...     DEFINITION OK -- CHECK INTFLG, PRNTON AND MOVE R TO RESULT
C
      CALL UNPACK (RESULT,IS1,IS2,IS3)
C   MATRIX ?
      IF(IS1.EQ.18)GOTO 31
      DO 30 I=1,IS2
   30 RESULT(I)=R(I)
   31 IF(.NOT.PRNTON)GO TO 40
      IF((IS1.GT.0).AND.(IS1.LT.27))CALL PRINT(3,RESULT,1)
   40 IERROR = 0
      DO 41 I = 1,10
   41 R(I) = 0.
      R(6) = 1.
       RETURN
       END
**** SOURCE FILE : M0000897.V04   ***
*
C
C.....FORTRAN SUBROUTINE             DYNDMP...              4/1/68   GK
CIBFTC DYNDMP  XR6
      SUBROUTINE DYNDMP (BRKPNT,ONOFF,PTNO)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'ISHR18.INC'
      INCLUDE 'KNUMBR.INC'
      INCLUDE 'IBRKPT.INC'
C
C...  21. ADDCOM BLOCK
C
      COMMON/ADDCOM/ ADDCOM
      DIMENSION ADDCOM(25)
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),
     2            (ADDCOM(25),KDYNFL)
C
C ***    VALUES OF BRKPNT SET AS FOLLOWS
C                  1 ACTIVATES ALL BREAKPOINTS
C                  100 ACTIVATES ALL AJUNDD AND AMIND BREAKPOINTS
C                  200 ACTIVATES ALL ARLM3 BREAKPOINTS
C                  500 ACTIVATES ALL GO BREAKPOINTS
C                  IJK ACTIVATES THE JK BREAKPOINT IN THE I SERIES
C ***
C
C
      KDYNFL=K1
      N=51
      L = BRKPNT
      IF(L.EQ.K1) GOTO 30
      J=L/100
      K=L-J*100
      L=K10*(J-K1)+K
      N=L
C...  IF K=0, ACTIVATE OR DEACTIVATE ALL BREAKPOINTS FOR THAT ROUTINE
      IF(K)50,10,30
   10 IF(J.NE.K2)GOTO 20
      N=N+K10
   20 N=N+K10
      L=L+K1
C...  EACH BREAKPOINT CORRESPONDS TO AN ELEMENT OF THE ARRAY BRAKPT(I)
C        THE BREAKPOINT IS ACTIVATED OR DEACTIVATED ACCORDING AS HOW
C        BRAKPT(J)=1 OR 0
   30 DO 40 J=L,N
   40 IBRKPT(J) = ONOFF
C...  STRTNO CONTAINS THE NUMBER OF THE FIRST CUTTER POINT TO OUTPUT
C     DYNDMP PRINTING FOR EACH CUT SEQUENCE
      STRTNO=PTNO
   50 RETURN
       END
**** SOURCE FILE : M0011449.W02   ***
*
      BLOCK DATA BDEBUF
C
      COMMON/EBUF/EBUFF,K,N,KEB,KRF
      INTEGER EBUFF(516)
      DATA K/2/,N/0/,KEB/1/,KRF/0/
      END
C
C      FORTRAN SUBROUTINE  EWRITE
C  PURPOSE   TO BLOCK CL RECORDS
C
C  LINKAGE     CALL EWRITE(EXFILE,MR,ICLDAT,J,IR)
C
C  ARGUMENTS   EXFILE  FILE NUMBER OF EXFILE
C              MR      INTEGER TO CONTAIN RECORD NUMBER
C              ICLDAT  ARRAY CONTAINING THE RECORD TO BE WRITTEN ON
C                      EXFILE.
C              J       NUMBER OF WORD (4 BYTE) IN RECORD
C              IR      ERROR RETURN FLAG, =0 NOERROR , =1 ERROR.
C
C  IMPORTANT VARIABLES
C              KEB     NUMBER OF 1ST RECORD IN A BLOCK
C              N       NUMBER OF LAST RECORD IN A BLOCK
C              EBUFF   THE BUFFER TO CONTAIN THE RECORDS.
C
      SUBROUTINE EWRITE(EXFILE,MR,ICLDAT,J,IR)
C
      INCLUDE 'CLDT.INC'
      LOGICAL GOFLG
C
      COMMON/EBUF/EBUFF,K,N,KEB,KRF
      SAVE /EBUF/
      INTEGER EBUFF(516),EXFILE,ICLDAT(516)
      INTEGER KFINI,BCDF
      LOGICAL FIRST
      SAVE KFINI,FIRST
      DATA GOFLG/.FALSE./
      DATA FIRST/.TRUE./
C
      IF (FIRST)THEN
         KFINI = BCDF('FINI')
         FIRST = .FALSE.
      ENDIF
C
      IF(K+J.GT.514) GO TO 1
   10 N=N+1
      ICLRCD=N
   15 EBUFF(1) = KEB
      EBUFF(2) = N
      EBUFF(K+1)=N
      EBUFF(K+2)=J
      K=K+2
      DO 20 I=1,J
      K=K+1
   20 EBUFF(K)=ICLDAT(I)
C     IF THE RECORD IS FINI,  TRUNCATE THE BLOCK
C       AND WRITE OUT TO EXFILE.
      IF(ICLDAT(1).EQ.KFINI) GO TO 30
      MR = N
      RETURN
C
C     BUFFER IS FULL, WRITE THE BLOCK ON EXFILE
C
    1 NR=0
      CALL AWRITE(EXFILE,NR,EBUFF,K,IR)
      ICLBLK=NR
      K=2
      KEB = N + 1
      GO TO 10
C
   30 EBUFF(2)=N
      NR=0
      CALL AWRITE(EXFILE,NR,EBUFF,K,IR)
      RETURN
      END
C
C    ..  SUBROUTINE EREAD  ....
C
C  PURPOSE   TO GET 1 CL RECORD
C
C  LINKAGE     CALL EREAD(EXFILE,IBUFF,NN,NBF,NRF,NRP,ISZ,IR)
C
C  ARGUMENT    EXFILE  FILE NUMBER OF EXFILE
C              IBUFF   INTEGER ARRAY TO CONTAIN THE READ RECORD.
C              NN      INTEGER SEARCHED POSITON.
C              NBF     INTEGER FIRST BLOCK  NUMBER TO BE READ.
C              NRF     INTEGER FIRST RECORD NUMBER TO BE READ.
C              NRP     INTEGER POSITION OF DESIRED DATA.
C              ISZ     INTEGER TO CONTAIN THE SIZE OF RECORD.
C              IR      RETURN ERROR FLAG. =0 NO ERROR  ,  =1 ERROR.
C
C  IMPORTANT VARIABLES
C              KK      POINTER TO FIND THE POSITION OF RECORD IN THE
C                      BLOCK.
C
      SUBROUTINE EREAD(EXFILE,IBUFF,NN,NBF,NRF,NRP,ISZ,IR)
      INCLUDE 'CLDT.INC'
      LOGICAL GOFLG
C
      COMMON/EBUF/EBUFF,K,N,KEB,KRF
      SAVE /EBUF/
      INTEGER EBUFF(516),EXFILE,NCL(2),GODLT
      INTEGER BCDF
      LOGICAL FIRST
      DIMENSION IBUFF(516)
      DATA GOFLG/.FALSE./
      DATA FIRST/.TRUE./
C
      IF (FIRST)THEN
         NCL(1) = BCDF('CLDA')
         NCL(2) = BCDF('TA  ')
         GODLT = BCDF('GODL')
         FIRST = .FALSE.
      ENDIF
C
C     WRITE THE CURRENT BLOCK
C
      IF(K.EQ.2)GOTO 100
      NR = 0
      CALL AWRITE (EXFILE,NR,EBUFF,K,IR)
      ICLBLK = NR
      KEB = N + 1
      K = 2
C
C     RETRIEVE A DEFINED BLOCK CONTAINING THE LAST MOTION COMMAND.
C
  100 IF(ISZ.GT.0)GOTO 130
      IF(NB.EQ.NBF)GOTO 110
      KS = 516
      NB = NBF
      CALL AREAD (EXFILE,NB,EBUFF,KS,IR)
C
C     STANDARD EXFILE RECORD FORMAT
  110 JJ=KS+3+2*ISZ*(NRP-NN+1)
      MM=JJ-3-2*ISZ
      DO 120 I=JJ,MM
  120 IBUFF(I-JJ+1)=EBUFF(I)
      RETURN
C
C     EXFILE RECORD EXTENDED FORMAT. MORE THAN ONE MOTION COMMAND.
  130 IF(KRF.NE.NRF)GOTO 150
      IF(NN.GT.MAXN)GOTO 205
      IF(NN.GT.MINN)GOTO 230
  150 NB=NBF-1
      MINN=0
      KRF=NRF
C
C     READ FIRST BLOCK OF THE CLDAT SECTION.
  160 NB = NB + 1
      IF(NB.GT.ICLBLK)CALL HELP
      KS = 516
      CALL AREAD (EXFILE,NB,EBUFF,KS,IR)
      IF(NRF.GT.EBUFF(2)) GO TO 160
C
C     START OF THE CLDAT SECTION FOUND.
  170 KK = 3
      GOTO 185
  180 KK = KK+EBUFF(KK+1) + 2
      IF (KK.GE.KS) CALL HELP
  185 IF (EBUFF(KK).LT.NRF)GOTO 180
C
C     IS IT A MOTION COMMAND ?
  190 IF(EBUFF(KK+2).EQ.NCL(1))GOTO 220
  200 KK = KK+EBUFF(KK+1) + 2
      IF (KK.GE.KS-1) GOTO 160
      GOTO 190
  205 MINN=MAXN
  210 GOFLG=.FALSE.
      GOTO 200
C
C     IS IT A CLDATA RECORD GIVING POSITIONS ?
  220 IF(EBUFF(KK+3).NE.NCL(2))GOTO 200
      IF(EBUFF(KK+10).EQ.GODLT)GOFLG=.TRUE.
      IF(EBUFF(KK+ 9).EQ.1)GOTO 200
      IF(GOFLG)GOTO 210
C
C     IS DEMANDED POSITION WITHIN THAT RECORD ?
      MAXN=MINN+EBUFF(KK+7)/ISZ
      IF(MAXN.GE.NN)GOTO 230
      MINN=MAXN
      GOTO 200
C
C     POSITION FOUND
  230 JJ=KK+2*ISZ*(NN-MINN-1)
      IF(NRP.EQ.0)GOTO 240
C     EXFILE RECORD EXTENDED FORMAT.
      JJ=JJ+8*NRP+4
      MM=JJ+5
      GOTO 250
C     EXFILE RECORD STANDARD FORMAT.
  240 JJ=JJ+10
      MM=JJ+2*ISZ-3
  250 I=0
      DO 260 J=JJ,MM
      I=I+1
      IF(NRP.GT.0)IBUFF(I+6)=EBUFF(J)
  260 IBUFF(I)=EBUFF(J)
C
      RETURN
      END
**** SOURCE FILE : M0008144.V03   ***
*
      SUBROUTINE ERRLOD(IRET,NAME)
C
C CALLS APT IV ERROR ROUTINE FOR ERROR MESSAGES
C  FURTHER EXPLAINING ERROR TEXTS ARE OUTPUT THRU DARRAY
C
C
      CHARACTER*8 NAME,ERRO,SUBNAM
      INCLUDE 'DARRAY.INC'
C
      DATA ERRO/'  ERROR '/, SUBNAM/' LOADMO '/
C
C
      CALL CFORM(' ***** DYNLOAD ',DARRAY,1,15)
      CALL CFORM(ERRO,DARRAY,16,8)
      CALL ICONV(IRET,DARRAY,24,5)
      CALL CFORM('ISN',DARRAY,36,3)
      CALL CFORM(' FROM SUBROUTINE ',DARRAY,44,17)
      CALL CFORM(SUBNAM,DARRAY,61,8)
      CALL CFORM(' *****',DARRAY,69,6)
      CALL CPRINT(DARRAY)
C
      GOTO(10,20,30,40,50,60,70),IRET
      GOTO 90
C
C WANTED MODULE CANNOT BE FOUND
   10 CALL CFORM(' MODULE = ',DARRAY,1,10)
      CALL CFORM(NAME,DARRAY,11,8)
      GOTO 80
C
C EXTERNAL REFERENCE IS NOT SOLVED
   20 CALL CFORM(' EXTERNAL REFERENCE = ',DARRAY,1,22)
      CALL CFORM(NAME,DARRAY,23,8)
      GOTO 80
C
C NOT ENOUGH CORE AVAILABLE
   30 CALL CFORM(' FOR MODULE = ',DARRAY,1,14)
      CALL CFORM(NAME,DARRAY,15,8)
      GOTO 80
C
C MODULE NOT IN LIBRARY
   40 CALL CFORM(' MODULE = ',DARRAY,1,10)
      CALL CFORM(NAME,DARRAY,11,8)
      GOTO 80
C
C CESD TABLE FOR LOADED MODULES TOO SHORT
   50 CALL CFORM(' NEXT CESD ENTRY = ',DARRAY,1,19)
      CALL CFORM(NAME,DARRAY,20,8)
      GOTO 80
C
C CESD-TABLE FOR LOAD-MODULE TOO SHORT
   60 CALL CFORM(' MODULE = ',DARRAY,1,10)
      CALL CFORM(NAME,DARRAY,11,8)
      GOTO 80
C
C TOO MANY MODULES TO BE LOADED
   70 CALL CFORM(' MODULE = ',DARRAY,1,10)
      CALL CFORM(NAME,DARRAY,11,8)
C
   80 CALL CPRINT(DARRAY)
      CALL ERROUT(1000+IRET)
C
   90 RETURN
      END
**** SOURCE FILE : M0011447.V10   ***
*
C.....FORTRAN SUBROUTINE  ....ERROR          8/68                    HG
C...  FORTRAN SUBROUTINE               ERROR
C
C              FORTRAN SUBROUTINE ERROR
C
C PURPOSE      TO PRINT THE ERROR CODE OF A GEOMETRIC DIAGNOSTIC.
C
C LINKAGE      CALL ERROR (I,SUBNAM)
C
C ARGUMENTS    I       INTEGER ERROR CODE OF DIAGNOSTIC
C
C SUBSIDIARIES NONE
C
      SUBROUTINE ERROR (IARG,SUBNAM)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
      INCLUDE 'TOTAL.INC'
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE 'SYMFIL.INC'
      CHARACTER*8 SUBNAM,ERRR,ERRO,WARN
C
      LOGICAL FIRST
      DIMENSION KGERR(10)
      SAVE KGERR,FIRST
C
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR
C
          COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS
          DIMENSION XTRAS(7),CFLAGS(4),LXTRAS(7)
          INTEGER   ERRX,XTRAS
          LOGICAL   ERR,FINI,XC,CL,ASM,LXTRAS,CFLAGS,PX,END,ABEND
          EQUIVALENCE (LXTRAS(1),XTRAS(1)),(CFLAGS(1),ERR)
      INCLUDE 'DARRAY.INC'
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
C... INITILIZE ARRAY INDICATING WHICH ERRORS ARE OF SEVERITY LEVEL FOUR.
      INTEGER ERRLEV(20),IERRN
      DATA IERRN/20/,ERRLEV/2,3,8,9,30,40,45,49,50,71,84,92,94,5129,6*0/
      DATA WARN/' WARNING'/,ERRO/'  ERROR '/
      DATA KGERR/0,0,Z4E,0,Z4E,1,Z4E,0,2*0/,FIRST/.TRUE./
      IF (FIRST) THEN
        KGERR(1) = BCDF('GERR')
        KGERR(2) = BCDF('    ')
        FIRST = .FALSE.
      ENDIF
C
      LARG=IARG
C... SET ERROR LEVEL INDICATOR FOR THE SUPERVISOR.
      KERRX=4
      DO 5 IERR=1,IERRN
      IF (LARG .EQ.ERRLEV(IERR))GOTO 8
    5 CONTINUE
      KERRX=8
    8 XTRAS(8/KERRX) = XTRAS(8/KERRX) + 1
      KGERR(8)=LARG
      CALL CPRINT(DARRAY)
      CALL RECORD(KGERR(4))
      ERRR = WARN
      IF(KERRX.GT.4) ERRR = ERRO
      IF(KERRX.EQ.4.AND.ERRX.LT.4) ERRX=4
      IF(KERRX.EQ.8.AND.ERRX.LT.8) ERRX=8
      NR=0
      KGERR( 9) = BCDF(SUBNAM(1:4))
      KGERR(10) = BCDF(SUBNAM(5:8))
      CALL CFORM(' ***** DEFINITION ',DARRAY,1,18)
      CALL CFORM(ERRR,DARRAY,19,8)
      CALL ICONV(LARG,DARRAY,27,5)
      CALL CFORM('ISN',DARRAY,36,3)
      CALL ICONV(KGERR(4),DARRAY,39,5)
      CALL CFORM(' FROM SUBROUTINE ',DARRAY,44,17)
      CALL CFORM(SUBNAM,DARRAY,61,8)
      CALL CFORM('*****',DARRAY,69,5)
      CALL CPRINT(DARRAY)
      CALL ERROUT(LARG)
      KGERR( 6)=2
      CALL EWRITE(EXFILE,NR,KGERR,10,IR)
      RETURN
       END
**** SOURCE FILE : M0003404.V06   ***
*
C
C
C.....FORTRAN SUBROUTINE             ERROUT...
C
C PURPOSE      TO PRINT DIAGNOSTICS
C
C LINKAGE      CALL ERROUT(NERR)
C
C ARGUMENTS    NERR       INTEGER ERROR NUMBER
C
C
      SUBROUTINE ERROUT(NERR)
C
C...                ...SYMBOLIC FILE DEFINITIONS...
C
C
C...                ...ERROR DIAGNOSTICS
C
      INCLUDE 'EXERR.INC'
      CHARACTER  B*120,NOTEXT*52
C
      DATA B/' '/
      DATA NOTEXT
     +     /'THERE IS NO DIAGNOSTIC MESSAGE FOR THIS ERROR NUMBER'/
C
C...     POSITION OF THE CURRENT ERROR NUMBER
C
      I=0
      NUMMIN=1
      NUMMAX=ERRDM
      NUMBER=IABS(NERR)
   10 NUMMER=(NUMMIN+NUMMAX)/2
      NUMB=ERRAD1(NUMMER)
      IF(I.GT.ERND)GOTO  40
      I=I+1
      IF(NUMBER-NUMB)30,60,20
   20 NUMMIN=NUMMER+1
      GOTO 10
   30 NUMMAX=NUMMER-1
      GOTO 10
   40 CALL CFORM(NOTEXT,B,8,52)
      CALL CPRINT(B)
      GOTO 80
   60 KK=ERRAD2(NUMMER)
      IF (NUMMER.EQ.1)THEN
        II=1
      ELSE
        II=ERRAD2(NUMMER-1)+1
      ENDIF
C
      K=4
      DO 70 I=II,KK
       IF (K.GE.116) THEN
         CALL CPRINT(B)
         K=4
       ENDIF
       K=K+4
       B(K:K+3)=ERRTXT(I)
   70 CONTINUE
      CALL CPRINT(B)
C
   80 RETURN
C
      END
**** SOURCE FILE : BDEXER.V01   ***
*
C
C...FORTRAN BLOCK DATA SEGMENT EXERRW
C
      BLOCK DATA BDEXER
C
      INCLUDE 'EXERR.INC'
C
      INTEGER A(ERND),B(ERND)
      CHARACTER*4 E(ERRDM)
C...ERRAD1:    EXECUTION PHASE ERROR & WARNING NUMBERS.
C...ERRAD2:    START POSITIONS OF ERROR MESSAGES IN ERRTXT
      EQUIVALENCE (A(1),ERRAD1(1))
      EQUIVALENCE (B(1),ERRAD2(1))
      EQUIVALENCE (E(1),ERRTXT(1))
C
      DATA A(  1),A(  2),A(  3),A(  4)/      1,      2,      3,      4/
      DATA A(  5),A(  6),A(  7),A(  8)/      5,      6,      7,      8/
      DATA A(  9),A( 10),A( 11),A( 12)/      9,     10,     11,     12/
      DATA A( 13),A( 14),A( 15),A( 16)/     13,     14,     15,     16/
      DATA A( 17),A( 18),A( 19),A( 20)/     17,     18,     19,     20/
      DATA A( 21),A( 22),A( 23),A( 24)/     21,     22,     23,     24/
      DATA A( 25),A( 26),A( 27),A( 28)/     25,     26,     27,     28/
      DATA A( 29),A( 30),A( 31),A( 32)/     29,     30,     31,     32/
      DATA A( 33),A( 34),A( 35),A( 36)/     33,     34,     35,     36/
      DATA A( 37),A( 38),A( 39),A( 40)/     37,     38,     39,     40/
      DATA A( 41),A( 42),A( 43),A( 44)/     41,     42,     43,     44/
      DATA A( 45),A( 46),A( 47),A( 48)/     45,     46,     47,     48/
      DATA A( 49),A( 50),A( 51),A( 52)/     49,     50,     51,     52/
      DATA A( 53),A( 54),A( 55),A( 56)/     53,     54,     55,     56/
      DATA A( 57),A( 58),A( 59),A( 60)/     57,     58,     59,     61/
      DATA A( 61),A( 62),A( 63),A( 64)/     62,     63,     64,     65/
      DATA A( 65),A( 66),A( 67),A( 68)/     66,     67,     68,     69/
      DATA A( 69),A( 70),A( 71),A( 72)/     70,     71,     72,     73/
      DATA A( 73),A( 74),A( 75),A( 76)/     74,     75,     76,     77/
      DATA A( 77),A( 78),A( 79),A( 80)/     78,     79,     80,     82/
      DATA A( 81),A( 82),A( 83),A( 84)/     83,     84,     85,     86/
      DATA A( 85),A( 86),A( 87),A( 88)/     87,     88,     89,     90/
      DATA A( 89),A( 90),A( 91),A( 92)/     91,     92,     93,     94/
      DATA A( 93),A( 94),A( 95),A( 96)/     95,     96,     97,     98/
      DATA A( 97),A( 98),A( 99),A(100)/    200,   1001,   1002,   1003/
      DATA A(101),A(102),A(103),A(104)/   1004,   1005,   1006,   1007/
      DATA A(105),A(106),A(107),A(108)/   3501,   3502,   3503,   3504/
      DATA A(109),A(110),A(111),A(112)/   3506,   3507,   3510,   3521/
      DATA A(113),A(114),A(115),A(116)/   3522,   3523,   3524,   3551/
      DATA A(117),A(118),A(119),A(120)/   3552,   3553,   3554,   3555/
      DATA A(121),A(122),A(123),A(124)/   3561,   3562,   3563,   3564/
      DATA A(125),A(126),A(127),A(128)/   3565,   3566,   3567,   5000/
      DATA A(129),A(130),A(131),A(132)/   5001,   5002,   5003,   5004/
      DATA A(133),A(134),A(135),A(136)/   5005,   5006,   5007,   5011/
      DATA A(137),A(138),A(139),A(140)/   5012,   5013,   5016,   5019/
      DATA A(141),A(142),A(143),A(144)/   5021,   5022,   5023,   5024/
      DATA A(145),A(146),A(147),A(148)/   5025,   5026,   5027,   5028/
      DATA A(149),A(150),A(151),A(152)/   5029,   5030,   5031,   5032/
      DATA A(153),A(154),A(155),A(156)/   5033,   5034,   5035,   5036/
      DATA A(157),A(158),A(159),A(160)/   5037,   5038,   5039,   5040/
      DATA A(161),A(162),A(163),A(164)/   5041,   5043,   5044,   5045/
      DATA A(165),A(166),A(167),A(168)/   5060,   5061,   5062,   5121/
      DATA A(169),A(170),A(171),A(172)/   5122,   5123,   5124,   5125/
      DATA A(173),A(174),A(175),A(176)/   5126,   5127,   5128,   5129/
      DATA A(177),A(178),A(179),A(180)/   5130,   5152,   5153,   5154/
      DATA A(181),A(182),A(183),A(184)/   5155,   5156,   5157,   5158/
      DATA A(185),A(186),A(187),A(188)/   5159,   5160,   5210,   5211/
      DATA A(189),A(190),A(191),A(192)/   5212,   5213,   5214,   5215/
      DATA A(193),A(194),A(195),A(196)/   5216,   5217,   5218,   5219/
      DATA A(197),A(198),A(199),A(200)/   5220,   5222,   5300,   5331/
      DATA A(201),A(202),A(203),A(204)/   5352,   5353,   5354,   5355/
      DATA A(205),A(206),A(207),A(208)/   5356,   5371,   5373,   5374/
      DATA A(209),A(210),A(211),A(212)/   5375,   5376,   5377,   5378/
      DATA A(213),A(214),A(215),A(216)/   5379,   5391,   5392,   5393/
      DATA A(217),A(218),A(219),A(220)/   5396,   5402,   5403,   5501/
      DATA A(221),A(222),A(223),A(224)/   5502,   5503,   5504,   5505/
      DATA A(225),A(226),A(227),A(228)/   5506,   5507,   5508,   5509/
      DATA A(229),A(230),A(231),A(232)/   5510,   5511,   5512,   5513/
      DATA A(233),A(234),A(235),A(236)/   5514,   5515,   5516,   5517/
      DATA A(237),A(238),A(239),A(240)/   5518,   5519,   5520,   5521/
      DATA A(241),A(242),A(243),A(244)/   5522,   5523,   5751,   5752/
      DATA A(245),A(246),A(247),A(248)/   5753,   5760,   5770,   5771/
      DATA A(249),A(250),A(251),A(252)/   5772,   5901,   5902,   5903/
      DATA A(253),A(254),A(255),A(256)/   5904,   5905,   5906,   5907/
      DATA A(257),A(258),A(259),A(260)/   5908,   5909,   5910,   5921/
      DATA A(261),A(262),A(263),A(264)/   5922,   5923,   5924,   5925/
      DATA A(265),A(266),A(267),A(268)/   5926,  20001,  20101,  20102/
      DATA A(269),A(270),A(271),A(272)/  20103,  20104,  20105,  20106/
      DATA A(273),A(274),A(275),A(276)/  20107,  20108,  20109,  20110/
      DATA A(277),A(278),A(279),A(280)/  20201,  20202,  20203,  20204/
      DATA A(281),A(282),A(283),A(284)/  20205,  20206,  20901,  20902/
      DATA A(285),A(286),A(287),A(288)/  20903,  21001,  21002,  21003/
      DATA A(289),A(290),A(291),A(292)/  21101,  21102,  21301,  22001/
      DATA A(293),A(294),A(295),A(296)/  22002,  22003,  22004,  22201/
      DATA A(297),A(298),A(299),A(300)/  22202,  22203,  22204,  22205/
      DATA A(301),A(302),A(303),A(304)/  22206,  22207,  22208,  22209/
      DATA A(305),A(306),A(307),A(308)/  22210,  22211,  22212,  22213/
      DATA A(309),A(310),A(311),A(312)/  22214,  22215,  22216,  22217/
      DATA A(313),A(314),A(315),A(316)/  22218,  22219,  22220,  22221/
      DATA A(317),A(318),A(319),A(320)/  22222,  22223,  22300,  22301/
      DATA A(321),A(322),A(323),A(324)/  22401,  22701,  22801,  22802/
      DATA A(325),A(326),A(327),A(328)/  22803,  22804,  22805,  22806/
      DATA A(329),A(330),A(331),A(332)/  22830,  22831,  22832,  22833/
      DATA A(333),A(334),A(335),A(336)/  22834,  23401,  23500,  23901/
      DATA A(337),A(338),A(339),A(340)/  23902,  23903,  23904,  23905/
      DATA A(341),A(342),A(343),A(344)/  23908,  24001,  24002,  24003/
      DATA A(345),A(346),A(347),A(348)/  24004,  24005,  24006,  24007/
      DATA A(349),A(350),A(351),A(352)/  24201,  24202,  24401,  24402/
      DATA A(353),A(354),A(355),A(356)/  24403,  24404,  25001,  25002/
      DATA A(357),A(358),A(359),A(360)/  25003,  25004,  25005,  25007/
      DATA A(361),A(362),A(363),A(364)/  25008,  25009,  25402,  25403/
      DATA A(365),A(366),A(367),A(368)/  26001,  26002,  26201,  26202/
      DATA A(369),A(370),A(371),A(372)/  26203,  26204,  26401,  26601/
      DATA A(373),A(374),A(375),A(376)/  26602,  26801,  26802,  26803/
      DATA A(377),A(378),A(379),A(380)/  27001,  27002,  27003,  27004/
      DATA A(381),A(382),A(383),A(384)/  27005,  27206,  28801,  29001/
      DATA A(385),A(386),A(387),A(388)/  29002,  29003,  29004,  29006/
      DATA A(389)/  29007/
      DATA B(  1),B(  2),B(  3),B(  4)/     18,     38,     58,     78/
      DATA B(  5),B(  6),B(  7),B(  8)/     93,    107,    121,    140/
      DATA B(  9),B( 10),B( 11),B( 12)/    159,    180,    194,    215/
      DATA B( 13),B( 14),B( 15),B( 16)/    237,    246,    261,    283/
      DATA B( 17),B( 18),B( 19),B( 20)/    296,    312,    331,    351/
      DATA B( 21),B( 22),B( 23),B( 24)/    372,    393,    415,    441/
      DATA B( 25),B( 26),B( 27),B( 28)/    470,    490,    515,    531/
      DATA B( 29),B( 30),B( 31),B( 32)/    545,    561,    582,    591/
      DATA B( 33),B( 34),B( 35),B( 36)/    599,    614,    631,    655/
      DATA B( 37),B( 38),B( 39),B( 40)/    670,    689,    713,    740/
      DATA B( 41),B( 42),B( 43),B( 44)/    760,    781,    800,    822/
      DATA B( 45),B( 46),B( 47),B( 48)/    834,    861,    880,    895/
      DATA B( 49),B( 50),B( 51),B( 52)/    915,    937,    949,    965/
      DATA B( 53),B( 54),B( 55),B( 56)/    983,   1006,   1026,   1047/
      DATA B( 57),B( 58),B( 59),B( 60)/   1061,   1081,   1100,   1120/
      DATA B( 61),B( 62),B( 63),B( 64)/   1141,   1167,   1191,   1205/
      DATA B( 65),B( 66),B( 67),B( 68)/   1224,   1243,   1261,   1271/
      DATA B( 69),B( 70),B( 71),B( 72)/   1285,   1293,   1303,   1314/
      DATA B( 73),B( 74),B( 75),B( 76)/   1323,   1330,   1342,   1350/
      DATA B( 77),B( 78),B( 79),B( 80)/   1359,   1372,   1396,   1411/
      DATA B( 81),B( 82),B( 83),B( 84)/   1422,   1433,   1444,   1465/
      DATA B( 85),B( 86),B( 87),B( 88)/   1479,   1487,   1510,   1534/
      DATA B( 89),B( 90),B( 91),B( 92)/   1545,   1551,   1560,   1589/
      DATA B( 93),B( 94),B( 95),B( 96)/   1605,   1615,   1633,   1655/
      DATA B( 97),B( 98),B( 99),B(100)/   1667,   1675,   1684,   1691/
      DATA B(101),B(102),B(103),B(104)/   1697,   1708,   1718,   1726/
      DATA B(105),B(106),B(107),B(108)/   1736,   1748,   1758,   1770/
      DATA B(109),B(110),B(111),B(112)/   1778,   1805,   1815,   1838/
      DATA B(113),B(114),B(115),B(116)/   1852,   1868,   1879,   1898/
      DATA B(117),B(118),B(119),B(120)/   1934,   1955,   1974,   1987/
      DATA B(121),B(122),B(123),B(124)/   2010,   2024,   2040,   2051/
      DATA B(125),B(126),B(127),B(128)/   2075,   2101,   2125,   2136/
      DATA B(129),B(130),B(131),B(132)/   2147,   2160,   2177,   2185/
      DATA B(133),B(134),B(135),B(136)/   2204,   2217,   2236,   2245/
      DATA B(137),B(138),B(139),B(140)/   2254,   2265,   2282,   2296/
      DATA B(141),B(142),B(143),B(144)/   2312,   2327,   2341,   2357/
      DATA B(145),B(146),B(147),B(148)/   2371,   2384,   2395,   2406/
      DATA B(149),B(150),B(151),B(152)/   2417,   2435,   2449,   2460/
      DATA B(153),B(154),B(155),B(156)/   2476,   2493,   2507,   2518/
      DATA B(157),B(158),B(159),B(160)/   2541,   2563,   2579,   2601/
      DATA B(161),B(162),B(163),B(164)/   2617,   2636,   2655,   2668/
      DATA B(165),B(166),B(167),B(168)/   2683,   2690,   2702,   2724/
      DATA B(169),B(170),B(171),B(172)/   2742,   2762,   2778,   2799/
      DATA B(173),B(174),B(175),B(176)/   2814,   2849,   2871,   2899/
      DATA B(177),B(178),B(179),B(180)/   2925,   2937,   2948,   2958/
      DATA B(181),B(182),B(183),B(184)/   2971,   2982,   2993,   2998/
      DATA B(185),B(186),B(187),B(188)/   3009,   3018,   3032,   3053/
      DATA B(189),B(190),B(191),B(192)/   3059,   3071,   3087,   3096/
      DATA B(193),B(194),B(195),B(196)/   3112,   3128,   3144,   3153/
      DATA B(197),B(198),B(199),B(200)/   3169,   3197,   3206,   3217/
      DATA B(201),B(202),B(203),B(204)/   3227,   3242,   3258,   3272/
      DATA B(205),B(206),B(207),B(208)/   3282,   3291,   3298,   3308/
      DATA B(209),B(210),B(211),B(212)/   3313,   3322,   3334,   3348/
      DATA B(213),B(214),B(215),B(216)/   3356,   3366,   3377,   3384/
      DATA B(217),B(218),B(219),B(220)/   3393,   3413,   3436,   3467/
      DATA B(221),B(222),B(223),B(224)/   3493,   3528,   3573,   3616/
      DATA B(225),B(226),B(227),B(228)/   3664,   3745,   3784,   3840/
      DATA B(229),B(230),B(231),B(232)/   3876,   3891,   3945,   3979/
      DATA B(233),B(234),B(235),B(236)/   4004,   4031,   4068,   4095/
      DATA B(237),B(238),B(239),B(240)/   4123,   4155,   4166,   4190/
      DATA B(241),B(242),B(243),B(244)/   4211,   4237,   4254,   4274/
      DATA B(245),B(246),B(247),B(248)/   4287,   4308,   4327,   4345/
      DATA B(249),B(250),B(251),B(252)/   4359,   4371,   4385,   4399/
      DATA B(253),B(254),B(255),B(256)/   4406,   4414,   4430,   4446/
      DATA B(257),B(258),B(259),B(260)/   4464,   4479,   4503,   4519/
      DATA B(261),B(262),B(263),B(264)/   4527,   4539,   4549,   4566/
      DATA B(265),B(266),B(267),B(268)/   4584,   4597,   4604,   4618/
      DATA B(269),B(270),B(271),B(272)/   4632,   4647,   4657,   4677/
      DATA B(273),B(274),B(275),B(276)/   4691,   4698,   4716,   4729/
      DATA B(277),B(278),B(279),B(280)/   4743,   4750,   4763,   4775/
      DATA B(281),B(282),B(283),B(284)/   4785,   4799,   4807,   4823/
      DATA B(285),B(286),B(287),B(288)/   4834,   4842,   4858,   4869/
      DATA B(289),B(290),B(291),B(292)/   4877,   4888,   4904,    919/
      DATA B(293),B(294),B(295),B(296)/   4941,   4958,   4979,   4988/
      DATA B(297),B(298),B(299),B(300)/   4996,   5003,   5015,   5023/
      DATA B(301),B(302),B(303),B(304)/   5037,   5045,   5055,   5074/
      DATA B(305),B(306),B(307),B(308)/   5095,   5111,   5134,   5150/
      DATA B(309),B(310),B(311),B(312)/   5166,   5186,   5201,   5209/
      DATA B(313),B(314),B(315),B(316)/   5219,   5235,   5248,   5256/
      DATA B(317),B(318),B(319),B(320)/   5265,   5272,   5298,   5316/
      DATA B(321),B(322),B(323),B(324)/   5340,   5361,   5373,   5383/
      DATA B(325),B(326),B(327),B(328)/   5391,   5401,   5410,   5418/
      DATA B(329),B(330),B(331),B(332)/   5432,   5439,   5465,   5491/
      DATA B(333),B(334),B(335),B(336)/   5507,   5522,   5532,   5545/
      DATA B(337),B(338),B(339),B(340)/   5554,   5563,   5575,   5589/
      DATA B(341),B(342),B(343),B(344)/   5596,   5607,   5616,   5633/
      DATA B(345),B(346),B(347),B(348)/   5655,   5671,   5683,   5693/
      DATA B(349),B(350),B(351),B(352)/   5701,   5717,   5730,   5751/
      DATA B(353),B(354),B(355),B(356)/   5763,   5779,   5794,   5806/
      DATA B(357),B(358),B(359),B(360)/   5829,   5838,   5852,   5858/
      DATA B(361),B(362),B(363),B(364)/   5876,   5900,   5916,   5934/
      DATA B(365),B(366),B(367),B(368)/   5942,   5961,   5976,   5996/
      DATA B(369),B(370),B(371),B(372)/   6008,   6015,   6039,   6056/
      DATA B(373),B(374),B(375),B(376)/   6068,   6076,   6088,   6104/
      DATA B(377),B(378),B(379),B(380)/   6131,   6159,   6172,   6185/
      DATA B(381),B(382),B(383),B(384)/   6198,   6216,   6233,   6244/
      DATA B(385),B(386),B(387),B(388)/   6254,   6259,   6269,   6281/
      DATA B(389)/   6288/
      DATA E(   1),E(   2),E(   3),E(   4)/'CANO','NICA','L FO','RM N'/
      DATA E(   5),E(   6),E(   7),E(   8)/'OT P','REVI','OUSL','Y CO'/
      DATA E(   9),E(  10),E(  11),E(  12)/'RREC','TLY ','DEFI','NED '/
      DATA E(  13),E(  14),E(  15),E(  16)/'IS B','EING','  RE','FERE'/
      DATA E(  17),E(  18),E(  19),E(  20)/'NCED','.   ','THE ','FIRS'/
      DATA E(  21),E(  22),E(  23),E(  24)/'T LI','NE G','IVEN',' FOR'/
      DATA E(  25),E(  26),E(  27),E(  28)/' THE',' DEF','INIT','ION '/
      DATA E(  29),E(  30),E(  31),E(  32)/'OF T','HE P','OINT',' IS '/
      DATA E(  33),E(  34),E(  35),E(  36)/'NOT ',' A V','ERTI','CAL '/
      DATA E(  37),E(  38),E(  39),E(  40)/'PLAN','E.  ','THE ','SECO'/
      DATA E(  41),E(  42),E(  43),E(  44)/'ND L','INE ','GIVE','N FO'/
      DATA E(  45),E(  46),E(  47),E(  48)/'R TH','E DE','FINI','TION'/
      DATA E(  49),E(  50),E(  51),E(  52)/' OF ','THE ','POIN','T IS'/
      DATA E(  53),E(  54),E(  55),E(  56)/' NOT','  A ','VERT','ICAL'/
      DATA E(  57),E(  58),E(  59),E(  60)/' PLA','NE. ','POIN','T UN'/
      DATA E(  61),E(  62),E(  63),E(  64)/'DEFI','NED.',' INT','ERSE'/
      DATA E(  65),E(  66),E(  67),E(  68)/'CTIO','N OF',' TWO',' LIN'/
      DATA E(  69),E(  70),E(  71),E(  72)/'ES W','HICH',' ARE',' TOO'/
      DATA E(  73),E(  74),E(  75),E(  76)/' CLO','SE  ','TO P','ARAL'/
      DATA E(  77),E(  78),E(  79),E(  80)/'LEL.','    ','LINE',' INV'/
      DATA E(  81),E(  82),E(  83),E(  84)/'OLVE','D IS',' NOT',' VER'/
      DATA E(  85),E(  86),E(  87),E(  88)/'TICA','L PL','ANE.',' POI'/
      DATA E(  89),E(  90),E(  91),E(  92)/'NT I','S UN','DEFI','NED.'/
      DATA E(  93),E(  94),E(  95),E(  96)/'    ','LINE',' AND',' CIR'/
      DATA E(  97),E(  98),E(  99),E( 100)/'CLE ','DO N','OT I','NTER'/
      DATA E( 101),E( 102),E( 103),E( 104)/'SECT','. PO','INT ','IS U'/
      DATA E( 105),E( 106),E( 107),E( 108)/'NDEF','INED','.   ','CIRC'/
      DATA E( 109),E( 110),E( 111),E( 112)/'LE I','S NO','T A ','VERT'/
      DATA E( 113),E( 114),E( 115),E( 116)/'ICAL',' CYL','INDE','R. P'/
      DATA E( 117),E( 118),E( 119),E( 120)/'OINT',' IS ','UNDE','FINE'/
      DATA E( 121),E( 122),E( 123),E( 124)/'D.  ','THE ','GIVE','N LI'/
      DATA E( 125),E( 126),E( 127),E( 128)/'NE I','S VE','RTIC','AL. '/
      DATA E( 129),E( 130),E( 131),E( 132)/'SUBS','TITU','TE Y',' FOR'/
      DATA E( 133),E( 134),E( 135),E( 136)/' X I','N  ''','XLAR','GE'' '
     +/
      DATA E( 137),E( 138),E( 139),E( 140)/'OR ''','XSMA','LL''.','    '
     +/
      DATA E( 141),E( 142),E( 143),E( 144)/'THE ','GIVE','N LI','NE I'/
      DATA E( 145),E( 146),E( 147),E( 148)/'S HO','RIZO','NTAL','. SU'/
      DATA E( 149),E( 150),E( 151),E( 152)/'BSTI','TUTE',' X F','OR Y'/
      DATA E( 153),E( 154),E( 155),E( 156)/' IN ','''YLA','RGE''',' OR '
     +/
      DATA E( 157),E( 158),E( 159),E( 160)/'''YSM','ALL''','.   ','A VE'
     +/
      DATA E( 161),E( 162),E( 163),E( 164)/'CTOR',' OPE','RAND',' IN '/
      DATA E( 165),E( 166),E( 167),E( 168)/'A DO','T PR','ODUC','T CO'/
      DATA E( 169),E( 170),E( 171),E( 172)/'MPUT','ATIO','N IS',' UND'/
      DATA E( 173),E( 174),E( 175),E( 176)/'EFIN','ED. ',' THE',' RES'/
      DATA E( 177),E( 178),E( 179),E( 180)/'ULT ','IS Z','ERO.','    '/
      DATA E( 181),E( 182),E( 183),E( 184)/'INPU','T PO','INT ','IS N'/
      DATA E( 185),E( 186),E( 187),E( 188)/'OT O','N TA','BCYL',', NE'/
      DATA E( 189),E( 190),E( 191),E( 192)/'AR I','NTER','SECT','ION '/
      DATA E( 193),E( 194),E( 195),E( 196)/'POIN','T.  ','THE ','FIRS'/
      DATA E( 197),E( 198),E( 199),E( 200)/'T CI','RCLE',' GIV','EN F'/
      DATA E( 201),E( 202),E( 203),E( 204)/'OR T','HE D','EFIN','ITIO'/
      DATA E( 205),E( 206),E( 207),E( 208)/'N OF',' THE',' POI','NT I'/
      DATA E( 209),E( 210),E( 211),E( 212)/'S NO','T  A',' VER','TICA'/
      DATA E( 213),E( 214),E( 215),E( 216)/'L CY','LIND','ER. ','THE '/
      DATA E( 217),E( 218),E( 219),E( 220)/'SECO','ND C','IRCL','E GI'/
      DATA E( 221),E( 222),E( 223),E( 224)/'VEN ','FOR ','THE ','DEFI'/
      DATA E( 225),E( 226),E( 227),E( 228)/'NITI','ON O','F TH','E PO'/
      DATA E( 229),E( 230),E( 231),E( 232)/'INT ','IS N','OT  ','A VE'/
      DATA E( 233),E( 234),E( 235),E( 236)/'RTIC','AL C','YLIN','DER.'/
      DATA E( 237),E( 238),E( 239),E( 240)/'    ','TRAN','SFOR','MATI'/
      DATA E( 241),E( 242),E( 243),E( 244)/'ON M','ATRI','X UN','DEFI'/
      DATA E( 245),E( 246),E( 247),E( 248)/'NED.','    ','THE ','LINE'/
      DATA E( 249),E( 250),E( 251),E( 252)/' AND',' CON','IC D','O NO'/
      DATA E( 253),E( 254),E( 255),E( 256)/'T IN','TERS','ECT.',' POI'/
      DATA E( 257),E( 258),E( 259),E( 260)/'NT I','S UN','DEFI','NED.'/
      DATA E( 261),E( 262),E( 263),E( 264)/'    ','THE ','GENE','RAL '/
      DATA E( 265),E( 266),E( 267),E( 268)/'CONI','C EQ','UATI','ON S'/
      DATA E( 269),E( 270),E( 271),E( 272)/'HOUL','D NO','T CO','NTAI'/
      DATA E( 273),E( 274),E( 275),E( 276)/'N TH','E Z ','COOR','DINA'/
      DATA E( 277),E( 278),E( 279),E( 280)/'TE. ',' POI','NT I','S UN'/
      DATA E( 281),E( 282),E( 283),E( 284)/'DEFI','NED.','    ','TOO '/
      DATA E( 285),E( 286),E( 287),E( 288)/'MANY',' TAB','CYLS',' INV'/
      DATA E( 289),E( 290),E( 291),E( 292)/'OLVE','D IN',' THI','S MO'/
      DATA E( 293),E( 294),E( 295),E( 296)/'TION',' STA','TEME','NT. '/
      DATA E( 297),E( 298),E( 299),E( 300)/'ONE ','OF T','HE I','NPUT'/
      DATA E( 301),E( 302),E( 303),E( 304)/' PLA','NES ','IS U','NDEF'/
      DATA E( 305),E( 306),E( 307),E( 308)/'INED','. TH','E PO','INT '/
      DATA E( 309),E( 310),E( 311),E( 312)/'IS U','NDEF','INED','.   '/
      DATA E( 313),E( 314),E( 315),E( 316)/'THE ','TWO ','GIVE','N PO'/
      DATA E( 317),E( 318),E( 319),E( 320)/'INTS',' ARE',' TOO',' CLO'/
      DATA E( 321),E( 322),E( 323),E( 324)/'SE T','OGET','HER.',' THE'/
      DATA E( 325),E( 326),E( 327),E( 328)/' LIN','E CA','NNOT','  BE'/
      DATA E( 329),E( 330),E( 331),E( 332)/' DEF','INED','.   ','THE '/
      DATA E( 333),E( 334),E( 335),E( 336)/'ARGU','MENT',' OF ','THE '/
      DATA E( 337),E( 338),E( 339),E( 340)/'FUNC','TION',' IS ','NEGA'/
      DATA E( 341),E( 342),E( 343),E( 344)/'TIVE','; GO','ING ','ON W'/
      DATA E( 345),E( 346),E( 347),E( 348)/'ITH ',' THE',' POS','ITIV'/
      DATA E( 349),E( 350),E( 351),E( 352)/'E AR','GUME','NT. ','THE '/
      DATA E( 353),E( 354),E( 355),E( 356)/'FIRS','T CI','RCLE',' GIV'/
      DATA E( 357),E( 358),E( 359),E( 360)/'EN I','N TH','E DE','FINI'/
      DATA E( 361),E( 362),E( 363),E( 364)/'TION',' OF ','THE ','LINE'/
      DATA E( 365),E( 366),E( 367),E( 368)/' IS ','NOT ',' A V','ERTI'/
      DATA E( 369),E( 370),E( 371),E( 372)/'CAL ','CYLI','NDER','.   '/
      DATA E( 373),E( 374),E( 375),E( 376)/'THE ','SECO','ND C','IRCL'/
      DATA E( 377),E( 378),E( 379),E( 380)/'E GI','VEN ','IN T','HE D'/
      DATA E( 381),E( 382),E( 383),E( 384)/'EFIN','ITIO','N OF',' THE'/
      DATA E( 385),E( 386),E( 387),E( 388)/' LIN','E IS',' NOT','  A '/
      DATA E( 389),E( 390),E( 391),E( 392)/'VERT','ICAL',' CYL','INDE'/
      DATA E( 393),E( 394),E( 395),E( 396)/'R.  ','THE ','CIRC','LES '/
      DATA E( 397),E( 398),E( 399),E( 400)/'USED',' IN ','THE ','DEFI'/
      DATA E( 401),E( 402),E( 403),E( 404)/'NITI','ON O','F TH','E LI'/
      DATA E( 405),E( 406),E( 407),E( 408)/'NE A','RE C','ONCE','NTRI'/
      DATA E( 409),E( 410),E( 411),E( 412)/'C.  ','THE ','LINE',' IS '/
      DATA E( 413),E( 414),E( 415),E( 416)/'UNDE','FINE','D.  ','ONE '/
      DATA E( 417),E( 418),E( 419),E( 420)/'OF T','HE C','IRCL','ES U'/
      DATA E( 421),E( 422),E( 423),E( 424)/'SED ','IN T','HE D','EFIN'/
      DATA E( 425),E( 426),E( 427),E( 428)/'ITIO','N OF',' THE',' LIN'/
      DATA E( 429),E( 430),E( 431),E( 432)/'E IS',' WHO','LLY ','INSI'/
      DATA E( 433),E( 434),E( 435),E( 436)/'DE O','F TH','E OT','HER.'/
      DATA E( 437),E( 438),E( 439),E( 440)/' LIN','E IS',' UND','EFIN'/
      DATA E( 441),E( 442),E( 443),E( 444)/'ED. ','THE ','CIRC','LES '/
      DATA E( 445),E( 446),E( 447),E( 448)/'USED',' IN ','THE ','LINE'/
      DATA E( 449),E( 450),E( 451),E( 452)/' DEF','INIT','ION ','INTE'/
      DATA E( 453),E( 454),E( 455),E( 456)/'RSEC','T, A','ND T','HE  '/
      DATA E( 457),E( 458),E( 459),E( 460)/'MODI','FIER','S AR','E NO'/
      DATA E( 461),E( 462),E( 463),E( 464)/'T ''L','EFT''',', ''L',
     +'EFT'''/
      DATA E( 465),E( 466),E( 467),E( 468)/' OR ','''RIG','HT'',',
     +' ''RI'/
      DATA E( 469),E( 470),E( 471),E( 472)/'GHT''','.   ','THE ','LINE'/
      DATA E( 473),E( 474),E( 475),E( 476)/' GIV','EN I','N TH','E DE'/
      DATA E( 477),E( 478),E( 479),E( 480)/'FINI','TION',' IS ','NOT '/
      DATA E( 481),E( 482),E( 483),E( 484)/'A VE','RTIC','AL P','LANE'/
      DATA E( 485),E( 486),E( 487),E( 488)/'.  L','INE ','IS U','NDEF'/
      DATA E( 489),E( 490),E( 491),E( 492)/'INED','.   ','THE ','DESI'/
      DATA E( 493),E( 494),E( 495),E( 496)/'RED ','LINE',' IS ','UNDE'/
      DATA E( 497),E( 498),E( 499),E( 500)/'FINE','D. T','HE G','IVEN'/
      DATA E( 501),E( 502),E( 503),E( 504)/' PLA','NES ','ARE ','EITH'/
      DATA E( 505),E( 506),E( 507),E( 508)/'ER  ','PARA','LLEL',', CO'/
      DATA E( 509),E( 510),E( 511),E( 512)/'INCI','DENT',' OR ','BOTH'/
      DATA E( 513),E( 514),E( 515),E( 516)/' VER','TICA','L.  ','THE '/
      DATA E( 517),E( 518),E( 519),E( 520)/'INPU','T LI','NE I','S NO'/
      DATA E( 521),E( 522),E( 523),E( 524)/'T A ','VERT','ICAL',' PLA'/
      DATA E( 525),E( 526),E( 527),E( 528)/'NE. ','CIRC','LE I','S UN'/
      DATA E( 529),E( 530),E( 531),E( 532)/'DEFI','NED.','    ','CIRC'/
      DATA E( 533),E( 534),E( 535),E( 536)/'LE U','NDEF','INED','. TH'/
      DATA E( 537),E( 538),E( 539),E( 540)/'E TH','REE ','GIVE','N PO'/
      DATA E( 541),E( 542),E( 543),E( 544)/'INTS',' ARE',' COL','LINE'/
      DATA E( 545),E( 546),E( 547),E( 548)/'AR. ','THE ','THRE','E GI'/
      DATA E( 549),E( 550),E( 551),E( 552)/'VEN ','POIN','TS A','RE N'/
      DATA E( 553),E( 554),E( 555),E( 556)/'OT I','N TH','E SA','ME  '/
      DATA E( 557),E( 558),E( 559),E( 560)/'HORI','ZONT','AL P','LANE'/
      DATA E( 561),E( 562),E( 563),E( 564)/'.   ','CIRC','LE U','NDEF'/
      DATA E( 565),E( 566),E( 567),E( 568)/'INED','. TH','E CI','RCLE'/
      DATA E( 569),E( 570),E( 571),E( 572)/' GIV','EN I','N TH','E DE'/
      DATA E( 573),E( 574),E( 575),E( 576)/'FINI','TION',' IS ','NOT '/
      DATA E( 577),E( 578),E( 579),E( 580)/' A V','ERTI','CAL ','CYLI'/
      DATA E( 581),E( 582),E( 583),E( 584)/'NDER','.   ','VECT','OR F'/
      DATA E( 585),E( 586),E( 587),E( 588)/'OR C','ANTE','D TA','BCYL'/
      DATA E( 589),E( 590),E( 591),E( 592)/' UND','EFIN','ED. ','TABC'/
      DATA E( 593),E( 594),E( 595),E( 596)/'YL I','NPUT',' POI','NT U'/
      DATA E( 597),E( 598),E( 599),E( 600)/'NDEF','INED','.   ','CONS'/
      DATA E( 601),E( 602),E( 603),E( 604)/'ECUT','IVE ','INPU','T PO'/
      DATA E( 605),E( 606),E( 607),E( 608)/'INTS',' ARE',' IDE','NTIC'/
      DATA E( 609),E( 610),E( 611),E( 612)/'AL. ','TABC','YL U','NDEF'/
      DATA E( 613),E( 614),E( 615),E( 616)/'INED','.   ','FOR ','XYZ-'/
      DATA E( 617),E( 618),E( 619),E( 620)/'CASE',', IN','CORR','ECT '/
      DATA E( 621),E( 622),E( 623),E( 624)/'PARA','METE','RS S','PECI'/
      DATA E( 625),E( 626),E( 627),E( 628)/'FIED','.  T','ABCY','L UN'/
      DATA E( 629),E( 630),E( 631),E( 632)/'DEFI','NED.','    ','THE '/
      DATA E( 633),E( 634),E( 635),E( 636)/'INPU','T-GE','OMET','RIE '/
      DATA E( 637),E( 638),E( 639),E( 640)/'OF T','HE N','UMBE','R-FU'/
      DATA E( 641),E( 642),E( 643),E( 644)/'NCTI','ON I','S UN','DEFI'/
      DATA E( 645),E( 646),E( 647),E( 648)/'NED ',' OR ','OF A',' WRO'/
      DATA E( 649),E( 650),E( 651),E( 652)/'NG K','IND;',' THE',' RES'/
      DATA E( 653),E( 654),E( 655),E( 656)/'ULT ','IS 0','.   ','THE '/
      DATA E( 657),E( 658),E( 659),E( 660)/'LOG ','ARGU','MENT',' IS '/
      DATA E( 661),E( 662),E( 663),E( 664)/'ZERO','; TH','E RE','SULT'/
      DATA E( 665),E( 666),E( 667),E( 668)/' IS ','A NE','GATI','VE N'/
      DATA E( 669),E( 670),E( 671),E( 672)/'UMBE','R.  ','THE ','ARSI'/
      DATA E( 673),E( 674),E( 675),E( 676)/'N-AR','COS ','ARGU','MENT'/
      DATA E( 677),E( 678),E( 679),E( 680)/' IS ','ABSO','LUT ','GREA'/
      DATA E( 681),E( 682),E( 683),E( 684)/'TER ','THAN',' 1; ',' THE'/
      DATA E( 685),E( 686),E( 687),E( 688)/' RES','ULT ','IS Z','ERO.'/
      DATA E( 689),E( 690),E( 691),E( 692)/'    ','THE ','INPU','T-GE'/
      DATA E( 693),E( 694),E( 695),E( 696)/'OMET','RIE ','AT T','HE V'/
      DATA E( 697),E( 698),E( 699),E( 700)/'ALUE','-FET','CHIN','G IS'/
      DATA E( 701),E( 702),E( 703),E( 704)/' UND','EFIN','ED  ','OR O'/
      DATA E( 705),E( 706),E( 707),E( 708)/'F A ','WRON','G KI','ND; '/
      DATA E( 709),E( 710),E( 711),E( 712)/'THE ','RESU','LT I','S 0.'/
      DATA E( 713),E( 714),E( 715),E( 716)/'    ','THE ','FETC','H-IN'/
      DATA E( 717),E( 718),E( 719),E( 720)/'DEX ','AT T','HE V','ALUE'/
      DATA E( 721),E( 722),E( 723),E( 724)/'-FET','CHIN','G IS',' UND'/
      DATA E( 725),E( 726),E( 727),E( 728)/'EFIN','ED  ','OR T','HE C'/
      DATA E( 729),E( 730),E( 731),E( 732)/'ANON','ICAL',' FOR','M IS'/
      DATA E( 733),E( 734),E( 735),E( 736)/' TOO',' SHO','RT; ','THE '/
      DATA E( 737),E( 738),E( 739),E( 740)/'RESU','LT I','S 0.','    '/
      DATA E( 741),E( 742),E( 743),E( 744)/'THE ','FETC','H-IN','DEX '/
      DATA E( 745),E( 746),E( 747),E( 748)/'AT T','HE V','ALUE','-FET'/
      DATA E( 749),E( 750),E( 751),E( 752)/'CHIN','G IS',' LES','S OR'/
      DATA E( 753),E( 754),E( 755),E( 756)/' EQU','AL  ','ZERO','; TH'/
      DATA E( 757),E( 758),E( 759),E( 760)/'E RE','SULT',' IS ','0.  '/
      DATA E( 761),E( 762),E( 763),E( 764)/'THE ','PARA','METE','R-DE'/
      DATA E( 765),E( 766),E( 767),E( 768)/'LIVE','RY P','RECE','DES '/
      DATA E( 769),E( 770),E( 771),E( 772)/'NO E','QUIV','ALEN','T  I'/
      DATA E( 773),E( 774),E( 775),E( 776)/'NTER','SECT','ION-','STMT'/
      DATA E( 777),E( 778),E( 779),E( 780)/'; TH','E RE','SULT',' IS '/
      DATA E( 781),E( 782),E( 783),E( 784)/'0.  ','THE ','PARA','METE'/
      DATA E( 785),E( 786),E( 787),E( 788)/'R-DE','LIVE','RY-F','UNCT'/
      DATA E( 789),E( 790),E( 791),E( 792)/'ION ','IS N','OT C','ORRE'/
      DATA E( 793),E( 794),E( 795),E( 796)/'CT S','UPPL','IED;','  TH'/
      DATA E( 797),E( 798),E( 799),E( 800)/'E RE','SULT',' IS ','0.  '/
      DATA E( 801),E( 802),E( 803),E( 804)/'THE ','SUM ','OF T','HE S'/
      DATA E( 805),E( 806),E( 807),E( 808)/'QUAR','ES O','F TH','E CO'/
      DATA E( 809),E( 810),E( 811),E( 812)/'EFFI','CIEN','TS O','F X,'/
      DATA E( 813),E( 814),E( 815),E( 816)/' Y  ','AN Z',' IS ','ZERO'/
      DATA E( 817),E( 818),E( 819),E( 820)/'. PL','ANE ','NOT ','DEFI'/
      DATA E( 821),E( 822),E( 823),E( 824)/'NED.','    ','''ZIG','ZAG'''
     +/
      DATA E( 825),E( 826),E( 827),E( 828)/' IS ','IGNO','RED ','SINC'/
      DATA E( 829),E( 830),E( 831),E( 832)/'E PA','TERN',' IS ','NOT '/
      DATA E( 833),E( 834),E( 835),E( 836)/'GRID','.   ','''OMI','T'' H'
     +/
      DATA E( 837),E( 838),E( 839),E( 840)/'AS B','EEN ','APPL','IED '/
      DATA E( 841),E( 842),E( 843),E( 844)/'(OR ','''RET','AIN''',' HAS'
     +/
      DATA E( 845),E( 846),E( 847),E( 848)/' NOT',' BEE','N AP','PLIE'/
      DATA E( 849),E( 850),E( 851),E( 852)/'D)  ','TO T','HE F','IRST'/
      DATA E( 853),E( 854),E( 855),E( 856)/' OR ','LAST',' POI','NT I'/
      DATA E( 857),E( 858),E( 859),E( 860)/'N AN',' AVO','ID S','TRIN'/
      DATA E( 861),E( 862),E( 863),E( 864)/'G.  ','CONE',' UND','EFIN'/
      DATA E( 865),E( 866),E( 867),E( 868)/'ED. ','THE ','AXIS',' VEC'/
      DATA E( 869),E( 870),E( 871),E( 872)/'TOR ','GIVE','N IN',' THE'/
      DATA E( 873),E( 874),E( 875),E( 876)/' DEF','INIT','ION ','HAS '/
      DATA E( 877),E( 878),E( 879),E( 880)/' ZER','O VA','LUE.','    '/
      DATA E( 881),E( 882),E( 883),E( 884)/'CONE',' UND','EFIN','ED. '/
      DATA E( 885),E( 886),E( 887),E( 888)/'THE ','GIVE','N AN','GLE '/
      DATA E( 889),E( 890),E( 891),E( 892)/'IS G','REAT','ER T','HAN '/
      DATA E( 893),E( 894),E( 895),E( 896)/'90 D','EGRE','ES. ','PLAN'/
      DATA E( 897),E( 898),E( 899),E( 900)/'E US','ED I','N ''Z','SURF'/
      DATA E( 901),E( 902),E( 903),E( 904)/''' ST','ATEM','ENT ','IS U'/
      DATA E( 905),E( 906),E( 907),E( 908)/'NDEF','INED','.  ''','ZSUR'/
      DATA E( 909),E( 910),E( 911),E( 912)/'F'' S','TATE','MENT',' IS '/
      DATA E( 913),E( 914),E( 915),E( 916)/'IGNO','RED.','    ','PLAN'/
      DATA E( 917),E( 918),E( 919),E( 920)/'E US','ED I','N ''Z','SURF'/
      DATA E( 921),E( 922),E( 923),E( 924)/''' ST','ATEM','ENT ','IS P'/
      DATA E( 925),E( 926),E( 927),E( 928)/'ARAL','LEL ','TO  ','Z AX'/
      DATA E( 929),E( 930),E( 931),E( 932)/'IS. ','''ZSU','RF'' ','STAT'
     +/
      DATA E( 933),E( 934),E( 935),E( 936)/'EMEN','T IS',' IGN','ORED'/
      DATA E( 937),E( 938),E( 939),E( 940)/'.   ','INPU','T VE','CTOR'/
      DATA E( 941),E( 942),E( 943),E( 944)/'S AR','E PA','RALL','EL. '/
      DATA E( 945),E( 946),E( 947),E( 948)/'PLAN','E UN','DEFI','NED.'/
      DATA E( 949),E( 950),E( 951),E( 952)/'    ','THE ','THRE','E SI'/
      DATA E( 953),E( 954),E( 955),E( 956)/'MULT','ANEO','US E','QUAT'/
      DATA E( 957),E( 958),E( 959),E( 960)/'IONS',' DO ','NOT ','HAVE'/
      DATA E( 961),E( 962),E( 963),E( 964)/' A U','NIQU','E SO','LUTI'/
      DATA E( 965),E( 966),E( 967),E( 968)/'ON. ','''REF','SYS''',' GIV'
     +/
      DATA E( 969),E( 970),E( 971),E( 972)/'EN W','ITH ','UNDE','FINE'/
      DATA E( 973),E( 974),E( 975),E( 976)/'D MA','TRIX','. TR','ANSF'/
      DATA E( 977),E( 978),E( 979),E( 980)/'ORMS',' WIL','L BE','  UN'/
      DATA E( 981),E( 982),E( 983),E( 984)/'DEFI','NED.','    ','AT L'/
      DATA E( 985),E( 986),E( 987),E( 988)/'EAST',' ONE',' INP','UT-E'/
      DATA E( 989),E( 990),E( 991),E( 992)/'LEME','NT O','F TH','E SP'/
      DATA E( 993),E( 994),E( 995),E( 996)/'AT-F','UNCT','ION ','IS W'/
      DATA E( 997),E( 998),E( 999),E(1000)/'RONG',' OR ',' UND','EFIN'/
      DATA E(1001),E(1002),E(1003),E(1004)/'ED; ','THE ','RESU','LT I'/
      DATA E(1005),E(1006),E(1007),E(1008)/'S 0.','    ','AT L','EAST'/
      DATA E(1009),E(1010),E(1011),E(1012)/' ONE',' INP','UT-E','LEME'/
      DATA E(1013),E(1014),E(1015),E(1016)/'NT O','F TH','E DI','ST-F'/
      DATA E(1017),E(1018),E(1019),E(1020)/'UNCT','ION ','IS U','NDEF'/
      DATA E(1021),E(1022),E(1023),E(1024)/'INED',';  T','HE R','ESUL'/
      DATA E(1025),E(1026),E(1027),E(1028)/'T IS',' 0. ','THE ','VECT'/
      DATA E(1029),E(1030),E(1031),E(1032)/'OR W','HOSE',' LEN','GTH '/
      DATA E(1033),E(1034),E(1035),E(1036)/'IS T','O BE',' COM','PUTE'/
      DATA E(1037),E(1038),E(1039),E(1040)/'D IS',' UND','EFIN','ED. '/
      DATA E(1041),E(1042),E(1043),E(1044)/'A LE','NGTH',' OF ','ZERO'/
      DATA E(1045),E(1046),E(1047),E(1048)/' IS ','USED','.   ','SPHE'/
      DATA E(1049),E(1050),E(1051),E(1052)/'RE U','NDEF','INED','. TH'/
      DATA E(1053),E(1054),E(1055),E(1056)/'E FO','UR G','IVEN',' POI'/
      DATA E(1057),E(1058),E(1059),E(1060)/'NTS ','ARE ','COMP','LANA'/
      DATA E(1061),E(1062),E(1063),E(1064)/'R.  ','CYLI','NDER',' UND'/
      DATA E(1065),E(1066),E(1067),E(1068)/'EFIN','ED. ','THE ','AXIS'/
      DATA E(1069),E(1070),E(1071),E(1072)/' VEC','TOR ','GIVE','N IN'/
      DATA E(1073),E(1074),E(1075),E(1076)/' THE',' DEF','INIT','ION '/
      DATA E(1077),E(1078),E(1079),E(1080)/'HAS ',' ZER','O VA','LUE.'/
      DATA E(1081),E(1082),E(1083),E(1084)/'    ','GIVE','N PL','ANE '/
      DATA E(1085),E(1086),E(1087),E(1088)/'IS P','ERPE','NDIC','ULAR'/
      DATA E(1089),E(1090),E(1091),E(1092)/' TO ','AN A','XIS.',' MOD'/
      DATA E(1093),E(1094),E(1095),E(1096)/'IFIE','R MU','ST C','ONTA'/
      DATA E(1097),E(1098),E(1099),E(1100)/'IN  ','THIS',' AXI','S.  '/
      DATA E(1101),E(1102),E(1103),E(1104)/'THE ','INPU','T-EL','EMEN'/
      DATA E(1105),E(1106),E(1107),E(1108)/'T OF',' THE',' DIS','T-FU'/
      DATA E(1109),E(1110),E(1111),E(1112)/'NCTI','ON I','S OF',' A W'/
      DATA E(1113),E(1114),E(1115),E(1116)/'RONG',' KIN','D;  ','THE '/
      DATA E(1117),E(1118),E(1119),E(1120)/'RESU','LT I','S 0.','    '/
      DATA E(1121),E(1122),E(1123),E(1124)/'THE ','TWO ','PLAN','ES O'/
      DATA E(1125),E(1126),E(1127),E(1128)/'R LI','NES ','OF T','HE D'/
      DATA E(1129),E(1130),E(1131),E(1132)/'IST-','FUNC','TION',' ARE'/
      DATA E(1133),E(1134),E(1135),E(1136)/' NOT',' PAR','ALLE','L;  '/
      DATA E(1137),E(1138),E(1139),E(1140)/'THE ','RESU','LT I','S 0.'/
      DATA E(1141),E(1142),E(1143),E(1144)/'    ','THE ','REQU','ESTE'/
      DATA E(1145),E(1146),E(1147),E(1148)/'D NU','MBER',' OF ','ROWS'/
      DATA E(1149),E(1150),E(1151),E(1152)/' OR ','COLU','MNS ','IN A'/
      DATA E(1153),E(1154),E(1155),E(1156)/' GRI','D OR',' PER','IPHE'/
      DATA E(1157),E(1158),E(1159),E(1160)/'RAL ',' PAT','ERN ','IS Z'/
      DATA E(1161),E(1162),E(1163),E(1164)/'ERO ','OR A',' NEG','ATIV'/
      DATA E(1165),E(1166),E(1167),E(1168)/'E NU','MBER','.   ','INCR'/
      DATA E(1169),E(1170),E(1171),E(1172)/'EMEN','T OR',' NUM','BER '/
      DATA E(1173),E(1174),E(1175),E(1176)/'OF I','NCRE','MENT','S IN'/
      DATA E(1177),E(1178),E(1179),E(1180)/' A P','ATER','N DE','FINI'/
      DATA E(1181),E(1182),E(1183),E(1184)/'TION','  IN','CREM','ENT '/
      DATA E(1185),E(1186),E(1187),E(1188)/'LIST',' IS ','NEGA','TIVE'/
      DATA E(1189),E(1190),E(1191),E(1192)/' OR ','ZERO','.   ','VECT'/
      DATA E(1193),E(1194),E(1195),E(1196)/'OR S','UPPL','IED ','IN A'/
      DATA E(1197),E(1198),E(1199),E(1200)/' PAT','ERN ','DEFI','NITI'/
      DATA E(1201),E(1202),E(1203),E(1204)/'ON H','AS L','ENGT','H ZE'/
      DATA E(1205),E(1206),E(1207),E(1208)/'RO. ','THE ','REQU','ESTE'/
      DATA E(1209),E(1210),E(1211),E(1212)/'D NU','MBER',' OF ','POIN'/
      DATA E(1213),E(1214),E(1215),E(1216)/'TS I','N A ','PATE','RN I'/
      DATA E(1217),E(1218),E(1219),E(1220)/'S ZE','RO O','R A ',' NEG'/
      DATA E(1221),E(1222),E(1223),E(1224)/'ATIV','E NU','MBER','.   '/
      DATA E(1225),E(1226),E(1227),E(1228)/'THE ','PATE','RN U','SED '/
      DATA E(1229),E(1230),E(1231),E(1232)/'IN A',' GRI','D OR',' PER'/
      DATA E(1233),E(1234),E(1235),E(1236)/'IPHE','RAL ','PATE','RN D'/
      DATA E(1237),E(1238),E(1239),E(1240)/'EFIN','ITIO','N MU','ST  '/
      DATA E(1241),E(1242),E(1243),E(1244)/'BE L','INEA','R.  ','A RA'/
      DATA E(1245),E(1246),E(1247),E(1248)/'NDOM',' PAT','ERN ','MAY '/
      DATA E(1249),E(1250),E(1251),E(1252)/'NOT ','BE U','SED ','IN T'/
      DATA E(1253),E(1254),E(1255),E(1256)/'HE D','EFIN','ITIO','N OF'/
      DATA E(1257),E(1258),E(1259),E(1260)/' A R','ANDO','M  P','ATER'/
      DATA E(1261),E(1262),E(1263),E(1264)/'N.  ','INPU','T PO','INT '/
      DATA E(1265),E(1266),E(1267),E(1268)/'FOR ','LCON','IC I','S UN'/
      DATA E(1269),E(1270),E(1271),E(1272)/'DEFI','NED.','    ','TWO '/
      DATA E(1273),E(1274),E(1275),E(1276)/'INPU','T PO','INTS',' COI'/
      DATA E(1277),E(1278),E(1279),E(1280)/'NCID','E. T','HE C','ONIC'/
      DATA E(1281),E(1282),E(1283),E(1284)/' CAN','NOT ','BE D','EFIN'/
      DATA E(1285),E(1286),E(1287),E(1288)/'ED. ','THIS',' IS ','A DE'/
      DATA E(1289),E(1290),E(1291),E(1292)/'GENE','RATI','C CO','NIC.'/
      DATA E(1293),E(1294),E(1295),E(1296)/'    ','TABC','YL I','NTER'/
      DATA E(1297),E(1298),E(1299),E(1300)/'SECT','ION ','POIN','T IS'/
      DATA E(1301),E(1302),E(1303),E(1304)/' NOT',' FOU','ND. ','MORE'/
      DATA E(1305),E(1306),E(1307),E(1308)/' THA','N 1 ','POIN','T IN'/
      DATA E(1309),E(1310),E(1311),E(1312)/' TAN','GENC','Y ON',' TAB'/
      DATA E(1313),E(1314),E(1315),E(1316)/'CYL.','    ','TABC','YL T'/
      DATA E(1317),E(1318),E(1319),E(1320)/'ANGE','NT L','INE ','IS N'/
      DATA E(1321),E(1322),E(1323),E(1324)/'OT F','OUND','.   ','TABC'/
      DATA E(1325),E(1326),E(1327),E(1328)/'YL T','ANGE','NT L','INE '/
      DATA E(1329),E(1330),E(1331),E(1332)/'FAIL','ED. ','ARGU','MENT'/
      DATA E(1333),E(1334),E(1335),E(1336)/' FOR',' TAB','CYL ','TANG'/
      DATA E(1337),E(1338),E(1339),E(1340)/'ENT ','LINE',' IS ','UNDE'/
      DATA E(1341),E(1342),E(1343),E(1344)/'FINE','D.  ','TABC','YL M'/
      DATA E(1345),E(1346),E(1347),E(1348)/'ODIF','IER ','INDE','TERM'/
      DATA E(1349),E(1350),E(1351),E(1352)/'INAT','E.  ','TABC','YL T'/
      DATA E(1353),E(1354),E(1355),E(1356)/'ANGE','NT C','IRCL','E IS'/
      DATA E(1357),E(1358),E(1359),E(1360)/' NOT',' FOU','ND. ','ARGU'/
      DATA E(1361),E(1362),E(1363),E(1364)/'MENT',' FOR',' TAB','CYL '/
      DATA E(1365),E(1366),E(1367),E(1368)/'TANG','ENT ','CIRC','LE I'/
      DATA E(1369),E(1370),E(1371),E(1372)/'S UN','DEFI','NED.','    '/
      DATA E(1373),E(1374),E(1375),E(1376)/'AT L','EAST',' ONE',' INP'/
      DATA E(1377),E(1378),E(1379),E(1380)/'UT O','F TH','E AN','GL-F'/
      DATA E(1381),E(1382),E(1383),E(1384)/'UNCT','ION ','IS U','NDEF'/
      DATA E(1385),E(1386),E(1387),E(1388)/'INED',' OR ','OF A','  WR'/
      DATA E(1389),E(1390),E(1391),E(1392)/'ONG ','KIND','; TH','E RE'/
      DATA E(1393),E(1394),E(1395),E(1396)/'SULT',' IS ','ZERO','.   '/
      DATA E(1397),E(1398),E(1399),E(1400)/'A RA','NDOM',' PAT','ERN '/
      DATA E(1401),E(1402),E(1403),E(1404)/'OCCU','RS A','S A ','SUB '/
      DATA E(1405),E(1406),E(1407),E(1408)/'ELEM','ENT ','OF A',' RAN'/
      DATA E(1409),E(1410),E(1411),E(1412)/'DOM ','PATE','RN. ','REST'/
      DATA E(1413),E(1414),E(1415),E(1416)/'ART ','DUE ','TO D','EFIN'/
      DATA E(1417),E(1418),E(1419),E(1420)/'ITIO','N OR',' SYN','TAX '/
      DATA E(1421),E(1422),E(1423),E(1424)/'ERRO','R.  ','HALF',' SPA'/
      DATA E(1425),E(1426),E(1427),E(1428)/'CE M','ODIF','IER ','NOT '/
      DATA E(1429),E(1430),E(1431),E(1432)/'PROP','ERLY',' SPE','CIFI'/
      DATA E(1433),E(1434),E(1435),E(1436)/'ED. ','REFE','RENC','ED E'/
      DATA E(1437),E(1438),E(1439),E(1440)/'LEME','NT N','OT P','ROPE'/
      DATA E(1441),E(1442),E(1443),E(1444)/'RLY ','DEFI','NED.','    '/
      DATA E(1445),E(1446),E(1447),E(1448)/'BOUN','DED ','GEOM','ETRY'/
      DATA E(1449),E(1450),E(1451),E(1452)/' ELE','MENT',' HAS',' BEE'/
      DATA E(1453),E(1454),E(1455),E(1456)/'N RE','DEFI','NED ','WITH'/
      DATA E(1457),E(1458),E(1459),E(1460)/' A D','IFFE','RENT','  NU'/
      DATA E(1461),E(1462),E(1463),E(1464)/'MBER',' OF ','ELEM','ENTS'/
      DATA E(1465),E(1466),E(1467),E(1468)/'.   ','THE ','DIFF','EREN'/
      DATA E(1469),E(1470),E(1471),E(1472)/'CE B','ETWE','EN >','P1< '/
      DATA E(1473),E(1474),E(1475),E(1476)/'AND ','>P2<',' IS ','LESS'/
      DATA E(1477),E(1478),E(1479),E(1480)/' THA','N .0','1 . ','>V1<'/
      DATA E(1481),E(1482),E(1483),E(1484)/' IS ','PARA','LLEL',' TO '/
      DATA E(1485),E(1486),E(1487),E(1488)/'THE ','CHOR','D.  ','INVA'/
      DATA E(1489),E(1490),E(1491),E(1492)/'LID ','OR E','RRON','EOUS'/
      DATA E(1493),E(1494),E(1495),E(1496)/' CAN','ONIC','AL F','ORM '/
      DATA E(1497),E(1498),E(1499),E(1500)/'ENCO','UNTE','RED.',' BOU'/
      DATA E(1501),E(1502),E(1503),E(1504)/'NDED','  GE','OMET','RY P'/
      DATA E(1505),E(1506),E(1507),E(1508)/'ROCE','SSIN','G TE','RMIN'/
      DATA E(1509),E(1510),E(1511),E(1512)/'ATED','.   ','TOO ','MUCH'/
      DATA E(1513),E(1514),E(1515),E(1516)/' EMB','EDDE','DNES','S IN'/
      DATA E(1517),E(1518),E(1519),E(1520)/' BOU','NDS ','AND ','OBJE'/
      DATA E(1521),E(1522),E(1523),E(1524)/'CT S','TATE','MENT','S. B'/
      DATA E(1525),E(1526),E(1527),E(1528)/'OUND','ED  ','GEOM','ETRY'/
      DATA E(1529),E(1530),E(1531),E(1532)/' PRO','CESS','ING ','TERM'/
      DATA E(1533),E(1534),E(1535),E(1536)/'INAT','ED. ','INCO','RREC'/
      DATA E(1537),E(1538),E(1539),E(1540)/'T AR','GUME','NT I','N ''U'/
      DATA E(1541),E(1542),E(1543),E(1544)/'NITS',''' ST','ATEM','ENT.'/
      DATA E(1545),E(1546),E(1547),E(1548)/'    ','PLAN','E IS',' NOT'/
      DATA E(1549),E(1550),E(1551),E(1552)/' VER','TICA','L.  ','SPEC'/
      DATA E(1553),E(1554),E(1555),E(1556)/'IFIE','D CL',' POI','NT D'/
      DATA E(1557),E(1558),E(1559),E(1560)/'OES ','NOT ','EXIS','T.  '/
      DATA E(1561),E(1562),E(1563),E(1564)/'CLDA','T IN','DEXE','S AR'/
      DATA E(1565),E(1566),E(1567),E(1568)/'E DI','FFER','ENT ','(FIR'/
      DATA E(1569),E(1570),E(1571),E(1572)/'ST I','NDEX',' REM','AINS'/
      DATA E(1573),E(1574),E(1575),E(1576)/' VAL','ID) ','OR M','ULTI'/
      DATA E(1577),E(1578),E(1579),E(1580)/'PLE ','DEFI','NED ','CLDA'/
      DATA E(1581),E(1582),E(1583),E(1584)/'T-SE','CTIO','N (F','ORME'/
      DATA E(1585),E(1586),E(1587),E(1588)/'R SE','CTIO','N DE','LETE'/
      DATA E(1589),E(1590),E(1591),E(1592)/'D). ','ICLT','AB F','ILLE'/
      DATA E(1593),E(1594),E(1595),E(1596)/'D. U','SE A',' FOR','MER '/
      DATA E(1597),E(1598),E(1599),E(1600)/'USED',' IND','EX O','R RE'/
      DATA E(1601),E(1602),E(1603),E(1604)/'DIME','NSIO','N AR','RAY.'/
      DATA E(1605),E(1606),E(1607),E(1608)/'    ','CLDA','T SE','CTIO'/
      DATA E(1609),E(1610),E(1611),E(1612)/'N NO','T FO','UND ','OR N'/
      DATA E(1613),E(1614),E(1615),E(1616)/'OT C','LOSE','D.  ','TRAN'/
      DATA E(1617),E(1618),E(1619),E(1620)/'SFOR','MATI','ON M','ATRI'/
      DATA E(1621),E(1622),E(1623),E(1624)/'X HA','S UN','EQUA','L SC'/
      DATA E(1625),E(1626),E(1627),E(1628)/'ALE ','FUNC','TION',' IN '/
      DATA E(1629),E(1630),E(1631),E(1632)/'X-, ','Y- O','R Z-','AXIS'/
      DATA E(1633),E(1634),E(1635),E(1636)/'.   ','MOTI','ON C','OMMA'/
      DATA E(1637),E(1638),E(1639),E(1640)/'ND D','OES ','NOT ','CONT'/
      DATA E(1641),E(1642),E(1643),E(1644)/'AIN ','PART',' OR ','DRIV'/
      DATA E(1645),E(1646),E(1647),E(1648)/'E SU','RFAC','E TO',' PRO'/
      DATA E(1649),E(1650),E(1651),E(1652)/'DUCE','CL -',' DEF','INIT'/
      DATA E(1653),E(1654),E(1655),E(1656)/'ION ','WANT','ED. ','WRON'/
      DATA E(1657),E(1658),E(1659),E(1660)/'G AR','GUME','NT I','N PA'/
      DATA E(1661),E(1662),E(1663),E(1664)/'RTPR','OGRA','M CA','LLIN'/
      DATA E(1665),E(1666),E(1667),E(1668)/'G FU','NCTI','ON. ','WANT'/
      DATA E(1669),E(1670),E(1671),E(1672)/'ED M','ODUL','E CA','NNOT'/
      DATA E(1673),E(1674),E(1675),E(1676)/' BE ','FOUN','D.  ','EXTE'/
      DATA E(1677),E(1678),E(1679),E(1680)/'RNAL',' REF','EREN','CE I'/
      DATA E(1681),E(1682),E(1683),E(1684)/'S NO','T SO','LVED','.   '/
      DATA E(1685),E(1686),E(1687),E(1688)/'NOT ','ENOU','GH C','ORE '/
      DATA E(1689),E(1690),E(1691),E(1692)/'AVAI','LABL','E.  ','MODU'/
      DATA E(1693),E(1694),E(1695),E(1696)/'LE N','OT I','N LI','BRAR'/
      DATA E(1697),E(1698),E(1699),E(1700)/'Y.  ','CESD',' TAB','LE F'/
      DATA E(1701),E(1702),E(1703),E(1704)/'OR L','OADE','R MO','DULE'/
      DATA E(1705),E(1706),E(1707),E(1708)/'S TO','O SH','ORT.','    '/
      DATA E(1709),E(1710),E(1711),E(1712)/'CESD',' TAB','LE F','OR L'/
      DATA E(1713),E(1714),E(1715),E(1716)/'OAD-','MODU','LE T','OO S'/
      DATA E(1717),E(1718),E(1719),E(1720)/'HORT','.   ','TO M','ANY '/
      DATA E(1721),E(1722),E(1723),E(1724)/'MODU','LES ','TO B','E LO'/
      DATA E(1725),E(1726),E(1727),E(1728)/'ADED','.   ','POCK','ET I'/
      DATA E(1729),E(1730),E(1731),E(1732)/'NPUT',' CON','TAIN','S DU'/
      DATA E(1733),E(1734),E(1735),E(1736)/'PLIC','ATE ','POIN','TS. '/
      DATA E(1737),E(1738),E(1739),E(1740)/'POCK','ET I','NPUT',' CON'/
      DATA E(1741),E(1742),E(1743),E(1744)/'TAIN','S TH','REE ','COLL'/
      DATA E(1745),E(1746),E(1747),E(1748)/'INEA','R PO','INTS','.   '/
      DATA E(1749),E(1750),E(1751),E(1752)/'POCK','ET I','NPUT',' POI'/
      DATA E(1753),E(1754),E(1755),E(1756)/'NTS ','ARE ','NOT ','COMP'/
      DATA E(1757),E(1758),E(1759),E(1760)/'LANA','R.  ','POCK','ET I'/
      DATA E(1761),E(1762),E(1763),E(1764)/'NPUT',' POI','NTS ','DESC'/
      DATA E(1765),E(1766),E(1767),E(1768)/'RIBE',' CON','CAVE',' FIG'/
      DATA E(1769),E(1770),E(1771),E(1772)/'URE.','    ','AN I','NPUT'/
      DATA E(1773),E(1774),E(1775),E(1776)/' POI','NT I','S UN','DEFI'/
      DATA E(1777),E(1778),E(1779),E(1780)/'NED.','    ','THE ','ANGL'/
      DATA E(1781),E(1782),E(1783),E(1784)/'E BE','TWEE','N TH','E TO'/
      DATA E(1785),E(1786),E(1787),E(1788)/'OL A','XIS ','AND ','THE '/
      DATA E(1789),E(1790),E(1791),E(1792)/'PLAN','E OF',' THE',' POC'/
      DATA E(1793),E(1794),E(1795),E(1796)/'KET ',' BOT','TOM ','IS T'/
      DATA E(1797),E(1798),E(1799),E(1800)/'OO S','MALL',' (LE','SS T'/
      DATA E(1801),E(1802),E(1803),E(1804)/'HAN ','12 D','EGRE','ES).'/
      DATA E(1805),E(1806),E(1807),E(1808)/'    ','LESS',' THA','N 3 '/
      DATA E(1809),E(1810),E(1811),E(1812)/'POIN','TS H','AVE ','BEEN'/
      DATA E(1813),E(1814),E(1815),E(1816)/' GEN','ERAT','ED. ','A MI'/
      DATA E(1817),E(1818),E(1819),E(1820)/'NOR ','WORD',' OR ','CANO'/
      DATA E(1821),E(1822),E(1823),E(1824)/'NICA','L FO','RM I','N TH'/
      DATA E(1825),E(1826),E(1827),E(1828)/'E IN','PUT ','STRE','AM I'/
      DATA E(1829),E(1830),E(1831),E(1832)/'S IN',' THE','  WR','ONG '/
      DATA E(1833),E(1834),E(1835),E(1836)/'POSI','TION',' OR ','INVA'/
      DATA E(1837),E(1838),E(1839),E(1840)/'LID.','    ','AN I','NPUT'/
      DATA E(1841),E(1842),E(1843),E(1844)/' CAN','ONIC','AL F','ORM '/
      DATA E(1845),E(1846),E(1847),E(1848)/'HAS ','NOT ','BEEN',' DEF'/
      DATA E(1849),E(1850),E(1851),E(1852)/'INED',' PRO','PERL','Y.  '/
      DATA E(1853),E(1854),E(1855),E(1856)/'AN I','NPUT',' CAN','ONIC'/
      DATA E(1857),E(1858),E(1859),E(1860)/'AL F','ORM ','IS N','OT S'/
      DATA E(1861),E(1862),E(1863),E(1864)/'UITA','BLE ','FOR ','THIS'/
      DATA E(1865),E(1866),E(1867),E(1868)/' APP','LICA','TION','.   '/
      DATA E(1869),E(1870),E(1871),E(1872)/'TOO ','MANY',' OR ','FEW '/
      DATA E(1873),E(1874),E(1875),E(1876)/'PARA','METE','RS H','AVE '/
      DATA E(1877),E(1878),E(1879),E(1880)/'BEEN',' INP','UT. ','THE '/
      DATA E(1881),E(1882),E(1883),E(1884)/'CUTT','ER C','OULD',' NOT'/
      DATA E(1885),E(1886),E(1887),E(1888)/' CON','TACT',' THE',' PAR'/
      DATA E(1889),E(1890),E(1891),E(1892)/'T SU','RFAC','E FR','OM T'/
      DATA E(1893),E(1894),E(1895),E(1896)/'HE P','RESE','NT  ','POSI'/
      DATA E(1897),E(1898),E(1899),E(1900)/'TION','.   ','AT T','HE L'/
      DATA E(1901),E(1902),E(1903),E(1904)/'AST ','POIN','T DU','RING'/
      DATA E(1905),E(1906),E(1907),E(1908)/' PAT','H GE','NERA','TION'/
      DATA E(1909),E(1910),E(1911),E(1912)/', TH','E SY','STEM',' COU'/
      DATA E(1913),E(1914),E(1915),E(1916)/'LD N','OT  ','MAKE',' A C'/
      DATA E(1917),E(1918),E(1919),E(1920)/'UTTE','R ST','EPOU','T TH'/
      DATA E(1921),E(1922),E(1923),E(1924)/'AT S','ATIS','FIED',' ALL'/
      DATA E(1925),E(1926),E(1927),E(1928)/' CUR','VATU','RE A','ND  '/
      DATA E(1929),E(1930),E(1931),E(1932)/'TOLE','RANC','E CO','NDIT'/
      DATA E(1933),E(1934),E(1935),E(1936)/'IONS','.   ','MORE',' CL '/
      DATA E(1937),E(1938),E(1939),E(1940)/'POIN','TS W','ERE ','GENE'/
      DATA E(1941),E(1942),E(1943),E(1944)/'RATE','D IN',' A S','INGL'/
      DATA E(1945),E(1946),E(1947),E(1948)/'E PA','TH T','HAN ','PERM'/
      DATA E(1949),E(1950),E(1951),E(1952)/'ITTE','D  B','Y ''N','UMPT'/
      DATA E(1953),E(1954),E(1955),E(1956)/'S'' S','ETTI','NG. ','THE '/
      DATA E(1957),E(1958),E(1959),E(1960)/'TOTA','L LE','NGTH',' OF '/
      DATA E(1961),E(1962),E(1963),E(1964)/'THE ','CURR','ENT ','CUTT'/
      DATA E(1965),E(1966),E(1967),E(1968)/'ER P','ATH ','EXCE','EDED'/
      DATA E(1969),E(1970),E(1971),E(1972)/' THE','  ''M','AXDP',''' SE'
     +/
      DATA E(1973),E(1974),E(1975),E(1976)/'TTIN','UNAB','LE T','O AV'/
      DATA E(1977),E(1978),E(1979),E(1980)/'OID ','INTE','RFER','ENCE'/
      DATA E(1981),E(1982),E(1983),E(1984)/' WIT','H CU','RREN','T PA'/
      DATA E(1985),E(1986),E(1987),E(1988)/'RAME','TERS','G.  ','A MI'/
      DATA E(1989),E(1990),E(1991),E(1992)/'NOR ','WORD',' OR ','CANO'/
      DATA E(1993),E(1994),E(1995),E(1996)/'NICA','L FO','RM I','N TH'/
      DATA E(1997),E(1998),E(1999),E(2000)/'E IN','PUT ','STRE','AM I'/
      DATA E(2001),E(2002),E(2003),E(2004)/'S IN',' THE','  WR','ONG '/
      DATA E(2005),E(2006),E(2007),E(2008)/'POSI','TION',' OR ','INVA'/
      DATA E(2009),E(2010),E(2011),E(2012)/'LID.','    ','AN I','NPUT'/
      DATA E(2013),E(2014),E(2015),E(2016)/' CAN','ONIC','AL F','ORM '/
      DATA E(2017),E(2018),E(2019),E(2020)/'HAS ','NOT ','BEEN',' DEF'/
      DATA E(2021),E(2022),E(2023),E(2024)/'INED',' PRO','PERL','Y.  '/
      DATA E(2025),E(2026),E(2027),E(2028)/'AN I','NPUT',' CAN','ONIC'/
      DATA E(2029),E(2030),E(2031),E(2032)/'AL F','ORM ','IS N','OT S'/
      DATA E(2033),E(2034),E(2035),E(2036)/'UITA','BLE ','FOR ','THIS'/
      DATA E(2037),E(2038),E(2039),E(2040)/' APP','LICA','TION','.   '/
      DATA E(2041),E(2042),E(2043),E(2044)/'TOO ','MANY',' OR ','FEW '/
      DATA E(2045),E(2046),E(2047),E(2048)/'PARA','METE','RS H','AVE '/
      DATA E(2049),E(2050),E(2051),E(2052)/'BEEN',' INP','UT. ','AN '''/
      DATA E(2053),E(2054),E(2055),E(2056)/'SCON',''' DA','TA A','REA '/
      DATA E(2057),E(2058),E(2059),E(2060)/'(DS,','PS,F','EED,','ETC.'/
      DATA E(2061),E(2062),E(2063),E(2064)/') HA','S NO','T BE','EN D'/
      DATA E(2065),E(2066),E(2067),E(2068)/'EFIN','ED O','R  H','AS B'/
      DATA E(2069),E(2070),E(2071),E(2072)/'EEN ','INCO','RREC','TLY '/
      DATA E(2073),E(2074),E(2075),E(2076)/'DEFI','NED.','    ','GENE'/
      DATA E(2077),E(2078),E(2079),E(2080)/'RAL ','APT ','AREL','EM C'/
      DATA E(2081),E(2082),E(2083),E(2084)/'ONDI','TION','S FO','R RE'/
      DATA E(2085),E(2086),E(2087),E(2088)/'GION','AL M','ILLI','NG A'/
      DATA E(2089),E(2090),E(2091),E(2092)/'RE I','NVAL','ID  ','(PRO'/
      DATA E(2093),E(2094),E(2095),E(2096)/'BABL','Y UN','ACCE','PTAB'/
      DATA E(2097),E(2098),E(2099),E(2100)/'LE C','UTTE','R TY','PE).'/
      DATA E(2101),E(2102),E(2103),E(2104)/'    ','PART',' OR ','DRIV'/
      DATA E(2105),E(2106),E(2107),E(2108)/'E GE','OMET','RY C','OULD'/
      DATA E(2109),E(2110),E(2111),E(2112)/' NOT',' BE ','FETC','HED '/
      DATA E(2113),E(2114),E(2115),E(2116)/'BECA','USE ','OF  ','DEFI'/
      DATA E(2117),E(2118),E(2119),E(2120)/'NITI','ON E','RROR',' OR '/
      DATA E(2121),E(2122),E(2123),E(2124)/'SPAC','E LI','MITA','TION'/
      DATA E(2125),E(2126),E(2127),E(2128)/'.   ','LARG','E DA','TA C'/
      DATA E(2129),E(2130),E(2131),E(2132)/'OULD',' NOT',' BE ','STOR'/
      DATA E(2133),E(2134),E(2135),E(2136)/'ED I','NTER','NALY','.   '/
      DATA E(2137),E(2138),E(2139),E(2140)/'WRON','G SE','COND',' PAR'/
      DATA E(2141),E(2142),E(2143),E(2144)/'AMET','ER I','N SM','ESH '/
      DATA E(2145),E(2146),E(2147),E(2148)/'DEFI','NITI','ON. ','THE '/
      DATA E(2149),E(2150),E(2151),E(2152)/'REQU','ESTE','D SY','NTHE'/
      DATA E(2153),E(2154),E(2155),E(2156)/'TIC ','CURV','E WA','S NO'/
      DATA E(2157),E(2158),E(2159),E(2160)/'T AV','AILA','BLE.','    '/
      DATA E(2161),E(2162),E(2163),E(2164)/'THE ','WORD',' ''AX','IS'' '
     +/
      DATA E(2165),E(2166),E(2167),E(2168)/'WAS ','NOT ','IN P','ROPE'/
      DATA E(2169),E(2170),E(2171),E(2172)/'R PO','SITI','ON I','N TH'/
      DATA E(2173),E(2174),E(2175),E(2176)/'E  I','NPUT',' STR','EAM.'/
      DATA E(2177),E(2178),E(2179),E(2180)/'    ','A VA','LID ','AXIS'/
      DATA E(2181),E(2182),E(2183),E(2184)/' WAS',' NOT',' DEF','INED'/
      DATA E(2185),E(2186),E(2187),E(2188)/'.   ','THE ','WORD','S ''C'/
      DATA E(2189),E(2190),E(2191),E(2192)/'CLW''',' OR ','''CLW',
     +''' WE'/
      DATA E(2193),E(2194),E(2195),E(2196)/'RE N','OT I','N PR','OPER'/
      DATA E(2197),E(2198),E(2199),E(2200)/' POS','ITIO','N IN',' THE'/
      DATA E(2201),E(2202),E(2203),E(2204)/'  IN','PUT ','STRE','AM. '/
      DATA E(2205),E(2206),E(2207),E(2208)/'TWO ','ANGL','ES A','RE R'/
      DATA E(2209),E(2210),E(2211),E(2212)/'EQUI','RED ','FOR ','SURF'/
      DATA E(2213),E(2214),E(2215),E(2216)/'ACE ','OF R','EVOL','UTIO'/
      DATA E(2217),E(2218),E(2219),E(2220)/'N.  ','TWO ','POIN','TS O'/
      DATA E(2221),E(2222),E(2223),E(2224)/'R ON','E VE','CTOR',' ARE'/
      DATA E(2225),E(2226),E(2227),E(2228)/' REQ','UIRE','D TO',' SPE'/
      DATA E(2229),E(2230),E(2231),E(2232)/'CIFY','  AN',' AXI','S OF'/
      DATA E(2233),E(2234),E(2235),E(2236)/' A C','YLIN','DER.','    '/
      DATA E(2237),E(2238),E(2239),E(2240)/'THE ','FIRS','T SU','RFAC'/
      DATA E(2241),E(2242),E(2243),E(2244)/'E IS',' NOT',' DEF','INED'/
      DATA E(2245),E(2246),E(2247),E(2248)/'.   ','THE ','FIRS','T SU'/
      DATA E(2249),E(2250),E(2251),E(2252)/'RFAC','E IS',' NOT',' DEF'/
      DATA E(2253),E(2254),E(2255),E(2256)/'INED','.   ','THE ','COMB'/
      DATA E(2257),E(2258),E(2259),E(2260)/'INAT','ION ','OF S','URFA'/
      DATA E(2261),E(2262),E(2263),E(2264)/'CES ','IS T','OO L','ARGE'/
      DATA E(2265),E(2266),E(2267),E(2268)/'.   ','THER','E IS',' NOT'/
      DATA E(2269),E(2270),E(2271),E(2272)/' ENO','UGH ','SPAC','E IN'/
      DATA E(2273),E(2274),E(2275),E(2276)/' >SS','PAD<',' TO ','HOLD'/
      DATA E(2277),E(2278),E(2279),E(2280)/'  PA','TCH ','CORN','ER P'/
      DATA E(2281),E(2282),E(2283),E(2284)/'OINT','S.  ','ONE ','OR M'/
      DATA E(2285),E(2286),E(2287),E(2288)/'ORE ','PATC','HES ','ARE '/
      DATA E(2289),E(2290),E(2291),E(2292)/'DISC','ONNE','CTED',' FRO'/
      DATA E(2293),E(2294),E(2295),E(2296)/'M AL','L OT','HERS','.   '/
      DATA E(2297),E(2298),E(2299),E(2300)/'SEGM','ENT ','REFE','RENC'/
      DATA E(2301),E(2302),E(2303),E(2304)/'ED F','OR D','ISSE','CTIO'/
      DATA E(2305),E(2306),E(2307),E(2308)/'N ON',' FLO','W CU','RVE '/
      DATA E(2309),E(2310),E(2311),E(2312)/'IS O','UT O','F RA','NGE.'/
      DATA E(2313),E(2314),E(2315),E(2316)/'THER','E IS',' NOT',' ENO'/
      DATA E(2317),E(2318),E(2319),E(2320)/'UGH ','ROOM',' IN ','BUFF'/
      DATA E(2321),E(2322),E(2323),E(2324)/'ER F','OR D','ISSE','CTED'/
      DATA E(2325),E(2326),E(2327),E(2328)/' SEG','MENT','.   ','THER'/
      DATA E(2329),E(2330),E(2331),E(2332)/'E IS',' NOT',' ENO','UGH '/
      DATA E(2333),E(2334),E(2335),E(2336)/'ROOM',' IN ','BUFF','ER T'/
      DATA E(2337),E(2338),E(2339),E(2340)/'O DI','SSEC','T ON','E AR'/
      DATA E(2341),E(2342),E(2343),E(2344)/'C.  ','AN A','RC R','EFER'/
      DATA E(2345),E(2346),E(2347),E(2348)/'ENCE','D FO','R DI','SSEC'/
      DATA E(2349),E(2350),E(2351),E(2352)/'TION',' IS ','OUT ','OF R'/
      DATA E(2353),E(2354),E(2355),E(2356)/'ANGE',' FOR',' THI','S CU'/
      DATA E(2357),E(2358),E(2359),E(2360)/'RVE.','THE ','WORD',' ''CR'/
      DATA E(2361),E(2362),E(2363),E(2364)/'OSS''',' WAS',' ENC','OUNT'/
      DATA E(2365),E(2366),E(2367),E(2368)/'ERED',' TWI','CE I','N A '/
      DATA E(2369),E(2370),E(2371),E(2372)/'DEFI','NITI','ON. ','LESS'/
      DATA E(2373),E(2374),E(2375),E(2376)/' THA','N TW','O SP','LINE'/
      DATA E(2377),E(2378),E(2379),E(2380)/'S WE','RE I','NPUT',' BEF'/
      DATA E(2381),E(2382),E(2383),E(2384)/'ORE ','''CRO','SS''.','    '
     +/
      DATA E(2385),E(2386),E(2387),E(2388)/'AN I','NPUT',' CUR','VE W'/
      DATA E(2389),E(2390),E(2391),E(2392)/'AS N','OT P','ROPE','RLY '/
      DATA E(2393),E(2394),E(2395),E(2396)/'DEFI','NED.','    ','THE '/
      DATA E(2397),E(2398),E(2399),E(2400)/'FIRS','T IN','PUT ','CURV'/
      DATA E(2401),E(2402),E(2403),E(2404)/'E CO','ULD ','NOT ','BE F'/
      DATA E(2405),E(2406),E(2407),E(2408)/'ETCH','ED. ','THE ','FIRS'/
      DATA E(2409),E(2410),E(2411),E(2412)/'T IN','PUT ','CURV','E WA'/
      DATA E(2413),E(2414),E(2415),E(2416)/'S NO','T A ','FLOW',' CUR'/
      DATA E(2417),E(2418),E(2419),E(2420)/'VE. ','TOO ','MANY',' CUR'/
      DATA E(2421),E(2422),E(2423),E(2424)/'VES ','HAVE',' BEE','N IN'/
      DATA E(2425),E(2426),E(2427),E(2428)/'PUT ','FOR ','THE ','CURV'/
      DATA E(2429),E(2430),E(2431),E(2432)/'E. D','IREC','TORY','  TA'/
      DATA E(2433),E(2434),E(2435),E(2436)/'BLE ','SIZE','.   ','THER'/
      DATA E(2437),E(2438),E(2439),E(2440)/'E IS',' NOT',' ENO','UGH '/
      DATA E(2441),E(2442),E(2443),E(2444)/'BUFF','ER S','PACE',' TO '/
      DATA E(2445),E(2446),E(2447),E(2448)/'LOAD',' THI','S CU','RVE.'/
      DATA E(2449),E(2450),E(2451),E(2452)/'    ','AN I','NPUT',' SPL'/
      DATA E(2453),E(2454),E(2455),E(2456)/'INE ','CURV','E CO','ULD '/
      DATA E(2457),E(2458),E(2459),E(2460)/'NOT ','BE F','ETCH','ED. '/
      DATA E(2461),E(2462),E(2463),E(2464)/'THE ','NUMB','ER O','F FL'/
      DATA E(2465),E(2466),E(2467),E(2468)/'OW S','EGME','NTS ','DIFF'/
      DATA E(2469),E(2470),E(2471),E(2472)/'ERED',' BET','WEEN',' TWO'/
      DATA E(2473),E(2474),E(2475),E(2476)/' SPL','INE ','CURV','ES. '/
      DATA E(2477),E(2478),E(2479),E(2480)/'THER','E IS',' NOT',' ENO'/
      DATA E(2481),E(2482),E(2483),E(2484)/'UGH ','ROOM',' IN ','THE '/
      DATA E(2485),E(2486),E(2487),E(2488)/'DIRE','CTOR','Y TA','BLE '/
      DATA E(2489),E(2490),E(2491),E(2492)/'FOR ','CROS','S  C','URVE'/
      DATA E(2493),E(2494),E(2495),E(2496)/'S.  ','THER','E IS',' NOT'/
      DATA E(2497),E(2498),E(2499),E(2500)/' ENO','UGH ','BUFF','ER S'/
      DATA E(2501),E(2502),E(2503),E(2504)/'PACE',' TO ','HOLD',' A C'/
      DATA E(2505),E(2506),E(2507),E(2508)/'ROSS',' CUR','VE. ','AN I'/
      DATA E(2509),E(2510),E(2511),E(2512)/'NPUT',' CRO','SS C','URVE'/
      DATA E(2513),E(2514),E(2515),E(2516)/' COU','LD N','OT B','E FE'/
      DATA E(2517),E(2518),E(2519),E(2520)/'TCHE','D.  ','THE ','NUMB'/
      DATA E(2521),E(2522),E(2523),E(2524)/'ER O','F FL','OW S','EGME'/
      DATA E(2525),E(2526),E(2527),E(2528)/'NTS ','IN A',' CRO','SS C'/
      DATA E(2529),E(2530),E(2531),E(2532)/'URVE',' DID',' NOT',' MAT'/
      DATA E(2533),E(2534),E(2535),E(2536)/'CH T','HE  ','NUMB','ER O'/
      DATA E(2537),E(2538),E(2539),E(2540)/'F SP','LINE','S LE','SS O'/
      DATA E(2541),E(2542),E(2543),E(2544)/'NE. ','THER','E IS',' NO '/
      DATA E(2545),E(2546),E(2547),E(2548)/'MATC','H AT',' A S','EGME'/
      DATA E(2549),E(2550),E(2551),E(2552)/'NT J','UNCT','ION ','POIN'/
      DATA E(2553),E(2554),E(2555),E(2556)/'T BE','TWEE','N A ','SPLI'/
      DATA E(2557),E(2558),E(2559),E(2560)/'NE  ','AND ','CROS','S SP'/
      DATA E(2561),E(2562),E(2563),E(2564)/'LINE',' CUR','VE. ','TWO '/
      DATA E(2565),E(2566),E(2567),E(2568)/'CROS','S CU','RVES',' PAS'/
      DATA E(2569),E(2570),E(2571),E(2572)/'S TH','ROUG','H TH','E SA'/
      DATA E(2573),E(2574),E(2575),E(2576)/'ME S','PLIN','E JU','NCTI'/
      DATA E(2577),E(2578),E(2579),E(2580)/'ON P','OINT','S.  ','THER'/
      DATA E(2581),E(2582),E(2583),E(2584)/'E IS',' NOT',' ENO','UGH '/
      DATA E(2585),E(2586),E(2587),E(2588)/'BUFF','ER S','PACE',' TO '/
      DATA E(2589),E(2590),E(2591),E(2592)/'FIT ','A CR','OSS ','CURV'/
      DATA E(2593),E(2594),E(2595),E(2596)/'E TH','ROUG','H  S','PLIN'/
      DATA E(2597),E(2598),E(2599),E(2600)/'E JU','NCTI','ON P','OINT'/
      DATA E(2601),E(2602),E(2603),E(2604)/'S.  ','AN E','RROR',' WAS'/
      DATA E(2605),E(2606),E(2607),E(2608)/' ENC','OUNT','ERED',' IN '/
      DATA E(2609),E(2610),E(2611),E(2612)/'TRYI','NG T','O CR','OSS '/
      DATA E(2613),E(2614),E(2615),E(2616)/'FIT ','A CR','OSS ','CURV'/
      DATA E(2617),E(2618),E(2619),E(2620)/'E.  ','THER','E IS',' NOT'/
      DATA E(2621),E(2622),E(2623),E(2624)/' ENO','UGH ','BUFF','ER S'/
      DATA E(2625),E(2626),E(2627),E(2628)/'PACE',' FOR',' A F','LOW '/
      DATA E(2629),E(2630),E(2631),E(2632)/'STRU','CTUR','E ON',' A  '/
      DATA E(2633),E(2634),E(2635),E(2636)/'CROS','S CU','RVE.','    '/
      DATA E(2637),E(2638),E(2639),E(2640)/'THER','E IS',' NOT',' ENO'/
      DATA E(2641),E(2642),E(2643),E(2644)/'UGH ','BUFF','ER S','PACE'/
      DATA E(2645),E(2646),E(2647),E(2648)/' TO ','DETE','RMIN','E CR'/
      DATA E(2649),E(2650),E(2651),E(2652)/'OSS ','VECT','ORS ','BY  '/
      DATA E(2653),E(2654),E(2655),E(2656)/'SPLI','NING','.   ','CROS'/
      DATA E(2657),E(2658),E(2659),E(2660)/'S FI','TTIN','G FA','ILED'/
      DATA E(2661),E(2662),E(2663),E(2664)/' AT ','A SE','GMEN','T IN'/
      DATA E(2665),E(2666),E(2667),E(2668)/'TERI','OR P','OINT','.   '/
      DATA E(2669),E(2670),E(2671),E(2672)/'ERRO','R DU','RING',' REA'/
      DATA E(2673),E(2674),E(2675),E(2676)/'D OF',' A L','ARGE',' DAT'/
      DATA E(2677),E(2678),E(2679),E(2680)/'A AR','RAY ','>LDA','< FR'/
      DATA E(2681),E(2682),E(2683),E(2684)/'OM F','ILE ','9.  ','NOT '/
      DATA E(2685),E(2686),E(2687),E(2688)/'ENOU','GH R','OOM ','IN >'/
      DATA E(2689),E(2690),E(2691),E(2692)/'LDA<','.   ','NOT ','ENOU'/
      DATA E(2693),E(2694),E(2695),E(2696)/'GH R','OOM ','ON F','ILE '/
      DATA E(2697),E(2698),E(2699),E(2700)/'9. (','EXTE','RNAL',' >LD'/
      DATA E(2701),E(2702),E(2703),E(2704)/'A<).','    ','THE ','FIRS'/
      DATA E(2705),E(2706),E(2707),E(2708)/'T WO','RD I','N TH','E SC'/
      DATA E(2709),E(2710),E(2711),E(2712)/'URV ','DEFI','NITI','ON D'/
      DATA E(2713),E(2714),E(2715),E(2716)/'ID N','OT C','ORRE','SPON'/
      DATA E(2717),E(2718),E(2719),E(2720)/'D TO','  ON','E OF',' THE'/
      DATA E(2721),E(2722),E(2723),E(2724)/'SE P','ROGR','AMME','D.  '/
      DATA E(2725),E(2726),E(2727),E(2728)/'AN A','RGUM','ENT ','IN A'/
      DATA E(2729),E(2730),E(2731),E(2732)/' PRI','MARY',' CUR','VE D'/
      DATA E(2733),E(2734),E(2735),E(2736)/'EFIN','ITIO','N WA','S NO'/
      DATA E(2737),E(2738),E(2739),E(2740)/'T A ',' REC','OGNI','ZED '/
      DATA E(2741),E(2742),E(2743),E(2744)/'ONE.','    ','THE ','MAXI'/
      DATA E(2745),E(2746),E(2747),E(2748)/'MUM ','NUMB','ER O','F PO'/
      DATA E(2749),E(2750),E(2751),E(2752)/'INTS',' IN ','A PR','IMAR'/
      DATA E(2753),E(2754),E(2755),E(2756)/'Y CU','RVE ','DEFI','NITI'/
      DATA E(2757),E(2758),E(2759),E(2760)/'ON  ','HAS ','BEEN',' EXC'/
      DATA E(2761),E(2762),E(2763),E(2764)/'EEDE','D.  ','A VE','CTOR'/
      DATA E(2765),E(2766),E(2767),E(2768)/' CON','STRA','INT ','HAS '/
      DATA E(2769),E(2770),E(2771),E(2772)/'BEEN',' INP','UT P','RIOR'/
      DATA E(2773),E(2774),E(2775),E(2776)/' TO ','THE ','FIRS','T PO'/
      DATA E(2777),E(2778),E(2779),E(2780)/'INT.','    ','A VE','CTOR'/
      DATA E(2781),E(2782),E(2783),E(2784)/' ARG','UMEN','T DI','D NO'/
      DATA E(2785),E(2786),E(2787),E(2788)/'T FO','LLOW',' A M','INOR'/
      DATA E(2789),E(2790),E(2791),E(2792)/' WOR','D WH','ICH ','REQU'/
      DATA E(2793),E(2794),E(2795),E(2796)/'IRED','  A ','VECT','OR C'/
      DATA E(2797),E(2798),E(2799),E(2800)/'ONST','RAIN','T.  ','A ''R'/
      DATA E(2801),E(2802),E(2803),E(2804)/'EAL''',' ARG','UMEN','T DI'/
      DATA E(2805),E(2806),E(2807),E(2808)/'D NO','T FO','LLOW',' A '''/
      DATA E(2809),E(2810),E(2811),E(2812)/'WEIG','HT'' ','SPEC','IFIC'/
      DATA E(2813),E(2814),E(2815),E(2816)/'ATIO','N.  ','A ''R','EAL'''
     +/
      DATA E(2817),E(2818),E(2819),E(2820)/' ARG','UMEN','T DI','D NO'/
      DATA E(2821),E(2822),E(2823),E(2824)/'T FO','LLOW',' A ''','LIMI'/
      DATA E(2825),E(2826),E(2827),E(2828)/'T'' S','PECI','FICA','TION'/
      DATA E(2829),E(2830),E(2831),E(2832)/' OR ','AN  ','INPU','T CU'/
      DATA E(2833),E(2834),E(2835),E(2836)/'RVE ','TO T','HE ''','COMB'/
      DATA E(2837),E(2838),E(2839),E(2840)/'IN'' ','STAT','EMEN','T HA'/
      DATA E(2841),E(2842),E(2843),E(2844)/'S NO','T BE','EN  ','SUCC'/
      DATA E(2845),E(2846),E(2847),E(2848)/'ESSF','ULLY',' DEF','INED'/
      DATA E(2849),E(2850),E(2851),E(2852)/'.   ','THE ','JUNC','TION'/
      DATA E(2853),E(2854),E(2855),E(2856)/' POI','NTS ','OF T','WO C'/
      DATA E(2857),E(2858),E(2859),E(2860)/'ONSE','CUTI','VE C','URVE'/
      DATA E(2861),E(2862),E(2863),E(2864)/'S IN',' ''CO','MBIN','''  D'
     +/
      DATA E(2865),E(2866),E(2867),E(2868)/'EFIN','ITIO','N DI','D NO'/
      DATA E(2869),E(2870),E(2871),E(2872)/'T MA','TCH.','    ','THE '/
      DATA E(2873),E(2874),E(2875),E(2876)/'TANG','ENT ','VECT','ORS '/
      DATA E(2877),E(2878),E(2879),E(2880)/'AT T','HE J','UNCT','ION '/
      DATA E(2881),E(2882),E(2883),E(2884)/'OF C','ONSE','CUTI','VE C'/
      DATA E(2885),E(2886),E(2887),E(2888)/'URVE','S IN',' A  ','''COM'/
      DATA E(2889),E(2890),E(2891),E(2892)/'BIN''',' DEF','INIT','ION '/
      DATA E(2893),E(2894),E(2895),E(2896)/'HAD ','DIFF','EREN','T DI'/
      DATA E(2897),E(2898),E(2899),E(2900)/'RECT','IONS','.   ','CURV'/
      DATA E(2901),E(2902),E(2903),E(2904)/'ES W','ITH ','FLOW',' STR'/
      DATA E(2905),E(2906),E(2907),E(2908)/'UCTU','RE C','ANNO','T BE'/
      DATA E(2909),E(2910),E(2911),E(2912)/' COM','BINE','D YE','T. E'/
      DATA E(2913),E(2914),E(2915),E(2916)/'RROR','S  I','MPOS','ING '/
      DATA E(2917),E(2918),E(2919),E(2920)/'FLOW',' RAT','ES A','CROS'/
      DATA E(2921),E(2922),E(2923),E(2924)/'S SY','NTHE','TIC ','CURV'/
      DATA E(2925),E(2926),E(2927),E(2928)/'ES. ','SEGM','ENT ','NUMB'/
      DATA E(2929),E(2930),E(2931),E(2932)/'ER O','F TH','E ''S','CURV'/
      DATA E(2933),E(2934),E(2935),E(2936)/''' IS',' NOT',' COR','RECT'/
      DATA E(2937),E(2938),E(2939),E(2940)/'.   ','PATC','H NU','MBER'/
      DATA E(2941),E(2942),E(2943),E(2944)/' OF ','THE ','''SSU','RF'' '
     +/
      DATA E(2945),E(2946),E(2947),E(2948)/'IS N','OT C','ORRE','CT. '/
      DATA E(2949),E(2950),E(2951),E(2952)/'PARA','METE','R SP','ECIF'/
      DATA E(2953),E(2954),E(2955),E(2956)/'ICAT','ION ','IS N','OT C'/
      DATA E(2957),E(2958),E(2959),E(2960)/'ORRE','CT. ','THE ','LENG'/
      DATA E(2961),E(2962),E(2963),E(2964)/'HT O','F A ','VECT','OR I'/
      DATA E(2965),E(2966),E(2967),E(2968)/'S TO','O SM','ALL ','TO N'/
      DATA E(2969),E(2970),E(2971),E(2972)/'ORMA','LIZE','.   ','THE '/
      DATA E(2973),E(2974),E(2975),E(2976)/'INTE','RSEC','TION',' POI'/
      DATA E(2977),E(2978),E(2979),E(2980)/'NT C','ANNO','T BE',' DEF'/
      DATA E(2981),E(2982),E(2983),E(2984)/'INED','.   ','INPU','T CA'/
      DATA E(2985),E(2986),E(2987),E(2988)/'NON ','FORM',' NOT',' PRE'/
      DATA E(2989),E(2990),E(2991),E(2992)/'VIOU','SLY ','DEFI','NED.'/
      DATA E(2993),E(2994),E(2995),E(2996)/'    ','DEFI','NITI','ON E'/
      DATA E(2997),E(2998),E(2999),E(3000)/'RROR','.   ','SPEC','IFIE'/
      DATA E(3001),E(3002),E(3003),E(3004)/'D VE','CTOR',' OR ','POIN'/
      DATA E(3005),E(3006),E(3007),E(3008)/'T DO','SE N','OT E','XIST'/
      DATA E(3009),E(3010),E(3011),E(3012)/'SURF','ACE ','NORM','AL N'/
      DATA E(3013),E(3014),E(3015),E(3016)/'OT P','ROPE','RLY ','DEFI'/
      DATA E(3017),E(3018),E(3019),E(3020)/'NED ','.   ','MAXI','MUM '/
      DATA E(3021),E(3022),E(3023),E(3024)/'BUFF','ER S','PACE',' FOR'/
      DATA E(3025),E(3026),E(3027),E(3028)/' A ''','MESH',''' DE','FINI'
     +/
      DATA E(3029),E(3030),E(3031),E(3032)/'TION',' EXC','EEDE','D.  '/
      DATA E(3033),E(3034),E(3035),E(3036)/'TOO ','MANY',' POI','NTS '/
      DATA E(3037),E(3038),E(3039),E(3040)/'IN O','NE S','PLIN','E OR'/
      DATA E(3041),E(3042),E(3043),E(3044)/' CRO','SS S','PLIN','E FO'/
      DATA E(3045),E(3046),E(3047),E(3048)/'R CU','RREN','T CU','RVE '/
      DATA E(3049),E(3050),E(3051),E(3052)/' FIT','TING',' ALG','ORIT'/
      DATA E(3053),E(3054),E(3055),E(3056)/'HM. ','A PO','INT ','WAS '/
      DATA E(3057),E(3058),E(3059),E(3060)/'MISS','ING.','    ','TOO '/
      DATA E(3061),E(3062),E(3063),E(3064)/'MANY',' POI','NTS ','FOR '/
      DATA E(3065),E(3066),E(3067),E(3068)/'SPAC','E AV','AILA','BLE '/
      DATA E(3069),E(3070),E(3071),E(3072)/'IN S','SPAD','.   ','THE '/
      DATA E(3073),E(3074),E(3075),E(3076)/'NEXT',' ENT','RY S','HOUL'/
      DATA E(3077),E(3078),E(3079),E(3080)/'D BE',' ''NO','RMAL',''', B'
     +/
      DATA E(3081),E(3082),E(3083),E(3084)/'UT I','T WA','S NO','T RE'/
      DATA E(3085),E(3086),E(3087),E(3088)/'COGN','IZAB','LE. ','THE '/
      DATA E(3089),E(3090),E(3091),E(3092)/'NEXT',' ENT','RY S','HOUL'/
      DATA E(3093),E(3094),E(3095),E(3096)/'D BE',' A V','ECTO','R.  '/
      DATA E(3097),E(3098),E(3099),E(3100)/'THE ','NEXT',' ENT','RY S'/
      DATA E(3101),E(3102),E(3103),E(3104)/'HOUL','D BE',' ''TA','NSPL'/
      DATA E(3105),E(3106),E(3107),E(3108)/''', B','UT I','T WA','S NO'/
      DATA E(3109),E(3110),E(3111),E(3112)/'T RE','COGN','IZAB','LE. '/
      DATA E(3113),E(3114),E(3115),E(3116)/'THE ','NEXT',' ENT','RY S'/
      DATA E(3117),E(3118),E(3119),E(3120)/'HOUL','D BE',' ''CR','SSPL'/
      DATA E(3121),E(3122),E(3123),E(3124)/''', B','UT I','T WA','S NO'/
      DATA E(3125),E(3126),E(3127),E(3128)/'T RE','COGN','IZAB','LE. '/
      DATA E(3129),E(3130),E(3131),E(3132)/'THE ','NEXT',' ENT','RY S'/
      DATA E(3133),E(3134),E(3135),E(3136)/'HOUL','D BE',' ''WE','IGHT'/
      DATA E(3137),E(3138),E(3139),E(3140)/''', B','UT I','T WA','S NO'/
      DATA E(3141),E(3142),E(3143),E(3144)/'T RE','COGN','IZAB','LE. '/
      DATA E(3145),E(3146),E(3147),E(3148)/'THE ','NEXT',' ENT','RY S'/
      DATA E(3149),E(3150),E(3151),E(3152)/'HOUL','D BE',' A S','CALA'/
      DATA E(3153),E(3154),E(3155),E(3156)/'R.  ','THE ','NEXT',' ENT'/
      DATA E(3157),E(3158),E(3159),E(3160)/'RY S','HOUL','D BE',' ''LI'/
      DATA E(3161),E(3162),E(3163),E(3164)/'MIT''',', BU','T IT',' WAS'/
      DATA E(3165),E(3166),E(3167),E(3168)/' NOT',' REC','OGNI','ZABL'/
      DATA E(3169),E(3170),E(3171),E(3172)/'E.  ','UNRE','COGN','IZED'/
      DATA E(3173),E(3174),E(3175),E(3176)/' DAT','A WA','S EN','COUN'/
      DATA E(3177),E(3178),E(3179),E(3180)/'TERE','D IN',' THE',' MES'/
      DATA E(3181),E(3182),E(3183),E(3184)/'H IN','PUT ','STRE','AM  '/
      DATA E(3185),E(3186),E(3187),E(3188)/'OR E','LSE ','THE ','NUMB'/
      DATA E(3189),E(3190),E(3191),E(3192)/'ER O','F IN','PUT ','POIN'/
      DATA E(3193),E(3194),E(3195),E(3196)/'TS W','AS I','NCOR','RECT'/
      DATA E(3197),E(3198),E(3199),E(3200)/'.   ','SMES','H IN','PUT '/
      DATA E(3201),E(3202),E(3203),E(3204)/'POIN','TS A','RE N','OT L'/
      DATA E(3205),E(3206),E(3207),E(3208)/'INEA','R.  ','TYPE',' DEF'/
      DATA E(3209),E(3210),E(3211),E(3212)/'INIT','ION ','IS M','ISSI'/
      DATA E(3213),E(3214),E(3215),E(3216)/'NG I','N ''M','ESH''',' INP'
     +/
      DATA E(3217),E(3218),E(3219),E(3220)/'UT. ','NUMB','ER O','F SP'/
      DATA E(3221),E(3222),E(3223),E(3224)/'LINE','S MU','ST B','E AT'/
      DATA E(3225),E(3226),E(3227),E(3228)/' LEA','ST T','WO. ','THE '/
      DATA E(3229),E(3230),E(3231),E(3232)/'SURF','ACE ','SIZE',' EXC'/
      DATA E(3233),E(3234),E(3235),E(3236)/'EEDE','D A ','PROG','RAMM'/
      DATA E(3237),E(3238),E(3239),E(3240)/'ED M','AXIM','UM I','N ''R'/
      DATA E(3241),E(3242),E(3243),E(3244)/'EVOL','V''  ','THE ','AXIS'/
      DATA E(3245),E(3246),E(3247),E(3248)/' VEC','TOR ','OF T','HE C'/
      DATA E(3249),E(3250),E(3251),E(3252)/'YLIN','DER ','WAS ','NOT '/
      DATA E(3253),E(3254),E(3255),E(3256)/'SPEC','IFIE','D CO','RREC'/
      DATA E(3257),E(3258),E(3259),E(3260)/'TLY.','    ','ALL ','POIN'/
      DATA E(3261),E(3262),E(3263),E(3264)/'TS O','F TH','E CU','RVE '/
      DATA E(3265),E(3266),E(3267),E(3268)/'LIE ','ON T','HE A','XIS '/
      DATA E(3269),E(3270),E(3271),E(3272)/'OF R','EVOL','UTIO','N.  '/
      DATA E(3273),E(3274),E(3275),E(3276)/'CROS','S SE','CTIO','N CU'/
      DATA E(3277),E(3278),E(3279),E(3280)/'RVE ','DEFI','NITI','ON F'/
      DATA E(3281),E(3282),E(3283),E(3284)/'AILS','.   ','NOT ','ENOU'/
      DATA E(3285),E(3286),E(3287),E(3288)/'GH S','PACE',' TO ','FETC'/
      DATA E(3289),E(3290),E(3291),E(3292)/'H CU','RVE.','    ','CURV'/
      DATA E(3293),E(3294),E(3295),E(3296)/'E CO','ULD ','NOT ','BE F'/
      DATA E(3297),E(3298),E(3299),E(3300)/'ETCH','ED. ','NOT ','ENOU'/
      DATA E(3301),E(3302),E(3303),E(3304)/'GH S','PACE',' TO ','FETC'/
      DATA E(3305),E(3306),E(3307),E(3308)/'H CR','OSS ','CURV','E.  '/
      DATA E(3309),E(3310),E(3311),E(3312)/'CURV','E NO','T DE','FINE'/
      DATA E(3313),E(3314),E(3315),E(3316)/'D.  ','CROS','S CU','RVE '/
      DATA E(3317),E(3318),E(3319),E(3320)/'COUL','D NO','T BE',' FET'/
      DATA E(3321),E(3322),E(3323),E(3324)/'CHED','.   ','CHEC','K FO'/
      DATA E(3325),E(3326),E(3327),E(3328)/'R EN','OUGH',' ROO','M FO'/
      DATA E(3329),E(3330),E(3331),E(3332)/'R SU','RFAC','E IN',' ''SU'/
      DATA E(3333),E(3334),E(3335),E(3336)/'RF''.','    ','SYST','EM E'/
      DATA E(3337),E(3338),E(3339),E(3340)/'RROR','. AR','RAY ','>IB<'/
      DATA E(3341),E(3342),E(3343),E(3344)/' DIM','ENSI','ON M','UST '/
      DATA E(3345),E(3346),E(3347),E(3348)/'BE I','NCRE','ASED','.   '/
      DATA E(3349),E(3350),E(3351),E(3352)/'INVA','LID ','INDE','X, S'/
      DATA E(3353),E(3354),E(3355),E(3356)/'YSTE','M ER','ROR.','    '/
      DATA E(3357),E(3358),E(3359),E(3360)/'SPLI','NE C','URVE',' COU'/
      DATA E(3361),E(3362),E(3363),E(3364)/'LD N','OT B','E GE','NERA'/
      DATA E(3365),E(3366),E(3367),E(3368)/'TED.','    ','CROS','S SP'/
      DATA E(3369),E(3370),E(3371),E(3372)/'LINE',' CUR','VE C','OULD'/
      DATA E(3373),E(3374),E(3375),E(3376)/' NOT',' BE ','GENE','RATE'/
      DATA E(3377),E(3378),E(3379),E(3380)/'D.  ','PROB','LEMS',' WIT'/
      DATA E(3381),E(3382),E(3383),E(3384)/'H IN','NER ','POIN','TS. '/
      DATA E(3385),E(3386),E(3387),E(3388)/'TWIS','T VE','CTOR','S CA'/
      DATA E(3389),E(3390),E(3391),E(3392)/'NNOT',' BE ','COMP','UTED'/
      DATA E(3393),E(3394),E(3395),E(3396)/'.   ','COUL','D NO','T FI'/
      DATA E(3397),E(3398),E(3399),E(3400)/'ND T','HE M','INIM','UM D'/
      DATA E(3401),E(3402),E(3403),E(3404)/'ISTA','NCE ','BETW','EEN '/
      DATA E(3405),E(3406),E(3407),E(3408)/'CUTT','ER A','ND A',' SCU'/
      DATA E(3409),E(3410),E(3411),E(3412)/'LPTU','RED ','SURF','ACE.'/
      DATA E(3413),E(3414),E(3415),E(3416)/'    ','SS R','OUTI','NE C'/
      DATA E(3417),E(3418),E(3419),E(3420)/'ALLE','D EX','CESS','IVE '/
      DATA E(3421),E(3422),E(3423),E(3424)/'NUMB','ER O','F TI','MES '/
      DATA E(3425),E(3426),E(3427),E(3428)/'WITH','OUT ','A SU','CCES'/
      DATA E(3429),E(3430),E(3431),E(3432)/'SFUL',' TOO','L PO','SITI'/
      DATA E(3433),E(3434),E(3435),E(3436)/'ON B','EING',' FOU','ND. '/
      DATA E(3437),E(3438),E(3439),E(3440)/'COUL','D NO','T FI','T PE'/
      DATA E(3441),E(3442),E(3443),E(3444)/'RCEN','T OF',' ARC',' FLO'/
      DATA E(3445),E(3446),E(3447),E(3448)/'W AC','ROSS',' A C','URVE'/
      DATA E(3449),E(3450),E(3451),E(3452)/' AT ','SOME',' POI','NTS.'/
      DATA E(3453),E(3454),E(3455),E(3456)/' CHE','CK C','URVE',' FOR'/
      DATA E(3457),E(3458),E(3459),E(3460)/' UNU','SUAL',' SHA','PE O'/
      DATA E(3461),E(3462),E(3463),E(3464)/'R FL','OW R','ATE ','AT S'/
      DATA E(3465),E(3466),E(3467),E(3468)/'OME ','POIN','T.  ','LENG'/
      DATA E(3469),E(3470),E(3471),E(3472)/'TH O','F NO','RMAL',' VEC'/
      DATA E(3473),E(3474),E(3475),E(3476)/'TOR ','WHIC','H CO','NTRO'/
      DATA E(3477),E(3478),E(3479),E(3480)/'LS D','IREC','TION',' OF '/
      DATA E(3481),E(3482),E(3483),E(3484)/'CHOR','DAL ',' PRO','JECT'/
      DATA E(3485),E(3486),E(3487),E(3488)/'ION ','IS T','OO S','MALL'/
      DATA E(3489),E(3490),E(3491),E(3492)/'. VE','CTOR',' IS ','ZERO'/
      DATA E(3493),E(3494),E(3495),E(3496)/'.   ','ANGL','E BE','TWEE'/
      DATA E(3497),E(3498),E(3499),E(3500)/'N CH','ORD ','AND ','THE '/
      DATA E(3501),E(3502),E(3503),E(3504)/'DIRE','CTIO','N OF',' CHO'/
      DATA E(3505),E(3506),E(3507),E(3508)/'RDAL',' PRO','JECT','ION '/
      DATA E(3509),E(3510),E(3511),E(3512)/'IS  ','TOO ','CLOS','E TO'/
      DATA E(3513),E(3514),E(3515),E(3516)/' ZER','O. C','HORD','AL D'/
      DATA E(3517),E(3518),E(3519),E(3520)/'IREC','TION',' >D<',' AND'/
      DATA E(3521),E(3522),E(3523),E(3524)/' VEC','TOR ','>V< ','ARE '/
      DATA E(3525),E(3526),E(3527),E(3528)/' PER','PEND','ICUL','AR. '/
      DATA E(3529),E(3530),E(3531),E(3532)/'ANGL','E BE','TWEE','N SO'/
      DATA E(3533),E(3534),E(3535),E(3536)/'ME T','ANGE','NT V','ECTO'/
      DATA E(3537),E(3538),E(3539),E(3540)/'RS O','N TH','E CU','RVE '/
      DATA E(3541),E(3542),E(3543),E(3544)/'AND ','THE ',' PRO','JECT'/
      DATA E(3545),E(3546),E(3547),E(3548)/'ION ','CHOR','D IS',' TOO'/
      DATA E(3549),E(3550),E(3551),E(3552)/' CLO','SE T','O 90',' DEG'/
      DATA E(3553),E(3554),E(3555),E(3556)/'REES','. A ','PART','ICUL'/
      DATA E(3557),E(3558),E(3559),E(3560)/'AR  ','TANG','ENT ','VECT'/
      DATA E(3561),E(3562),E(3563),E(3564)/'OR O','N TH','E CU','RVE '/
      DATA E(3565),E(3566),E(3567),E(3568)/'AND ','VECT','OR >','V< A'/
      DATA E(3569),E(3570),E(3571),E(3572)/'RE P','ERPE','NDIC','ULAR'/
      DATA E(3573),E(3574),E(3575),E(3576)/'.   ','AT S','OME ','POIN'/
      DATA E(3577),E(3578),E(3579),E(3580)/'T TH','E CU','RVE ','HAS '/
      DATA E(3581),E(3582),E(3583),E(3584)/'REVE','RSED',' ITS',' DIR'/
      DATA E(3585),E(3586),E(3587),E(3588)/'ECTI','ON O','N TH','E CH'/
      DATA E(3589),E(3590),E(3591),E(3592)/'ORD ',' OF ','PROJ','ECTI'/
      DATA E(3593),E(3594),E(3595),E(3596)/'ON. ','A PA','RTIC','ULAR'/
      DATA E(3597),E(3598),E(3599),E(3600)/' TAN','GENT',' VEC','TOR '/
      DATA E(3601),E(3602),E(3603),E(3604)/'ON T','HE C','URVE',' AND'/
      DATA E(3605),E(3606),E(3607),E(3608)/'  VE','CTOR',' >V<',' ARE'/
      DATA E(3609),E(3610),E(3611),E(3612)/' MOV','ING ','IN O','PPOS'/
      DATA E(3613),E(3614),E(3615),E(3616)/'ITE ','DIRE','CTIO','NS. '/
      DATA E(3617),E(3618),E(3619),E(3620)/'COUL','D NO','T FI','T PR'/
      DATA E(3621),E(3622),E(3623),E(3624)/'OJEC','TION',' FLO','W ON'/
      DATA E(3625),E(3626),E(3627),E(3628)/' THE',' CHO','RD U','SING'/
      DATA E(3629),E(3630),E(3631),E(3632)/' AVA','ILAB','LE  ','SPAC'/
      DATA E(3633),E(3634),E(3635),E(3636)/'E. C','HECK',' CHO','RD T'/
      DATA E(3637),E(3638),E(3639),E(3640)/'O CU','RVE ','RELA','TION'/
      DATA E(3641),E(3642),E(3643),E(3644)/'SHIP',' OR ','ELSE',' INC'/
      DATA E(3645),E(3646),E(3647),E(3648)/'REAS','E  B','UFFE','R SP'/
      DATA E(3649),E(3650),E(3651),E(3652)/'ACE.',' THE',' AVA','ILAB'/
      DATA E(3653),E(3654),E(3655),E(3656)/'LE S','PACE',' FOR',' FLO'/
      DATA E(3657),E(3658),E(3659),E(3660)/'W SP','LINE',' >FL','< HA'/
      DATA E(3661),E(3662),E(3663),E(3664)/'S  B','EEN ','FILL','ED. '/
      DATA E(3665),E(3666),E(3667),E(3668)/'THE ','CHOR','DAL ','PROJ'/
      DATA E(3669),E(3670),E(3671),E(3672)/'ECTI','ON F','LOW ','RATE'/
      DATA E(3673),E(3674),E(3675),E(3676)/' COU','LD N','OT B','E FI'/
      DATA E(3677),E(3678),E(3679),E(3680)/'T AT',' SOM','E PO','INT '/
      DATA E(3681),E(3682),E(3683),E(3684)/'OF T','HE C','URVE','. CH'/
      DATA E(3685),E(3686),E(3687),E(3688)/'ECK ','CURV','E TO',' CHO'/
      DATA E(3689),E(3690),E(3691),E(3692)/'RD R','ELAT','IONS','HIP.'/
      DATA E(3693),E(3694),E(3695),E(3696)/' NOT','E: C','URVE',' SHO'/
      DATA E(3697),E(3698),E(3699),E(3700)/'ULD ','NEVE','R BE',' PER'/
      DATA E(3701),E(3702),E(3703),E(3704)/'PEND','ICUL','AR T','O CH'/
      DATA E(3705),E(3706),E(3707),E(3708)/'ORD.',' AN ','ARC ','HAS '/
      DATA E(3709),E(3710),E(3711),E(3712)/'BEEN','  SU','BDIV','IDED'/
      DATA E(3713),E(3714),E(3715),E(3716)/' 10 ','TIME','S AT',' THE'/
      DATA E(3717),E(3718),E(3719),E(3720)/' CUR','RENT',' POS','ITIO'/
      DATA E(3721),E(3722),E(3723),E(3724)/'N WI','THOU','T BE','ING '/
      DATA E(3725),E(3726),E(3727),E(3728)/'ABLE','  TO',' SUC','CESS'/
      DATA E(3729),E(3730),E(3731),E(3732)/'FULL','Y FI','T TH','E FL'/
      DATA E(3733),E(3734),E(3735),E(3736)/'OW O','F ''C','OONS',''' PA'
     +/
      DATA E(3737),E(3738),E(3739),E(3740)/'RAME','TER ','IN T','HE  '/
      DATA E(3741),E(3742),E(3743),E(3744)/'CHOR','DAL ','PARA','METE'/
      DATA E(3745),E(3746),E(3747),E(3748)/'R.  ','COUL','D NO','T FI'/
      DATA E(3749),E(3750),E(3751),E(3752)/'T AN','GULA','R FL','OW W'/
      DATA E(3753),E(3754),E(3755),E(3756)/'ITHI','N AV','AILA','BLE '/
      DATA E(3757),E(3758),E(3759),E(3760)/'SPAC','E. C','HECK',' CUR'/
      DATA E(3761),E(3762),E(3763),E(3764)/'VE  ','TO F','OCAL',' POI'/
      DATA E(3765),E(3766),E(3767),E(3768)/'NT R','ELAT','IONS','HIP '/
      DATA E(3769),E(3770),E(3771),E(3772)/'OR I','NCRE','ASE ','BUFF'/
      DATA E(3773),E(3774),E(3775),E(3776)/'ER S','PACE','. TH','E  A'/
      DATA E(3777),E(3778),E(3779),E(3780)/'VAIL','ABLE',' SPA','CE I'/
      DATA E(3781),E(3782),E(3783),E(3784)/'N >F','L< U','SED ','UP. '/
      DATA E(3785),E(3786),E(3787),E(3788)/'FAIL','ED T','O SU','CCES'/
      DATA E(3789),E(3790),E(3791),E(3792)/'SFUL','LY F','IT R','ATE '/
      DATA E(3793),E(3794),E(3795),E(3796)/'OF C','HANG','E OF',' ANG'/
      DATA E(3797),E(3798),E(3799),E(3800)/'LE A','ROUN','D SO','ME  '/
      DATA E(3801),E(3802),E(3803),E(3804)/'CURV','E PO','INT ','WITH'/
      DATA E(3805),E(3806),E(3807),E(3808)/' RES','PECT',' TO ','FOCA'/
      DATA E(3809),E(3810),E(3811),E(3812)/'L PO','INT.',' CHE','CK C'/
      DATA E(3813),E(3814),E(3815),E(3816)/'URVE',' TO ','FOCA','L  P'/
      DATA E(3817),E(3818),E(3819),E(3820)/'OINT',' REL','ATIO','NSHI'/
      DATA E(3821),E(3822),E(3823),E(3824)/'P. A','NGLE',' FLO','W CO'/
      DATA E(3825),E(3826),E(3827),E(3828)/'ULD ','NOT ','FIT ','IN V'/
      DATA E(3829),E(3830),E(3831),E(3832)/'ICIN','ITY ','OF A','  CU'/
      DATA E(3833),E(3834),E(3835),E(3836)/'RVE ','POIN','T AF','TER '/
      DATA E(3837),E(3838),E(3839),E(3840)/'10 I','TERA','TION','S.  '/
      DATA E(3841),E(3842),E(3843),E(3844)/'FOCA','L PO','INT ','OF A'/
      DATA E(3845),E(3846),E(3847),E(3848)/'NGUL','AR S','PAN ','AND '/
      DATA E(3849),E(3850),E(3851),E(3852)/'A CU','RVE ','POIN','T AR'/
      DATA E(3853),E(3854),E(3855),E(3856)/'E TO','O CL','OSE ',' TOG'/
      DATA E(3857),E(3858),E(3859),E(3860)/'ETHE','R FO','R DE','FINI'/
      DATA E(3861),E(3862),E(3863),E(3864)/'TE M','EASU','REME','NT O'/
      DATA E(3865),E(3866),E(3867),E(3868)/'F AN','GLE.',' RAT','E OF'/
      DATA E(3869),E(3870),E(3871),E(3872)/' CHA','NGE ',' BEC','OMES'/
      DATA E(3873),E(3874),E(3875),E(3876)/' ILL',' DEF','INED','.   '/
      DATA E(3877),E(3878),E(3879),E(3880)/'THE ','CURV','E IS',' TOO'/
      DATA E(3881),E(3882),E(3883),E(3884)/' CLO','SE T','O TH','E PO'/
      DATA E(3885),E(3886),E(3887),E(3888)/'INT ','TO M','EASU','RE T'/
      DATA E(3889),E(3890),E(3891),E(3892)/'HE A','NGLE','.   ','THE '/
      DATA E(3893),E(3894),E(3895),E(3896)/'CURV','E IS',' MOV','ING '/
      DATA E(3897),E(3898),E(3899),E(3900)/'IN A',' NEA','R RA','DIAL'/
      DATA E(3901),E(3902),E(3903),E(3904)/' DIR','ECTI','ON T','O TH'/
      DATA E(3905),E(3906),E(3907),E(3908)/'E FO','CAL ',' POI','NT. '/
      DATA E(3909),E(3910),E(3911),E(3912)/'PROP','ER M','EASU','REME'/
      DATA E(3913),E(3914),E(3915),E(3916)/'NT O','F AN','GULA','R RA'/
      DATA E(3917),E(3918),E(3919),E(3920)/'TE O','F CH','ANGE',' NOT'/
      DATA E(3921),E(3922),E(3923),E(3924)/'  PO','SSIB','LE. ','THE '/
      DATA E(3925),E(3926),E(3927),E(3928)/'CURV','E TA','NGEN','T NE'/
      DATA E(3929),E(3930),E(3931),E(3932)/'ARLY',' PAS','SES ','THRO'/
      DATA E(3933),E(3934),E(3935),E(3936)/'UGH ','THE ','POIN','T  M'/
      DATA E(3937),E(3938),E(3939),E(3940)/'AKIN','G TH','E DE','RIVA'/
      DATA E(3941),E(3942),E(3943),E(3944)/'TIVE','S TO','O LA','RGE.'/
      DATA E(3945),E(3946),E(3947),E(3948)/'    ','THE ','LAST',' JUN'/
      DATA E(3949),E(3950),E(3951),E(3952)/'CTIO','N PO','INT ','REFE'/
      DATA E(3953),E(3954),E(3955),E(3956)/'RENC','ED O','N A ','PREV'/
      DATA E(3957),E(3958),E(3959),E(3960)/'IOUS',' ''FL','OW'' ','DETA'
     +/
      DATA E(3961),E(3962),E(3963),E(3964)/'IL  ','COMM','AND ','DID '/
      DATA E(3965),E(3966),E(3967),E(3968)/'NOT ','EQUA','L TH','E FI'/
      DATA E(3969),E(3970),E(3971),E(3972)/'RST ','JUNC','TION',' POI'/
      DATA E(3973),E(3974),E(3975),E(3976)/'NT I','N TH','E DE','TAIL'/
      DATA E(3977),E(3978),E(3979),E(3980)/'  CO','MMAN','D.  ','AN A'/
      DATA E(3981),E(3982),E(3983),E(3984)/'RC J','UNCT','ION ','POIN'/
      DATA E(3985),E(3986),E(3987),E(3988)/'T RE','FERE','NCED',' IN '/
      DATA E(3989),E(3990),E(3991),E(3992)/'A ''F','LOW''',' DET','AIL '
     +/
      DATA E(3993),E(3994),E(3995),E(3996)/'COMM','AND ','WAS ',' NOT'/
      DATA E(3997),E(3998),E(3999),E(4000)/' WIT','HIN ','RANG','E FO'/
      DATA E(4001),E(4002),E(4003),E(4004)/'R TH','E CU','RVE.','    '/
      DATA E(4005),E(4006),E(4007),E(4008)/'THE ','FINA','L JU','NCTI'/
      DATA E(4009),E(4010),E(4011),E(4012)/'ON P','OINT',' REF','EREN'/
      DATA E(4013),E(4014),E(4015),E(4016)/'CED ','IN T','HE F','INAL'/
      DATA E(4017),E(4018),E(4019),E(4020)/' FLO','W DE','TAIL','  CO'/
      DATA E(4021),E(4022),E(4023),E(4024)/'MMAN','D WA','S NO','T TH'/
      DATA E(4025),E(4026),E(4027),E(4028)/'E LA','ST P','OINT',' OF '/
      DATA E(4029),E(4030),E(4031),E(4032)/'THE ','CURV','E.  ','THE '/
      DATA E(4033),E(4034),E(4035),E(4036)/'LAST',' JUN','CTIO','N PO'/
      DATA E(4037),E(4038),E(4039),E(4040)/'INT ','REFE','RENC','ED I'/
      DATA E(4041),E(4042),E(4043),E(4044)/'N A ','PREV','IOUS',' ''SE'/
      DATA E(4045),E(4046),E(4047),E(4048)/'GMEN','T''  ','DETA','IL C'/
      DATA E(4049),E(4050),E(4051),E(4052)/'OMMA','ND D','ID N','OT E'/
      DATA E(4053),E(4054),E(4055),E(4056)/'QUAL',' THE',' FIR','ST J'/
      DATA E(4057),E(4058),E(4059),E(4060)/'UNCT','ION ','POIN','T IN'/
      DATA E(4061),E(4062),E(4063),E(4064)/' THE','  PR','ESEN','T DE'/
      DATA E(4065),E(4066),E(4067),E(4068)/'TAIL',' COM','MAND','.   '/
      DATA E(4069),E(4070),E(4071),E(4072)/'AN A','RC J','UNCT','ION '/
      DATA E(4073),E(4074),E(4075),E(4076)/'POIN','T RE','FERE','NCED'/
      DATA E(4077),E(4078),E(4079),E(4080)/' IN ','A ''S','EGME','NT'' '
     +/
      DATA E(4081),E(4082),E(4083),E(4084)/'DETA','IL C','OMMA','ND  '/
      DATA E(4085),E(4086),E(4087),E(4088)/'COMM','AND ','WAS ','NOT '/
      DATA E(4089),E(4090),E(4091),E(4092)/'WITH','IN R','ANGE',' FOR'/
      DATA E(4093),E(4094),E(4095),E(4096)/' THE',' CUR','VE. ','THE '/
      DATA E(4097),E(4098),E(4099),E(4100)/'FINA','L JU','NCTI','ON P'/
      DATA E(4101),E(4102),E(4103),E(4104)/'OINT',' REF','EREN','CED '/
      DATA E(4105),E(4106),E(4107),E(4108)/'IN T','HE F','INAL',' ''SE'/
      DATA E(4109),E(4110),E(4111),E(4112)/'GMEN','T''  ','DETA','IL C'/
      DATA E(4113),E(4114),E(4115),E(4116)/'OMMA','ND W','AS N','OT T'/
      DATA E(4117),E(4118),E(4119),E(4120)/'HE L','AST ','POIN','T OF'/
      DATA E(4121),E(4122),E(4123),E(4124)/' THE',' CUR','VE. ','PROJ'/
      DATA E(4125),E(4126),E(4127),E(4128)/'ECTI','ON O','F A ','CURV'/
      DATA E(4129),E(4130),E(4131),E(4132)/'E PO','INT ','INTO',' PLA'/
      DATA E(4133),E(4134),E(4135),E(4136)/'NE F','OR A','NGUL','AR M'/
      DATA E(4137),E(4138),E(4139),E(4140)/'EASU','REME','NT  ','IS T'/
      DATA E(4141),E(4142),E(4143),E(4144)/'OO C','LOSE',' TO ','FOCA'/
      DATA E(4145),E(4146),E(4147),E(4148)/'L PO','INT ','FOR ','DEFI'/
      DATA E(4149),E(4150),E(4151),E(4152)/'NITE',' MEA','SURE','MENT'/
      DATA E(4153),E(4154),E(4155),E(4156)/' OF ','ANGL','E.  ','A ''F'/
      DATA E(4157),E(4158),E(4159),E(4160)/'LOW''',' DET','AIL ','COMM'/
      DATA E(4161),E(4162),E(4163),E(4164)/'AND ','WORD',' IS ','INVA'/
      DATA E(4165),E(4166),E(4167),E(4168)/'LID.','    ','THE ','TWO '/
      DATA E(4169),E(4170),E(4171),E(4172)/'POIN','TS A','VAIL','ABLE'/
      DATA E(4173),E(4174),E(4175),E(4176)/' FOR',' DEF','ININ','G A '/
      DATA E(4177),E(4178),E(4179),E(4180)/'PROJ','ECTI','ON C','HORD'/
      DATA E(4181),E(4182),E(4183),E(4184)/' ARE','  TO','O CL','OSE '/
      DATA E(4185),E(4186),E(4187),E(4188)/'TO D','ETER','MINE',' A C'/
      DATA E(4189),E(4190),E(4191),E(4192)/'HORD','.   ','THER','E WA'/
      DATA E(4193),E(4194),E(4195),E(4196)/'S NO','T EN','OUGH',' BUF'/
      DATA E(4197),E(4198),E(4199),E(4200)/'FER ','SPAC','E FO','R A '/
      DATA E(4201),E(4202),E(4203),E(4204)/'''FLO','W'' D','ETAI','L  P'
     +/
      DATA E(4205),E(4206),E(4207),E(4208)/'ARAM','ETER','IZAT','ION '/
      DATA E(4209),E(4210),E(4211),E(4212)/'COMM','AND.','    ','LENG'/
      DATA E(4213),E(4214),E(4215),E(4216)/'TH O','F NO','RMAL',' VEC'/
      DATA E(4217),E(4218),E(4219),E(4220)/'TOR ','WHIC','H CO','NTRO'/
      DATA E(4221),E(4222),E(4223),E(4224)/'LS D','IREC','TION',' OF '/
      DATA E(4225),E(4226),E(4227),E(4228)/'CHOR','DAL ',' PRO','JECT'/
      DATA E(4229),E(4230),E(4231),E(4232)/'ION ','IS T','OO S','MALL'/
      DATA E(4233),E(4234),E(4235),E(4236)/'. VE','CTOR',' IS ','ZERO'/
      DATA E(4237),E(4238),E(4239),E(4240)/'.   ','IN A',' ''CU','RSEG'/
      DATA E(4241),E(4242),E(4243),E(4244)/''' DE','FINI','TION',' ALL'/
      DATA E(4245),E(4246),E(4247),E(4248)/' OF ','THE ','POIN','TS D'/
      DATA E(4249),E(4250),E(4251),E(4252)/'O NO','T LI','E IN',' A  '/
      DATA E(4253),E(4254),E(4255),E(4256)/'PLAN','E.  ','IN A',' ''CU'/
      DATA E(4257),E(4258),E(4259),E(4260)/'RSEG',''' DE','FINI','TION'/
      DATA E(4261),E(4262),E(4263),E(4264)/' ALL',' OF ','THE ','TANG'/
      DATA E(4265),E(4266),E(4267),E(4268)/'ENT ','CONS','TRAI','NTS '/
      DATA E(4269),E(4270),E(4271),E(4272)/'DO N','OT  ','LIE ','IN A'/
      DATA E(4273),E(4274),E(4275),E(4276)/' PLA','NE. ','MORE',' THA'/
      DATA E(4277),E(4278),E(4279),E(4280)/'N 5 ','COND','ITIO','NS I'/
      DATA E(4281),E(4282),E(4283),E(4284)/'N A ','''CUR','SEG''',' DEF'
     +/
      DATA E(4285),E(4286),E(4287),E(4288)/'INIT','ION.','    ','IN A'/
      DATA E(4289),E(4290),E(4291),E(4292)/' ''CU','RSEG',''' DE','FINI'
     +/
      DATA E(4293),E(4294),E(4295),E(4296)/'TION',' END',' SLO','PES '/
      DATA E(4297),E(4298),E(4299),E(4300)/'ARE ','PARA','LLEL',' (TH'/
      DATA E(4301),E(4302),E(4303),E(4304)/'AT I','S,  ','THEY',' DO '/
      DATA E(4305),E(4306),E(4307),E(4308)/'NOT ','INTE','RSEC','T). '/
      DATA E(4309),E(4310),E(4311),E(4312)/'IN A',' ''CU','RSEG',''' DE'
     +/
      DATA E(4313),E(4314),E(4315),E(4316)/'FINI','TION',', TH','E PO'/
      DATA E(4317),E(4318),E(4319),E(4320)/'INTS',' IND','ICAT','E AN'/
      DATA E(4321),E(4322),E(4323),E(4324)/' IMP','OSSI','BLE ',' INF'/
      DATA E(4325),E(4326),E(4327),E(4328)/'LECT','ION.','    ','IN A'/
      DATA E(4329),E(4330),E(4331),E(4332)/' ''CU','RSEG',''' DE','FINI'
     +/
      DATA E(4333),E(4334),E(4335),E(4336)/'TION',', NO','RMAL','S AT'/
      DATA E(4337),E(4338),E(4339),E(4340)/' THE',' CUR','VE E','NDS '/
      DATA E(4341),E(4342),E(4343),E(4344)/'DO N','OT  ','INTE','RSEC'/
      DATA E(4345),E(4346),E(4347),E(4348)/'T.  ','NO S','UITA','BLE '/
      DATA E(4349),E(4350),E(4351),E(4352)/'CONI','C CU','RVE ','FITS'/
      DATA E(4353),E(4354),E(4355),E(4356)/' THE',' SPE','CIFI','ED C'/
      DATA E(4357),E(4358),E(4359),E(4360)/'ONDI','TION','S.  ','THER'/
      DATA E(4361),E(4362),E(4363),E(4364)/'E AR','E FE','WER ','THAN'/
      DATA E(4365),E(4366),E(4367),E(4368)/' TWO',' POI','NTS ','IN T'/
      DATA E(4369),E(4370),E(4371),E(4372)/'HE S','PLIN','E.  ','TWO '/
      DATA E(4373),E(4374),E(4375),E(4376)/'CONS','ECUT','IVE ','POIN'/
      DATA E(4377),E(4378),E(4379),E(4380)/'TS A','RE I','DENT','ICAL'/
      DATA E(4381),E(4382),E(4383),E(4384)/' (''S','PLIN','E'' C','ASE)'
     +/
      DATA E(4385),E(4386),E(4387),E(4388)/'.   ','TWO ','OF T','HE I'/
      DATA E(4389),E(4390),E(4391),E(4392)/'NPUT',' POI','NTS ','ARE '/
      DATA E(4393),E(4394),E(4395),E(4396)/'IDEN','TICA','L (''','CURS'/
      DATA E(4397),E(4398),E(4399),E(4400)/'EG'' ','CASE',').  ','SMOO'/
      DATA E(4401),E(4402),E(4403),E(4404)/'THIN','G AL','GORI','THM '/
      DATA E(4405),E(4406),E(4407),E(4408)/'FAIL','ED. ','A VE','CTOR'/
      DATA E(4409),E(4410),E(4411),E(4412)/' CON','STRA','INT ','WAS '/
      DATA E(4413),E(4414),E(4415),E(4416)/'ZERO','.   ','PROJ','ECTI'/
      DATA E(4417),E(4418),E(4419),E(4420)/'ON O','F >T','ANSP','L< O'/
      DATA E(4421),E(4422),E(4423),E(4424)/'N TH','E PL','ANE ','PERP'/
      DATA E(4425),E(4426),E(4427),E(4428)/'TO N','ORMA','L IS',' TOO'/
      DATA E(4429),E(4430),E(4431),E(4432)/' SMA','LL. ','PROJ','ECTI'/
      DATA E(4433),E(4434),E(4435),E(4436)/'ON O','F >C','RSSP','L< O'/
      DATA E(4437),E(4438),E(4439),E(4440)/'N TH','E PL','ANE ','PERP'/
      DATA E(4441),E(4442),E(4443),E(4444)/'TO N','ORMA','L IS',' TOO'/
      DATA E(4445),E(4446),E(4447),E(4448)/' SMA','LL. ','TWO ','OR M'/
      DATA E(4449),E(4450),E(4451),E(4452)/'ORE ','CONS','TRAI','NT V'/
      DATA E(4453),E(4454),E(4455),E(4456)/'ECTO','RS A','T ON','E PO'/
      DATA E(4457),E(4458),E(4459),E(4460)/'INT ','LIE ','IN T','HE S'/
      DATA E(4461),E(4462),E(4463),E(4464)/'AME ',' DIR','ECTI','ON. '/
      DATA E(4465),E(4466),E(4467),E(4468)/'PARA','BOLI','C IN','TERP'/
      DATA E(4469),E(4470),E(4471),E(4472)/'OLAT','ION ','FAIL','ED A'/
      DATA E(4473),E(4474),E(4475),E(4476)/'T ON','E EN','D OF',' A '''/
      DATA E(4477),E(4478),E(4479),E(4480)/'SPLI','NE''.','    ','THE '/
      DATA E(4481),E(4482),E(4483),E(4484)/'MID ','POIN','T OF',' THR'/
      DATA E(4485),E(4486),E(4487),E(4488)/'EE C','ONSE','CUTI','VE P'/
      DATA E(4489),E(4490),E(4491),E(4492)/'OINT','S PR','OJEC','TED '/
      DATA E(4493),E(4494),E(4495),E(4496)/'OUTS','IDE ',' THE',' RAN'/
      DATA E(4497),E(4498),E(4499),E(4500)/'GE O','F TH','E SU','RROU'/
      DATA E(4501),E(4502),E(4503),E(4504)/'NDIN','G TW','O.  ','A DI'/
      DATA E(4505),E(4506),E(4507),E(4508)/'STAN','CE B','ETWE','EN T'/
      DATA E(4509),E(4510),E(4511),E(4512)/'WO C','ONSE','CUTI','VE I'/
      DATA E(4513),E(4514),E(4515),E(4516)/'NPUT',' POI','NTS ','IS  '/
      DATA E(4517),E(4518),E(4519),E(4520)/'TOO ','SMAL','L.  ','INPU'/
      DATA E(4521),E(4522),E(4523),E(4524)/'T >I','DC< ','IS N','OT S'/
      DATA E(4525),E(4526),E(4527),E(4528)/'IGNI','FICA','NT. ','ERRO'/
      DATA E(4529),E(4530),E(4531),E(4532)/'R IN',' SOL','VING',' SIM'/
      DATA E(4533),E(4534),E(4535),E(4536)/'ULTA','NEOU','S LI','NEAR'/
      DATA E(4537),E(4538),E(4539),E(4540)/' EQU','ATIO','NS. ','NUMB'/
      DATA E(4541),E(4542),E(4543),E(4544)/'ER O','F IN','PUT ','POIN'/
      DATA E(4545),E(4546),E(4547),E(4548)/'TS I','S LE','SS T','HAN '/
      DATA E(4549),E(4550),E(4551),E(4552)/'3.  ','A DI','STAN','CE B'/
      DATA E(4553),E(4554),E(4555),E(4556)/'ETWE','EN T','WO C','ONSE'/
      DATA E(4557),E(4558),E(4559),E(4560)/'CUTI','VE O','UTPU','T PO'/
      DATA E(4561),E(4562),E(4563),E(4564)/'INTS',' IS ',' IS ','TOO '/
      DATA E(4565),E(4566),E(4567),E(4568)/'SMAL','L.  ','AN O','UTPU'/
      DATA E(4569),E(4570),E(4571),E(4572)/'T FI','RST ','ORDE','R DE'/
      DATA E(4573),E(4574),E(4575),E(4576)/'RIVA','TIVE',' HAS',' A M'/
      DATA E(4577),E(4578),E(4579),E(4580)/'AGNI','TUDE',' WHI','CH  '/
      DATA E(4581),E(4582),E(4583),E(4584)/'IS T','OO S','MALL','.   '/
      DATA E(4585),E(4586),E(4587),E(4588)/'MORE',' THA','N 2 ','CHEC'/
      DATA E(4589),E(4590),E(4591),E(4592)/'K SU','RFAC','ES F','OR T'/
      DATA E(4593),E(4594),E(4595),E(4596)/'HIS ','CUT ','SEQU','ENCE'/
      DATA E(4597),E(4598),E(4599),E(4600)/'.   ','PART',' SUR','FACE'/
      DATA E(4601),E(4602),E(4603),E(4604)/' IS ','A PO','INT.','    '/
      DATA E(4605),E(4606),E(4607),E(4608)/'CUTT','ER W','AS N','OT W'/
      DATA E(4609),E(4610),E(4611),E(4612)/'ITHI','N TO','LERA','NCE '/
      DATA E(4613),E(4614),E(4615),E(4616)/'OF D','S AT',' STA','RT O'/
      DATA E(4617),E(4618),E(4619),E(4620)/'F CU','T.  ','CUTT','ER W'/
      DATA E(4621),E(4622),E(4623),E(4624)/'AS N','OT W','ITHI','N TO'/
      DATA E(4625),E(4626),E(4627),E(4628)/'LERA','NCE ','OF P','S AT'/
      DATA E(4629),E(4630),E(4631),E(4632)/' STA','RT O','F CU','T.  '/
      DATA E(4633),E(4634),E(4635),E(4636)/'UNAB','LE T','O DE','TERM'/
      DATA E(4637),E(4638),E(4639),E(4640)/'INE ','GENE','RAL ','DIRE'/
      DATA E(4641),E(4642),E(4643),E(4644)/'CTIO','N OF',' FIR','ST C'/
      DATA E(4645),E(4646),E(4647),E(4648)/'UT V','ECTO','R.  ','FWD '/
      DATA E(4649),E(4650),E(4651),E(4652)/'DIRE','CTIO','N CO','ULD '/
      DATA E(4653),E(4654),E(4655),E(4656)/'NOT ','BE D','ETER','MINE'/
      DATA E(4657),E(4658),E(4659),E(4660)/'D.  ','INIT','IAL ','MOTI'/
      DATA E(4661),E(4662),E(4663),E(4664)/'ON D','IREC','TION',' VEC'/
      DATA E(4665),E(4666),E(4667),E(4668)/'TOR ','OR I','TS O','RIEN'/
      DATA E(4669),E(4670),E(4671),E(4672)/'TATI','ON C','OULD',' NOT'/
      DATA E(4673),E(4674),E(4675),E(4676)/'  BE',' DET','ERMI','NED.'/
      DATA E(4677),E(4678),E(4679),E(4680)/'    ','CUTT','ER N','OT D'/
      DATA E(4681),E(4682),E(4683),E(4684)/'EFIN','ED P','RIOR',' TO '/
      DATA E(4685),E(4686),E(4687),E(4688)/'CUT ','SEQU','ENCE',' CAL'/
      DATA E(4689),E(4690),E(4691),E(4692)/'CULA','TION','.   ','''FRO'/
      DATA E(4693),E(4694),E(4695),E(4696)/'M'' P','OINT',' NOT',' SPE'/
      DATA E(4697),E(4698),E(4699),E(4700)/'CIFI','ED. ','''MOT','ION'''
     +/
      DATA E(4701),E(4702),E(4703),E(4704)/' MOD','IFIE','R (''','ON'','
     +/
      DATA E(4705),E(4706),E(4707),E(4708)/'''TO''',',''PA','ST'',',
     +'''TAN'/
      DATA E(4709),E(4710),E(4711),E(4712)/'TO'',','''PST','AN'')',
     +' NOT'/
      DATA E(4713),E(4714),E(4715),E(4716)/'  SP','ECIF','IED.','    '/
      DATA E(4717),E(4718),E(4719),E(4720)/'CHEC','K SU','RFAC','E MI'/
      DATA E(4721),E(4722),E(4723),E(4724)/'SSIN','G FO','R TH','IS '''/
      DATA E(4725),E(4726),E(4727),E(4728)/'MOTI','ON'' ','STAT','EMEN'/
      DATA E(4729),E(4730),E(4731),E(4732)/'T.  ','CUTT','ER N','OT D'/
      DATA E(4733),E(4734),E(4735),E(4736)/'EFIN','ED P','RIOR',' TO '/
      DATA E(4737),E(4738),E(4739),E(4740)/'CUT ','SEQU','ENCE',' CAL'/
      DATA E(4741),E(4742),E(4743),E(4744)/'CULA','TION','.   ','FROM'/
      DATA E(4745),E(4746),E(4747),E(4748)/' POI','NT N','OT S','PECI'/
      DATA E(4749),E(4750),E(4751),E(4752)/'FIED','.   ','MORE',' THA'/
      DATA E(4753),E(4754),E(4755),E(4756)/'N ON','E CH','ECK ','SURF'/
      DATA E(4757),E(4758),E(4759),E(4760)/'ACE ','SPEC','IFIE','D IN'/
      DATA E(4761),E(4762),E(4763),E(4764)/' A S','TART','UP. ','''NOP'/
      DATA E(4765),E(4766),E(4767),E(4768)/'S'' I','N EF','FECT',', BU'/
      DATA E(4769),E(4770),E(4771),E(4772)/'T PS',' SPE','CIFI','ED I'/
      DATA E(4773),E(4774),E(4775),E(4776)/'N ST','ARTU','P.  ','STAR'/
      DATA E(4777),E(4778),E(4779),E(4780)/'TUP ','ITER','ATIO','N FA'/
      DATA E(4781),E(4782),E(4783),E(4784)/'ILED',' TO ','CONV','ERGE'/
      DATA E(4785),E(4786),E(4787),E(4788)/'.   ','INVA','LID ','DATA'/
      DATA E(4789),E(4790),E(4791),E(4792)/' FOR',' STA','RTUP','. (S'/
      DATA E(4793),E(4794),E(4795),E(4796)/'EE C','OMPU','TER ','PROG'/
      DATA E(4797),E(4798),E(4799),E(4800)/'RAMM','ER).','    ','INDI'/
      DATA E(4801),E(4802),E(4803),E(4804)/'RP V','ECTO','R HA','S NO'/
      DATA E(4805),E(4806),E(4807),E(4808)/' LEN','GTH.','    ','DIRE'/
      DATA E(4809),E(4810),E(4811),E(4812)/'CTIO','N OF',' MOT','ION '/
      DATA E(4813),E(4814),E(4815),E(4816)/'GIVE','N WI','THOU','T A '/
      DATA E(4817),E(4818),E(4819),E(4820)/'STAR','TING',' POI','NT B'/
      DATA E(4821),E(4822),E(4823),E(4824)/'EING',' GIV','EN. ','CANN'/
      DATA E(4825),E(4826),E(4827),E(4828)/'OT D','ETER','MINE',' SUR'/
      DATA E(4829),E(4830),E(4831),E(4832)/'FACE',' TYP','E. D','S AS'/
      DATA E(4833),E(4834),E(4835),E(4836)/'SUME','D.  ','INDI','RV V'/
      DATA E(4837),E(4838),E(4839),E(4840)/'ECTO','R HA','S NO',' LEN'/
      DATA E(4841),E(4842),E(4843),E(4844)/'GTH.','    ','DIRE','CTIO'/
      DATA E(4845),E(4846),E(4847),E(4848)/'N OF',' MOT','ION ','GIVE'/
      DATA E(4849),E(4850),E(4851),E(4852)/'N WI','THOU','T A ','STAR'/
      DATA E(4853),E(4854),E(4855),E(4856)/'TING',' POI','NT B','EING'/
      DATA E(4857),E(4858),E(4859),E(4860)/' GIV','EN. ','CANN','OT D'/
      DATA E(4861),E(4862),E(4863),E(4864)/'ETER','MINE',' SUR','FACE'/
      DATA E(4865),E(4866),E(4867),E(4868)/' TYP','E. D','S AS','SUME'/
      DATA E(4869),E(4870),E(4871),E(4872)/'D.  ','SRFV','CT V','ECTO'/
      DATA E(4873),E(4874),E(4875),E(4876)/'R HA','S NO',' LEN','GTH.'/
      DATA E(4877),E(4878),E(4879),E(4880)/'    ','CANN','OT D','ETER'/
      DATA E(4881),E(4882),E(4883),E(4884)/'MINE',' SUR','FACE',' TYP'/
      DATA E(4885),E(4886),E(4887),E(4888)/'E. D','S AS','SUME','D.  '/
      DATA E(4889),E(4890),E(4891),E(4892)/'DIRE','CTIO','N OF',' MOT'/
      DATA E(4893),E(4894),E(4895),E(4896)/'ION ','GIVE','N WI','THOU'/
      DATA E(4897),E(4898),E(4899),E(4900)/'T A ','STAR','TING',' POI'/
      DATA E(4901),E(4902),E(4903),E(4904)/'NT B','EING',' GIV','EN. '/
      DATA E(4905),E(4906),E(4907),E(4908)/'NO D','RIVE',' SUR','FACE'/
      DATA E(4909),E(4910),E(4911),E(4912)/' NAM','ED A','FTER',' GO/'/
      DATA E(4913),E(4914),E(4915),E(4916)/'. EN','TERI','NG R','ESTA'/
      DATA E(4917),E(4918),E(4919),E(4920)/'RT M','ODE.','    ','ITEM'/
      DATA E(4921),E(4922),E(4923),E(4924)/' NOT',' ''FE','DRAT',
     +''',''T'/
      DATA E(4925),E(4926),E(4927),E(4928)/'O'',''','ON'',','''PAS',
     +'T'' O'/
      DATA E(4929),E(4930),E(4931),E(4932)/'R SU','RFAC','E FO','UND '/
      DATA E(4933),E(4934),E(4935),E(4936)/'AFTE','R GO','/.  ','ENTE'/
      DATA E(4937),E(4938),E(4939),E(4940)/'RING',' RES','TART',' MOD'/
      DATA E(4941),E(4942),E(4943),E(4944)/'E.  ','ILLE','GAL ','PERM'/
      DATA E(4945),E(4946),E(4947),E(4948)/'ANEN','T ID','ENTI','FIER'/
      DATA E(4949),E(4950),E(4951),E(4952)/' FOL','LOWS',' GO/','. EN'/
      DATA E(4953),E(4954),E(4955),E(4956)/'TERI','NG R','ESTA','RT  '/
      DATA E(4957),E(4958),E(4959),E(4960)/'MODE','.   ','ILLE','GAL '/
      DATA E(4961),E(4962),E(4963),E(4964)/'LANG','UAGE',' USA','GE E'/
      DATA E(4965),E(4966),E(4967),E(4968)/'NCOU','NTER','ED B','EFOR'/
      DATA E(4969),E(4970),E(4971),E(4972)/'E DR','IVE ','SURF','ACE.'/
      DATA E(4973),E(4974),E(4975),E(4976)/'  EN','TERI','NG R','ESTA'/
      DATA E(4977),E(4978),E(4979),E(4980)/'RT M','ODE.','    ','INVA'/
      DATA E(4981),E(4982),E(4983),E(4984)/'LID ','CUTT','ER D','EFIN'/
      DATA E(4985),E(4986),E(4987),E(4988)/'ITIO','N FO','RMAT','.   '/
      DATA E(4989),E(4990),E(4991),E(4992)/'CUTT','ER D','IAME','TER '/
      DATA E(4993),E(4994),E(4995),E(4996)/'IS N','EGAT','IVE.','    '/
      DATA E(4997),E(4998),E(4999),E(5000)/'CUTT','ER H','EIGH','T IS'/
      DATA E(5001),E(5002),E(5003),E(5004)/' NEG','ATIV','E.  ','CUTT'/
      DATA E(5005),E(5006),E(5007),E(5008)/'ER A','NGLE','S (A','LPHA'/
      DATA E(5009),E(5010),E(5011),E(5012)/' AND',' BET','A) A','RE T'/
      DATA E(5013),E(5014),E(5015),E(5016)/'OO L','ARGE','.   ','CUTT'/
      DATA E(5017),E(5018),E(5019),E(5020)/'ER A','NGLE',' ALP','HA I'/
      DATA E(5021),E(5022),E(5023),E(5024)/'S NE','GATI','VE. ','DIAM'/
      DATA E(5025),E(5026),E(5027),E(5028)/'ETER',', AL','PHA ','AND '/
      DATA E(5029),E(5030),E(5031),E(5032)/'HEIG','HT O','F CU','TTER'/
      DATA E(5033),E(5034),E(5035),E(5036)/' ARE',' INC','ONSI','STEN'/
      DATA E(5037),E(5038),E(5039),E(5040)/'T.  ','CUTT','ER A','NGLE'/
      DATA E(5041),E(5042),E(5043),E(5044)/' BET','A IS',' NEG','ATIV'/
      DATA E(5045),E(5046),E(5047),E(5048)/'E.  ','CORN','ER R','ADIU'/
      DATA E(5049),E(5050),E(5051),E(5052)/'S OF',' CUT','TER ','IS N'/
      DATA E(5053),E(5054),E(5055),E(5056)/'EGAT','IVE.','    ','CORN'/
      DATA E(5057),E(5058),E(5059),E(5060)/'ER C','IRCL','E CE','NTER'/
      DATA E(5061),E(5062),E(5063),E(5064)/' IS ','INCO','NSIS','TENT'/
      DATA E(5065),E(5066),E(5067),E(5068)/' WIT','H UP','PER ','LINE'/
      DATA E(5069),E(5070),E(5071),E(5072)/' SEG','MENT','  OF',' CUT'/
      DATA E(5073),E(5074),E(5075),E(5076)/'TER.','    ','CORN','ER C'/
      DATA E(5077),E(5078),E(5079),E(5080)/'IRCL','E OF',' CUT','TER '/
      DATA E(5081),E(5082),E(5083),E(5084)/'INTE','RCEP','TS L','OWER'/
      DATA E(5085),E(5086),E(5087),E(5088)/' LIN','E SE','GMEN','T AT'/
      DATA E(5089),E(5090),E(5091),E(5092)/' AN ',' UNA','CCEP','TABL'/
      DATA E(5093),E(5094),E(5095),E(5096)/'E AN','GLE.','    ','INCO'/
      DATA E(5097),E(5098),E(5099),E(5100)/'NSIS','TENT',' CUT','TER '/
      DATA E(5101),E(5102),E(5103),E(5104)/'DEFI','NITI','ON. ','LOWE'/
      DATA E(5105),E(5106),E(5107),E(5108)/'R LI','NE S','EGME','NT  '/
      DATA E(5109),E(5110),E(5111),E(5112)/'IGNO','RED.','    ','NO U'/
      DATA E(5113),E(5114),E(5115),E(5116)/'PPER',' LIN','E SE','GMEN'/
      DATA E(5117),E(5118),E(5119),E(5120)/'T ON',' CUT','TER,',' OR '/
      DATA E(5121),E(5122),E(5123),E(5124)/'CORN','ER C','IRCL','E ME'/
      DATA E(5125),E(5126),E(5127),E(5128)/'ETS ','LOWE','R  L','INE '/
      DATA E(5129),E(5130),E(5131),E(5132)/'SEGM','ENT ','INCO','RREC'/
      DATA E(5133),E(5134),E(5135),E(5136)/'TLY.','    ','CORN','ER C'/
      DATA E(5137),E(5138),E(5139),E(5140)/'IRCL','E OF',' CUT','TER '/
      DATA E(5141),E(5142),E(5143),E(5144)/'DOES',' NOT',' INT','ERSE'/
      DATA E(5145),E(5146),E(5147),E(5148)/'CT L','OWER',' LIN','E SE'/
      DATA E(5149),E(5150),E(5151),E(5152)/'GMEN','T.  ','CORN','ER C'/
      DATA E(5153),E(5154),E(5155),E(5156)/'IRCL','E OF',' CUT','TER '/
      DATA E(5157),E(5158),E(5159),E(5160)/'DOES',' NOT',' INT','ERSE'/
      DATA E(5161),E(5162),E(5163),E(5164)/'CT U','PPER',' LIN','E SE'/
      DATA E(5165),E(5166),E(5167),E(5168)/'GMEN','T.  ','CORN','ER C'/
      DATA E(5169),E(5170),E(5171),E(5172)/'IRCL','E OF',' CUT','TER '/
      DATA E(5173),E(5174),E(5175),E(5176)/'INTE','RSEC','TS U','PPER'/
      DATA E(5177),E(5178),E(5179),E(5180)/' LIN','E SE','GMEN','T AT'/
      DATA E(5181),E(5182),E(5183),E(5184)/'  UN','ACCE','PTAB','LE A'/
      DATA E(5185),E(5186),E(5187),E(5188)/'NGLE','.   ','INCO','NSIS'/
      DATA E(5189),E(5190),E(5191),E(5192)/'TENT',' CUT','TER ','DEFI'/
      DATA E(5193),E(5194),E(5195),E(5196)/'NITI','ON. ','UPPE','R LI'/
      DATA E(5197),E(5198),E(5199),E(5200)/'NE S','EGME','NT I','GNOR'/
      DATA E(5201),E(5202),E(5203),E(5204)/'ED. ','CUTT','ER D','EFIN'/
      DATA E(5205),E(5206),E(5207),E(5208)/'ITIO','N NO','T VA','LID.'/
      DATA E(5209),E(5210),E(5211),E(5212)/'WRON','G DA','TA I','N TL'/
      DATA E(5213),E(5214),E(5215),E(5216)/'INC,',' NO ','ARC ','OR N'/
      DATA E(5217),E(5218),E(5219),E(5220)/'O LI','NE  ','NO C','UTTE'/
      DATA E(5221),E(5222),E(5223),E(5224)/'R DE','FINE','D TO',' COM'/
      DATA E(5225),E(5226),E(5227),E(5228)/'PUTE',' DIS','C RA','DIUS'/
      DATA E(5229),E(5230),E(5231),E(5232)/' RA ','OR D','ISC ','HEIG'/
      DATA E(5233),E(5234),E(5235),E(5236)/'HT H','I.  ','POIN','T IS'/
      DATA E(5237),E(5238),E(5239),E(5240)/' OUT','SIDE',' OF ','THE '/
      DATA E(5241),E(5242),E(5243),E(5244)/'U/V ','PARA','METE','RS O'/
      DATA E(5245),E(5246),E(5247),E(5248)/'F A ','PATC','H.  ','R1 I'/
      DATA E(5249),E(5250),E(5251),E(5252)/'S LE','SS T','HAN ','THE '/
      DATA E(5253),E(5254),E(5255),E(5256)/'TOLE','RANC','E.  ','THE '/
      DATA E(5257),E(5258),E(5259),E(5260)/'TOOL',' AXI','S CA','NNOT'/
      DATA E(5261),E(5262),E(5263),E(5264)/' BE ','COMP','UTED','.   '/
      DATA E(5265),E(5266),E(5267),E(5268)/'WRON','G TO','OL A','XIS '/
      DATA E(5269),E(5270),E(5271),E(5272)/'INFO','RMAT','ION.','    '/
      DATA E(5273),E(5274),E(5275),E(5276)/'A ''T','LAXI','S'' C','OMMA'
     +/
      DATA E(5277),E(5278),E(5279),E(5280)/'ND H','AS B','EEN ','USED'/
      DATA E(5281),E(5282),E(5283),E(5284)/' WIT','HOUT',' A P','REVI'/
      DATA E(5285),E(5286),E(5287),E(5288)/'OUS ',' ''MU','LTAX',''' CO'
     +/
      DATA E(5289),E(5290),E(5291),E(5292)/'MMAN','D. N','O TO','OLAX'/
      DATA E(5293),E(5294),E(5295),E(5296)/'IS V','ALUE','S OU','TPUT'/
      DATA E(5297),E(5298),E(5299),E(5300)/'    ','    ','TOO ','MANY'/
      DATA E(5301),E(5302),E(5303),E(5304)/' PAR','AMET','ERS ','IN A'/
      DATA E(5305),E(5306),E(5307),E(5308)/' ''TL','AXIS',''' ST','ATEM'
     +/
      DATA E(5309),E(5310),E(5311),E(5312)/'ENT.',' EXC','ESS ','VALU'/
      DATA E(5313),E(5314),E(5315),E(5316)/'ES  ','IGNO','RED.','    '/
      DATA E(5317),E(5318),E(5319),E(5320)/'A ''M','ULTA','X'' C','OMMA'
     +/
      DATA E(5321),E(5322),E(5323),E(5324)/'ND H','AS B','EEN ','USED'/
      DATA E(5325),E(5326),E(5327),E(5328)/' FOL','LOWI','NG P','REVI'/
      DATA E(5329),E(5330),E(5331),E(5332)/'OUS ',' MOT','ION ','OUTP'/
      DATA E(5333),E(5334),E(5335),E(5336)/'UT W','ITHO','UT T','OOL '/
      DATA E(5337),E(5338),E(5339),E(5340)/'AXIS',' VAL','UES.','    '/
      DATA E(5341),E(5342),E(5343),E(5344)/'''THI','CK'' ','GIVE','N FO'
     +/
      DATA E(5345),E(5346),E(5347),E(5348)/'R MO','RE T','HAN ','THE '/
      DATA E(5349),E(5350),E(5351),E(5352)/'ALLO','WED ','NUMB','ER O'/
      DATA E(5353),E(5354),E(5355),E(5356)/'F  S','URFA','CES.',' EXT'/
      DATA E(5357),E(5358),E(5359),E(5360)/'RA V','ALUE','S IG','NORE'/
      DATA E(5361),E(5362),E(5363),E(5364)/'REGI','ON D','ATA ','BELO'/
      DATA E(5365),E(5366),E(5367),E(5368)/'NGS ','TO M','ORE ','THAN'/
      DATA E(5369),E(5370),E(5371),E(5372)/' ONE',' SUR','FACE','.   '/
      DATA E(5373),E(5374),E(5375),E(5376)/'LESS',' THA','N 3 ','POIN'/
      DATA E(5377),E(5378),E(5379),E(5380)/'TS A','S RE','GION',' BOU'/
      DATA E(5381),E(5382),E(5383),E(5384)/'NDAR','Y.  ','REGI','ON B'/
      DATA E(5385),E(5386),E(5387),E(5388)/'OUND','ARY ','IS I','NCOR'/
      DATA E(5389),E(5390),E(5391),E(5392)/'RECT','.   ','REGI','ON B'/
      DATA E(5393),E(5394),E(5395),E(5396)/'OUND','ARY ','CONT','AINS'/
      DATA E(5397),E(5398),E(5399),E(5400)/' INT','ERSE','CTIO','NS. '/
      DATA E(5401),E(5402),E(5403),E(5404)/'TOO ','MANY',' REG','ION '/
      DATA E(5405),E(5406),E(5407),E(5408)/'POIN','TS T','O PR','OCES'/
      DATA E(5409),E(5410),E(5411),E(5412)/'S.  ','REGI','ON D','ATA '/
      DATA E(5413),E(5414),E(5415),E(5416)/'CANN','OT B','E FE','TCHE'/
      DATA E(5417),E(5418),E(5419),E(5420)/'D.  ','GEOM','ETRY',' ELE'/
      DATA E(5421),E(5422),E(5423),E(5424)/'MENT',' IS ','NOT ','DEFI'/
      DATA E(5425),E(5426),E(5427),E(5428)/'NED ','- RE','TURN',' WIT'/
      DATA E(5429),E(5430),E(5431),E(5432)/'HOUT',' RES','ULT.','NO I'/
      DATA E(5433),E(5434),E(5435),E(5436)/'NTER','SECT','ION ','POSS'/
      DATA E(5437),E(5438),E(5439),E(5440)/'IBLE','.   ','SAME',' SSU'/
      DATA E(5441),E(5442),E(5443),E(5444)/'RF F','OUND',' TWI','CE B'/
      DATA E(5445),E(5446),E(5447),E(5448)/'EFOR','E >W','ITH<',' ONL'/
      DATA E(5449),E(5450),E(5451),E(5452)/'Y FI','RST ','FOUN','D SS'/
      DATA E(5453),E(5454),E(5455),E(5456)/'URF ','IN F','IRST',' PAR'/
      DATA E(5457),E(5458),E(5459),E(5460)/'T OF',' THE',' STA','TEME'/
      DATA E(5461),E(5462),E(5463),E(5464)/'NT W','ILL ','BE U','SED.'/
      DATA E(5465),E(5466),E(5467),E(5468)/'SAME',' SSU','RF F','OUND'/
      DATA E(5469),E(5470),E(5471),E(5472)/' TWI','CE A','FTER',' >WI'/
      DATA E(5473),E(5474),E(5475),E(5476)/'TH< ','ONLY',' FIR','ST F'/
      DATA E(5477),E(5478),E(5479),E(5480)/'OUND',' SSU','RF I','N SE'/
      DATA E(5481),E(5482),E(5483),E(5484)/'COND',' PAR','T OF',' THE'/
      DATA E(5485),E(5486),E(5487),E(5488)/' STA','TEME','NT W','ILL '/
      DATA E(5489),E(5490),E(5491),E(5492)/'BE U','SED.','SAME',' SSU'/
      DATA E(5493),E(5494),E(5495),E(5496)/'RF W','ILL ','BE I','NTER'/
      DATA E(5497),E(5498),E(5499),E(5500)/'SECT','ED B','Y IT','SELF'/
      DATA E(5501),E(5502),E(5503),E(5504)/' THI','S IS',' NOT',' POS'/
      DATA E(5505),E(5506),E(5507),E(5508)/'SIBL','E.  ','D.  ','SURF'/
      DATA E(5509),E(5510),E(5511),E(5512)/'ACE ','TYPE',' NOT',' IDE'/
      DATA E(5513),E(5514),E(5515),E(5516)/'NTIF','IABL','E. (','SEE '/
      DATA E(5517),E(5518),E(5519),E(5520)/'COMP','UTER',' PRO','GRAM'/
      DATA E(5521),E(5522),E(5523),E(5524)/'MER)','.   ','CANO','NICA'/
      DATA E(5525),E(5526),E(5527),E(5528)/'L FO','RM O','F SU','RFAC'/
      DATA E(5529),E(5530),E(5531),E(5532)/'E UN','DEFI','NED.','    '/
      DATA E(5533),E(5534),E(5535),E(5536)/'CUTT','ER N','OT W','ITHI'/
      DATA E(5537),E(5538),E(5539),E(5540)/'N TO','LERA','NCE ','OF D'/
      DATA E(5541),E(5542),E(5543),E(5544)/'S AT',' STA','RT O','F CU'/
      DATA E(5545),E(5546),E(5547),E(5548)/'T.  ','DS A','ND C','S CI'/
      DATA E(5549),E(5550),E(5551),E(5552)/'RCLE','S HA','VE S','AME '/
      DATA E(5553),E(5554),E(5555),E(5556)/'CENT','ER. ','DS A','ND C'/
      DATA E(5557),E(5558),E(5559),E(5560)/'S NO','T TA','NGEN','T AS'/
      DATA E(5561),E(5562),E(5563),E(5564)/' STA','RTED','.   ','REQU'/
      DATA E(5565),E(5566),E(5567),E(5568)/'ESTE','D FI','NAL ','CUTT'/
      DATA E(5569),E(5570),E(5571),E(5572)/'ER P','OSIT','ION ','NOT '/
      DATA E(5573),E(5574),E(5575),E(5576)/'POSS','IBLE','.   ','DS D'/
      DATA E(5577),E(5578),E(5579),E(5580)/'OES ','NOT ','INTE','RSEC'/
      DATA E(5581),E(5582),E(5583),E(5584)/'T CS',' GOI','NG I','N SP'/
      DATA E(5585),E(5586),E(5587),E(5588)/'ECIF','IED ','DIRE','CTIO'/
      DATA E(5589),E(5590),E(5591),E(5592)/'N.  ','CS A','ND D','S DO'/
      DATA E(5593),E(5594),E(5595),E(5596)/' NOT',' INT','ERSE','CT. '/
      DATA E(5597),E(5598),E(5599),E(5600)/'CUT ','VECT','OR I','TERA'/
      DATA E(5601),E(5602),E(5603),E(5604)/'TION',' TO ','DS A','ND P'/
      DATA E(5605),E(5606),E(5607),E(5608)/'S FA','ILED','.   ','CUT '/
      DATA E(5609),E(5610),E(5611),E(5612)/'VECT','OR I','TERA','TION'/
      DATA E(5613),E(5614),E(5615),E(5616)/' TO ','CS F','AILE','D.  '/
      DATA E(5617),E(5618),E(5619),E(5620)/'''NUM','PTS''',' COU','NT E'
     +/
      DATA E(5621),E(5622),E(5623),E(5624)/'XHAU','STED','. MI','SSED'/
      DATA E(5625),E(5626),E(5627),E(5628)/' CS ','OR C','UT S','EQUE'/
      DATA E(5629),E(5630),E(5631),E(5632)/'NCE ','IS T','OO  ','LONG'/
      DATA E(5633),E(5634),E(5635),E(5636)/'.   ','COUL','D NO','T DE'/
      DATA E(5637),E(5638),E(5639),E(5640)/'TERM','INE ','TRIA','L MO'/
      DATA E(5641),E(5642),E(5643),E(5644)/'VE A','LONG',' DS ','AND '/
      DATA E(5645),E(5646),E(5647),E(5648)/'PS. ','CHEC','K CU','TTER'/
      DATA E(5649),E(5650),E(5651),E(5652)/'  TO',' SUR','FACE',' CON'/
      DATA E(5653),E(5654),E(5655),E(5656)/'FIGU','RATI','ON. ','MAXI'/
      DATA E(5657),E(5658),E(5659),E(5660)/'MUM ','CUT ','SEQU','ENCE'/
      DATA E(5661),E(5662),E(5663),E(5664)/' LEN','GTH ','EXCE','EDED'/
      DATA E(5665),E(5666),E(5667),E(5668)/'. CS',' COU','LD N','OT B'/
      DATA E(5669),E(5670),E(5671),E(5672)/'E FO','UND.','    ','MULT'/
      DATA E(5673),E(5674),E(5675),E(5676)/'IPLE',' CS ','ERRO','R. ('/
      DATA E(5677),E(5678),E(5679),E(5680)/'SEE ','COMP','UTER',' PRO'/
      DATA E(5681),E(5682),E(5683),E(5684)/'GRAM','MER)','NEGA','TIVE'/
      DATA E(5685),E(5686),E(5687),E(5688)/' DIS','TANC','E TO',' CS '/
      DATA E(5689),E(5690),E(5691),E(5692)/'AT S','TART',' OF ','CUT '/
      DATA E(5693),E(5694),E(5695),E(5696)/'.   ','CUTT','ER I','S MO'/
      DATA E(5697),E(5698),E(5699),E(5700)/'VING',' AWA','Y FR','OM C'/
      DATA E(5701),E(5702),E(5703),E(5704)/'S.  ','DIST','ANCE',' TO '/
      DATA E(5705),E(5706),E(5707),E(5708)/'TANG','ENT ','CS S','TOPP'/
      DATA E(5709),E(5710),E(5711),E(5712)/'ING ','POSI','TION',' CAN'/
      DATA E(5713),E(5714),E(5715),E(5716)/'NOT ','BE  ','DETE','RMIN'/
      DATA E(5717),E(5718),E(5719),E(5720)/'ED. ','ITER','ATIO','N TO'/
      DATA E(5721),E(5722),E(5723),E(5724)/' PS,',' DS,',' CS ','GONE'/
      DATA E(5725),E(5726),E(5727),E(5728)/' THR','U RE','STAR','T RO'/
      DATA E(5729),E(5730),E(5731),E(5732)/'UTE.','    ','CENT','ER C'/
      DATA E(5733),E(5734),E(5735),E(5736)/'SNR ','EXIT',' TAK','EN D'/
      DATA E(5737),E(5738),E(5739),E(5740)/'URIN','G PL','ANE ','ROUT'/
      DATA E(5741),E(5742),E(5743),E(5744)/'INE ','ITER','ATIO','N.  '/
      DATA E(5745),E(5746),E(5747),E(5748)/'(SEE',' COM','PUTE','R PR'/
      DATA E(5749),E(5750),E(5751),E(5752)/'OGRA','MMER',').  ','CS N'/
      DATA E(5753),E(5754),E(5755),E(5756)/'OT F','OUND',' IN ','MOVE'/
      DATA E(5757),E(5758),E(5759),E(5760)/' ALO','NG D','S AN','D PS'/
      DATA E(5761),E(5762),E(5763),E(5764)/' PLA','NES.','    ','MAXI'/
      DATA E(5765),E(5766),E(5767),E(5768)/'MUM ','CUT ','SEQU','ENCE'/
      DATA E(5769),E(5770),E(5771),E(5772)/' LEN','GTH ','EXCE','EDED'/
      DATA E(5773),E(5774),E(5775),E(5776)/'. CS',' COU','LD N','OT B'/
      DATA E(5777),E(5778),E(5779),E(5780)/'E FO','UND.','    ','DIFF'/
      DATA E(5781),E(5782),E(5783),E(5784)/'ICUL','TY E','NCOU','NTER'/
      DATA E(5785),E(5786),E(5787),E(5788)/'ED I','N IT','ERAT','ING '/
      DATA E(5789),E(5790),E(5791),E(5792)/'CUTT','ER T','O  S','URFA'/
      DATA E(5793),E(5794),E(5795),E(5796)/'CES.','    ','CANN','OT I'/
      DATA E(5797),E(5798),E(5799),E(5800)/'TERA','TE C','UTTE','R IN'/
      DATA E(5801),E(5802),E(5803),E(5804)/'TO S','PECI','FIED',' SUR'/
      DATA E(5805),E(5806),E(5807),E(5808)/'FACE','S.  ','COUL','D NO'/
      DATA E(5809),E(5810),E(5811),E(5812)/'T DE','TERM','INE ','NEW '/
      DATA E(5813),E(5814),E(5815),E(5816)/'TOOL',' AXI','S DU','RING'/
      DATA E(5817),E(5818),E(5819),E(5820)/' 5 A','XIS ','CALC','ULAT'/
      DATA E(5821),E(5822),E(5823),E(5824)/'ION.','  (S','EE C','OMPU'/
      DATA E(5825),E(5826),E(5827),E(5828)/'TER ','PROG','RAMM','ER).'/
      DATA E(5829),E(5830),E(5831),E(5832)/'    ','5 AX','IS I','TERA'/
      DATA E(5833),E(5834),E(5835),E(5836)/'TION',' DID',' NOT',' CON'/
      DATA E(5837),E(5838),E(5839),E(5840)/'VERG','E.  ','TANG','ENT '/
      DATA E(5841),E(5842),E(5843),E(5844)/'CS S','TOPP','ING ','POSI'/
      DATA E(5845),E(5846),E(5847),E(5848)/'TION',' COU','LD N','OT B'/
      DATA E(5849),E(5850),E(5851),E(5852)/'E DE','TERM','INED','.   '/
      DATA E(5853),E(5854),E(5855),E(5856)/'5 AX','IS C','OUNT',' EXH'/
      DATA E(5857),E(5858),E(5859),E(5860)/'AUST','ED. ','TANG','ENT '/
      DATA E(5861),E(5862),E(5863),E(5864)/'CS A','ND P','S/DS','-NOR'/
      DATA E(5865),E(5866),E(5867),E(5868)/'MALS',' NEA','RLY ','ORTH'/
      DATA E(5869),E(5870),E(5871),E(5872)/'OGON','AL. ',' CHE','CK P'/
      DATA E(5873),E(5874),E(5875),E(5876)/'ART ','PROG','RAM.','    '/
      DATA E(5877),E(5878),E(5879),E(5880)/'TWO ','PLAN','ES, ','NOT '/
      DATA E(5881),E(5882),E(5883),E(5884)/'PERP','ENDI','CULA','R TO'/
      DATA E(5885),E(5886),E(5887),E(5888)/' THE',' XY ','PLAN','E,  '/
      DATA E(5889),E(5890),E(5891),E(5892)/'CANN','OT B','E US','ED A'/
      DATA E(5893),E(5894),E(5895),E(5896)/'S DS',' AND',' CS ','FOR '/
      DATA E(5897),E(5898),E(5899),E(5900)/'''TAN','TO'' ','CASE','.   '
     +/
      DATA E(5901),E(5902),E(5903),E(5904)/'COUL','D NO','T FI','ND A'/
      DATA E(5905),E(5906),E(5907),E(5908)/'N IN','TERS','ECTI','ON B'/
      DATA E(5909),E(5910),E(5911),E(5912)/'ETWE','EN T','OOL ','RAY '/
      DATA E(5913),E(5914),E(5915),E(5916)/'AND ','SURF','ACE.','    '/
      DATA E(5917),E(5918),E(5919),E(5920)/'TOO ','MANY',' CAL','LS T'/
      DATA E(5921),E(5922),E(5923),E(5924)/'O DD','SSRF',' WIT','HOUT'/
      DATA E(5925),E(5926),E(5927),E(5928)/' DET','ERMI','NING',' A N'/
      DATA E(5929),E(5930),E(5931),E(5932)/'EW C','UTTE','R  P','OSIT'/
      DATA E(5933),E(5934),E(5935),E(5936)/'ION.','    ','MODI','FIED'/
      DATA E(5937),E(5938),E(5939),E(5940)/' FLI','PCK ','TEST',' PAS'/
      DATA E(5941),E(5942),E(5943),E(5944)/'SED.','    ','COUL','D NO'/
      DATA E(5945),E(5946),E(5947),E(5948)/'T DE','TERM','INE ','NORM'/
      DATA E(5949),E(5950),E(5951),E(5952)/'AL D','ISTA','NCE ','DIRE'/
      DATA E(5953),E(5954),E(5955),E(5956)/'CTIO','N BE','TWEE','N CU'/
      DATA E(5957),E(5958),E(5959),E(5960)/'TTER','  AN','D SU','RFAC'/
      DATA E(5961),E(5962),E(5963),E(5964)/'E.  ','INIT','IAL ','PREF'/
      DATA E(5965),E(5966),E(5967),E(5968)/'ERRE','D DI','RECT','ION '/
      DATA E(5969),E(5970),E(5971),E(5972)/'DOES',' NOT',' INT','ERSE'/
      DATA E(5973),E(5974),E(5975),E(5976)/'CT  ','SURF','ACE.','    '/
      DATA E(5977),E(5978),E(5979),E(5980)/'COUL','D NO','T CA','LCUL'/
      DATA E(5981),E(5982),E(5983),E(5984)/'ATE ','SURF','ACE ','NORM'/
      DATA E(5985),E(5986),E(5987),E(5988)/'AL A','T SU','RFAC','E PO'/
      DATA E(5989),E(5990),E(5991),E(5992)/'INT ',' (SE','E CO','MPUT'/
      DATA E(5993),E(5994),E(5995),E(5996)/'ER P','ROGR','AMME','R). '/
      DATA E(5997),E(5998),E(5999),E(6000)/'SYNT','HETI','C CU','RVE '/
      DATA E(6001),E(6002),E(6003),E(6004)/'NOT ','NOW ','PROG','RAMM'/
      DATA E(6005),E(6006),E(6007),E(6008)/'ED F','OR A','RELE','M   '/
      DATA E(6009),E(6010),E(6011),E(6012)/'RADA','R EX','HAUS','TED '/
      DATA E(6013),E(6014),E(6015),E(6016)/'ALL ','TRIE','S   ','COUL'/
      DATA E(6017),E(6018),E(6019),E(6020)/'D NO','T CA','LCUL','ATE '/
      DATA E(6021),E(6022),E(6023),E(6024)/'UI V','ECTO','R ST','ARTI'/
      DATA E(6025),E(6026),E(6027),E(6028)/'NG W','ITH ','TWO ','OR M'/
      DATA E(6029),E(6030),E(6031),E(6032)/'ORE ',' DIR','ECTI','ONS.'/
      DATA E(6033),E(6034),E(6035),E(6036)/' (SE','E CO','MPUT','ER P'/
      DATA E(6037),E(6038),E(6039),E(6040)/'ROGR','AMME','R). ','CUTT'/
      DATA E(6041),E(6042),E(6043),E(6044)/'ER R','EFER','ENCE',' POI'/
      DATA E(6045),E(6046),E(6047),E(6048)/'NT A','ND S','URFA','CE C'/
      DATA E(6049),E(6050),E(6051),E(6052)/'ENTE','R OF',' CUR','VATU'/
      DATA E(6053),E(6054),E(6055),E(6056)/'RE  ','COIN','CIDE','.   '/
      DATA E(6057),E(6058),E(6059),E(6060)/'UNAB','LE T','O CA','LCUL'/
      DATA E(6061),E(6062),E(6063),E(6064)/'ATE ','SATI','SFAC','TORY'/
      DATA E(6065),E(6066),E(6067),E(6068)/' TOO','L NO','RMAL','.   '/
      DATA E(6069),E(6070),E(6071),E(6072)/'DIFF','ICUL','TY I','N LO'/
      DATA E(6073),E(6074),E(6075),E(6076)/'CATI','NG S','URFA','CE. '/
      DATA E(6077),E(6078),E(6079),E(6080)/'ZERO',' TOO','L NO','RMAL'/
      DATA E(6081),E(6082),E(6083),E(6084)/'. (S','EE C','OMPU','TER '/
      DATA E(6085),E(6086),E(6087),E(6088)/'PROG','RAMM','ER).','    '/
      DATA E(6089),E(6090),E(6091),E(6092)/'COUL','D NO','T FI','ND D'/
      DATA E(6093),E(6094),E(6095),E(6096)/'IREC','TION',' VEC','TOR '/
      DATA E(6097),E(6098),E(6099),E(6100)/'THAT',' INT','ERSE','CTS '/
      DATA E(6101),E(6102),E(6103),E(6104)/'THE ','SURF','ACE.','    '/
      DATA E(6105),E(6106),E(6107),E(6108)/'''NOD','ER'' ','OR ''',
     +'DERI'/
      DATA E(6109),E(6110),E(6111),E(6112)/'V'' N','OT D','EFIN','ED. '/
      DATA E(6113),E(6114),E(6115),E(6116)/'INCO','NSIS','TENT',' WIT'/
      DATA E(6117),E(6118),E(6119),E(6120)/'H  P','ARAM','ETRI','C SU'/
      DATA E(6121),E(6122),E(6123),E(6124)/'RFAC','E SO','UBRO','UTIN'/
      DATA E(6125),E(6126),E(6127),E(6128)/'E. M','ODIF','IER ','DISR'/
      DATA E(6129),E(6130),E(6131),E(6132)/'EGAR','DED.','    ','COUL'/
      DATA E(6133),E(6134),E(6135),E(6136)/'D NO','T PE','RFOR','M AR'/
      DATA E(6137),E(6138),E(6139),E(6140)/'ELEM',' COM','PUTA','TION'/
      DATA E(6141),E(6142),E(6143),E(6144)/' DUE',' TO ','ZERO',' SUR'/
      DATA E(6145),E(6146),E(6147),E(6148)/'FACE','  NO','RMAL','. CH'/
      DATA E(6149),E(6150),E(6151),E(6152)/'ECK ','DERI','VATI','VES '/
      DATA E(6153),E(6154),E(6155),E(6156)/'IN P','ARAM','ETRI','C SU'/
      DATA E(6157),E(6158),E(6159),E(6160)/'BROU','TINE','.   ','PARA'/
      DATA E(6161),E(6162),E(6163),E(6164)/'METR','IC S','URFA','CE F'/
      DATA E(6165),E(6166),E(6167),E(6168)/'AMIL','Y PA','RAME','TER '/
      DATA E(6169),E(6170),E(6171),E(6172)/'IS N','OT D','EFIN','ED. '/
      DATA E(6173),E(6174),E(6175),E(6176)/'PARA','METR','IC S','URFA'/
      DATA E(6177),E(6178),E(6179),E(6180)/'CE P','ARAM','ETER',' >U<'/
      DATA E(6181),E(6182),E(6183),E(6184)/' IS ','NOT ','DEFI','NED.'/
      DATA E(6185),E(6186),E(6187),E(6188)/'    ','PARA','METR','IC S'/
      DATA E(6189),E(6190),E(6191),E(6192)/'URFA','CE P','ARAM','ETER'/
      DATA E(6193),E(6194),E(6195),E(6196)/' >V<',' IS ','NOT ','DEFI'/
      DATA E(6197),E(6198),E(6199),E(6200)/'NED.','    ','THE ','PARA'/
      DATA E(6201),E(6202),E(6203),E(6204)/'METR','IC S','UBRO','UTIN'/
      DATA E(6205),E(6206),E(6207),E(6208)/'E (L','OAD ','MODU','LE) '/
      DATA E(6209),E(6210),E(6211),E(6212)/'DOES',' NOT',' EXI','ST  '/
      DATA E(6213),E(6214),E(6215),E(6216)/'IN J','OB L','IBRA','RY. '/
      DATA E(6217),E(6218),E(6219),E(6220)/'CANN','OT I','TERA','TE T'/
      DATA E(6221),E(6222),E(6223),E(6224)/'O A ','ROOT',' OF ','THE '/
      DATA E(6225),E(6226),E(6227),E(6228)/'CUBI','C EQ','UATI','ON I'/
      DATA E(6229),E(6230),E(6231),E(6232)/'N  T','HIS ','SEGM','ENT.'/
      DATA E(6233),E(6234),E(6235),E(6236)/'    ','TOO ','MANY',' STA'/
      DATA E(6237),E(6238),E(6239),E(6240)/'TEME','NTS ','IN T','HIS '/
      DATA E(6241),E(6242),E(6243),E(6244)/'PART',' PRO','GRAM','.   '/
      DATA E(6245),E(6246),E(6247),E(6248)/'LARG','EST ','CANO','NICA'/
      DATA E(6249),E(6250),E(6251),E(6252)/'L FO','RM I','S TO','O LA'/
      DATA E(6253),E(6254),E(6255),E(6256)/'RGE.','    ','INDE','X OU'/
      DATA E(6257),E(6258),E(6259),E(6260)/'T OF',' RAN','GE. ','SYST'/
      DATA E(6261),E(6262),E(6263),E(6264)/'EM E','RROR','. IL','LEGA'/
      DATA E(6265),E(6266),E(6267),E(6268)/'L I.','L. I','NSTR','UCTI'/
      DATA E(6269),E(6270),E(6271),E(6272)/'ON. ','SYST','EM E','RROR'/
      DATA E(6273),E(6274),E(6275),E(6276)/'. IL','LEGA','L CA','LL I'/
      DATA E(6277),E(6278),E(6279),E(6280)/'.L. ','INST','RUCT','ION.'/
      DATA E(6281),E(6282),E(6283),E(6284)/'    ','UNDE','FINE','D LA'/
      DATA E(6285),E(6286),E(6287),E(6288)/'BEL ','REFE','RENC','ED. '/
C
      END
**** SOURCE FILE : M0000903.V06   ***
*
C.....FORTRAN SUBROUTINE  ....FINI           8/68                 AR,HG
C.....FORTRAN SUBROUTINE             FINI.....              3/1/68   GK
      SUBROUTINE FINI
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'ISHR18.INC'
      INCLUDE 'KNUMBR.INC'
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE 'SYMFIL.INC'
C
      DIMENSION KFINI(8)
C
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
      LOGICAL FIRST
      SAVE KFINI,FIRST
      DATA KFINI /0,0,Z4E,0,Z4E,1,Z4E,1/,FIRST/.TRUE./
C... INITIALIZE FINI RECORD
      IF (FIRST) THEN
        KFINI(1)=BCDF('FINI')
        KFINI(2)=BCDF('    ')
        FIRST=.FALSE.
      ENDIF
C
C...  WRITE EXFILE RECORD
C
      CALL APT298(4,X,X)
      CALL RECORD(KFINI(4))
      NR=0
      CALL EWRITE(EXFILE,NR,KFINI,8,IR)
      CALL TAPOP(EXFILE,-2)
      CALL TAPOP(ELFIL2,-1)
      CALL TAPOP(ELFIL3,-1)
      CALL TAPOP(AXFILE,-1)
      CALL TAPOP(XNUM,-1)
      RETURN
       END
**** SOURCE FILE : M0000906.V01   ***
*
C...  FORTRAN SUBROUTINE GCIRCL                  7/70      RW
C
C  PURPOSE
C        THIS SUBROUTINE TRANSLATES THE CANONICAL FORMS
C        OF THE APT GEOMETRY (CIRCLE) INTO THE COEFFICIENTS
C        OF THE QUADRATIC. COEFFICIENTS ARE STORED
C        IN "QUADBF" AND THE QUADRATIC OUTPUT
C        SUBROUTINE IS CALLED.
C
C        CANONICAL FORM OF CIRCLE
C        1. X-COORD OF CENTER          (XC)
C        2. Y-COORD OF CENTER          (YC)
C        3. Z-COORD OF CENTER
C        4. X-COMPONENT OF AXIS VECTOR = 0
C        5. Y-COMPONENT OF AXIS VECTOR = 0
C        6. Z-COMPONENT OF AXIS VECTOR = 1
C        7. RADIUS OF CIRCLE           (R)
C
C        EQUATION
C        X**2 + Y**2 - 2XC*X - 2YC*Y + (XC**2+YC**2-R**2) = 0.
C
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      SUBROUTINE GCIRCL(CANON,QUADBF)
C
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)
      DIMENSION CANON(10),QUADBF(10)
C
      DO 2 J=1,2
 2    QUADBF(J)=1.0
C
      DO 3 J=3,6
 3    QUADBF(J)=0.0
C
      KX=1
      KY=2
C        COMPUTE C*X TERM
C
      QUADBF(7)=CANON(KX)*(-2.0)
C
C        COMPUTE C*Y TERM
C
      QUADBF(8)=CANON(KY)*(-2.0)
C
C        C*Z TERM EQUAL ZERO
C
      QUADBF(9)=0.0
C
C        COMPUTE CONSTANT TERM
C
      KR=7
      QUADBF(10)=(CANON(KX)**2)+(CANON(KY)**2)
      QUADBF(10)=QUADBF(10)-(CANON(KR)**2)
C
C        RETURN TO CALLING PROGRAM
C
      RETURN
      END
**** SOURCE FILE : M0000907.V01   ***
*
C...  FORTRAN SUBROUTINE GCONE                   7/70      RW
C
C        CANONICAL FORM OF CONE
C        1. X-COORDINATE OF VERTEX                (XO)
C        2. Y-COORDINATE OF VERTEX                (YO)
C        3. Z-COORDINATE OF VERTEX                (ZO)
C        4. X-COMPONENT OF NORMALIZED AXIS VECTOR (A)
C        5. Y-COMPONENT OF NORMALIZED AXIS VECTOR (B)
C        6. Z-COMPONENT OF NORMALIZED AXIS VECTOR (C)
C        7. COSINE OF VERTEX HALF-ANGLE           (V)
C
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      SUBROUTINE GCONE(CANON,QUADBF)
C
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)
      DIMENSION CANON(10),QUADBF(10)
C        INITIALIZATION
C
      XO=CANON(1)
      YO=CANON(2)
      ZO=CANON(3)
      A=CANON(4)
      B=CANON(5)
      C=CANON(6)
      V=CANON(7)
      DI=1.-C**2
      FR=V**2/(1.-V**2)
C
C     CHECK FOR DEFAULT CASE
C
      IF(A.NE.B) GO TO 10
      IF(A.NE.0) GO TO 10
C
      DO 2 J=1,2
    2 QUADBF(J)=FR
C
      QUADBF(3)= -1.0
C
      DO 3 J=4,6
    3 QUADBF(J)=0.0
C
      QUADBF(7)=-2.0*XO*FR
      QUADBF(8)=-2.0*YO*FR
      QUADBF(9)= 2.0*ZO
      QUADBF(10)=FR*XO**2+FR*YO**2-ZO**2
C
      GO TO 100
C
C     ALL OTHER CASES
C
   10 QUADBF(1)=FR*((C**2*A**2+B**2)/DI)-A**2
      QUADBF(2)=FR*((C**2*B**2+A**2)/DI)-B**2
      QUADBF(3)=FR*DI-C**2
      QUADBF(4)=-2.0*(B*C*FR+B*C)
      QUADBF(5)=-2.0*(A*C*FR+A*C)
      QUADBF(6)=2.0*(FR*((A*B*C**2-A*B)/DI)-A*B)
      QUADBF(7)=2.0*(FR*((-XO*A**2*C**2-YO*A*B*C**2-XO*B**2+YO*A*B)/DI+Z
     1O*A*C)+XO*A**2+YO*A*B+ZO*A*C)
      QUADBF(8)=2.0*(FR*((-YO*B**2*C**2-XO*A*B*C**2-YO*A**2+XO*A*B)/DI+Z
     1O*B*C)+YO*B**2+XO*A*B+ZO*B*C)
      QUADBF(9)=2.0*(FR*(-DI*ZO+XO*A*C+YO*B*C)+ZO*C**2+XO*A*C+YO*B*C)
      QUADBF(10)=FR*((XO**2*A**2*C**2+YO**2*B**2*C**2+2.0*XO*YO*A*B*C**2
     1+XO**2*B**2+YO**2*A**2-2.0*XO*YO*A*B)/DI+DI*ZO**2-2.0*XO*ZO*A*C-2.
     20*YO*ZO*B*C)-XO**2*A**2-YO**2*B**2-ZO**2*C**2-2.0*XO*YO*A*B-2.0*XO
     3*ZO*A*C-2.0*YO*ZO*B*C
C
C     ONLY ONE OF THE THREE SQUARED-TERM COEFFICIENTS SHOULD BE NEGATIVE
C     IF TWO ARE NEGATIVE, MULTIPLY THE EQUATION BY MINUS ONE.
C
      IT = 0
      IF (QUADBF(1) .LT. 0.0) IT=IT+1
      IF (QUADBF(2) .LT. 0.0) IT=IT+1
      IF (QUADBF(3) .LT. 0.0) IT=IT+1
      IF (IT .LE. 1) GO TO 100
      DO 60 I=1,10
 60   QUADBF(I) = -QUADBF(I)
 100  RETURN
      END
**** SOURCE FILE : M0000630.V01   ***
*
C
      SUBROUTINE GCUBIC(P,Q,R,S,Z,NZ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C------ MODULAR SCULPTURED SURFACE ROUTINE ALSO SHARED BY PARAMETRIC
C------ SURFACES. GENERAL SOLUTION OF CUBIC EQN.
C------ INPUT ARE COEFFICIENTS OF CUBIC EQN' P*X**3+Q*X**2+R*X+S=0.
C------ OUTPUT IS SET OF REAL ROOTS Z(I), WHERE I=1 TO NZ
C------ NZ IS THE TOTAL NUMBER OF REAL ROOTS.
C------ PROGRAM HANDLES QUADRATICS AND LINEAR EQNS AS SPECIAL CASES
      DIMENSION Z(3)
      DATA ONE,THD,SMAL/1.D0,0.333333333333333D0,1.0D-10/
      DATA PI,HPI,TPI,TPIO3/3.1415926536D0,1.5707963268D0,
     X                    6.2831853072D0,2.0943951024D0/
      NZ=0
      Z(1)=9999.0D0
      Z(2)=9999.0D0
      Z(3)=9999.0D0
      IF(DABS(P).LT.SMAL) GO TO 200
      TR=Q/(3.0*P)
      A=(R-Q*TR)/P
      B=((2*THD*Q*TR-R)*TR+S)/P
      D=B*B/4.0+A*A*A/27.0
      BH=-B/2.0
      IF(D) 20,10,10
   10 DS=DSQRT(D)
      T1=BH+DS
      T2=BH-DS
      S1=DSIGN(ONE,T1)
      S2=DSIGN(ONE,T2)
      E=S1*(S1*T1)**THD+S2*(S2*T2)**THD
      F=A+E*E
      D=E*E-4.0*F
      NZ=1
      Z(1)=E-TR
      IF(D) 999,30,30
   30 D=DSQRT(D)
      Z(2)=(-E+D)/2.0-TR
      Z(3)=(-E-D)/2.0-TR
      NZ=3
  999 RETURN
   20 S2=DSQRT(-D)
      S1=BH
      T1=DSQRT(S1*S1+S2*S2)
      T2=DARCOS(S1/T1)
      IF(S2.LT.0.0) T2=T2+PI
      BH=2.0*T1**THD
      W1=T2/3.0
      Z(1)=BH*DCOS(W1)-TR
      Z(2)=BH*DCOS(W1-TPIO3)-TR
      Z(3)=BH*DCOS(W1-TPIO3-TPIO3)-TR
      NZ=3
      RETURN
  200 IF(DABS(Q).LT.SMAL) GO TO 300
      D=R*R-4.0*Q*S
      IF(D.LT.0.0) RETURN
      D=DSQRT(D)
      W1=Q+Q
      Z(1)=(-R+D)/W1
      Z(2)=(-R-D)/W1
      NZ=2
      RETURN
  300 IF(DABS(R).LT.SMAL) RETURN
      Z(1)=-S/R
      NZ=1
      RETURN
      END
**** SOURCE FILE : M0000909.V01   ***
*
C...  FORTRAN SUBROUTINE GCYL                    6/70      RW
C
C        CANONICAL FORM OF CYLINDER
C        1. X-COORDINATE OF POINT ON AXIS         (XO)
C        2. Y-COORDINATE OF POINT ON AXIS         (YO)
C        3. Z-COORDINATE OF POINT ON AXIS         (ZO)
C        4. X-COMPONENT OF NORMALIZED AXIS VECTOR (A)
C        5. Y-COMPONENT OF NORMALIZED AXIS VECTOR (B)
C        6. Z-COMPONENT OF NORMALIZED AXIS VECTOR (C)
C        7. RADIUS OF CYLINDER                    (R)
C
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      SUBROUTINE GCYL(CANON,QUADBF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION CANON(10),QUADBF(10)
C
C        INITALIZATION
C
      XO=CANON(1)
      YO=CANON(2)
      ZO=CANON(3)
      A=CANON(4)
      B=CANON(5)
      C=CANON(6)
      R=CANON(7)
      DI=1.-C**2
C
C
C       DEFAULT CASE
C
      IF(A.NE.B)GO TO 10
      IF(A.NE.0)GO TO 10
C
      DO 2 J=1,2
    2 QUADBF(J)=1.0
C
      DO 3 J=3,6
    3 QUADBF(J)=0.0
C
      QUADBF(7)=-2.0*XO
      QUADBF(8)=-2.0*YO
      QUADBF(9)=0.0
      QUADBF(10)=XO**2+YO**2-R**2
C
      GO TO 50
C
C
C
   10 QUADBF(1)=(A**2*C**2+B**2)/DI
C
      QUADBF(2)=(B**2*C**2+A**2)/DI
C
      QUADBF(3)=DI
C
      QUADBF(4)=-2.0*B*C
C
      QUADBF(5)=-2.0*A*C
C
      QUADBF(6)=2.0*((A*B*C**2-A*B)/DI)
C
      QUADBF(7)=2.0*((-XO*A**2*C**2-YO*A*B*C**2-XO*B**2+YO*A*B)/DI+ZO*A*
     1C)
C
      QUADBF(8)=2.0*((-YO*B**2*C**2-XO*A*B*C**2+XO*A*B-YO*A**2)/DI+ZO*B*
     1C)
C
      QUADBF(9)=2.0*(-ZO*DI+A*C*XO+YO*B*C)
C
      QUADBF(10)=(XO**2*A**2*C**2+YO**2*B**2*C**2+2.0*XO*YO*A*B*C**2+XO*
     1*2*B**2-2.0*XO*YO*A*B+YO**2*A**2)/DI+ZO**2*DI-2.0*XO*ZO*A*C-2.0*YO
     2*ZO*B*C-R**2
C
 50    CONTINUE
C       RETURN TO CALLING PROGRAM
      RETURN
      END
**** SOURCE FILE : M0000918.V01   ***
*
C...  FORTRAN SUBROUTINE GPLANE                  6/70      RW
C
C  PURPOSE
C        THIS SUBROUTINE TRANSLATES THE CANONICAL FORMS
C        OF THE APT GEOMETRY (PLANE) INTO THE COEFFICIENTS OF
C        THE QUADRATIC. COEFFICIENTS ARE STORED
C        IN "QUADBF".
C        SUBROUTINE IS CALLED.
C
C        THE CANONICAL FORM OF PLANE IS C*X + C*Y + C*Z + D = 0
C        QUADRATIC EQUATION IS C*X + C*Y + C*Z - D = 0
C
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      SUBROUTINE GPLANE(CANON,QUADBF)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION CANON(10),QUADBF(10)
C
C        ZERO COEFFICIENTS
C
      DO 5 J=1,6
 5    QUADBF(J)=0.0
C
C        TEST FOR NEGATIVE COEFFICIENTS
C
      M = 0
      DO 6 J = 1,3
      IF (CANON(J).LT. 0.0) M = M - 1
      IF (CANON(J).GT. 0.0) M = M + 1
 6    CONTINUE
C
C        IF A MAJORITY OF COEFFICIENTS ARE NEGATIVE, MULTIPLY BY -1
      S = 1.0
      IF (M.LT.0) S = -1.0
      QUADBF(7) = S * CANON(1)
      QUADBF(8) = S * CANON(2)
      QUADBF(9) = S * CANON(3)
      QUADBF(10)=-S * CANON(4)
C
C
C     RETURN TO CALLING PROGRAM
C
 8    RETURN
      END
**** SOURCE FILE : M0000919.V01   ***
*
C...  FORTRAN SUBROUTINE GQUAD                   7/70      RW
C        CANONICAL FORM OF QUADRATIC
C        1. COEFFICIENT OF X**2 (A)
C        2. COEFFICIENT OF Y**2 (B)
C        3. COEFFICIENT OF Z**2 (C)
C        4. CONSTANT TERM       (D)
C        5. COEFFICIENT OF 2YZ  (F)
C        6. COEFFICIENT OF 2XZ  (G)
C        7. COEFFICIENT OF 2XY  (H)
C        8. COEFFICIENT OF 2X   (P)
C        9. COEFFICIENT OF 2Y   (Q)
C       10. COEFFICIENT OF 2Z   (R)
C
C        EQUATION
C
C        A*X**2+B*Y**2+C*Z**2+2*F*Y*Z+
C        2*G*X*Z+2*H*X*Y+2*P*X+2*Q*Y+
C        2*R*Z+D=0
C
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      SUBROUTINE GQUAD(CANON,QUADBF)
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)
      DIMENSION CANON(10),QUADBF(10)
C
      DO 2 I=1,3
 2    QUADBF(I)=CANON(I)
      DO 5 I=4,9
 5    QUADBF(I)=CANON(I+1) * 2.0
      QUADBF(10)=CANON(4)
C
      RETURN
      END
**** SOURCE FILE : M0000920.V01   ***
*
C...  FORTRAN SUBROUTINE GSPHER                  7/70      RW
C
C  PURPOSE
C        THIS SUBROUTINE TRANSLATES THE CANONICAL FORMS
C        OF THE APT GEOMETRY (SPHERE) INTO THE COEFFICIENTS
C        OF THE QUADRATIC. COEFFICIENTS ARE STORED IN
C        "QUADBF" AND THE QUADRATIC OUTPUT
C        SUBROUTINE IS CALLED.
C
C
C        CANONICAL FORM OF SPHERE
C        1. X-COORDINATE OF CENTER OF SPHERE     (XC)
C        2. Y-COORDINATE OF CENTER OF SPHERE     (YC)
C        3. Z-COORDINATE OF CENTER OF SPHERE     (ZC)
C        4. RADIUS OF SPHERE                     (R)
C
C        EQUATION
C        X**2 + Y**2 + Z**2 - 2XC*X - 2YC*Y - 2ZC*Z +
C                            (XC**2 + YC**2 + ZC**2 - R**2)
C
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      SUBROUTINE GSPHER(CANON,QUADBF)
C
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)
      DIMENSION CANON(10),QUADBF(10)
C
      DO 2 J=1,3
 2    QUADBF(J)=1.0
C
      DO 3 J=4,6
 3    QUADBF(J)=0.0
C
C        COMPUTE C*X TERM
C
      KX=1
      KY=2
      KZ=3
      KR=4
      QUADBF(7)=CANON(KX)*(-2.0)
C
C        COMPUTE C*Y TERM
C
      QUADBF(8)=CANON(KY)*(-2.0)
C
C        COMPUTE C*Z TERM
C
      QUADBF(9)=CANON(KZ)*(-2.0)
C
C        COMPUTE CONSTANT TERM
C
      QUADBF(10)=(CANON(KX)**2)+(CANON(KY)**2)+(CANON(KZ)**2)
      QUADBF(10)=QUADBF(10)-(CANON(KR)**2)
C
C        RETURN TO CALLING PROGRAM
C
      RETURN
      END
**** SOURCE FILE : M0000921.V02   ***
*
C...  FORTRAN SUBROUTINE GSURF                   7/70      RW
C
C PURPOSE      CONTROL ROUTINE TO TRANSFORM APT SURFACE CANONICAL FORMS
C              INTO QUADRIC EQUATION COEFFICIENTS.
C
C CALLING SEQUENCE    CALL GSURF(COEBUF,CANON,MODE,ISIZ,ERRFLG)
C
C ARGUMENTS    COEBUF        ARRAY TO CONTAIN QUADRIC EQUATION COEF.
C
C              CANON         INPUT ARRAY CONTAINING CANONICAL FORM
C
C              MODE          MODE OF CANONICAL FORM
C
C              ISIZ          SIZE OF CANONICAL FORM
C
C              ERRFLG        LOGICAL FLAG WHICH IS RETURNED AS TRUE ONLY
C                            IF MODE IS NOT A QUADRIC SURFACE.
C
C CALLED BY    APT102
C              APT104
C
C SUBSIDIARIES TYPE              ENTRY
C              SUBROUTINE        GCIRCL
C              SUBROUTINE        GCONE
C              SUBROUTINE        GCYL
C              SUBROUTINE        GPLANE
C              SUBROUTINE        GQUAD
C              SUBROUTINE        GSPHER
C              SUBROUTINE        TRANSF
C
C RESTRICTIONS NONE
C
C DIAGNOSTICS  NONE
C
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      SUBROUTINE GSURF(COEBUF,CANON,MODE,ISIZ,ERRFLG)
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)
      LOGICAL ERRFLG
      DIMENSION COEBUF(10),CANON(10),REFSRF(10)
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'KNUMBR.INC'
C
C
      DO 5 I=1,ISIZ
    5 REFSRF(I) = CANON(I)
      ERRFLG = .FALSE.
C
C      MODE = 1   2   3   4   5   6   7   8   9 10  11  12  13  14  15
      GO TO(101,101,103,104,105,106,106,106,109,106,130,130,130,106,130,
C      MODE = 16 17  18  19  20  21  22  23  24  25  26
     1      130,130,130,130,130,130,130,130,130,130,130), MODE
C
C...  A LINE OR PLANE.
C
   10 CALL GPLANE (REFSRF, COEBUF)
      GO TO 100
C
C...  A CYLINDER.
C
   30 CALL GCYL (REFSRF, COEBUF)
      GO TO 100
C
C...  A CIRCLE.
C
   40 CALL GCIRCL (REFSRF, COEBUF)
      GO TO 100
C
C...  A SPHERE.
C
   50 CALL GSPHER (REFSRF, COEBUF)
      GO TO 100
C
C...  A HYPERBOLA, LCONIC, ELLIPSE, GCONIC, OR QUADRIC.
C
   60 CALL GQUAD (REFSRF, COEBUF)
      GO TO 100
C
C...  A CONE.
C
   90 CALL GCONE (REFSRF, COEBUF)
  100 RETURN
C
C...  TRANSFORM TO LOCAL COORDINATE SYSTEM IF REFSYS IN EFFECT.
C
  101 IR = K4
      ASSIGN 10 TO M
      GO TO 110
  103 IR = K5
      ASSIGN 30 TO M
      GO TO 110
  104 IR = K5
      ASSIGN 40 TO M
      GO TO 110
  105 IR = K2
        ASSIGN 50 TO M
      GO TO 110
  106 IR = K1
      ASSIGN 60 TO M
      GO TO 110
  109 IR = K5
      ASSIGN 90 TO M
  110 IF(REFFLG) CALL TRANSF(REFSRF,CANON,IR,ISIZ,K0)
      GO TO M,(10,30,40,50,60,90)
C
  130 ERRFLG = .TRUE.
      GO TO 100
      END
**** SOURCE FILE : M0002844.V04   ***
*
C
C.....FORTRAN SUBROUTINE             LINDEF...              5/1/68   GK
C
C              FORTRAN LOGICAL FUNCTION LINDEF
C
C PURPOSE      TO DETERMINE WHETHER A LINE HAS BEEN DEFINED
C              AND IS A VERTICAL PLANE.
C
C LINKAGE      CALL LINDEF (A, N)
C
C ARGUMENTS    A       ARRAY CONTAINING THE CANONICAL FORM OF
C                      THE LINE
C              N       ERROR CODE OF THE DIAGNOSTIC TO BE PRINTED
C                      IN CASE THE PLANE IS NOT VERTICAL
C
C SUBSIDIARIES TYPE                ERROR
C              REAL FUNCTION       ABS
C              LOGICAL FUNCTION    CKDEF
C              SUBROUTINE          ERROR
C
      LOGICAL FUNCTION LINDEF (LIN,NM)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION LIN(4)
      DOUBLE PRECISION LIN
      LOGICAL CKDEF
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'ZNUMBR.INC'
      MN=NM
C
C
C...     CHECK WHETHER INPUT CANONICAL FORM IS DEFINED
C
      IF (CKDEF(LIN)) GO TO 1
C
C...     CHECK WHETHER LINE IS WITHIN TOLERANCE OF VERTICAL
C
      IF (DABS(LIN(3)).LE.Z1EM5) GO TO 2
C
C...     ISSUE DIAGNOSTIC
C
      CALL ERROR(MN,'LINDEF  ')
      IF(MN.EQ.2.OR.MN.EQ.3.OR.MN.EQ.92) GO TO 2
C
C...     RETURN VALUE TRUE
C
    1 LINDEF=.TRUE.
      GO TO 9
C
C...     RETURN VALUE FALSE
C
    2 LINDEF=.FALSE.
    9 RETURN
       END
**** SOURCE FILE : M0008153.W01   ***
*
C
C              FORTRAN SUBROUTINE LOGIF
C
C LINKAGE      SUBROUTINE LOGIF(TEMP,MODE,COM1,COM2)
C
C         SUBSIDIARIES              CALLED FROM
C         NONE                      TYPE           ENTRY
C                                                  XCALL
C
      SUBROUTINE LOGIF(TEMP,MODE,COM1,COM2)
C
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C*
C     TEMP   1.D0 = .TRUE. ; 0.D0 = .FALSE.
C     MODE   COMPARATIVE CODE
C            1      2      3      4      5      6      7      8     9
C            EQ     NE     GE     LE     GT     LT     NOT    OR    AND
C     COM1  1ST LOGICAL OR RELATIONAL OPERATOR
C     COM2  2ND LOGICAL OR RELATIONAL OPERATOR
C**
      DATA TRUE,FALSE,SMAL,DIVIS/1.D0,0.D0,1.D-12,2.D0/
C
      COMP1=COM1
      COMP2=COM2
C
      GOTO(10,20,30,40,50,60,70,80,90),MODE
C                   ** COMP1 EQUAL COMP2 **
   10 IF(DABS(COMP1-COMP2).GT.SMAL)GOTO 110
      GOTO 100
C                   ** COMP1 NOT EQUAL COMP2 **
   20 IF(DABS(COMP1-COMP2).GT.SMAL)GOTO 100
      GOTO 110
C                   ** COMP1 GREATER EQUAL COMP2 **
   30 IF(COMP1.GT.COMP2)GOTO 100
      GOTO 10
C                   ** COMP1 LESS EQUAL COMP2 **
   40 IF(COMP1.LT.COMP2)GOTO 100
      GOTO 10
C                   ** COMP1 GREATER THAN COMP2 **
   50 IF(COMP1.GT.(COMP2+SMAL))GOTO 100
      GOTO 110
C                   ** COMP1 LESS THAN COMP2 **
   60 IF(COMP1.LT.(COMP2-SMAL))GOTO 100
      GOTO 110
C                   ** .NOT. COMP1 **
   70 TEMP=DINT(DABS(COMP1-TRUE)+SMAL)
      GOTO 120
C                   ** COMP1 .OR. COMP2 **
   80 TEMP=DINT((COMP1+COMP2+TRUE)/DIVIS+SMAL)
      GOTO 120
C                   ** COMP1 .AND. COMP2 **
   90 TEMP=DINT(COMP1*COMP2+SMAL)
      GOTO 120
C
  100 TEMP=TRUE
      GOTO 120
  110 TEMP=FALSE
  120 RETURN
      END
**** SOURCE FILE : M0000938.V06   ***
*
C
C...  FORTRAN SUBROUTINE               NPAT      3/69      SR
C
C PURPOSE      TO COMPUTE THE COORDINATES OF THE NTH POINT OF A PATERN
C
C LINKAGE      CALL NPAT(RES,NPT)
C
C ARGUMENTS    RES     ARRAY TO CONTAIN THE COORDINATES
C                      OF THE COMPUTED POINT
C              NPT     NUMBER OF THE POINT
C
C SUBSIDIARIES TYPE                ENTRY
C              REAL FUNCTION       DCOS
C              REAL FUNCTION       DSIN
C
      SUBROUTINE NPAT(RES,NPT)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
      DIMENSION RES(3)
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'KNUMBR.INC'
      INCLUDE 'BLANKCOM.INC'
C
C...       INITIALIZE
C
      CHARACTER*6 HPOINT,TEST
      DATA HPOINT /'ZPOINT'/
      N=NPT
      INDEX=K0
      TNC=Z0
C
C...       DETERMINE PATERN TYPE AND BRANCH
C
      K=BCANON(2)+Z1EM5
      GO TO(100,200,300,400,500),K
C
C...       LINEAR PATERN
C
  100 IF(N.EQ.K1)GO TO 120
      NN=N+K9
      DO 110 I=11,NN
      II=INDEX+I
  110 TNC=TNC+BCANON(II)
  120 DO 130 I=1,3
      II=INDEX+I+K4
  130 RES(I)=BCANON(II)+(TNC*BCANON(II+3))
      GO TO 999
C
C...       CIRCULAR PATERN
C
  200 IF(N.EQ.K1)GO TO 220
      NN=N+K9
      DO 210 I=11,NN
      II=INDEX+I
  210 TNC=TNC+BCANON(II)
  220 ANG=DEGRAD*(BCANON(INDEX+9)+(BCANON(INDEX+10)*TNC))
      RES(1)=BCANON(INDEX+5)+(BCANON(INDEX+8)*DCOS(ANG))
      RES(2)=BCANON(INDEX+6)+(BCANON(INDEX+8)*DSIN(ANG))
      RES(3)=BCANON(INDEX+7)
      GO TO 999
C
C...       GRID PATERN
C
  300 ISIZE=BCANON(INDEX+6)+Z1EM5
      NOPTS=BCANON(INDEX+7)+Z1EM5
      TTNC=Z0
      IF(N.EQ.K1)GO TO 350
      NN=N-K1
      IONE=MOD(NN,NOPTS)
      ITWO=NN/NOPTS
      IF(MOD(ITWO,K2).EQ.K1)IONE=NOPTS-IONE-K1
      IF(IONE.EQ.K0)GO TO 320
      DO 310 I=1,IONE
      II=(INDEX+13)+I
  310 TNC=TNC+BCANON(II)
  320 IF(ITWO.EQ.K0)GO TO 350
      DO 330 I=1,ITWO
      II=(INDEX+13+ISIZE)+I
  330 TTNC=TTNC+BCANON(II)
  350 DO 360 I=1,3
      II=(INDEX+10)+I
      III=ISIZE+II
  360 RES(I)=BCANON(II-3)+(TNC*BCANON(II))+(TTNC*BCANON(III))
      GO TO 999
C
C...       RANDOM PATERN
C
  400 IPNTCT=K0
      INDEX=K4
  410 CALL HOLFRM(BCANON(INDEX+1),TEST,1,6,NWD)
      IF (TEST.NE.HPOINT) GO TO 450
      IPNTCT=IPNTCT+K1
      IF(IPNTCT.NE.N)GO TO 430
      DO 420 I=1,3
      II=INDEX+I+K1
  420 RES(I)=BCANON(II)
      GO TO 999
  430 INDEX=INDEX+K4
      GO TO 410
  450 NOPTS=BCANON(INDEX+4)+Z1EM5
      IPNTCT=IPNTCT+NOPTS
      IF(IPNTCT.LT.N)GO TO 460
      N=N+NOPTS-IPNTCT
      K=BCANON(INDEX+2)+Z1EM5
      GO TO(100,200,300),K
  460 ISIZE=BCANON(INDEX+3)
      INDEX=INDEX+ISIZE+K1
      GO TO 410
C
C...       PERIM PATERN
C
  500 GO TO 999
C
  999 RETURN
      END
**** SOURCE FILE : M0000726.ORG   ***
*
      SUBROUTINE NULL
C---    PROVIDES A COMMON ENTRY POINT FOR DUMMY ROUTINES
      RETURN
      END
**** SOURCE FILE : M0001206.W02   ***
*
C
C
C.....FORTRAN SUBROUTINE           PRINT
C
C     NEW REORGANIZED VERSION  OCT-1988 E.MCLELLAN
C
C PURPOSE          TO EJECT A PAGE,TAKE A DUMP,TURN THE PRINT FLAG
C                  INTERROGATED BY DEFEXT ON OR OFF,OR PRINT TITLES,
C                  NUMBER IDENTIFIERS OR A SPECIFIED NUMBER OF CANONICAL
C                  FORMS.
C
C CALLING SEQUENCE CALL PRINT(CODE,ARRAY,NUMBER)
C
C ARGUMENTS        CODE             =1,TO PRINT BLOCK 1 SCALARS WITH A
C                                      DESCRIPTIVE HEADER
C                                   =2,TO PRINT BLOCK 2 SCALARS WITH A
C                                      DESCRIPTIVE HEADER
C                                   =3,TO PRINT BLOCK 3 CANONICAL FORMS
C                                      WITH A DESCRIPTIVE HEADER
C                                   =4,TO PRINT BLOCK 1 SCALARS WITH NO
C                                      HEADER
C                                   =5,TO PRINT BLOCK 2 SCALARS WITH NO
C                                      HEADER
C                                   =6,TO PRINT BLOCK 3 CANONICAL FORMS
C                                      WITH NO HEADER
C                                   =7,TO EJECT A PAGE
C                                   =8,TO TAKE A DUMP
C                                   =9,TO PRINT A TITLE
C                                   =10, TO PRINT A NUMBER IDENTIFIER
C                                       (I.E. HANDLES PRINT/2,NUMBER)
C                                   =11,TO TURN PRINT FLAG ON
C                                   =12,TO TURN PRINT FLAG OFF
C                                   =13, TO TURN PCHLST FLAG ON
C                                   =14, TO TURN PCHLST FLAG OFF
C                                   =15, TO PRINT NAME ON TABCYL LISTING
C                                   =16, FOR TABCYL PRINT ON
C                                   =17, FOR TABCYL PRINT OFF
C                                   =18/19 FOR SS-PRINT ON/OFF
C                                   =20/21 FOR SS-TEST-PRINT ON/OFF
C                                   =22/23 FOR AVOIDANCE ACTION PRINT
C                                          (AVPRT) ON/OFF
C                  ARRAY            IF PRINTING IS TO TAKE PLACE,ARRAY
C                                   CONTAINS THE TITLE,NUMBER,OR FIRST
C                                   CANONICAL FORM TO BE PRINTED.
C                                   OTHERWISE ARRAY IS A DUMMY ARGUMENT.
C                  NUMBER           IF CANONICAL FORMS ARE TO BE PRINTED
C                                   NUMBER CONTAINS THE NUMBER OF FORMS
C                                   TO PRINT.
C
C CALLED BY        DEFEXT,APT040,APT045,APT102,APT103,APT089
C
C SUBSIDIARIES     TYPE             ENTRY
C                  ----             -----
C                  INTEGER FUNCTION ADDRSS
C                  SUBROUTINE       INCAN
C                  SUBROUTINE       RECORD
C                  SUBROUTINE       TRANSF
C                  SUBROUTINE       UNPACK
C                  INTEGER FUNCTION XCANON
C                  INTEGER FUNCTION BCDF
C                  SUBROUTINE       HOLFRM
C
C RESTRICTIONS     CANONICAL FORMS TO BE PRINTED MUST BE CONTIGUOUS
C
C DIAGNOSTICS      ERROR CODE       COMMENT
C                  ----------       -------
C                   NONE            INVALID CANONICAL FORM ENCOUNTERED.
C                                   PRINTING SUPPRESSED
C
C METHOD           AN 'IF THEN ELSE' STRUCTURE IS USED TO DIRECT
C                  PROCESSING ACCORDING TO CODE.
C                  NOTE THAT BECAUSE THERE IS MUCH COMMON PROCESSING
C                  FOR CODE=1,2,3,4,5,6 AND 15, THESE ARE PROCESSED
C                  IN THE FIRST BLOCK OF THE STRUCTURE WITH ADDITIONAL
C                  'IF THEN ELSE' STRUCTURES TO DIRECT SUBSEQUENT
C                  PROCESSING ACCORDING TO THE INDIVIDUAL CODES
C
      SUBROUTINE  PRINT(CODE,ARRAY,NUMBER)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
      DIMENSION  ARRAY(1)
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'IDEF.INC'
C
C
C
C
C...  LOCAL VARIABLES
      INCLUDE 'BLANKCOM.INC'
      DIMENSION X(COMSIZ)
      EQUIVALENCE (COM(1),X(1))
C
      DOUBLE PRECISION NAME
      CHARACTER F13*18,F30*19,F40*55
      INCLUDE  'DARRAY.INC'
      COMMON/SSPRT/SSPRT,SSTEST
      LOGICAL SSPRT,SSTEST
      INCLUDE 'AVCPRM.INC'
C
      INTEGER DLR,LP,RP,ZERO,SUB,BCD,CODE,COUNT,SIZE,PLUS,BBBB,STR
C
      LOGICAL LDAFLG,BNDFLG,BNDSUB,NAMFLG
      CHARACTER BLK,LPAREN,DOLLAR,NUMB,RPAREN,B,Z,STAR,NAM(16),CNAM*16,
     + STG(8),STAGE*8,CHECK*8,RIGHT*5,MODHS*4,
     + TYPE*6,NO(4),CNUM*4
C
      DIMENSION TYPE(30),NAME(2),A(17),IA(34),REFSRF(16),IRFSRF(32),
     1            MODHS(2),INAM(4),ITEMP(2)
C
      EQUIVALENCE  (C,ISKIP),(A(1),IA(1)),(REFSRF(1),IRFSRF(1)),
     +             (NAME(1),INAM(1)),(ITEMP(1),TEMP),
     +             (STG(1),STAGE),(NO(4),NUMB),
     +             (NAM(1),CNAM),(NO(1),CNUM)
      EXTERNAL XCANON,ADDRSS,CKDTR,CKSTR
      INTEGER XCANON,ADDRSS,BCDF
      LOGICAL CKDTR,CKSTR
      SAVE KRIGHT
C
      DATA MODHS/'  IN',' OUT'/
      DATA B,Z,STAR/' ','Z','*'/
      DATA  BLK,LPAREN,ZERO,STAGE,DOLLAR,RIGHT,RPAREN
     1 /' ','(',0,'0000000)','$','RIGHT',')'/
      DATA  TYPE /'LINE  ','PLANE ','CYLNDR','CIRCLE','SPHERE','HYPERB',
     1                     'LCONIC','ELLIPS','CONE  ','GCONIC','TABCYL',
     2            'RLDSRF','PCONIC','QADRIC','PARSRF','**16**','**17**',
     3            'MATRIX','POINT ','VECTOR','SCALAR','**22**','**23**',
     4'**24**','STRING','PATERN','BOUNDS','OBJECT','SSURF ','SCURV '/
C
      DATA F13/'TABULATED CYLINDER'/
      DATA F30/'INCORRECTLY DEFINED'/
      DATA F40
     +    /'INVALID CANONICAL FORM ENCOUNTERED. PRINTING SUPPRESSED'/
      DATA KRIGHT /0/
      DATA     KU,KV/10000,10/
C
C ********************************************************************
C
C
C...      P R O C E S S   A C C O R D I N G   T O   C O D E
C
      IF ( (CODE.LE.6).OR.(CODE.EQ.15) ) THEN
        NAMFLG = .FALSE.
        IPH=1
        MODE = 21
        JJ = 0
        SIZE=1
        BNDFLG=.FALSE.
        LDAFLG = .FALSE.
C
C ... DETERMINE VIRTUAL INDEX OF ARRAY(1) IN X-ARRAY.
C
        INDEX = (ADDRSS(ARRAY) - ADDRSS(X))/KWRDSZ + 1
        IABS = INDEX
        IF (CANFLG) CALL INCAN(INDEX)
C
C... PROCESS ACCORDING TO TYPE
C
        IC=MOD(CODE,3)
        IF (IC.EQ.0) THEN
C.... CODE = 3,6 OR 15
          JJ=1
        ELSE IF (IC.EQ.1) THEN
C.... CODE = 1 OR 4
          SUB=0
        ELSE
C.... CODE = 2 OR 5
          CONTINUE
        ENDIF
C
C.... FOR EACH CANONICAL FORM REQUIRED
C
        DO 5000 II = 1,NUMBER
C
C ... DETERMINE ABSOLUTE INDEX.
C
60000     C = X(IABS - JJ)
          IF (ISKIP .GT. 0 .AND. ISKIP .LE. 1024) THEN
            INDEX = INDEX + ISKIP
            IABS = INDEX
            IF (CANFLG) IABS = XCANON(INDEX)
            GO TO 60000
          ENDIF
C
          IF (IC.EQ.1) THEN
C
C...  P R I N T   B L O C K   1   S C A L A R S
C
            NAMEPT = IABS + 1
            GO TO 50000
C
          ELSE IF (IC.EQ.2) THEN
C
C...  P R I N T   B L O C K   2   S C A L A R S
C
            SUB = X(IABS + 1)
C
          ELSE
C
C...  P R I N T   B L O C K   3   S U R F A C E S
C
C
C... GET SIZE,MODE,AND SUBSCRIPT OF NEXT FORM
C
            CALL UNPACK(X(IABS),MODE,SIZE,SUB)
            IF (MODE .EQ. 27 .OR. MODE .EQ. 28) BNDFLG=.TRUE.
            IF (MODE.GT.0.AND.MODE.LT.31.AND.SIZE.GT.0.AND.
     /         (SIZE.LT.13 .OR. BNDFLG)) THEN
C
C... IF FORM IS A LARGE DATA ARRAY, TURN ON LDAFLG
C
              IF (MODE.EQ.11.OR.MODE.EQ.12.OR.MODE.EQ.26.OR.
     1            MODE.EQ.29.OR.MODE.EQ.30) THEN
                LDAFLG = .TRUE.
              ENDIF
            ELSE
              CALL CFORM(F40,DARRAY,5,55)
              CALL CPRINT (DARRAY)
              GOTO 99999
            ENDIF
          ENDIF
C
C ... FIND ALPHANUMERIC NAME.
C
          IF (SUB .LT. 0 .OR. SUB .GT. 9999) THEN
            CALL CFORM(F40,DARRAY,5,55)
            CALL CPRINT (DARRAY)
            GOTO 99999
          ELSE IF (SUB .GT. 1) THEN
C
C ... DETERMINE ABSOLUTE LOCATION OF FORM NAME.
C
            IF (.NOT.NAMFLG) THEN
              NAMFLG = .TRUE.
              NAMEPT = IABS + SIZE + 1 - JJ
              IK = INDEX + SIZE + 1 - JJ
              DO 60110 MM = 2,SUB
60102           C = X(NAMEPT)
                IF (ISKIP .LE. 0 .OR. ISKIP .GT. 1024) THEN
                  NAMEPT = NAMEPT + SIZE + 1
                  IK = IK + SIZE + 1
                ELSE
                  IK = IK + ISKIP
                  NAMEPT = IK
                  IF (CANFLG) NAMEPT = XCANON(IK)
                  GO TO 60102
                ENDIF
60110         CONTINUE
C
              IF (CANFLG) IABS = XCANON(INDEX)
              SAVNAM = X(NAMEPT)
            ENDIF
C
            NAME(1) = SAVNAM
            GO TO 50002
          ELSE
            NAMFLG = .FALSE.
            NAMEPT = IABS + SIZE + 1 - JJ
          ENDIF
C
C...  U T I L I T Y   P R I N T   M O D U L E
C
C
C... SET NAME(1) = CURRENT CANONICAL FORM NAME
C     AND, IF LDA, SET SIZE = SIZE OF EXTERNAL CANONICAL FORM.
C
50000     NAME(1) = X(NAMEPT)
50002     IF (LDAFLG) SIZE = X(IABS + 1)
          INAM(3) = BCDF('    ')
          INAM(4) = INAM(3)
C
C...  IF FORM NAME BEGINS WITH $ OR Z$, SUPPRESS PRINTING IT
C
          CALL HOLFRM(INAM,CNAM,1,16,NWD)
          IF((NAM(1).EQ.DOLLAR).OR.((NAM(1).EQ.Z).AND.
     1      (NAM(2) .EQ. DOLLAR))) THEN
C
C ... PRINT UNASSIGNED NESTED ELEMENTS FOR PRINT/ON.
C
            IF (NUMBER .GT. 1 .OR. MODE .EQ. 21) GO TO 50100
            CALL DNONAM(NAME(1))
          ELSE
C
C... IF THE FORM IS SUBSCRIPTED, CONVERT THE SUBSCRIPT TO CHARACTERS
C... AND LEFT JUSTIFY IT NEXT TO THE FORM NAME READY FOR PRINTING
C
            IF (SUB .NE. 0) THEN
              IF (CODE .EQ. 6 .OR. CODE .EQ. 5) GO TO 50060
              DO 50010 J=4,9
                IF (NAM(J-2) .EQ. BLK)  GO TO 50020
50010         CONTINUE
50020         NAM(J-1) = LPAREN
              N = SUB
              DO 50030  I = 1,7
                K=8-I
                BCD = MOD(N,10)
                CALL ICONV(BCD,NUMB,1,1)
                STG(K) = NUMB
                N = N/10
                IF (N .EQ. 0)  GO TO 50040
50030         CONTINUE
50040         DO 50050 I=K,8
                NAM(J) = STG(I)
                J = J + 1
50050         CONTINUE
              NAM(J-1)=RPAREN
            ENDIF
          ENDIF
C
C... WRITE HEADER CONTAINING FORM NAME,MODE AND SIZE
C     BUT SUPPRESS IF FORM IS UNDEFINED.
C
50060     IF (CKDTR(X(IABS))) GO TO 50100
          IF(IPH.EQ.1) THEN
            ISEQ = ISEQNO
            CALL RECORD(ISEQNO)
            IF (ISEQ .EQ. ISEQNO) THEN
              IPH = 2
            ELSE
              CALL CFORM('-',DARRAY,1,1)
              IPH=2
              CALL ICONV (ISEQNO,DARRAY,2,4)
              CALL CFORM('.',DARRAY,6,1)
            ENDIF
          ENDIF
C
C... IF PROCESSING A PRINT/2 STATEMENT, SUPPRESS PRINTING THE HEADER.
C
50062     IF (CODE .LE. 3) THEN
            CALL CFORM(CNAM,DARRAY,7,12)
            CALL CFORM(TYPE(MODE),DARRAY,19,6)
            CALL ICONV(SIZE,DARRAY,25,5)
            IF(LDAFLG) CALL CPRINT(DARRAY)
          ENDIF
C
C ... PRINT DIAGNOSTIC IF INCORRECTLY DEFINED.
C
          IF (CKSTR(X(IABS))) THEN
            CALL CFORM(F30,DARRAY,30,19)
            CALL CPRINT (DARRAY)
            GOTO 50100
          ENDIF
          IF (LDAFLG .OR. MODE.EQ.15) GOTO 50100
C
          IF (IC.EQ.1) THEN
C
C BLOCK 1 SCALARS
C
            K=30
            CALL FCONV ( X(IABS) , DARRAY,K,13,6)
            CALL CPRINT (DARRAY)
C
          ELSE IF (IC.EQ.2) THEN
C
C BLOCK 2 SCALARS
C
            K=30
            CALL FCONV (X(IABS),DARRAY,K,13,6)
            CALL CPRINT (DARRAY)
C
          ELSE
C
C BLOCK 3 SURFACES
C
C... CHECK IF REFSYS IN EFFECT. IF SO,PRINT FORM IN LOCAL SYSTEM
C
            IF(.NOT.BNDFLG) THEN
              IF (MODE .EQ. 25) THEN
C
C...  PRINT A STRING FORM
C
                A(1) = X(IABS)
                COUNT=(IA(2)+3)/4
                J=COUNT/2+MOD(COUNT,2)
                DO 3020  I = 1,J
                  A(I) = X(IABS + I)
 3020           CONTINUE
                CALL HOLFRM(IA(1),DARRAY,30,COUNT*4,NWD)
                CALL CPRINT (DARRAY)
                GOTO 50100
              ENDIF
C
              DO 3030 J=1,SIZE
                K = IABS + J - 1
                REFSRF(J) = X(K)
 3030         CONTINUE
              IF (REFFLG) THEN
                IF (MODE.EQ.1. OR. MODE.EQ.2) THEN
                  IR = 4
                ELSE IF (MODE.EQ.3 .OR. MODE.EQ.4 .OR. MODE.EQ.9) THEN
                  IR = 5
                ELSE IF (MODE.EQ.5 .OR. MODE.EQ.19) THEN
                  IR = 2
                ELSE IF (MODE.EQ.6 .OR. MODE.EQ.7 .OR. MODE.EQ.8 .OR.
     +                   MODE.EQ.10 .OR. MODE.EQ.14 ) THEN
                  IR = 1
                ELSE IF (MODE.EQ.20) THEN
                  IR = 3
                ELSE
                  GOTO 3038
                ENDIF
                CALL TRANSF(REFSRF,X(IABS),IR,SIZE,0)
              ENDIF
C
C... WRITE FORM ELEMENTS
C
 3038         K=29
              DO 13039 J=1,SIZE
                IF(K+13.LE.120) GO TO 13038
                CALL CPRINT(DARRAY)
                K=17
13038           CALL FCONV (REFSRF(J),DARRAY,K,13,6)
                K=K+13
13039         CONTINUE
              CALL CPRINT(DARRAY)
C
            ELSE
C
C... P R I N T   B O U N D S   A N D   O B J E C T
C
              ISUB = SUB
              DO 50250 L =2,SIZE,2
                K = IABS + L
                NAME(1) = X(K-2)
                CALL HOLFRM(INAM,CNAM,1,8,NWD)
                IF (NAM(1) .EQ. STAR) CALL BADNAM(NAME(1))
                IF (NAM(1) .EQ. DOLLAR) CALL DNONAM(NAME(1))
                ITEMP(1)=BCDF('    ')
                ITEMP(2)=ITEMP(1)
                REFSRF(L) = TEMP
                IF(MODE.EQ.28) GO TO 50235
C
C... BOUNDS
C
50220           INAM(3)=BCDF('    ')
                INAM(4)=INAM(3)
                IUVW = X(K-1)
                IU=IUVW/KU
                SUB=(IUVW-IU*KU)/KV
                IW=IUVW-IU*KU-SUB*KV
                IF(SUB .NE. 0) THEN
C
C... IF THE FORM IS SUBSCRIPTED, CONVERT THE SUBSCRIPT TO CHARACTERS
C... AND LEFT JUSTIFY IT NEXT TO THE FORM NAME READY FOR PRINTING
C
                  DO 50221 J=4,9
                    IF (NAM(J-2) .EQ. BLK)  GO TO 50222
50221             CONTINUE
50222             NAM(J-1) = LPAREN
                  N = SUB
                  DO 50223  I = 1,7
                    K=8-I
                    BCD = MOD(N,10)
                    CALL ICONV(BCD,NUMB,1,1)
                    STG(K) = NUMB
                    N = N/10
                    IF (N .EQ. 0)  GO TO 50224
50223             CONTINUE
50224             DO 50225 I=K,8
                    NAM(J) = STG(I)
                    J = J + 1
50225             CONTINUE
                  NAM(J-1)=RPAREN
                ELSE
                  J=9
                ENDIF
50230           IF (L .EQ. 2) GO TO 50232
                BCD=IW
                IF (IW .EQ. 1 .OR. IW .EQ. 2) THEN
                  CNUM=MODHS(IW)
                ELSE
                  CALL ICONV(BCD,CNUM,1,4)
                ENDIF
                NAM(J+1)=NO(2)
                NAM(J+2)=NO(3)
                NAM(J+3)=NO(4)
                INAM(3)=BCDF(CNAM(9:12))
50232           REFSRF(L )=NAME(2)
C
50235           REFSRF(L -1)=NAME(1)
50250         CONTINUE
              CALL CPRINT(DARRAY)
              K=12
              IF(MODE.EQ.28) K=16
              DO 20251 J=1,SIZE*2,4
                CALL HOLFRM(IRFSRF(J),DARRAY,K,16,NWD)
                K=K+14
                IF(MODE.EQ.27) K=K+4
                IF(K.LE.108) GO TO 20251
                CALL CPRINT (DARRAY)
                K=12
                IF(MODE.EQ.28) K=16
20251         CONTINUE
              CALL CPRINT (DARRAY)
              IPH = 2
              BNDFLG=.FALSE.
              SUB = ISUB
            ENDIF
          ENDIF
C
50100     IF(CODE.EQ.15) THEN
C
C ... P R I N T   N A M E   O N   T A B C Y L   L I S T I N G
C
            CALL RECORD(ISEQNO)
            CALL CFORM('-',DARRAY,1,1)
            CALL ICONV(ISEQNO,DARRAY,2,4)
            CALL CFORM('.',DARRAY,6,1)
            CALL CFORM(F13,DARRAY,8,18)
            CALL CFORM(CNAM,DARRAY,28,12)
            CALL CPRINT (DARRAY)
            GOTO 99999
          ELSE
C
C.... ADVANCE CURRENT FORM INDEX
C
            IF (IC.EQ.1) THEN
              INDEX = INDEX + 2
              IABS = IABS + 2
            ELSE IF (IC.EQ.2) THEN
              D = 3 - MIN0(1,SUB-1)
              INDEX = INDEX + D
              IABS = IABS + D
            ELSE
              IF (LDAFLG) THEN
                SIZE=2
                LDAFLG=.FALSE.
              ENDIF
              D = SIZE + 2 - MIN0(SUB/2,1)
              INDEX = INDEX + D
              IABS = IABS + D
            ENDIF
          ENDIF
 5000   CONTINUE
C
      ELSE IF (CODE.EQ.7) THEN
C
C...  E J E C T   A   P A G E
C
        CALL CFORM('1',DARRAY,1,1)
        CALL CPRINT (DARRAY)
C
      ELSE IF (CODE.EQ.8) THEN
C
C...  T A K E   A   C O R E   D U M P
C
        CONTINUE
C
      ELSE IF (CODE.EQ.9) THEN
C
C...  P R I N T   A   T I T L E
C
        NAMFLG = .FALSE.
        IPH=1
        MODE = 21
        JJ = 0
        SIZE=1
        BNDFLG=.FALSE.
        LDAFLG = .FALSE.
C
C ... DETERMINE VIRTUAL INDEX OF ARRAY(1) IN X-ARRAY.
C
        INDEX = (ADDRSS(ARRAY) - ADDRSS(X))/KWRDSZ + 1
        IABS = INDEX
        IF (CANFLG) CALL INCAN(INDEX)
C
        A(1) = X(IABS)
        COUNT=(IA(2)+3)/4
        CALL CFORM('0',DARRAY,1,1)
        IF (COUNT.EQ.0) THEN
          CALL CPRINT (DARRAY)
        ELSE
          J=COUNT/2+MOD(COUNT,2)
          DO 9010  I = 1,J
            A(I) = X(IABS + I)
 9010     CONTINUE
          CALL HOLFRM(A(1),CHECK,1,8,NWD)
          IF (CHECK(2:6) .EQ. RIGHT)  THEN
            CHECK(5:6)='  '
            IA(2)=BCDF(CHECK(5:8))
            K=(COUNT-1)*4
            IF(K.GT.54) K=54
            CALL HOLFRM(IA(2),DARRAY,66,K,NWD)
            KRIGHT = 1
            CALL CPRINT (DARRAY)
          ELSE
            CALL HOLFRM(IA(1),DARRAY,2,COUNT*4,NWD)
            IF (KRIGHT .EQ. 1) CALL CFORM('+',DARRAY,1,1)
            KRIGHT = 0
            CALL CPRINT (DARRAY)
          ENDIF
        ENDIF
C
      ELSE IF (CODE.EQ.10) THEN
C
C...  P R I N T   N U M  B E R   I D E N T I F I E R
C
        ISEQ = ISEQNO
        CALL RECORD(ISEQNO)
        IF (ISEQ .EQ. ISEQNO) GO TO 10010
        CALL ICONV(ISEQNO,DARRAY,2,4)
        CALL CFORM('.',DARRAY,6,1)
10010   CALL FCONV(ARRAY(1),DARRAY,30,13,6)
        CALL CPRINT (DARRAY)
      ELSE IF (CODE.EQ.11) THEN
                               
C
C...  T U R N   P R I N T   F L A G   O N
C
        PRNTON = .TRUE.
C
      ELSE IF (CODE.EQ.12) THEN
C
C...  T U R N   P R I N T   F L A G   O F F
C
        PRNTON = .FALSE.
C
      ELSE IF (CODE.EQ.13) THEN
C
C ... T U R N   P C H L S T   F L A G   O N
C
        PCHLST = .TRUE.
C
      ELSE IF (CODE.EQ.14) THEN
C
C ... T U R N   P C H L S T   F L A G   O F F
C
        PCHLST = .FALSE.
C
      ELSE IF (CODE.EQ.16) THEN
C
C ... T U R N   T A B P R T   F L A G   O F F
C
C         T O   P R I N T   T A B C Y L S
C
        TABPRT = .FALSE.
C
      ELSE IF (CODE.EQ.17) THEN
C
C ... T U R N   T A B P R T   F L A G   O N
C
C     T O   S U P P R E S S   T A B C Y L   P R I N T O U T
C
        TABPRT = .TRUE.
C
      ELSE IF (CODE.EQ.18) THEN
C
C ... T U R N   S S P R T   F L A G  O N
C
C     T O  P R I N T   S S U R F   A N D   S C U R V
C
C     PRINT/SSPRT ,ON
C
        SSPRT = .TRUE.
C
      ELSE IF (CODE.EQ.19) THEN
C
C ... T U R N   S S P R T   F L A G  O F F
C
C     T O  S U P P R E S S   S S U R F   A N D   S C U R V   P R I N T
C
C     PRINT/SSPRT ,OFF
C
        SSPRT =.FALSE.
C
      ELSE IF (CODE.EQ.20) THEN
C
C     PRINT/SSTEST,ON
C
        SSTEST= .TRUE.
C
      ELSE IF (CODE.EQ.21) THEN
C
C    PRINT/SSTEST,OFF
C
        SSTEST=.FALSE.
C
      ELSE IF (CODE.EQ.22) THEN
C
C     PRINT/AVPRT,ON   - PRINT AVOIDANCE ACTION DETAILS
C
        AVLIST=.TRUE.
C
      ELSE IF (CODE.EQ.23) THEN
C
C     PRINT/AVPRT,OFF   - SUPPRESS PRINT OF AVOIDANCE ACTION DETAILS
C
        AVLIST=.FALSE.
C
      ELSE
C.... NON VALID CODE
      ENDIF
C
C...  E X I T
C
99999 CONTINUE
      END
**** SOURCE FILE : M0002773.V01   ***
*
C....    FORTRAN FUNCTION SUBPROGRAM      PSIGN      4/1/69     RC
C
      REAL FUNCTION PSIGN(A,B)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C  PURPOSE         TO MULTIPLY THE FIRST ARGUMENT BY THE SIGN OF THE
C                  SECOND ARGUMENT  -AND- IF THE SECOND ARGUMENT
C                  IS EQUAL TO ZERO, TO RETURN THE VALUE ZERO
C
C  LINKAGE         VALUE=PSIGN(A,B)
C
C  ARGUMENTS       A AND B ANY REAL VARIABLES
C
C  CALLED BY       QSD
C
C     ------------------------------------------------------------
C
      IF (B) 10,20,10
C
   10 PSIGN=DSIGN(A,B)
      RETURN
C
   20 PSIGN=0.0
      RETURN
      END
**** SOURCE FILE : M0001210.W01   ***
*
C.....FORTRAN SUBROUTINE   ...PUNCH         8/68           SR,KH
C
C                                                10/70     RW
C
C PURPOSE          TO WRITE A SPECIFIED NUMBER OF CONTIGUOUS CANONICAL
C                  FORMS,STARTING WITH A GIVEN CANONICAL FORM,ON THE
C                  SYSTEM PUNCH OUTPUT FILE AS APT DEFINITION
C                  STSTEMENTS WHICH CAN BE INCLUDED IN SUBSEQUENT PART
C                  PROGRAMS. SCALARS ARE WRITTEN INTHE FORM---
C                      VSCALAR VARIABLE = NUMBER.
C                  SURFACE DATA IS WRITTEN IN THE FORM---
C                       SURFACE VARIABLE = SURFACE TYPE/CANON,ELEMENT1,
C                       ELEMENT2,...,ELEMENTN.
C
C CALLING SEQUENCE CALL PUNCH(BLOCK,FORM,NUMBER)
C
C ARGUMENTS        BLOCK            NUMBER OF THE CANONICAL FORM BLOCK
C                                   CONTAINING THE FORMS TO BE PUNCHED.
C                                   (BLOCK 1 CONTAINS UNSUBSCRIPTED
C                                    SCALARS,BLOCK 2 CONTAINS
C                                    SUBSCRIPTED SCALARS,BLOCK 3
C                                    CONTAINS SURFACE CANONICAL FORMS)
C                  FORM             FIRST CANONICAL FORM TO BE PUNCHED.
C                  NUMBER           NUMBER OF CONTIGUOUS FORMS TO BE
C                                   PUNCHED.
C
C CALLED BY        NONE
C
C SUBSIDIARIES     TYPE             ENTRY
C                  ----             -----
C
C                  INTEGER FUNCTION ADDRSS
C                  SUBROUTINE       APT094
C                  SUBROUTINE       INCAN
C                  SUBROUTINE       TRANSF
C                  SUBROUTINE       UNPACK
C                  INTEGER FUNCTION XCANON
C
C RESTRICTIONS     IF THERE IS MORE THAN ONE FORM TO BE PUNCHED,ALL
C                  FORMS MUST LIE IN THE SAME BLOCK AND BE CONTIGUOUS.
C                  THE PUNCHING OF TEMPORIES IS SUPPRESSED.
C
C DIAGNOSTICS      ERROR CODE       COMMENT
C                  ----------       -------
C
C                  NONE             X WAS INCORRECTLY DEFINED AND
C                                   WAS NOT PUNCHED.
C
C
C METHOD           A COMPUTED GO TO ON BLOCK IS EXECUTED TO BRANCH TO
C                  THE PROCESSING APPROPRIATE TO THE BLOCK CONTAINING
C                  THE CANONICAL FORMS TO BE PUNCHED.THE VALUE OF NUMBER
C                  SPECIFIES HOW MANY FORMS ARE TO BE PUNCHED.EACH FORM
C                  IS CHECKED TO DETERMINE IF IT IS UNDEFINED OR A
C                  TEMPORARY. IF IT IS UNDEFINED,A DIAGNOSTIC IS ISSUED.
C                  IF IT IS UNDEFINED OR A TEMPORARY,PUNCHING IS
C                  SUPPRESSED.IN THE CASE OF BLOCK 3 AN ADDITIONAL
C                  CHECK IS MADE TO SEE IF THE FORM IS A LARGE DATA
C                  ARRAY. IF SO,APT094 IS CALLED TO RETRIEVE THE
C                  EXTERNAL FORM.
C                       THE FORMS ARE OUTPUT TO THE SYSTEM PUNCH FILE AS
C                  APT PART PROGRAMMING DEFINITIONS IN THE FORMATS
C                  DESCRIBED UNDER PURPOSE.EACH CARD IMAGE IS SERIALIZED
C                  STARTING WITH SERIALIZATION 00000001 AND INCREASING
C                  BY 1 FOR SUBSEQUENT CARD IMAGES.
C
C ********************************************************************
C
      SUBROUTINE PUNCH(BLOCK,FORM,NUMBER)
      IMPLICIT  DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)
      INCLUDE 'BLANKCOM.INC'
      DOUBLE PRECISION X(COMSIZ)
      EQUIVALENCE (COM(1),X(1))
C
      DIMENSION FORM(1)
      INTEGER BLOCK
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'IDEF.INC'
      INCLUDE 'KNUMBR.INC'
C
C
      INCLUDE 'DARRAY.INC'
C
C
C...  LOCAL VARIABLES
C
      DIMENSION FMT(4),LDAMOD(5),TYPE(30)
      LOGICAL LDASRF,BNDPCH,NAMFLG
      INTEGER PNCHFL,SIZE,SUB,SERIAL,BCD,CNT,D
     1        ,PRNTFL,ADDRSS,XCANON
      EXTERNAL ADDRSS,XCANON
      CHARACTER*2 TWOCHR(4)
      INTEGER IBLNK(2),BCDF
      DIMENSION OUTLST(16),BUFFER(2),IU(8),REFSRF(12),INOUT(2)
      CHARACTER LTEST(8),BUCK,BLK,LPAREN,RPAREN,NO*4,CMA,BUF(16),NUMB,Z
      CHARACTER BLANK*8,DTEST*8,OUTLST*8,BUFFER*8,INOUT*4,TYPE*6
      EQUIVALENCE (LTEST(1),DTEST),(NO(4:4),NUMB)
      EQUIVALENCE (BUFFER,BUF(1)),(BLANK,BLK)
     1,(A,IA),(TWOCHR(1),DTEST),(CANLOC,II)
      DOUBLE PRECISION NAME,MEMBER,RSUB
      CHARACTER LNAME*8,LMEM*8
      LOGICAL CKSTR,CKDTR
      DOUBLE PRECISION ARRAY(10)
      INTEGER IARRAY(2,10)
      EQUIVALENCE (ARRAY(1),IARRAY(1,1))
      DATA LDASRF /.FALSE. /
      DATA  MODTOP,LDAMOD,CNT
     1   / 5,  11,12,26,29,30,  0/
      DATA LPAREN,RPAREN,INOUT/'(',')','  IN',' OUT'/
      DATA BUCK,CMA,BLANK/'$', ',' ,'        '/
      DATA Z/'Z'/
      DATA  TYPE /'LINE  ','PLANE ','CYLNDR','CIRCLE','SPHERE',
     1            'HYPERB','LCONIC','ELLIPS','CONE  ','GCONIC',
     2                     'TABCYL','RLDSRF','POLCON','QADRIC',
     3            'PARSRF','      ','      ','MATRIX','POINT ',
     4            'VECTOR','      ','      ','      ','      ',
     5 '      ','PATERN','BOUNDS','OBJECT','SSURF ','SCURV '/
C
C...  CNVRT IS AN ARITHMETIC FUNCTION THAT CONVERTS AN INTEGER TO A
C     LEFT-JUSTIFIED 2-DIGIT REPRESENTATION WITH LEADING ZEROS.
C
C.... SET UP EQUIVALENT OF 8 BLANK CHARACTERS IN D.P.WORD
      IBLNK(1)=BCDF('    ')
      IBLNK(2)=IBLNK(1)
C
C ... DETERMINE VIRTUAL INDEX OF FORM(1) IN X-ARRAY.
C
      I=(ADDRSS(FORM) - ADDRSS(X))/KWRDSZ + 1
      IABS = I
      IF (CANFLG) CALL INCAN(I)
      NAMFLG = .FALSE.
C
C ... BRANCH TO APPROPRIATE PROCESSING FOR SPECIFIED BLOCK.
C
C
      GO TO (10,1000,2000,1999,1999),BLOCK
C
C                  B L O C K   O N E
C
   10 N=1
   50 CONTINUE
      CNT = 100
C
C ... DETERMINE ABSOLUTE INDEX.
C
      GO TO 3150
C
C... SET K = INDEX OF NEXT SCALAR NAME
C
   15 K=IABS+1
C
C... CHECK IF FORM IS A TEMPORARY OR UNDEFINED
C
      GO TO 3000
C
C... WRITE SCALAR DEFINITION
C
   20 CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,14,6)
      CALL CFORM('=',DARRAY,21,1)
      CALL FCONV(X(IABS),DARRAY,22,14,6)
      CALL ICONV(CNT,DARRAY,85,3)
      CALL CFORM(LNAME,DARRAY,80,6)
      CALL CPUNCH(DARRAY(9:88),PCHLST)
      IF(PCHLST) CALL CPRINT(DARRAY)
   40 I = I + 2
      IABS = IABS + 2
      N=N+1
      IF (N.LE.NUMBER) GOTO 50
      RETURN
C
C                  B L O C K   T W O
C
 1000 SIZE = 1
      N = 1
 1040 CONTINUE
C
C ... DETERMINE ABSOLUTE INDEX.
C
      GO TO 3150
C
C... SET SUB = NEXT SUBSCRIPT. SET K = INDEX OF NEXT SCALAR NAME.
C
 1005 SUB = X(IABS + 1)
      CNT = 0
C
      GO TO 2007
C
C... WRITE SCALAR DEFINITION
C
 1010 CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,14,6)
      CALL CFORM('(    ) =',DARRAY,20,8)
      CALL ICONV(SUB,DARRAY,21,4)
      CALL FCONV(X(IABS),DARRAY,28,14,6)
      CALL ICONV(CNT,DARRAY,85,3)
      CALL CFORM(LNAME,DARRAY,80,6)
      CALL CPUNCH(DARRAY(9:88),PCHLST)
      IF(PCHLST) CALL CPRINT(DARRAY)
C
C... ADVANCE CURRENT CANONICAL FORM INDEX
C
 1030 D = 3 - MIN0(1,SUB-1)
      I = I + D
      IABS = IABS + D
      N=N+1
      IF (N.LE.NUMBER) GOTO 1040
      RETURN
C
C                  B L O C K   T H R E E
C
C     VORBEREITUNG FUER MEMBERAUSGABE
 1999 CALL DATE(DATUM)
C
C
 2000 BNDPCH=.FALSE.
      N=1
 2005 CNT=100
C
C ... DETERMINE ABSOLUTE INDEX.
      GO TO 3150
C
C... GET MODE,SIZE AND SUBSCRIPT OF NEXT CANONICAL FORM
C     AND CHECK VALIDITY.
C
 2006 CALL UNPACK(X(IABS),MODE,SIZE,SUB)
      IF(MODE.LE.0.OR.MODE.GT.30.OR.SIZE.LE.0.OR.SIZE.GT.
     1 50) GO TO 3200
C
C ... BYPASS IF THIS FORM HAS ALREADY BEEN PUNCHED.
C
      IF (X(IABS-1) .GT. 0) GO TO 2007
      IF (SUB .LE. 1) NAMFLG = .FALSE.
      GO TO 2110
C
C ... FIND ALPHANUMERIC NAME.
C
 2007 IF (SUB .LT. 0 .OR. SUB .GT. 9999) GO TO 3200
      IF (SUB .GT. 1) GO TO 3170
      NAMFLG = .FALSE.
      K = IABS + SIZE + 1 - BLOCK/3
 2008 IF (BLOCK .EQ. 2) GO TO 3000
      X(IABS-1) = -X(IABS-1)
C
C... SET II = INDEX OF FIRST ELEMENT IN CURRENT CANONICAL FORM
C
      II = 1
C
C...  SKIP PUNCHING IF PARAMETRIC SURFACE OR NO SURFACE
C
      IF((MODE.EQ.15).OR.(MODE.GT.20.AND.MODE.LT.26))GO TO 2110
C
C...  CHECK IF FORM IS TEMPORARY OR UNDEFINED
C
      GO TO 3000
C
C... IF THE CANONICAL FORM IS A LARGE DATA ARRAY,RETRIEVE THE EXTERNAL
C... FORMAND SET LDASRF = .TRUE.  RESET SIZE TO THE SIZE OF THE EXTERNAL
C... FORM. RESET II TO THE RELATIVE POSITION IN BLANK COMMON OF THE
C... FIRST ELEMENT OF THE EXTERNAL FORM
C
 2020 LDASRF=.FALSE.
      DO 2010  J = 1,MODTOP
      IF (MODE .NE. LDAMOD(J))  GO TO 2010
      CALL APT094(3,X(IABS),CANLOC)
      SIZE = X(IABS+1) + II -2
      LDASRF = .TRUE.
 2010 CONTINUE
      GO TO 2015
C
C ... WRITE FIRST DEFINITION CARD FOR SUBSCRIPTED SURFACE NAME.
C
 2012 CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,14,6)
      CALL CFORM('(    ) =',DARRAY,20,8)
      CALL ICONV(SUB,DARRAY,21,4)
      CALL CFORM(TYPE(MODE),DARRAY,29,6)
      CALL CFORM('/CANON,$',DARRAY,35,8)
      CALL ICONV(CNT,DARRAY,85,3)
      CALL CFORM(LNAME,DARRAY,80,6)
      CALL CPUNCH(DARRAY(9:88),PCHLST)
      IF(PCHLST) CALL CPRINT(DARRAY)
      GO TO 2045
C
C... SPECIAL PROCESSING IS REQUIRED FOR BOUNDS OR OBJECT CANON FORMS.
C
 2015 IF(BLOCK.GE.4)GO TO 5000
      IF(MODE.EQ.27 .OR. MODE.EQ.28)GO TO 4000
C
C... WRITE FIRST DEFINITION CARD
C
      IF(SUB .NE. 0) GO TO 2012
      CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,14,6)
      CALL CFORM('=',DARRAY,21,1)
      CALL CFORM(TYPE(MODE),DARRAY,23,6)
      CALL CFORM('/CANON,$',DARRAY,29,8)
      CALL ICONV(CNT,DARRAY,85,3)
      CALL CFORM(LNAME,DARRAY,80,6)
      CALL CPUNCH(DARRAY(9:88),PCHLST)
      IF(PCHLST) CALL CPRINT(DARRAY)
C
C ... IF LDASRF = FALSE, PUT C.F. INTO REFSRF AND CHK FOR REFSYS.
C
 2045 IF (.NOT. LDASRF) GO TO 3050
C
 2050 CNT=CNT+1
      L=14
      DO 2055 JJ=1,4
      IF(LDASRF) XX=X(II+1)
      IF(.NOT.LDASRF) XX=REFSRF(II)
      CALL FCONV(XX,DARRAY,L,14,6)
      L=L+14
      II=II+1
      IF(II.GT.SIZE) GO TO 2060
      CALL CFORM(',',DARRAY,L,1)
 2055 L=L+1
      CALL CFORM('$',DARRAY,L,1)
 2060 CALL ICONV(CNT,DARRAY,85,3)
      CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,80,6)
      CALL CPUNCH(DARRAY(9:88),PCHLST)
      IF (PCHLST) CALL CPRINT (DARRAY)
      IF(II.LE.SIZE) GO TO 2050
C
C... IF SURFACE IS A LARGE DATA ARRAY, RESET SIZE = 2
C
 2110 IF (.NOT. LDASRF) GO TO 2115
      SIZE = 2
      LDASRF = .FALSE.
C
C...  IF IN SUBSIDIARY BOUNDS PUNCH MODE, RETURN TO BOUNDS PROCESSING.
C
 2115 IF (BNDPCH) GO TO 4260
C
C... ADVANCE CURRENT CANONICAL FORM INDEX
C
 2120 D = SIZE + 2 - MIN0(SUB/2,1)
      I = I + D
      IABS = IABS + D
      N = N + 1
      IF (N .LE. NUMBER) GO TO 2005
      RETURN
C
C ... C H E C K   I F    T E M P   O R   U N D E F I N E D.
C
 2970 CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,14,6)
      L=21
      IF(SUB.EQ.0) GO TO 2971
      CALL CFORM('(    )',DARRAY,20,6)
      CALL ICONV(SUB,DARRAY,21,4)
      L=27
 2971 CALL CFORM('IS INCORRECTLY DEFINED AND WAS NOT PUNCHED.
     C    ',DARRAY,L,43)
      CALL CPRINT(DARRAY)
 2980 GO TO (40,1030,2110,2110,2110), BLOCK
C
C... IF THE FORM IS UNDEFINED OR A TEMPORARY,SUPPRESS PUNCHING IT
C
 3000 IF (CKDTR(X(IABS))) GO TO 2980
      CALL HOLFRM(X(K),DTEST,1,8,NWD)
      IF (LTEST(1) .EQ. BUCK .OR. (LTEST(2) .EQ. BUCK .AND. LTEST(1)
     1 .EQ. Z)) GO TO 2980
C
C ... IF FORM INCORRECTLY DEFINED, WRITE A DIAGNOSTIC.
C
      IF (CKSTR(X(IABS))) GO TO 2970
C
C
C... ADVANCE CARD SERIALIZATION
C
      CNT = CNT + 1
      GO TO (20,1010,2020,2020,2020), BLOCK
C
C ... REFSYS TEST.
C
 3050 DO 3060 J=1,SIZE
      KK=IABS+J-1
 3060 REFSRF(J) = X(KK)
      IF (.NOT.REFFLG.OR.MODE.LE.0.OR.MODE.GT.20) GO TO 2050
      GO TO (3070,3070,3080,3080,3090,3100,3100,3100,3080,3100,2050,
     1 2050,2050,3100,2050,2050,2050,2050,3090,3110), MODE
 3070 IR=4
      GO TO 3120
 3080 IR=5
      GO TO 3120
 3090 IR=2
      GO TO 3120
 3100 IR=1
      GO TO 3120
 3110 IR=3
 3120 CALL  TRANSF(REFSRF,X(IABS),IR,SIZE,0)
      GO TO 2050
C
C ... DETERMINE ABSOLUTE INDEX.
C
 3150 A = X(IABS - BLOCK/3)
      IF (IA .LE. 0 .OR. IA .GT. 1024) GO TO 3160
      I = I + IA
      IABS = I
      IF (CANFLG) IABS = XCANON(I)
      GO TO 3150
 3160 GO TO (15,1005,2006,2006,2006), BLOCK
C
C ... DETERMINE ABSOLUTE LOCATION OF FORM NAME.
C
 3170 IF (.NOT. NAMFLG) GO TO 3175
      IF (CANFLG) K = XCANON(IK)
      GO TO 3195
C
 3175 NAMFLG = .TRUE.
      INCR = SIZE + 1 - BLOCK/3
      K = IABS + INCR
      IK = I + INCR
      DO 3190 MM = 2,SUB
 3178 A = X(K)
      IF (IA .LE. 0 .OR. IA .GT. 1024) GO TO 3180
      IK = IK + IA
      K = IK
      IF (CANFLG) K = XCANON(IK)
      GO TO 3178
 3180 K = K + SIZE + 1
      IK = IK + SIZE + 1
 3190 CONTINUE
 3195 IF (CANFLG) IABS = XCANON(I)
      GO TO 2008
C
C ... IF CANONICAL FORM IS INVALID, PRINT DIAGNOSTIC AND RETURN.
C
 3200 CALL CFORM('INVALID CANONICAL FORM PUNCHING SUPPRESSED
     C      ',  DARRAY,14,42)
      CALL CPRINT (DARRAY)
      RETURN
C
C...  PROCESSING FOR BOUNDS AND OBJECTS
C
 4000 IF (BNDPCH) GO TO 4260
      JK = SIZE + 16
      IF (MODE .EQ. 27) GO TO 4050
C
C... P U N C H   O B J E C T   C A R D
C
      CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,14,6)
      CALL CFORM('=OBJECT/',DARRAY,20,8)
      M=101
      J=-2
 4004 L=28
 4005 J=J+2
      CALL HOLFRM(X(IABS+J),DTEST,1,8,NWD)
      IF(LTEST(1).EQ.BUCK.OR.CKSTR(X(IABS+J))) GO TO 2970
      CALL CFORM(DTEST,DARRAY,L,6)
      CALL CFORM(',' ,DARRAY,L+6,1)
      IF(J.EQ.SIZE-2) GO TO 4010
      L=L+7
      IF (L.LT.73) GO TO 4005
      CALL CFORM ('$',DARRAY,L,1)
 4006 CALL ICONV(M,DARRAY,85,3)
      CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,80,6)
      M=M+1
      CALL CPUNCH(DARRAY(9:88),PCHLST)
      IF(PCHLST) CALL CPRINT(DARRAY)
      IF(J.EQ.SIZE-2) GO TO 4011
      GO TO 4004
 4010 CALL CFORM(' ',DARRAY,L+6,1)
      GO TO 4006
 4011 GO TO 2120
C
C ... P U N C H   B O U N D S   C A R D S
C
 4050 DO 4051 JJ=1,66
 4051 OUTLST(JJ) = BLANK
      DO 4130 JJ=2,SIZE,2
C
C ... CHECK FOR INVALID OR UNASSIGNED NESTED ARGUMENTS.
C
      CALL HOLFRM(X(IABS+JJ-2),BUFFER(1),1,8,NWD)
      IF (BUF(1) .EQ. BUCK .OR. CKSTR(X(IABS+JJ-2))) GO TO 2970
C
C... DETERMINE INDEX,SUBSCRIPT, AND HALF-SPACE MODIFIER FOR EA. OPERAND.
C
      J=JJ/2
      BUFFER(2)=BLANK
      IUVW=X(IABS+JJ-1)
      IU(J)=IUVW/K1E4
      ISUB=(IUVW-IU(J)*K1E4)/K10
      IHSMOD=IUVW-IU(J)*K1E4-ISUB*K10
C
C...  IF REFERENCED SURFACE IS SUBSCRIPTED, CONVERT SUBSCRIPT TO ALPHA-
C     NUMERIC FORM AND LEFT-JUSTIFY IT NEXT TO THE NAME.
C
      DO 4060 M=3,8
      IF (BUF(M-1) .EQ. BLK) GO TO 4070
 4060 CONTINUE
 4070 IF (ISUB .EQ. 0) GO TO 4110
      BUF(M-1)=LPAREN
      DO 4080 KK=1,3
      L=4-KK
      BCD=MOD(ISUB,10)
      CALL HOLFRM(BCD,NO,1,4,NWD)
      LTEST(L)=NUMB
      ISUB = ISUB/K10
      IF (ISUB .EQ. 0) GO TO 4090
 4080 CONTINUE
 4090 DO 4100 KK=L,4
      BUF(M)=LTEST(KK)
 4100 M=M+1
      BUF(M-1)=RPAREN
 4110 BUF(M)=CMA
C
C...  SUPPRESS HSMOD AND COMMA IF PRIMARY SURFACE.
C
      IF (J .EQ. 1) GO TO 4125
      IF (IHSMOD .EQ. 1 .OR. IHSMOD .EQ. 2) GO TO 4112
      BCD=IHSMOD
      CALL HOLFRM(BCD,NO,1,4,NWD)
      GO TO 4116
 4112 NO=INOUT(IHSMOD)
      BUF(M+1) = NO(2:2)
      BUF(M+2) = NO(3:3)
 4116 BUF(M+3)=NUMB
C
C...  SUPPRESS FINAL COMMA IF LAST BOUNDING SURFACE.
C
      IF (JJ .EQ. SIZE) GO TO 4125
      BUF(M+4)=CMA
C
C...  WILL NEED SECOND CARD IF MORE THAN TWO BOUNDING SURFACES, AND
C     THIRD CARD IF MORE THAN SIX SURFACES, ETC.
      JK =JJ - 6
      IF ((JK - (JK/8)*8) .EQ. 0) BUF(M + 4) = BUCK
C
 4125 OUTLST(JJ-1)=BUFFER(1)
 4130 OUTLST(JJ)=BUFFER(2)
C
C...  PUNCH FIRST CARD.
C
      CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,14,6)
      CALL CFORM('=BOUNDS/',DARRAY,20,8)
      CALL CFORM(OUTLST(1),DARRAY,28,48)
      CALL CFORM(LNAME,DARRAY,80,6)
      CALL CFORM('01',DARRAY, 86,2)
      CALL CPUNCH(DARRAY(9:88),PCHLST)
      IF(PCHLST) CALL CPRINT(DARRAY)
      IF (SIZE .LE. 6) GO TO 4250
C
C...  PUNCH INTERMEDIATE CARDS.
C
      INTCDS = SIZE/8
      CNT=101
      JK = -1
      DO 4170 JJ = 1,INTCDS
      JK = JK + 8
      CNT = CNT + 1
      CALL CFORM(',',DARRAY,14,1)
      CALL CFORM(OUTLST(JK),DARRAY,15,64)
      CALL ICONV(CNT,DARRAY,85,3)
      CALL HOLFRM(X(K),LNAME,1,8,NWD)
      CALL CFORM(LNAME,DARRAY,80,6)
      CALL CPUNCH(DARRAY(9:88),PCHLST)
      IF(PCHLST) CALL CPRINT(DARRAY)
 4170 CONTINUE
C
C...  P U N C H   C A R D S   F O R   B O U N D I N G   S U R F A C E S
C
C ... BYPASS IF PUNCH/ALL OR PUNCH/GEOM IS SPECIFIED.
C
 4250 IF (NUMBER .GT. 1) GO TO 2120
C
C...  SET FLAG FOR SUBSIDIARY BOUNDS PUNCHING MODE AND PUNCH CARD(S).
C
      BNDPCH=.TRUE.
C
      JJJ=SIZE/2
      DO 4260 JK=1,JJJ
      I=IU(JK)+IBLK1
      IABS = I
      IF (CANFLG) IABS = XCANON(I - 1) + 1
      NAMFLG = .FALSE.
      GO TO 2005
 4260 CONTINUE
      RETURN
C    MEMBER-AUSGABE AUF PDS
 5000 ARRAY(1)=X(K)
      MEMBER=X(K)
      CALL HOLFRM(MEMBER,LMEM,1,8,NWD)
      RSUB=0.D0
      IF(SUB.EQ.0)GOTO 5004
      RSUB=SUB
      NAME=X(K)
      CALL HOLFRM(NAME,LNAME,1,8,NWD)
      CALL ICONV(SUB+10000000,LMEM,1,8)
      DO 5001 I1=1,8
      IF(LNAME(I1:I1).EQ.BLK)GOTO 5004
 5001 LMEM(I1:I1)=LNAME(I1:I1)
C INDEX
 5004 ARRAY(2)=RSUB
C OBERFLAECHENART
      IARRAY(1,3)=MODE
C KENNUNG FUER GROSSFLAECHEN
      IARRAY(2,3)=5
C ANZAHL DER CANON-ELEMENTE
      IARRAY(1,4)=0
      ILA=X(IABS+1)
      IARRAY(2,4)=ILA
      ARRAY(5)=0.D0
C *** VAX VERSION - OPEN FILE ON APTLIB BEFORE WRITE   ***
C *** PUNCH/RANDOM (BLOCK=5) GEOMETRY ALWAYS STORED    ***
C *** PUNCH/RETAIN (BLOCK=4) ONLY NEW GEOMETRY STORED  ***
      CALL WTDIRE(19,MEMBER,DATUM,8,IRET)
      IF(IRET.EQ.9.AND.BLOCK.EQ.4)
     /CALL WTDIRE(-19,MEMBER,DATUM,8,IRET)
      IF(IRET.NE.0)GOTO 5020
      JJ=6
      DO 5010 JJJ=II,SIZE
      ARRAY(JJ)=X(JJJ+1)
      IF(JJJ.EQ. SIZE)GOTO 5005
      JJ=JJ+1
      IF(JJ.LE.9)GOTO 5010
 5005 CNT=CNT+1
      ARRAY(10)=CNT
      CALL WTSATZ(19,ARRAY,10,IRET)
      DO 5006 I=1,10
        ARRAY(I)=0.0D0
 5006 CONTINUE
      JJ=1
      IF(IRET.NE.0)GOTO 5020
 5010 CONTINUE
C    ABSCHLUSS
C  *** VAX VERSION - WTDIRE OPENS FILE IN APTLIB    ***
C  ***               NEEDS TO BE DONE BEFORE WRITE  ***
C      CALL WTDIRE(19,MEMBER,DATUM,8,IRET)
C      IF(IRET.EQ.9.AND.BLOCK.EQ.4)
C     /CALL WTDIRE(-19,MEMBER,DATUM,8,IRET)
      IF(IRET.EQ.0)GOTO 5040
 5020 ILEN=0
      IF (IRET.EQ.3) THEN
          CALL CFORM('0 ERROR WRITING TO FILE :',DARRAY,1,ILEN)
      ELSE IF (IRET.EQ.5) THEN
        CALL CFORM('0 ERROR OPENING FILE :',DARRAY,1,ILEN)
      ELSE
        CALL CFORM('0 I/O ERROR FILE :',DARRAY,1,ILEN)
      ENDIF
      IPOS=ILEN+2
      CALL CFORM(LMEM,DARRAY,IPOS,8)
      CALL CPRINT(DARRAY)
 5040 CALL CLOSPE(19,IRET)
      RETURN
      END
**** SOURCE FILE : M0002772.V02   ***
*
C
C....    FORTRAN SUBROUTINE            QSD            4/1/69     RC
C
      SUBROUTINE  QSD(CANFRM,IQ,COEFF,TRANS)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION  CANFRM(10), COEFF(10), QL(4,4), TRANS(3,4)
C
C  PURPOSE         TO IDENTIFY QUADRIC, LCONIC, AND GCONIC SURFACES
C
C  CALLING SEQNCE  CALL  QSD(CANFRM,IQ,COEFF,TRANS)
C
C  ARGUMENTS       CANFRM....ARRAY CONTAINING ORIGINAL CANONICAL FORM
C                  IQ .......FLAG SET TO INDICATE TYPE OF QUADRIC
C                            SURFACE FOUND BY THIS ROUTINE
C                  COEFF.....ARRAY CONTAINING NEW VALUES CALCULATED
C                            FOR THE QUADRIC EQUATION
C                  TRANS.....TRANSFORMATION MATRIX FROM THE ORIGINAL
C                            TO THE LOCAL COORDINATE SYSTEM
C
C  CALLED BY       AERR
C
C  SUBSIDIARIES    REAL FUNCTION SUBPROGRAM - PSIGN
C
C  DIAGNOSTICS     NONE
C
C     -----------------------------------------------------------
C
C              ** INITIALIZE **
C
      ONE=1.0
      DO 20 I=1,4
      DO 20 J=1,4
20    QL(I,J)=0
      DO 30 I=1,3
      DO 30 J=1,4
30    TRANS(I,J)=0
      DO 40 I=1,3
40    TRANS(I,I)=1
C
C        ** SET UP INITIAL CANONICAL VALUES
C
      QL(1,1)=CANFRM(1)
      QL(2,2)=CANFRM(2)
      QL(3,3)=CANFRM(3)
      QL(4,4)=CANFRM(4)
      QL(2,3)=CANFRM(5)
      QL(3,2)=CANFRM(5)
      QL(1,3)=CANFRM(6)
      QL(3,1)=CANFRM(6)
      QL(1,2)=CANFRM(7)
      QL(2,1)=CANFRM(7)
      P=CANFRM(8)
      Q=CANFRM(9)
      R=CANFRM(10)
C
C               * FIND ROTATION MATRIX AND LOCAL QL
C
100   AMAX=0
      AMIN=DABS(QL(3,3))
      DO 120 I=1,2
      IF (DABS(QL(I,I))-AMIN) 102,103,103
102   AMIN=DABS(QL(I,I))
103   I1=I+1
      DO 120 J=I1,3
      IF (DABS(QL(I,J))-AMAX) 120,120,110
110   AMAX=DABS(QL(I,J))
      K=I
      L=J
120   CONTINUE
C               * SET SMALL TERMS TO ZERO
C
      IF (AMIN) 130,140,130
130   IF (AMAX/AMIN-1.E-15) 160,140,140
140   IF (AMAX-1.E-25) 160,200,200
160   DO 170 I=1,2
      I1=I+1
      DO 170 J=I1,3
      QL(I,J)=0
      QL(J,I)=0
170   CONTINUE
      GOTO 250
C
C               * JACOBI CALCULATION
200   AKK=QL(K,K)
      AKL=QL(K,L)
      ALL=QL(L,L)
      IF (ALL-AKK) 205,208,205
205   S=AKL/(ALL-AKK)
      GOTO 210
208   S=PSIGN(ONE,AKL)
210   IF (DABS(S)-.5)214,212,212
212   S=PSIGN(.5*ONE,S)
214   SS=S*S
      CC=1-SS
      C=DSQRT(CC)
      SC=S*C
      QL(K,K)=CC*AKK-2*SC*AKL+SS*ALL
      QL(L,L)=SS*AKK+2*SC*AKL+CC*ALL
      QL(L,K)=(CC-SS)*AKL+SC*(AKK-ALL)
      QL(K,L)=QL(L,K)
      J=6-K-L
      AKK=QL(J,K)
      ALL=QL(J,L)
      QL(J,K)=C*AKK-S*ALL
      QL(K,J)=QL(J,K)
      QL(J,L)=S*AKK+C*ALL
      QL(L,J)=QL(J,L)
      DO 230 I=1,3
      AKK=TRANS(K,I)
      ALL=TRANS(L,I)
      TRANS(K,I)=C*AKK-S*ALL
      TRANS(L,I)=S*AKK+C*ALL
230   CONTINUE
      GOTO 100
C
C               * ROTATION COMPLETE
250   ALL=0
      DO 280 I=1,3
      QL(I,4)=.5*P*TRANS(I,1)+.5*Q*TRANS(I,2)+.5*R*TRANS(I,3)
      QL(4,I)=QL(I,4)
280   ALL=ALL+DABS(QL(I,I))
      ALL=ALL/3.E10
C
C               * COMPUTE TRANSLATION
      DO 300 K=1,3
      AKK=QL(K,K)
      IF (DABS(AKK)-ALL) 290,290,285
285   TRANS(K,4)=QL(K,4)/AKK
      AKL=TRANS(K,4)
      QL(4,4)=QL(4,4)-AKL*QL(K,4)
      QL(K,4)=0
      QL(4,K)=0
      GOTO 300
290   QL(K,K)=0
300   CONTINUE
      IF (DABS(QL(4,4))-ALL) 305,305,310
305   QL(4,4)=0
310   AKK=0
      DO 320 J=1,4
      IF (DABS(QL(J,J))-AKK)320,320,315
315   AKK=DABS(QL(J,J))
320   CONTINUE
      IF (AKK) 325,330,325
325   DO 328 I=1,4
      DO 328 J=1,4
328   QL(I,J)=QL(I,J)/AKK
330   CONTINUE
C
C               * CLASSIFY SURFACE TYPE
C
      I=0
      J=0
      L=0
      N=0
      DO 400 K=1,3
      KK=PSIGN(ONE,QL(K,K))
340   I=I+PSIGN(ONE,DABS(QL(K,K)))
      J=J+KK
      L=L+PSIGN(ONE,DABS(QL(K,4)))
400   N=N+PSIGN(ONE,QL(K,K))
      K=DABS(J+PSIGN(ONE,QL(4,4)))
      J=IABS(J)
C
C        ** SURFACE TYPE MARKER IS IIT **
      IIT=10*I+J+K+3*L+1
C
      IF (N) 404,402,410
402   IF (QL(4,4)) 404,410,410
404   DO 408 IL=1,4
      DO 408 LL=1,4
408   QL(IL,LL)=-QL(IL,LL)
C
C        SET IQ TO 1 - NO RECOGNIZABLE SURFACE - AND BRANCH
C                  IF SURFACE TYPE SHOULD BE RESET ACCORDING
C                  TO SURFACE TYPE MARKER (IIT)
410   IQ=1
C
      GO TO (1000,1000,1000,520,520,  1000,520,520,1000,520,
     +       520,530,530,530,540,     540,540,540,540,1000,
     +       550,560,1000,570,550,    580,590,590,590,1000,
     +       1000,610,620,630,1000,   640,650,660),  IIT
C
C        PLANE SURFACE
520   IQ=2
      CC=DSQRT(QL(1,4)**2+QL(2,4)**2+QL(3,4)**2)
      DO 525 IL=1,4
      QL(IL,4)=QL(IL,4)/CC
      QL(4,IL)=QL(IL,4)
525   CONTINUE
      GOTO 1000
C
C        TWO PARALLEL OR COINCIDENT PLANES
530   IQ=3
      GOTO 1000
C
C        PARABOLIC CYLINDER
540   IQ=4
      GOTO 1000
C
550   IF (L-1)552,600,552
C
C        TWO INTERSECTING PLANES
552   IQ=5
      GOTO 1000
C
C        HYPERBOLIC CYLINDER
560   IQ=6
      GOTO 1000
C
570   IF (L-1) 572,600,572
C
C        ELLIPTIC CYLINDER
572   IQ=7
      GOTO 1000
C
C        IMAGINARY ELLIPTIC CYLINDER
580   IQ=9
      GOTO 1000
C
C        ELLIPTIC PARABOLOID
590   IQ=10
      GOTO 1000
C
C        HYPERBOLIC PARABOLOID
600   IQ=8
      GOTO 1000
C
C        HYPERBOLOID OF ONE SHEET
610   IQ=11
      GOTO 1000
C
C        CONE
620   IQ=12
      GOTO 1000
C
C        HYPERBOLOID OF TWO SHEETS
630   IQ=13
      GOTO 1000
C
C        ELLIPSOID
640   IQ=14
      GOTO 1000
C
C        POINT ELLIPSOID
650   IQ=15
      GOTO 1000
C
C        IMAGINARY ELLIPSOID
660   IQ=16
C
C            ** RESET COEFFICIENTS INTO PROPER ORDER **
C
1000  COEFF(1)=QL(1,1)
      COEFF(2)=QL(2,2)
      COEFF(3)=QL(3,3)
      COEFF(4)=QL(4,4)
      COEFF(5)=QL(2,3)
      COEFF(6)=QL(1,3)
      COEFF(7)=QL(1,2)
      COEFF(8)=QL(1,4)
      COEFF(9)=QL(2,4)
      COEFF(10)=QL(3,4)
C
      RETURN
      END
**** SOURCE FILE : M0000957.V01   ***
*
C.....FORTRAN SUBROUTINE             RECORD...              3/1/68   GK
      SUBROUTINE RECORD (ISEQNO)
      COMMON/SQNC/SQNO
      INTEGER SQNO
C
      ISEQNO = SQNO
      RETURN
      END
**** SOURCE FILE : M0002856.V03   ***
*
C.....FORTRAN SUBROUTINE  ....REFSYS         8/68                    RN
C.....FORTRAN SUBROUTINE             REFSYS...              3/1/68   GK
C
C              FORTRAN SUBROUTINE REFSYS
C PURPOSE      TO DEFINE THE TRANSFORMATION MATRICES FOR
C              LOCAL TO BASE AND BASE TO LOCAL COORDINATE
C              SYSTEMS AND TO GENERATE THE ZSURF PLANE CANONICAL
C              FORM IN THE LOCAL SYSTEM.
C
C LINKAGE      CALL REFSYS (MATRIX)
C
C ARGUMENTS    MATRIX  ARRAY CONTAINING THE TRANSFORMATION
C                      MATRIX RELATING A NEW REFERENCE SYSTEM
C                      TO THE BASE COORDINATE SYSTEM
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          APT067
C              LOGICAL FUNCTION    CKDEF
C              SUBROUTINE          ERROR
C              SUBROUTINE          ZSURF
C
      SUBROUTINE REFSYS (MATRIX)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION MATRIX(12)
      DOUBLE PRECISION MATRIX
      LOGICAL CKDEF
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'ISHR16.INC'
C
C
C
C
C
C...     CHECK INPUT DEFINED
C
      IF (.NOT.CKDEF(MATRIX)) GO TO 10
      CALL ERROR( 53,'REFSYS  ')
      GO TO 9
C
C...     MOVE MATRIX TO A(1,2) AND THE INVERSE TO A(2,2) FOR TRANSF
C
   10 DO 20 I=1,12
   20 A(I,2)=MATRIX(I)
      CALL APT067 (A(1,1),A(1,2))
C
C...     IF ZSURF IS IN EFFECT TRANSFORM ZSURF PLANE
C
      IF (ZFLAG) GO TO 30
      DO 25 I= 1,4
   25 SC(I)=REF(1,I)
      CALL ZSURF (SC)
   30 REFFLG=.TRUE.
    9 RETURN
       END
**** SOURCE FILE : M0000960.V01   ***
*
C...  FORTRAN SUBROUTINE               ROTAT
      SUBROUTINE ROTAT(ARRAY,XMATRX)
      IMPLICIT DOUBLE PRECISION(A-H), DOUBLE PRECISION(O-Z)
C                  SUBROUTINE USED TO ROTATE THE AXIS SYSTEM IN ARLM2
C                  SO THAT THE TOOL AXIS POINTS IN THE Z-DIRECTION
      DIMENSION ARRAY(3),XMATRX(3,3),TMP(3)
      DO 2 K=1,3
      TMP(K) = 0.0
      DO 2 J=1,3
      TMP(K) = TMP(K)+XMATRX(J,K)*ARRAY(J)
 2    CONTINUE
      DO 4 I=1,3
 4    ARRAY(I) = TMP(I)
      RETURN
       END
**** SOURCE FILE : M0002860.V04   ***
*
C.....FORTRAN SUBROUTINE  ....SCHTB          8/68                    RN
C.....FORTRAN SUBROUTINE             SCHTB....              3/1/68   GK
C
C              FORTRAN SUBROUTINE SCHTB
C
C PURPOSE      TO IDENTIFY A POINT ON THE INPUT TABCYL WHICH IS
C              CLOSE TO THE POINT P.
C
C LINKAGE      CALL SCHTB (TAB)
C
C ARGUMENTS    TAB     ARRAY CONTAINING THE CANONICAL FORM OF THE
C                      INPUT TABCYL
C              P       ARRAY (IN COMMON) CONTAINING THE CANONICAL
C                      FORM OF THE INPUT POINT
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          ERROR
C
      SUBROUTINE SCHTB(TAB)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION TAB(*)
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'ISHR16.INC'
      INCLUDE 'KNUMBR.INC'
C
C
C
C
C
      N=(TAB(12)-2.0)*7.0+14.1
      DO 10 I=14,N,7
      J = I
      IF (DABS(TAB(I)-P(1)).GT.Z1EM2) GO TO 10
      IF (DABS(TAB(I+1)-P(2)).LE.Z1EM2) GO TO 20
   10 CONTINUE
      CALL ERROR(11,'SCHTB   ')
      UNFLAG =.TRUE.
      GO TO 9
   20 TAB(13) = J
      UNFLAG = .FALSE.
    9 RETURN
       END
**** SOURCE FILE : M0000978.V01   ***
*
C.....FORTRAN SUBROUTINE ....TRANRO              8/68               RN
C
C              FORTRAN SUBROUTINE TRANRO
C
C PURPOSE      ROTATE (X1,Y1) BY ANGLE RA IN DIRECTION DETERMINED
C              BY SIGN OF IZ.
C              PUT ROTATED COORDINATES IN (X11,Y11).
C
      SUBROUTINE TRANRO (X1,Y1,X11,Y11,RA,IZ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DOUBLE PRECISION X1,Y1,X11,Y11,RA
      TS = DSIN(RA)
      TC = DCOS(RA)
      IF(IZ.LT.0) GO TO 1
      X11=X1*TC-Y1*TS
      Y11=X1*TS+Y1*TC
      GO TO 2
    1 X11=X1*TC+Y1*TS
      Y11=-X1*TS+Y1*TC
    2 CONTINUE
      RETURN
      END
**** SOURCE FILE : M0000736.V04   ***
*
C.....FORTRAN SUBROUTINE  ....TRANSM        3/72                     RN
C.... SUBROUTINE                     TRANSM              3/72
C
C              FORTRAN SUBROUTINE TRANSM
C
C PURPOSE      TO TRANSFORM THE CANONICAL FORMS OF POINTS,
C              SPHERES, VECTORS, LINES, PLANES, CIRCLES,
C              CYLINDERS, CONES AND QUADRIC SURFACES WHEN A
C              REFSYS STATEMENT IS IN EFFECT.
C
C LINKAGE      CALL TRANSM (SO, SI, IR, IN, IE)
C
C ARGUMENTS    SO      ARRAY TO CONTAIN THE RESULTING CANONICAL
C                      FORM
C              SI      ARRAY CONTAINING THE INPUT CANONICAL FORM
C              IN      INTEGER CONTAINING THE NUMBER OF WORDS
C                      IN THE CANONICAL FORM
C              IR      INTEGER CONTAINING THE SURFACE INDICATOR
C                      IR=1 QUADRICS (IN=10)
C                        =2 POINTS AND SPHERES (IN=3)
C                        =3 VECTORS (IN=3)
C                        =4 LINES AND PLANES (IN=4)
C                        =5 CIRCLES, CONES AND CYLINDERS (IN=7)
C              IE      INTEGER WHICH INDICATES TRANSFORMATION
C                      DIRECTION AND ERROR CODE NUMBER WHEN A
C                      LINE OR CIRCLE IS TO BE CHECKED TO BE
C                      SURE IT IS A VERTICAL PLANE OR CYLINDER
C                      RESPECTIVELY.
C                      IE =-1 TRANSFORM LOCAL TO BASE COORDINATE
C                           SYSTEM
C                      IE = O TRANSFORM BASE TO LOCAL COORDINATE
C                           SYSTEM
C
C SUBSIDIARIES TYPE                ENTRY
C
      SUBROUTINE TRANSM (SO,SI,IR,IN,IE)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      LOGICAL CKDEF,CIRDEF,LINDEF
      DIMENSION SO(IN),SI(IN)
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'LDEF.INC'
C...  ISHR16.INC HAS BEEN OMITTED, AS USEAGE OF I,J,
C...  M & M11 SEEMS TO BE LOCAL.
      INCLUDE 'KNUMBR.INC'
C
C
      DIMENSION T(16),T1(16),T2(16),T3(16)
      DIMENSION XT(4,4),XT1(4,4),XT2(4,4),XT3(4,4)
      EQUIVALENCE (T(1),XT(1,1)),(T1(1),XT1(1,1))
      EQUIVALENCE(T2(1),XT2(1,1)),(T3(1),XT3(1,1))
C
C
C...     DETERMINE WHETHER INPUT SURFACE HAS BEEN DEFINED
C
      DO 10 I=1,IN
   10 T(I)=SI(I)
C
C...     IF REFSYS NOT IN EFFECT MOVE ARRAY TO OUTPUT ARRAY
C
C
      IF(.NOT.REFMOT) GO TO 20
      IF(.NOT.REFFLG) GO TO 20
      J=0
      IF(SI(J).GE.21000000.0.OR.SI(J).LT.999999.) GO TO 20
      CALL UNPACK(SI,MODE,ISIZE,ISUB)
      IF(MODE.LE.0.OR.MODE.GT.20) GO TO 20
      IF(IR.EQ.3.AND.MODE.NE.20) GO TO 20
      GO TO 90
   20 CONTINUE
      DO 30 I=1,IN
   30 SO(I)=T(I)
  999 RETURN
C
C...     SET M=1 FOR BASE TO LOCAL OR M=2 FOR LOCAL TO BASE AND
C...     TRANSFORM CANONICAL FORMS
C
   90 DO 95 I=1,IN
   95 T1(I)=T(I)
      M=K1
      IF (IE.LT.0) M=K2
      M11 = K3 - M
      GO TO (100,300,300,400,300),IR
C
C...     QUADRIC CANONICAL FORM TRANSFORMATION
C
  100 T(2)=T1(7)
      T(3)=T1(6)
      T(4)=T1(8)
      T(5)=T1(7)
      T(6)=T1(2)
      T(7)=T1(5)
      T(8)=T1(9)
      T(9)=T1(6)
      T(10)=T1(5)
      T(11)=T1(3)
      T(12)=T1(10)
      T(13)=T1(8)
      T(14)=T1(9)
      T(15)=T1(10)
      T(16)=T1(4)
      DO 200 I=1,12
  200 T3(I)=A(I,M11)
      T3(13)=0.
      T3(14)=0.
      T3(15)=0.
      T3(16)=1.
C
C
      DO 250 I=1,4
      DO 250 J=1,4
      XT1(I,J) = 0.0
      DO 250 M=1,4
  250 XT1(I,J)=XT1(I,J)+XT(M,J)*XT3(I,M)
      DO 260 I=1,4
      DO 260 J=1,4
  260 XT2(J,I)=XT3(I,J)
      DO 270 I=1,4
      DO 270 J=1,4
      XT(I,J)=0.0
      DO 270 M=1,4
  270 XT(I,J)=XT(I,J)+XT2(M,J)*XT1(I,M)
  271 T(5)=T(7)
      T(7)=T(2)
      T(2)=T(6)
      T(6)=T(3)
      T(3)=T(11)
      T(9)=T(8)
      T(8)=T(4)
      T(4)=T(16)
      T(10)=T(12)
      GO TO 20
C
C...     VECTOR CANONICAL FORM TRANSFORMATION
C
  300 DO 310 I=1,3
  310 T(I)=A(4*I-3,M)*T1(1)+A(4*I-2,M)*T1(2)+A(4*I-1,M)*T1(3)
      GO TO (20,320,20, 20,320),IR
C
C...     FINISH TRANSFORMATION FOR POINTS
C
  320 DO 330 I=1,3
  330 T(I)=T(I)+A(4*I,M)
      IF(IR.NE.K5) GO TO 20
C
C...     FINISH TRANSFORMATION FOR CIRCLES
C
      DO 340 I=4,6
  340 T(I)=A(4*I-15,M)*T1(4)+A(4*I-14,M)*T1(5)+A(4*I-13,M)*T1(6)
      GO TO 20
C
C...     TRANSFORM NORMAL DISTANCE FOR LINES
C
  400 T(4)=T1(4)-T1(1)*A(4,M11)-T1(2)*A(8,M11)-T1(3)*A(12,M11)
      GO TO 300
       END
C
C.....FORTRAN SUBROUTINE  ....TRANSF        3/72                     RN
C.... SUBROUTINE                    TRANSF               3/72
C
C              FORTRAN SUBROUTINE TRANSF
C
C PURPOSE      TO TRANSFORM THE CANONICAL FORMS OF POINTS,
C              SPHERES, VECTORS, LINES, PLANES, CIRCLES,
C              CYLINDERS, CONES AND QUADRIC SURFACES WHEN A
C              REFSYS STATEMENT IS IN EFFECT.
C
C LINKAGE      CALL TRANSF (SO, SI, IR, IN, IE)
C
C ARGUMENTS    SO      ARRAY TO CONTAIN THE RESULTING CANONICAL
C                      FORM
C              SI      ARRAY CONTAINING THE INPUT CANONICAL FORM
C              IN      INTEGER CONTAINING THE NUMBER OF WORDS
C                      IN THE CANONICAL FORM
C              IR      INTEGER CONTAINING THE SURFACE INDICATOR
C                      IR=1 QUADRICS (IN=10)
C                        =2 POINTS AND SPHERES (IN=3)
C                        =3 VECTORS (IN=3)
C                        =4 LINES AND PLANES (IN=4)
C                        =5 CIRCLES, CONES AND CYLINDERS (IN=7)
C              IE      INTEGER WHICH INDICATES TRANSFORMATION
C                      DIRECTION AND ERROR CODE NUMBER WHEN A
C                      LINE OR CIRCLE IS TO BE CHECKED TO BE
C                      SURE IT IS A VERTICAL PLANE OR CYLINDER
C                      RESPECTIVELY.
C                      IE =-1 TRANSFORM LOCAL TO BASE COORDINATE
C                           SYSTEM
C                      IE = O TRANSFORM BASE TO LOCAL COORDINATE
C                           SYSTEM
C
C SUBSIDIARIES TYPE                ENTRY
C
      SUBROUTINE TRANSF (SO,SI,IR,IN,IE)
      LOGICAL CKDEF,CIRDEF,LINDEF
      DOUBLE PRECISION SO(IN),SI(IN)
C
C
C
      INCLUDE 'DEF.INC'
      INCLUDE 'LDEF.INC'
C...  ISHR16.INC HAS BEEN OMITTED, AS USEAGE OF I,J,
C...  M & M11 SEEMS TO BE LOCAL.
      INCLUDE 'KNUMBR.INC'
C
C
      DOUBLE PRECISION T(16),T1(16),T2(16),T3(16)
C
      IF(IE.LT.0) GO TO 5
      UNFLAG=CKDEF(SI)
      IF(UNFLAG) GO TO 999
C
C...     DETERMINE WHETHER INPUT SURFACE HAS BEEN DEFINED
C
    5 DO 10 I=1,IN
      T(I)=SI(I)
   10 CONTINUE
C
C...     IF REFSYS NOT IN EFFECT MOVE ARRAY TO OUTPUT ARRAY
C
C---    GEOMETRIC MODE IS IN EFFECT
      IF(REFFLG) GO TO 90
   20 IF(IE.LT.0) GO TO 61
      DO 31 I=1,IN
      SO(I)=T(I)
   31 CONTINUE
      IF(IE.EQ.0) GO TO 999
      GO TO (999,999,999,41,51),IR
   41 UNFLAG=LINDEF(T,IE)
      GO TO 999
   51 UNFLAG=CIRDEF(T,IE)
      GO TO 999
   61 DO 71 I=1,IN
      R(I)=T(I)
   71 CONTINUE
      GO TO 999
  999 RETURN
C
C...     SET M=1 FOR BASE TO LOCAL OR M=2 FOR LOCAL TO BASE AND
C...     TRANSFORM CANONICAL FORMS
C
   90 DO 95 I=1,IN
      T1(I)=T(I)
   95 CONTINUE
      M=K1
      IF (IE.LT.0) M=K2
      M11 = K3 - M
      GO TO (100,300,300,400,300),IR
C
C...     QUADRIC CANONICAL FORM TRANSFORMATION
C
  100 T(2)=T1(7)
      T(3)=T1(6)
      T(4)=T1(8)
      T(5)=T1(7)
      T(6)=T1(2)
      T(7)=T1(5)
      T(8)=T1(9)
      T(9)=T1(6)
      T(10)=T1(5)
      T(11)=T1(3)
      T(12)=T1(10)
      T(13)=T1(8)
      T(14)=T1(9)
      T(15)=T1(10)
      T(16)=T1(4)
      DO 200 I=1,12
      T3(I)=A(I,M11)
  200 CONTINUE
      T3(13)=0.
      T3(14)=0.
      T3(15)=0.
      T3(16)=1.
C
C---    GEOMETRIC TRANSFORM CASE
      CALL APT076(T1,T,T3,K4)
      CALL APT086(T2,T3,K4)
      CALL APT076(T,T2,T1,K4)
C
      T(5)=T(7)
      T(7)=T(2)
      T(2)=T(6)
      T(6)=T(3)
      T(3)=T(11)
      T(9)=T(8)
      T(8)=T(4)
      T(4)=T(16)
      T(10)=T(12)
      GO TO 20
C
C...     VECTOR CANONICAL FORM TRANSFORMATION
C
  300 DO 310 I=1,3
      T(I)=A(4*I-3,M)*T1(1)+A(4*I-2,M)*T1(2)+A(4*I-1,M)*T1(3)
  310 CONTINUE
      GO TO (20,320,20, 20,320),IR
C
C...     FINISH TRANSFORMATION FOR POINTS
C
  320 DO 330 I=1,3
      T(I)=T(I)+A(4*I,M)
  330 CONTINUE
      IF(IR.NE.K5) GO TO 20
C
C...     FINISH TRANSFORMATION FOR CIRCLES
C
      DO 340 I=4,6
      T(I)=A(4*I-15,M)*T1(4)+A(4*I-14,M)*T1(5)+A(4*I-13,M)*T1(6)
  340 CONTINUE
      GO TO 20
C
C...     TRANSFORM NORMAL DISTANCE FOR LINES
C
  400 T(4)=T1(4)-T1(1)*A(4,M11)-T1(2)*A(8,M11)-T1(3)*A(12,M11)
      GO TO 300
       END
**** SOURCE FILE : M0000981.V02   ***
*
C.....FORTRAN SUBROUTINE             UNDEF....              3/1/68   GK
C
C             FORTRAN SUBROUTINE UNDEF
C
C PURPOSE     TO STORE THE BCD WORD *TRASH IN THE FIRST WORD OF THE
C             CANONICAL FORM ARRAY SET AN UNDEFINED SURFACE
C
C LINKAGE     CALL UNDEF(A)
C
C ARG MENT    A    ARRAY CONTAINING ELEMENT TO BE DECLA RED UNDEFINED
      SUBROUTINE UNDEF (A)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION A(10)
C
      CALL STRTSH(A(1))
      RETURN
      END
**** SOURCE FILE : M0002783.W02   ***
*
C
      SUBROUTINE UNITS(IMOD)
C        NEW ROUTINE TO HANDLE UNITS/ IMPLEMENTATION
C
C        IMOD= FIRST FOUR CHAR. OF UNITS/ ARGUMENT
C
C        CALLED BY NO OTHER ROUTINE
C
C        CALLS SUBROUTINES  RECORD, ERROR, CUTTER(ENTRY CUTRED)
C
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'SV.INC'
      INCLUDE 'ISV.INC'
      INCLUDE 'IFXCOR.INC'
C
C
      LOGICAL FIRST
      INTEGER W,Z4E,BCDF
      DIMENSION W(10)
      PARAMETER (Z4E=1308622848)
      DIMENSION UNITC(4),MODC(4)
      SAVE W,FIRST,MODC
      COMMON /ADDCOM/ ELMAX,ADDC(24)
      INCLUDE 'SYMFIL.INC'
      INCLUDE 'XUNITS.INC'
      DATA W/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/
      DATA FIRST/.TRUE./
      DATA UNITC(1),UNITC(2),UNITC(3),UNITC(4)
     1    /304.8   ,  30.48 ,   12.0 ,  1.0  /
      IF (FIRST) THEN
        W(1) = BCDF('UNIT')
        W(2) = BCDF('S   ')
        IBL  = BCDF('    ')
        INS  = BCDF('ES  ')
        MODC(1) = BCDF('MM  ')
        MODC(2) = BCDF('CM  ')
        MODC(3) = BCDF('INCH')
        MODC(4) = BCDF('FEET')
        FIRST =.FALSE.
      ENDIF
C
      NUMOD=IMOD
      IOLDMD=BCDF(OLDMOD(1:4))
      IF ( NUMOD .EQ. IOLDMD ) RETURN
C
      DO 1 I = 1,4
    1  IF(NUMOD .EQ. MODC(I)) GO TO 2
      CALL ERROR (91,'UNITS   ')
      RETURN
C
    2 SCALE= UNITC(I) / UNITC(IOLD)
      IOLDMD= NUMOD
      CALL HOLFRM(IOLDMD,OLDMOD,1,4,NWD)
      IOLD = I
      TABEXT=TABEXT*SCALE
      SSEXT=SSEXT*SCALE
      TLHIT = TLHIT * SCALE
      DO 3 I= 1,4
    3 CUTDAT(I) = CUTDAT(I) * SCALE
      CUTDAT(1) = CUTDAT(1) * 2.
      CUTDAT(7) = CUTDAT(7) * SCALE
      DPMAX = DPMAX * SCALE
      ELMAX =ELMAX  * SCALE
      HI = HI * SCALE
      RA = RA * SCALE
      RC1 = RC1 * SCALE
      I= IPS
      J=1
   10 TAU (I)=TAU (I) * SCALE
      TAU1(I)=TAU1(I) * SCALE
      TAU2(I)=TAU2(I) * SCALE
      EPS1(I)=EPS1(I) * SCALE
      EPS2(I)=EPS2(I) * SCALE
      EPS3(I)=EPS3(I) * SCALE
      EPS4(I)=EPS4(I) * SCALE
      EPS6(I)=EPS6(I) * SCALE
      EPS8(I)=EPS8(I) * SCALE
      IF (I-ICS) 4,5,5
    4 I = I + LSV
      J = J + 1
      GO TO 10
    5 IF (J- 4 ) 6,7,7
    6 I = I + LSV1
      J=J+1
      GO TO 10
    7 CALL CUTRED
      JENT(IPS) = 1
      JENT(IPS+LSV) = 1
      CALL RECORD(W(4))
      W(9)=IOLDMD
      W(10)=IBL
      IF(IOLD  .EQ.3) W(10)= INS
      NR = 0
      CALL EWRITE(EXFILE,NR,W,10,IR)
      RETURN
      END
**** SOURCE FILE : M0000983.V01   ***
*
C.....FORTRAN SUBROUTINE             UNPACK...              3/1/68   GK
C
C                                                7/69      RW
C
C             FORTRAN SUBROUTINE UNPACK
C
C PURPOSE     TO UNPACK THE INDICATOR WORD FOR AN ENTRY IN THE
C             CANONICAL FORM TABLE
C
C LINKAGE     CALL UNPACK (RESULT,MODE,SIZE,SUB)
C
C ARGUMENTS   RESULT  AN ARRAY WITHIN THE CANONICAL FORM TABLE
C            IMODE  INTEGER TO CONTAIN MODE OF THE SURFACE
C            ISIZE  INTEGER TO CONTAIN SIZE OF CANONICAL FORM
C            ISUB   INTEGER TO CONTAIN TEH NAME SUBSCRIPT OF SURFACE
C
      SUBROUTINE UNPACK (RESULT,IMODE,ISIZE,ISUB)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION RESULT (10)
      DATA KLIT1,KLIT2/1000000,10000/
      J = 0
   10 IPACK=DABS(RESULT(J))
      IMODE = IPACK/KLIT1
      ISIZE = (IPACK-IMODE*KLIT1)/KLIT2
      ISUB = IPACK-IMODE*KLIT1 -ISIZE*KLIT2
      RETURN
      END
**** SOURCE FILE : M0001127.V02   ***
*
      FUNCTION VDOTF(B,C)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION B(*),C(*)
      VDOTF=B(1)*C(1)+B(2)*C(2)+B(3)*C(3)
      RETURN
      END
**** SOURCE FILE : VSCALE.ORG   ***
*
      SUBROUTINE VSCALE(S,V1,V2)
C
C    PURPOSE: TO APPLY A SCALE FACTOR TO A VECTOR  ( V2=S*V1 )
C
      DOUBLE PRECISION S,V1,V2
      DIMENSION V1(3),V2(3)
C
      DO 10 I=1,3
        V2(I)=S*V1(I)
   10 CONTINUE
C
      END
**** SOURCE FILE : M0002876.V03   ***
*
C
C.....FORTRAN SUBROUTINE             ZSURF....              6/10/68 EAN
C
C              FORTRAN SUBROUTINE ZSURF
C
C PURPOSE      TO DEFINE A PLANE WHICH WILL GIVE THE Z COORDINATE
C              OF A POINT WHICH HAS NOT BEEN EXPLICITY DEFINED, BY
C              THE FOLLOWING APT STATEMENT
C                   ZSURF/P
C
C LINKAGE      CALL ZSURF (PL)
C
C ARGUMENTS    PL      ARRAY CONTAINING THE CANONICAL FORM OF THE
C                      INPUT PLANE
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          APT077
C              REAL FUNCTION       ABS
C              SUBROUTINE          ERROR
C
      SUBROUTINE ZSURF (PL)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION PL(4)
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSHAR3.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'LDEF.INC'
C...  13. IBRKPT BLOCK. USED FOR DYNDMP BREAKPNTS. INTEGER EQUIVALENCED
C...      TO ISV(30).
C
      INCLUDE 'ISHR16.INC'
      INCLUDE 'KNUMBR.INC'
C
C
      DATA ZLIT1/1.0D-1/
C
C
C
C...     CHECK VALIDITY AND TRANSFORM
C
      CALL APT077 (PL,K0)
      IF (UNFLAG) GO TO 30
C.... ERROR WHEN ZSURF IS PARALEL TO ZAXIS OF LOCAL SYSTEM
      IF(DABS(L(3)).LT.ZLIT1) GO TO 30
      ZFLAG=.FALSE.
C
C...     MOVE ZSURF INTO REF ARRAY
C
      DO 10 I=1,4
      REF(1,I) = PL(I)
   10 REF(2,I) =  L(I)
C
   20 CONTINUE
      RETURN
   30 CALL ERROR (49,'ZSURF   ')
      GO TO 20
       END
**** SOURCE FILE : M0000991.V03   ***
*
C.....FORTRAN SUBROUTINE             ZVECT....              3/1/68   GK
C
C              FORTRAN LOGICAL FUNCTION ZVECT
C
C PURPOSE      TO DETERMINE WHETHER A VECTOR HAS BEEN DEFINED
C              AND IS NOT WITHIN TOLERANCE OF ZERO.
C
C LINKAGE      CALL AVECT (RESULT)
C
C ARGUMENTS    RESULT  ARRAY CONTAINING THE CANONICAL FORM OF
C                      THE VECTOR
C
C SUBSIDIARIES TYPE                ENTRY
C              REAL FUNCTION       ABS
C              LOGICAL FUNCTION    CKDEF
C
      LOGICAL FUNCTION ZVECT (RESULT)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      DIMENSION RESULT(3)
      LOGICAL CKDEF
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'ZNUMBR.INC'
C
C
C
      ZVECT=(.NOT.CKDEF(RESULT)).AND.((DABS(RESULT(1))+DABS(RESULT(2))+
     1    DABS(RESULT(3))).GT.Z5EM6)
      RETURN
       END
