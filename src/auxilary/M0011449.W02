*
      BLOCK DATA BDEBUF
C
      COMMON/EBUF/EBUFF,K,N,KEB,KRF
      INTEGER EBUFF(516)
      DATA K/2/,N/0/,KEB/1/,KRF/0/
      END
C
C      FORTRAN SUBROUTINE  EWRITE
C  PURPOSE   TO BLOCK CL RECORDS
C
C  LINKAGE     CALL EWRITE(EXFILE,MR,ICLDAT,J,IR)
C
C  ARGUMENTS   EXFILE  FILE NUMBER OF EXFILE
C              MR      INTEGER TO CONTAIN RECORD NUMBER
C              ICLDAT  ARRAY CONTAINING THE RECORD TO BE WRITTEN ON
C                      EXFILE.
C              J       NUMBER OF WORD (4 BYTE) IN RECORD
C              IR      ERROR RETURN FLAG, =0 NOERROR , =1 ERROR.
C
C  IMPORTANT VARIABLES
C              KEB     NUMBER OF 1ST RECORD IN A BLOCK
C              N       NUMBER OF LAST RECORD IN A BLOCK
C              EBUFF   THE BUFFER TO CONTAIN THE RECORDS.
C
      SUBROUTINE EWRITE(EXFILE,MR,ICLDAT,J,IR)
C
      INCLUDE (CLDT)
      LOGICAL GOFLG
C
      COMMON/EBUF/EBUFF,K,N,KEB,KRF
      SAVE /EBUF/
      INTEGER EBUFF(516),EXFILE,ICLDAT(516)
      INTEGER KFINI,BCDF
      LOGICAL FIRST
      SAVE KFINI,FIRST
      DATA GOFLG/.FALSE./
      DATA FIRST/.TRUE./
C
      IF (FIRST)THEN
         KFINI = BCDF('FINI')
         FIRST = .FALSE.
      ENDIF
C
      IF(K+J.GT.514) GO TO 1
   10 N=N+1
      ICLRCD=N
   15 EBUFF(1) = KEB
      EBUFF(2) = N
      EBUFF(K+1)=N
      EBUFF(K+2)=J
      K=K+2
      DO 20 I=1,J
      K=K+1
   20 EBUFF(K)=ICLDAT(I)
C     IF THE RECORD IS FINI,  TRUNCATE THE BLOCK
C       AND WRITE OUT TO EXFILE.
      IF(ICLDAT(1).EQ.KFINI) GO TO 30
      MR = N
      RETURN
C
C     BUFFER IS FULL, WRITE THE BLOCK ON EXFILE
C
    1 NR=0
      CALL AWRITE(EXFILE,NR,EBUFF,K,IR)
      ICLBLK=NR
      K=2
      KEB = N + 1
      GO TO 10
C
   30 EBUFF(2)=N
      NR=0
      CALL AWRITE(EXFILE,NR,EBUFF,K,IR)
      RETURN
      END
C
C    ..  SUBROUTINE EREAD  ....
C
C  PURPOSE   TO GET 1 CL RECORD
C
C  LINKAGE     CALL EREAD(EXFILE,IBUFF,NN,NBF,NRF,NRP,ISZ,IR)
C
C  ARGUMENT    EXFILE  FILE NUMBER OF EXFILE
C              IBUFF   INTEGER ARRAY TO CONTAIN THE READ RECORD.
C              NN      INTEGER SEARCHED POSITON.
C              NBF     INTEGER FIRST BLOCK  NUMBER TO BE READ.
C              NRF     INTEGER FIRST RECORD NUMBER TO BE READ.
C              NRP     INTEGER POSITION OF DESIRED DATA.
C              ISZ     INTEGER TO CONTAIN THE SIZE OF RECORD.
C              IR      RETURN ERROR FLAG. =0 NO ERROR  ,  =1 ERROR.
C
C  IMPORTANT VARIABLES
C              KK      POINTER TO FIND THE POSITION OF RECORD IN THE
C                      BLOCK.
C
      SUBROUTINE EREAD(EXFILE,IBUFF,NN,NBF,NRF,NRP,ISZ,IR)
      INCLUDE (CLDT)
      LOGICAL GOFLG
C
      COMMON/EBUF/EBUFF,K,N,KEB,KRF
      SAVE /EBUF/
      INTEGER EBUFF(516),EXFILE,NCL(2),GODLT
      INTEGER BCDF
      LOGICAL FIRST
      DIMENSION IBUFF(516)
      DATA GOFLG/.FALSE./
      DATA FIRST/.TRUE./
C
      IF (FIRST)THEN
         NCL(1) = BCDF('CLDA')
         NCL(2) = BCDF('TA  ')
         GODLT = BCDF('GODL')
         FIRST = .FALSE.
      ENDIF
C
C     WRITE THE CURRENT BLOCK
C
      IF(K.EQ.2)GOTO 100
      NR = 0
      CALL AWRITE (EXFILE,NR,EBUFF,K,IR)
      ICLBLK = NR
      KEB = N + 1
      K = 2
C
C     RETRIEVE A DEFINED BLOCK CONTAINING THE LAST MOTION COMMAND.
C
  100 IF(ISZ.GT.0)GOTO 130
      IF(NB.EQ.NBF)GOTO 110
      KS = 516
      NB = NBF
      CALL AREAD (EXFILE,NB,EBUFF,KS,IR)
C
C     STANDARD EXFILE RECORD FORMAT
  110 JJ=KS+3+2*ISZ*(NRP-NN+1)
      MM=JJ-3-2*ISZ
      DO 120 I=JJ,MM
  120 IBUFF(I-JJ+1)=EBUFF(I)
      RETURN
C
C     EXFILE RECORD EXTENDED FORMAT. MORE THAN ONE MOTION COMMAND.
  130 IF(KRF.NE.NRF)GOTO 150
      IF(NN.GT.MAXN)GOTO 205
      IF(NN.GT.MINN)GOTO 230
  150 NB=NBF-1
      MINN=0
      KRF=NRF
C
C     READ FIRST BLOCK OF THE CLDAT SECTION.
  160 NB = NB + 1
      IF(NB.GT.ICLBLK)CALL HELP
      KS = 516
      CALL AREAD (EXFILE,NB,EBUFF,KS,IR)
      IF(NRF.GT.EBUFF(2)) GO TO 160
C
C     START OF THE CLDAT SECTION FOUND.
  170 KK = 3
      GOTO 185
  180 KK = KK+EBUFF(KK+1) + 2
      IF (KK.GE.KS) CALL HELP
  185 IF (EBUFF(KK).LT.NRF)GOTO 180
C
C     IS IT A MOTION COMMAND ?
  190 IF(EBUFF(KK+2).EQ.NCL(1))GOTO 220
  200 KK = KK+EBUFF(KK+1) + 2
      IF (KK.GE.KS-1) GOTO 160
      GOTO 190
  205 MINN=MAXN
  210 GOFLG=.FALSE.
      GOTO 200
C
C     IS IT A CLDATA RECORD GIVING POSITIONS ?
  220 IF(EBUFF(KK+3).NE.NCL(2))GOTO 200
      IF(EBUFF(KK+10).EQ.GODLT)GOFLG=.TRUE.
      IF(EBUFF(KK+ 9).EQ.1)GOTO 200
      IF(GOFLG)GOTO 210
C
C     IS DEMANDED POSITION WITHIN THAT RECORD ?
      MAXN=MINN+EBUFF(KK+7)/ISZ
      IF(MAXN.GE.NN)GOTO 230
      MINN=MAXN
      GOTO 200
C
C     POSITION FOUND
  230 JJ=KK+2*ISZ*(NN-MINN-1)
      IF(NRP.EQ.0)GOTO 240
C     EXFILE RECORD EXTENDED FORMAT.
      JJ=JJ+8*NRP+4
      MM=JJ+5
      GOTO 250
C     EXFILE RECORD STANDARD FORMAT.
  240 JJ=JJ+10
      MM=JJ+2*ISZ-3
  250 I=0
      DO 260 J=JJ,MM
      I=I+1
      IF(NRP.GT.0)IBUFF(I+6)=EBUFF(J)
  260 IBUFF(I)=EBUFF(J)
C
      RETURN
      END
