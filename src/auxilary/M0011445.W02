*
C.....FORTRAN SUBROUTINE  ....ATAPE          8/68                    HG
C
C  PURPOSE     TO FORM THE CL RECORD AND WRITE IT ON EXFILE.
C
C  LINKAGE     CALL  ATAPE
C
C  ARGUMENTS   NONE
C
C  IMPORTANT VARIABLES
C              ICL     INDICATOR
C                      =2  CONTINUATING CL POINT.
C                      =3  LAST CL POINT.
C              KCR     CONTAINING THE LAST ICL VALUE.
C              MAXNR   MAXIMUM NUMBER OF RECORD PRODUCED BY THIS
C                      MOTION STATEMENT.
C              NUMCNT  MAXIMUM NUMBER OF POINT PRODUCED BY THE LAST
C                      MOTION STATEMENT.
C              JAXNR   EQUAL TO MAXNR BUT SAVED UNTIL NEXT MOTION
C                      STATEMENT.
C              ISIZE   COUNTER OF THE BUFFER.
C              NR      RECORD NUMBER ASSIGNED BY EWRITE.
C              CLPONT  BUFFER TO CONTAIN CL DATA.
C              ILPONT  INTEGER BUFFER ARRAY EQUIVALENT TO CLPONT.
C              KB      MAXIMUM NUMBER OF CL DATA IN THE BUFFER.
C                      63 OR 36 ACCORDING TO THE MULTAX SPECIFICATION.
C              JB      THE RECORD NUMBER WHERE THE SPECIFIED POINT
C                      WILL EXIST.
C              IEE     ERROR RETURN INDICATOR.
C
      SUBROUTINE ATAPE
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
C
      INCLUDE (TOTAL)
      INCLUDE (FXCOR)
      INCLUDE (HOLRTH)
      INCLUDE (SV)
      INCLUDE (ISV)
      INCLUDE (IFXCOR)
      INCLUDE (KNUMBR)
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE (SYMFIL)
C
      INCLUDE (BLANKCOM)
C
      COMMON/SSARLM/B(64,4),U(4),V(4),ITOP(6,4,4),IFLAG(4,4),IPNUM(4)
C
      INCLUDE (CLDT)
C
      LOGICAL ERRCTR
      DIMENSION MODSRF(2)
C
      DIMENSION CLPONT(256),ILPONT(512),R(6)
      EQUIVALENCE (CLPONT(1),ILPONT(1))
      CHARACTER*6 GODLTA
      INTEGER Z4E,BCDF
      PARAMETER (Z4E=1308622848)
      LOGICAL FIRST
      SAVE CLPONT,FIRST
      DATA FIRST/.TRUE./
      DATA ILPONT(3)/Z4E/,ILPONT(5)/Z4E/
      DATA ISIZE,KCR,IPOW /2*3,Z4E/
      DATA JMP /1/,GODLTA /'GODLTA'/
C... INITIALIZE CLDAT BUFFER
      IF (FIRST) THEN
        ILPONT(1)=BCDF('CLDA')
        ILPONT(2)=BCDF('TA  ')
        FIRST=.FALSE.
      ENDIF
C
C...     TEST FOR AN ARELEM ERROR OR FOR DNTCUT
  185 IF(IAERR.NE.0.OR.ICUT.NE.0) GO TO 3
      IF(KCR.NE.3) GO TO 7
      IF(CLDFG) ICLTAB(2,ICLINE)=ICLTAB(2,ICLINE)+NUMCNT
      NUMCNT=0
      NSIZE =0
      ERRCTR=.FALSE.
    7 KCR=ICL
      IF(MODFER.EQ.GODLTA)GOTO 5
      NUMCNT=NUMCNT+1
    5 ILPONT(2*ISIZE+1)=IPOW
      ILPONT(2*ISIZE+2) = ICL
      JMP=1
      IF(ICLCOD.GT.1)GOTO 100
    6 DO 1 I=1,3
      CLPONT(ISIZE+2)=TE(I)
C
C...CHECK IF THERE SHOULD BE NO TOOL AXIS PRINTOUT
      IF (MULOUT.EQ.K0) GO TO 1
C
      CLPONT(ISIZE+5)=TA(I)
    1 ISIZE=ISIZE+K1
      ISIZE = ISIZE + K4
      IF (MULOUT.EQ.K0) ISIZE=ISIZE-K3
    4 IF((ICL.EQ.K2).AND.(ISIZE.LT.255)) GO TO 190
    2 NR=0
      J=2*ISIZE
      ILPONT(4) = ISEQNO
      ILPONT(6) = ISIZE - 3
      CALL EWRITE(EXFILE,NR,CLPONT,J,IR)
      KNR=NR
      KNB=ICLBLK
      ISIZE = 3
      GOTO(190,5),JMP
    3 IF(ISIZE.GT.3) GO TO 2
  190 RETURN
C
  200 ISIZE=NSIZE
      JMP=2
      GOTO 2
C
C...SPECIAL CLDAT - PRINTOUT REQUESTED
C
  100 IF(ERRCTR)GOTO 119
      ERRCTR=.TRUE.
      MODSRF(1)=ISFIDN(IPS)
      MODSRF(2)=ISFIDN(IDS)
C
      DO 120 I=1,6
      IF(MOD(ICLCOD,IPTVEC(I+3)).NE.0)GOTO 120
C          PDS NDS PPS NPS UVPDS UVPPS
      GOTO(111,111,115,115,  113,  117),I
  111 IF(MODSRF(2).GT.0.AND.MODSRF(2).LT.18)GOTO 120
  113 IF(MODSRF(2).EQ.29)GOTO 120
      GOTO 118
  115 IF(MODSRF(1).GT.0.AND.MODSRF(1).LT.18)GOTO 120
  117 IF(MODSRF(1).EQ.29)GOTO 120
  118 CALL ERROR(98,'ATAPE   ')
      GOTO 119
  120 CONTINUE
C
  119 NSIZE=ISIZE
      IF(MODFER.EQ.GODLTA)GOTO 6
      ISIZE=ISIZE+K1
      DO 140 I=1,9
      IF(MOD(ICLCOD,IPTVEC(I)).NE.0)GOTO 140
      ISIZE=ISIZE+K1
      IF(ISIZE.GT.253)GOTO 200
      ISIZ2=2*ISIZE
      ILPONT(ISIZ2-1)=BCDF(PNTVCT(I)(1:4))
      ILPONT(ISIZ2)=BCDF(PNTVCT(I)(5:8))
      DO 130 J=1,3
      ISIZE=ISIZE+K1
      GOTO(121,122,123,124,125,126,127,128,129),I
  121 CLPONT(ISIZE)=TE(J)
      GOTO 130
  122 CLPONT(ISIZE)=TA(J)
      GOTO 130
  123 CLPONT(ISIZE)=TI(J)
      GOTO 130
  124 CLPONT(ISIZE)=SP(J,IDS)
      GOTO 130
  125 CLPONT(ISIZE)=SN(J,IDS)
      GOTO 130
  126 CLPONT(ISIZE)=SP(J,IPS)
      GOTO 130
  128 LL=IDS-1
      GOTO 131
  129 LL=IPS-1
  131 CONTINUE
      CLPONT(ISIZE)=0.
      ISIZE=ISIZE+2
      CLPONT(ISIZE)=0.
      CLPONT(ISIZE-1)=0.
      IF(MODSRF(LL).NE.29)GOTO 140
      CLPONT(ISIZE-2)=U(LL)
      CLPONT(ISIZE-1)=V(LL)
      JJ=CANON((LL-1)*10+1)
      CLPONT(ISIZE)=JJ*1000+IPNUM(LL)
      GOTO 140
  127 CLPONT(ISIZE)=SN(J,IPS)
  130 CONTINUE
  140 CONTINUE
      GOTO 4
      END
C
C....  ATAPER
C
      SUBROUTINE  ATAPER (R,NN,JJ,KK,IEE)
C  PURPOSE  TO RETRIEVE CL POINT FROM CLTAPE.
C
C  LINKAGE  CALL ATAPER (R,NN,JJ,KK,IEE)
C
C  ARGUMENTS   R   ARRAY TO CONTAIN THE CL DATA.
C              NN  INTEGER INDICATING CL POINT NUMBER
C              JJ  INTEGER CLDAT SECTION NUMBER
C              KK  INTEGER DATA TYPE
C
C     CHECK IF THE SPECIFIED POINT NUMBER IN THE SPECIFIED SECTION.
C
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
C
      INCLUDE (IFXCOR)
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE (SYMFIL)
C
      INCLUDE (CLDT)
C
      DIMENSION CLPONT(256),ILPONT(512),R(6)
      EQUIVALENCE (CLPONT(1),ILPONT(1))
      INTEGER Z4E,KCST
      PARAMETER (Z4E=1308622848)
      SAVE KCST
      DATA IPOW/Z4E/,KCST/Z4E/
      NR=NN
      IF(JJ.GT.0)GOTO 480
      IF(NR.LE.0.OR.NR.GT.NUMCNT)GOTO 610
C      IF(NSIZE.GT.0)GOTO 610
C
C     RETRIEVE A POINT OR A VECTOR OF THE LAST MOTION COMMAND
C     STORE 0,0,1 AS I,J,K
  440 R(4) = 0.
      R(5) = 0.
      R(6) = 1.
      ISZ=4+3*MULOUT
      I  =252/ISZ
      I1 =(NUMCNT-1)/I
      I2 =(NR    -1)/I
      IF(I1.NE.I2)GOTO 460
C
C     DESIRED POSITION OF MOTION COMMAND IS IN CLPONT
      J = 5+ILPONT(6)-ISZ*(NUMCNT-NR+1)
      K = J-2+ISZ
      L=0
      DO 450 I=J,K
      L=L+1
  450 R(L)=CLPONT(I)
      GOTO 600
C
C     FETCH EXFILE BLOCK CONTAINING DESIRED POSITION
  460 NBF=KNB-I1+I2+1
      NRP=I*(I2+1)
      CALL EREAD(EXFILE,R,NR,NBF,NRF,NRP,-ISZ,IR)
      GOTO 600
C
C     SEQUENTIAL SEARCH FROM BEGIN OF  'CLDAT/START,..'  REGION
  480 IF(JJ.EQ.KSCT)GOTO 510
      DO 490 LINE=1,ICLCNT
      IF(ICLTAB(1,LINE).EQ.JJ)GOTO 500
  490 CONTINUE
      GOTO 610
C
  500 KKF=IPOW
      I33=IPOW
  510 I3 =ICLTAB(3,LINE)
      IF(CLDFG.OR.NR.LE.0.OR.NR.GT.ICLTAB(2,LINE))GOTO 610
      IF(I3.GT.1)GOTO 520
      IF(KK.GT.2)GOTO 610
      ISZ=4+3*MULOUT
      NRP=0
      GOTO 540
C
  520 IF(MOD(I3,IPTVEC(KK)).NE.0)GOTO 610
      IF(KK.EQ.KKF.AND.I33.EQ.I3)GOTO 550
      NRS=0
      DO 530 I=1,9
      IF(MOD(I3,IPTVEC(I)).EQ.0)NRS=NRS+1
      IF(KK.EQ.I)NRP=NRS
  530 CONTINUE
      ISZ=NRS*4+1
  540 KSCT=JJ
      KKF   =KK
      I33   =I3
      NBF   =ICLTAB(4,LINE)
      NRF   =ICLTAB(5,LINE)
C
C  NR             RECORD NUMBER IN THE DESIRED CLDAT SECTION.
C  NBF            FISRT EXFILE BLOCK  NUMBER OF THE CLDAT SECTION.
C  NRF            FISRT EXFILE RECORD NUMBER OF THE CLDAT SECTION.
C  ISZ            CLDAT RECORD SIZE.(DATA OF ONE POSITION = POINT)
C  NRP            POSITION OF THE DATA WANTED.
C
  550 CALL EREAD (EXFILE,R,NR,NBF,NRF,NRP,ISZ,IR)
C
  600 IEE = 0
      RETURN
  610 IEE = 1
      KSCT=IPOW
      RETURN
      END
