*
C
C.....FORTRAN SUBROUTINE                   APT331
C
      SUBROUTINE APT331
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C PURPOSE      TO WRITE ONTO THE VERIFICATION LISTING TAPE--
C      1) THE DIAGNOSTIC NUMBER AND THE NAME OF THE PROGRAM
C         WHICH ISSUED THE DIAGNOSTIC
C      2) THE DIAGNOSTIC MESSAGE
C      IF THE DIAGNOSTIC IS A RESTART ERROR IT ALSO WRITES -
C      3) USEFUL INFORMATION ABOUT THE CUTTER AND THE PART,DRIVE,
C         AND CHECK SURFACES AS WELL AS MANY INTERMEDIATE CUTTER
C         LOCATION PARAMETERS
C
C LINKAGE      CALL APT331
C ARGUMENTS    NONE
C SUBSIDIARIES NONE
C
C
      INTEGER BCDF,ITEMP(2)
      EQUIVALENCE (ITEMP(1),DTEMP)
C
      COMMON/EDITOR/EDITOR
      DIMENSION EDITOR(1500),IEDTOR(2,1500)
      EQUIVALENCE (EDITOR(1),IRECRD(1))
      DIMENSION IRECRD(2)
      EQUIVALENCE  (EDITOR(1),IEDTOR(1,1))
      DIMENSION AREA3(250)
      EQUIVALENCE (EDITOR(1500),AREA3(250))
      INCLUDE (DARRAY)
C
C... *** EQUIVALENCE OF NECESSARY ARELEM VARIABLES***
C
C...     EQUIVALENCE FOR SV BLOCK VARIABLES
C
      EQUIVALENCE           (EDITOR(10),TAU1), (EDITOR(11),TAU2),
     1   (EDITOR(12),TH),   (EDITOR(13),S),    (EDITOR(14),RC),
     2   (EDITOR(15),SP(1)),(EDITOR(18),SN(1)),(EDITOR(21),TN(1)),
     3   (EDITOR(24),CC(1)),(EDITOR(27),VT(1))
      DIMENSION  SP(3), SN(3), TN(3), CC(3), VT(3)
C
C...     EQUIVALENCE FOR ISV BLOCK VARIABLES
C
      EQUIVALENCE   (IEDTOR(2,6),ITLON),  (IEDTOR(2,7),ISFTYP),
     +              (IEDTOR(2,8),IFL4),   (IEDTOR(2,9),IFAR)
C
C...     EQUIVALENCE FOR NECESSARY FXCOR AND IFXCOR VARIABLES
C
      EQUIVALENCE          (EDITOR(6),CUTDAT(1)),  (EDITOR(11),TI(1)),
     +   (EDITOR(14),TE(1)), (EDITOR(18),FWD(1)),  (EDITOR(21),TA(1))
      EQUIVALENCE (EDITOR(8),DPMAX), (EDITOR(10),ELMAX)
      DIMENSION  CUTDAT(7), TI(3), TE(3), TA(3), FWD(3)
C
      EQUIVALENCE              (IEDTOR(2,17),IS), (IEDTOR(2,9),NMPNTS),
     1   (IEDTOR(2,7),ISTRUP), (IEDTOR(2,6),IGO), (IEDTOR(2,4),ICSCNT)
C
C......EQUIVALENCE FOR PREVIOUS SEQ. NO.
      EQUIVALENCE  (EDITOR(477),SAVSEQ)
C
C....***** EQUIVALENCE OF PRINTOUT AND IDENTIFICATION VARIABLES ***
C
C...     EQUIVALENCE FOR QUADRIC SURFACE IDENTIFICATION
C
      EQUIVALENCE  (EDITOR(6),COEFF(1)),  (EDITOR(16),TRANS(1,1))
      EQUIVALENCE (IEDTOR(2,5),IQSDFG)
      DIMENSION   CANFRM(10), COEFF(10), XCOEFF(5), TRANS(3,4)
      EQUIVALENCE (COEFF(6),XCOEFF(1))
C
      CHARACTER*32    QUAD(16),QSDNAM
C
C....    LABEL PRINTOUT
C
      CHARACTER*28   JCODE(5), KCODE(16)
C
C
C....    EQUIVALENCE FOR SURFACE NAME AND TYPE VARIABLES
C        AND CANONICAL FORM ARRAY
C
      EQUIVALENCE  (EDITOR(30),SRFNME),  (EDITOR(34),CANFRM(1)),
     +  (IEDTOR(2,31),ISUB), (IEDTOR(2,32),MODE), (IEDTOR(2,33),ISIZE)
C
C....    EQUIVALENCE FOR IMPORTANT PRINTOUT VARIABLES
C
C
      EQUIVALENCE  (IEDTOR(2,2),ISBTYP), (IEDTOR(2,4),NUMERR(2))
      EQUIVALENCE  (APRNT2(17),R(1)), (APRNT2(21),H(1))
C
      DIMENSION  NUMERR(2),APRNT1(20),APRNT2(76),R(4),H(4)
      DIMENSION   JTLON(2), JSFTYP(2), JFL4(2), JFAR(2)
      CHARACTER*6 GOTYP(7),TYP(6)
      CHARACTER*4 SRFTYP(4)
      CHARACTER*8 BLANK ,BADTYP
      CHARACTER*12 LSTRT,MSTRT,BLNK
C
      INCLUDE (KNUMBR)
C
C
C..      SURFACE NAME ARRAY
C
      CHARACTER*6 ANAME(30)
C
C        SUBROUTINE NAME INDEX ARRAY
C
      DIMENSION  INDEX(100),INDEXA(50),INDEXB(50)
      EQUIVALENCE   (INDEX(1),INDEXA(1)), (INDEX(51),INDEXB(1))
C
C...  SUBROUTINE NAMES
C
      CHARACTER*6   NAME(100)
C
C        DATA FOR QUADRIC SURFACE TYPES
C
      DATA  QUAD(1)   /' NO RECOGNIZABLE SURFACE        '/
      DATA  QUAD(2)   /' A PLANE                        '/
      DATA  QUAD(3)   /' TWO PARALLEL (COINCIDENT)PLANES'/
      DATA  QUAD(4)   /' A PARABOLIC CYLINDER           '/
      DATA  QUAD(5)   /' TWO INTERSECTING PLANES        '/
      DATA  QUAD(6)   /' A HYPERBOLIC CYLINDER          '/
      DATA  QUAD(7)   /' AN ELLIPTIC CYLINDER           '/
      DATA  QUAD(8)   /' A HYPERBOLIC PARABOLOID        '/
C
      DATA  QUAD(9)   /' AN IMAGINARY ELLIPTIC CYLINDER '/
      DATA  QUAD(10)  /' AN ELLIPTIC PARABOLOID         '/
      DATA  QUAD(11)  /' A HYPERBOLOID OF ONE SHEET     '/
      DATA  QUAD(12)  /' A CONE                         '/
      DATA  QUAD(13)  /' A HYPERBOLOID OF TWO SHEETS    '/
      DATA  QUAD(14)  /' AN ELLIPSOID                   '/
      DATA  QUAD(15)  /' A POINT ELLIPSOID              '/
      DATA  QUAD(16)  /' AN IMAGINARY ELLIPSOID         '/
C
C....    DATA FOR LABEL PRINTOUT
C
      DATA  JCODE(1)   /'    TOOL TO SURFACE RELATION'/
      DATA  JCODE(2)   /'    INTERSECTION NUMBER     '/
      DATA  JCODE(3)   /'    TOLERANCES   OUTTOL     '/
      DATA  JCODE(4)   /'                  INTOL     '/
      DATA  JCODE(5)   /'    THICK SETTINGS          '/
C
      DATA  KCODE(1)   /'    EFF. DIST. TO SURFACE   '/
      DATA  KCODE(2)   /'    EFF. SURFACE POINT     X'/
      DATA  KCODE(3)   /'                           Y'/
      DATA  KCODE(4)   /'                           Z'/
      DATA  KCODE(5)   /'    TOOL POINT             R'/
      DATA  KCODE(6)   /'                           H'/
      DATA  KCODE(7)   /'    SURFACE NORMAL         X'/
      DATA  KCODE(8)   /'                           Y'/
      DATA  KCODE(9)   /'                           Z'/
      DATA  KCODE(10)  /'    TOOL NORMAL            X'/
      DATA  KCODE(11)  /'                           Y'/
      DATA  KCODE(12)  /'                           Z'/
      DATA  KCODE(13)  /'    RADIUS OF CURVATURE     '/
      DATA  KCODE(14)  /'    CENTER OF CURVATURE    X'/
      DATA  KCODE(15)  /'                           Y'/
      DATA  KCODE(16)  /'                           Z'/
C
C     MOTION AND CONTROL SURFACE TYPES
C
      DATA GOTYP/'GOLFT ','GORGT ','GOFWD ','GOBACK','GOUP  ','GODOWN',
     1           '      '/
      DATA   TYP/'TO    ','PAST  ','ON    ','TANTO ','PSTAN ','OFFSET'/
      DATA  SRFTYP/'PS  ','DS  ','CS1 ','CS2 '/,BLANK /'        '/
      DATA LSTRT/'START OF CUT'/,BLNK/'            '/,BADTYP/' UNKNOWN'/
C
C     SURFACE NAME ARRAY DATA
C
      DATA ANAME/ 'LINE  ','PLANE ','CYLNDR','CIRCLE','SPHERE','HYPERB',
     1   'LCONIC','ELLIPS','CONE  ','GCONIC','TABCYL','RLDSRF','POLCON',
     2   'QADRIC','PARSRF','      ','      ','MATRIX','POINT ','VECTOR',
     3   '      ','      ','      ','UNKNOW','      ','PATERN','      ',
     4   '      ','SSURF ','SCURV '/
C
C     SUBROUTINE NAME INDEX ARRAY
C
      DATA  INDEXA /      0,  20001,  20101,  20102,  20103,
     1                20104,  20105,  20106,  20107,  20108,
     2                20201,  20202,  20203,  20204,  20205,
     3                20206,  20207,  20208,  20901,  20902,
     4               -20903,  21001,  21002, -21003,  21101,
     5               -21102,  21301,  22001,  22201,  22202,
     6                22203,  22204,  22205,  22206,  22207,
     7                22208,  22209,  22210, -22211,  22212,
     8                22213,  22214,  22215, -22216,  22217,
     9               -22300,  22301, -22701,  23401,  23501/
      DATA  INDEXB /  23901,  23902,  23903,  23904,  23905,
     1               -22401,  24001,  24002,  24003,  24004,
     2               -24201, -24202,  24203, -24401,  24402,
     3                24403,  24404, -25001,  25002,  25003,
     4                25004,  25005,  25006,  25007,  25008,
     5                    0,  26002,      0,  26001,  26401,
     6                26601, -26801,  26802,  26803, -28801,
     7                20109,  23908,  24005,  24006,  26602,
     8               -27001,  27002,  27003,  27104,  27105,
     9                25009,  20110,  27206,      0,      0/
C
C     SUBROUTINE NAMES
C
      DATA  NAME            /'APT200','APT201','  GO  ',' PSIS ',
     1     ' TLLFT',' TLRGT',' TLON ','TLONPS','TLOFPS','INDIRP',
     2     'INDIRV','SRFVCT',' FROM ','GODLTA',' GOTO ',' CUT  ',
     3     'DNTCUT','NDTEST','COMP3D','OUTTOL','INTOL ','TOLER ',
     4     'CUTTER','TLAXIS','MULTAX','MAXDP ','NUMPTS','THICK ',
     5     ' NOPS ','AUTOPS','GOUGCK','NKNOWN','APT232','APT233',
     6     'APT234','APT235','APT236','APT237','APT238','ARLM2 ',
     7     'ARLM3 ','NKNOWN','CHECK ','NKNOWN','PLANE ','NKNOWN',
     8     'DELTA ','NKNOWN','GOUGE ','NKNOWN','CENTR ','NKNOWN',
     9  'CPLAN ', 'NKNOWN', 'DDSSRF', 'NKNOWN', 'TINKER', 'NKNOWN',
     1     'NKNOWN','NKNOWN','AMIND ','NKNOWN','NKNOWN','NKNOWN',
     2     'U1COMP','NKNOWN','TLNORM','NKNOWN','RADAR ','NKNOWN',
     3     'LCLS  ','DDPARA','FCN   ','NKNOWN','NKNOWN','NKNOWN',
     4     'NKNOWN','NKNOWN','NKNOWN','NKNOWN','NKNOWN','NKNOWN',
     5     ' DDST ','DDPLAN','DDCYLN','DDSPHR','DDQUAD','DDCONE',
     6     'DDTABC','NKNOWN','NKNOWN','NKNOWN',' QUAD ','VNORM ',
     7     'CROSS ','ATAPE ','ASTOS ',' AERR ','DYNDMP','NKNOWN'/
C
C                       ***************                  ***************
C                       ***** WARNING. VLFILE  IS  EQUIVALENCE TO CLLST*
C                       ***************                  ***************
C
C     ------------------------------------------------------------
C
C
C.....   ISBTYP INDICATES TYPE OF ERROR RECORD AS FOLLOWS
C
C     ISBTYP=1 --  DIAGNOSTIC MESSAGE
C     ISBTYP=2 --  FXCOM VARIABLES
C     ISBTYP=3 --  SURFACE VARIABLES(PS)
C     ISBTYP=4 --  SURFACE VARIABLES(DS)
C     ISBTYP=5 --  SURFACE VARIABLES(CS1)
C     ISBTYP=6 --  SURFACE VARIABLES(CS2)
C     ISBTYP=7 --  QUADRIC SURFACE IDENTIFICATION
C     ISBTYP=8 --  POCKET
C
      GO TO  (10,180,30,40,40,40,110,800), ISBTYP
C
C...***** SUB-TYPE 1 - PRINT DIAGNOSTIC MESSAGE AND CUTTER PARAMETERS*
C
   10 NUMABS=IABS(NUMERR(2))
      J2=(NUMABS-20000)/100 + 1
      IF (J2 .LE. 0 .OR. J2 .GT. 100) GO TO 500
C
C...    FIND CORRECT DIAGN MESSAGE NUMBER FOR THIS ERROR
      N=1
      DO 12  M=1,100
      MOUT=M
      IF (NUMABS .EQ. IABS(INDEX(M)) )  GO TO 13
   12 CONTINUE
      N=0
   13 CALL CFORM('0',DARRAY,1,1)
      I=SAVSEQ+0.1
      CALL ICONV(I,DARRAY,2,8)
      IF( NUMERR(2)) 14,18,18
C
C..      WARNING DIAGNOSTIC
   14 CALL CFORM('.    WARNING NUMBER (',DARRAY,10,21)
      CALL ICONV(NUMERR(2),DARRAY,31,6)
      CALL CFORM(') FROM SUBROUTINE',DARRAY,38,17)
      CALL CFORM(NAME(J2),DARRAY,56,6)
      CALL CPRINT(DARRAY)
   15 IF(N .NE. K0) GO TO 16
      M=K1
      MOUT=K1
   16 CALL CLEROR(NUMABS)
C
      IF(NUMERR(2))9000,19,19
C
C...     RESTART DIAGNOSTIC
   18 CALL CFORM('.    ENTERING RESTART MODE. ERROR NUMBER (
     C      ',DARRAY,10,42)
      CALL ICONV(NUMERR(2),DARRAY,52,6)
      CALL CFORM(') FROM SUBROUTINE',DARRAY,59,17)
      CALL CFORM(NAME(J2),DARRAY,77,6)
      CALL CPRINT(DARRAY)
      GO TO 15
C
C        CHECK FOR CUTTER DEFINITION ERROR
   19 IF(J2.EQ.23) GO TO 20
      IF (MOUT .NE. 9 .AND. MOUT .NE. 11) GO TO 25
C
   20 CALL CFORM('0RESTART USING A POINT CUTTER (PARAMETERS ALL ZERO).
     C ',DARRAY,1,52)
      CALL CPRINT(DARRAY)
C
      IF (J2 .NE. 23) GO TO 9000
      CALL CFORM('0ORIGINAL (ERRONEOUS) PARAMETERS WERE--',
     C           DARRAY,1,39)
      CALL CPRINT(DARRAY)
      L=6
      DO 921 I=1,7
      CALL FCONV(CUTDAT(I),DARRAY,L,13,6)
  921 L=L+13
      CALL CPRINT (DARRAY)
      GO TO 9000
C
C...     PRINTOUT CUTTER PARAMETERS
   25 CALL CFORM('0CUTTER PARAMETERS --',DARRAY,1,21)
      CALL CPRINT (DARRAY)
      L=6
      DO 925 I2=1,7
      CALL FCONV(CUTDAT(I2),DARRAY,L,13,6)
  925 L=L+13
      CALL CPRINT(DARRAY)
      GO TO 9000
C
C...***** SUB-TYPE 3 - PART SURFACE VARIABLES *****
C
   30 CALL CFORM('0   SURFACE DATA..........',DARRAY ,1,26)
      CALL CPRINT(DARRAY)
C
C...***** SUB-TYPES 3, 4, 5, 6 - ALL SURFACE CANONICAL FORMS *****
C
C        IT INDEXES THE SURFACE
   40 IT=ISBTYP-2
C
C     CHECK FOR INVALID SURFACE MODE
      IF(MODE.LE.0.OR.MODE.GT.30) MODE=24
C
C        PRINT OUT CANONICAL FORM
      CALL CFORM(SRFTYP(IT),DARRAY,5,4)
      CALL CFORM('...',DARRAY,9,3)
      CALL HOLFRM(SRFNME ,DARRAY,13,6,NWD)
      CALL CFORM('(     ) =',DARRAY,19,9)
      CALL ICONV(ISUB,DARRAY,20,5)
      CALL CFORM(ANAME(MODE),DARRAY,29,6)
      CALL CFORM('/',DARRAY,35,1)
      IF(MODE.EQ.15) GO TO 4720
      K=ISIZE
      IF(ISIZE.GT.7) K=7
      L=37
      DO 4718 I=1,K
      CALL FCONV(CANFRM(I),DARRAY,L,11,4)
 4718 L=L+11
      IF(ISIZE.LE.7) GO TO 4720
      CALL CPRINT(DARRAY)
      L=4
      DO 4719 I=8,ISIZE
      CALL FCONV(CANFRM(I),DARRAY,L,11,4)
 4719 L=L+11
 4720 CALL CPRINT(DARRAY)
C
C        SAVE NECESSARY FLAGS FOR THIS SURFACE.
      NSV=IT-2
      IF (NSV) 58,58,59
   58 JTLON(IT)=ITLON
      GO TO 61
   59 JSFTYP(NSV)=ISFTYP
      JFL4(NSV)  =IFL4
      JFAR(NSV)  =IFAR
C
C        SAVE NECESSARY VARIABLE VALUES FOR THIS SURFACE
   61 APRNT1(IT+ 8)=TAU1
      APRNT1(IT+12)=TAU2
      APRNT1(IT+16)=TH
C
C        APRNT2 VALUES ARE FOR NON-ARLM2 DIAGNOSTICS
      APRNT2(IT)=S
      APRNT2(IT+48)=RC
      DO 81 I=1,3
      J=IT+4*(I-1)
      APRNT2(J+4)=SP(I)
      APRNT2(J+24)=SN(I)
      APRNT2(J+36)=TN(I)
      APRNT2(J+52)=CC(I)
   81 APRNT2(J+64)=VT(I)
      GO TO 9000
C
C....*****  SUB-TYPE 7 - QUADRIC SURFACE IDENTIFICATION *****
C
  110 QSDNAM=QUAD(IQSDFG)
C
C        PRINTOUT FOR QUADRIC IDENTIFICATION
C
      CALL CFORM('0',DARRAY,1,1)
      CALL CFORM(' THE SURFACE IS',DARRAY,21,15)
      CALL CFORM(QSDNAM,DARRAY,37,32)
      CALL CPRINT(DARRAY)
C
      CALL CFORM('ROTATION MATRIX',DARRAY,31,15)
      CALL CPRINT(DARRAY)
C
      DO 136 I=1,3
      L=16
      DO 135 J=1,4
      CALL FCONV(TRANS(I,J),DARRAY,L,16,7)
  135 L=L+16
      CALL CPRINT(DARRAY)
  136 CONTINUE
C
      CALL CFORM('THE TRANSFORMED COEFFICIENTS ARE- ',DARRAY,22,33)
      CALL CPRINT(DARRAY)
C
      L=16
      DO 150 I=1,5
      CALL FCONV (COEFF(I),DARRAY,L,16,7)
  150 L=L+16
      CALL CPRINT(DARRAY)
      L=16
      DO 151 I=1,5
      CALL FCONV(XCOEFF(I),DARRAY,L,16,7)
  151 L=L+16
      CALL CPRINT(DARRAY)
C
      GO TO 9000
C
C...***** SUB-TYPE 2 - PRINT FXCOM AND SURFACE VARIABLE DATA *****
C
C        CHECK FOR A STARTUP MOTION
  180 IF (ISTRUP .EQ. 1) GO TO 181
C
C        CHECK FOR A VALID MOTION COMMAND (IGO BETWEEN 1 AND 6)
      IF ((IGO+5)/6 - 1) 181,182,181
C
C        NO COMMANDED DIRECTION-PRINT BLANKS
  181 IGO=7
      GOTYP(7)=BLANK
C
C        CHECK FOR A STARTUP
  182 IF (ISTRUP.EQ.1) THEN
        MSTRT=LSTRT
      ELSE
        MSTRT=BLNK
      END IF
C
C        CHECK FOR VALID FWD MOTION VECTOR
      DO 184 I=1,3
      IF (FWD(I) .LT. 1.0D-32 .OR. FWD(I) .GT. 1.0D+32) FWD(I)=0.0
  184 CONTINUE
C
      FWDNRM=DSQRT(FWD(1)**2 + FWD(2)**2 + FWD(3)**2)
      IF (DABS(FWDNRM-1.0) .LE. 0.01) GO TO 185
      FWD(1)=0.0
      FWD(2)=0.0
      FWD(3)=0.0
C
C        PRINT OUT MOTION INFORMATION
C
  185 CALLCFORM('0MOTION AND TOOL POSITION DATA..........',DARRAY,1,40)
      CALL CPRINT(DARRAY)
      CALL CFORM('COMMANDED MOTION DIRECTION -',DARRAY,5,28)
      CALL CFORM(MSTRT,DARRAY,33,12)
      CALL CFORM(GOTYP(IGO),DARRAY,48,6)
      CALL CFORM('=',DARRAY,57,1)
      L=59
      DO 187 I=1,3
      CALL FCONV(FWD(I),DARRAY,L,16,7)
  187 L=L+19
      CALL CPRINT(DARRAY)
      CALL CFORM('CURRENT MOTION DIRECTION............................
     C=',DARRAY,5,53)
      L=59
      DO 188 I=1,3
      CALL FCONV(TI(I),DARRAY,L,16,7)
  188 L=L+19
      CALL CPRINT(DARRAY)
      CALL CFORM('CURRENT TOOL POSITION(UNACCEPTED)...................
     C=',DARRAY,5,53)
      L=59
      DO 189 I=1,3
      CALL FCONV(TE(I),DARRAY,L,16,7)
  189 L=L+19
      CALL CPRINT(DARRAY)
      CALL CFORM('CURRENT TOOL AXIS VECTOR............................
     C=',DARRAY,5,53)
      L=59
      DO 190 I=1,3
      CALL FCONV(TA(I),DARRAY,L,16,7)
  190 L=L+19
      CALL CPRINT(DARRAY)
C
C        CHECK FOR A DIAGNOSTIC FROM AMIND ASSOCIATED ROUTINES
      IF ((J2-61)*(J2-73)) 191,191,193
C
  191 IS=IS-1
      CALL CFORM('CURRENT SURFACE=',DARRAY,5,16)
      CALL CFORM(SRFTYP(IS),DARRAY,21,4)
      CALL CPRINT(DARRAY)
C
C..      IF AN ARLM2 DIAGNOSTIC SET KVAL TO 2
  193 KVAL=2
      IF (J2 .EQ. 40) GO TO 196
C
C        GIVE ADDITIONAL INFORMATION IF NOT ARLM2 ERROR
      KVAL=3
      CALL CFORM('0   MAXIMUM STEP (MAXDP)= ',DARRAY,1,25)
      CALL FCONV(DPMAX,DARRAY,26,11,4)
      CALL CFORM('MAXIMUM LENGTH(L)= ',DARRAY,45,18)
      CALL FCONV(ELMAX,DARRAY,63,11,4)
      CALL CFORM('NUMPTS=',DARRAY,82,7)
      CALL ICONV(NMPNTS,DARRAY,91,5)
      CALL CPRINT(DARRAY)
C
  196 CALL CFORM('0   GENERAL DATA - THIS CUT -',DARRAY,1,29)
      CALL CFORM('PART SURF.       DRIVE SURF.',DARRAY,39,28)
      CALL CFORM('CHECK SURF. 1      CHECK SURF. 2',DARRAY,72,32)
      CALL CPRINT(DARRAY)
C
C        FIND CORRECT TOOL TO SURFACE TYPE FOR PART AND DRIVE SURFACES
C
      DO 205  I=1,2
      IF (JTLON(I) .NE. 0) GO TO 204
      ITEMP(1)=BCDF(TYP(3)(1:4))
      ITEMP(2)=BCDF(TYP(3)(5:6))
      APRNT1(I)=DTEMP
      GO TO 205
  204 ITEMP(1)=BCDF(TYP(6)(1:4))
      ITEMP(2)=BCDF(TYP(6)(5:6))
      APRNT1(I)=DTEMP
  205 CONTINUE
C
C        FIND CORRECT TOOL TO SURFACE TYPE FOR CHECK SURFACES
C
      IF (NSV .LE. 0) GO TO 230
      DO 222  I=1,NSV
      IGT=JSFTYP(I)
C
C      TEST IF IGT MARKER GIVES VALID TOOL TO SURFACE RELATION
      IF (((IGT+3)/4 .NE. 1) .AND.(IGT .NE. 8)) GO TO 221
      IF (IGT-4) 217,218,219
C
  217 ITEMP(1)=BCDF(TYP(IGT)(1:4))
      ITEMP(2)=BCDF(TYP(IGT)(5:6))
      APRNT1(I+2)=DTEMP
      GO TO 222
  218 IF (JFL4(I) .EQ. 1) GO TO 219
      ITEMP(1)=BCDF(TYP(4)(1:4))
      ITEMP(2)=BCDF(TYP(4)(5:6))
      APRNT1(I+2)=DTEMP
      GO TO 222
  219 ITEMP(1)=BCDF(TYP(5)(1:4))
      ITEMP(2)=BCDF(TYP(5)(5:6))
      APRNT1(I+2)=DTEMP
      GO TO 222
  221 ITEMP(1)=BCDF(BADTYP(1:4))
      ITEMP(2)=BCDF(BADTYP(5:8))
      APRNT1(I+2)=DTEMP
  222 CONTINUE
C
C        PRINT OUT TOOL INFORMATION
C
  230 CALL CFORM(JCODE(1),DARRAY,6,28)
      L=42
      DO 231 I=1,IT
      CALL HOLFRM(APRNT1(I),DARRAY,L,8,NWD)
  231 L=L+18
      CALL CPRINT(DARRAY)
C
      IF (IT .LE. 2) GO TO 233
      CALL CFORM(JCODE(2),DARRAY,6,28)
      L=77
      DO 232 I=1,NSV
      CALL ICONV(JFAR(I),DARRAY,L,2)
  232 L=L+16
      CALL CPRINT(DARRAY)
C
C        MORE PRINTOUT-TOLERANCES
  233 DO 235  I=1,KVAL
      K=I+2
      M=4*(I-1)+9
      N=M+IT-1
      CALL CFORM(JCODE(K),DARRAY,6,28)
      L=36
      DO 234 J=M,N
      CALL FCONV(APRNT1(J),DARRAY,L,15,7)
  234 L=L+18
      CALL CPRINT(DARRAY)
  235 CONTINUE
C
C        IS IT AN ARLM2 DIAGNOSTIC, IF SO RETURN
C
      IF (KVAL .EQ. 2) GO TO 9000
      CALL CFORM('0   CONDITIONS AT FAILURE',DARRAY,1,25)
      CALL CPRINT(DARRAY)
C
C        COMPUTE R AND H.
C
      DO 246 I=1,IT
      DOT=TA(1)*APRNT2(I+64) + TA(2)*APRNT2(I+68) + TA(3)*APRNT2(I+72)
      VTNORM=DSQRT(APRNT2(I+64)**2 + APRNT2(I+68)**2 + APRNT2(I+72)**2)
      IF(VTNORM) 244,243,244
  243 ACOS=0.
      GO TO 245
  244 ACOS=DOT/VTNORM
  245 ASIN=DSQRT(1.0-ACOS**2)
      R(I)=VTNORM*ASIN
  246 H(I)=VTNORM*ACOS
C
C        PRINT OUT SURFACE VARIABLES.
C
      DO 299  I=1,16
      K=I
      M=4*(I-1)+1
      N=M+IT-1
      CALL CFORM(KCODE(K),DARRAY,6,28)
      L=36
      DO 298 J=M,N
      CALL FCONV(APRNT2(J),DARRAY,L,15,7)
  298 L=L+18
      CALL CPRINT(DARRAY)
  299 CONTINUE
      GO TO 9000
C
C...***** INVALID DIAGNOSTIC NUMBER *****
C
 500  CONTINUE
      NIU=NUMERR(2)
      IF((NIU.GE.3511).AND.(NIU.LE.3599)) GO TO 810
      IF((NIU.GE.5001).AND.(NIU.LE.5999)) GO TO 820
      CALL CFORM('0       ****  ARELEM ERROR',DARRAY,1,26)
      CALL ICONV(NUMABS,DARRAY,29,5)
      CALL CPRINT(DARRAY)
      GO TO 8000
C
C...***** POCKET ERRORS(NUMBERS 3501-3510)  *****
C
  800 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)
      CALL ICONV(NUMERR(2),DARRAY,27,5)
      CALL CFORM('FROM SUBROUTINE POCKET ***',DARRAY,33,26)
      CALL CPRINT(DARRAY)
      GO TO 8000
  810 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)
      CALL ICONV(NIU,DARRAY,28,5)
      CALL CFORM('FROM SMIL OR SCON **',DARRAY,35,20)
      CALL CPRINT(DARRAY)
      GO TO 8000
  820 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)
      CALL ICONV(NIU,DARRAY,28,5)
      CALL CFORM('FROM SS - SYSTEM  **',DARRAY,35,20)
      CALL CPRINT(DARRAY)
 8000 CALL CLEROR(IABS(NUMERR(2)))
 9000 RETURN
      END
