**** SOURCE FILE : M0004302.W04   ***
*
C.....FORTRAN SUBROUTINE   ...ARLM3              8/68                PH
C.....FORTRAN SUBROUTINE             ARLM3...               4/8/68   GK
      SUBROUTINE ARLM3
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DSHAR4.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'SV.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'ISV.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'ISHR18.INC'
      INCLUDE 'KNUMBR.INC'
C
C...  21. ADDCOM BLOCK
C
      COMMON/ADDCOM/ ADDCOM
      DIMENSION ADDCOM(25),TNSAV(3),TPSAV(3),U1SAV(3)
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),
     2            (ADDCOM(25),KDYNFL)
C
      DIMENSION VTSAV(3),SPSAV(3)
      INCLUDE 'CGOUG.INC'
C
      DATA ZLIT1,K11,K14,K17,K20,K21,K22/.125D0,11,14,17,20,21,22/
      DATA ZERO/0.D0/
C
C        USE RC1SC FOR PROPER UNITS/ IMPLEMENTATION
      RC1SC = RC1/4500.D0
      GFLG=ZERO
      NUMPT1=NMPNTS
      CLNGTH = K0
      JPR1 = K0
      JPR2 = ICSCNT
      ILS1=ICS+(ICSCNT-K1)*LSV1
C                  INITIALIZATION FOR EACH CS.
      DO 100 I=1,3
      TEK(I)=TE(I)
      TEW(I)=TE(I)
  100 TAK(I)=TA(I)
      IF((IPL(IPS).EQ.K0).OR.(IPL(IDS).EQ.K0)) GO TO 130
      IPDPL=K1
      GO TO 140
  130 IPDPL=0
  140 DO 150 I=1,3
C... SAVE PREVIOUS TI VALUE IN TALT
      TALT(I)=TI(I)
      TIK(I)=TI(I)
      DO 150 K=ICS,ILS1,LSV1
      TN(I,K)=TI(I)
  150 CONTINUE
  160 J12=0
      JAA = K0
      IS=ICS
      J10=K1
      DP=DPMAX
      DPL=DPMAX
      DO 170 I=ICS,ILS1,LSV1
      J20(I)=0
      J23(I)=K1
      J50(I)=-IPDPL
      J51(I)=0
      JPH(I)=0
      NOTAN(I) = 0
  170 DPMX1(I)=DPMAX
      INMBR = K11
      ASSIGN 175 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  175 IF(IPDPL) 180,310,180
C                  CALL CHECK FOR CSD. ADJUST DP SO CS NOT PASSED ON
C                  FIRST DP STEP-OUT.
  180 CONTINUE
      INMBR = K12
      ASSIGN 190 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  190 DO 200 L=1,3
  200 TA(L)=TAK(L)
  210 IS=ICS
      JPR2 = -K1
      IWS=IS
      DP1 = Z1E6*RC1SC
  220 IF (ISFTYP(IS) - 99) 221,460,460
  221 TE(1) = TEW(1)
      TE(2)=TEW(2)
      TE(3)=TEW(3)
      JPR2 = ICSCNT
      ASSIGN 230 TO IRETN
      GO TO 9010
  230 IF (IER.NE.0) THEN
C.... OUTPUT WARNING IF NEGATIVE DISTANCE TO CS AT START OF CUT
        INMBR=-24007
        CALL AERR(INMBR,'ARLM3')
      ENDIF
      J50(IS)=(J50(IS)+K1)/K2
  231 CONTINUE
      IF(Z1*RC1SC-CSD(IS)) 232,238,238
  232 IF(IPDPL) 236,260,236
  260 IF(DP-CSD(IS)) 234,234,239
  234 IF(CSD(IS)-Z2*DP) 235,241,241
  235 DP=Z6EM1*CSD(IS)
      GO TO 241
  236 IF(CSD(IS)-DP) 237,237,241
  237 DP=Z9EM1*CSD(IS)
      GO TO 241
  238 IF(DABS(CSD(IS))-TAU(IS)) 240,260,260
  239 DP=CSD(IS)
      GO TO 241
  240 DP=TAU(IS)
  241 GO TO 430
C                  DS AND PS NOT BOTH PLANE. THUS INITIAL STEP-OUT +
C                  CENTR + DELTA FOR INITIAL VALUE DP.
  310 DO 320 L=1,3
  320 TE(L) = TE(L)+ZLIT1*RC1SC*TI(L)
      ASSIGN 330 TO IRETN
      GO TO 9020
  330 IF (JCR.EQ.K0) GO TO 350
      DP=Z1EM2*DPMAX
      GO TO 180
  350 ASSIGN 360 TO IRETN
      GO TO 9030
  360 IF (JDR.NE.K0) GO TO 180
      IF(DPL.GT.DPMAX) GO TO 390
      DP=DPL
      GOTO 180
C
  390 DP=DPMAX
      GO TO 180
C                  DO ADJUSTMENT OF DP FOR ALL CS. SET DP TO ITS MIN
C                  VALUE, AND IWS TO THE CORRESPONDING IS.
  430 CONTINUE
      INMBR = K13
      ASSIGN 440 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  440 IF(DP-DP1)450,460,460
  450 IWS=IS
      DP1=DP
  460 IS=IS+LSV1
      IF (ILS1.GE.IS) GO TO 220
      IS=IWS
      IF (JPR2)461,462,462
 461  INMBR = 24006
      GO TO 9040
C                  SET DPCNT TO 10. (ERROR 801 WHEN 0.0). IF CS NEAR
C                  (J50=1) AND PS,DS NOT BOTH PLANE THEN BRANCH
  462 DPCNT=30.0
      DP=DP1
      IF((J50(IS).GT.K0).AND.(IPDPL.EQ.K0)) GO TO 750
  490 DO 500 I=1,3
  500 TEL(I)=TE(I)
      IF (IPDPL.NE.K0) GO TO 600
      ITSAV=ITSEG(IPS)
      DO 520 I=1,3
      TNSAV(I)=TN(I,IPS)
      TPSAV(I)=TP(I,IPS)
      U1SAV(I)=U1(I,IPS)
      VTSAV(I)=VT(I,IPS)
      SPSAV(I)=SP(I,IPS)
  520 TES(I)=TEK(I)
C                  ********** MAIN LOOP. STEP-OUT DP. *****************
C                  ***** BRANCH IF DS,PS BOTH PLANE. ELSE CENTR TO ****
C                  ***** PS,DS AND THEN DELTA. IF CUT VECTOR TOO   ****
C                  ***** LONG (JDR=1),THEN TRY AGAIN WITH SHORTER  ****
C                  ***** CUT VECTOR. IF DPCNT=1, FAIL           *******
C                        CODING 580 TO 600 FOR SETTING CS FAR AWAY
 530  DO 540 I=1,3
      TA(I)=TAK(I)
      CMOVE(I)=DP*TIK(I)
  540 TE(I)=TES(I)+CMOVE(I)
      INMBR = K14
      ASSIGN 550 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  550 IF (IPDPL.NE.K0) GO TO 1250
      ASSIGN560 TO IRETN
      GO TO 9020
  560 INMBR = K15
      ASSIGN 565 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  565 IF (JCR.EQ.K0) GO TO 620
      IF(DPCNT.GT.Z1) GO TO 636
      INMBR = 24001
      GO TO 9040
  580 J20(IS)=K1
      J21(IS)=K1
      CSD(IS)=Z0
      STCK(IS)=Z1
      JPH(IS) = K1
      DO 590 I=1,3
      TE(I)=TEK(I)
  590 TA(I)=TAK(I)
      J50(IS)=0
      J51(IS)=0
      GO TO 490
  600 DO 610 I=1,3
  610 TES(I)=TE(I)
      GO TO 530
  620 J10=0
      ASSIGN 630 TO IRETN
      GO TO 9030
  630 INMBR = K16
      ASSIGN 635 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  635 IF (JDR.EQ.K0) GO TO 700
      IF (DPCNT.EQ.Z1) GO TO 1460
  636 DPCNT=DPCNT-Z1
      ITSEG(IPS)=ITSAV
      DO 660 I=1,3
      TP(I,IPS)=TPSAV(I)
      TN(I,IPS)=TNSAV(I)
      U1(I,IPS)=U1SAV(I)
      VT(I,IPS)=VTSAV(I)
      SP(I,IPS)=SPSAV(I)
  660 CONTINUE
      GO TO 530
C                  CUT VECTOR OKED BY DELTA. COMPUTE NEW TI
  670 IF(TI(1)*TIK(1)+TI(2)*TIK(2)+TI(3)*TIK(3)) 680,730,730
  680 DO 690 I=1,3
  690 TI(I)=-TI(I)
      GO TO 730
  700 CONTINUE
      DO 701 I=1,3
        TALT(I)=TI(I)
  701 CONTINUE
      CALL CROSS (SN(1,IPS),SN(1,IDS),TI)
      CALL VNORM(TI,TI)
      IF(IER)710,670,710
  710 DO 720 I=1,3
  720 TI(I)=TE(I)-TEK(I)
      CALL VNORM(TI,TI)
C                  CALL CHECK FOR CSD. IF JCKR = 0, CS NOT NEAR AND TE
C                  IS OUTPUT TO ATAPE. IF JCKR = 1, CS NEAR. THEN SET
C                  TEE TO TE AND DO 3 SURF CENTR,DS,PS,CS.
  730 ASSIGN 740 TO IRETN
      GO TO 9010
  740 INMBR = K17
      ASSIGN 745 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  745 IF (JCKR.EQ.K0) GO TO 840
  750 TEE(1,IS)=TE(1)
      TEE(2,IS)=TE(2)
      TEE(3,IS)=TE(3)
      ASSIGN 760 TO IRETN
      GO TO 9020
C                  JCR RETURN FROM 3 SURF PS,DS,CS CENTR  HAS 3 VALUES.
C                  JCR =-1,RESTART CONDITION. IF GT 1 CS, SET FIRST
C                  CS FAR AWAY. STEP-OUT DP ETC. JCR =2, FALSE TANGENCY.
C                  IN THIS CASE IF CENTR MOVE IN TI DIRECTION, RESET
C                  CS FAR AWAY. OTHERWISE IGNORE THIS CENTR MOVE.
C                  IF JCR=0, 3 SURF O.K. GO TO 940.
  760 IF(JCR-K1)770,940,790
  770 IF (ICSCNT.GT.K1) GO TO 830
      INMBR = 24002
      GO TO 9040
  790 IF((TE(1)-TEE(1,IS))*TI(1)+(TE(2)-TEE(2,IS))*TI(2)+(TE(3)-
     1  TEE(3,IS))*TI(3)) 800,800,1090
  800 S(IS)=Z0
      TE(1)=TEE(1,IS)
      TE(2)=TEE(2,IS)
      TE(3)=TEE(3,IS)
      ISTO=IS
      IS=IPS
      ASSIGN 810 TO IRETN
      GO TO 9050
  810 IS=IDS
      ASSIGN 820 TO IRETN
      GO TO 9050
  820 IS=ISTO
      GO TO 840
  830 S(IS)=Z5*DP
      GO TO 180
C                  CS NOT REACHED IN DP STEP-OUT. THEREFORE TE OUTPUT.**
C                  CHECK NMPNTS AND CLNGTH O.K. UPDATE TEK ETC
  840 ASSIGN 846 TO IRETN
      GO TO 9060
  846 DO 847 I = 1,3
  847 TEMP(I) = TE(I) - TEK(I)
  848 TEMP(4) =DSQRT(TEMP(1)*TEMP(1)+TEMP(2)*TEMP(2)+TEMP(3)*TEMP(3))
      CLNGTH = CLNGTH + TEMP(4)
      IF (ELMAX - CLNGTH) 849,850,850
  849 INMBR = 24005
      GO TO 9040
  850 IF (NUMPT1.GT.K0) GO TO 870
      INMBR = 24003
      GO TO 9040
  870 NUMPT1=NUMPT1-K1
      INMBR = K18
      ASSIGN 875 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  875 DO 900 I=1,3
      TEK(I)=TE(I)
      TAK(I)=TA(I)
      TIK(I)=TI(I)
      DO 900 J=IPS,NUMSUR
      TPK(I,J)=TP(I,J)
      SPK(I,J)=SP(I,J)
      SNK(I,J)=SN(I,J)
      SK(I,J) = S(J)
      U1K(I,J)=U1(I,J)
  900 CONTINUE
      IPCHNL=IPCHN
      DP1=DP
      ITSEGK(IPS) = ITSEG(IPS)
      ITSEGK(IDS) = ITSEG(IDS)
      IF (J20(IS).NE.K2) GO TO 920
C                  TERMINATING CUT SEQUENCE COMPUTATION. RESTORE SURF
C                  DATA AT TEE POSITION.
      TE(1)=TEE(1,IS)
      TE(2)=TEE(2,IS)
      TE(3)=TEE(3,IS)
      TA(1)=TAL(1)
      TA(2)=TAL(2)
      TA(3)=TAL(3)
      TP(1,IPS)=PS1
      TP(2,IPS)=PS2
      TP(3,IPS)=PS3
      SN(1,IPS)=PS4
      SN(2,IPS)=PS5
      SN(3,IPS)=PS6
      SP(1,IPS)=PS7
      SP(2,IPS)=PS8
      SP(3,IPS)=PS9
      TP(1,IDS)=DS1
      TP(2,IDS)=DS2
      TP(3,IDS)=DS3
      SN(1,IDS)=DS4
      SN(2,IDS)=DS5
      SN(3,IDS)=DS6
      SP(1,IDS)=DS7
      SP(2,IDS)=DS8
      SP(3,IDS)=DS9
      GO TO 1070
C                  NON-TERMINATING CUT VECTOR. IF MORE THAN ONE CS,
C                  RETURN TO FIND CRITICAL CS.ELSE GO TO DP STEP-OUT.
  920 IS=ICS
      IF (ICSCNT.LE.K1) GO TO 260
      TEW(1)=TE(1)
      TEW(2)=TE(2)
      TEW(3)=TE(3)
      GO TO 220
C                  3 SURF CENTR TO PS,DS,CS O.K. IF ANY CS VIOLATED
C                  IN THIS MOVE,INDEX THIS AS CRITICAL CS,AND AGAIN DO
C                  3 SURF CENTR.
  940 TEE(1,IS)=TE(1)
      TEE(2,IS)=TE(2)
      TEE(3,IS)=TE(3)
      IWS=IS
      IS=ICS
      INMBR = K19
      ASSIGN 950 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
  950 IF (IS.GT.ILS1) GO TO 1040
      IF (IS.EQ.IWS) GO TO 1030
      ASSIGN 980 TO IRETN
      GO TO 9050
  980 IF (ISFTYP(IS) - K4) 981,1010,981
  981 IF (J23(IS).GT.K0) GO TO 1030
      STCK(IS)=S(IS)*Z(IS)*STCK1(IS)
      INMBR = K20
      ASSIGN 1000 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
 1000 IF(STCK(IS))750,750,1030
 1010 IF(J22(IS))1030,1030,1020
 1020 IT = IDS
      IF (IFL4(IS)) 1021,1022,1021
 1021 IT = IPS
 1022 TEMP(1) = (SP(1,IS)-SP(1,IT))*TN(1,IS)
     1        + (SP(2,IS)-SP(2,IT))*TN(2,IS)
     2        + (SP(3,IS)-SP(3,IT))*TN(3,IS)
      STCKN(IS) = TEMP(1)*(TN(1,IS)*TI(1)+TN(2,IS)*TI(2)+TN(3,IS)*TI(3))
      INMBR  = K21
      ASSIGN 1025 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
 1025 IF(STCKN(IS))750,750,1030
 1030 IS=IS+LSV1
      GO TO 950
C                  CRITICAL CS INDEXED. COMPUTE TI AND SAVE SURF DATA.
C                  COMPUTE V=TEE - TEK. IF THIS MOVE BACKWARDS,SET
C                  S = 5*DP TO  SET THIS CS FAR AWAY
 1040 IS=IWS
      TAL(1)=TA(1)
      TAL(2)=TA(2)
      TAL(3)=TA(3)
      CALL CROSS(SN(1,IPS),SN(1,IDS),TIL)
      CALL VNORM(TIL,TIL)
      IF (IER.EQ.K0) GO TO 1060
      TIL(1)=TE(1)-TEK(1)
      TIL(2)=TE(2)-TEK(2)
      TIL(3)=TE(3)-TEK(3)
      CALL VNORM(TIL,TIL)
 1060 PS1=TP(1,IPS)
      PS2=TP(2,IPS)
      PS3=TP(3,IPS)
      PS4=SN(1,IPS)
      PS5=SN(2,IPS)
      PS6=SN(3,IPS)
      PS7 = SP(1,IPS)
      PS8 = SP(2,IPS)
      PS9 = SP(3,IPS)
      DS1=TP(1,IDS)
      DS2=TP(2,IDS)
      DS3=TP(3,IDS)
      DS4=SN(1,IDS)
      DS5=SN(2,IDS)
      DS6=SN(3,IDS)
      DS7 = SP(1,IDS)
      DS8 = SP(2,IDS)
      DS9 = SP(3,IDS)
 1070 DO 1080 I=1,3
 1080 V(I)=TE(I)-TEK(I)
      AAB = V(1)*TIK(1)+V(2)*TIK(2)+V(3)*TIK(3)
C     IF(DABS(AAB)- 0.2*TAU(IS))1090,1090,1085
 1085 IF(AAB)1090,1100,1100
 1090 S(IS)=Z5*DP
      GO TO 580
C                  MOVE V FORWARD. REVERSE TN(CS) AND RE-DO 3 SURF
C                  CENTR FOR 'PAST' CASE. TEST IF V O.K. BY DELTA
 1100 VL=DSQRT(V(1)*V(1)+V(2)*V(2)+V(3)*V(3))
      IF (ISFTYP(IS).EQ.K4) GO TO 1130
      IF((TN(1,IS)*(TE(1)-TEK(1))+TN(2,IS)*(TE(2)-TEK(2))+
     1TN(3,IS)*(TE(3)-TEK(3)))*PAST(IS))1120,1130,1130
 1120 J50(IS)=K1
      J51(IS)=K1
      PLND1(IS)=0
      NOTAN(IS)=0
      TN(1,IS)=-TN(1,IS)
      TN(2,IS)=-TN(2,IS)
      TN(3,IS)=-TN(3,IS)
      GOTO 750
 1130 J10=K1
      ASSIGN 1140 TO IRETN
      GO TO 9030
 1140 INMBR = K22
      ASSIGN 1145 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
 1145 IF (JDR.EQ.K0) GO TO 1200
C                  MOVE V NOT O.K. BY DELTA. CSD = 1.2*LENGTH V
C                  ADJUST VALUE OF DP. SET J20=2 FOR SPECIAL
C                  CUT SEQUENCE TERMINATING CALCULATIONS.
      CSD(IS) = Z12EM1*VL
      IF (DP.GT.CSD(IS)) GO TO 1180
      IF (CSD(IS).LT.Z2*DP) DP = Z6EM1*CSD(IS)
      GO TO 1190
 1180 DP=CSD(IS)
 1190 DPCNT=Z10
      J50(IS)=0
      J51(IS)=0
      J20(IS)=K2
      INMBR = K23
      ASSIGN 490 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
      GO TO 490
C                  MOVE V O.K.. TEST IFAR FOR CORRECT INTERSECTION
 1200 JPR2 = ICSCNT
      IF (IFAR(IS).EQ.K1) GO TO 1420
      IFAR(IS)=IFAR(IS)-K1
      IF (IPDPL.NE.K0) GO TO 1230
      ASSIGN 1220 TO IRETN
      GO TO 9060
1220  TV=TI(1)*TIL(1)+TI(2)*TIL(2)+TI(3)*TIL(3)
      TEMP(1)=DSIGN(Z1,TV)
      TI(1)=TEMP(1)*TIL(1)
      TI(2)=TEMP(1)*TIL(2)
      TI(3)=TEMP(1)*TIL(3)
 1230 DO 1240 I=1,3
      TEK(I)=TE(I)
      TAK(I)=TA(I)
 1240 TEW(I)=Z3*TAU(IS)*TI(I)+TE(I)
      JAA = K1
      GO TO 140
C
C                  ********** SPECIAL ROUTE. DS,PS BOTH PLANE,
C
 1250 ASSIGN 1260 TO IRETN
      GO TO 9070
 1260 INMBR = K24
      ASSIGN 1265 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
 1265 IF (JPR) 1280,1270,1266
 1266 JPR1 = 0
      GO TO 1290
 1270 TEW(1)=TE(1)
      TEW(2)=TE(2)
      TEW(3)=TE(3)
      GO TO 210
C
C     FALSE TANGENCY - MOVE AWAY FROM STOPPING POINT.
C
 1280 IF (JPR+K2) 1351,1351,1281
 1281 IF ((TE(1)-TEW(1))*TI(1)+(TE(2)-TEW(2))*TI(2)+(TE(3)-TEW(3))*TI(3)
     1    ) 1352,1352,1282
 1282 TE(1) = Z5EM1*RC1SC*TI(1)+TE(1)
      TE(2) = Z5EM1*RC1SC*TI(2)+TE(2)
      TE(3) = Z5EM1*RC1SC*TI(3)+TE(3)
C
C     IS THIS THE ONLY CHECK SURFACE
C
 1290 IWS=IS
      IS=ICS
 1300 IF(ILS1-IS)1310,1330,1330
 1310 IS=IWS
      IF (JPR) 1311,1200,1200
C     LOOK FOR TRUE INTERSECTION WITH CHECK SURFACE
 1311 TEW(1) = TE(1)
      TEW(2) = TE(2)
      TEW(3) = TE(3)
      GO TO 160
 1320 IS=IS+LSV1
      GO TO 1300
 1330 IF (IS-IWS) 1331,1320,1331
 1331 IF (ISFTYP(IS)-99)1332,1320,1320
 1332 IF (JPR2) 1310,1310,1333
 1333 IF (ISFTYP(IS)-K4) 1334,1340,1340
 1334 TN(1,IS) = PAST(IS)*TI(1)
      TN(2,IS) = PAST(IS)*TI(2)
      TN(3,IS) = PAST(IS)*TI(3)
 1340 JWR =0
      JENT(IS)=K1
      IOPSET(IS)=0
      JTN(IS) = K1
      JU1(IS) = K1
      JIOPS(IS) = 0
      ASSIGN 1348 TO IRETN
      GO TO 9050
 1348 IF (ISFTYP(IS)-K4)1349,1400,1349
 1349 IF (J23(IS).GT.K0) GO TO 1320
      STCK(IS)=STCK1(IS)*Z(IS)*S(IS)
      INMBR = K25
      ASSIGN 1350 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
 1350 IF (STCK(IS).GT.K0) GO TO 1320
      GO TO 1380
C     MOVE WAS BACKWARDS - RESTART TWICE THEN GIVE UP
C
 1351 JPR1 = JPR1 + K1
      IF (JPR1 - K2) 1270,1353,1352
C     THIS SURFACE INVALID - ELIMINATE FROM CONSIDERATION
C
 1352 ISFTYP(IS) = 99
      JPR1 = 0
      TE(1) = TEK(1)
      TE(2) = TEK(2)
      TE(3) = TEK(3)
      GO TO 1270
 1353 S(IS) = S(IS)+Z2*DP
      GO TO 1270
 1380 DO 1390 I=1,3
 1390 TE(I)=TEL(I)
      JPR2 = JPR2 - K1
      DP=Z11EM1*CSD(IS)
      GO TO 1250
 1400 IF(J22(IS))1320,1320,1410
 1410 IT = IDS
      IF (IFL4(IS)) 1411,1412,1411
 1411 IT = IPS
 1412 TEMP(1) = (SP(1,IS)-SP(1,IT))*TN(1,IS)
     1         +(SP(2,IS)-SP(2,IT))*TN(2,IS)
     2         +(SP(3,IS)-SP(3,IT))*TN(3,IS)
      STCKN(IS)=TEMP(1)*(TN(1,IS)*TI(1)+TN(2,IS)*TI(2)+TN(3,IS)*TI(3))
      INMBR = K26
      ASSIGN 1415 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
 1415 IF(STCKN(IS))1380,1380,1320
 1420 CONTINUE
      INMBR = K27
      ASSIGN 1430 TO IRETN
      IF (KDYNFL.NE.K0) GO TO 9000
 1430 ICL=K3
 1440 ASSIGN 1445 TO IRETN
      GO TO 9060
 1445 TEMP(1)=((IS-ICS)/LSV1)+K1
 1450 CONTINUE
      RETURN
 1460 INMBR = 24004
      GO TO 9040
C
C     ALL CALLS EXCEPT THOSE TO VNORM AND CROSS HAVE BEEN PLACED IN THIS
C     SECTION TO MINIMIZE STORAGE REQUIREMENTS OF THE 360
C
 9000 CALL APT238(INMBR)
      GO TO IRETN, (175,190,550,565,635,745,875,950,1000,1025,1145,
     1   440,490,1265,1350,1415,1430)
 9010 CALL CHECK
      IF (IAERR.GT.K0) GO TO 1450
      GO TO IRETN, (230,740)
 9020 CALL CENTR
      IF (IAERR.GT.K0) GO TO 1450
      GO TO IRETN, (330,560,760)
 9030 CALL DELTA
      IF (IAERR.GT.K0) GO TO 1450
      GO TO IRETN, (360,630,1140)
 9040 CALL AERR (INMBR,'ARLM3   ')
      GO TO 1450
 9050 CALL AMIND
      IF (IAERR.GT.K0) GO TO 1450
      GO TO IRETN, (810,820,980,1348)
 9060 CALL ATAPE
      GO TO IRETN, (846,850,1220,1445)
 9070 CALL PLANE
      IF (IAERR.GT.K0) GO TO 1450
      GO TO IRETN, (1260)
      END
