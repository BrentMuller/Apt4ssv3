*
C
C
C.....FORTRAN SUBROUTINE             ARLM2...               4/8/68   GK
      SUBROUTINE ARLM2
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C
C
C
      EQUIVALENCE  (CCENTR(1),CNRMAL(1))
      EQUIVALENCE    (ZMOSHN(1),TI(1))
      DIMENSION  CNRMAL(3),   ZMOSHN(3)
C
C
      INCLUDE (TOTAL)
      INCLUDE (DSHAR5)
      INCLUDE (FXCOR)
      INCLUDE (SV)
      INCLUDE (ZNUMBR)
      INCLUDE (ISV)
      INCLUDE (IFXCOR)
      INCLUDE (KNUMBR)
C
C
      DIMENSION  CANSTO(3), A(3,3), B(3,3)
      DIMENSION DAXIS(3),CAXIS(3)
C
      INCLUDE (BLANKCOM)
C
      DOUBLE PRECISION TEMDIF
      DATA ZLIT1/.0001D0/
      TEK(1) = TE(1)
      TEK(2)=TE(2)
      TEK(3)=TE(3)
      IS=ICS
      I=ICANON(IDS)
      DCENTR(1) = CANON(I)
      DCENTR(2)=CANON(I+1)
      DCENTR(3) = CANON(I+2)
      DAXIS(1)=CANON(I+3)
      DAXIS(2)=CANON(I+4)
      DAXIS(3)=CANON(I+5)
      DRDIUS=CANON(I+6)
      I=ICANON(ICS)
      CCENTR(1) = CANON(I)
      CCENTR(2)=CANON(I+1)
      CCENTR(3) = CANON(I+2)
      CAXIS(1)=CANON(I+3)
      CAXIS(2)=CANON(I+4)
      CAXIS(3)=CANON(I+5)
      CRDIUS=CANON(I+6)
C
C     PRELIMINARY Z-CORRECTION CALCULATIONS
C
      IFROT = 0
      IDONE = 0
      I = ICANON(IPS)
      TEM(1)=TA(1)*CANON(I)+TA(2)*CANON(I+1)+TA(3)*CANON(I+2)
      FLIP=Z1
      IF(TEM(1).LT.Z0)FLIP=-Z1
      CANSTO(1)=CANON(I)*FLIP
      CANSTO(2) = CANON(I+1)*FLIP
      CANSTO(3) = CANON(I+2)*FLIP
      DVALUI=TE(1)*CANSTO(1)+TE(2)*CANSTO(2)+TE(3)*CANSTO(3)
      DOPSTA=TA(1)*CANSTO(1)+TA(2)*CANSTO(2)+TA(3)*CANSTO(3)
C
C     DETERMINE IF ROTATION NECCESSARY. IF SO, ROTATE.
C
      IF(DABS(TA(3)).EQ.Z1) GO TO  90
      IFROT = 1
C
C     ROTATION MATRIX  CONSTRUCTION.
C
      SINZTA=DSQRT(TA(1)*TA(1)+TA(2)*TA(2))
      COSXTA=TA(1)/SINZTA
      SINXTA=TA(2)/SINZTA
      A(1,1) =TA(3)*COSXTA
      A(2,1) =TA(3)*SINXTA
      A(3,1) =-SINZTA
      A(1,2) =-SINXTA
      A(2,2) =COSXTA
      A(3,2) =0.0
      A(1,3) =TA(1)
      A(2,3) =TA(2)
      A(3,3) =TA(3)
      DO 10 I=1,3
      DO 10 J=1,3
 10   B(I,J) = A(J,I)
C
C     ROTATIONS DEPEND ON SURFACE TYPE
C
11    IF(JBR-2)12,14,16
C
12    CALL ROTAT(CCENTR,A)
      IF(ISFIDN(ICS).GT.K2) CALL ROTAT(CAXIS,A)
      CALL ROTAT(DCENTR,A)
      CALL ROTAT(DAXIS,A)
      I=ICANON(IDS)
      CANON(I )=DCENTR(1)
      CANON(I+1)=DCENTR(2)
      CANON(I+2)=DCENTR(3)
      CANON(I+3)=DAXIS(1)
      CANON(I+4)=DAXIS(2)
      CANON(I+5)=DAXIS(3)
      CALL ROTAT(TEK,A)
      GO TO 20
C
14    CALL ROTAT(CCENTR,A)
      CALL ROTAT(CAXIS,A)
      CALL ROTAT(SN(1,IDS),A)
      GO TO 20
C
16    CALL ROTAT(CNRMAL,A)
C
20    CALL ROTAT(TE,A)
      I=ICANON(ICS)
      CANON(I) = CNRMAL(1)
      CANON(I+1) = CNRMAL(2)
      CANON(I+2) = CNRMAL(3)
      CANON(I+3)=CAXIS(1)
      CANON(I+4)=CAXIS(2)
      CANON(I+5)=CAXIS(3)
      IF(IDONE.NE.1)GO TO 24
      ASSIGN 24 TO IRETN
      GO TO 1341
24    CALL ROTAT(TI,A)
C
C     DO NECCESSARY INVERSE ROTATIONS AND Z-CORRECTIONS
C
      IF(IDONE.NE.1) GO TO 90
      CALL ROTAT(TN(1,ICS),A)
      CALL ROTAT(TP(1,ICS),A)
      IF(DOPSTA.EQ.Z0)GO TO 1410
      PROJ=TN(1,ICS)*CANSTO(1)+TN(2,ICS)*CANSTO(2)+TN(3,ICS)*CANSTO(3)
      PROK=TP(1,ICS)*CANSTO(1)+TP(2,ICS)*CANSTO(2)+TP(3,ICS)*CANSTO(3)
      PROJ=(PROJ-DVALUI)/DOPSTA
      PROK=(PROK-DVALUI)/DOPSTA
      DO 29 I=1,3
      TN(I,ICS)=TN(I,ICS)+PROJ*(-TA(I))
29    TP(I,ICS)=TP(I,ICS)+PROK*(-TA(I))
      GO TO 1410
C
90    TEN=DSQRT(TI(1)*TI(1)+TI(2)*TI(2))
      ZMOSHN(1)=TI(1)/TEN
      ZMOSHN(2)=TI(2)/TEN
      ZMOSHN(3)=Z0
C
C     BEGIN CUTTER OFFSET CALCULATIONS
C
      TEMP(7)=CUTDAT(1)
      IF(ISFTYP(IDS).EQ.K3)TEMP(7)=Z0
      JSW=ISFTYP(IS)
      TEMP(20)=IFAR(IS)-K1
      RADNO=(IFAR(IS)-K1)/K2
      IFAR(IS)=K2-(IFAR(IS)-K2*(IFAR(IS)/K2))
      GO TO (140,140,170,130),JSW
  130 RADNO=TEMP(20)
      OFFSET=TEMP(7)
      GO TO 180
140   OFFSET=CUTDAT(1)
      IF(IFAR(IS).EQ.JSW)OFFSET=-OFFSET
      GO TO 180
  170 OFFSET=Z0
  180 IF(JBR-K2)190,810,1310
C
C...  2D ROUTE--CIRCLE DS,CIRCLE OR LINE CS
C
190   RZERO(1)=DCENTR(1)-TE(1)
      RZERO(2)=DCENTR(2)-TE(2)
      RZEROL = DSQRT(RZERO(1)**2+RZERO(2)**2)
      IF (RZEROL.LE.Z1EM6) GO TO 1410
      TEMP(15)=DSIGN(Z1,RZERO(1)*TI(2)-RZERO(2)*TI(1))
      TEMP(1) = Z1
      TEMP(2)=Z1
      TEMP(5)=DABS(OFFSET)
      TEMP(6)=-PAST(IS)*TEMP(15)
      IF (RZEROL.GE.DRDIUS) GO TO 250
      IF(ISFTYP(IS).EQ.K4)OFFSET=-OFFSET
      DIF=DRDIUS-TEMP(7)-DABS(TAU2(IDS))
      TEMDIF=DRDIUS-TEMP(7)
      IF(DIF)1380,1380,260
  250 DIF=DRDIUS+TEMP(7)+TAU1(IDS)
      TEMDIF=DRDIUS+TEMP(7)
  260 IF(ISFIDN(IS).GT.K2)GO TO 440
C
C     LINE  CS, CYLINDER DS.
C
      TP(1,IS) = DCENTR(1)
      TP(2,IS)=DCENTR(2)
      TP(3,IS)=TE(3)
      TN(1,IS)=CNRMAL(1)
      TN(2,IS)=CNRMAL(2)
      TN(3,IS)=Z0
      ASSIGN 270 TO LRETN
      GO TO 1420
270   IF(S(IS).GE.Z0)GO TO 280
      S(IS)=-S(IS)
      TN(1,IS)=-TN(1,IS)
      TN(2,IS)=-TN(2,IS)
  280 IF(ISFTYP(IS).NE.K4)GO TO 300
      IF(DABS(S(IS)-DRDIUS)-TAU(IS).GE.Z0)GO TO 1370
      TEN=S(IS)+OFFSET
      FIPNT(1)=TP(1,IS)+TEN*TN(1,IS)
      FIPNT(2)=TP(2,IS)+TEN*TN(2,IS)
      GO TO 1030
 300  TEMP(9) = S(IS)+RZERO(1)*TN(1,IS)+RZERO(2)*TN(2,IS)
      IF (TEMP(9).LT.Z0) TEMP(2) = -Z1
      TEMP(10)=S(IS)-TEMP(5)-Z1EM5
      IF (TEMP(10).GE.DIF) GO TO 1390
      IF((TEMP(10)+DIF).LE.Z0)GO TO 1380
      IF((DIF-S(IS)-TEMP(5)).GT.ZLIT1)GO TO 360
      RADNO=TEMP(20)
      GO TO 430
  360 IF ((DABS(TEMP(9))-TEMP(5)).GT.Z1EM5) GO TO 420
      IF (PAST(IS).GE.Z0) GO TO 390
      IF ((DABS(TEMP(9))+Z1EM5).GT.TEMP(5)) GO TO 420
  390 ZDOTC = RZERO(1)*TN(2,IS)-RZERO(2)*TN(1,IS)
      IF(DABS(ZDOTC)-Z1EM7.GT.Z0) GO TO 410
      TEMP(1) = PAST(IS)*TEMP(2)
      GO TO 420
  410 TEMP(1) = TEMP(2)*TEMP(6)*DSIGN(Z1,ZDOTC)
  420 TEMP(6)=-TEMP(1)*TEMP(2)*TEMP(15)
      IF(IFAR(IS).EQ.K2)TEMP(6)=-TEMP(6)
  430 TEMP(3)=S(IS)+TEMP(6)*TEMP(15)*PAST(IS)*TEMP(5)
      TEMP(4)=DSQRT(DABS(TEMDIF**2-TEMP(3)**2))
      FIPNT(1)=TP(1,IS)+TEMP(3)*TN(1,IS)+TEMP(6)*TEMP(4)*TN(2,IS)
      FIPNT(2)=TP(2,IS)+TEMP(3)*TN(2,IS)-TEMP(6)*TEMP(4)*TN(1,IS)
      GO TO 1030
C
C     CYLINDER CS, CYLINDER DS.
C
  440 CEND(1) = CCENTR(1) - DCENTR(1)
      CEND(2)=CCENTR(2)-DCENTR(2)
      CTOCL = DSQRT(CEND(1)**2+CEND(2)**2)
      IF(CTOCL.LE.Z1EM7) GO TO 1360
      CEND(1)=CEND(1)/CTOCL
      CEND(2)=CEND(2)/CTOCL
      IF(JSW.NE.K4) GO TO 520
      IF ((CTOCL-CRDIUS+Z1EM3).GE.DRDIUS) GO TO 800
      IF (DABS(CTOCL+DRDIUS-CRDIUS).LT.Z1EM3) GO TO 500
      IF(DABS(CTOCL+CRDIUS-DRDIUS)-Z1EM3) 510,1370,1370
  500 TEMP(1) = -Z1
510   D=(DRDIUS+OFFSET)*TEMP(1)
      FIPNT(1)=DCENTR(1)+D*CEND(1)
      FIPNT(2)=DCENTR(2)+D*CEND(2)
      GO TO 1030
  520 TEMP(9)=TEMDIF-CTOCL
      TEMP(11)=TEMP(5)
      IF(DABS(TEMP(9))-CRDIUS-TEMP(11)) 530,1390,1390
  530 TEMP(10)=CTOCL-CRDIUS
      IF(TEMP(10)+TEMDIF+TEMP(5)+Z1EM5) 1390,1390,540
  540 IF(DABS(TEMP(10)+TEMDIF).GT.TEMP(11)) GO TO 570
      IF (TEMP(10).GE.Z0) GO TO 1380
      TEMP(1) = -Z1
  570 IF (DABS(CRDIUS-TEMP(9)).GT.TEMP(11)) GO TO 600
      IF (TEMP(1)) 1380,1380,720
  600 IF(DABS(TEMP(10)-TEMDIF).GT.TEMP(11)) GO TO 620
      IF(TEMP(1)) 1380,1380,720
  620 IF(TEMP(1)) 740,720,630
 630  TEMP(4)=DSQRT((TE(1)-CCENTR(1))**2+(TE(2)-CCENTR(2))**2)-CRDIUS
      IF (TEMP(4).LT.Z0) TEMP(2) = -Z1
      IF(DABS(TEMP(4)).GT.TEMP(11)) GO TO 700
      ZDOTC = RZERO(1)*CEND(2) - RZERO(2)*CEND(1)
      IF (ZDOTC.EQ.Z0) GO TO 1380
      IF (PAST(IS).GE.Z0) GO TO 690
      IF(DABS(TEMP(4))-TEMP(5)+ZLIT1) 690,700,700
  690 TEMP(1) = TEMP(2)*TEMP(6)*DSIGN(Z1,ZDOTC)
 700  TEMP(6) =-TEMP(1)*TEMP(2)*TEMP(15)
      IF(IFAR(IS).EQ.K2)TEMP(6)=-TEMP(6)
      IF(PAST(IS)*TEMP(15)*TEMP(6))730,1380,750
  720 RADNO=TEMP(20)
  730 HAFDIA=CRDIUS+TEMP(11)
      GO TO 760
  740 RADNO=TEMP(20)
      TEMP(6)=-TEMP(6)
  750 HAFDIA=CRDIUS-TEMP(5)
  760 DSMOV=(CTOCL**2+TEMDIF**2-HAFDIA**2)/(Z2*CTOCL)
      TEMP(1)=TEMDIF**2-DSMOV**2
      IF(TEMP(1).GE.Z0) GO TO 790
      IER=23908
      GO TO 1400
790   TEN=DSQRT(TEMP(1))*TEMP(6)
      FIPNT(1)=DCENTR(1)+DSMOV*CEND(1)+TEN*CEND(2)
      FIPNT(2)=DCENTR(2)+DSMOV*CEND(2)-TEN*CEND(1)
      GO TO 1030
  800 IF(CTOCL-CRDIUS-DRDIUS-Z1EM3) 510,510,1370
C
C     LINE DS, CYLINDER CS
C
  810 CEND(1) = CCENTR(1) - TE(1)
      CEND(2)=CCENTR(2)-TE(2)
      CENLEN = DSQRT(CEND(1)**2+CEND(2)**2)
      S(IS) = CEND(1)*ZMOSHN(1)+CEND(2)*ZMOSHN(2)
      DSMOV=CEND(1)*SN(1,IDS)+CEND(2)*SN(2,IDS)
      IF(JSW.EQ.K4) GO TO 950
      OFFSET=DABS(OFFSET)
      IF(S(IS).LE.Z0)OFFSET=-OFFSET
      IF(JSW.EQ.K2)GO TO 900
      IF ((CENLEN-OFFSET-CRDIUS).LT.TAU1(IS)) GO TO 880
      IF(IFAR(IS).EQ.K2)GO TO 880
      ZIGN=-Z1
  870 DIF=CRDIUS+DABS(OFFSET)
      GO TO 990
  880 ZIGN=Z1
  890 DIF=CRDIUS-DABS(OFFSET)
      GO TO 990
  900 IF ((CENLEN+OFFSET-CRDIUS).LT.TAU1(IS)) GO TO 940
      IF (S(IS).LE.Z0) GO TO 1390
      IF(IFAR(IS).EQ.K2) GO TO 940
      IF(DABS(DSMOV)+CUTDAT(1)-CRDIUS-TAU2(IS)) 930,930,940
  930 ZIGN=-Z1
      GO TO 890
  940 ZIGN=Z1
      GO TO 870
  950 IF (S(IS).LE.Z0) GO TO 1380
      DSMOV=DSMOV+OFFSET
      IF (DABS(CRDIUS-DABS(DSMOV+S(IDS))).GT.TAU(IS)) GO TO 1370
      TEN=OFFSET-DSIGN(Z1,DSMOV)*CRDIUS
      FIPNT(1)=CCENTR(1)+TEN*SN(1,IDS)
      FIPNT(2)=CCENTR(2)+TEN*SN(2,IDS)
      GO TO 1300
  990 TEMP(1)=DIF**2-DSMOV**2
      IF (TEMP(1)) 1380,1010,1000
 1000 S(IS)=S(IS)+ZIGN*DSQRT(TEMP(1))
 1010 IF(S(IS)+Z1EM5)1390,1390,1020
 1020 FIPNT(1) = TE(1)+S(IS)*ZMOSHN(1)
      FIPNT(2) = TE(2)+S(IS)*ZMOSHN(2)
      GO TO 1300
C
C     COMPUTE INTERMEDIATE CUT VECTORS AROUND CYLINDRICAL DS
C
 1030 DIFOUT=DIF
      RONE=DABS(DIF-TAU(IDS))
      COSTH=RONE/RZEROL
      TEMP(1)=Z1-COSTH**2
      IF(TEMP(1)+Z1EM5)1350,1350,1050
 1050 SINTH = DSQRT(DABS(TEMP(1)))
      HCHORD=SINTH*RZEROL
      CHORD=Z2*HCHORD
      DNMOT(1)=RZERO(1)/RZEROL
      DNMOT(2)=RZERO(2)/RZEROL
      ZIGN=Z1
      TANMOT(1)=DNMOT(2)
      TANMOT(2)=-DNMOT(1)
      IF(TANMOT(1)*TI(1)+TANMOT(2)*TI(2))1070,1080,1080
 1070 TANMOT(1)=-TANMOT(1)
      TANMOT(2)=-TANMOT(2)
      ZIGN=-Z1
 1080 TE(1)=TEK(1)+CHORD*(SINTH*DNMOT(1)+COSTH*TANMOT(1))
      TE(2)=TEK(2)+CHORD*(SINTH*DNMOT(2)+COSTH*TANMOT(2))
      D2(1)=TE(1)-TEK(1)
      D2(2)=TE(2)-TEK(2)
      D2(3)=Z0
      D=DSQRT(D2(1)*D2(1)+D2(2)*D2(2))
      IF(D.LE.Z0)GO TO 1095
      D2(1)=D2(1)/D
      D2(2)=D2(2)/D
      GO TO 1100
1095  D2(1)=ZMOSHN(1)
      D2(2) = ZMOSHN(2)
      HCHORD=Z0
 1100 TEMP(10) = DSQRT(DIFOUT**2-RONE**2)
      DELMOT(1)=TEMP(10)-HCHORD
      TE(1)=TE(1)+DELMOT(1)*D2(1)
      TE(2)=TE(2)+DELMOT(1)*D2(2)
      STVEC(1)=FIPNT(1)-DCENTR(1)
      STVEC(2)=FIPNT(2)-DCENTR(2)
      TEMP(1)=DSQRT(STVEC(1)**2+STVEC(2)**2)
      TEMP(2)=STVEC(1)/TEMP(1)
      TEMP(3)=STVEC(2)/TEMP(1)
      IF (RONE.LE.Z1EM5) GO TO 1250
      TEMP(1)=TEMP(2)*DNMOT(1)+TEMP(3)*DNMOT(2)
      TEMP(8) = ZMOSHN(1)*STVEC(1)+ZMOSHN(2)*STVEC(2)
      IF(DABS(TEMP(1))-Z1EM7.LT.Z0) GO TO 1150
      TEMP(11)=Z1-TEMP(1)**2
      IF (TEMP(11).LT.Z0) TEMP(11) = Z0
      ZGAMMA=DATAN(DSQRT(TEMP(11))/TEMP(1))
      IF(TEMP(1))1160,1190,1190
 1150 ZGAMMA= -PI/Z2
 1160 IF(TEMP(8)-Z1EM7) 1180,1180,1170
 1170 PSI=-ZGAMMA
      GO TO 1220
 1180 PSI = Z2*PI + ZGAMMA
      GO TO 1220
 1190 IF (TEMP(8).LT.Z0) GO TO 1210
      PSI = PI - ZGAMMA
      GO TO 1220
 1210 PSI = PI + ZGAMMA
 1220 TEMP(1) = DATAN (TEMP(10)/RONE)
      THETA = TEMP(1) + DATAN (SINTH/COSTH)
      ALPHA = Z2*TEMP(1)
      PSI=PSI+Z2*PI*RADNO
      IF(PSI-THETA)1230,1240,1240
 1230 IF(DSQRT((FIPNT(1)-TEK(1))**2+(FIPNT(2)-TEK(2))**2)-Z2*EPS1(IS))
     1    1260,1300,1300
 1240 IF(PSI-THETA-ALPHA)1250,1270,1270
 1250 CONTINUE
      ZZ = Z1
      IA = K2
      IB = K1
      IF ((TEMP(2)*DNMOT(1)+TEMP(3)*DNMOT(2))-Z1) 1251,1252,1251
 1251 ZZ = -Z1
      IA = K1
      IB = K2
 1252 CONTINUE
      TEMP(1) = TEMP(2) + ZZ*DNMOT(1)
      TEMP(2) = TEMP(3) + ZZ*DNMOT(2)
      TEMP(3)=Z0
      CALL VNORM(TEMP(1),TEMP(1))
C     CALCULATE TOOL POSITION AFTER FIRST CUT AS BEING MIDWAY BETWEEN
C     STARTING POSITION AND FINAL POINT
      TE(1) = DIFOUT*TEMP(IA)+DCENTR(1)
      TE(2) = -ZZ*DIFOUT*TEMP(IB)+DCENTR(2)
      ASSIGN 1300 TO JRETN
      IF (IA - K1) 1255,1255,1253
 1253 IF (TE(1)*ZMOSHN(1) + TE(2)*ZMOSHN(2)) 1254,1255,1255
 1254 TE(1) = -TE(1)
      TE(2) = -TE(2)
C
C     INTERMEDIATE TE OUTPUT. INVERSE ROTATE + Z-CORRECT.
C
1257  TEK(3)=TE(3)
1258  TEK(1)=TE(1)
      TEK(2)=TE(2)
1255  IF(IFROT.EQ.1) CALL ROTAT(TE,B)
      ASSIGN 1256 TO IRETN
      GO TO 1341
1256  CALL ATAPE
      GO TO JRETN,(1271,1281,1300)
 1260 PSI = PSI+Z2*PI
 1270 PSI=PSI-THETA
      ASSIGN 1271 TO JRETN
      GO TO 1257
1271  NPTS=(PSI/ALPHA)+Z1
      ZNPTS=NPTS
      THETA=Z5EM1*PSI/ZNPTS
      COSTH=DCOS(THETA)
      SINTH=DSIN(THETA)
      CHORD=Z2*DIFOUT*SINTH
      EL1=CHORD*COSTH
      EL2=CHORD*SINTH
      DNMOT(1)=DCENTR(1)-TEK(1)
      DNMOT(2)=DCENTR(2)-TEK(2)
      TEMP(1)=DSQRT(DNMOT(1)**2+DNMOT(2)**2)
      DNMOT(1)=DNMOT(1)/TEMP(1)
      DNMOT(2)=DNMOT(2)/TEMP(1)
 1280 TANMOT(1)=DNMOT(2)*ZIGN
      TANMOT(2)=-DNMOT(1)*ZIGN
      DELMOT(1) = EL1*TANMOT(1) + EL2*DNMOT(1)
      DELMOT(2) = EL1*TANMOT(2) + EL2*DNMOT(2)
      DNMOT(1)=(DCENTR(1)-TEK(1)-DELMOT(1))/TEMP(1)
      DNMOT(2)=(DCENTR(2)-TEK(2)-DELMOT(2))/TEMP(1)
      TE(1)=DCENTR(1)-DIFOUT*DNMOT(1)
      TE(2)=DCENTR(2)-DIFOUT*DNMOT(2)
      TE(3)=TEK(3)
      NPTS=NPTS-K1
      ASSIGN 1281 TO JRETN
      GO TO 1258
C
C     INTERMEDIATE TE OUTPUT. INVERSE ROTATE + Z-CORRECT.
C
1281  IF(NPTS-K1)1300,1300,1280
 1300 TE(1)=FIPNT(1)
      TE(2)=FIPNT(2)
      TN(3,ICS) = 0.
      IF (ISFIDN(IS).GT.K2) GO TO 1301
      TN(1,ICS) = CCENTR(1)
      TN(2,ICS) = CCENTR(2)
      GO TO 1302
 1301 TN(1,ICS) = CCENTR(1) - TE(1)
      TN(2,ICS) = CCENTR(2) - TE(2)
      CALL VNORM(TN(1,ICS),TN(1,ICS))
 1302 IF (ITLON(ICS)) 1305,1304,1305
 1304 TP(1,ICS) = TE(1)
      TP(2,ICS) = TE(2)
      TP(3,ICS) = TE(3)
      GO TO 1306
 1305 TP(1,ICS) = TE(1) + TOOLWD(ICS)*TN(1,ICS)
      TP(2,ICS) = TE(2) + TOOLWD(ICS)*TN(2,ICS)
      TP(3,ICS) = TE(3) + TOOLHT(3,ICS)
C
C     SYSTEM INVERSE ROTATION + ZCORRECTION
C
 1306 IF(IFROT.EQ.K0) GO TO 1308
      IDONE = 1
      DO 1307 I=1,3
      DO 1307 J=1,3
 1307 A(I,J) = B(I,J)
      GO TO 11
1308  ASSIGN 1410 TO IRETN
      GO TO 1341
C
C     LINE DS, LINE CS
C
1310  TN(1,IS)=ZMOSHN(1)
      TN(2,IS)= ZMOSHN(2)
      TN(3,IS)= Z0
      TP(1,IS)=TE(1)
      TP(2,IS)=TE(2)
      TP(3,IS)=TE(3)
      ASSIGN 1320 TO LRETN
      GO TO 1420
1320  IF(ISFTYP(IS).EQ.K3)GO TO 1010
      DINC = CUTDAT(1)/DABS(CNRMAL(1)*ZMOSHN(1)+CNRMAL(2)*ZMOSHN(2))
      IF(ISFTYP(IS).NE.K1) GO TO 1340
      S(IS)=S(IS)-DINC
      GO TO 1010
 1340 S(IS)=S(IS)+DINC
      GO TO 1010
1341  IF(DOPSTA.EQ.Z0)GO TO 1345
      PROJ=TE(1)*CANSTO(1)+TE(2)*CANSTO(2)+TE(3)*CANSTO(3)
      PROJ=(PROJ-DVALUI)/DOPSTA
      TE(1)=TE(1)-PROJ*TA(1)
      TE(2)=TE(2)-PROJ*TA(2)
      TE(3)=TE(3)-PROJ*TA(3)
1345  GO TO IRETN,(24,1256,1410)
 1350 IER= 23901
      GO TO 1400
 1360 IER= 23902
      GO TO 1400
 1370 IER= 23903
      GO TO 1400
 1380 IER= 23904
      GO TO 1400
 1390 IER= 23905
 1400 CALL AERR(IER,'ARLM2   ')
 1410 ICL=K3
      CALL ATAPE
      GO TO 1470
1420  IC=ICANON(IS)
      IF(ISFIDN(IS).GT.K2)GO TO 1430
C
C     ***PLANES AND LINES***
C
      DK=CANON(IC+3)-CANON(IC)*TP(1,IS)-CANON(IC+1)*TP(2,IS)
     1   -CANON(IC+2)*TP(3,IS)
      DOT=CANON(IC)*TN(1,IS)+CANON(IC+1)*TN(2,IS)+CANON(IC+2)*TN(3,IS)
C--- CII UPDATE TO DIAGNOZE NON-PARALLEL DRIVE-CHECK SURFACE
      IF(DABS(DOT).LT.Z1EM7) GO TO 1390
      S(IS)=DK/DOT
      GO TO 1460
C
C     ***CIRCLES AND CYLINDERS***
C
1430  TEM(1)=TP(1,IS)-CANON(IC)
      TEM(2)=TP(2,IS)-CANON(IC+1)
      DK=DSQRT(TEM(1)*TEM(1)+TEM(2)*TEM(2))
      IF(DK.GE..0001)GO TO 1440
      SNL(1,1)=TN(1,IS)
      SNL(2,1)=TN(2,IS)
      V=1.0
      GO TO 1450
1440  SNL(1,1)=TEM(1)/DK
      SNL(2,1)=TEM(2)/DK
      DK=-SNL(1,1)*TEM(1)-SNL(2,1)*TEM(2)
      V=DSIGN(Z1,DK)
1450  SP(1,IS)=V*SNL(1,1)*CANON(IC+6)
      SP(2,IS)=V*SNL(2,1)*CANON(IC+6)
      S(IS)=(SP(1,IS)-TEM(1))*TN(1,IS)+(SP(2,IS)-TEM(2))*TN(3,IS)
1460  GO TO LRETN,(270,1320)
1470  RETURN
      END
