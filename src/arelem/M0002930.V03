*
C.....FORTRAN SUBROUTINE             U1COMP...              3/1/68   GK
      SUBROUTINE U1COMP
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE (TOTAL)
      INCLUDE (FXCOR)
      INCLUDE (SV)
      INCLUDE (ISV)
      INCLUDE (IFXCOR)
      INCLUDE (ISHR18)
C
C             /-COMPUTE UNIT VECTOR U1 PERPENDICULAR TO TA TO SELECT
C             /-PROPER SIDE OF CUTTER
C             /-U1 SHOULD POINT OUTWARD FROM TA
C             /-CURRENT CENTER OF CURVATURE CC IS THE PRIMARY INPUT.
C
      DATA ZLIT1,ZLIT2,ZLIT3,ZERO,ONE/.9D-4,1.D-10,.1D-3,0.D0,1.D0/
C
      DO 1 I=1,3
      TEMP(I)=CC(I,IS)-TE(I)
    1 CONTINUE
      CALL DOTF(W1,TEMP,TA)
C             /-INTIAL U1 POINTS FROM TA OUTWARD TO CC
      DO 2 I=1,3
    2 U1(I,IS)=TEMP(I)-W1*TA(I)
      CALL VNORM(U1(1,IS),U1(1,IS))
C             /-FIRST U1 POINTS DIRECTLY FROM CC TOWARD TOOL AXIS
      IF(IER.NE.0) GO TO 3
C              /-U1 SHOULD BE PERPENDICULAR TO TA IN NORMAL CASE
      CALL DOTF(W1,TA,U1(1,IS))
      IF(DABS(W1).LT.ZLIT3) GO TO 18
C
C             /-U1 TOO SMALL, SELECT ANOTHER U1
    3 CONTINUE
      IF(DABS(TA(3)).GE.ZLIT1) GO TO 4
C             /-K OF TOOL AXIS TOO SMALL, GIVE U1 A K COMPONENT
      U1(1,IS)=ZERO
      U1(2,IS)=ZERO
      U1(3,IS)=ONE
      GO TO 18
    4 CONTINUE
      W1=TA(1)**2+TA(2)**2
      IF(DABS(W1).GE.ZLIT2) GO TO 5
C             /-TA IS INSIGNIFICANT, SET U1 IN I DIRECTION
      U1(1,IS)=ONE
      U1(2,IS)=ZERO
      U1(3,IS)=ZERO
      GO TO 18
    5 CONTINUE
      TEMP(1)=TA(1)
      TEMP(2)=TA(2)
      TEMP(3)=-W1/TA(3)
      CALL VNORM(TEMP,U1(1,IS))
      IF(IER.EQ.0) GO TO 18
C             /-U1 IS NOT COMPUTABLE DUE TO POORLY CONDITIONED TA
      CALL AERR(26401,'U1COMP  ')
      GO TO 999
C
   18 CONTINUE
C             /-U1 NOW SET, MODIFY SIGN DEPENDING ON TOOL TO SURF RELAT
      CALL DOTF(W1,U1(1,IS),SN(1,IS))
C             /-U1 OPPOSED TO SN FOR SN CONTROL
      IF(W1.LT.ZLIT3.AND.JTN(IS).EQ.0) GO TO 999
C             /-U1 AGREES WITH SN(AND TN) FOR TN CONTROL
      IF(W1.GE.ZERO.AND.JTN(IS).NE.0) GO TO 999
C             /-REVERSE SIGN OF U1
      DO 12 I=1,3
      U1(I,IS)=-U1(I,IS)
   12 CONTINUE
  999 CONTINUE
      RETURN
      END
