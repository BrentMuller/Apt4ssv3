**** SOURCE FILE : M0000893.W04   ***
*
C.....FORTRAN SUBROUTINE  ....DELTA          8/68                    HG
C.....FORTRAN SUBROUTINE              DELTA...              3/27/68  GK
      SUBROUTINE DELTA
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DSHAR4.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'SV.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'ISV.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'ISHR18.INC'
      INCLUDE 'KNUMBR.INC'
C
C...  21. ADDCOM BLOCK
C
      COMMON/ADDCOM/ ADDCOM
      DIMENSION ADDCOM(25)
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN)
C
      INCLUDE 'CGOUG.INC'
      INCLUDE 'CHANG.INC'
C
      DATA ZLIT1,ZLIT3/1.D-4,4.D0/
C
      AAP=RC(IPS)
      BAP=RC(IDS)
      STAU1=TAU(IPS)
      STAU2=TAU(IDS)
      KAP=IS
C        USE RC1   FOR PROPER UNITS/ IMPLEMENTATION
      DPE = 1.D10*RC1/4500.D0
      DPI=DP
      J=0
      IF(JLIN-1)101,601,101
  601 TAU(IPS)=0.4*TAU(IPS)
      TAU (IDS)=0.4*TAU(IDS)
C1.2      DO FOR PART SURFACE FIRST
  101 IS=IPS
  901 IF(IPL(IS)-1)501,500,501
  500 ZL=DSQRT((TE(1)-TEK(1))**2+(TE(2)-TEK(2))**2+(TE(3)-TEK(3))**2)
  570 DP = DPMAX
      GO TO 303
  501 IF(ISFTYP(IS)-3)503,502,503
  502 DO 504 I=1,3
      P1(I)=TE(I)
  504 P2(I)=TEK(I)
      GO TO 401
  503 IF(DABS(SN(1,IS)*TA(1)+SN(2,IS)*TA(2)+SN(3,IS)*TA(3))-ZLIT1) 506,
     1   506,505
  506 IF(DABS(SNK(1,IS)*TA(1)+SNK(2,IS)*TA(2)+SNK(3,IS)*TA(3))-ZLIT1)
     /     507,507,505
  507 DO 509 I=1,3
      P1(I) = TP(I,IS)
  509 P2(I) = TPK(I,IS)
      GO TO 401
  505 IU=ITSEG(IS)
      IV=ITSEGK(IS)
      IF(TLINC(IU))508,510,508
  510 IF(IU-IV)508,512,508
  512 IF(U1K(1,IS)*U1(1,IS)+U1K(2,IS)*U1(2,IS)+U1K(3,IS)*U1(3,IS)-.01)
     1     508,513,513
  513 DO 514 I=1,3
      P1(I)=TE (I)+RI(IU)*U1(I,IS)+TLHITE(IU)*TA (I)
  514 P2(I)=TEK(I)+RI(IV)*U1K(I,IS)+TLHITE(IV)*TAK(I)
  401 PROD1=0.
      PROD2=0.
      DO 102 I=1,3
      PROD1=PROD1+(P1(I)-TE(I))*TA(I)
  102 PROD2=PROD2+(P2(I)-TEK(I))*TAK(I)
      ZL=0.
      DO 105 K=1,3
      P1(K)=TE(K)+PROD1*TA(K)
      P2(K)=TEK(K)+PROD2*TAK(K)
  105 ZL=ZL+(P1(K)-P2(K))**2
      IF (J.EQ.0) THEN
C1.4      FIND RC=RADIUS OF CURVATURE ALONG NORMAL AT P1
        CALL CCURV(IS,P1,P2,SN(1,IS))
      ELSE
        CALL CCURV(IS,P1,P2,SNK(1,IS))
      ENDIF
C
C...                IF APPARANT PLANE,USE LARGE RADIUS OF CURVATURE
C
      IF (ISIGCR(IS)-1) 301,1301,301
 1301 RC(IS) = DSIGN(RC1,RC(IS))
  301 D1=2.*DABS(RC(IS))
      GO TO 115
  303 IF(IS-IPS)113,112,113
C1.7      STORE RESULTS IN D2A,ZL1, AND RETURN FOR LIKE CALC. FOR DS
  112 DPS=DP
      ZLS=ZL
      IS=IDS
      GOTO 901
C1.8        USE RESULTS OF SURFACE, PS OR DS, HAVING SMALLEST DP
  113 IF(DP-DPS) 516,516,114
C1.9      RESTORE PS RESULTS (MOST CONSERVATIVE AFTER ALL)
  114 DP=DPS
      ZL=ZLS
      GO TO 516
  115 ZL=DSQRT(ZL)
      DP=DSQRT(ZLIT3*TAU(IS)*DABS(D1-TAU(IS)))
      GO TO 303
C1.12     IF BEGINNING CUT VECTOR CANDIDATE BEING TESTED, STORE
C1.12    CURRENT RESULTS (BASED ON NORMALS AT TERMINUS OF CUT VECTOR)
C1.12    AND RETURN FOR CALCULATIONS BASED ON NORMALS AT ORIGIN OF
C1.12    CUT VECTOR
  516 IF(J12-1) 116,117,119
  116 DPE=DP
      ZL2=ZL
      J=1
      J12=1
      GO TO 101
C1.14     COMPARE CUT VECTOR LENGHTS BASED ON NORMALS AT ORIGIN AND
C1.14    TERMINUS OF CUT VECTOR.  IF BEGINNING CUT VECTOR CANDIDATE
C1.14    IS UNDER CONSIDERATION DPE IS TOO LARGE--TRANSFER TO C1.15
  117 J12=2
      IF(DP-DPE) 119,119,118
C1.15     RESTORE RESULTS BASED ON NORMALS AT TERMINUS
C1.15    OF CUT VECTOR CANDIDATE
  118 DP=DPE
      ZL=ZL2
C
C1.16     PRESERVE UNTRUNCATED DP FOR USE IN ANOTHER PROGRAM
  119 DPL=DP
C
C2.1      TRUNCATE DP SO AS TO LIE BETWEEN TAU AND DPMAX
      IF(DP-DPMAX)122,125,121
  122 IF(DP-TAU(IS))124,125,125
  124 DP=TAU(IS)
      GO TO 125
  121 DP=DPMAX
C
  125 IF(DP-ZL+TAU(IS))130,151,151
  155 IF(DP-.6*DPI+TAU(IS))129,127,127
C2.9      CUT VECTOR CANDIDATE MUCH TOO LONG.  REDUCE IT TO .6 OF ITS
C2.9     CURRENT VALUE, SUBMIT TO ONE MORE TEST AND EXIT FAILING
  129 DP=.6*DPI
      GO TO 127
  130 TEMP(1) = DP/ZL
      IF(TEMP(1) - .6) 310,340,320
  310 TEMP(1) = .6
  340 IF(DPI - DP) 350,360,360
  350 DP = DPI
  360 DP = TEMP(1)*DP
      GO TO 145
  320 IF(.9 - TEMP(1)) 330,340,340
  330 TEMP(1) = .9
      GO TO 340
C2.14     REJECT CUT VECTOR CANDIDATE
  145 JDR=1
C.... COULD BE ACCEPTED IF
C.... CUTTER HAS NOT MOVED SINCE LAST CALL TO CENTR
      IF (JTENEU.EQ.1) GOTO 160
C.... CUT VECTOR LENGTH .LT. TAU
      IF (DPI.LT.TAU(IS)) GOTO 160
C.... OR CUT VECTOR .LT. 5*TAU AND .LT. HALF LAST ACCEPTED CUT VECTOR
      IF ((DPI.LT.(5.D0*TAU(IS))).AND.(DPI.LT.(.5D0*DPL))) GOTO 160
  201 IS=KAP
      RC(IPS)=AAP
      RC(IDS)=BAP
      TAU(IPS)=STAU1
      TAU(IDS)=STAU2
      RETURN
C
C
C         TENTATIVELY ACCEPT CUT VECTOR (MUST PASS GOUGCK YET)
C2.16     CUT DP DOWN TO 2DPI IF IT EXCEEDS THIS NO.  THIS PREVENTS
C2.16    WILD FLUCUATIONS OF THE DP CAUSED BY RAPID CHANGE
C2.16    IN SURFACE CURVATURE ALSO PRESENTS POINT SPACING
C2.16    TO POST PROCESSOR ADAPTABLE TO FEED RATES.
  151 IF(DP-2.*DPI+TAU(IS))155,155,153
  153 DP=2.*DPI
C
C
  127 IF(IGOUG)160,160,157
  157 CALL GOUGE
C2.22     IF GOUGCK FAILS, REJECT CUT VECTOR AND REDUCE DP TO .75DP
      IF(JGR)159,160,159
  159 DP=.75*DPI
      GO TO 145
C
C2.23     ACCEPT CUT VECTOR CANDIDATE
  160 JDR=0
      GO TO 201
  508 ZL=(TP(1,IS)-TPK(1,IS))**2+(TP(2,IS)-TPK(2,IS))**2
     1   +(TP(3,IS)-TPK(3,IS))**2
      ZL =DSQRT (ZL)
      IF (J.EQ.0) THEN
        CALL CCURV(IS,SP(1,IS),SPK(1,IS),SN(1,IS))
      ELSE
        CALL CCURV(IS,SP(1,IS),SPK(1,IS),SNK(1,IS))
      ENDIF
C
C...                IF APPARANT PLANE, USE LARGE RADIUS OF CURVATURE
C
      IF (ISIGCR(IS)-1) 104,1104,104
 1104 RC(IS) = DSIGN(RC1,RC(IS))
  104 IF(RC(IS))106,107,107
  106 IF(JLIN-1)108,109,108
  108 RC(IS)=DABS(RC(IS)+TAU2(IS))-TH(IS)
  110 D1=2.*DABS(RC(IS))
      GO TO 120
  107 IF(JLIN-1)111,812,111
  111 RC(IS)=RC(IS)+TAU1(IS)+TH(IS)
      GO TO 110
  812 RC(IS)=DABS(RC(IS))+.5*(TAU1(IS)+TAU2(IS))+TH(IS)
      GO TO 110
  109 RC(IS)=DABS(RC(IS))+.5*(TAU1(IS)+TAU2(IS))-TH(IS)
      GO TO 110
  120 F=1.-(DABS(SK(1,IS)-S(IS)))/(1.8*TAU(IS))
      DP=DSQRT(ZLIT3*TAU(IS)*DABS(D1-TAU(IS)))
      DP=F*DP
      TEMP(4) = DSQRT((TE(1)-TEK(1))**2+(TE(2)-TEK(2))**2
     1          + (TE(3)-TEK(3))**2)
      GO TO 303
       END
