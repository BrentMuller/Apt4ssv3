*
C.....FORTRAN SUBROUTINE  ....TLNORM         8/68                 PH,HG
C..... FORTRAN SUBROUTINE            TLNORM...              4/8/68   GK
      SUBROUTINE TLNORM(U1VAR)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
C
C
C
C
      INCLUDE (TOTAL)
      INCLUDE (DSHAR4)
      INCLUDE (FXCOR)
      INCLUDE (SV)
      INCLUDE (ISV)
      INCLUDE (IFXCOR)
      INCLUDE (ZNUMBR)
C
      INCLUDE (BLANKCOM)
      INCLUDE (CHEKFL)
C
      DIMENSION U1VAR(3),TNOLD(3),TPOLD(3),SNOLD(3),SPOLD(3)
C
      COMMON/MODESS/MODESS,MSSCHK,MSSARL
C
      DIMENSION TPSPDF(3)
C
      DATA ZBIG/1.D30/,Z4/4.D0/,Z3EM4/3.D-4/,Z5EM3/5.D-3/,Z5EM4/5.D-4/
      DATA Z700,Z9999,Z995,ZBIG2/700.D0,0.9999D0,.995D0,1.D20/
      DATA ZERO,ONE/0.0D0,1.0D0/
C
C-----------------------------------------------------------
C             /-JFIND IS -1 WHEN AT LEAST ONE TOOL SEG HAS LINED UP
C             /-WITH THE CENTER OF CURVATURE
C             /-IBB=-1 FOR 1ST PASS THRU TLNORM, =0 ON SECOND PASS
      JFIND=1
      IBB=-1
  805 CONTINUE
C              /-IT IS TOOL SEGMENT INDEX  =1 AT TIP,2,3,4 ETC
C              /-IT=7 IS LAST SEGMENT, =8 IS DISC. IBEGIN IS FIRST
C              /-SIGNIFICANT TOOL SEGMENT.
      IT=IBEGIN
      DO 12 I=1,3
   12 UVEC(I)=U1VAR(I)
C
      IF(MSSCHK.EQ.1) GO TO 3029
C-----------------------------------------------------------
C              /-TEST FOR ROUTE
C
C              /-ITLON IS 0 IF TOOL ON SURF, 1 OTHERWISE
      IF(ITLON(IS).EQ.0) GO TO 1
C              /-IAFL=-1, GENERAL SURF, 0 PLANE PERP TO TA, 1 CYL LL TA
C              /-JTLFLG=0 FOR NORMAL CUTTER, =1 FOR DISC TYPE.
C
      IW=IAFL(IS)+JTLFLG(IS)
C              /-IAFL,JTLFLG = 0,1,  1,1,  OR 1,0
      IF(IW.GT.0) GO TO 401
C              /-IAFL,JTLFLG = -1,1, 0,0
      IF(IW.EQ.0) GO TO 404
C              /-IAFL=-1,JTLFLG=0
      IF(IPT1.NE.0) GO TO 84
      GO TO 1
C
C              /-TA LL TO SURFACE ELEMENT
C
  401 CONTINUE
      DO 402 I=1,3
      TP(I,IS)=TE(I)+TOOLWD(IS)*UVEC(I)+TOOLHT(I,IS)
      TN(I,IS)=UVEC(I)
  402 CONTINUE
C              /-TP,TN FOUND, RETURN TO CALLING PROGRAM
      GO TO 9999
C              /-CASE OF POINT CUTTER
    1 CONTINUE
C              /-TEMP(1) IS +OR-1 TO SELECT CUTTER SIDE
C              /-TEMP(2) IS 0 OR 1
      TEMP(2)=ZERO
      DO 21 I=1,3
   21 TP(I,IS)=TE(I)
      ITSEG(IS)=1
      GO TO 408
C
C-----------------------------------------------------------
C
C              /-TLON, POINT TOOL, 5-AXIS RING ROUTES
  404 CONTINUE
      IF(RI(8).EQ.ZERO) GO TO 406
      TEMP(1)=-ONE
      TEMP(2)=ONE
      GO TO 407
  406 CONTINUE
      TEMP(2)=ZERO
  407 CONTINUE
      DO 405 I=1,3
  405 TP(I,IS)=TE(I)+TLHITE(8)*TA(I)+TEMP(1)*RI(8)*UVEC(I)
      ITSEG(IS)=8
  408 CONTINUE
      DO 2 I=1,3
      TN(I,IS)=CC(I,IS)-TP(I,IS)
    2 CONTINUE
C              /-LL MAY BE 3,4 OR 5
      LL=TEMP(1)*TEMP(2)+Z4
      CALL VNORM(TN(1,IS),TN(1,IS))
      IF(IER.EQ.0) GO TO 8
C**** ERROR EXIT, TN CANNOT BE FOUND
    3 CONTINUE
      IF(TEMP(2).GT.ZERO) GO TO 410
      CALL AERR(26601,'TLNORM  ')
      GO TO 9999
C
  410 TEMP(LL)=-ONE
C
  417 CONTINUE
      IF(TEMP(1).GE.ZERO) GO TO 418
      DO 503 I=1,3
      TEMP(I+5)=TN(I,IS)
  503 TEMP(I+8)=TP(I,IS)
      TEMP(1)=ONE
      GO TO 407
C
  418 CONTINUE
      IF(TEMP(5).GE.TEMP(3)) GO TO 505
C              /-TEMP(5) IS LT TEMP(3)
      DO 506 I=1,3
      TN(I,IS)=TEMP(I+5)
      TP(I,IS)=TEMP(I+8)
  506 CONTINUE
  505 CONTINUE
C              /-JTLFLG NE 1 MEANS IGNORE DISC CUTTER
      IF(JTLFLG(IS).NE.1) GO TO 9999
      IF(IPL(IS).NE.1) GO TO 9999
C              /-PLANAR SURFACE CASE
      CALL DOTF(W1,TA,SN(1,IS))
      IF(DABS(W1).LT.Z995) GO TO 9999
C              /-SN AND TA ARE CLOSE, LOOK FURTHER
      IF(JTN(IS).GT.0) GO TO 9999
C              /-SURFACE IS DS OR PS, CONTINUE
      GO TO 413
C
    8 CONTINUE
      IF(TEMP(2).GT.ZERO) GO TO 412
C              /-TEMP(2) IS LE ZERO
      IF(JTN(IS).GT.0) GO TO 414
  413 CONTINUE
C              /-JTN(IS) IS ZERO, NORMAL PS OR DS SURFACE
      CALL DOTF(W1,SN(1,IS),TN(1,IS))
C              /- WHEN TN AND SN ARE OPPOSED, FINISH
      IF(W1.LE.ZERO) GO TO 9999
C              /-ELSE CHECK FURTHER
      GO TO 340
  414 CONTINUE
C              /-JTN NOT ZERO, CHECK SURFACE, TN CONTROL
      CALL DOTF(W1,TN(1,IS),TNL(1,IS))
C              /-LAST TWO TNS ALIGNED, THEN QUIT
      IF(W1.GT.ZERO) GO TO 9999
      IF(W1.LT.ZERO) GO TO 340
C              /-CHECK FURTHER IF TN PERPEN TO TNL
      CALL DOTF(W1,TN(1,IS),SN(1,IS))
      IF(W1.GE.ZERO) GO TO 9999
  340 CONTINUE
C              /-REVERSE TN AND THEN TERMINATE
      DO 341 I=1,3
      TN(I,IS)=-TN(I,IS)
  341 CONTINUE
      GO TO 9999
C
  412 CONTINUE
      CALL DOTF(W1,TN(1,IS),UVEC)
      IF(TEMP(1)*W1.GE.ZERO) GO TO 502
C              /-REVERSE TN
      DO 501 I=1,3
      TN(I,IS)=-TN(I,IS)
  501 CONTINUE
  502 CONTINUE
      IF(JTN(IS).LE.0) CALL DOTF(W1,TN(1,IS),SN(1,IS))
      IF(JTN(IS).LE.0) TEMP(LL)=-W1
      IF(JTN(IS).GT.0) CALL DOTF(TEMP(LL),TN(1,IS),TNL(1,IS))
      GO TO 417
C-----------------------------------------------------------
C
C              /-START NORMAL ROUTE. SPECIAL PATH FOR END TOOL
C
   84 CONTINUE
      TCONT(8)=-ONE
      NNN=1
      IF(JTN(IS).EQ.0) IT=ITSEG(IS)
C.... CONSIDER PRECEDING AS WELL AS CURRENT AND FOLLOWING TOOL SEGMENTS
      IF (IT.GE.4) IT=IT-2
      CENDIS=ZBIG
      WFL1=ZERO
      IT=IT-NNN
C
C              /-INCREMENT TOOL SEGMENT, TRY AGAIN
 2000 CONTINUE
      IT=IT+NNN
C              /-TCONT=0 MEANS SEGMENT INSIGNIFICANT
      IF(TCONT(IT).EQ.ZERO) GO TO 2000
C              /-TCONT=-1 MEANS ALL SEGS OF TOOL DONE, SELECT TN.
      IF(TCONT(IT).GE.ZERO) GO TO 700
C
C              /-END OF TOOL.  ONLY ONE POSSIBLE TN.
C
      IF(JFIND.LE.0) GO TO 9999
      TEMP(1)=2*JTN(IS)-1
      DO 8223 I=1,3
      TN(I,IS)=TEMP(1)*SN(I,IS)
 8223 CONTINUE
      CALL DOTF(COM1,TA,TN(1,IS))
      COM1=-COM1
      COM4=DSQRT(ONE-COM1**2)
      IF(COM4.LE.Z1EM3.AND.COM1.GE.ZERO) GO TO 605
      IF(COM4.LT.Z1EM3.AND.COM1.LT.ZERO) GO TO 604
      TANGL=COM1/COM4
      IT=IBEGIN
  704 CONTINUE
C              /-TCONT LT ZERO MEANS THIS IS LAST TOOL SEGMENT
      IF(TCONT(IT).LT.ZERO) GO TO 3
C              /-TCONT GT ZERO MEANS THIS IS ORDINARY TOOL SEGMENT
      IF(TCONT(IT).GT.ZERO) GO TO 706
C              /-TCONT EQ ZERO MEANS INSIGNIFICANT TOOL SEGMENT
  705 CONTINUE
      IT=IT+1
      GO TO 704
  706 CONTINUE
      IF(TLINC(IT).NE.ZERO) GO TO 705
      IF(TANGL.LT.TANHI(IT)) GO TO 705
      DO 709 I=1,3
  709 TP(I,IS)=TE(I)+TLHITE(IT)*TA(I)+RI(IT)*UVEC(I)+CORRAD(IT)*TN(I,IS)
      GO TO 9999
C
  700 CONTINUE
C              /-CONTINUE SEARCH
      DO 15 I=1,3
      REFPNT(I)=TE(I)+RI(IT)*UVEC(I)+TLHITE(IT)*TA(I)
      OGLE(I)=CC(I,IS)-REFPNT(I)
   15 CONTINUE
      CALL VNORM(OGLE,U2)
C              /-IF OGLE, CANDIDATE TN, IS SMALL, TRY NXT SEG
      IF(IER.GT.0) GO TO 2000
C              /-IF SURFACE IS PLANAR, USE NORMAL RATHER THAN CC
      IF(IPL(IS).LT.1) GO TO 155
      DO 153 I=1,3
      OGLE(I)=-RC(IS)*SN(I,IS)
      U2(I)=-DSIGN(ONE,RC(IS))*SN(I,IS)
  153 CONTINUE
C
  155 CONTINUE
      IF(TLINC(IT).EQ.ZERO) GO TO 16
      CORRAD(IT)=ZERO
      DO 41 I=1,3
      U2(I)=COSL(IT)*UVEC(I)+SINL(IT)*TA(I)
   41 CORRAD(IT)=CORRAD(IT)+OGLE(I)*U2(I)
C              /-IF CORNER RADIUS IS SMALL, GO TO NEXT SEG
      IF(CORRAD(IT).LT.-Z3EM4) GO TO 2000
C              /-OTHERWISE, GO TO PLANE CALC
C              /-IF SURF IS A PLANE, TN MUST BE LL TO TOOL SEG
   43 CONTINUE
      IF(IPL(IS).LE.0) GO TO 643
      IF(CORRAD(IT).GE.Z5EM3) GO TO 2000
      CORRAD(IT)=ZERO
      GO TO 44
  643 CONTINUE
      IF(CORRAD(IT).GE.UMAX(IT)+Z5EM4) GO TO 2000
   44 CONTINUE
C              /-COSL IS HORIZONTAL AND SINL VERTICAL COMP OF LINEAR SEG
      DO 45 I=1,3
   45 ZLNORM(I)=SINL(IT)*UVEC(I)-COSL(IT)*TA(I)
      GO TO 31
C
   16 CONTINUE
      CALL DOTF(COM1,OGLE,TA)
      CALL DOTF(COM4,OGLE,OGLE)
      COM4=COM4-COM1**2
      TEMP(1)=ONE
      IF(IT.EQ.7) TEMP(1)=-ONE
      TANGL=TEMP(1)*ZBIG
      IF(COM4.GT.ZERO) GO TO 19
      DO 50 I=1,3
   50 U2(I)=-TEMP(1)*TA(I)
      ITRY=1
      GO TO 25
C
   19 CONTINUE
      COM4=DSQRT(COM4)
      TANGL=-ZBIG
      IF(COM1.LT.Z700*COM4) TANGL=-COM1/COM4
      CALL DOTF(W1,UVEC,OGLE)
      ITRY=0
 1900 CONTINUE
      IF(W1.GE.ZERO) GO TO 25
C              /-REVERSE SIDE OF CUTTER
      TANGL=-TANGL
      DO 24 I=1,3
   24 U2(I)=-U2(I)
C-----------------------------------------------------------
C              /-RESUME NORMAL PATH. COMPUTE ZLPNT,ZLNORM
C
   25 CONTINUE
C              /- TANHI.LT.TANGL.LT.TANLO IS CRITERIA FOR VALID TN
      IF ((TANLO(IT).GE.TANGL).AND.(TANHI(IT).LE.TANGL)) THEN
        DO 30 I=1,3
          ZLNORM(I)=U2(I)
   30   CONTINUE
      ELSE
        IF (TANLO(IT).LT.TANGL) THEN
C              /-TN CONTROL, SEARCH BACKWARDS ON TOOL
          IF(JTN(IS).NE.0) NNN=-1
        ENDIF
C
        IF (ITRY.EQ.1) GOTO 2000
        IF ((ICHEKF.NE.1).AND.(ABS(W1).GT.0.05D0)) GOTO 2000
        IF (ABS(W1).GT.10.D0) GOTO 2000
        ITRY=1
        W1=-W1
        GOTO 1900
      ENDIF
C
   31 CONTINUE
      DO 32 I=1,3
   32 ZLPNT(I)=REFPNT(I)+CORRAD(IT)*U2(I)
      IF(JTN(IS).LE.0) GO TO 237
C
C
C              /-NORMAL PATH. TN CONTROL
C
      CALL DOTF(W1,TNL(1,IS),ZLNORM)
C             /-TN.TNL POSITIVE, ACCEPT CURRENT TP,TN - RETURN
      IF(W1.GE.ZERO) GO TO 9998
      IF (IBB.LT.0) THEN
        W11=W1
      ELSE
        IF (W11.GT.W1) THEN
          GOTO 8021
        ELSE
          IF (W1.GT.-0.08D0) THEN
            CALL ERROR(-26002,'TLNORM')
            GO TO 9998
          ENDIF
        ENDIF
      ENDIF
      CALL DOTF(AM,ZLNORM,TA)
      IF(DABS(AM).LE.Z9999) GO TO 802
      IF(JTN(IS).EQ.0) GO TO 603
      DO 601 I=1,3
  601 TN(I,IS)=-ZLNORM(I)
      IF(AM.GT.ZERO) GO TO 605
C              /-AM IS LE ZERO
      GO TO 604
C
  802 CONTINUE
C             /-IBB =0 MEANS 2ND TIME THRU TLNORM, SO FAIL HERE.
      IF(IBB.GE.0) GO TO 804
C             /-RESTART MODE, SWITCH TO OTHER SIDE CUTTER, THEN RESTART
 8021 IBB=0
      ITSEG(IS)=IBEGIN
      DO 803 I=1,3
  803 U1VAR(I)=-U1VAR(I)
C             /-BRANCH BACK TO START OF TLNORM, BEGIN AGAIN
      GO TO 805
  804 CONTINUE
C*****
      CALL AERR(26602,'TLNORM  ')
  603 CONTINUE
C             /-SET REFERENCE TP AT TOP OF TOOL
      IF(IT.EQ.7) GO TO 605
  604 CONTINUE
      IT=7
      ITSEG(IS)=7
      DO 3604 I=1,3
 3604 TP(I,IS)=TE(I)+TLHITE(IT)*TA(I)+RI(IT)*U1(I,IS)
      GO TO 9999
C
  605 CONTINUE
      ITSEG(IS)=IBEGIN
      DO 3603 I=1,3
 3603 TP(I,IS)=TE(I)
      GO TO 9999
C              /-SELECT CORRECT TN FROM MULTIPLE TN'S.
C              /-TEMPORARILY REPLACE TP,TN WITH NEW TP,TN CANDIDATE
  237 CONTINUE
      DO 34 I=1,3
      SNOLD(I)=SN(I,IS)
      SPOLD(I)=SP(I,IS)
      TNOLD(I)=TN(I,IS)
      TPOLD(I)=TP(I,IS)
      TN(I,IS)=ZLNORM(I)
      TP(I,IS)=ZLPNT(I)
   34 CONTINUE
      IF(IS.EQ.1) GO TO 7003
      IF(ISFIDN(IS).EQ.29.OR.ISFIDN(IS).EQ.30) GO TO 7003
C              /-
      CALL DDST
C              /-
      IF(IER.EQ.0) GO TO 7004
 7003 S(IS)=ZBIG2
 7004 CONTINUE
      DO 4029 I=1,3
      SN(I,IS)=SNOLD(I)
      SP(I,IS)=SPOLD(I)
      TN(I,IS)=TNOLD(I)
      TP(I,IS)=TPOLD(I)
 4029 CONTINUE
      S(IS)=DABS(S(IS))
C
      IF(CENDIS.LT.S(IS)) GO TO 2000
C.... SELECT TN WHOS DIRECTION COINCIDES BEST WITH LAST SN
C.... IE. WHOSE ABS VALUE OF TN.SN IS MAXIMAL
      CALL DOTF(WFL2,SN(1,IS),ZLNORM)
      IF (ABS(WFL2).LE.ABS(WFL1)) GOTO 2000
      WFL1=WFL2
C              /-NEW DISTANCE TO SURFACE LESS, SET JFIND TO SEARCH TOOL
C             /-SET JFIND TO -1 TO SHOW A VALID DIST HAS BEEN FOUND
      JFIND=-1
      CENDIS=S(IS)
C
C              /-UPDATE TP,TN AND EXIT IF JFIND =1.
 9998 CONTINUE
      ITSEG(IS)=IT
      DO 9222 I=1,3
      TP(I,IS)=ZLPNT(I)
      TN(I,IS)=ZLNORM(I)
 9222 CONTINUE
C             /-JFIND -1, SO CONTINUE SEARCHING FOR BETTER TOOL SEG
      IF(JFIND.LT.0) GO TO 2000
C****
 9999 CONTINUE
      RETURN
C************************************************************
C-----------------------------------------------------------
C
 3029 CONTINUE
C--------  SPECIAL TREATMENT OF A BALL CUTTER BY SSURF
C              /-RADIUS OF BALL EQUALS HALF DIAMETER OF TOOL
      RRR=CUTDAT(2)
C              /-TOOL ON OR POINT TOOL MEANS RRR IS ZERO
      IF(ITLON(IS)*IPT1.EQ.0) RRR=ZERO
C              /-ISFTYP 1=TO, 2=PAST, 3=ON, 4=TANTO 8=PSTAN
      IF(ISFTYP(IS).EQ.3) RRR=ZERO
C              /-GENERATE POINT AT CENTER OF BALL OR TIP OF TOOL
      DO 3030 I=1,3
      TP(I,IS)=TE(I)+RRR*TA(I)
 3030 SPL(I,IS)=SP(I,IS)
C             /-BRANCH TO DD ROUTINE TO ESTABLISH TOOL/SURF RELATION
      MODESS=21
      CALL AJUNDD
      MODESS=0
C
C             /-COMPUTE RELEVANT POINT ON TOOL SURFACE
      W1=ONE
      IF(JTN(IS).EQ.0) W1=-W1
C             /-MODIFY TN FOR TN CONTROL SO THAT TN.TI IS POSITIVE
      IF(JTN(IS).EQ.0) GO TO 3032
C             /-MEASURE THE ANGLE BETWEEN TN AND TI
      CALL DOTF(W2,SN(1,IS),TI)
      W2=W2*W1*PAST(IS)
      IF(W2.GE.ZERO) GO TO 3032
C             /-ALTER THE SIGN OF Z AND SN TO MAKE TN.TI.PAST POSITIVE
      Z(IS)=-Z(IS)
      DO 3034 I=1,3
      SN(I,IS)=-SN(I,IS)
 3034 CONTINUE
 3032 CONTINUE
      DO 3033 I=1,3
      TN(I,IS)=W1*SN(I,IS)
      TP(I,IS)=TP(I,IS)+RRR*TN(I,IS)
      TPSPDF(I)=SP(I,IS)-(TP(I,IS)+TH(IS)*TN(I,IS))
 3033 CONTINUE
C             /-DISTANCE MEASURED FROM RELEVANT TP TO SP IN TN DIRECTION
      CALL DOTF(S(IS),TPSPDF,TN(1,IS))
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))
      ITSEG(IS)=4
      IF(DABS(RRR).LT.Z5EM4) ITSEG(IS)=1
      CALL DOTF(W1,TN(1,IS),TA)
      DO 3035 I=1,3
 3035 U1VAR(I)=TN(I,IS)-W1*TA(I)
      CALL VNORM(U1VAR,U1VAR)
      IER=0
      RETURN
      END
