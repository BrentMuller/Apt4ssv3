**** SOURCE FILE : M0002779.V09   ***
*
C
C
C.....FORTRAN SUBROUTINE           POCKET        2/69      SR,RL
      SUBROUTINE POCKET(RADF,OFSC,OFSF,FRONE,FRTWO,FRTHRE,
     C   OVRD,PTYP,NCOR,CRR)
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)
C
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'DSHAR5.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'ZNUMBR.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'KNUMBR.INC'
C
C
C...            SYSTEM I/O FILE NAMES
C
      INCLUDE 'SYMFIL.INC'
C
      INCLUDE 'BLANKCOM.INC'
C
      DOUBLE PRECISION SRF(4)
      EQUIVALENCE (COM(1),SRF(1))
C
C...  DIMENSION FOR POCKET
      DIMENSION XI(3,22),Q(3,21),U(3,21),W(3,20),BL(20),QQ(63),WW(60),
     1XIPRIM(3,21),VPRIM(3,20),UPRIM(3,20),T(3),WD(3),Y(3),PTINT(3),
     2CTEMP(3,20),CROSTO(3),UCRSTO(3),TCRSTO(3),KTAB(20),COR(3,20)
      DIMENSION CRR(3,20)
      EQUIVALENCE (Q(1,1),QQ(1)),(W(1,1),WW(1))
      DIMENSION KCLDAT(10)
      DIMENSION E(3),F(3)
      INTEGER BCDF,IPOCKT(2),IFDRT(2)
      LOGICAL FIRST
      SAVE FIRST,KCLDAT,IPOCKT,IFDRT
      EQUIVALENCE (HPOCKT,IPOCKT(1)),(HFDRT,IFDRT(1))
      INTEGER Z4E
      PARAMETER (Z4E=1308622848)
      LOGICAL SR1,SR2,SR3,SR4,SR5
      LOGICAL CKDEF
      LOGICAL  FPTFLG
      LOGICAL  FPFLG
      DATA KCLDAT /0,0,Z4E,0,Z4E,2,
     C   Z4E,1,0,0/
      DATA FIRST/.TRUE./
      DATA Z5EM4, Z5EM3, Z1EM4 / 5.D-4, 5.D-3, 1.D-4 /
C
      CALL TAPOP(POFILE,-1)
      RADEFF=RADF
      OFSETC=OFSC
      OFSETF=OFSF
      OVRIDE=OVRD
      PTTYPE=PTYP
      NC=NCOR
      IF (FIRST)THEN
        KCLDAT(1) = BCDF('CLDA')
        KCLDAT(2) = BCDF('TA  ')
        KCLDAT(9) = BCDF('GOTO')
        KCLDAT(10) = BCDF('    ')
        IPOCKT(1) = BCDF('POCK')
        IPOCKT(2) = BCDF('ET  ')
        IFDRT(1) = BCDF('FEDR')
        IFDRT(2) = BCDF('AT  ')
        FIRST =.FALSE.
      ENDIF
C...WRITE POCKET HEADER RECORD
      CALL APT299(K0,HPOCKT,K0,K0)
      NCORIG=NC
      CUTRAD=CUTDAT(1)
      SR1=.FALSE.
      SR2=.FALSE.
      SR3=.FALSE.
      SR4=.FALSE.
      SR5=.FALSE.
      NWD=1
      DO 4 I=1,NCOR
      IF(CKDEF(CRR(1,I))) GO TO 5
    4 CONTINUE
      GO TO 4002
C   AN INPUT POINT IS UNDEFINED
    5 CALL ERROR(3506)
      GO TO 993
 4002 IF(PTTYPE.LT.1.1) GO TO 4003
      PTTYPE = PTTYPE - 2.0
      DO 4001 I=1,NCOR
      TEMPD = TA(1)*SRF(1)+TA(2)*SRF(2)+TA(3)*SRF(3)
      RMDA = SRF(4)-(CRR(1,I)*SRF(1)+CRR(2,I)*SRF(2)+CRR(3,I)*SRF(3))
      IF(DABS(TEMPD).LT.Z1EM4) GO TO 50
      RMDA = RMDA/TEMPD
      COR(1,I) = CRR(1,I)+RMDA*TA(1)
      COR(2,I) = CRR(2,I) + RMDA*TA(2)
      COR(3,I) = CRR(3,I) + RMDA*TA(3)
 4001 CONTINUE
      GO TO 6
 4003 DO 4004 I=1,NCOR
      COR(1,I) = CRR(1,I)
      COR(2,I) = CRR(2,I)
 4004 COR(3,I) = CRR(3,I)
    6 IF(RADEFF) 1903,1903,2903
 1903 RADEFF = Z5EM1*OFSETC*CUTRAD
 2903 KALC = K0
      MOVE = K1
      INIT = K1
      DELDST=Z0
      GO TO 1904
  904 NC=NCUTBK
      PTTYPE=Z0
 1904 DO 905 J=1,NC
      DO 905 I=1,3
  905 XI(I,J+1)=COR(I,J)
      DO 906 I=1,3
      XI(I,1)=COR(I,NC)
  906 XI(I,NC+2)=COR(I,1)
      NPLUS1=NC+1
      NLESS1=NC-1
      DO 908 J=1,NPLUS1
      ADDEM1=Z0
      DO 907 I=1,3
      Q(I,J)=XI(I,J+1)-XI(I,J)
  907 ADDEM1=(Q(I,J))**2+ADDEM1
      DO 908 I=1,3
  908 U(I,J)=Q(I,J)/DSQRT(ADDEM1)
      IF(INIT)9907,9907,1907
 1907 CONTINUE
      DO 2906 J=1,NC
      DO 1906 I=1,3
      IF(DABS(XI(I,J)-COR(I,J))-Z5EM4)1906,1906,2906
 1906 CONTINUE
      CALL AERR(3501,'POCKET  ')
 2906 CONTINUE
      DO 4906 J=1,NC
      DO 3906 I=1,3
      IF(DABS(U(I,J+1)-U(I,J))-Z5EM4)3906,3906,4906
 3906 CONTINUE
      CALL AERR(3502,'POCKET  ')
 4906 CONTINUE
      ICRSTO=K1
      DO 6907 J=1,NC
      CROSTO(1)=-U(1,J)
      CROSTO(2)=-U(2,J)
      CROSTO(3)=-U(3,J)
      CALL CROSS(CROSTO ,U(1,J+1),CROSTO)
      CALL VNORM(CROSTO,UCRSTO)
      IF(ICRSTO) 4907,4907,2907
 2907 DO 3907 I=1,3
 3907 TCRSTO(I)=UCRSTO(I)
      ICRSTO=K0
      GO TO 6907
 4907 DO 5907 I=1,3
      IF(DABS(UCRSTO(I)-TCRSTO(I))-Z5EM4)5907,5907,7907
 5907 CONTINUE
 6907 CONTINUE
C...  ADJUST POCKET VERTICES IF POCKET BOTTOM IS CANTED
C      WITH RESPECT TO TOOL AXIS AND VERTICIES DESCRIBE ACTUAL
C     POCKET BOUNDARIES.
      X1=DABS(TA(1)*TCRSTO(1)+TA(2)*TCRSTO(2)
     1  +TA(3)*TCRSTO(3))
      IF(X1-.2D0)50,50,55
   50 CALL AERR(3507,'POCKET  ')
   55 IF(X1-.9999D0)65,60,60
   60 INIT=-K1
   65 IF(INIT)9907,60,70
   70 IF(PTTYPE)50,60,75
  75  INIT=K0
      PTTYPE=Z0
      DO 200 J=1,NC
      ADDEM1 = TA(1)*U(1,J)+TA(2)*U(2,J)+TA(3)*U(3,J)
      ADDEM2 =     TA(1)*U(1,J+1)+    TA(2)*U(2,J+1)+    TA(3)*U(3,J+1)
      DO 100 I=1,3
      QQ(I)=U(I,J)-TA(I)*ADDEM1
  100 WW(I)=U(I,J+1)-TA(I)*ADDEM2
      CALL VNORM(QQ,QQ)
      CALL VNORM(WW,WW)
      T(1)=WW(1)-QQ(1)
      T(2)=WW(2)-QQ(2)
      T(3)=WW(3)-QQ(3)
      CALL VNORM(T,T)
      ALPHA=DSQRT(CUTRAD**2/(1.-(T(1)*WW(1)+T(2)*WW(2)+T(3)*WW(3))**2))
      Y(1) = ALPHA*T(1)
      Y(2) = ALPHA*T(2)
      Y(3) = ALPHA*T(3)
      ALPHA = Y(1)*TCRSTO(1)+Y(2)*TCRSTO(2)+Y(3)*TCRSTO(3)
      DO 200 I=1,3
  200 COR(I,J)=COR(I,J)+Y(I)-ALPHA*TA(I)/X1
      GO TO 1904
 7907 DO 5906 I=1,3
      IF(DABS(DABS(UCRSTO(I))-DABS(TCRSTO(I)))-Z5EM4)5906,5906,6906
 5906 CONTINUE
      CALL AERR(3504,'POCKET  ')
 6906 CALL AERR(3503,'POCKET  ')
 9907 IF(OVRIDE) 909,1908,909
 1908 SPHIO2=Z1
      DO 4908 J=1,NC
      ADDEM1=Z0
      DO 2908 I=1,3
 2908 ADDEM1=-U(I,J)*U(I,J+1)+ADDEM1
      DUMMY=DSQRT((Z1-ADDEM1)/Z2)
      IF(DUMMY-SPHIO2) 3908,4908,4908
 3908 SPHIO2=DUMMY
 4908 CONTINUE
      DUMMY=RADEFF/CUTRAD*(Z1+SPHIO2)
      IF(OFSETC-DUMMY) 6908,6908,5908
 5908 OFSETC=DUMMY
 6908 IF(OFSETF-DUMMY) 8908,8908,7908
 7908 OFSETF=DUMMY
 8908 IF(.NOT.SR5) GO TO 909
      SR5 = .FALSE.
 9908 OFCSTO=OFSETC
      OFFSTO=OFSETF
      DUMMY=Z2*RADEFF/CUTRAD*SPHIO2
      IF(OFSETC-DUMMY) 4909,4909,2909
 2909 OFSETC=DUMMY
      IF(OFSETF-DUMMY) 4909,4909,3909
 3909 OFSETF=DUMMY
 4909 SR5=.TRUE.
  909 DO 911  J=1,NC
      DO 1909 I=1,3
 1909 W(I,J)=U(I,J+1)-U(I,J)
      ADDEM1=Z0
      ADDEM2=Z0
      DO 910 I=1,3
      ADDEM1=W(I,J)*U(I,J+1)+ADDEM1
  910 ADDEM2=W(I,J)*W(I,J)+ADDEM2
  911 BL(J)=DSQRT(ADDEM2-ADDEM1**2)
      DIST=PTTYPE*CUTRAD
      GO TO 4915
  912 MOVE=K2
      GO TO 1913
  913 MOVE=K3
 1913 DELDST=Z5EM1*OFSETF*CUTRAD
      GO TO 2914
  914 MOVE=K4
 1914 DELDST=Z5EM1*OFSETC*CUTRAD
 2914 DIST=DIST+DELDST
  915 IF(KALC) 1915,1915,2915
 1915 KALC=K1
      GO TO 3915
 2915 KALC=K0
C     EXIT IF ZERO DIAM. CUTTER
 3915  IF(CUTRAD) 987,987,3916
 3916 IF (.NOT. SR5) GO TO 4915
 5915 OFSETC=OFCSTO
      OFSETF=OFFSTO
 4915 DO 916 J=1,NC
      DO 916 I=1,3
  916 XIPRIM(I,J)=COR(I,J)+DIST/BL(J)*W(I,J)
      DO 917 I=1,3
  917 XIPRIM(I,NC+1)=XIPRIM(I,1)
      DO 919 J=1,NC
      ADDEM1=Z0
      DO 918 I=1,3
      VPRIM(I,J)=XIPRIM(I,J+1)-XIPRIM(I,J)
  918 ADDEM1=(VPRIM(I,J))**2+ADDEM1
      DO 919 I=1,3
  919 UPRIM(I,J)=VPRIM(I,J)/DSQRT(ADDEM1)
C     COLLAPSE TESTS
  920 DO 7260 J=1,NC
      KTAB(J) = K0
      DO 7260 I=1,3
      IF(DABS(U(I,J+1)-UPRIM(I,J))-Z5EM3)7260,7260,7250
 7250 KTAB(J) = K1
 7260 CONTINUE
 7270 NCUTBK = NC
      KUTBAC = K0
      KOLAPS = K0
      PHITMP=Z1
      DO 942 J=1,NC
      IF(KTAB(J)) 921,921,934
  921 IF (.NOT. SR2 )  GO TO 927
      SR2 = .FALSE.
  922  IF (KUTBAC-J+1)924,923,924
  923 JSAVE=J
      KOLAPS=K0
      GO TO 942
  924 INTER=K1
      KONE=J-KOLAPS-1
      KTWO=J
      GO TO 1940
  925 DO 926 I=1,3
      JDUMMY=J-KUTBAC
  926 CTEMP(I,JDUMMY)=PTINT(I)
      KOLAPS=K0
      GO TO 929
  927 DO 928 I=1,3
      JDUMMY=J-KUTBAC
  928 CTEMP(I,JDUMMY)=XIPRIM(I,J)
  929 IF(J-NC) 942,930,930
  930 IF ( .NOT. SR3 )  GO TO 942
      SR3 = .FALSE.
  931 INTER=K2
      KONE = J
      KTWO = JSAVE
      GO TO 1940
  932 DO 933 I=1,3
  933 CTEMP(I,1)=PTINT(I)
      GO TO 942
  934 NCUTBK=NCUTBK-1
      KUTBAC=KUTBAC+1
      KOLAPS=KOLAPS+1
      SR2=.TRUE.
      IF(J-1) 935,935,936
  935 SR3=.TRUE.
      GO TO 942
  936 IF(J-NC) 942,1936,1936
 1936 IF(MOVE.EQ.1.AND.NCUTBK.LE.2) CALL AERR(3510,'POCKET  ')
      IF(NCUTBK-2) 2936,2936,937
 2936 MOVE=K5
      IF(KALC) 3936,3936,982
  937 IF ( .NOT. SR3 )  GO TO 940
      SR3 = .FALSE.
  938 KTWO = JSAVE
  939 INTER=K2
      KONE = J-KOLAPS
      GO TO 1940
  940 KTWO=K1
      GO TO 939
C...  CALCULATE INTERSECTION OF NON-COLLAPSING SIDES
 1940  ITEST=K1
       KT1=KONE
       KT2=KTWO
 2040  COSVA=  UPRIM(1,KT1)*UPRIM(1,KT2) +
     1         UPRIM(2,KT1)*UPRIM(2,KT2) +
     2         UPRIM(3,KT1)*UPRIM(3,KT2)
      ADDEM2=DSQRT(DABS((Z1+COSVA)/Z2))
      IF(ADDEM2-PHITMP) 2060,2080,2080
 2060 PHITMP = ADDEM2
 2080 SIN2VA=Z1-COSVA**2
      IF(SIN2VA-Z1EM4) 2140,2140,2340
C...  SIDES ARE NEARLY PARALLEL - TAKE AVERAGE OF TWO VERTICES
 2140 DO 2240 L=1,3
 2240 PTINT(L)=(XIPRIM(L,KONE+1)+ XIPRIM(L,KTWO))/Z2
      GO TO 8941
C...  SIDES INTERSECT - COMPUTE INTERSECTION
 2340 ALPHA=Z0
      DO 2440 L=1,3
 2440 ALPHA = ALPHA + (XIPRIM(L,KT2)-XIPRIM(L,KT1))*
     1                (UPRIM(L,KT1)-UPRIM(L,KT2)*COSVA)
      ALPHA = ALPHA/SIN2VA
      ADDEM1=Z0
      DO 2540 L=1,3
 2540 ADDEM1 = ADDEM1 + (XIPRIM(L,KT1+1)-XIPRIM(L,KT1))**2
      ADDEM1 = DSQRT(ADDEM1)
      GO TO (2640,2740,3040,3340,3540,3840), ITEST
 2640 IF(ALPHA) 2650,2140,3140
 2650 KT1 = KT1-K1
      IF(KT1) 2680,2680,2660
 2660 IF(KTAB(KT1)) 2670,2670,2650
 2670 ITEST = K2
      GO TO 2040
 2680 KT1 = NC
 2690 IF(KTAB(KT1)) 2670,2670,2700
 2700 KT1 = KT1-K1
      IF(KT1-KT2) 2140,2140,2690
 2740 IF(ALPHA) 2140,2140,2840
 2840 IF(ALPHA-ADDEM1) 2940,2940,2140
 2940 KT2 = KT1
      KT1 = KTWO
      ITEST=K3
      GO TO 2340
 3040 IF(ALPHA) 2140,2140,3050
 3050 IF(ALPHA-ADDEM1) 3060,3060,2140
C...  SIDE OUTSIDE POLYGON-PLACE SIDE IN COLLAPSE CONDITION
 3060 KTAB(KONE) = K1
      GO TO 3870
 3140 IF(ALPHA-ADDEM1) 3240,2140,2140
 3240 KT1 = KTWO
      KT2 = KONE
      ITEST = K4
      GO TO 2340
 3340 IF(ALPHA) 2140,2140,3350
 3350 IF(ALPHA-ADDEM1) 5940,5940,3440
 3440 KT1 = KT2
      KT2 = KTWO
 3450 KT2 = KT2+K1
      IF(KT2-NC) 3460,3460,3480
 3460 IF(KTAB(KT2)) 3470,3470,3450
 3470 ITEST = K5
      GO TO 2040
 3480 KT2 = K1
 3490 IF(KTAB(KT2)) 3470,3470,3510
 3510 KT2 = KT2+K1
      IF(KT2-KT1-K1) 3490,2140,2140
 3540 IF(ALPHA) 2140,2140,3640
 3640 IF(ALPHA-ADDEM1) 3740,3740,2140
 3740 KT1 = KT2
      KT2 = KONE
      ITEST = K6
      GO TO 2340
 3840 IF(ALPHA) 2140,2140,3850
 3850 IF(ALPHA-ADDEM1) 3860,3860,2140
C...  SIDE OUTSIDE POLYGON-PLACE SIDE IN COLLAPSE CONDITION
 3860 KTAB(KTWO) = K1
 3870 SR2 = .FALSE.
 3880 SR3 = .FALSE.
      GO TO 7270
 5940 DO 6040 L=1,3
 6040 PTINT(L) = XIPRIM(L,KT1)+ALPHA*UPRIM(L,KT1)
 8941 GO TO (925,932),INTER
  942 CONTINUE
      IF(NC-NCUTBK) 944,944,1942
 1942 IF(KALC) 8942,2942,8942
 2942 IF(OVRIDE) 3942,5942,3942
 8942 IF(OVRIDE) 3942,9941,3942
 9941 SR5=.TRUE.
 3942 DO 4942 J=1,NCUTBK
      DO 4942 I=1,3
 4942 COR(I,J)=CTEMP(I,J)
      GO TO 904
 5942 IF ( .NOT. SR5 ) GO TO 6942
      SR5 = .FALSE.
  943 IF ( .NOT. SR4 )  GO TO 6942
      SR4 = .FALSE.
      GO TO 3942
 6942 IF(PHITMP-SPHIO2) 7942,3942,3942
 7942 SPHIO2=PHITMP
      DUMMY=RADEFF/CUTRAD*(Z1+SPHIO2)
      IF(OFSETC-DUMMY) 2943,2943,9942
 9942 OFCSTO=DUMMY
      IF(OFSETF-DUMMY) 3943,3943,1943
 1943 OFFSTO=DUMMY
      GO TO 4943
 2943 OFCSTO=OFSETC
 3943 OFFSTO=OFSETF
 4943 DUMMY=Z2*RADEFF/CUTRAD*SPHIO2
      IF(OFSETC-DUMMY) 3942,3942,5943
 5943 OFSETC=DUMMY
      IF(OFSETF-DUMMY) 7943,7943,6943
 6943 OFSETF=DUMMY
 7943 SR5=.TRUE.
      SR4=.TRUE.
      DIST=DIST-DELDST
      KALC=K1
      GO TO (2915,1913,1913,1914,1914),MOVE
  944 IF(KALC) 946,945,946
  945 SR1=.FALSE.
      SR2=.FALSE.
      SR3=.FALSE.
      SR4=.FALSE.
      SR5=.FALSE.
C     COVERAGE TESTS
  946 RTEST=Z2*RADEFF
      KOVER=K2
      GO TO 949
  947 RTEST=RADEFF
      KOVER=K1
  949 DO 968 J=1,NC
      DO 965 L=2,NLESS1
      K=J+L
      IF(K-NC) 951,951,950
  950 K=K-NC
  951 GO TO (952,954),KOVER
  952 DO 953 I=1,3
  953 Y(I)=XIPRIM(I,K)-XIPRIM(I,J+1)
  954 DO 955 I=1,3
  955 T(I)=XIPRIM(I,K)-XIPRIM(I,J)
      ADDEM1=Z0
      ADDEM2=Z0
      DO 956 I=1,3
      ADDEM1=T(I)*UPRIM(I,J)+ADDEM1
  956 ADDEM2=T(I)*T(I)+ADDEM2
      DCOV=DSQRT(ADDEM2-ADDEM1**2)
      IF(DCOV-RTEST) 957,957,968
  957 GO TO (958,965),KOVER
  958 ADDEM1=Z0
      DO 959 I=1,3
  959 ADDEM1=Y(I)*(-UPRIM(I,J))+ADDEM1
      IF(ADDEM1) 960,965,962
  960 ADDEM1=Z0
      DO 961 I=1,3
  961 ADDEM1=Y(I)*Y(I)+ADDEM1
      ADDEM2=DSQRT(ADDEM1)
      IF(ADDEM2-RTEST) 965,965,968
  962 ADDEM1=Z0
      DO 963 I=1,3
  963 ADDEM1=T(I)*UPRIM(I,J)+ADDEM1
      IF(ADDEM1) 964,965,965
  964 ADDEM1=DSQRT(ADDEM2)
      IF(ADDEM1-RTEST) 965,965,968
  965 CONTINUE
      MOVE=K5
      GO TO (969,967),KOVER
  967 IF(KALC) 980,980,947
  968 CONTINUE
      GO TO (980,1968),KOVER
 1968 IF(KALC) 980,980,982
  969 ADDEM1=Z0
      ADDEM2=Z0
      DO 970 I=1,3
      ADDEM1=(XIPRIM(I,J)-XIPRIM(I,1))**2+ADDEM1
  970 ADDEM2=(XIPRIM(I,J+1)-XIPRIM(I,1))**2+ADDEM2
      IF(DSQRT(DABS(ADDEM1))-DSQRT(DABS(ADDEM2))) 971,971,974
  971 DO 972 I=1,3
      WD(I)=XIPRIM(I,J)
  972 XIPRIM(I,1)=XIPRIM(I,J+1)
  973 J=K2
      NUM=K2
      GO TO 985
  974 DO 975 I=1,3
      WD(I)=XIPRIM(I,J+1)
  975 XIPRIM(I,1)=XIPRIM(I,J)
      GO TO 973
 3936 DO 4937 J=1,NC
      DO 4936 I=1,3
 4936 XIPRIM(I,J)=CTEMP(I,J)
 4937 CONTINUE
  980 NUM=NPLUS1
      J=K1
      GO TO 983
  981 J=NUM-1
      NUM=J
      IF(J) 982,982,983
  982 GO TO (912,913,914,1914,987),MOVE
  983 DO 984 I=1,3
  984 WD(I)=XIPRIM(I,J)
  985 NWD=0
      CALL AWRITE(POFILE,NWD,WD,6,IR)
 2986 NWD=NWD+1
      NWDMAX = NWD
      GO TO 981
C........INVERT ORDER OF POINTS ON FILE AND OUTPUT TO EXFILE
C       INSERTING PROPER FEEDRATES
C
C
C...POCKET MUST GENERATE AT LEAST 3 POINTS
  987 IF(NWD.LT.K3) CALL AERR(3510,'POCKET  ')
      CALL RECORD (ISEQNO)
C...SET FINAL POINT INDICATOR FOR CLDATA RECORD WRITER
      ICL = K3
C...SET PLUNGE FEEDRATE
      FEEDRT = FRONE
C...SET FIRST POINT FLAG TRUE
      FPTFLG = .TRUE.
C
      FPFLG = .FALSE.
      IF(NWDMAX.EQ.NCORIG+K2) FPFLG = .TRUE.
C...  WRITE A FEEDRATE RECORD ON EXFILE
  992 CALL APT299(K1,HFDRT,K1,FEEDRT)
      KCLDAT(4)=ISEQNO
      NR=0
      CALL EWRITE(EXFILE,NR,KCLDAT,10,IR)
C
C...WAS LAST POINT PROCESSED....
  993 IF(NWD.LE.K1) GO TO 9999
C.... NO
C...WILL FINISH PASS BE COMPLETED WITH NEXT POINT...
      IF(NWD.EQ.K2) GO TO 996
C.... NO
C...SKIP NEXT TEST IF FINISH PASS STARTED
      IF (FPFLG) GO TO 998
C...IS IT TIME FOR FINISH PASS...
      IF (NWD.EQ. (NCORIG+K2))GO TO 995
C.... NO
C...WILLCLEANOUT PASS BE COMPLETED WITH NEXT POINT...
  998 IF(NWD.EQ.(NCORIG+K3))GO TO 996
C.... NO
C...PRODUCE NEXT POINT
  994 IF(NWD.EQ.NWDMAX) GO TO 997
C
  997 NWD = NWD - 1
      CALL AREAD(POFILE,NWD,TE,6,IR)
      CALL ATAPE
C
C...SET INTERMEDIATE POINT INDICATOR FOR ATAPE (CLDATA RECORD WRITER)
      ICL = K2
C...CHECK FIRST POINT FLAG
      IF (.NOT.FPTFLG) GO TO 993
C...FLAG TRUE ...SET FALSE , AND PREPARE FOR POCKET CLEANOUT
      FPTFLG = .FALSE.
      FEEDRT = FRTWO
      IF(NWD.LE.K2)          GO TO 995
      IF(NWD.GT.(NCORIG+K1)) GO TO 992
C...SET FINAL FEEDRATE
  995 FEEDRT = FRTHRE
      FPFLG = .TRUE.
      GO TO 992
C...SET FINAL POINT INDICATOR FOR ATAPE
  996 ICL = K3
      GO TO 994
 9999 CONTINUE
      RETURN
       END
