*
C.....FORTRAN SUBROUTINE  ....APT010         8/68                    AR
C.....FORTRAN SUBROUTINE             APT010...              3/1/68   GK
C
C              FORTRAN SUBROUTINE APT010
C
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT
C              DEFINED IN A COORDINATE PLANE BY A POLAR COOR-
C              DINATE AND THE RADIUS VALUE BY THE FOLLOWING
C              APT STATEMENT
C              RESULT = POINT/RTHETA, ****, VAL
C                       **** = XYPLAN, YZPLAN, OR ZXPLAN
C              OR TO DETERMINE A VECTOR IN A COORDINATE PLANE
C              DEFINED BY ITS LENGTH AND AN ANGLE BY THE
C              FOLLOWING APT STATEMENT
C              RESULT = VECTOR/LENGTH, VAL, ATANGL, THETA, ****
C                       **** = XYPLAN, YZPLAN OR ZXPLAN
C
C LINKAGE      CALL APT010 (RESULT, M, VAL, THETA)
C
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF
C                      THE RESULTING POINT OR VECTOR
C              M       INTEGER EQUIVALENT OF THE MODIFIER
C                      1 = XYPLAN, 2 = YZPLAN, 3 = ZXPLAN
C              VAL     REAL VARIABLE CONTAINING THE VALUE
C                      OF THE POLAR COORDINATE RADIUS OR LENGTH
C                      OF THE VECTOR
C              THETA   REAL VARIABLE CONTAINING THE VALUE
C                      OF THE POLAR COORDINATE ANGLE IN DEGREES
C                      OR ANGLE OF THE VECTOR IN DEGREES
C
C SUBSIDIARIES TYPE                ENTRY
C              SUBROUTINE          APT081
C              SUBROUTINE          DEFEXT
C              REMAINDERING FUNCTION MOD
C
      SUBROUTINE APT010 (RESULT,MN,VAL,THETA)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
      DIMENSION RESULT(3)
C
C
C
      INCLUDE (TOTAL)
      INCLUDE (DEF)
      INCLUDE (DSHAR3)
      INCLUDE (ZNUMBR)
      INCLUDE (ISHR16)
      INCLUDE (KNUMBR)
C
      EQUIVALENCE (S1,SC(1))
C
C...     CONVERT THETA TO RADIANS
C
      S1  =THETA*DEGRAD
      R(MN) = VAL*DCOS(S1)
      M=1+MOD(MN,K3)
      R(M) = VAL*DSIN(S1)
      M=1+MOD(M,K3)
      R(M)=Z0
C
C...     CONVERT TO BASE SYSTEM IF NECESSARY
C
      CALL UNPACK(RESULT,I,J,K)
C...    CHECK FOR POINT OR VECTOR
      IF(I.EQ.20) GO TO 10
      CALL APT081(R,KM1)
      GO TO 20
   10 CALL APT078(R,KM1)
   20 CALL DEFEXT(RESULT)
       RETURN
       END
