*
      SUBROUTINE PUVLOC(BMAT,TP,TN,UST,VST,DIST,MODE,IFLAG)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C---      PURPOSE IS TO DETERMINE STARTUP U,V VALUES AND APPROXIMATE
C---      DISTANCE OF A PATCH FROM A TOOL RAY OR POINT.
C---      SPECIAL ENTRY POINT PUVINT IS TO INITIALIZE PUV PARAMETERS
C---      ENTRY PUVLOC PARAMETERS
C---      INPUT TP   INPUT TOOL POINT
C---      INPUT TN   INPUT TOOL RAY VECTOR(SHOULD BE UNITIZED)
C---      INPUT MODE  =0 MEANS FIND CLOSEST POINT ON PATCH TO TP ONLY
C---                  =1 MEANS FIND CLOSEST POINT TO POSITIVE TOOL RAY
C---                  =-1 MEANS FIND CLOSEST POINT TO TOOL SPACE LINE.
C---      INPUT ILEV  =1 MEANS USE FIRST ORDER DERIVATIVES ONLY
C---                  =2 MEANS USE SECOND ORDER DERIVATIVES AS WELL
C---      INPUT NITS  NUMBER OF ITERATIONS TO DETERMINE CLOSEST POINT
C---      INPUT IFREE =0 MEANS NOT FREE - THAT IS KEEP SOLUTION WITHIN
C---                  UNIT SUARE. =1 MEANS OBTAIN SOLUTION ANYWHERE.
C
C---      INPUT BMAT COONS MATRIX COEFFICIENTS OR ELSE TYPE OF GENCUR
C---            SURFACE
C---      INPUT IFLAG FLAGS FOR TYPE OF COORDINATE MATRIX OR LOCATION
C---            OF GENCUR DEFINING CURVES
C---      OUTPUT UST,VST COMPUTED ROUGH LOCATION OF CLOSEST PATCH POINT
C---      OUTPUT DIST COMPUTED DISTANCE BETWEEN PATCH AND POINT OR RAY.
C
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM
C
      INCLUDE (CHEKFL)
C
      DIMENSION BMAT(64),TP(3),TN(3),IFLAG(4)
      DIMENSION DIF(3),SPV(32)
      CHARACTER*20 BADMSG
C
      DATA ONE,HALF,BIG/1.0D0,0.5D0,1.0D+6/
      DATA PLO,PHI/0.005D0,0.995D0/
      DATA ILEV,NITS,IFREE/1,1,0/
      DATA IDEBUG/0/
C
C---      MAIN ENTRY POINT FOR PUVLOC
C
      DO 10 I=1,NITS
C---      EVALUATE SURFACE POINT AND DERIVATIVES AT UST,VST
      CALL CNSURF(UST,VST,BMAT,SPV,IFLAG,1)
C
C---      CALL APRIX TO COMPUTE A CLOSER LINEUP
      CALL APRIX(DU,DV,DIST,SPV,TP,TN,MODE,ILEV,IRR,IDEBUG)
C---      IF AN ERROR OCCURRED THEN USE CURRENT SURFACE POINT
      IF(IRR.NE.0) GO TO 60
C---      IF IFREE IS 0, THEN INSURE PARAMETERS ARE IN UNIT SQUARE
      UST=UST+DU
      VST=VST+DV
      IF(IFREE.EQ.1) GO TO 10
C---      SELECT UST,VST IN UNIT SQUARE CLOSEST TO ESTIMATED UST,VST
      UST=DMAX1(UST,PLO)
      UST=DMIN1(UST,PHI)
      VST=DMAX1(VST,PLO)
      VST=DMIN1(VST,PHI)
C
   10 CONTINUE
C
C---      NOW REEVALUATE SURFACE AT NEW UST,VST COORDINATES
      CALL CNSURF(UST,VST,BMAT,SPV,IFLAG,0)
C
C---      ITERATION COMPLETE, NOW COMPUTE EFFECTIVE DISTANCE
   60 CONTINUE
C---      COMPUTE DIFFERENCE BETWEEN EFFECTIVE POINT AND TP
      DO 90 J=1,3
   90 DIF(J)=SPV(J)-TP(J)
C
      IF(MODE.NE.0) GO TO 120
C---      CASE OF CLOSEST POINT, MODE=0
      CALL DOTV(DIST,DIF,DIF)
      DIST=DSQRT(DIST)
C
      CALL DOTV(D1,DIF,TN)
      CALL DOTV(D2,SPV(29),TN)
      IF ((D1.LT.ZERO).AND.(ICHEKF.EQ.1)) DIST=ABS(DIST)*BIG
      GO TO 190
C
  120 CONTINUE
C---      MODE=1 OR -1
      CALL DOTV(D1,DIF,TN)
      IF(MODE.GT.0) GO TO 140
C---      MODE=-1
C---      DISTANCE IS NORMAL DISTANCE FROM CALCULATED POINT TO TOOL RAY
      CALL CROSS(DIF,TN,DIF)
      CALL DOTV(DIST,DIF,DIF)
      DIST=DSQRT(DIST)
      IF ((D1.LT.ZERO).AND.(ICHEKF.EQ.1)) DIST=ABS(DIST)*BIG
      GO TO 190
C
  140 CONTINUE
C---      MODE=1
      IF(D1.LT.ZERO) DIST=ABS(DIST)*BIG
C
  190 CONTINUE
C---      INCREASE DIST TO ADD A BIAS IN CASE AN ERROR OCCURRED EARLIER
      IF(IRR.GT.0) DIST=DIST*BIG
C---      CALCULATION OF UST,VST,DIST IS COMPLETE
C
  999 CONTINUE
C
      IF(IBUG.NE.2) GO TO 998
      CALL BAD(-1,0,' ',0)
      BADMSG=' AFTER PUVLOC'
      CALL CPRINT(BADMSG)
      CALL BAD(1,1,'UST ',UST)
      CALL BAD(1,1,'VST ',VST)
      CALL BAD(-1,1,'DIST',DIST)
C
  998 CONTINUE
      RETURN
      END
