**** SOURCE FILE : M0001030.V01   ***
*
      SUBROUTINE ADER(DIF,TA,TB,A,B,U,MODE,AREA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C---      PURPOSE IS TO COMPUTE TENSION AND FIRST AND SECOND
C---      PARTIAL DERIVATIVES OF TENSION WITH RESPECT TO A AND B
C---      INPUT CONSISTS OF THE FOLLOWING
C---      CHORD VECTOR DIF OF PARAMETRIC CUBIC
C---      FIRST TANGENT A*TA AND LAST TANGENT VECTOR B*TB
C---      U=PARAMETRIC VALUE AT WHICH TO EVALUATE TENSION
C---      MODE=1 ON FIRST ENTRY -- SETUP SOME INVARIANT VALUES
C---      MODE=0 ON SUBSEQUENT ENTRIES.
C---      OUTPUT IS PLACED IN AREA (1 - 6) AS FOLLOWS.
C---      AREA(1) = K*K*DS WHERE K=CURVATURE AND DS=RATE OF CHANGE
C---      OF ARC LENGTH WITH RESPECT TO COONS PARAMETER U.
C---      AREA(2)= PARTIAL WRT A OF AREA(1)
C---      AREA(3)= PARTIAL WRT B OF AREA(1)
C---      AREA(4)= PARTIAL WRT TO A TWICE OF AREA(1)
C---      AREA(5)= PARTIAL WRT TO A AND B OF AREA(1)
C---      AREA(6)= PARTIAL WRT TO B TWICE OF AREA(1)
C
      DIMENSION AREA(6),DIF(3),TA(3),TB(3)
      DIMENSION TAB(3),TAD(3),TBD(3),CA(3),CB(3)
      DIMENSION CV(16),CURV(16)
C
      DATA ZERO,ONE,BIG,SMAL/0.0D0,1.0D0,1.0D+8,1.0D-8/
C
      IF(MODE.EQ.0) GO TO 100
C---IF MODE IS 1 THIS IS FIRST PASS THRU ADER
C---COMPUTE INVARIANT DATA FOR THIS AND SUBSEQUENT CALLS
C---SET UP COONS CANNON FORM OF CURV
      DO 10 I=1,3
      I1=4*(I-1)+1
      CURV(I1)=ZERO
      CURV(I1+1)=DIF(I)
      CURV(I1+2)=A*TA(I)
      CURV(I1+3)=B*TB(I)
   10 CONTINUE
      DO 20 I=1,2
      CURV(12+I)=ONE
   20 CURV(14+I)=ZERO
      CALL CROSS(TA,TB,TAB)
      CALL CROSS(TA,DIF,TAD)
      CALL CROSS(TB,DIF,TBD)
C
  100 CONTINUE
C---COMPUTE COEFFICIENTS OF DR X DDR WHERE DR X DDR=
C---  XG*A*B*TAB + XH * A * TAD + XK * B * TBD
      XG=-2.+6.*U-6.*U**2
      XH=6.*(ONE-U)**2
      XK=-6.*U**2
C---COMPUTE CURVE COEFFICIENTS
      CALL CNCURV(U,CURV,CV,2)
C
      CALL CROSS(CV(5),CV(9),CV(13))
C---COMPUTE DERIVATIVE FRAGMENTS OF DR X DDR
      DO 120 I=1,3
      CA(I)=B*TB(I)*XG+DIF(I)*XH
      CB(I)=-A*TA(I)*XG+DIF(I)*XK
  120 CONTINUE
      CALL CROSS(TA,CA,CA)
      CALL CROSS(TB,CB,CB)
C---COMPUTE ALL PARTIAL DERIVATIVES OF (DR X DDR )**2 WRT A NND B
      X=VDOTF(CV(13),CV(13))
      XA=2.*VDOTF(CV(13),CA)
      XB=2.*VDOTF(CV(13),CB)
      XAA=2.*VDOTF(CA,CA)
      XAB=2.*(VDOTF(CA,CB)+VDOTF(CV(13),TAB)*XG)
      XBB=2.*VDOTF(CB,CB)
C
C---NEXT COMPUTE ALL PARTIAL DERIVATIVES OF (DR**2)**(-5/2)
      DRSQ=VDOTF(CV(5),CV(5))
      DRSQ=DMIN1(BIG,DRSQ)
      DRSQ=DMAX1(SMAL,DRSQ)
      RECIP=1./DSQRT(DRSQ)
      Y=RECIP**5
      FAC=5.*RECIP**7
      QA=1.-4.*U+3.*U**2
      QB=-2.*U+3.*U**2
      DO 130 I=1,3
      CA(I)=TA(I)*QA
      CB(I)=TB(I)*QB
  130 CONTINUE
C---COMPUTE INPUT DOT PRODUCTS
      CALL DOTF(RPRA,CV(5),CA)
      CALL DOTF(RPRB,CV(5),CB)
      CALL DOTF(RARB,CA,CB)
      CALL DOTF(RASQ,CA,CA)
      CALL DOTF(RBSQ,CB,CB)
      YA=-FAC*RPRA
      YB=-FAC*RPRB
C---COMPUTE SECOND ORDER PARTIALS OF Y WRT A AND B
      YAA=FAC*(7.*RPRA**2/DRSQ-RASQ)
      YBB=FAC*(7.*RPRB**2/DRSQ-RBSQ)
      YAB=FAC*(7.*RPRA*RPRB/DRSQ-RARB)
C
C---COMPUTE PARTIALS OF X*Y WRT TO A AND B AND RETURN
      AREA(1)=X*Y
      AREA(2)=XA*Y+X*YA
      AREA(3)=XB*Y+X*YB
      AREA(4)=XAA*Y+2.*XA*YA+2.*X*YAA
      AREA(6)=XBB*Y+2.*XB*YB+2.*X*YBB
      AREA(5)=XAB*Y+XA*YB+XB*YA+X*YAB
C
      RETURN
      END
