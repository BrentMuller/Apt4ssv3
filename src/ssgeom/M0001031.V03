*
      SUBROUTINE ANGSEG(C,FL,TOLR,NUM,NUMAX,IRR,P,AN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C---     PURPOSE IS TO REPARAMETERIZE A COONS RATIONAL CUBIC ARC
C---     C BASED ON PROPORTION OF ANGLE FROM A CENTRAL POINT P.
C---     THE ANGLE WILL BE MEASURED IN A PLANE THRU P WITH NORMAL
C---     VECTOR AN IF AN IS NON-ZERO.
C---     INPUT C=COONS RATIONAL PARAMETRIC COEFFICIENTS
C---     INPUT TOLR=TOLERANCE FACTOR FOR FLOW RATE FIT(DEFAULT=.001)
C---     INPUT P=CENTRAL POINT FOR CALCULATION OF ANGULAR FLOW
C---     INPUT AN=OPTIONAL NORMAL VECTOR FOR MEASUREMENT OF ANGLE
C---           IN A SPECIFIED PLANE. AN=(0,0,0) FOR NO PLANE.
C---     OUTPUT FL=STRING OF CUBICS REPRESENTING NEW FLOW RATE
C---            THESE CUBICS EXPRESS COONS PARAMETER AS A FUNCTION OF AN
C---     OUTPUT NUM=NUMBER OF CUBICS+1 WHICH DETERMINE FLOW RATE.
C---     OUTPUT IRR=0 FOR NO ERROR, NON-ZERO FOR ERROR
C---     INPUT NUMAX=MAXIMUM NUMBER OF CUBICS PERMITTED IN FL ARRAY.
C
      DIMENSION C(16),FL(4,1),P(3),AN(3)
      DIMENSION CV(16),DER(3)
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC
      DATA ZERO,ONE,SMAL,VSMAL,HALF/0.0D0,1.0D0,1.0D-6,1.0D-30,0.5D0/
      NOW=1
      ANGLEN=ZERO
      UNOW=ZERO
      CALL CNCURV(UNOW,C,CV,1)
C---     COMPUTE RATES OF CHANGE OF ANGLE WRT COONS AND INVERT.
      CALL ANGDER(CV,P,AN,DER,0,IRR)
      IF(IRR.NE.0) GO TO 999
      FL(1,NOW)=DER(1)+VSMAL
      FL(2,NOW)=UNOW
      FL(3,NOW)=ONE/DER(2)
      FL(4,NOW)=-DER(3)/DER(2)**3
C
      CNOW=FL(1,NOW)
      UNX=.76
   40 CONTINUE
      ICHK=1
   50 CONTINUE
      CALL CNCURV(UNX,C,CV,1)
      NX=NOW+1
C---     COMPUTE RATES OF CHANGE OF ANGLE WRT COONS AND INVERT.
      CALL ANGDER(CV,P,AN,DER,1,IRR)
      IF(IRR.NE.0) GO TO 999
      FL(1,NX)=DER(1)+VSMAL
      FL(2,NX)=UNX
      FL(3,NX)=ONE/DER(2)
      FL(4,NX)=-DER(3)/DER(2)**3
C
C---     FIRST CHECK ACCURACY OF SPLINE REPRESENTATION
      DEL1=FL(1,NX)-CNOW
      DEL2=3.*(FL(2,NX)-FL(2,NOW))*(FL(4,NX)+FL(4,NOW))
      DV=FL(4,NX)*(2.*FL(3,NOW)+FL(3,NX))+FL(4,NOW)*(FL(3,NOW)+2.*
     X   FL(3,NX))
      IF(DABS(DV).LT.VSMAL) GO TO 59
      DEL2=DEL2/DV
C---     IF SECOND DERIVATIVES VANISH, ANOTHER FORMULA IS NEEDED
      GO TO 60
   59 CONTINUE
      DEL2=ZERO
      IF(DABS(FL(3,NOW)).GT.VSMAL*SMAL) DEL2=ONE/FL(3,NOW)
      IF(DABS(FL(3,NX)).GT.VSMAL*SMAL) DEL2=DEL2+ONE/FL(3,NX)
      IRR=10
      IF(DEL2.EQ.ZERO) GO TO 999
   60 CONTINUE
C
C---     COMPARE ACCURACY OF ACTUAL AND ESTIMATED CHORD LENGTH.
      DIF=(DEL2-DEL1)/DEL1
      IF(IBUG.NE.11) GO TO 22
      CALL BAD(-4,1,'FLNW',FL(1,NOW))
      CALL BAD(-4,1,'FLNX',FL(1,NX))
      CALL BAD(1,1,'DEL1',DEL1)
      CALL BAD(1,1,'DEL2',DEL2)
      CALL BAD(-1,1,'DIF ',DIF)
   22 CONTINUE
      IF(DABS(DIF).GT.TOLR) GO TO 100
C---     ACCURACY IS ACCEPTABLE, IS SPLINE ALSO INCREASING THO.
      IF(FL(2,NX).LE.FL(2,NOW)) GO TO 100
      IF(FL(3,NOW).LT.ZERO) GO TO 100
      IF(FL(3,NX).LT.ZERO) GO TO 100
C---     NOW CHECK FOR A MAX OR MIN WITHIN THE INTERVAL
      A=FL(3,NOW)*DEL1
      B=FL(3,NX)*DEL1
      AA=3.*(B+A-2.*(FL(2,NX)-FL(2,NOW)))+VSMAL
      BB=2.*(3.*(FL(2,NX)-FL(2,NOW))-2.*A-B)
      CC=A
      DISC=BB*BB-4.*AA*CC
      IF(IBUG.NE.11) GO TO 33
      CALL BAD(-1,0,' ',0)
      CALL BAD(1,1,'AA  ',AA)
      CALL BAD(1,1,'BB  ',BB)
      CALL BAD(1,1,'CC  ',CC)
      CALL BAD(-1,1,'DISC',DISC)
   33 CONTINUE
      IF(DISC.LT.ZERO) GO TO 90
      DISC=DSQRT(DISC)
      R=(-BB-DISC)/(2.*AA)
      IF(DABS(R-HALF).LT.HALF) GO TO 100
      R=(-BB+DISC)/(2.*AA)
      IF(DABS(R-HALF).LT.HALF) GO TO 100
   90 CONTINUE
C---     FUNCTION MEETS ALL CRITERIA, SO GO AFTER THE NXT ARC
      NOW=NOW+1
      CNOW=FL(1,NOW)
      FL(1,NOW)=DEL2+ANGLEN
      ANGLEN=ANGLEN+DEL2
      UDEL=UNX-UNOW
      UNOW=UNX
      UNX=UNOW+4.0*UDEL
      UNX=DMIN1(ONE,UNX)
      IF(UNOW.GT.ONE-SMAL) GO TO 500
      IRR=8
      IF(NOW.GT.NUMAX-2) GO TO 999
      GO TO 40
C---     DECREASE UNX AND TRY AGAIN
  100 CONTINUE
C---      RECOVER SECOND DERIVATIVE FOR FIRST POINT
      IF(UNOW.GT.SMAL) GO TO 110
      HDEL=(FL(1,NX)-FL(1,NOW))/2.0
      HDEL2=(HDEL*HDEL)/2.0
      FL(4,NOW)=(FL(2,NX)-FL(2,NOW)-HDEL*(FL(3,NOW)+FL(3,NX))
     X           +HDEL2*FL(4,NX))/HDEL2
  110 CONTINUE
      UNX=(UNOW+UNX)*HALF
      ICHK=ICHK+1
      IRR=9
      IF(ICHK.GT.10) GO TO 999
      GO TO 50
C
  500 CONTINUE
      IRR=0
      FL(2,NOW)=ONE
C---     TRANSLATE FLOW RATES TO ORIGIN
      NUM=NOW
      DIF=FL(1,1)
      DO 510 I=1,NUM
      FL(1,I)=FL(1,I)-DIF
  510 CONTINUE
  999 CONTINUE
      NUM=NOW
      RETURN
      END
