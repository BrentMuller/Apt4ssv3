**** SOURCE FILE : M0001061.V07   ***
*
      SUBROUTINE CURFLO(UIN,SC,CV,MODE,NNSEG)
C---     PURPOSE IS TO COMPUTE CURVE POINT AND DERIVATIVES FROM AN
C---     INPUT PARAMETRIC VALUE U.  SC IS THE COMPLETE INPUT CURVE
C---     CANONICAL FORM AND MODE IS ZERO FOR POINT EXTRACTION,
C---     AND NON ZERO IF FIRST AND SECONDERIVATIVES ARE ALSO
C---     DESIRED.   CV IS THE OUTPUT ARRAY. CV(1-3) CONTAINS
C---     THE CURVE POINT, CV(5-7) CONTAINS THE FIRST DERIVATIVE,
C---     CV(9-11) THE SECOND DERIVATIVE AND CV(13-15) CONTAINS
C---     THE UNITIZED TANGENT VECTOR
C---     IF MODE=2 ON INPUT THEN CV(17-19) CONTAINS THE CRSSPL VECOTR,
C---     CV(21-23) THE TWIST ETC. ANALAGOUS TO THE CURVE POINT
C---     AND TANGENT VECTOR ETC.
C---     IF THESE QUANTITIES DO NOT EXIST, THE UPPER PART IS ZEROED.
C---     INPUT  INSEG IS NORMALLY 0.  HOWEVER, IF INSEG
C---     IS POSITIVE THEN INSEG IS INTERPRETED AS A SPECIFIC
C---     SEGMENT NUMBER AND UIN IS A PARAMETER
C---     RELATIVE TO THIS SEGMENT ONLY.  IF UIN IS OUTSIDE THE
C---     0,1 RANGE THE A POINT ON THE LINEAR EXTENSION OF THIS
C---     SEGMENT WILL BE GENERATED.  IF INSEG IS NEGATIVE, THEN
C---     THE ABSOLUTE VALUE REFERS TO A SEGMENT COUNTING BACKWARD FROM
C---     THE LAST SEGMENT OF THE CURVE.
C---     IN EITHER CASE, INSEG MUST REFER TO A LEGITIMATE SEGMENT.
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INCLUDE 'DARRAY.INC'
      DIMENSION SC(*),CV(*)
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC
      DIMENSION TEMP(4,4)
      DATA ZERO,ONE,SMAL/0.0D0,1.0D0,1.0D-7/
C
      INSEG=NNSEG
      MERR=0
C
C
      NMAX=SC(8)
C---     IF NMAX IS ZERO THERE IS NO FLOW STRUCTURE
C---     THEN TREAT INDIVIDUAL ARCS AS CURVE SEGMENTS USING
C---     THE NATURAL COON PARAMETER AS FLOW.
      IF(NMAX.EQ.0) GO TO 300
      IF(INSEG.EQ.0) GO TO 5
C
      MERR=1
      IF(IABS(INSEG).GT.NMAX) GO TO 998
      ISEG=IABS(INSEG)
      IF(INSEG.LT.0) ISEG=NMAX-ISEG+1
      U=UIN
      IF(INSEG.LT.0) U=ONE-U
      FRAC=U
      LOCSEG=SC(9)+(ISEG-1)*4
      IF(SC(LOCSEG+3).LT.SMAL) GO TO 200
      IF(U.GE.ZERO.AND.U.LE.ONE) GO TO 30
      LOCARC=SC(7)
      IARC=LOCARC+SC(LOCSEG)*4.
      IF(U.GT.ONE) IARC=IARC+(SC(LOCSEG+1)-ONE)*4.
      ISPL=SC(IARC)
      IF(U.GT.ONE) ISPL=ISPL+(SC(IARC+1)-ONE-ONE)*4.
      IARC=(IARC-LOCARC)/4+1
      GO TO 80
C
    5 CONTINUE
      U=UIN
      IF(U.LT.ZERO) GO TO 10
      IF(U.GT.SC(8)) GO TO 20
C---      OBTAIN SEGMENT NUMBER AND FRACTIONAL AMOUNT
      ISEG=U
      FRAC=U-ISEG
      NMAX=SC(8)
      ISEG=ISEG+1
      IF(ISEG.GT.NMAX) FRAC=ONE
      IF(ISEG.GT.NMAX) ISEG=ISEG-1
      GO TO 30
C
   10 CONTINUE
      ISEG=1
      FRAC=U
      ISPL=SC(11)
      IARC=1
C
      LOCSEG=SC(9)+(ISEG-1)*4
C---     BRANCH FOR CASE OF A DEGENERATE SEGMENT
      IF(SC(LOCSEG+3).LT.SMAL) GO TO 200
      GO TO 80
C
   20 CONTINUE
      ISEG=SC(8)
      FRAC=U-SC(8)+ONE
      ISPL=SC(11)+SC(10)*4.-8.
      IARC=SC(4)
C
      LOCSEG=SC(9)+(ISEG-1)*4
C---     BRANCH FOR CASE OF A DEGENERATE SEGMENT
      IF(SC(LOCSEG+3).LT.SMAL) GO TO 200
      GO TO 80
C
   30 CONTINUE
C
      LOCSEG=SC(9)+(ISEG-1)*4
C---     BRANCH FOR CASE OF A DEGENERATE SEGMENT
      IF(SC(LOCSEG+3).LT.SMAL) GO TO 200
C---     COMPUTE STARTING AND ENDING ARCS FOR THIS SEGMENT(ISEG)
      LOCARC=SC(7)
      IARC1=LOCARC+SC(LOCSEG)*4.
      IARC2=IARC1+(SC(LOCSEG+1)-ONE)*4.
C---     FIND  AN ARC WHICH INCLUDES THE FRACTIONAL VALUE
      DO 50 IARC=IARC1,IARC2,4
      IFLOW1=SC(IARC)
      IFLOW2=(SC(IARC+1)-ONE)*4.+SC(IARC)
      IF(FRAC.GE.SC(IFLOW1).AND.FRAC.LT.SC(IFLOW2)+SMAL) GO TO 60
   50 CONTINUE
      MERR=2
      GO TO 998
C---
   60 CONTINUE
C---     CONVERT ARC REFERENCE TO AN ABSOLUTE
      IARC=(IARC-LOCARC)/4+1
C---     LOCATE FRAC WITHIN THE RANGE OF ONE FLOW FUNCTION
      DO 70 ISPL=IFLOW1,IFLOW2,4
      IF(FRAC.GE.SC(ISPL).AND.FRAC.LT.SC(ISPL+4)+SMAL) GO TO 80
   70 CONTINUE
      MERR=3
      GO TO 998
C
   80 CONTINUE
      IF(IBUG.NE.11) GO TO 83
      CALL BAD(1,1,'U   ',U)
      CALL BAD(1,1,'FRAC',FRAC)
      CALL BAD(1,0,'SEG ',ISEG)
      CALL BAD(1,0,'IARC',IARC)
      CALL BAD(1,0,'ISPL',ISPL)
      CALL BAD(-1,0,'LOCS',LOCSEG)
   83 CONTINUE
C
      IF(FRAC.LT.ZERO) GO TO 85
      IF(FRAC.GT.ONE) GO TO 87
C---      CASE WHERE FRAC IS BETWEEN ZERO AND ONE
C
      PU=FRAC-SC(ISPL)
      SPAN=SC(ISPL+4)-SC(ISPL)
      IF(SPAN.EQ.ZERO) GO TO 81
      PU=PU/SPAN
      UA=SC(ISPL+1)
      UB=SC(ISPL+5)
      UMA=SC(ISPL+2)*SPAN
      UMB=SC(ISPL+6)*SPAN
      GO TO 89
C
   85 CONTINUE
C---      CASE WHERE FRAC IS LT ZERO
      PU=FRAC-SC(ISPL)
      SPAN=SC(ISPL+4)-SC(ISPL)
      IF(SPAN.EQ.ZERO) GO TO 81
      PU=PU/SPAN
      UA=SC(ISPL+1)
      UMA=SC(ISPL+2)*SPAN
      UB=UMA
      UMB=UMA
      GO TO 89
C
   87 CONTINUE
      PU=FRAC-SC(ISPL)
      SPAN=SC(ISPL)-SC(ISPL-4)
      IF(SPAN.EQ.ZERO) GO TO 81
      PU=PU/SPAN
      UB=ONE
      UMB=SC(ISPL+2)*SPAN
      UA=UB-UMB
      UMA=UMB
      GO TO 89
C
   81 CONTINUE
      U=UA
      UP=ZERO
      UPP=ZERO
      UPSQ=ZERO
      GO TO 92
C
   89 CONTINUE
      IF(IBUG.NE.11) GO TO 88
      CALL BAD(1,1,'PU  ',PU)
      CALL BAD(1,1,'SPAN',SPAN)
      CALL BAD(1,1,'UA  ',UA)
      CALL BAD(1,1,'UB  ',UB)
      CALL BAD(1,1,'UMA ',UMA)
      CALL BAD(-1,1,'UMB ',UMB)
   88 CONTINUE
C---     COMPUTE EXACT CORRESPONDING VALUE U OF COONS PARAMETER
      W1=3.0*(UB-UA)-UMA-UMA-UMB
      W2=2.0*(UA-UB)+UMA+UMB
      U=UA+PU*(UMA+PU*(W1+PU*W2))
      UP=UMA+PU*(W1+W1+PU*3.*W2)
      UPP=W1+W1+6.*PU*W2
      UP=UP/SPAN
      UPP=UPP/(SPAN*SPAN)
      UPSQ=UP*UP
   92 CONTINUE
      NN=SC(5)+(IARC-1)*24
      IF(IBUG.NE.11) GO TO 91
      CALL BAD(1,1,'U   ',U)
      CALL BAD(1,1,'UP  ',UP)
      CALL BAD(-1,1,'UPP ',UPP)
   91 CONTINUE
      CALL CNCURV(U,SC(NN),CV,MODE)
C     DO 556 I=1,13,4
C     CALL BAD(-4,1,'CNCV',CV(I))
C 556 CONTINUE
      IF(MODE.EQ.0) GO TO 999
C---     CHANGE DERIVATIVES TO COMPENSATE FOR FLOW RATE.
      DO 90 I=1,3
      CV(I+8)=CV(I+4)*UPP+CV(I+8)*UPSQ
      CV(I+4)=CV(I+4)*UP
   90 CONTINUE
C---     WORK COMPLETED IF MODE.LT.2
      IF(MODE.LT.2) GO TO 999
C---     CHECK IF A CRSSPL IS AVAILABLE AT EACH END OF THE ARC
      IF(DABS(SC(NN-5)-ONE)+DABS(SC(NN+19)-ONE).LT.SMAL) GO TO 100
      IF(DABS(SC(NN-5)-ONE).LT.SMAL.AND.DABS(U).LT.SMAL) GO TO 130
      IF(DABS(SC(NN+19)-ONE).LT.SMAL.AND.DABS(ONE-U).LT.SMAL) GO TO 140
C
C---     NO CROSS SPLINES ARE THERE, SO ZERO OUT CV(17-32)
      DO 101 I=17,32
  101 CV(I)=ZERO
      GO TO 999
C
C---     NOW INTERPOLATE A CROSS SPLINE VECTOR AND DERIVATIVES
  100 CONTINUE
      W1=DABS(SC(NN-1)-3.)
      W2=DABS(SC(NN+23)-3.)
C---    SET UP CANON FORM FOR CRSSPL VECTOR AS A CUBIC ARC
      DO 110 I=1,3
      TEMP(1,I)=SC(NN-9+I)
      TEMP(2,I)=SC(NN+15+I)
      TEMP(3,I)=ZERO
      IF(W1.LT.SMAL) TEMP(3,I)=SC(NN-5+I)
      TEMP(4,I)=ZERO
      IF(W2.LT.SMAL) TEMP(4,I)=SC(NN+19+I)
  110 CONTINUE
C
      TEMP(1,4)=ONE
      TEMP(2,4)=ONE
      TEMP(3,4)=ZERO
      TEMP(4,4)=ZERO
C
      CALL CRBLEN(U,TEMP,CV(17),1)
C     DO 557 I=17,32,4
C     CALL BAD(-4,1,'CRBN',CV(I))
C 557 CONTINUE
      DO 120 I=1,3
      CV(I+24)=CV(I+20)*UPP+CV(I+24)*UPSQ
      CV(I+20)=CV(I+20)*UP
  120 CONTINUE
C---     FINALLY COMPUTE THE NORMAL (TAN CROSSED WITH CRS)
  121 CONTINUE
      CALL CROSS(CV(5),CV(17),TEMP(1,1))
      W=TEMP(1,1)**2+TEMP(2,1)**2+TEMP(3,1)**2
      W=DSQRT(W)
      IF(W.LT.SMAL) W=ONE
      CV(29)=TEMP(1,1)/W
      CV(30)=TEMP(2,1)/W
      CV(31)=TEMP(3,1)/W
      CV(32)=ONE
      GO TO 999
C---     SIMPLE EXTRACTION OF AVAILABLE VECTORS FROM JUNCTION
  130 CONTINUE
      DO 131 L=1,3
      CV(L+16)=SC(NN-9+L)
      IF(DABS(SC(NN-1)-3.).LT.SMAL) CV(L+20)=SC(NN-5+L)
      CV(L+24)=ZERO
  131 CONTINUE
      CV(20)=ONE
      CV(28)=ZERO
      GO TO 121
C
  140 CONTINUE
      DO 141 L=1,3
      CV(L+16)=SC(NN+15+L)
      IF(DABS(SC(NN+23)-3.).LT.SMAL) CV(L+20)=SC(NN+19+L)
      CV(L+24)=ZERO
  141 CONTINUE
      CV(20)=ONE
      CV(28)=ZERO
      IF(DABS(SC(NN+23)-3.).LT.SMAL) CV(24)=ONE
      GO TO 121
C
C
  999 CONTINUE
      IF(IBUG.NE.11) GO TO 997
      CALL BAD(-4,1,'CV1 ',CV(1))
      CALL BAD(-4,1,'CV5 ',CV(5))
      CALL BAD(-4,1,'CV9 ',CV(9))
      CALL BAD(-4,1,'CV17',CV(17))
      CALL BAD(-4,1,'CV21',CV(21))
  997 CONTINUE
      RETURN
C
  998 CONTINUE
      CALL CFORM(' WARNING ERROR IN CURFLO',DARRAY,1,24)
      CALL CPRINT(DARRAY)
      CALL BAD(1,1,'UIN ',UIN)
      CALL BAD(1,0,'MERR',MERR)
      CALL BAD(1,0,'INSG',INSEG)
      CALL BAD(1,1,'U   ',U)
      CALL BAD(1,1,'FRAC',FRAC)
      CALL BAD(1,0,'SEG ',ISEG)
      CALL BAD(1,0,'IARC',IARC)
      CALL BAD(1,0,'ISPL',ISPL)
      CALL BAD(-1,0,'LOCS',LOCSEG)
      CALL SCDUMP(333,SC)
      GO TO 999
C
  200 CONTINUE
C---     SPECIAL ENTRY FOR A DEGENERATE SEGMENT
      LOCARC=SC(7)
      IARC=SC(LOCSEG)
      IF(IARC.EQ.0) GO TO 210
C
      IARC=IARC-1
      PU=ONE
      GO TO 220
C
  210 CONTINUE
      IARC=1
      PU=ZERO
C
  220 CONTINUE
      NN=SC(5)+(IARC-1)*24
      CALL CNCURV(PU,SC(NN),CV,MODE)
C---      ZERO OUT FIRST AND SECOND DERIVATIVES
      DO 230 J=1,2
      DO 230 I=1,3
      CV(I+J*4)=ZERO
  230 CONTINUE
      GO TO 999
C
C---      UIN AND INSEG REFER TO ARC STRUCTURE AND COONS NATURAL
C---      FLOW PARAMETER DIRECTLY
  300 CONTINUE
      U=UIN
      NMAX=SC(4)
      IF(INSEG) 310,320,330
C
  310 CONTINUE
C---     CONVERT INSEG AND UIN TO CASE OF POSITIVE INSEG
      INSEG=NMAX-IABS(INSEG)+1
      UIN=ONE-UIN
      GO TO 330
C
  320 CONTINUE
      IARC=UIN+ONE
      IARC=MIN0(NMAX,IARC)
      IARC=MAX0(1,IARC)
      ULO=IARC-1
      U=UIN-ULO
      GO TO 340
C
  330 CONTINUE
C****    SEGMENT REFERENCE IS OUT OF VALID RANGE
      MERR=4
      IF(INSEG.LT.1.OR.INSEG.GT.NMAX) GO TO 998
C
      IARC=INSEG
      U=UIN
C
  340 CONTINUE
C---     COMPUTE ARC LOCATION IN SC ARRAY
      NN=(SC(2)-ONE+IARC)*24+1
      CALL CNCURV(U,SC(NN),CV,MODE)
      IF(MODE.LT.2) GO TO 999
C
      IF(DABS(SC(NN-5)-ONE)+DABS(SC(NN+19)-ONE).LT.SMAL) GO TO 345
      IF(DABS(SC(NN-5)-ONE).LT.SMAL.AND.DABS(U).LT.SMAL) GO TO 130
      IF(DABS(SC(NN+19)-ONE).LT.SMAL.AND.DABS(ONE-U).LT.SMAL) GO TO 140
C
  345 CONTINUE
C
      W1=DABS(SC(NN-1)-3.)
      W2=DABS(SC(NN+23)-3.)
C---    SET UP CANON FORM FOR CRSSPL VECTOR AS A CUBIC ARC
      DO 350 I=1,3
      TEMP(1,I)=SC(NN-9+I)
      TEMP(2,I)=SC(NN+15+I)
      TEMP(3,I)=ZERO
      IF(W1.LT.SMAL) TEMP(3,I)=SC(NN-5+I)
      TEMP(4,I)=ZERO
      IF(W2.LT.SMAL) TEMP(4,I)=SC(NN+19+I)
  350 CONTINUE
C
      TEMP(4,1)=ONE
      TEMP(4,2)=ONE
      TEMP(4,3)=ZERO
      TEMP(4,4)=ZERO
C
      CALL CRBLEN(U,TEMP,CV(17),1)
C---     FINALLY COMPUTE THE NORMAL (TAN CROSSED WITH CRS)
      CALL CROSS(CV(5),CV(17),TEMP(1,1))
      CALL VNORM(TEMP(1,1),CV(29))
      CV(32)=ONE
      GO TO 999
C
      END
