**** SOURCE FILE : M0006643.V06   ***
*
C
C              FORTRAN SUBROUTINE ISSCOD
C
C LINKAGE      SUBROUTINE ISSCOD
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    ALARM           SUBROUTINE    INPUT
C          SUBROUTINE    CONCAT
C          SUBROUTINE    BINBCD
C          INTEGER FCT.  GETTMP
C          INTEGER FCT.  NUMB
C          SUBROUTINE    ONEARG
C          SUBROUTINE    OPCODE
C          SUBROUTINE    RLSLIN
C          SUBROUTINE    ARGCVT
C
      SUBROUTINE ISSCOD
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE 'NAMETB.INC'
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(300),STACK(2,99)
C TOP:         POINTER TO LAST STACK ENTRY
      EQUIVALENCE (TOP,STKLST(1))
C STACK:       WORKING STACK
      EQUIVALENCE (STACK(1,1),STKLST(4))
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),COMMA(2),TEMP(2)
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF ',     '
      EQUIVALENCE (COMMA(1),CODE(1))
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '
      EQUIVALENCE (TEMP(1),CODE(33))
C
C        4.    PRODUCTION TABLE
C
      COMMON/SRCTBL/SRCTBL
      DIMENSION SRCTBL(502),META(50)
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES
      EQUIVALENCE (META(1),SRCTBL(3))
C
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE
      COMMON/TMP/TXXXX
      DIMENSION TXXXX(2,32)
C
C        7.    STRING STORAGE AREA
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT
      COMMON/INPTR/CNT
C
C       16.    LITERALS FOR I. L. OPERATION CODES
C
      COMMON/IL/IL
      DIMENSION IL(21)
C CVTSUB:      CONTAINS COMMAND CODE (13) FOR CVTSUB COMMAND
      EQUIVALENCE (CVTSUB,IL(13))
C
C       17.    MODE CODES
C
      COMMON/MODX/MODX
      DIMENSION MODX(32)
C SUBSCR:      MODE CODE (24) FOR SUBSCRIPT
      EQUIVALENCE (SUBSCR,MODX(24))
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C MODHLF:      NORMAL MODE CODE LIMIT 500
      EQUIVALENCE (MODHLF,MODULI(2))
C
C       37.    INCLUSIVE SUBSCRIPT VARIABLES
C
      COMMON/ISSCOM/ISSCOM
      LOGICAL ISSFL,ISSEND
      DIMENSION ISSCOM(9),ISSTRM(2)
C ISSA:        LOWEST SUBSCRIPT OF AN INCLUSIVE SUBSCRIPT STRING
      EQUIVALENCE (ISSA,ISSCOM(1))
C ISSB:        HIGHEST SUBSCRIPT OF AN INCLUSIVE SUBSCRIPT STRING
      EQUIVALENCE (ISSB,ISSCOM(2))
C ISSC:        INCREMENT OR DECREMENT FOR INCLUSIVE SUBSCRIPT STRING
      EQUIVALENCE (ISSC,ISSCOM(3))
C ISSVBL:      NAMTBL POINTER TO THE INCLUSIVE SUBSCRIPTED VARIABLE
      EQUIVALENCE (ISSVBL,ISSCOM(4))
C ISSMOD:      MODE OF THE INCLUSIVE SUBSCRIPTED VARIABLE
      EQUIVALENCE (ISSMOD,ISSCOM(5))
C ISSFL:       TRUE DURING INCLUSIVE SUBSCRIPT PROCESSING
      EQUIVALENCE (ISSFL,ISSCOM(6))
C ISSEND:      END OF INCLUSIVE SUBSCRIPT PROCESSING
      EQUIVALENCE (ISSEND,ISSCOM(7))
C ISSTRM:      SAVES THE STACK TOP ITEMS DURING SUBSCRIPT PROCESSING
      EQUIVALENCE (ISSTRM(1),ISSCOM(8))
C
C       44.    ERROR POSITION TABLE
C
      COMMON/ERRPOS/ERRPOS
      INTEGER ERRPOS,ERRPNT,ESTACK
      DIMENSION ERRPOS(302),ERRPNT(100),ESTACK(100)
C ERRPNT:      CONTAINS POINTERS TO INPUT STATEMENT TEXT POSITIONS
      EQUIVALENCE (ERRPNT(1),ERRPOS(3))
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK
      EQUIVALENCE (ESTACK(1),ERRPOS(103))
C**
      CHARACTER IBUFF*15,IHBLK*4
      external alarm
      DATA IHBLK/'    '/
C
C...     CHECK FOR SPACE IN STACK
C
      IERROR=0
      IF(TOP+2.LE.97)GO TO 10
      IERROR=1028
C
C...     ENTER NEW SUBSCRIPT IN NAMTBL
C
   10 IBUFF(12:15)=IHBLK
      CALL BINBCD(ISSA,IBUFF(4:),I)
      WRITE(IBUFF(1:3),'(I3)') I
      CALL CONCAT(IBUFF,'.')
      INUMB=NUMB(IBUFF(4:15))+NAMMAX
C
C...     GENERATE SUBSCRIPT I.L. AND PLACE TEMPORARY IN STACK
C
      IRSLT=GETTMP(SUBSCR)
      NAMTBL(IRSLT)=TEMP(1)+SUBSCR
      CALL OPCODE(CVTSUB)
      CALL ARGCVT(IRSLT)
      CALL ARGCVT(ISSVBL)
      CALL ARGCVT(INUMB)
      CALL ONEARG(TXXXX(1,ISSMOD))
      CALL RLSLIN
      NAMTBL(IRSLT)=TEMP(1)+ISSMOD+MODHLF
      STACK(1,TOP+1)=IRSLT
      I=TEMP(1)/MODULO
      STACK(2,TOP+1)=META(I)
      TOP=TOP+2
      ESTACK(TOP)=ERRPNT(CNT-2)
C
C...     UPDATE ISSA AND CHECK FOR END OF SUBSCRIPT STRING
C
      ISSA=ISSA+ISSC
      IF((ISSC.LT.0 .AND. ISSA.LT.ISSB) .OR.
     /   (ISSC.GT.0 .AND. ISSA.GT.ISSB)) GO TO 500
      IF(IERROR.NE.0)GO TO 400
C
C...     PLACE COMMA IN TOP OF STACK AND CONTINUE
C
      STACK(1,TOP)=COMMA(2)
      I=COMMA(1)/MODULO
      STACK(2,TOP)=META(I)
      GO TO 600
C
C...     END OF INCLUSIVE SUBSCRIPT STRING - RESTORE TOP ITEM
C          OF STACK AND SET FLAGS
C
  400 CALL ALARM(IERROR,TOP,8,'ISSCOD  ')
  500 DO 550 I=1,2
      STACK(I,TOP)=ISSTRM(I)
  550 CONTINUE
      ISSEND=.TRUE.
      ISSFL=.FALSE.
C
  600 RETURN
      END
