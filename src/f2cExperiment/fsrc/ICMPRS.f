**** SOURCE FILE : M0006637.W01   ***
*
C
C              FORTRAN SUBROUTINE ICMPRS
C
C LINKAGE      SUBROUTINE ICMPRS
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    CILOUT          SUBROUTINE    COMPRS
C          SUBROUTINE    ALARM           SUBROUTINE    IPRLOG
C          SUBROUTINE    HELP
C          SUBROUTINE    BINCHK
C          SUBROUTINE    RLSBUF
C
      SUBROUTINE ICMPRS
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE 'NAMETB.INC'
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),FCN(2),PROCED(2)
C FCN:         (1)=CODE CLASS 18000,(2)=NAMTBL INDEX OF 'FCN   '
      EQUIVALENCE (FCN(1),CODE(35))
C PROCED:      (1)=CODE CLASS 19000,(2)=NAMTBL INDEX OF 'PROCED'
      EQUIVALENCE (PROCED(1),CODE(37))
C
C       17.    MODE CODES
C
      COMMON/MODX/MODX
      DIMENSION MODX(32)
C REAL:        MODE CODE (21) FOR A SCALAR
      EQUIVALENCE (REAL,MODX(21))
C BOOL:        MODE CODE (23) FOR BOOLEAN TYPE
      EQUIVALENCE (BOOL,MODX(23))
C
C       19.    INTERMEDIATE LANGUAGE TEXT
C
      COMMON/ILTEXT/ILTEXT
      DIMENSION ILTEXT(94),TEXTIN(90)
C TPNTRX:      POINTER TO LAST TEXTIN ENTRY
      EQUIVALENCE (TPNTRX,ILTEXT(3))
C OPTEXT:      CONTAINS COMMAND CODE FOR CURRENT I.L. COMMAND
      EQUIVALENCE (OPTEXT,ILTEXT(4))
C TEXTIN:      STORAGE FOR CURRENTLY GENERATED I.L. COMMAND ARGUM.LIST
      EQUIVALENCE (TEXTIN(1),ILTEXT(5))
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C
C       34.    COMMON BLOCK FOR INTERPRETIVE C.I.L. OUTPUT
C
      INCLUDE 'OUTBUF.INC'
C ICOM:        NUMBER OF WORDS OF BLANK COMMON REQUIRED BY LDA
C MACFLG:      TRUE WHEN MACRO PROCESSING IN EFFECT (INTERPRETER)
C LABFLG:      INDICATES I.L. COMMAND IS LABEL (INTERPRETER)
C RSVFLG:      TRUE IF I.L. COMMAND IS A RESRV (INTERPRETER)
C IBUF:        NUMBER OF RECORDS IN BUFFER ARRAY
C PPPAGE:      PAGE NUMBER OF PART PROGRAMMING TEXT (INTERPRETER)
C MCPAGE:      NUMBER OF PAGES OF MACRO I.L. (INTERPRETER)
C IC:          NUMBER OF SCALARS IN BLOCK 1 OF CANONICAL FORMS
      INTEGER IC(4)
      EQUIVALENCE (IC(1),ISC)
C*
      DIMENSION LABSAV(5)
      LOGICAL OPERCK,SEQFLG
      external alarm
      DATA BLKSIZ/128/
      DATA OPERCK/.FALSE./,SEQFLG/.FALSE./
C**
  100 IF(SEQFLG) GOTO 510
  120 GOTO (300,300,300,300,300,400,130,200,500,200,600,700,800,200,
     1      900,200,1000,1100,1200,200,1300),OPTEXT
C
C...    ENTRY - NO OUTPUT
C
  130 RETURN
C
C...     NO SPECIAL TREATMENT REQUIRED - OUTPUT USING CILOUT
C
  200 CALL CILOUT(OPTEXT,TPNTRX,TEXTIN)
      RETURN
C
C...    LABEL - STORE I.L.
C
  400 LABSAV(1) = OPTEXT
      LABSAV(3) = TEXTIN(1)
C
C...     RELEASE I.L. BUFFER IF NECCESSARY
C
      IF((IBUF+2).GT.254) CALL RLSBUF
      LABFLG = .TRUE.
      IF (MACFLG) GOTO 410
      LABSAV(4)=PPPAGE+1
      GO TO 420
C
C...     MACRO PROCESSING IN PROGRESS
C
  410 LABSAV(4) = -MCPAGE-1
  420 LABSAV(2) = 3
      LABSAV(5)=IBUF+3
      CALL CILOUT(LABSAV(1),LABSAV(2),LABSAV(3))
      LABFLG = .FALSE.
      CALL CILOUT(7,0,TEXTIN)
      RETURN
C
C...     SEQNCE COMMAND - STORE I.L. AND SET SEQFLG
C
  500 SEQNUM = TEXTIN(1)
      SEQFLG = .TRUE.
      RETURN
C
C...     RESRV COMMAND - INCREASE APPROPRIATE COUNT AND OUTPUT
C
  700 MODE=TEXTIN(2)
      SIZ=TEXTIN(3)+1
       N=TEXTIN(4)
      IM=1
      RSVFLG =.TRUE.
C        MODE NON-SUBCRIPTED SCALAR
      IF(MODE.NE.REAL.AND.MODE.NE.BOOL.OR.N.NE.1) GOTO 701
      IM = 0
      J = 1
      GOTO 710
C        MODE SUBSRIPTED SCALAR.
  701 IF((MODE.EQ.REAL).AND.(N.NE.1))J=2
      IF((MODE.EQ.BOOL).AND.(N.NE.1))J=2
C        MODE INTERNALLY GENERATED VARIABLE.
      IF(MODE.NE.0) GOTO 705
      J = 4
      SIZ = SIZ-1
      IM = 0
C        MODE BLANK COMMON.
 705  IF(MODE.LT.0) GOTO 760
C        MODE NON-SCALAR
      IF(MODE.GT.0.AND.MODE.NE.REAL.AND.MODE.NE.BOOL) J=3
C...     UP POINTER
  710 JC=IC(J)+N*SIZ+IM
C        WILL FORM FIT IN CURRENT BLOCK.
      IF(IC(J)/BLKSIZ.EQ.JC/BLKSIZ) GOTO 720
C        NO, SPLIT FORM IF INDEXED.
      LEFT=BLKSIZ-MOD(IC(J),BLKSIZ)
C        OBTAIN NO. OF ELEMENTS WHICH WILL FIT IN REST OF BLOCK
      M=(LEFT-1)/SIZ
C        ENTIRE ARRAY CAN NOT FIT
      IF(M.EQ.N) M=M-1
C        INCREASE POINTER, DECREASE  NO. OF ELEMENTS, ITERATE
      IC (J)=IC(J)+LEFT
      N=N-M
      GOTO 710
  720 IC(J)=JC
C
C...     OUTPUT IS TO EXFIL1
C
C.....   INTERNALLY GENERATED VARIABLES
  730 CALL CILOUT(OPTEXT,TPNTRX,TEXTIN)
      RSVFLG = .FALSE.
      RETURN
C
C....    BLANK COMMON
C
  760 ICOM=ICOM+TEXTIN(3)
      GOTO 730
C
C...     CALL COMMAND - FORM CORRECT PROCEDURE NUMBER
C
 1100 ITEXT = TEXTIN(1)
      GOTO 1110
C
C...     CHECK ARGUMENT LIST FOR PROCEDURE INDICES
C
 1120 OPERCK = .TRUE.
      J = TPNTRX-1
      DO 1130 I=2,J,2
      IF (TEXTIN(I).NE.4) GOTO 1130
C
C...     THIS ARGUMENT IS A PROCEDURE INDEX
C
      ITEXT = TEXTIN(I+1)
C
C...     FORM PROCEDURE NUMBER.
C...     ALL PROCEDURES HAVE A UNIQUE MODE, THEREFORE EACH PROCEDURE CAN
C...     BE ASSIGNED A UNIQUE NUMBER.  THIS IS DONE IN ORDER THAT THE
C...     EXECUTION PHASE CAN CALL A PROCEDURE BY NUMBER.
C
 1110 PRONUM = NAMTBL(ITEXT)
      CALTYP = MODULO*(PRONUM/MODULO)
      PRONUM=PRONUM - CALTYP
C
C...     CALTYP IS THE CLASS OF THE PROCEDURE, AND SHOULD THEREFORE BE
C...     EITHER PROCED OR FCN
C
      IF ((CALTYP.NE.PROCED(1)).AND.(CALTYP.NE.FCN(1))) GOTO 9999
      IF(PRONUM.LT.500)GOTO 1125
      PRONUM = ITEXT + 1000
C...PRONUM IS NOW A POINTER TO THE PROCEDURE NUMBER
C
C...     WAS THIS AN ARGUMENT
C
 1125 IF(.NOT.OPERCK) GOTO 1140
C
C...     YES. STORE PROCEDURE NUMBER AND CONTINUE LOOP
C
      TEXTIN(I+1) = PRONUM
 1130 CONTINUE
      OPERCK = .FALSE.
      GOTO 1150
C
C...     STORE PROCEDURE NUMBER AND START TO INSPECT ARGUMENT LIST
C
 1140 TEXTIN(1) = PRONUM
      IF (TPNTRX.GT.1) GOTO 1120
C
C...     OUTPUT I.L.
C
C
C
C...     WAS THIS A CALL TO FINI. IF NOT RETURN
C
 1160 IF(PRONUM.NE.18) GOTO 200
C
C...     CALL WAS TO FINI.
C...     FUTURE I.L. WILL BE MACRO TEXT.
C
      CALL CILOUT(OPTEXT,TPNTRX,TEXTIN)
      CALL RLSBUF
      MACFLG = .TRUE.
      RETURN
C
C...     LAST COMMAND WAS SEQUENCE, AND NOT OUTPUT.
C...    IF THIS IS A LABEL COMMAND,OUTPUT THIS FIRST
C
  510 IF(OPTEXT.EQ.6) GOTO 120
      CALL CILOUT(9,1,SEQNUM)
      SEQFLG=.FALSE.
      GOTO 120
C
C...     THE FOLLOWING CODE IS TO CHECK OPERANDS FOR THOSE WITH A
C...     MODIFIER OF 1, FOLLOWED BY AN INTEGER CONSTANT INDEX.
C...     THESE ARE TO BE CHANGED TO MODIFIER OF 5, FOLLOWED BY
C...     THE BINARY NUMBER ITSELF
C
C
C...     FADD,FSUB,FMPY,FDIV,FEXP
C
  300 CALL BINCHK(1)
      CALL BINCHK(3)
      CALL BINCHK(5)
      GOTO 200
C
C...     CONJMP
C
  600 CALL BINCHK(1)
      GOTO 200
C
C...     CVTSUB
C
  800 CALL BINCHK(5)
      GOTO 200
C
C...     ASNADD
C
  900 GOTO  1120
C
C
C...     REPL
C
 1000 CALL BINCHK(4)
      GOTO 200
C
C...     CALL
C
 1150 J = TPNTRX-1
      DO 1170 I=2,J,2
 1170 CALL BINCHK(I)
      GOTO 1160
C
C...     MOVE
C
 1200 J = TPNTRX-1
      DO 1210 I=3,J,2
 1210 CALL BINCHK(I)
      GOTO 200
C
C...     HOLDAT STATEMENT
C
 1300 J = 4
      SIZ = (TPNTRX+1)/2
      N = 1
      IM=0
      GOTO 710
C
C...     SUPPOSED PROCEDURE DOES NOT HAVE CLASS PROCED OR FCN
C
 9999 CALL ALARM(38,0,8,'ICMPRS  ')
      CALL HELP
      RETURN
       END
