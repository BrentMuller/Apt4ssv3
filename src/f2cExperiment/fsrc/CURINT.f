**** SOURCE FILE : CURINT.V01   ***
*
      SUBROUTINE CURINT(PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,TUL,TE,TOOLAX,
     +                  RC,NPATCH,UC,VC)
C
C     PURPOSE: TO TEST CURRENT PATCH
C     FOR BALL-ENDED AND CORNER RADIUS CUTTERS.
C     USES MIXED ALGORITHM METHOD (MIXAL)
C
C     GIVEN :-
C     NPATCH      CURRENT PATCH NUMBER
C     CUTTING POINT DATA (U, V, POSITION, NORMAL AND DERIVATIVES)
C     TOOL DATA, THEN:-
C
C     TEST SCHEDULE FOR CURRENT PATCH :-
C     1. TEST FOR PATCH CONVEX. IF TRUE, THEN NO LOCAL INTERFERENCE
C     2. CALCULATE THE CURVATURE CT OF THE MINIMUM SPHERICAL CONVEX
C        HULL FOR THE TOOL WITH THE CUTTING POINT AS A DIAMETRAL
C        POINT.OF CONTACT. TEST AGAINST THE SIGNED MINIMUM CURVATURE
C        OF THE PATCH CP. THEN IF CP > CT NO LOCAL INTERFERENCE CAN
C        OCCUR
C     3. USE MIXAL TO SEARCH FOR INTERFERENCE ON THE PATCH, USING A
C        A NUMBER OF STARTING POINTS ARRANGED IN A PATTERN ABOUT THE
C        CUTTING POINT. (THE CUTTING POINT CANNOT BE USED AS A
C        STARTING POINT FOR THESE SEARCHES, SINCE IT IS A SOLUTION)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C.... PATCH DATA
      DIMENSION PSURF(IPSIZE)
C.... CUTTING POINT DATA
      DIMENSION RC(32),RCNORM(3)
C.... SURFACE POINT AND DERIVATIVES
      DIMENSION R(3),RU(3),RV(3)
C.... SECOND DERIVATIVES
      DIMENSION RUU(3),RUV(3),RVV(3)
C.... NORMAL AT R
      DIMENSION RNORM(3)
C
C.... POINT OF MAX. PENETRATION FOUND.
C     NOT NECESSARILY THE FINAL POINT OF ITERATION.
C     IS TRUE (I.E. EVALUATED, NOT EXTRAPOLATED) SURFACE POINT.
      DIMENSION PPOINT(3)
C.... CORRESPONDING POINT ON TOOL
      DIMENSION TPOINT(3)
C.... NORMAL AT PPOINT
      DIMENSION PNORM(3)
C     PENMAX          PENETRATION (HIT +VE)
C     UPEN, VPEN      U,V VALUES
C
C.... TOOL GEOMETRY DATA
      DIMENSION TUL(7)
C.... ABS. TOOL TIP COORDS
      DIMENSION TE(3)
C.... TOOL AXES DIRN. COSINES
      DIMENSION TOOLAX(3)
C.... TOOL CENTRE
      DIMENSION TOOLCE(3)
C
      INCLUDE 'INIDAT.INC'
      INCLUDE 'INTERF.INC'
      INCLUDE 'IBUGG.INC'
C
C.... WORKSPACE
      DIMENSION V1(3),V2(3),V3(3)
      DIMENSION TCENT(3)
      DIMENSION HCENT(3)
      PARAMETER (ETA=1D-6,PI=3.141592653589793)
C
C     CUTTER DEFINITION FOR BALL-ENDED AND CORNER RADIUS CUTTERS
C
C     ITOOL IS CUTTER TYPE: 1 FOR BALL-ENDED, 2 FOR CORNER RADIUS
C     CUTRAD IS RADIUS OF CYLINDER
C     CYLENG IS LENGTH OF CYLINDER
C     CORRAD IS CORNER RADIUS
C     CUTR3  IS CUTRAD-CORRAD
C
      CORRAD=TUL(1)
      CUTRAD=TUL(2)
      CUTR3=TUL(3)
      TLEN=TUL(7)
      CYLENG=TUL(7)-TUL(4)+TUL(1)
      IF (ABS(TUL(1)-TUL(2)).LE.ETA) THEN
        ITOOL=1
      ELSE
        ITOOL=2
      ENDIF
C
C     CALC. CURVATURE TOLERANCE CURTOL
C
      IF (TOLIN.GT.ETA) THEN
        D1=2.D0*CUTRAD
        A=MAX(CYLENG,D1)
        CURTOL=2/(TOLIN+A*A/TOLIN)
      ELSE
        CURTOL=0.D0
      ENDIF
C
C.... ADJUST NORMAL AT CONTACT POINT TO POINT TO TOOL SIDE OF SURFACE
C
      DO 10 I=1,3
        RCNORM(I)=PSIDE*RC(I+28)
  10  CONTINUE
C
      IPEN=0
      IEDGE=0
C
C     TEST FOR PATCH CONVEX
C
      PATCUR=CURMAX(NPATCH)
      IF (PATCUR.GT.CURTOL) THEN
        DUMIN=DULIM(NPATCH)
        DUMIN2=2*DUMIN
        DVMIN=DVLIM(NPATCH)
        DVMIN2=2*DVMIN
C
C.... CALCULATE TOOL CENTRE
        DO 100 I=1,3
          TOOLCE(I)=TE(I)+(TUL(4)+TUL(1))*TOOLAX(I)
 100    CONTINUE
C
C     TEST AGAINST TOOL CONVEX HULL CURVATURE
        CALL TXHULL(RC,RCNORM,CUTRAD,CORRAD,CUTR3,TLEN,TOOLAX,
     1                  TE,TOOLCE,CT,HRAD,HCENT)
C
        IF (CT.LT.PATCUR) THEN
C
C     SEARCH FOR LOCAL INTERFERENCE
C     CALC. SEARCH DIRECTIONS IN TANGENT PLANE :-
          CALL CROSS(RCNORM,TOOLAX,V3)
          CALL VNORM(V3,V1)
          CALL CROSS(V1,RCNORM,V3)
          CALL VNORM(V3,V2)
C
C     V1 AND V2 ARE UNIT VECTORS IN TANGENT PLANE AT CUTTING POINT
C     V2 PERPENDICULAR TO TOOL AXIS, V1 PERPENDICULAR TO V2
C
C     SEARCH AT 5 START POINTS
C
C.... LOCATION IN INTERFERENCE TABLE FOR START OF LOCAL PATCH DATA
C
          ICUR=NPINTR
C.... NUMBER OF HITS ON LOCAL PATCH
          NHIT=0
C
          A=-.5*CUTRAD
          CALL DEGSOL(V1,RC(5),RC(9),DU1,DV1,I)
          DO 520 K=1,5
            IF (K.EQ.3) THEN
                CALL DEGSOL(V2,RC(5),RC(9),DU1,DV1,I)
            END IF
C
            IF (K.LT.5) THEN
                A=-A
            ELSE
                A=3*A
            END IF
C
            DU=A*DU1
            DV=A*DV1
            CALL JMPLT2(UC,VC,DU,DV,I)
            IF (ABS(DU).GE.DUMIN .OR. ABS(DV).GE.DVMIN) THEN
              U=UC+DU
              V=VC+DV
              PENMAX=-1D6
              IF (NITERA.GT.1) THEN
                PREVDU=DU1
                PREVDV=DV1
              END IF
C
              CALL MIXAL(NPATCH,IPSIZE,PSURF,PSIDE,PTHICK,TUL,
     +            TOOLCE,TOOLAX,U,V,DUMIN,DVMIN,UPEN,VPEN,PPOINT,TPOINT,
     +            PNORM,PENMAX,IPEN,IFLAG,IEDGE,NITERA)
C
C.... DEBUG PRINT
C
              IF (IBUG.EQ.11) THEN
                CALL BAD(-1,0,' ',0)
                CALL BAD(1,0,'NPAT',NPATCH)
                CALL BAD(1,0,'K   ',K)
                CALL BAD(1,0,'ITER',NITERA)
              ENDIF
C
              IF (PENMAX.GT.TOLIN) THEN
C.... PENETRATION DETECTED
                IF (NHIT.GT.0) THEN
                  IF (ABS(UC-UPEN).GT.DUMIN2 .OR.
     +                 ABS(VC-VPEN).GT.DVMIN2) THEN
C
                    DO 550 I=1,NHIT
                      IF (ABS(UINTR(ICUR+I)-UPEN).LE.DUMIN2 .AND.
     1                    ABS(VINTR(ICUR+I)-VPEN).LE.DVMIN2) GOTO 520
550                 CONTINUE
                  ENDIF
                ENDIF
C
C.... STORE IN INTERFERENCE TABLE
C
                NHIT=NHIT+1
                NPINTR=NPINTR+1
                UINTR(NPINTR)=UPEN
                VINTR(NPINTR)=VPEN
                PINTR(NPINTR)=NPATCH
                DINTR(NPINTR)=PENMAX
                ISEG(NPINTR)=IPEN
                DO 515 J=1,3
                  SPINTR(J,NPINTR)=PPOINT(J)
                  TPINTR(J,NPINTR)=TPOINT(J)
                  SNINTR(J,NPINTR)=PNORM(J)
 515            CONTINUE
C
              ENDIF
C
            ENDIF
C
520       CONTINUE
C
        ENDIF
      ELSE
C.... PATCH CONVEX OR PSEUDO CONVEX
        IFLAG=0
      END IF
      END
