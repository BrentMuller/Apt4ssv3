**** SOURCE FILE : M0006647.W01   ***
*
C
C              FORTRAN SUBROUTINE LARGES
C
C LINKAGE      SUBROUTINE  LARGES (ACTNO,BIGCNT)
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          INTEGER FCT.  GETTMP          SUBROUTINE    RECOG
C          SUBROUTINE    HELP
C          SUBROUTINE    ARGCVT
C          INTEGER FCT.  MODE
C          SUBROUTINE    ONEARG
C          SUBROUTINE    OPCODE
C          SUBROUTINE    CALLZZ
C          SUBROUTINE    PUTTMP
C          SUBROUTINE    RESRVZ
C          SUBROUTINE    RLSLIN
C          INTEGER FCT.  SEARCH
C          SUBROUTINE    SETMOD
C          SUBROUTINE    ALARM
C          SUBROUTINE    TWOARG
C
      SUBROUTINE  LARGES (ACTNO,BIGCNT)
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE 'NAMETB.INC'
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(300),STACK(2,99)
C TOP:         POINTER TO LAST STACK ENTRY
      EQUIVALENCE (TOP,STKLST(1))
C STACK:       WORKING STACK
      EQUIVALENCE (STACK(1,1),STKLST(4))
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),COMMA(2),BLANK(2),NUMBER(2),TEMP(2),PERMID(2),
     *          VBL(2),IDENT(2)
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF ',     '
      EQUIVALENCE (COMMA(1),CODE(1))
C BLANK:       (1)=CODE CLASS 13000,(2)=NAMTBL INDEX OF '      '
      EQUIVALENCE (BLANK(1),CODE(25))
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'
      EQUIVALENCE (NUMBER(1),CODE(27))
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '
      EQUIVALENCE (TEMP(1),CODE(33))
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'
      EQUIVALENCE (PERMID(1),CODE(39))
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '
      EQUIVALENCE (VBL(1),CODE(61))
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '
      EQUIVALENCE (IDENT(1),CODE(69))
C
C        4.    PRODUCTION TABLE
C
      COMMON/SRCTBL/SRCTBL
      DIMENSION SRCTBL(502),META(50)
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES
      EQUIVALENCE (META(1),SRCTBL(3))
C
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE
      COMMON/TMP/TXXXX
      DIMENSION TXXXX(2,32)
C
C        8.    NAME TABLE POINTERS TO BCD LITERALS
C
      COMMON/BCDPTR/BCDPTR
      DIMENSION BCDPTR(7)
C DOTTAB:      NAMTBL POINTER TO ALPHAMERIC LITERAL '$$TAB'
      EQUIVALENCE (DOTTAB,BCDPTR(7))
C
C        9.    NAME TABLE POINTERS TO NUMBERS
C
      COMMON/NUMPTR/NUMPTR
      DIMENSION NUMPTR(12),ZERO(12)
C ZERO:        NAMTBL POINTER TO '0     '
      EQUIVALENCE (ZERO(1),NUMPTR(1))
C ONE:         NAMTBL POINTER TO '1     '
      EQUIVALENCE (ONE,NUMPTR(3))
C TWO:         NAMTBL POINTER TO '2     '
      EQUIVALENCE (TWO,NUMPTR(5))
C FOUR:        NAMTBL POINTER TO '4     '
      EQUIVALENCE (FOUR,NUMPTR(7))
C
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR
C
      INCLUDE 'GMTY.INC'
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE
C
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS
C
      COMMON/CFSIZE/CFSIZE
      LOGICAL TABCYS
      DIMENSION CFSIZE(205),MAXSIZ(2),CANSIZ(2,100)
C CANTOP:      POINTER TO THE LAST CANSIZ ENTRY
      EQUIVALENCE (CANTOP,CFSIZE(1))
C TABCYS:      TRUE WHEM PART PROGRAM CONTAINS TABCYLS
      EQUIVALENCE (TABCYS,CFSIZE(3))
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))
C CANSIZ:      NUMBER OF ITEMS A. NAMTBL INDEX OF EACH LARGE DATA ARRAY
      EQUIVALENCE (CANSIZ(1,1),CFSIZE(6))
C
C       16.    LITERALS FOR I. L. OPERATION CODES
C
      COMMON/IL/IL
      DIMENSION IL(21)
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND
      EQUIVALENCE (REPL,IL(17))
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND
      EQUIVALENCE (MOVE,IL(19))
C
C       17.    MODE CODES
C
      COMMON/MODX/MODX
      DIMENSION MODX(32)
C TABCYL:      MODE CODE (11) FOR TABULATED CYLINDER
      EQUIVALENCE (TABCYL,MODX(11))
C POINT:       MODE CODE (19) FOR POINT
      EQUIVALENCE (POINT,MODX(19))
C REAL:        MODE CODE (24) FOR A SCALAR
      EQUIVALENCE (REAL,MODX(21))
C SUBSCR:      MODE CODE (24) FOR SUBSCRIPT
      EQUIVALENCE (SUBSCR,MODX(24))
C
C       22.    MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      DIMENSION MACXX1(71)
      LOGICAL NESTG
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING
      EQUIVALENCE (INTMED,MACXX1(22))
C NESTG:       TRUE WHEN A NESTED GEOMETRIC EXPRESSION ENCOUNTERED
      EQUIVALENCE (NESTG,MACXX1(45))
C
C       27.    OPERAND MODIFIERS
C
      COMMON/OPMOD/OPMOD
      DIMENSION OPMOD(6)
C NOUGHT:      CONTAINS OPERAND TYPE 0
      EQUIVALENCE (NOUGHT,OPMOD(1))
C DLR:         CONTAINS OPERAND TYPE CODE 1
      EQUIVALENCE (DLR,OPMOD(2))
C TRPDLR:      CONTAINS OPERAND TYPE CODE 3
      EQUIVALENCE (TRPDLR,OPMOD(4))
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5
      EQUIVALENCE (QUIDLR,OPMOD(6))
C
C       28.    OPERAND MODIFIERS
C
      COMMON/SUBLST/SUBLST
      DIMENSION SUBLST(136),APTXXX(120)
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES
      EQUIVALENCE (APTXXX(1),SUBLST(1))
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C MODHLF:      NORMAL MODE CODE LIMIT 500
      EQUIVALENCE (MODHLF,MODULI(2))
C*
C PURPOSE      TO VALIDATE THE FORMAT OF LARGE DATA ARRAY DEFINITION
C              STATEMENTS AND TO GENERATE THE APPROPRIATE INTERMEDIATE
C              LANGUAGE.
C
C ARGUMENTS    ACTNO          MATCHING BASIC PRODUCTION ACTION NUMBER.
C              BIGCNT         DEFINITION ARGUMENT NUMBER + 1
C
C NOTES        DESCRIPTION OF THE CANSIZ ARRAY IN CDE PACKAGE NO. 12
C                  CANSIZ(1,I) = NUMBER OF WORDS IN THE EXTERNAL
C                                CANONICAL FORM OF A LARGE DATA ARRAY.
C                  CANSIZ(2,I) = THE NAME TABLE POINTER OF THE RESULT.
C              ALSO SEE NOTES FOR PRO020.
C
C
      LOGICAL  FOULUP,NOMORE
      DIMENSION BIGSTK(12)
      CHARACTER*6 NORMAL
      external alarm
      DATA  NORMAL /'NORMAL'/
C
C***********************************************************************
C
C... IF THIS IS THE FIRST TIME THRU FOR A GEOMETRIC DEFINITION,
C... INITIALIZE BIGSTK AND DO OTHER HOUSEKEEPING.
C
      IF (BIGCNT .NE. 1)  GO TO 100
      FOULUP = .FALSE.
      PNTCNT = 0
      SLOPCT = 0
      EP = 0
      MATRX = BLANK(2)
      VECTR = BLANK(2)
      NOMORE = .FALSE.
      INDEX = -18
      FIRST = ZERO(1)
      SECOND = ZERO(1)
      TRFORM = ZERO(1)
C
      BIGSTK(2) = -1
      ERRPT=TOP-3
      L = STACK(1,ERRPT)
      XYZ=MOD(NAMTBL(L),MODHLF)
      IF(L.GT.NAMMAX)GO TO 5
      IF(NAMTBL(L)/MODULO.EQ.IDENT(1)/MODULO)CALL SETMOD(TOP-3,PERMID)
    5 M=6
      ASSIGN 10 TO N
      GO TO 1000
   10 BIGTOP = 6
C
C... CHECK IF THIS IS FINAL PROCESSING FOR THIS DEFINITION.
C
  100 IF (ACTNO .NE. 102)   GO TO 500
C
C **********************************************************************
C... PRODUCTION 102  ***************************************************
C
C... IF AN ERROR WAS PREVIOUSLY ENCOUNTERED,SUPPRESS I.L. GENERATION
C
      IF(.NOT.FOULUP)GO TO 102
      LK=STACK(1,TOP-1)
      KL=2
      GO TO 3000
C...  IF NOMORE = .TRUE.,SLOPE OR NORMAL IN WRONG PLACE--TAKE ERROR PATH
C
  102 IF(NOMORE)GO TO 1030
C
C... IF STACK(1,TOP-1) IS CLASS IDENT, CHANGE IT TO CLASS PERMID.
C
      ERRPT=TOP-1
      L = STACK(1,ERRPT)
  103 IF(L.GT.NAMMAX)GO TO 105
      IF(NAMTBL(L)/MODULO.EQ.IDENT(1)/MODULO)CALL SETMOD(TOP-1,PERMID)
C
C... PLACE STACK(1,TOP-1) IN BIGSTK
C
  105 M=4
      ASSIGN 110 TO N
      GO TO 1000
C
C... SEARCH GEOMETRIC PRODUCTIONS
C
  110 J = GEOLOC(TABCYL)
      EP=ACTNO
      K = SEARCH (BIGSTK,BIGTOP, GEOMTB(J),EP)
C
C... IF ACTION NUMBER = 200, NO MATCHING PRODUCTION WAS FOUND.
C
      IF (K.GE.200)GOTO 1030
C
C... EXAMINE, WHETHER SPLINE AND VECTOR APPEAR IN VALID POSITION
C
      IF (BIGCNT.GT.4)GOTO 200
      GOTO(150,160,200,170),BIGCNT
  150 IF(K.NE.1)GOTO 1030
      GOTO 210
  160 IF(XYZ.NE.28)GOTO 200
      IF(K.NE.3.AND.K.NE.4)GOTO 1030
      GOTO 200
  170 IF(XYZ.NE.28)GOTO 200
      IF(VECTR.NE.BLANK(2))GOTO 200
      IF(K.NE.4)GOTO 1030
C
C... BRANCH ON GEOMETRIC ACTION NUMBER.
C
  200 GO TO (210,220,230,240,250,260,270,280,290,300,310,320,330,310),K
C... GEO ACTION NUMBER 1   *********************************************
C
  210 IF (BIGCNT .NE. 1)  GO TO 1030
      GO TO 400
C
C... GEO ACTION NUMBER 2   *********************************************
C... SAVE MATRIX AND COMPRESS BIGSTK
C
  220 MATRX = STACK(1,TOP-1)
      TRFORM = ONE
      CALL OPCODE(REPL)
      CALL ONEARG(12)
      CALL TWOARG(-6,DOTTAB)
      CALL ARGCVT(MATRX)
      CALL RLSLIN
      LK=MATRX
      KL=1
      GO TO 3000
C
C... GEO ACTION NUMBER 3   *********************************************
C... EXPAND BIGSTK TO ACCOMODATE TRFORM-MATRIX IF TRFORM IS ARGUMENT 3
C... OF THE DEFINITION.
C
  230 IF (BIGCNT .NE. 2)  GO TO 1030
      GO TO 390
C
C... GEO ACTION NUMBER 4   *********************************************
C... CHECK TO SEE THAT THE FORMAT IS CORRECT AND SAVE THE VECTOR
C
  240 IF ((BIGCNT .NE. 2) .AND. ((BIGCNT .NE. 4) .OR. (MATRX .EQ.
     /BLANK(2))))  GO TO 1030
      VECTR = STACK(1,TOP-1)
      CALL OPCODE(REPL)
      CALL ONEARG(3)
      CALL TWOARG(-3,DOTTAB)
      CALL ARGCVT(VECTR)
      CALL RLSLIN
      LK=VECTR
      KL=2
      GO TO 3000
C
C... GEO ACTION NUMBER 5   *********************************************
C
  250 I = STACK(1,TOP-1)
      SLOPCT = SLOPCT + 1
      IF(PNTCNT.EQ.0)GOTO 1030
C
C... DETERMINE IF SLOPE OR NORMAL IS FOR FIRST OR LAST POINT AND
C... COMPRESS BIGSTK.
C
      CALL OPCODE(MOVE)
      KL=-1
      IF(PNTCNT .GT. 1) KL=-2
      CALL TWOARG(KL,DOTTAB)
      CALL ARGCVT(I)
      CALL RLSLIN
      LK=I
      KL=3
C
C... SET NOMORE =.TRUE. INDICATING THIS MUST BE THE LAST ARGUMENT.
C
      IF(PNTCNT.GT.1) NOMORE = .TRUE.
      GO TO 3000
C
C... GEO ACTION NUMBER 6   *********************************************
C
  260 I = STACK(1,TOP-1)
C
C... DETERMINE IF SLOPE OR NORMAL IS FOR THE FIRST OR LAST POINT.
C
      IF (PNTCNT .GT. 1)   GO TO 265
C
C... DETERMINE IF ARGUMENT = SLOPE OR NORMAL AND SET FIRST = ONE OR TWO.
C... EXPAND BIGSTK.
C
      IF(CNAMTB(I).EQ.NORMAL)
     /    GO TO 261
      FIRST = ONE
      GO TO 390
  261 FIRST = TWO
      GO TO 390
C
C... DETERMINE IF ARGUMENT = SLOPE OR NORMAL AND SET SECOND = ONE OR TWO
C... EXPAND BIGSTK
C
  265 IF(CNAMTB(I).EQ.NORMAL)
     /    GO TO 266
      SECOND = ONE
      GO TO 390
  266 SECOND = TWO
      GO TO 390
C
C... GEO ACTION NUMBER 7   *********************************************
C... ADD 1 TO POINT COUNT, ADVANCE ..TAB INDEX BY 2, COMPRESS BIGSTK,
C... ADD SECOND COORDINATE TO MOVE I.L. ARGUMENT LIST AND RELEASE THE IL
C
  270 PNTCNT = PNTCNT + 1
      IF(PNTCNT.EQ.139)GOTO 1030
      CALL OPCODE(MOVE)
      CALL TWOARG(INDEX,DOTTAB)
      CALL ARGCVT(SAVE1)
      INDEX  = INDEX - 2
      CALL ARGCVT (STACK(1,TOP-1))
      CALL RLSLIN
      LK=SAVE1
      KL=4
      GO TO 3000
  271 LK=STACK(1,TOP-1)
      KL=5
      GO TO 3000
C
C... GEO ACTION NUMBER 8   *********************************************
C... ADD 1 TO POINT COUNT, ADVANCE ..TAB INDEX BY 3, COMPRESS BIGSTK,
C... ADD THIRD COORDINATE TO MOVE I.L. ARGUMENT LIST AND RELEASE THE IL
C
  280 PNTCNT = PNTCNT + 1
      IF(PNTCNT.EQ.139)GOTO 1030
      CALL OPCODE(MOVE)
      CALL TWOARG(INDEX,DOTTAB)
      CALL ARGCVT(SAVE1)
      CALL ARGCVT(SAVE2)
      INDEX = INDEX - 3
      CALL ARGCVT (STACK(1,TOP-1))
      CALL RLSLIN
      LK=SAVE1
      KL=6
      GO TO 3000
  281 LK=SAVE2
      KL=7
      GO TO 3000
  282 LK=STACK(1,TOP-1)
      KL=8
      GO TO 3000
C
C... GEO ACTION NUMBER 9   *********************************************
C... ADD SECOND COORDINATE TO MOVE I.L. ARGUMENT LIST, EXPAND BIGSTK
C
  290 SAVE2=STACK(1,TOP-1)
      GO TO 380
C
C... GEO ACTION NUMBER 10  *********************************************
C... GENERATE MOVE I.L. COMMAND, PUT FIRST COORDINATE IN MOVE ARGUMENT
C... LIST, AND EXPAND BIGSTK.
C
  300 SAVE1=STACK(1,TOP-1)
C
C
      GO TO 390
C
C... GEO ACTION NUMBERS 11,12,13, AND 14  ******************************
C... ADD 1 TO POINT COUNT, ADVANCE ..TAB INDEX, GENERATE MOVE I.L.
C... COMMAND AND RELEASE THE I.L.
C
  310 I1 = -1
      I2 = -2
      GO TO 335
C
  320 I1 = -2
      I2 = -3
      GO TO 335
C
  330 I1 = -3
      I2 = -1
      GO TO 335
C
  335 PNTCNT = PNTCNT + 1
      IF(PNTCNT.EQ.139)GOTO 1030
      LK=STACK(1,TOP-1)
      IF(MOD(NAMTBL(LK),MODULO).LT.MODHLF)GO TO 336
      J=GETTMP(POINT)
      CALL OPCODE(REPL)
      CALL ONEARG(3)
      CALL TWOARG(NOUGHT,J)
      CALL TWOARG(TRPDLR,LK)
      CALL RLSLIN
      STACK(1,TOP-1)=J
      CALL PUTTMP(POINT)
  336 KL=9
      GO TO 3000
  338 CALL OPCODE(MOVE)
      CALL TWOARG(INDEX, DOTTAB)
      CALL TWOARG(I1,STACK(1,TOP-1))
      CALL TWOARG(I2,STACK(1,TOP-1))
      IF (K .NE. 14)  GO TO 340
      CALL TWOARG(-3,STACK(1,TOP-1))
      INDEX = INDEX - 1
  340 CALL RLSLIN
      INDEX = INDEX - 2
      GO TO 400
C
C... COMPRESS BIGSTK
C
  350 BIGSTK(8) = BIGSTK(10)
  360 BIGSTK(6) = BIGSTK(8)
      BIGTOP = 6
      GO TO 400
C
C... SLIDE BIGSTK ARGUMENTS UP
C
  380 BIGTOP = 10
      BIGSTK(10) = BIGSTK(8)
      GO TO 395
  390 BIGTOP = 8
  395 BIGSTK(8)  = BIGSTK(6)
      BIGSTK(6)  = BIGSTK(4)
C
C... COMPRESS STACK AND EXIT
C
  400 STACK(1,TOP-2) = STACK(1,TOP)
      STACK(2,TOP-2) = STACK(2,TOP)
      TOP = TOP-2
       RETURN
C
C **********************************************************************
C... FINAL PROCESSING  *************************************************
C
C... RESERVE SPACE FOR RESULT OF TABCYL DEFINITION IF NECESSARY.
C
  500 IF (ACTNO .EQ. 105)  GO TO 530
      RESULT = STACK(1,TOP-5)
      J = MODULO * (NAMTBL(RESULT) / MODULO)
      IF ((J .EQ. VBL(1)) .OR. (J .EQ. TEMP(1)))    GO TO 540
      NAMTBL(RESULT) = VBL(1) + TABCYL
      CALL RESRVZ (RESULT, TABCYL, TXXXX(1,TABCYL), 1)
      GO TO 545
  530 RESULT = GETTMP(TABCYL)
      NESTG = .TRUE.
      GO TO 550
C
C... IF THIS VARIABLE HAS BEEN PREVIOUSLY DEFINED WITH ANOTHER MODE,
C... ISSUE ERROR AND TERMINATE PROCESSING.
  540 K = MODE (RESULT)
      IERROR=1001
      ERRPT=TOP-6
      IF (K .NE. TABCYL)  GO TO 1040
C
C... IF THIS VARIABLE HAS BEEN PREVIOUSLY DEFINED WITH THE SAME MODE,
C... ISSUE WARNING AND CONTINUE PROCESSING
      IF(J.EQ.VBL(1).AND.INTMED.EQ.0)CALL ALARM(50,TOP-5,4,'LARGES  ')
C
C... IF ERROR OCCURED PREVIOUSLY,GENERATE A CALL TO APT094.
C
      IF (FOULUP)  GO TO 1050
C
C... CHECK FOR INCOMPLETE ARGUMENT LIST AND CHECK THAT THE NUMBER OF
C... POINTS IS WITHIN BOUNDS.
C
  545 IERROR=1025
      ERRPT=0
      IF ((PNTCNT+SLOPCT).LT.4.OR.BIGTOP.NE.6)GOTO 1035
C
C... TRANSLATE FIRST MODIFIER TO AN I.L. NUMBER
C
  550 L = STACK(1,TOP-1)
      J = NAMTBL(L) - (NAMTBL(L)/MODULO)*MODULO - 19
      IF (J-5)  552,554,554
  552 II = ONE
      GO TO 556
  554 II = ZERO(J)
C
C... CHECK TO SEE IF WE HAVE AN XYZ FORMAT WITH NO DIRECTRIX SPECIFIED.
C
C... CHECK IF THIS TABCYL IS ONE OF THE TWO LARGEST LARGE DATA ARRAY
C... CANONICAL FORMS ENCOUNTERED AND IF SO SAVE ITS SIZE IN MAXSIZ.
C
  556 NOWRDS=21+7*PNTCNT
      IF(NOWRDS.LE.(IABS(MAXSIZ(2))))GO TO 570
      IF(NOWRDS.LE.(IABS(MAXSIZ(1))))GO TO 560
      MAXSIZ(2)=MAXSIZ(1)
      MAXSIZ(1)=NOWRDS
      GO TO 570
  560 MAXSIZ(2)=NOWRDS
C
C... INSERT TABCYL SIZE IN CANSIZ ARRAY FOR FUTURE REFERENCE.
C
  570 J = RESULT - (CANTOP*(RESULT/CANTOP))
      DO 580  I = 1,CANTOP
      J = J + 1 - (CANTOP*(J/CANTOP))
      IF((CANSIZ(1,J).NE.0).AND.(CANSIZ(2,J).NE.RESULT))GO TO 580
      CANSIZ(1,J) = NOWRDS
      CANSIZ(2,J) = RESULT
      GO TO 600
  580 CONTINUE
C
C... CANSIZ HAS OVERFLOWED--- TOO MANY LARGE DATA ARRAYS IN PART PROGRAM
C
      IERROR=53
      ERRPT=TOP-6
      GO TO 1040
C
C...  GENERATE CALL I.L. FOR APT088 (TABCYL DEFINITION REDUCTION RTN.)
C
  600 TABCYS = .TRUE.
      CALL  CALLZZ (APTXXX(67))
      CALL  ARGCVT (RESULT)
      CALL  ARGCVT (II)
      CALL  TWOARG (QUIDLR, PNTCNT)
      CALL  ARGCVT (FIRST)
      CALL  ARGCVT (SECOND)
      CALL  ARGCVT (TRFORM)
      CALL TWOARG(NOUGHT,DOTTAB)
      CALL  RLSLIN
C
C... ADJUST THE STACK AND RETURN
C
  610 IF (ACTNO - 104)  635,620,640
  620 TOP = TOP - 6
  630 STACK(1,TOP) = RESULT
      K = NAMTBL(RESULT) / MODULO
      STACK(2,TOP) = META(K)
  635 RETURN
  640 TOP = TOP - 4
      NESTG = .FALSE.
      GO TO 630
C
C ********************************************************************
C... CONVERT AN ELEMENT OF THE STACK TO MACHINE DEPENDENT REPRESENTATION
C... AND INSERT IT IN BIGSTK SO IT CAN BE MATCHED WITH THE GEOMETRIC
C... PRODUCTIONS.
C
C... LINKAGE --- SET L = STACK ELEMENT (NAMTBL POINTER)
C...             SET M = BIGSTK INDEX
C...             ASSIGN N TO RETURN STATEMENT NUMBER
C
 1000 IF(L.GT.NAMMAX)GO TO 1005
      KK = MODULO * (NAMTBL(L) /MODULO)
      IARG = NAMTBL(L) - KK
      IF (IARG .GE. 500)   IARG = IARG - 500
      IF ((KK .EQ. VBL(1)) .OR. (KK .EQ. TEMP(1)))   GO TO 1020
      IF (KK .EQ. PERMID(1))  GO TO 1010
      IF (KK .NE. NUMBER(1))  GO TO 1030
 1005 IARG =REAL
      GO TO 1020
C---     CHECK FOR UNDEFINED SLOPE VALUE
 1010 IF(IARG.EQ.0) GO TO 1030
      IARG=IARG+50
 1020 BIGSTK(M) = PMIDTB(IARG)
      GO TO N, (10,110)
C
C ********************************************************************
C... INVALID TABCYL DEFINITION
C
 1030 CALL ALARM(1025,ERRPT,8,'LARGES  ')
      FOULUP = .TRUE.
      GO TO 400
C
C... FINAL PROCESSING CANNOT BE COMPLETED
C
 1035 IF(FOULUP)GOTO 1050
      IF(EP.EQ.0)GOTO 1040
      STACK(1,TOP)=COMMA(2)
      ERRPT=TOP+1
 1040 TOP=TOP+1
      CALL ALARM(IERROR,ERRPT,8,'LARGES  ')
      TOP=TOP-1
 1050 CALL CALLZZ(APTXXX(68))
      CALL TWOARG(DLR,FOUR)
      CALL ARGCVT(RESULT)
      CALL TWOARG (NOUGHT,DOTTAB)
      CALL RLSLIN
      GO TO 610
C
C...  IF INDIRECT ADRESS TEMPORARY,RELEASE IT.
C.
 3000 IF(LK.GT.NAMMAX)GO TO 4000
      I=NAMTBL(LK)
      IF(I/MODULO.NE.TEMP(1)/MODULO)GO TO 4000
      J=I-TEMP(1)
      IF(J.GE.MODHLF)J=SUBSCR
      CALL PUTTMP(J)
 4000 GO TO(360,400,360,271,360,281,282,350,338),KL
      CALL HELP
      RETURN
       END
