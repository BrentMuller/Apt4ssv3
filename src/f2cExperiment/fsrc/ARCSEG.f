**** SOURCE FILE : M0001909.W01   ***
*
      SUBROUTINE ARCSEG(C,FL,TOLR,NUM,NUMAX,IRR)
C---     INPUT  C A RATIONAL PARAMETRIC CUBIC CURVE SEGMENT
C---     INPUT  NUMAX THE MAXIMUM NUMBER OF FLO RATE SPLINES ALLWD
C---    INPUT  TOLR THE TOLERANCE TO BE USED IN FITTING(.001 NORMAL)
C---    OUTPUT IRR ERROR FLAG, ZERO IS CORRECT, NONZERO IS ERROR.
C---     OUTPUT NUM  NUMBER OF FLOW SPLINES GENERATED
C---     OUTPUT FL(4,NUM) 4-POSITION FLOW FUNCTIONS CREATED.
C---            FL(1,I) IS THE ACCUMULATED ARC LENGTH
C---            FL(2,I) IS THE CORRESPONDING COONS PARAMETER
C---            FL(3,I) IS THE RATE OF CHANGE OF COONS PARAM
C---            FL(4,I) IS THE SECOND DERIVATIVE OF COON'S PARAMETER
C
C---     PURPOSE IS GENERATE A CUBIC SEGMENT WITH ARC AS FLOW RATE.
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION C(16),FL(4,NUMAX),CV(16),SARC(3)
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC
C   HILFSSPEICHER FUER 5 ZWISCHENPUNKTE
      DOUBLE PRECISION CVV(4,5)
      DATA ZERO,ONE,HALF,SMAL,VSMAL/0.0D0,1.0D0,0.5D0,1.0D-6,1.0D-30/
C---     NOW=CURRENT ACCEPTED POINT, NX=NEXT CADIDATE POINT
C---     ALGORITHM PROCEEDS BY SUBDIVIDING REMAINING ARC BY TWO
C---     UNTIL A SATISFACTORY PARAMETERIZATION OF A SUBARC IS OBTAINED
      NOW=1
      ARCLEN=ZERO
      UNOW=ZERO
      CALL CNCURV(UNOW,C,CV,1)
C---     DETERMINE RATES OF CHANGE AT THIS POINT
      A=DSQRT(CV(5)**2+CV(6)**2+CV(7)**2)+VSMAL
      B=(CV(5)*CV(9)+CV(6)*CV(10)+CV(7)*CV(11))/A
C---     LOAD THE KEY VALUES FOR THE STARTING POINT
      FL(1,NOW)=ARCLEN
      FL(2,NOW)=UNOW
      FL(3,NOW)=ONE/A
      FL(4,NOW)=-B/(A**3)
      UNX=.76
C   'FLOW,ARC,...'  KORREKTOR BEI GERADEN 'SPLINE/CURSEG'-BOEGEN
      IF(C(13).NE.ONE.OR.C(14).NE.ONE.OR.C(15).NE.ZERO.
     *   OR.C(16).NE.ZERO)GOTO 45
      IF(DABS(C( 2)-C( 1)-C( 3)).GT.SMAL.OR.
     *               DABS(C( 3)-C( 4)).GT.SMAL)GOTO 45
      IF(DABS(C( 6)-C( 5)-C( 7)).GT.SMAL.OR.
     *               DABS(C( 7)-C( 8)).GT.SMAL)GOTO 45
      IF(DABS(C(10)-C( 9)-C(11)).GT.SMAL.OR.
     *               DABS(C(11)-C(12)).GT.SMAL)GOTO 45
      GOTO 49
C   UNTERSUCHUNG AUF ANNAEHERND GERADEN BOEGEN
   45 DO 46 J=1,5
      U=J
      U=(U-1.D0)/4.D0
   46 CALL CNCURV(U,C,CVV(1,J),0)
C BERECHNUNG DER DISTANZEN
      DO 47 J=1,5
      J1=J
      J2=J+1
      IF(J.NE.5)GOTO 48
      J1=1
      J2=5
   48 CVV(4,J)=DSQRT((CVV(1,J2)-CVV(1,J1))**2
     *              +(CVV(2,J2)-CVV(2,J1))**2
     *              +(CVV(3,J2)-CVV(3,J1))**2)
   47 CONTINUE
      A1=CVV(4,1)+CVV(4,2)+CVV(4,3)+CVV(4,4)
      TOLRI=(A1-CVV(4,5))/CVV(4,5)
      IF(DABS(TOLRI).GT.TOLR)GO TO 50
      A2=CVV(4,5)/4.D0
      DO 42 J=1,4
      IF(DABS((CVV(4,J)-A2)/A2).GT.TOLR) GOTO 50
   42 CONTINUE
C    TESTDRUCKE  ***************
      CALL BAD(-1,1,'TOLI',TOLRI)
      CALL BAD( 1,1,'TOLR',TOLR)
      CALL BAD( 1,1,'A   ',A   )
      CALL BAD( 1,1,'A1  ',A1  )
      CALL BAD(-1,1,'B   ',B   )
      A=A1
   49 IRR=22
      NOW=2
      FL(1,2)=A-VSMAL
      FL(2,2)=ONE
      FL(3,1)=ONE/FL(1,2)
      FL(3,2)=FL(3,1)
      FL(4,1)=ZERO
      FL(4,2)=FL(4,1)
      IF(NOW.GT.NUMAX-2)GOTO 999
      GOTO 500
C---
   50 CONTINUE
      ICHK=1
   60 CONTINUE
      CALL CNCURV(UNX,C,CV,1)
      NX=NOW+1
C---     DETERMINE RATES OF CHANGE AT THIS POINT
      A=DSQRT(CV(5)**2+CV(6)**2+CV(7)**2)+VSMAL
      B=(CV(5)*CV(9)+CV(6)*CV(10)+CV(7)*CV(11))/A
C---     LOAD THE KEY VALUES
      FL(1,NX)=ARCLEN
      FL(2,NX)=UNX
      FL(3,NX)=ONE/A
      FL(4,NX)=-B/(A**3)
C
C---     CALCULATE THE MID PT BETWEEN UNOW AND UNX AND CHECK FOR
C---     TOLERANCE BETWEEN TOTAL ARC AND SUM OF SUBARCS.
  100 CONTINUE
      UCHECK=(UNOW+UNX)*HALF
      CALL CNCURV(UCHECK,C,CV,1)
C---     DETERMINE RATES OF CHANGE AT THIS POINT
      A=DSQRT(CV(5)**2+CV(6)**2+CV(7)**2)+VSMAL
      B=(CV(5)*CV(9)+CV(6)*CV(10)+CV(7)*CV(11))/A
C---     LOAD THE KEY VALUES
      FL(2,NX+1)=UCHECK
      FL(3,NX+1)=ONE/A
      FL(4,NX+1)=-B/(A**3)
C---     COMPARE UNOW,UNX  UNOW,UCHECK  UCHECK,UNX
      DO 110 I=1,3
      IA=NOW
      IB=NX
      IF(I.EQ.3) IA=IA+2
      IF(I.EQ.2) IB=IB+1
C---     COMPUTE ARC LENGTH BY SPECIAL SPLINE FUNCTION FORMULA.
      SARC(I)=3.*(FL(2,IB)-FL(2,IA))*(FL(4,IB)+FL(4,IA))
      A=FL(4,IB)*(2.*FL(3,IA)+FL(3,IB))+FL(4,IA)*(FL(3,IA)+2.*FL(3,IB))
      IF(DABS(A).LT.VSMAL) GOTO 109
      SARC(I)=SARC(I)/A
      GOTO 110
C---     SPECIAL PATH WHEN SECOND DERIVATIVE IS ZERO
  109 CONTINUE
      D1=ZERO
      IF(DABS(FL(3,IA)).GT.VSMAL*SMAL) D1=ONE/FL(3,IA)
      IF(DABS(FL(3,IB)).GT.VSMAL*SMAL) D1=D1+ONE/FL(3,IB)
      IRR=23
      IF(D1.EQ.ZERO) GOTO 999
      SARC(I)=(FL(2,IB)-FL(2,IA))*D1/2.D0
  110 CONTINUE
C
      ERR=(SARC(1)-SARC(2)-SARC(3))/(SARC(1)+VSMAL)
      IF(IBUG.NE.11) GO TO 23
      CALL BAD(-1,0,' ',0)
      NX1=NX+1
      DO 24 III=NOW,NX1
      CALL BAD(-4,1,'FL  ',FL(1,III))
   24 CONTINUE
      CALL BAD(3,1,'SARC',SARC)
      CALL BAD(-1,1,'ERR ',ERR)
   23 CONTINUE
      IF(DABS(ERR).GT.TOLR) GO TO 150
C---     ACCURACY IS OKAY, NOW CHECK IF SPLINE IS INCREASING
      IF(FL(2,NOW).GE.FL(2,NOW+1)) GO TO 150
      IF(FL(3,NOW).LE.ZERO) GO TO 150
      IF(FL(3,NX).LE.ZERO) GO TO 150
C---     NOW CHECK FOR A MAX OR MIN WITHIN THE INTERVAL
      A=FL(3,NOW)*SARC(1)
      B=FL(3,NX)*SARC(1)
      AA=3.D0*(B+A-2.D0*(FL(2,NX)-FL(2,NOW)))
      IF(DABS(AA).LT.VSMAL) AA=VSMAL
      BB=2.*(3.*(FL(2,NX)-FL(2,NOW))-2.*A-B)
      CC=A
      DISC=BB*BB-4.*AA*CC
      IF(DISC.LT.ZERO) GO TO 140
      DISC=DSQRT(DISC)
      R=(-BB-DISC)/(2.*AA)
      IF(DABS(R-HALF).LT.HALF) GO TO 150
      R=(-BB+DISC)/(2.*AA)
      IF(DABS(R-HALF).LT.HALF) GO TO 150
  140 CONTINUE
C---     FUNCTION MEETS ALL CONDITIONS, NOW CONSOLIDATE AND TRY
C---     TO FIT NEXT SUBARC.
      FL(1,NX)=SARC(1)+ARCLEN
      ARCLEN=ARCLEN+SARC(1)
C---     UPDATE POINTER AND TRY TO FIT NEXT SUBARC
      NOW=NOW+1
      UDEL=UNX-UNOW
      UNOW=UNX
      UNX=UNOW+4.0*UDEL
      UNX=DMIN1(ONE,UNX)
      IF(UNOW.GE.ONE-VSMAL) GO TO 500
      IRR=22
      IF(NOW.GT.NUMAX-2) GOTO 999
      GO TO 50
C---     CUT SUBARC IN HALF AND TRY TO FIT AGAIN
  150 CONTINUE
      UNX=UCHECK
      ICHK=ICHK+1
      IRR=1
      IF(ICHK.GT.10) GO TO 999
      GO TO 60
C---     PROPER END OF PROCESSING
  500 CONTINUE
      IRR=0
  999 CONTINUE
      NUM=NOW
      RETURN
      END
