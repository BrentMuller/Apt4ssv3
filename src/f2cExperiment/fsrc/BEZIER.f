**** SOURCE FILE : M0000600.V02   ***
*
C
      SUBROUTINE BEZIER(BIN,OUT,IRR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION BIN(3,4,4),OUT(49),BOUT(3,4,4)
      IRR=0
      DATA SMAL/1.0D-10/
      DATA ZERO/0.0D0/
      ICASE=1
C------ BEZIER INPUT IS FOUR PARALLEL STRINGS OF FOUR POINTS EACH
C-----EACH OF THESE FOUR POINT STRING DEFINES A CHARACTERISTIC POLYGON
C------ UNDER CERTAIN CONDITIONS, THIS INPUT WILL DEFAULT TO A ZERO
C------ TWIST PATCH (ICASE=2) OR A RULED PATCH(ICASE=3)
      ICASE=1
C------ FIRST CHECK INPUT TO DETECT A ZERO TWIST DEFAULT
      DO 10 IA=2,3
      DO 10 IB=2,3
      DO 10 JA=2,3
      DO 10 JB=2,3
      D=0.
      DO 20 K=1,3
   20 D=D+(BIN(K,IA,IB)-BIN(K,JA,JB))**2
C------ IF THE FOUR INTERIOR POINTS ARE IDENTICAL, SETUP ZERO TWISTS
      IF(D.GT.SMAL) GO TO 100
   10 CONTINUE
      ICASE=2
C------CHECK FURTHER FOR A RULED CONDITION
      DO 30 IA=1,4,3
      DO 30 IB=2,3
      DO 30 JA=1,4,3
      DO 30 JB=2,3
      D=0.0
      DO 40 K=1,3
   40 D=D+(BIN(K,IA,IB)-BIN(K,JA,JB))**2
      IF(D.GT.SMAL) GO TO 100
   30 CONTINUE
C------ 5TH THRY 12TH POINTS ARE IDENTICAL HENCE PATCG IS RULED
      ICASE=3
  100 CONTINUE
C------ NOW CREATE COONS CANONICAL FORM FOR PATCH
      DO 120 I=1,3
C------ FIRST LOAD CORNER POINTS INTO COONS MATRIX (BOUT)
      BOUT(I,1,1)=BIN(I,1,1)
      BOUT(I,2,1)=BIN(I,4,1)
      BOUT(I,1,2)=BIN(I,1,4)
      BOUT(I,2,2)=BIN(I,4,4)
C------ NOW LOAD FIRST DIRECTION (FD) TANGENTS INTO BOUT
      BOUT(I,3,1)=3.0*(BIN(I,2,1)-BIN(I,1,1))
      BOUT(I,4,1)=3.0*(BIN(I,4,1)-BIN(I,3,1))
      BOUT(I,3,2)=3.0*(BIN(I,2,4)-BIN(I,1,4))
      BOUT(I,4,2)=3.0*(BIN(I,4,4)-BIN(I,3,4))
      IF(ICASE.EQ.3) GO TO 200
C------ SETUP SECOND DIRECTION TANGENTS (SD) INTO COONS MATRIX(BOUT)
      BOUT(I,1,3)=3.0*(BIN(I,1,2)-BIN(I,1,1))
      BOUT(I,2,3)=3.0*(BIN(I,4,2)-BIN(I,4,1))
      BOUT(I,1,4)=3.0*(BIN(I,1,4)-BIN(I,1,3))
      BOUT(I,2,4)=3.0*(BIN(I,4,4)-BIN(I,4,3))
      IF(ICASE.EQ.2) GO TO 130
C------ FINALLY LOAD TWIST VECTORS
      BOUT(I,3,3)=9.0*(BIN(I,2,2)-BIN(I,1,2)-BIN(I,2,1)+BIN(I,1,1))
      BOUT(I,4,3)=9.0*(BIN(I,4,2)-BIN(I,3,2)-BIN(I,4,1)+BIN(I,3,1))
      BOUT(I,3,4)=9.0*(BIN(I,2,4)-BIN(I,1,4)-BIN(I,2,3)+BIN(I,1,3))
      BOUT(I,4,4)=9.0*(BIN(I,4,4)-BIN(I,3,4)-BIN(I,4,3)+BIN(I,3,3))
      GO TO 120
C------ THE CASE OF ZERO TWISTS
  130 DO 140 J=3,4
      DO 140 K=3,4
  140 BOUT(I,J,K)=0.0
      GO TO 120
  200 BOUT(I,1,3)=BIN(I,1,4)-BIN(I,1,1)
      BOUT(I,1,4)=BOUT(I,1,3)
      BOUT(I,2,3)=BIN(I,4,4)-BIN(I,4,1)
      BOUT(I,2,4)=BOUT(I,2,3)
      BOUT(I,3,3)=BOUT(I,3,2)-BOUT(I,3,1)
      BOUT(I,3,4)=BOUT(I,3,3)
      BOUT(I,4,3)=BOUT(I,4,2)-BOUT(I,4,1)
      BOUT(I,4,4)=BOUT(I,4,3)
  120 CONTINUE
      DO 220 I=1,3
      DO 220 K=1,4
      DO 220 J=1,4
      IN=(I-1)*16+(K-1)*4+J
      OUT(IN)=BOUT(I,J,K)
      W=OUT(IN)
      W=DABS(W)
      IF(W.LT.SMAL) OUT(IN)=ZERO
  220 CONTINUE
      RETURN
      END
