*
C.....FORTRAN SUBROUTINE              ANGLF/ANBLB          18.10.78 EC
C
C              FORTRAN SUBROUTINE ANGLF
C PURPOSE      TO COMPUTE THE ANGLE BETWEEN THE POSITIVE X-AXIS AND A
C              VECTOR FROM THE CENTER OF A CIRCLE TO A GIVEN POINT
C
C LINKAGE      CALL ANGLF(RES,ARG1,ARG2)
C
C ARGUMENTS    RES     ARRAY TO CONTAIN RESULT
C              ARG1    ARRAY CONTAINING THE CANONICAL FORM
C                      OF THE INPUT
C              ARG2    ARRAY CONTAINING THE CANONICAL FORM
C                      OF THE INPUT
C
C SUBSIDIARIES TYPE                ENTRY
C              LOGICAL FUNCTION    CKDEF
C              SUBROUTINE          UNPACK
C              REAL FUNCTION       DATAN2
C              REAL FUNCTION       DARCOS
C              REAL FUNCTION       DSQRT
C              REAL FUNCTION       DABS
C              REAL FUNCTION       DMIN1
C              REAL FUNCTION       DMAX1
C              SUBROUTINE          ERROR
C              SUBROUTINE          UNDEF
C              SUBROUTINE          TRANSF
C
      SUBROUTINE ANGLF(RES,ARG1,ARG2)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
      DIMENSION ARG1(1),ARG2(1),SR(2),A1(12),A2(12),RES(1)
      LOGICAL CKDEF
      INTEGER IR(20),IW(20)
      DOUBLE PRECISION FACT
C SCHALTANGABE FUER TRANSFORMATIONSROUTINE TRANSF
      DATA IR/4,4,5,5,2,1,1,1,5,1,0,0,0,1,0,0,0,0,2,3/
C SCHALTZIFFERN FUER ANGLF-AUFGABENERKENNUNG
      DATA IW/1,1,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,0,2,1/
      DATA FACT/.0174532925D0/
C
C
    1 IF(CKDEF(ARG1).OR.CKDEF(ARG2))GO TO 30
      CALL UNPACK(ARG1,MODE1,ISIZE1,ISUB1)
      IF(MODE1.LE.0.OR.MODE1.GT.20.OR.IR(MODE1).EQ.0)GOTO 30
      CALL UNPACK(ARG2,MODE2,ISIZE2,ISUB2)
      IF(MODE2.LE.0.OR.MODE2.GT.20.OR.IR(MODE2).EQ.0)GOTO 30
      IWW=IW(MODE1)*IW(MODE2)
      GOTO (10,9,9,20),IWW
    9 GOTO 30
C   WINKEL ZWISCHEN VEKTOREN (AUCH EBENEN-NORMALEN)
   10 B1=0.D0
      B2=0.D0
      B3=0.D0
      DO 11 I=1,3
      B1=ARG1(I)*ARG1(I)+B1
      B2=ARG2(I)*ARG2(I)+B2
   11 B3=ARG1(I)*ARG2(I)+B3
      IF(B1.LT.1.D-12.OR.B2.LT.1.D-12)GOTO 30
      RES(1)=B3/DSQRT(B1)/DSQRT(B2)
      RES(1)=DMAX1(-1.D0,RES(1))
      RES(1)=DMIN1( 1.D0,RES(1))
      RES(1)=DARCOS(RES(1))
      GOTO 25
C    2-D-VERARBEITUNG,WINKEL ZUR POSITIVEN X-ACHSE
   20 CALL TRANSF (A1,ARG1,IR(MODE1),ISIZE1,0)
      CALL TRANSF (A2,ARG2,IR(MODE2),ISIZE2,0)
      SR(1)=A2(1)-A1(1)
      SR(2)=A2(2)-A1(2)
      IF(DABS(SR(1))+DABS(SR(2)).LT.D-12)GOTO 30
      RES(1)=DATAN2(SR(2),SR(1))
      IF(RES(1).LT.0.D0) RES(1)=RES(1)+6.283185306D0
   25 RES(1)=RES(1)/FACT
      RETURN
C  'MINDESTENS EINE EINGABE IST UNDEFINIERT ODER ERGEBNIS NICHT
C                                                   BERECHENBAR'
   30 CALL ERROR(80,'ANGLF   ')
      RES(1)=0.D0
      RETURN
      END
C
C              FORTRAN SUBROUTINE ANGLB
C PURPOSE      TO COMPUTE THE ANGLE BETWEEN THE POSITIVE X-AXIS AND A
C              VECTOR FROM THE CENTER OF A CIRCLE TO A GIVEN POINT
C
C LINKAGE      CALL ANGLB(RES,ARG1,ARG2)
C
C ARGUMENTS    RES     ARRAY TO CONTAIN RESULT
C              ARG1    ARRAY CONTAINING THE CANONICAL FORM
C                      OF THE INPUT
C              ARG2    ARRAY CONTAINING THE CANONICAL FORM
C                      OF THE INPUT
C
C SUBSIDIARIES TYPE                ENTRY
C              LOGICAL FUNCTION    CKDEF
C              SUBROUTINE          UNPACK
C              REAL FUNCTION       DATAN2
C              REAL FUNCTION       DARCOS
C              REAL FUNCTION       DSQRT
C              REAL FUNCTION       DABS
C              REAL FUNCTION       DMIN1
C              REAL FUNCTION       DMAX1
C              SUBROUTINE          ERROR
C              SUBROUTINE          UNDEF
C              SUBROUTINE          TRANSF
C
      SUBROUTINE ANGLB(RES,ARG1,ARG2)
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
      DIMENSION ARG1(1),ARG2(1),SR(2),A1(12),A2(12),RES(1)
      LOGICAL CKDEF
      INTEGER IR(20),IW(20)
C SCHALTANGABE FUER TRANSFORMATIONSROUTINE TRANSF
      DATA IR/4,4,5,5,2,1,1,1,5,1,0,0,0,1,0,0,0,0,2,3/
C SCHALTZIFFERN FUER ANGLB-AUFGABENERKENNUNG
      DATA IW/1,1,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,0,2,1/
C
C
    1 IF(CKDEF(ARG1).OR.CKDEF(ARG2))GO TO 30
      CALL UNPACK(ARG1,MODE1,ISIZE1,ISUB1)
      IF(MODE1.LE.0.OR.MODE1.GT.20.OR.IR(MODE1).EQ.0)GOTO 30
      CALL UNPACK(ARG2,MODE2,ISIZE2,ISUB2)
      IF(MODE2.LE.0.OR.MODE2.GT.20.OR.IR(MODE2).EQ.0)GOTO 30
      IWW=IW(MODE1)*IW(MODE2)
      GOTO (10,9,9,20),IWW
    9 GOTO 30
C   WINKEL ZWISCHEN VEKTOREN (AUCH EBENEN-NORMALEN)
   10 B1=0.D0
      B2=0.D0
      B3=0.D0
      DO 11 I=1,3
      B1=ARG1(I)*ARG1(I)+B1
      B2=ARG2(I)*ARG2(I)+B2
   11 B3=ARG1(I)*ARG2(I)+B3
      IF(B1.LT.1.D-12.OR.B2.LT.1.D-12)GOTO 30
      RES(1)=B3/DSQRT(B1)/DSQRT(B2)
      RES(1)=DMAX1(-1.D0,RES(1))
      RES(1)=DMIN1( 1.D0,RES(1))
      RES(1)=DARCOS(RES(1))
      GOTO 25
C    2-D-VERARBEITUNG,WINKEL ZUR POSITIVEN X-ACHSE
   20 CALL TRANSF (A1,ARG1,IR(MODE1),ISIZE1,0)
      CALL TRANSF (A2,ARG2,IR(MODE2),ISIZE2,0)
      SR(1)=A2(1)-A1(1)
      SR(2)=A2(2)-A1(2)
      IF(DABS(SR(1))+DABS(SR(2)).LT.D-12)GOTO 30
      RES(1)=DATAN2(SR(2),SR(1))
      IF(RES(1).LT.0.D0) RES(1)=RES(1)+6.283185306D0
   25 CONTINUE
      RETURN
C  'MINDESTENS EINE EINGABE IST UNDEFINIERT ODER ERGEBNIS NICHT
C                                                   BERECHENBAR'
   30 CALL ERROR(80,'ANGLB   ')
      RES(1)=0.D0
      RETURN
      END
