**** SOURCE FILE : M0001865.W01   ***
*
      SUBROUTINE  APT094(LDAFLG,LDAARY,CANLOC)
C
C PURPOSE      THE PURPOSE OF THIS SUBROUTINE IS TO READ OR WRITE LARGE
C              DATA ARRAY CANONICAL FORMS IN OR OUT OF UNLABELED COMMON
C              AND TO UNDEFINE ERRONEOUS L.D.A. CANONICAL FORMS.
C ARGUMENTS    LDAFLG        =1, IF WRITE
C                            =2, IF READ INTO A SPECIFIC LOCATION.(USED
C                                  TO INCORPORATE PREVIOUSLY DEFINED
C                                  CANONICAL FORMS INTO A NEWLY CREATED
C                                  CANONICAL FORM)
C                            =3, IF READ INTO NEXT AVAILABLE UNLABELED
C                                COMMON AREA.(USED TO RETRIEVE CANONICAL
C                                  FORMS FOR USE IN ARLEM MOTION
C                                  STATEMENT PROCESSSING)
C                            =4, IF DEFINITION ERROR.
C                            =5, LIKE =1 WITHOUT WRITING:FOR SPACE-
C                                RESERVATION IN BLANK COMMON FOR NEW
C                                GEOMETRY OR OTHER USE OF SPACE BEGINN-
C                                ING AT >BCANON(1)< .
C                            =6, UPDATE IN PLACE (ON FILE)
C                            =7, READ THE FIRST TWO WORDS OF DATA
C              LDAARY        SURFACE
C              CANLOC        THE LOCATION IN UNLABELED COMMON FROM WHICH
C                            TO READ OR WRITE. IF LDAFLG = 3, THEN THE
C                            CANONICAL FORM IS READ INTO THE NEXT
C                            AVAILABLE LOCATION AND ITS CANON INDEX IS
C                            RETURNED IN CANLOC.
C SUBSIDIARIES MACHINE LANGUAGE SUBROUTINE        UNDEF
C              FORTRAN SUBROUTINE                 ERROR
C
C LOCAL VARIABLES
C              LDATOP        BCANON INDEX INDICATING THE STARTING
C                            POSITION FOR THE NEXT CANONICAL FORM TO
C                            BE READ INTO CORE.
C              LDACOR        ARRAY CONTAINING THE RECORD NUMBER AND
C                            BCANON INDEX OF EACH CANONICAL FORM
C                            CURRENTLY IN CORE. THE ORDER OF LDACOR
C                            ENTRIES CORRESPONDS TO THE RELATIVE
C                            POSITION OF THEIR ASSOCIATED FORMS IN
C                            BCANON.
C              CORTOP        LDACOR INDEX INDICATING RELATIVE POSITION
C                            OF FORM BEGINNING AT LDATOP IN BCANON.
C              NOLDAS        TOTAL NUMBER OF FORMS CURRENTLY IN CORE.
C
C              RECNUM        LAST RECORD NUMBER ASSIGNED TO A FORM.
C              KANIND        CANONICAL FORM INDEX IN BLANK COMMON
C NOTES        THE FIRST 40 POSITIONS OF UNLABELED COMMON ARE RESERVED
C              FOR NON LARGE DATA ARRAY CANONICAL FORMS OF SURFACES
C              USED IN A MOTION STATEMENT AND ARE REFERED TO BY
C              REFERENCING THE CANON ARRAY. THE REMAINING SPACE IS USED
C              FOR LARGE DATA ARRAY CANONICAL FORM STORAGE AND IS
C              REFERENCED BY REFERING TO THE BCANON ARRAY. MAXLDA
C              CONTAINS THE SIZE OF BCANON.
C IMPLIED ASSUMPTION.  IF LDAFLG=1 FOR WRITE, IT IS ASSUMED THAT
C         THE CANON FORM IS LOCATED IN CANON(41) ON, EVEN THOUGH
C         LARGE DATA IS PASSED AS AN ADDRESS.
C
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)
      DOUBLE PRECISION LDAARY
C
      INCLUDE 'BLANKCOM.INC'
C
      INCLUDE 'SYMFIL.INC'
      COMMON/MAXLDA/MAXLDA
C
      INCLUDE 'TOTAL.INC'
      INCLUDE 'IDEF.INC'
C
C   STORAGE ADDRESS FUNCTION
      INTEGER ADDRSS
C---       LOCAL VARIABLES
      DIMENSION LDACOR(2,40),LDA(2),LDAARY(2),CANLOC(*)
C
      EQUIVALENCE (JJJ,AAA)
      INTEGER RECNUM,CORTOP,KANIND
      DOUBLE PRECISION JUNK
      LOGICAL CKDEF
C... SAVE LOCAL VARIABLES
      SAVE LDACOR,CORTOP,NOLDAS,KANIND
C
      DATA RECNUM,NOLDAS /2*0/
      DATA  LDACOR,MAXLDC /80*0,40/
C
C---      DETERMINE IF A READ, WRITE, OR AN UNDEFINITION.
      LDA(2)=LDAARY(2)
      IF (.NOT.CKDEF(LDAARY(1))) THEN
      LDA(1)=LDAARY(1)
      ENDIF
      GO TO (10,200,220,500,10,700,800), LDAFLG
C RETURN, WHEN WRONG LDAFLG
      RETURN
C---      WRITE NEWLY CREATED CANONICAL FORM.
C---      ASSIGN THE C.F. A RECORD NUMBER.
   10 RECNUM=-5
      CALL TAPOP(AXFILE,RECNUM)
      CANLOC(1)=RECNUM
      LDA(1) = RECNUM
C---      WRITE THE CANONICAL FORM AND UPDATE THE DICTIONARY OF CANONICA
C---      FORMS CURRENTLY IN MEMORY.
      NR=0
C---      BRANCH TO ERROR IF LDA EXCEEDED SPACE AVAILABLE
      IF(LDA(2).GE.MAXLDA) GO TO 410
      IF(LDAFLG.EQ.5) GO TO 12
      J=LDA(2)*2
C---      COMPUTE R*8 FIELD INDEX OF CANONICAL FORM IN BLANK COMMON
      KANIND=(ADDRSS(LDAARY(1))-ADDRSS(CANON(1)))/8+1
C---      REPLACE ON EXTERNAL STORAGE RECORD NUMBER BY STORAGE INDEX
      CANLOC(1)=KANIND
      CALL AWRITE(AXFILE,NR,CANLOC(1),J,IR)
C---      RESTORE RECORD NUMBER
      CANLOC(1)=LDA(1)
      IF(IR.NE.0) GOTO 409
   12 LDATOP = 1
      CORTOP = 1
C  KONTROLLE OB DIE OBERFLAECHE AN DER VERMUTETEN STELLE LIEGT
      DO 11 I=1,10
      IF(CANLOC(I).NE.BCANON(I))GOTO 235
   11 CONTINUE
      GO TO 250
C---      READ A CANONICAL FORM INTO A SPECIFIC LOCATION.
C---      READ THE CANONICAL FORM AND RETURN TO CALLER.
  200 J=LDA(2)*2
      CALL AREAD(AXFILE,LDA(1),CANLOC(1),J,IR)
      KANIND=CANLOC(1)
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5) GO TO 1100
      CANLOC(1)=LDA(1)
      GO TO 9999
C
C---      READ A CANONICAL FORM INTO THE NEXT AVAILABLE AREA.
C---      CHECK TO SEE IF CANONICAL FORM IS ALREADY IN CORE.
  220 AAA=CANLOC(1)
      IF(NOLDAS.EQ.0) GO TO 231
      DO 230 I=1,NOLDAS
      IF (LDACOR(1,I) .NE. LDA(1))  GO TO 230
      JJJ=LDACOR(2,I)+40
      CANLOC(1)=AAA
      GO TO 9999
  230 CONTINUE
  231 CONTINUE
C
C---      CANONICAL FORM IS NOT IN CORE,POSITION TAPE TO FORM RECORD
C---      READ FORM INTO NEXT AVAILABLE LOCATION IN UNLABELED COMMON
C---      CHECK IF FORM WILL FIT ABOVE LDATOP
  235 IF(MAXLDA-LDATOP.LT.LDA(2)) GO TO 400
C
C---      FORM WILL FIT
  240 JJJ=LDATOP+40
      CANLOC(1)=AAA
C   LDACOR(2,MAXLDC) KANN UEBERSPEICHERT WERDEN
      IF(CORTOP.GE.MAXLDC)GOTO 400
      J=LDA(2)*2
      CALL AREAD(AXFILE,LDA(1),BCANON(LDATOP),J,IR)
      KANIND=BCANON(LDATOP)
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5) GO TO 1100
      BCANON(LDATOP)=LDA(1)
      CORTOP = CORTOP + 1
  250 K = 0
C
C---      CHECK IF NEW CORTOP LESS THAN NOLDAS
      IF (NOLDAS - CORTOP)  320,260,260
C---      DETERMINE THE NUMBER OF FORMS ABOVE LDATOP THAT WERE OVERLAID
  260 DO 270  N = CORTOP,NOLDAS
      IF(LDACOR(2,N) .GE. (LDATOP + LDA(2)))  GO TO 280
  270 K = K + 1
      GO TO 320
C
C---      DETERMINE WHETHER LDACOR ENTRIES HAVE TO BE REPOSITIONED
  280 IF (K-1)  290,320,310
C
C---      SLIDE ENTRIES STARTING WITH CORTOP UP ONE POSITION
  290 IF(NOLDAS.LT.MAXLDC)GOTO 291
      K= 1
      GOTO 320
  291 DO 300  I = CORTOP,NOLDAS
      J = NOLDAS + CORTOP - I
      LDACOR(1,J+1) = LDACOR(1,J)
  300 LDACOR(2,J+1) = LDACOR(2,J)
      GO TO 320
C
C---      SLIDE GOOD ENTRIES ABOVE CORTOP + 1 DOWN SO THAT THE FIRST GOO
C---      ENTRY COINCIDES WITH CORTOP + 1
  310 DO 315  I = N,NOLDAS
      J = CORTOP + 1 - N + I
      LDACOR(1,J) = LDACOR(1,I)
  315 LDACOR(2,J) = LDACOR(2,I)
C
C---      INSERT NEW ENTRY IN LDACOR, ADJUST LDATOP AND NOLDAS
  320 LDACOR(1,CORTOP) = LDA(1)
      LDACOR(2,CORTOP) = LDATOP
      LDATOP = LDATOP + LDA(2)
      NOLDAS = NOLDAS - K + 1
      GO TO 9999
C---      FORM WILL NOT FIT ABOVE LDATOP. READ IT IN STARTING AT BCANON(
C
  400 CONTINUE
      IF(MAXLDA.GE.LDA(2)) GO TO 401
C
C NOT ENOUGH ROOM IN >LDA<
  410 CALL ERROR(5061,'APT094  ')
      GO TO 500
C NOT ENOUGH ROOM ON FILE 9(EXTERNAL LDA)
  409 CALL ERROR(5062,'APT094  ')
      LDATOP=1
      CORTOP=1
      NOLDAS=0
      GOTO 510
  401 CONTINUE
      JJJ=41
      CANLOC(1)=AAA
  402 J=LDA(2)*2
      CALL AREAD(AXFILE,LDA(1),BCANON(1),J,IR)
      KANIND=BCANON(1)
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5)     GO TO 1100
      BCANON(1)=LDA(1)
      LDATOP = 1
      CORTOP = 1
      GO TO 250
C
C---      DEFINITION ERROR : ELIMINATE LDA FROM LIST
C
  500 IF(NOLDAS.EQ.0)GOTO 510
      DO 503 I=1,NOLDAS
      IF(LDACOR(1,I).EQ.LDA(1))GOTO 506
  503 CONTINUE
      GOTO 510
  506 IF(I.LE.CORTOP)CORTOP=CORTOP-1
      NOLDAS=NOLDAS-1
      IF(NOLDAS.EQ.0)GOTO 510
      IF(NOLDAS.LT.I)GOTO 510
      DO 508 N=I,NOLDAS
      LDACOR(1,N) = LDACOR(1,N+1)
  508 LDACOR(2,N) = LDACOR(2,N+1)
  510 CALL UNDEF(LDAARY(1))
      GO TO 9998
C ERROR DURING READ OF A LARGE DATA ARRAY >LDA< FROM FILE 9.
C---      RECORD NUMBER ERROR
C---      PRINT ERROR MESSAGE ON VLFILE AND UNDEFINE THE CANONICAL FORM.
 1100 CALL ERROR(5060,'APT094  ')
      GO TO 500
 9999 LDAARY(1)=LDA(1)
C.
 9998 CONTINUE
      RETURN
C  UPDATE IN PLACE
  700 IF(NOLDAS.EQ.0)GOTO 730
      DO 710 I=1,NOLDAS
      IF(LDACOR(1,I).EQ.LDA(1))GOTO 720
  710 CONTINUE
      GOTO 730
C   GEOMETRIE IN CORE
  720 N=LDA(2)
      NN=LDACOR(2,I)
      DO 725 I=1,N
      BCANON(NN)=CANLOC(I)
  725 NN=NN+1
C  WRITE UPDATE
  730 J=LDA(2)*2
      NR=LDA(1)
C---      COMPUTE R*8 FIELD INDEX OF CANONICAL FORM IN BLANK COMMON
      KANIND=(ADDRSS(LDAARY(1))-ADDRSS(CANON(1)))/8+1
C---      REPLACE ON EXTERNAL STORAGE RECORD NUMBER BY STORAGE INDEX
      CANLOC(1)=KANIND
      CALL AWRITE(AXFILE,NR,CANLOC(1),J,IR)
C---      RESTORE RECORD NUMBER
      CANLOC(1)=LDA(1)
      RETURN
C---      READ SHORT
  800 J=2
      CALL AREAD(AXFILE,LDA(1),CANLOC(1),J,IR)
      KANIND=CANLOC(1)
      RETURN
      END
