**** SOURCE FILE : M0012238.V01   ***
*
      SUBROUTINE GOLPLN(J11,IRET)
C
C   ROUTINE TO TEST, IF A PLANE IS INVOLVED AND TO CALCULATE A UV VALUE
C
C
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)
C
C  CONTROL OF TEST-OUTPUT
      COMMON/SSPRT/SSPRT,SSTEST
      LOGICAL SSPRT,SSTEST
C
      COMMON/PLGOL/ID(24),OBNAM1
C
C UVCONS:    U-, V- CONSTANT, GIVEN AT  "UCONST,U" OR "VCONST,V"
      EQUIVALENCE (ID( 1),UVCONS)
C
C UVA:       START-PRAMETER, GIVEN BY "START,S"
      EQUIVALENCE (ID( 3),UVA   )
C
C UVE:       END-PARAMETER, GIVEN BY "THRU,T"
      EQUIVALENCE (ID( 5),UVE   )
C
C IART:      IART = 1   PLOTFT/SCURV,.........,PARAM,....
C            IART = 2   PLOTFT/SCURV,.........,FLOW ,....
C            IART = 3   PLOTFT/SSURF,UCONST,U,...........
C            IART = 4   PLOTFT/SSURF,VCONST,V,...........
C            IART = 5   PLOTFT/SSURF,GRID,...............
C            IART = 6   GOLOFT/SSURF,UCONST,U,...........
C            IART = 7   GOLOFT/SSURF,VCONST,V,...........
      EQUIVALENCE (ID(13),IART  )
C
C IAT:       IAT   = 0 : AT NOT PROGRAMMED
C            IAT   = 1 : AT   "AT,A",        = 2 AT   "AT,TO,PL1"
C            IAT   = 3 : AT   "AT,ON,PL1,    = 4 AT   "AT,PAST,PL1
C
      EQUIVALENCE (ID(18),IAT   )
C ISTRT:     ISTRT = 0 : START NOT PROGRAMMED
C            ISTRT = 1 : AT   "START,A",     = 2 AT   "START,TO,PL1"
C            ISTRT = 3 : AT   "START,ON,PL1, = 4 AT   "START,PAST,PL1
      EQUIVALENCE (ID(19),ISTRT )
C
C ITHRU:     ITHRU = 0 : THRU NOT PROGRAMMED
C            ITHRU = 1 : AT   "THRU,A",      = 2 AT   "THRU,TO,PL1"
C            ITHRU = 3 : AT   "THRU,ON,PL1,  = 4 AT   "THRU,PAST,PL1
      EQUIVALENCE (ID(20),ITHRU )
C
C IPL1:      CF-BEGIN OF THE "AT" OR "START" PLANE IN THE ARRAY SSCAN
      EQUIVALENCE (ID(21),IPL1  )
C
C IPL2:      CF-BEGIN OF THE  "THRU" PLANE IN THE ARRAY SSCAN
      EQUIVALENCE (ID(22),IPL2  )
C
C  COMMON TOTAL
      INCLUDE 'TOTAL.INC'
      INCLUDE 'SV.INC'
C
      INCLUDE 'IFXCOR.INC'
C
C  BLANK COMMON
      INCLUDE 'BLANKCOM.INC'
C
C  EVALUATION RESULTS
      DOUBLE PRECISION SPV(52)
C
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
C
C RETURN IF NOT >GOLOFT<
      IF(IART.NE.6.AND.IART.NE.7) RETURN
C
C LOOP OVER THE 3 POSSIBLE PLANE CONDITIONS: >AT<,>START<,>THRU<
      DO 90 I=1,3
C
C >AT< CONDITION
      IWAS=IAT
      IPL=IPL1
      IIC=ICS
      IF(I.EQ.1) GOTO 1
C
C >START< CONDITION
      IWAS=ISTRT
      IF(I.EQ.2) GOTO 1
C
C >THRU< CONDITION
      IWAS=ITHRU
      IPL=IPL2
      IIC=ICS+LSV1
C
C WITH AT CONDITION,  SET THRU PARAMETER EQUAL START PARAMETER
    1 IF(I.EQ.1.AND.IWAS.NE.0)UVE=UVA
C
C CHECK,  IF PLANE CONDITION
      IF(IWAS.LT.2.OR.IWAS.GT.4) GOTO 90
C
C PROLOG FOR >UCONST<
      IF(IART.NE.6) GOTO 10
      U=UVCONS
      DU=0.D0
      UE=U
      V=0.D0
      DV=.5D0
      VE=SSCAN(J11+9)-1.D0
      GOTO 20
C
C PROLOG FOR >VCONST<
   10 U=0.D0
      DU=.5D0
      UE=SSCAN(J11+10)-1.D0
      V=UVCONS
      DV=0.D0
      VE=V
C
C COMPUTE PLANE ORIENTATION AND SWITCH IF NECESSARY
C  FIRST TOOL TIP IS INVESTIGATED
   20 CALL GOP(1,U,V,SPV,J11,IRET)
C
C NORMALISATION OF INPUT PLANE
      VLL=DSQRT(SSCAN(IPL)**2+SSCAN(IPL+1)**2+SSCAN(IPL+2)**2)
      DO 21 J=1,4
   21 SSCAN(IPL+J-1)=SSCAN(IPL+J-1)/VLL
C
C DISTANCE OF FIRST POINT TO PLANE (DIST=AX+BY+CZ-D)
      DI  =SSCAN(IPL)*SPV(33)
     *    +SSCAN(IPL+1)*SPV(34)
     *    +SSCAN(IPL+2)*SPV(35)
     *    -SSCAN(IPL+3)
C
C INVERSION OF PLANE IF DISTANCE IS NEGETIVE
      IF(DI.GT.0.D0) GOTO 25
      DO 22 J=1,4
   22 SSCAN(IPL+J-1)=-SSCAN(IPL+J-1)
C
C PRESET OLD DISTANCE
   25 CONTINUE
      CALL CPLDST(SPV,SSCAN(IPL),TH(IIC),IWAS,ODIST,IRET)
      DIST=ODIST
      OU=U
      OV=V
      GOTO 35
C
C FIND INTERSECTION (OUTER LOOP)
C  OLD DISTANCE AND OLD PARAMETERS
   30 ODIST=DIST
      OU=U
      OV=V
C
C NEW PARAMETERS
      U=U+DU
      V=V+DV
      IF(U.GT.UE.OR.V.GT.VE) GOTO 80
      CALL GOP(1,U,V,SPV,J11,IRET)
      CALL CPLDST(SPV,SSCAN(IPL),TH(IIC),IWAS,DIST,IRET)
C
C  TOLERANCE INVESTIGATION (OUTTOL)
   35 IF(DIST.GT.TAU1(IIC)) GOTO 30
C
C  INTOL:
      IF(DIST.GE.TAU2(IIC)) GOTO 50
C
C FIND INTERSECTION (INNER LOOP): NESTED INTERVALS
   40 UM=(OU+U)/2.D0
      VM=(OV+V)/2.D0
      CALL GOP(1,UM,VM,SPV,J11,IRET)
      CALL CPLDST(SPV,SSCAN(IPL),TH(IIC),IWAS,DISTM,IRET)
C
C INSIDE OUTTOL TOLERANCE ?
      IF(DISTM.LE.TAU1(IIC)) GOTO 45
C NO
      OU=UM
      OV=VM
      ODIST=DISTM
C
C BREAK FOR UNLIMITED LOOP
      IF(ODIST-DIST.LT.1.D-5) GOTO 50
      GOTO 40
C
C INSIDE INTOL TOLERANCE ?
   45 IF(DIST.GE.TAU2(IIC)) GOTO 50
C NO
      U=UM
      V=VM
      DIST=DISTM
C
C BREAK FOR UNLIMITED LOOP
      IF(ODIST-DIST.LT.1.D-5) GOTO 50
      GOTO 40
C
C  ONE FINAL POINT FOUND
   50 IF(IART.EQ.6.AND.I.NE.3) UVA=V
      IF(IART.EQ.6.AND.I.EQ.3) UVE=V
      IF(IART.EQ.7.AND.I.NE.3) UVA=U
      IF(IART.EQ.7.AND.I.EQ.3) UVE=U
      IF(I.EQ.1) IAT=1
C
C WITH AT CONDITION,  SET THRU PARAMETER EQUAL START PARAMETER
      IF(I.EQ.1) UVE=UVA
      IF(I.EQ.2) ISTRT=1
      IF(I.EQ.3) ITHRU=1
      GOTO 90
C
C NO INTERSECTION BETWEEN GOLOFT CUTTER PATH AND PLANE FOUND
   80 CONTINUE
C
C  POINT OUTSIDE OF U/V PARAMETERS OF THE PATCH
C
C  POINT IS OUTSIDE OF THE U/V PARAMETERS OF THE PATCH.
      IF(SSTEST) CALL AERR(22220,'GOLPLN  ')
      IAERR=1
      IRET=MAX0(IRET,3)
      GOTO 90
C
   90 CONTINUE
      RETURN
      END
