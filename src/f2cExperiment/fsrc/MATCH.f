**** SOURCE FILE : M0006653.V04   ***
*
C
C              FORTRAN SUBROUTINE MATCH
C
C LINKAGE      SUBROUTINE MATCH
C
C          SUBSIDIARIES                  CALLED BY
C          TYPE          ENTRY           TYPE          ENTRY
C          SUBROUTINE    LABELZ          SUBROUTINE    INPUT
C          INTEGER FCT.  MODE            SUBROUTINE    PRO020
C          SUBROUTINE    MACLBL          SUBROUTINE    PRO026
C          SUBROUTINE    ALARM           SUBROUTINE    RECOG
C          SUBROUTINE    RETMCX          SUBROUTINE    REPLAC
C          SUBROUTINE    SETBIT
C          SUBROUTINE    HELP
C
      SUBROUTINE MATCH
C
      IMPLICIT INTEGER (A-Z)
C
C        1.    NAME TABLE AND TABLE LIMITS
C
      INCLUDE 'NAMETB.INC'
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY
C CNAMTB:      NAME TABLE OR DICTIONARY
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION
C
C        2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST
      DIMENSION STKLST(300),ARGSTK(99)
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY
      EQUIVALENCE (ARGTOP,STKLST(2))
C ARGSTK:      ARGUMENT STACK
      EQUIVALENCE (ARGSTK(1),STKLST(202))
C
C        3.    METALINGUISTIC VARIABLE CLASS CODES
C
      COMMON/CODE/CODE
      DIMENSION CODE(150),NUMBER(2),PERMID(2),LABEL(2),IMPLAB(2)
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'
      EQUIVALENCE (NUMBER(1),CODE(27))
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'
      EQUIVALENCE (PERMID(1),CODE(39))
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '
      EQUIVALENCE (LABEL(1),CODE(43))
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'
      EQUIVALENCE (IMPLAB(1),CODE(45))
C
C       22.    MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      LOGICAL ILHLT,ENTRY,NESTG
      DIMENSION MACXX1(71)
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE
      EQUIVALENCE (ILHLT,MACXX1(14))
C MAXSPS:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO
      EQUIVALENCE (MAXSPS,MACXX1(21))
C MAJWRD:      CONTAINS ACTUAL MAJOR WORD
      EQUIVALENCE (MAJWRD,MACXX1(23))
C NMLINE:      EQUALS NUMBER OF EXPRESSIONS THAT REQUIRE BRANCHING I.L.
      EQUIVALENCE (NMLINE,MACXX1(25))
C WAY:         INDICATES TYPE OF MACRO PROCESSING
      EQUIVALENCE (WAY,MACXX1(26))
C BITWDS:      NUMBER OF WORDS NEEDED FOR ALL CALL QUALITIES OF MACRO
      EQUIVALENCE (BITWDS,MACXX1(29))
C MACLNT:      TEMPORARY STORAGE FOR MCSLNT
      EQUIVALENCE (MACLNT,MACXX1(37))
C MCSLNT:      NUMBER OF MACRO VBLS IN ARGSTK FOR CURRENT EXPRESSION
      EQUIVALENCE (MCSLNT,MACXX1(38))
C MSP:         POINTER TO THE LAST ENTRY IN MAS ARRAY
      EQUIVALENCE (MSP,MACXX1(39))
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION
      EQUIVALENCE (ENTRY,MACXX1(40))
C MVEXST:      POSITION NUMBER OF MACRO VARIABLE, 0=NO MACRO VARIABLE
      EQUIVALENCE (MVEXST,MACXX1(41))
C MACTOP:      POINTER TO EXPRESSION NUMBER IN MACSPD TABLE
      EQUIVALENCE (MACTOP,MACXX1(42))
C MCSTRT:      INDEX IN MACSPD OF CURRENT CALL BEING EXAMINED
      EQUIVALENCE (MCSTRT,MACXX1(43))
C MAJOR:       CURRENT CALL ASSIGNED VALUE IF MAYWRD IS MACRO VARIABLE
      EQUIVALENCE (MAJOR,MACXX1(44))
C NESTG:       TRUE WHEN A NESTED GEOMETRIC EXPRESSION ENCOUNTERED
      EQUIVALENCE (NESTG,MACXX1(45))
C ROUTE:       CLASS CODE OF A MAJOR WORD DURING MACRO PROCESSING
      EQUIVALENCE (ROUTE,MACXX1(46))
C ROAD:        CLASS CODE OF A MAJOR WORD DURING MACRO PROCESSING
      EQUIVALENCE (ROAD,MACXX1(47))
C SAVMSP:      USED TO SAVE A POINTER TO THE MAS ARRAY
      EQUIVALENCE (SAVMSP,MACXX1(48))
C TYP:         1 WHEN AN INVALID PATTERN FOR CURRENT EXPRESSION APPEARS
      EQUIVALENCE (TYP,MACXX1(49))
C LNUSDP:      INDEX OF LAST LINUSD ENTRY
      EQUIVALENCE (LNUSDP,MACXX1(51))
C MCTOPP:      TEMPORARY STORAGE IN MATCH FOR MACTOP VALUE
      EQUIVALENCE (MCTOPP,MACXX1(52))
C LNSDDM:      DIMENSION OF LINUSD
      EQUIVALENCE (LNSDDM,MACXX1(53))
C MVARDM:      CONTAINS DIMENSION OF THE ARRAY MACVAR
      EQUIVALENCE (MVARDM,MACXX1(54))
C MASDM:       CONTAINS DIMENSION OF ARRAY MAS
      EQUIVALENCE (MASDM,MACXX1(55))
C NUMBIT:      CONTAINS NUMBER OF BITS IN A FIXED POINT WORD
      EQUIVALENCE (NUMBIT,MACXX1(56))
C MCSPDP:      POINTER TO LAST ENTRY IN MACSPD TABLE
      EQUIVALENCE (MCSPDP,MACXX1(57))
C NUMARG:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO
      EQUIVALENCE (NUMARG,MACXX1(61))
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED
      EQUIVALENCE (WHCHMN,MACXX1(63))
C MSPDDM:      CONTAINS DIMENSION OF THE ARRAY MACSPD
      EQUIVALENCE (MSPDDM,MACXX1(65))
C
C      25A.    MACRO PROCESSING ARRAYS
C
      COMMON/MACXX5/MACXX5
      DIMENSION MACXX5(135),ITMPSV(135)
C ITMPSV:      TEMPORARY STORAGE DURING FINAL MACRO PROCESSING
      EQUIVALENCE (ITMPSV(1),MACXX5(1))
C
C       26.    MACRO PROCESSING ARRAYS
C
      COMMON/MACXX6/MACXX6
      DIMENSION MACXX6(1300),MACSPD(1300)
C MACSPD:      NAMTBL POINTERS OF THE ASSIGNED VALUES FOR MACRO CALL
      EQUIVALENCE (MACSPD(1),MACXX6(1))
C
C      26A.    MACRO PROCESSING ARRAYS
C
      COMMON/MACXX7/MACXX7
      DIMENSION MACXX7(182),MACVAR(32),MAS(100),LINUSD(50)
C LINUSD:      NUMBERS OF EXPRESSIONS REQUIRING BRANCHING FOR MACROS
      EQUIVALENCE (LINUSD(1),MACXX7(1))
C MAS:         NAMTBL POINTERS OR ASSIGNED VALUES OF MACRO VBL MAJOR W.
      EQUIVALENCE (MAS(1),MACXX7(51))
C MACVAR:      POSITION NUMBER OF EACH UNIQUE MACRO VARIABLE
      EQUIVALENCE (MACVAR(1),MACXX7(151))
C
C       29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULI
      DIMENSION MODULI(2)
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS
      EQUIVALENCE (MODULO,MODULI(1))
C MODHLF:      NORMAL MODE CODE LIMIT 500
      EQUIVALENCE (MODHLF,MODULI(2))
C
C       44.    ERROR POSITION TABLE
C
      COMMON/ERRPOS/ERRPOS
      INTEGER ERRPOS,ERGSTK
      DIMENSION ERRPOS(302),ERGSTK(100)
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))
C*
C PURPOSE      TO DETERMINE WHICH EXPRESSIONS IN AN APT MACRO
C              REQUIRE BRANCHING
C
C NOTES        1.  MATCH IS ACCESSED DURING THE FIRST PASS OF
C                  FINAL MACRO PROCESSING
C              2.  FOR EACH CALL A 'STATE' BASED UPON THE KIND
C                  OF EXPRESSION ENCONTERED IS CALCULATED FOR
C                  EACH INVOLVED MACRO VARIABLE.  EVERY TIME
C                  THE CURRENT CALL STRING OF 'STATES' DIFFERS
C                  IN AT LEAST ONE POSITION FROM ALL OTHER
C                  PREVIOUS STRINGS, A NEW BRANCH IS INITIATED
C                  AND THE STRING OF 'STATES' IS STORED IN THE
C**
      LOGICAL EXTERN
      external alarm
      DATA LBRCH/0/
      DATA EXTERN/.FALSE./
      IF (NUMARG .EQ. 0) GO TO 7
C
C...     ENTRY=.TRUE. IF MATCH IS BEING ENTERED AGAIN FOR SAME
C...     PRODUCTION INDICATING A BRANCHING SITUATION EXISTS.
C
      IF(ENTRY)GO TO 99
C
C...     NMLINE=NUMBER OF CURRENT (POTENTIAL) BRANCHING EXPRESSION.
C
      NMLINE=NMLINE+1
      K1 = NUMARG
      M1 = 0
      ARGARG=ARGTOP
      DO 1 I=2,NUMARG
    1 ITMPSV(I+99)=0
C
C...     MCSLNT=NUMBER OF UNIQUE MACRO VARIABLES IN ARGSTK.
C
      MCSLNT=0
C
C...     MVEXST=POSITION NUMBER IF APT MAJOR WORD A MACRO VARIABLE.
C...     NORMALLY=0.
C
      MVEXST=0
C
C...     IF FUNCTION,NO BRANCHING REQUIRED FOR MACRO VARIABLE ARGUMENTS.
C
      IF((ARGTOP.EQ.0).OR.(WAY.EQ.3))GO TO 3
      DO 2 I=1,ARGTOP
C
C...     SAVE CONTENTS OF ARGSTK IN ITMPSV(1) THRU ITMPSV(99)
C
      ITMPSV(I)=ARGSTK(I)
C
C...     SCAN ARGSTK AND PLACE THE POSITION NUMBER OF EACH UNIQUE MACRO
C...     VARIABLE FOUND IN THE FIRST FREE POSITION OF MACVAR ARRAY.
C
      DO 2 J=2,NUMARG
      IF(MACSPD(J-1).NE.ARGSTK(I))GO TO 2
      IF(ITMPSV(J+99).NE.0)GO TO 2
      MCSLNT=MCSLNT+1
      IF(MCSLNT.LE.MVARDM)GO TO 17
   18 CALL ALARM(32,-I,8,'MATCH   ')
      CALL HELP
   17 MACVAR(MCSLNT)=J-1
      ITMPSV(J+99)=1
    2 CONTINUE
    3 MACLNT=MCSLNT
C
C...     CALL EXPRESSIONS REQUIRE NO MAJOR WORD ANALYSIS.
C
      IF(WAY.EQ.5)GO TO 6
C
C...     ROUTE=CLASS CODE OF MAJOR WORD.
C...     ROAD=MODE CODE OF MAJOR WORD.
C
      ROUTE = MODULO*(NAMTBL(MAJWRD)/MODULO)
      ROAD = NAMTBL(MAJWRD)-ROUTE
      DO 4 I=2,NUMARG
      IF(MACSPD(I-1).EQ.MAJWRD)GO TO 5
    4 CONTINUE
      GO TO 6
C
C...     STORE POSITION NUMBER OF MACRO VARIABLE MAJOR WORD IN BOTH
C...     MVEXST AND FIRST FREE CELL OF MACVAR ARRAY.
C
    5 MVEXST=I-1
C
C...     IF GEOMETRIC EXPRESSION HAS MACRO VARIABLE MAJOR WORD, THEN
C...     ISSUE DIAGNOSTIC.
C
      IF(NESTG)GO TO 62
      I=100
      IF(MCSLNT.GE.MVARDM)GO TO 18
      MACVAR(MCSLNT+1)=MVEXST
      MACLNT=MCSLNT+1
C
C...     RETURN IF NO MACRO VARIABLES INVOLVED IN EXPRESSION.
C
    6 IF(MACLNT.NE.0)GO TO 8
    7 RETURN
C
C...     EACH CALL IS EXAMINED AND COMPARED TO THE ONES PRECEDING IT TO
C...     DETERMINE WHEN AND IF CODE FOR A NEW BRANCH IS REQUIRED.
C...     MCSTRT POINTS TO CURRENT CALL ASSIGNED VALUES IN MACSPD TABLE.
C...     MSP POINTS TO LAST ENTRY IN MAS TABLE.
C
    8 MCSTRT=0
      MSP=0
    9 MCSTRT=MCSTRT+NUMARG
C
C...     IF CALLS REMAIN TO BE PROCESSED, THEN BRANCH.
C
      IF(MCSTRT.LT.MCSPDP)GO TO 10
C
C...     RESET CONTROL PARAMETERS FOR FINAL EXIT FOR THIS EXPRESSION.
C
      L=NUMARG
      ILHLT=.TRUE.
      ENTRY = .FALSE.
      M1=1
      GO TO 60
   10 TYP=0
      NRMVAL=-1
      SAVMSP=MSP+1
      ARGTOP=ARGARG
C
C...     MAJOR=CURRENT CALL ASSIGNED VALUE (MACSPD(I)) IF MAJOR WORD IS
C...     A MACRO VARIABLE. OTHERWISE MAJOR=MAJOR WORD (MAJWRD).
C
      MAJOR = MAJWRD
      IF(MVEXST.EQ.0)GO TO 13
   11 I = MVEXST + MCSTRT
      MAJOR=IABS(MACSPD(I))
C
C...     FOR EACH CALL A MACRO VARIABLE MAJOR WORD HAS EITHER ITS
C...     ASSIGNED VALUE MODE OR NAMTBL POINTER STORED IN MAS ARRAY
C...     DEPENDING UPON EXPRESSION TYPE.
C
      GO TO (101,202,202,102),WAY
  101 MAS(MSP+1) = MAJOR
      GO TO 12
  202 MAS(MSP+1)=NAMTBL(MAJOR)-ROUTE
      IF(ENTRY)GO TO 20
      EXTERN=.TRUE.
      M1=1
      GO TO 20
  102 MAS(MSP+1) = NAMTBL(MAJOR)-ROUTE
      IF (WAY.EQ.4) GOTO 12
C
C...     IF A POSTPROCESSOR OR GOLFT,GORGT,GOUP,GODOWN,GOFWD,GOBACK
C...     PROCEDURE IS ENCOUNTERED, BRANCHING ON MAJOR WORD UNNECESSARY.
C
   20 IF((MAS(MSP+1).EQ.0).OR.(MAS(MSP+1).EQ.34))MAJOR=MAJWRD
   12 ROAD=MAS(MSP+1)
      MSP=MSP+1
      IF(MSP.LT.MASDM)GO TO 13
   16 CALL ALARM(26,0,8,'MATCH   ')
      CALL HELP
C
C...     IF NO ELEMENTS OF ARGSTK ARE MACRO VARIABLES, THEN BRANCH.
C
   13 IF((ARGTOP.EQ.0).OR.(WAY.EQ.3))GO TO 51
C
C...     RESTORE CONTENTS OF ARGSTK WHICH MIGHT HAVE BEEN ALTERED IN
C...     GENERATING BRANCHING CODE FOR PRIOR CALLS.
C
      DO 14 I=1,ARGTOP
   14 ARGSTK(I)=ITMPSV(I)
      IF(MCSLNT.EQ.0)GO TO 51
C
C...     ESTABLISH 'STATE' OF EACH INVOLVED MACRO VARIABLE FOR THIS CALL
C
      DO 50 I=1,MCSLNT
      J=MACVAR(I)+MCSTRT
C
C...     PICK UP ASSIGNED VALUE POINTER.
C
      K=IABS(MACSPD(J))
C
C...     NRMVAL=1 IF AT LEAST ONE NON-NORMAL VALUE USED.
C
      IF(MACSPD(J).GE.0)NRMVAL=1
C
C...     ASSIGN INITIAL 'STATE' OF MACRO VARIABLE.
C
      MAS(MSP+1)=MODE(K)
C
C...     M=CLASS OF ASSIGNED VALUE.
C
      IF (K.LE.NAMMAX) GOTO 1100
      M = NUMBER(1)
      GOTO 1110
 1100 M = MODULO*(NAMTBL(K)/MODULO)
      L = NAMTBL(K)-M
C
C...     WAY=1 FOR GEOM, WAY=2 FOR PROC, WAY=3 FOR FUNC, WAY=4 FOR REPL,
C...     WAY=5 FOR CALL.
C
 1110 GOTO (41,15,50,71,43),WAY
   71 IF (MAS(MSP+1) .EQ. 0) GO TO 22
      IF (MAS(MSP+1) .EQ. ROAD) GO TO 50
      GO TO 22
   15 IF (ROAD.EQ.0) GOTO 50
      IF (ROAD.LT.22) GOTO 22
      IF (ROAD - 41) 26,25,22
   26 IF (ROAD-24) 24,21,44
   21 IF((M.NE.LABEL(1)).AND.(M.NE.IMPLAB(1)))GO TO 22
   23 IF (L.NE.WHCHMN) GOTO 22
      MAS(MSP+1)=200
      GO TO 50
   25 IF((MAS(MSP+1).EQ.0).OR.(MAS(MSP+1).GT.17))GO TO 22
   38 MAS(MSP+1) = 50
      GO TO 50
   24 IF (ROAD .EQ. 23) GO TO 47
      IF (MAS(MSP+1) .NE. 21) GO TO 22
      GO TO 50
   47 IF (MAS(MSP+1) .NE. 2) GO TO 22
      GO TO 50
   44 IF(MAS(MSP+1).EQ.21)GO TO 50
      IF(ROAD-34)27,29,30
   27 IF (ROAD .EQ. 25) GO TO 36
C
C...     INVALID 'STATE'. A SINGLE BRANCH FOR ALL SUCH CALLS.
C
   22 TYP=1
      GO TO 50
   36 IF(M.NE.PERMID(1))GO TO 25
      GO TO 42
   29 IF(MAS(MSP+1).NE.0)GO TO 25
      IF (M .NE. PERMID(1)) GO TO 21
      IF (L.EQ.5) L=3
      GO TO 42
   30 IF(ROAD-37)31,33,32
   31 IF(MAS(MSP+1).EQ.19)GO TO 50
      GO TO 22
   32 IF (ROAD-39) 33,46,39
   33 IF(MAS(MSP+1).EQ.20)GO TO 50
      GO TO 46
   39 IF(MAS(MSP+1).EQ.19)GO TO 50
      GO TO 46
   41 IF(MAS(MSP+1).NE.0)GO TO 50
   46 IF (M .NE. PERMID(1)) GO TO 22
   42 IF (L.EQ.0) GOTO 22
      MAS(MSP+1) = L+100
      GO TO 50
   43 MAS(MSP+1)=K
   50 MSP=MSP+1
      IF(MSP.GE.MASDM)GO TO 16
C
C...     BRANCH IF NO INVALID 'STATES' ENCOUNTERED.
C
      IF(TYP.EQ.0)GO TO 51
C
C...     SET ALL 'STATES' = 0 FOR THIS CALL.
C
   61 DO 45 I=SAVMSP,MSP
   45 MAS(I)=0
   51 J=MACVAR(MACLNT)+MCSTRT
      IF(MACSPD(J).GE.0) NRMVAL=1
      IF(MSP.NE.MACLNT)GO TO 98
C
C...     THIS PATH FOLLOWED FOR 1ST CALL SINCE NO COMPARISON CAN YET BE
C...     MADE TO DETERMINE IF BRANCHING IS NECESSARY.
C
      NRMSAV=NRMVAL
      MAJSAV=MAJOR
      IF (.NOT.EXTERN) GO TO 9
      EXTERN=.FALSE.
      GO TO 105
   98 K1=K1+NUMARG
      L=MSP-MACLNT
      K=L+1
C
C...     COMPARE 'STATES' FOR THIS CALL WITH 'STATES' FOR EACH CALL THAT
C...     INITIATED A NEW BRANCH. UPON COMPLETION OF A CALL COMPARISON
C...     M1=0 IF SAME AS SOME PREVIOUS CALL. OTHERWISE BRANCH (M1=1).
C
      DO 53 I=1,L,MACLNT
      M1 = 0
      DO 52 J=K,MSP
      N=I+J-K
   52 IF (MAS(J) .NE. MAS(N)) M1 = 1
      IF (M1 .EQ. 0) GO TO 59
   53 CONTINUE
C
C...     ENTRY=.FALSE. IF 1ST BRANCH ENCOUNTERED FOR THIS EXPRESSION.
C
      IF(ENTRY)GO TO 56
C
C...     MAXSPS KEEPS TRACK OF NUMBER OF ACTUAL BRANCHING EXPRESSIONS IN
C...     MACRO.
C
  105 MAXSPS=MAXSPS+1
C
C...     EVERY POTENTIAL BRANCHING SITUATION HAS A NUMBER ASSOCIATED
C...     WITH IT (NMLINE INCREMENTED EACH TIME). THOSE ACTUAL BRANCHING
C...     EXPRESSIONS HAVE CURRENT VALUE OF NMLINE STORED IN LINUSD ARRAY
C
      LNUSDP=LNUSDP+1
      IF(LNUSDP.LE.LNSDDM)GO TO 54
      CALL ALARM(20,0,8,'MATCH   ')
      CALL HELP
   54 LINUSD(LNUSDP)=NMLINE
C
C...     NEGATIVE OF BRANCHING EXPRESSION NUMBER STORED IN MACSPD TABLE.
C
      MACSPD(MACTOP+1)=-NMLINE
      ILHLT=.FALSE.
      NRMVAL=NRMSAV
      MAJOR=MAJSAV
      K1=2*NUMARG
      MCSTRT=NUMARG
      MSP=MACLNT
      IF(MSP.GE.MASDM)GO TO 16
      ENTRY=.TRUE.
      MACTOP=MACTOP+1
C
C...     MCTOPP IS POINTER TO EXPRESSION NUMBER IN MACSPD TABLE.
C
      MCTOPP=MACTOP
      IF(MACTOP.LT.MSPDDM)GO TO 56
   55 CALL ALARM(31,0,8,'MATCH   ')
      CALL HELP
   56 LBRCH=LBRCH+1
      CALL MACLBL(+2,-LBRCH,N)
      NAMTBL(N)=LABEL(1)
C
C...     GENERATE BRANCH LABEL COMMAND.
C
      CALL LABELZ(N)
      M=MACTOP
      MACTOP=MACTOP+BITWDS+1
      IF(MACTOP.GE.MSPDDM)GO TO 55
C
C...     STORE THE LATEST BRANCH LABEL IN THE BRANCHING HISTORY PORTION
C...     OF THE MACSPD TABLE. IF THIS BRANCH ONLY EMPLOYS NORMAL VALUES
C        (NRMVAL=-1), THEN STORE THE NEGATIVE OF THE LABEL POINTER.
C
      MACSPD(MACTOP)=NRMVAL*N
   57 J=(MACSPD(K1)-1)/NUMBIT
      N=MACSPD(K1)-NUMBIT*J
      K=M+J+1
C
C...     SET THE NTH CALL QUALITY FOR THE APPROPRIATE BRANCH.
C
      CALL SETBIT(MACSPD(K),N)
      L=MCSTRT
C
C...     UPDATE THE CLASS AND MODE FOR EACH MACRO VARIABLE TO CORRESPOND
C...     TO THE ASSIGNED VALUES FOR THE CURRENT CALL.
C
   60 DO 58 I=2,NUMARG
      J=MACSPD(I-1)
      K=IABS(MACSPD(L+1))
      NAMTBL(J) = NUMBER(1)+MODHLF
      IF(K.GT.NAMMAX)GO TO 58
      KK=NAMTBL(K)
      IF(KK-MODULO*(KK/MODULO).LT.MODHLF)KK=KK+MODHLF
      NAMTBL(J)=KK
   58 L=L+1
      IF (M1 .EQ. 0) GO TO 9
      GO TO 7
   59 MSP=MSP-MACLNT
      IF(.NOT.ENTRY)GO TO 9
C
C...     COMPUTE POSITION IN MACSPD TABLE FOR BRANCH ASSOCIATED WITH
C...     THIS CALL.
C
      M = MCTOPP+((I-1)/MACLNT)*(BITWDS+1)
      GO TO 57
C
C...     GENERATE RETURN TERMINATOR FOR BRANCH CODE.
C
   99 CALL RETMCX(2)
      GO TO 9
C
C...     1015 - SURFACE TYPE CHANGED IN NESTED GEOMETRIC DEFINITION
C
   62 CALL ALARM(1015,ERGSTK(100),8,'MATCH   ')
      GO TO 7
       END
