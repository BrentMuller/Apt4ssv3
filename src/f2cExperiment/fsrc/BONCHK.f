**** SOURCE FILE : M0001047.V02   ***
*
      SUBROUTINE BONCHK(SS,B,U,V,IFLAG,ITOP,INUM,ICKBN,IDEBUG)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C------ THIS PROGRAM CHECKS FOR A VALID BOUNDARY TRANSITION
C------ IF THE TRANSITION IS VALID, THE ROUTINE REPLACES THE
C------ CURRENT PATCH WITH A NEW ONE
C------ SS IS THE SCULPTURE SURFACE CANON ARRAY
C------ B,IFLAG,ITOP IS THE DEFINING DATA FOR THE CURRENT PATCH
C------ INUM IS THE NUMBER OF THE CURRENT PATCH RELATIVE TO SS
C------ ICKBN IS THE NUMBER OF THE BOUNDARY TO BE CHECKED
C------ U,V SHOULD BE PARAMETRIC COORDINATES ON THIS BOUNDARY
C------ IF THE TRANSITION IS VALID, ALL DATA EXCEPT SS SHOULD
C------ BE REPLACED ON TERMINATION OF THIS PROGRAM.
C------      FIRST CHECK TO SEE IF ANY PATCH AT ALL LIES ACROSS
C------      THIS BOUNDARY.
      DIMENSION B(64),IFLAG(4),ITOP(6,4)
      DIMENSION BT(64),IFLAGT(4),ITOPT(6,4)
      DIMENSION SS(*)
      DIMENSION SPV(4),CV(16),C(16)
      DATA SMAL,ONE,ZERO/1.0D-4,1.0D0,0.0D0/
C
      NP=ITOP(1,ICKBN)
      IF(ITOP(2,ICKBN).EQ.0) RETURN
C------ OTHERWISE CHECK EACH PATCH IN THE LIST
      DO 10 I=1,NP
      NCUR=ITOP(I+1,ICKBN)
      CALL LODPCH(SS,BT,IFLAGT,ITOPT,NCUR,3)
C------ CHECK THE TOPOLOGY TABLE OF NCUR FOR A MATCH WITH INUM
      DO 20 L=1,4
      NPT=ITOPT(1,L)
      IF(NPT.EQ.0) GO TO 20
      DO 30 K=1,NPT
      IF(ITOPT(K+1,L).EQ.INUM) GO TO 40
   30 CONTINUE
      GO TO 20
C------ IT IS CLEAR THAT PATCH NCUR S LTH BOUNDARY DOES LIE ON
C------ PATCH INUM S ICKBN-TH BOUNDARY.  THEREFORE, MAY A DETAILED
C------ COMPUTATION IF A CROSSOVER OCCURS AT U,V
C------ SPV IS COMPUTED AS THE CROSSOVER SPACE POINT
C------ IN CASE OF A MESH SURFACE, SKIP MOST OF THE TRANSFER LOGIC
   40 CONTINUE
      NMESH=SS(5)
      T=U
      IF((ICKBN-1)*(ICKBN-4).NE.0) T=V
C------ THEREFORE GENERATE THE NEW ACTIVE PATCH DATA
      INUM=NCUR
      DO 200 KK=1,64
      B(KK)=BT(KK)
  200 CONTINUE
      DO 210 KK=1,4
      IFLAG(KK)=IFLAGT(KK)
      ITOP(1,KK)=ITOPT(1,KK)
      NPT=ITOP(1,KK)
      DO 210 JJ=2,6
      ITOP(JJ,KK)=ITOPT(JJ,KK)
  210 CONTINUE
      ICKBN=L
      IF((ICKBN-1)*(4-ICKBN).GT.0) GO TO 220
      V=ZERO
      IF(ICKBN.EQ.4) V=ONE
      U=T
      GO TO 230
  220 U=ZERO
      IF(ICKBN.EQ.3) U=ONE
      V=T
  230 RETURN
   20 CONTINUE
   10 CONTINUE
      RETURN
      END
