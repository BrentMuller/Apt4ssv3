**** SOURCE FILE : M0002902.W03   ***
*
      SUBROUTINE SCON
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C---PURPOSE IS TO PICK UP THE DATA STREAM FROM AN SCON/ COMMAND
C--- AND DEVELOP THE RELATED DATA INTO LABELLED COMMON.
C--- THE TRANSLATED DATA IS AVAILABLE IN BLANK COMMON STARTING
C---AT LOCATION ISTART(=42) .  THE FIRST VALUE IS A FLOATING
C---WORD WHICH GIVES THE NUMBER OF PERTINENT DATA ITEMS WHICH
C---FOLLOW.  EACH APT WORD OR VARIABLE IS PRECEEDED BY ITS
C---WORD WORD IDENTIFICATION
C
      INCLUDE 'BLANKCOM.INC'
C
      LOGICAL CKDEF
C
      CHARACTER*6 WALL,WAT,WAXIS,WCLDAT,WCROSS,WCRSSP,WCS,WDS,WFEED,
     1 WIN,WINCR,WINIT,WMINUS,WNORMA,WNORMD,WNORMP,WOFF,WON,WOUT,
     2 WPARAM,WPATH,WPICKF,WPLANE,WPLUS,WPOINT,WPOSN,WPS,WSCALA,
     3 WSCURV,WSSURF,WSTEPO,WTANSP,WTO,WVECTO,WZIGZA
      CHARACTER*6 WATANG,WCUTAN,WLEAD,WLAG
      CHARACTER*6 CTEST
C
      COMMON/IBUGG/IBUG,I1,I2
      COMMON/XDS/DGEOM(4),DLIM(4),TLDIR(3),DOFSET,ITLDIR,IDTOOL,NDS
      COMMON/XPS/PGEOM(4),PSIDE,PTHICK,IPTOOL,NPS
      COMMON/XFEED/CLRPLN(4),FED(4),NCLRPL,NFEED
      COMMON/XSTEPO/SSTEP(4),NSTEPO
      COMMON/XAXIS/AXIS(3),IAXIS,NAXIS
      INCLUDE 'TAC.INC'
      INCLUDE 'ZNUMBR.INC'
C
C
C--WORD MODE VALUES IN REAL FORM AND HOLLERITH FORM.
C--THESE ARE WORDS USED IN SMIL AND SCON COMMANDS
C
      DATA AALL/50.D0/,WALL/'ALL   '/
      DATA AAT/66.D0/,WAT/'AT    '/
      DATA AAXIS/146.D0/,WAXIS/'AXIS  '/
      DATA ACLDAT/69.D0/,WCLDAT/'CLDATA'/
      DATA ACROSS/40.D0/,WCROSS/'CROSS '/
      DATA ACRSSP/137.D0/,WCRSSP/'CRSSPL'/
      DATA ACS/1.D0/,WCS/'CS    '/
      DATA ADS/1.D0/,WDS/'DS    '/
      DATA AFEED/163.D0/,WFEED/'FEED  '/
      DATA AIN/20.D0/,WIN/'IN    '/
      DATA AINCR/57.D0/,WINCR/'INCR  '/
      DATA AINIT/161.D0/,WINIT/'INIT  '/
      DATA AMINUS/41.D0/,WMINUS/'MINUS '/
      DATA ANORMA/13.D0/,WNORMA/'NORMAL'/
      DATA ANORMD/151.D0/,WNORMD/'NORMDS'/
      DATA ANORMP/152.D0/,WNORMP/'NORMPS'/
      DATA AOFF/50.D0/,WOFF/'OFF   '/
      DATA AON/3.D0/,WON/'ON    '/
      DATA AOUT/21.D0/,WOUT/'OUT   '/
      DATA APARAM/144.D0/,WPARAM/'PARAM '/
      DATA APATH/165.D0/,WPATH/'PATH  '/
      DATA APICKF/166.D0/,WPICKF/'PICKFD'/
      DATA APLANE/2.D0/,WPLANE/'PLANE '/
      DATA APLUS/42.D0/,WPLUS/'PLUS  '/
      DATA APOINT/19.D0/,WPOINT/'POINT '/
      DATA APOSN/164.D0/,WPOSN/'POSN  '/
      DATA APS/1.D0/,WPS/'PS    '/
      DATA ASCALA/21.D0/,WSCALA/'SCALAR'/
      DATA ASCURV/30.D0/,WSCURV/'SCURV '/
      DATA ASSURF/29.D0/,WSSURF/'SSURF '/
      DATA ASTEPO/162.D0/,WSTEPO/'STEPOV'/
      DATA ATANSP/136.D0/,WTANSP/'TANSPL'/
      DATA ATO/3.D0/,WTO/'TO    '/
      DATA AVECTO/20.D0/,WVECTO/'VECTOR'/
      DATA AZIGZA/61.D0/,WZIGZA/'ZIGZAG'/
      DATA AATANG/10.D0/,WATANG/'ATANGL'/
      DATA ACUTAN/71.D0/,WCUTAN/'CUTANG'/
      DATA ALEAD/74.D0/,WLEAD/'LEAD  '/
      DATA ALAG/75.D0/,WLAG/'LAG   '/
C
      DATA ZERO,ONE/0.D0,1.D0/
      DATA SMAL/1.D-38/
      DATA IBEGIN/42/,NOGOOD/-121/
      DATA NLAST/0/,NBIG/50/,IOK/121/
      DATA IRBASE/3520/
C
      IF(NCLRPL.NE.IOK) NCLRPL=NOGOOD
      ICUR=IBEGIN
      NLEN=COM(ICUR)
      NLAST=IBEGIN+NLEN-2
      COM(NLAST)=ZERO
      ICUR=ICUR+1
C****    INPUT FIELD MUST BE OF REASONABLE LENGTH
      IF(NLEN.LT.3.OR.NLEN.GT.NBIG) GO TO 995
C
   10 CONTINUE
      IF(ICUR.GE.NLAST) GO TO 998
C
      WORD=COM(ICUR)
      IF(WORD.EQ.AINIT) GO TO 100
      CALL HOLFRM(COM(ICUR+1),CTEST,1,6,NWD)
      IF(CTEST.EQ.WDS) GO TO 200
      IF(CTEST.EQ.WPS) GO TO 300
      IF(WORD.EQ.AFEED) GO TO 400
      IF(WORD.EQ.ASTEPO) GO TO 500
      IF(WORD.EQ.AAXIS) GO TO 600
C****    ERROR, WORD COMMAND WORD NOT RECOGNIZED
      GO TO 998
C
C---INIT COMMAND, FOR INTIALIZING DATA AREAS
  100 CONTINUE
      ICUR=ICUR+2
      WORD=COM(ICUR)
      IF(WORD.EQ.ADS) WORD=COM(ICUR+1)
      IALL=0
      IF(WORD.EQ.AALL) IALL=1
C
  110 CONTINUE
      CALL HOLFRM(WORD,CTEST,1,6,NWD)
      IF(CTEST.EQ.WDS .OR. IALL.EQ.1) GO TO 120
      IF(CTEST.EQ.WPS .OR. IALL.EQ.2) GO TO 130
      IF(WORD.EQ.AFEED.OR.IALL.EQ.3) GO TO 140
      IF(WORD.EQ.ASTEPO.OR.IALL.EQ.4) GO TO 150
      IF(WORD.EQ.AAXIS.OR.IALL.EQ.5) GO TO 160
      GO TO 998
  120 CONTINUE
      NDS=NOGOOD
      GO TO 190
  130 CONTINUE
      NPS=NOGOOD
      GO TO 190
  140 CONTINUE
      NFEED=NOGOOD
      GO TO 190
  150 CONTINUE
      NSTEPO=NOGOOD
      GO TO 190
  160 CONTINUE
      NAXIS=NOGOOD
      GO TO 190
C
  190 CONTINUE
      IF(IALL.NE.0) IALL=IALL+1
      IF(IALL.EQ.0) ICUR=ICUR+2
      WORD=COM(ICUR)
      IF(IALL.LT.5.AND.ICUR.LT.NLAST) GO TO 110
      IF(IALL.GT.0) ICUR=ICUR+2
      IF(ICUR.NE.NLAST) GO TO 995
C---PROCESSING FINISHED FOR INIT COMMAND
      GO TO 999
C
C---ENTRY POINT FOR DRIVE GEOMETRY INPUT
  200 CONTINUE
      NDS=NOGOOD
C---CHECK FOR NUMBER OF INPUT SCALARS TO DISTINGUISH CURV AND SURF
      ICUR=ICUR+2
      IF(COM(ICUR).EQ.ASCURV) GO TO 220
      IF(COM(ICUR).EQ.ASSURF) GO TO 260
      GO TO 998
C
C---CURVE DRIVE GEOMETRY
C-- SCON/DS,CURV,PARAM,UST,UEND,AT OR ON,CRSSPL OR VECTOR
  220 CONTINUE
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      DGEOM(1)=COM(ICUR+1)
      DGEOM(2)=COM(ICUR+2)
      DGEOM(4)=ZERO
      DGEOM(3)=ASCURV
      ICUR=ICUR+3
      IF(COM(ICUR).NE.APARAM) GO TO 998
      ICUR=ICUR+2
      IF(COM(ICUR).NE.ASCALA.OR.COM(ICUR+2).NE.ASCALA) GO TO 998
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      IF(CKDEF(COM(ICUR+3))) GO TO 997
      IF(COM(ICUR+1).GT.COM(ICUR+3)) GO TO 996
      DLIM(1)=COM(ICUR+1)
      DLIM(2)=COM(ICUR+3)
      DLIM(3)=ZERO
      DLIM(4)=ONE
      ICUR=ICUR+4
      CALL HOLFRM(COM(ICUR+1),CTEST,1,6,NWD)
      IF(COM(ICUR).NE.AAT .AND. CTEST.NE.WON) GO TO 998
      IDTOOL=0
      IF(COM(ICUR).EQ.AAT) IDTOOL=1
      ICUR=ICUR+2
      IF(COM(ICUR).NE.AVECTO.AND.COM(ICUR).NE.ACRSSP) GO TO 998
      IF(COM(ICUR).EQ.AVECTO) GO TO 230
      ITLDIR=1
      DO 240 I=1,3
  240 TLDIR(I)=ZERO
      ICUR=ICUR+2
      GO TO 290
  230 CONTINUE
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      CALL DOTF(VSQ,COM(ICUR+1),COM(ICUR+1))
      IF(VSQ.LT.SMAL) GO TO 998
      VSQ=DSQRT(VSQ)
      DO 250 I=1,3
  250 TLDIR(I)=COM(ICUR+I)/VSQ
      ITLDIR=0
      ICUR=ICUR+4
      GO TO 290
C
C--- SCON/DS,SURF,PARAM,ULO,UHI,VLO,VHI,AT OR ON, NORMAL OR VECTOR
  260 CONTINUE
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      DGEOM(1)=COM(ICUR+1)
      DGEOM(2)=COM(ICUR+2)
      DGEOM(3)=ASSURF
      DGEOM(4)=ZERO
      ICUR=ICUR+3
      IF(COM(ICUR).NE.APARAM) GO TO 998
      ICUR=ICUR+2
      DO 265 I=1,4
      JCUR=ICUR+2*I-2
      IF(COM(JCUR).NE.ASCALA) GO TO 998
      IF(CKDEF(COM(JCUR+1))) GO TO 997
      DLIM(I)=COM(JCUR+1)
  265 CONTINUE
      IF(DLIM(1).GT.DLIM(2).OR.DLIM(3).GT.DLIM(4)) GO TO 996
      ICUR=ICUR+8
C
      IDTOOL=-1
      IF(COM(ICUR).EQ.AAT) IDTOOL=1
      CALL HOLFRM(COM(ICUR+1),CTEST,1,6,NWD)
      IF(CTEST.EQ.WON) IDTOOL=0
      IF(IDTOOL.LT.0) GO TO 998
C
      ICUR=ICUR+2
      IF(COM(ICUR).EQ.ANORMA) GO TO 280
      IF(COM(ICUR).NE.AVECTO) GO TO 998
C-- VECTOR
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      ITLDIR=0
      CALL DOTF(VSQ,COM(ICUR+1),COM(ICUR+1))
      IF(VSQ.LT.SMAL) GO TO 996
      VSQ=DSQRT(VSQ)
      DO 270 I=1,3
  270 TLDIR(I)=COM(ICUR+I)/VSQ
      ICUR=ICUR+4
      GO TO 290
C
  280 CONTINUE
      ICUR=ICUR+2
C--NORMAL CASE
      ITLDIR=1
      DO 285 I=1,3
  285 TLDIR(I)=ZERO
      GO TO 290
C
  290 CONTINUE
C---      OPTIONAL DRIVE POINT OFFSET INSERTED HERE
      DOFSET=ZERO
      IF(ICUR.EQ.NLAST) GO TO 295
C---      LOOK FOR A SCALAR
      IF(COM(ICUR).NE.ASCALA) GO TO 998
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      DOFSET=COM(ICUR+1)
      ICUR=ICUR+2
      IF(ICUR.NE.NLAST) GO TO 995
  295 CONTINUE
      NDS=IOK
      GO TO 999
C
  300 CONTINUE
      NPS=NOGOOD
C---PART SURFACE SCON/PS,TO OR ON, SURF, PLUS OR MINUS, THICK
      ICUR=ICUR+2
      IPTOOL=-1
      CALL HOLFRM(COM(ICUR+1),CTEST,1,6,NWD)
      IF(CTEST.EQ.WON) IPTOOL=1
      IF(CTEST.EQ.WTO) IPTOOL=0
      IF(IPTOOL.LT.0) GO TO 998
      ICUR=ICUR+2
      IF(COM(ICUR).NE.ASSURF) GO TO 998
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      PGEOM(1)=COM(ICUR+1)
      PGEOM(2)=COM(ICUR+2)
      PGEOM(3)=ASSURF
      PGEOM(4)=ZERO
      ICUR=ICUR+3
      PSIDE=ZERO
      IF(COM(ICUR).EQ.APLUS) PSIDE=ONE
      IF(COM(ICUR).EQ.AMINUS) PSIDE=-ONE
      IF(PSIDE.EQ.ZERO) GO TO 998
      ICUR=ICUR+2
      IF(COM(ICUR).NE.ASCALA) GO TO 998
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      PTHICK=COM(ICUR+1)
      ICUR=ICUR+2
      GO TO 390
C
  390 CONTINUE
      IF(ICUR.NE.NLAST) GO TO 995
      NPS=IOK
      GO TO 999
C
  400 CONTINUE
C--- FEED RATE PROCESSING
      ICUR=ICUR+2
      IF(COM(ICUR).NE.APLANE) GO TO 430
C---SPECIAL ROUTE FOR PROCESSING PICKFD CLEARANCE PLANE
      NCLRPL=NOGOOD
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      DO 410 I=1,4
  410 CLRPLN(I)=COM(ICUR+I)
      ICUR=ICUR+5
      IF(ICUR.NE.NLAST) GO TO 995
      NCLRPL=IOK
      GO TO 999
C
  430 CONTINUE
      NFEED=NOGOOD
      DO 420 I=1,4
      NOW=ICUR+2*I-2
      IF(COM(NOW).NE.ASCALA) GO TO 998
      IF(CKDEF(COM(NOW+1))) GO TO 997
      FED(I)=COM(NOW+1)
  420 CONTINUE
      ICUR=ICUR+8
      GO TO 490
C
  490 CONTINUE
      IF(ICUR.NE.NLAST) GO TO 995
      NFEED=IOK
      GO TO 999
C
  500 CONTINUE
      NSTEPO=NOGOOD
C---STEPOVER PROCESSING
      ICUR=ICUR+2
      DO 510 I=1,4
      NOW=ICUR+2*I-2
      IF(COM(NOW).NE.ASCALA) GO TO 998
      IF(CKDEF(COM(NOW+1))) GO TO 997
      SSTEP(I)=COM(NOW+1)
  510 CONTINUE
      ICUR=ICUR+8
      GO TO 590
C
  590 CONTINUE
      IF(ICUR.NE.NLAST) GO TO 995
      NSTEPO=IOK
      GO TO 999
C
  600 CONTINUE
C---AXIS PROCESSING FOLLOWS
      NAXIS=NOGOOD
      ICUR=ICUR+2
      IF(COM(ICUR).EQ.ANORMD) GO TO 650
      IF(COM(ICUR).EQ.AVECTO) GO TO 610
      IF(COM(ICUR).EQ.AATANG) GO TO 680
      GO TO 998
  610 CONTINUE
      IF(CKDEF(COM(ICUR+1))) GO TO 997
      CALL DOTF(VSQ,COM(ICUR+1),COM(ICUR+1))
      IF(VSQ.LT.SMAL) GO TO 996
      VSQ=DSQRT(VSQ)
      DO 620 I=1,3
  620 AXIS(I)=COM(ICUR+I)/VSQ
      IAXIS=0
      ITAC=0
      ICUR=ICUR+4
      IF(COM(ICUR).NE.APLUS.AND.COM(ICUR).NE.AMINUS) GO TO 690
      ICUR=ICUR+2
      IF(COM(ICUR-2).NE.AMINUS) GO TO 690
C---REVERSE THE VECTOR DIRECTION.
      DO 670 I=1,3
  670 AXIS(I)=-AXIS(I)
      GO TO 690
C
  650 CONTINUE
      ICUR=ICUR+2
      IAXIS=1
      ITAC=0
      DO 660 I=1,3
  660 AXIS(I)=ZERO
      IF(COM(ICUR).NE.APLUS.AND.COM(ICUR).NE.AMINUS) GO TO 690
      IF(COM(ICUR).EQ.AMINUS) IAXIS=-1
      ICUR=ICUR+2
      GO TO 690
C                 PS
C.... AXIS,ATANGL,DS,ALPHA,CUTANG,BETA
  680 ICUR=ICUR+2
      CALL HOLFRM(COM(ICUR+1),CTEST,1,6,NWD)
      IF (CTEST.EQ.WDS) THEN
        IAXIS=2
        ITAC=1
        DO 682 I=1,3
         AXIS(I)=ZERO
  682   CONTINUE
      ELSE IF (CTEST.EQ.WPS) THEN
        IAXIS=0
        ITAC=2
        AXIS(1)=ZERO
        AXIS(2)=ZERO
        AXIS(3)=ONE
      ELSE
        GOTO 998
      ENDIF
           
      ICUR=ICUR+2
      IF (COM(ICUR).EQ.ASCALA) THEN
        IF (CKDEF(COM(ICUR+1))) THEN
          GOTO 997
        ELSE
          ALPHA=COM(ICUR+1)*DEGRAD
          COSA=COS(ALPHA)
          SINA=SIN(ALPHA)
          IF (COSA.LT.0) THEN
            IAXIS=-IAXIS
          ENDIF
        ENDIF
      ELSE
        GOTO 998
      ENDIF
      ICUR=ICUR+2
      IF (COM(ICUR).EQ.ACUTAN) THEN
        ICUR=ICUR+2
        IF (COM(ICUR).EQ.ALEAD) THEN
         IFLG=1
         ICUR=ICUR+2
        ELSE IF (COM(ICUR).EQ.ALAG) THEN
         IFLG=-1
         ICUR=ICUR+2
        ELSE
         IFLG=1
        ENDIF
        IF (COM(ICUR).EQ.ASCALA) THEN
          IF (CKDEF(COM(ICUR+1))) THEN
            GOTO 997
          ELSE
            BETA=COM(ICUR+1)*DEGRAD*FLOAT(IFLG)
            COSB=COS(BETA)
            SINB=SIN(BETA)
            ICUR=ICUR+2
          ENDIF
        ELSE
          GOTO 998
        ENDIF
      ELSE
        GOTO 998
      ENDIF
C
  690 CONTINUE
      IF(ICUR.NE.NLAST) GO TO 995
      NAXIS=IOK
      GO TO 999
C
  995 CONTINUE
C---ERROR, INPUT DATA FIELD OF INCORRECT LENGTH
      IRR=4
      GO TO 990
C
  996 CONTINUE
C---ERROR, INPUT PARAMETER VALUES ARE NOT LEGAL
      IRR=3
      GO TO 990
  997 CONTINUE
C---ERROR, INPUT CANON FORM IS UNDEFINED
      IRR=2
      GO TO 990
  998 CONTINUE
C---ERROR, ILLEGAL ARGUMENT IN INPUT STREAM
      IRR=1
      GO TO 990
C
  990 CONTINUE
      IRR=IRBASE+IRR
      CALL ERROR(IRR,'SCON    ')
      CALL RECORD(ISQ)
      CALL BAD(1,0,'ISEQ',ISQ)
      CALL BAD(1,0,'NLST',NLAST)
      CALL BAD(1,0,'NLEN',NLEN)
      CALL BAD(1,0,'IRR ',IRR)
      CALL BAD(1,0,'ICUR',ICUR)
      CALL BAD(-1,0,'IRBS',IRBASE)
C
      GO TO 999
C
  999 CONTINUE
      RETURN
      END
