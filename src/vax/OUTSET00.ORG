*
      SUBROUTINE OUTSET(J)
*
*  * OUTSET *  VAX-11 FORTRAN 77 SUBROUTINE   E.MCLELLAN
*
*  PURPOSE     TO SET UP PAPER TAPE CODE CONVERSION TABLE
*
*  CALLING SEQUENCE
*              CALL OUTSET(J)
*  ARGUMENT
*              J  INDICATES REQUIRED CODE
*                 =1  NAS943  ,ODD PARITY, COLUMN BINARY
*                 =2  ISO     ,EVEN PARITY,COLUMN BINARY
*                 =3  ASCII   ,NO PARITY,  NO CONVERSION
*
C
      INCLUDE (DARRAY)
C
      COMMON/PUNTAB/PUNCOD
C
C...BYTE VARIABLES IN THIS VAX IMPLEMENTATION MIGHT BE ABLE TO BE LOGICA
C...ON OTHER SYSTEMS
      BYTE PUNCOD(128)
      BYTE NAS943(128),ISO(128),ASCII(128)
*
******  NAS943 ODD PARITY COLUMN BINARY
*
      DATA NAS943/
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z3E,ZEE,ZEE,ZEE,Z80,ZEE,ZEE,
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,
     2Z10,ZEE,ZEE,Z7F,Z80,Z0B,Z70,ZEE,Z0B,Z2A,Z3E,Z70,Z3B,Z40,Z6B,Z31,
     3Z20,Z01,Z02,Z13,Z04,Z15,Z16,Z07,Z08,Z19,Z7C,Z7A,ZEE,Z7F,ZEE,ZEE,
     4Z0E,Z61,Z62,Z73,Z64,Z75,Z76,Z67,Z68,Z79,Z51,Z52,Z43,Z54,Z45,Z46,
     5Z57,Z58,Z49,Z32,Z23,Z34,Z25,Z26,Z37,Z38,Z29,ZEE,ZEE,ZEE,ZEE,ZEE,
     6ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,
     7ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE/
*
******  ISO/
*
      DATA ISO/
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z09,Z0A,ZEE,ZEE,Z8D,ZEE,ZEE,
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,
     2ZA0,ZEE,ZEE,ZA3,Z24,ZA5,ZA6,Z27,Z28,ZA9,ZAA,Z2B,ZAC,Z2D,Z2E,ZAF,
     3Z30,ZB1,ZB2,Z33,ZB4,Z35,Z36,ZB7,ZB8,Z39,Z3A,ZEE,ZEE,ZEE,ZEE,ZEE,
     4ZC0,Z41,Z42,ZC3,Z44,ZC5,ZC6,Z47,Z48,ZC9,ZCA,Z4B,ZCC,Z4D,Z4E,ZCF,
     5Z50,ZD1,ZD2,Z53,ZD4,Z55,Z56,ZD7,ZD8,Z59,Z5A,ZEE,ZEE,ZEE,ZEE,ZEE,
     6ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,
     7ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZFF/
*
******  ASCII 7 BIT NO PARITY
*
      DATA ASCII/
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z09,Z0A,ZEE,ZEE,Z0D,ZEE,ZEE,
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,
     2Z20,Z21,Z22,Z23,Z24,Z25,Z26,Z27,Z28,Z29,Z2A,Z2B,Z2C,Z2D,Z2E,Z2F,
     3Z30,Z31,Z32,Z33,Z34,Z35,Z36,Z37,Z38,Z39,Z3A,Z3B,Z3C,Z3D,Z3E,Z3F,
     4Z40,Z41,Z42,Z43,Z44,Z45,Z46,Z47,Z48,Z49,Z4A,Z4B,Z4C,Z4D,Z4E,Z4F,
     5Z50,Z51,Z52,Z53,Z54,Z55,Z56,Z57,Z58,Z59,Z5A,Z5B,Z5C,Z5D,Z5E,Z5F,
     6Z60,Z61,Z62,Z63,Z64,Z65,Z66,Z67,Z68,Z69,Z6A,Z6B,Z6C,Z6D,Z6E,Z6F,
     7Z70,Z71,Z72,Z73,Z74,Z75,Z76,Z77,Z78,Z79,Z7A,ZEE,ZEE,ZEE,ZEE,Z7F/
*
      IF (J.EQ.1) THEN
         DO 100 I=1,128
  100    PUNCOD(I)=NAS943(I)
*
      ELSE IF (J.EQ.2) THEN
         DO 200 I=1,128
  200    PUNCOD(I)=ISO(I)
*
      ELSE IF (J.EQ.3) THEN
         DO 300 I=1,128
  300    PUNCOD(I)=ASCII(I)
*
      ELSE
         CALL CFORM('**** INVALID ARGUMENT IN CALL TO OUTSET ****',
     1               DARRAY,2,44)
         CALL CPRINT(DARRAY)
         CALL ABNEND
      END IF
      RETURN
      END
