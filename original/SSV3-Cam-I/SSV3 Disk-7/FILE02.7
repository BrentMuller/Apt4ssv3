cat fi  afile02.7
C SUBSIDIARIES NONE                                                     A3040090
      SUBROUTINE APT304(RESULT,MATRX,VCTR)                              A3040100
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3040110
C     THIS ROUTINE TRANSFORMS THE CANONICAL FORM OF A VECTOR            A3040120
C     BY A GIVEN MATRIX                                                 A3040130
      DIMENSION RESULT(3), VCTR(3),VEC(3),MATRX(3,4)                    A3040140
      DOUBLE PRECISION MATRX                                            A3040150
      DO 20 I=1,3                                                       A3040160
   20 VEC(I)=VCTR(I)                                                    A3040170
      DO 70 I=1,3                                                       A3040180
      RESULT(I)=0.0D0                                                   A3040190
      DO 70 J=1,3                                                       A3040200
         RESULT(I) = RESULT(I)+VEC(J)*MATRX(I,J)                        A3040210
   70 CONTINUE                                                          A3040220
      RETURN                                                            A3040230
       END                                                              A3040240
**** SOURCE FILE : M0000422.V02   ***
*
C                                                                       A3050001
C......    FORTRAN SUBROUTINE APT305    11/69    RC                     A3050002
C PURPOSE      TO GENERATE THE TRANSFORMATION MATRIX, TMATRX.           A3050010
C LINKAGE      CALL APT305                                              A3050020
C ARGUMENTS    NONE                                                     A3050030
C SUBSIDIARIES APT306, APT308                                           A3050040
      SUBROUTINE APT305                                                 A3050050
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3050060
C                                                                       A3050070
C      THIS SUBROUTINE GENERATES TMATRX FROM AMTTAB AND TRAMAT          A3050080
C      DEPENDING ON COPY LEVEL (ICOPY) AND TRACUT (ITRAFL)              A3050090
C                                                                       A3050100
C      MLTFLG DETERMINES MATRIX MULTIPLICATION ORDER 1=POINT 0=PATTERN  A3050110
C                                                                       A3050120
C                                                                       A3050130
      COMMON /EDITOR/EDITOR/KFLAGS/KFLAGS                               A3050140
      DIMENSION EDITOR(1500),KFLAGS(5),AMTTAB(4,4,3)                    A3050150
      EQUIVALENCE  (EDITOR( 595),ICOPY) , (EDITOR(985),TMATRX),         A3050160
     1             (EDITOR(1022),TRAMAT), (EDITOR(375),MLTFLG),         A3050165
     2             (EDITOR( 287),AMTTAB(1,1,1)), (KFLAGS(5),ITRAFL)     A3050170
C                                                                       A3050180
      IF (ICOPY.EQ.0) GO TO 90                                          A3050190
      IF (MLTFLG.EQ.0) GO TO 40                                         A3050200
      GO TO (10,20,30),ICOPY                                            A3050210
   10 CALL APT308 (TMATRX,AMTTAB(1,1,1))                                A3050220
      GO TO 80                                                          A3050230
   20 CALL APT306 (TMATRX,AMTTAB(1,1,2),AMTTAB(1,1,1))                  A3050240
      GO TO 80                                                          A3050250
   30 CALL APT306 (TMATRX,AMTTAB(1,1,2),AMTTAB(1,1,1))                  A3050260
      CALL APT306 (TMATRX,AMTTAB(1,1,3),TMATRX)                         A3050270
      GO TO 80                                                          A3050280
   40 GO TO (50,60,70),ICOPY                                            A3050290
   50 CALL APT308 (TMATRX,AMTTAB(1,1,1))                                A3050300
      GO TO 80                                                          A3050310
   60 CALL APT306 (TMATRX,AMTTAB(1,1,1),AMTTAB(1,1,2))                  A3050320
      GO TO 80                                                          A3050330
   70 CALL APT306 (TMATRX,AMTTAB(1,1,1),AMTTAB(1,1,2))                  A3050340
      CALL APT306 (TMATRX,TMATRX,AMTTAB(1,1,3))                         A3050350
C                                                                       A3050355
C...     CHECK FOR TRACUT MODIFICATION OF COPY MATRIX                   A3050360
   80 IF (ITRAFL .EQ. 0) GO TO 100                                      A3050370
      CALL APT306(TMATRX,TMATRX,TRAMAT)                                 A3050380
      GO TO 100                                                         A3050390
C                                                                       A3050400
C...     CHECK FOR A TRACUT TRANSFORMATION ONLY                         A3050410
C                                                                       A3050415
   90 IF (ITRAFL .EQ. 0) GO TO 100                                      A3050420
      CALL APT308 (TMATRX,TRAMAT)                                       A3050430
C                                                                       A3050435
  100 CONTINUE                                                          A3050440
      RETURN                                                            A3050450
      END                                                               A3050460
**** SOURCE FILE : M0000423.V01   ***
*
C.....FORTRAN SUBROUTINE              APT306                12/67       A3060000
C PURPOSE      TO GENERATE THE PRODUCT MATRIX OF TWO GIVEN              A3060010
C              3X4 MATRICES.                                            A3060020
C LINKAGE      CALL APT306 (RESULT, M1, M2)                             A3060030
C ARGUMENTS    RESULT    ARRAY TO CONTAIN THE ELEMENTS OF THE           A3060040
C                        PRODUCT MATRIX                                 A3060050
C              M1        ARRAY CONTAINING THE ELEMENTS OF THE           A3060060
C                        PREMULTIPLIER MATRIX                           A3060070
C              M2        ARRAY CONTAINING THE ELEMENTS OF THE           A3060080
C                        POSTMULTIPLIER MATRIX                          A3060090
C SUBSIDIARIES NONE                                                     A3060100
      SUBROUTINE APT306 (RESULT,M1,M2)                                  A3060110
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3060120
C     THIS ROUTINE MULTIPLIES TWO MATRICES OF THREE ROWS AND FOUR       A3060130
C     COLUMNS                                                           A3060140
      DIMENSION RESULT(3,4),M1(3,4),M2(3,4),GM1(4,4),GM2(4,4),GM3(4,4)  A3060150
      DOUBLE PRECISION M1,M2                                            A3060160
      DO 50  J=1,4                                                      A3060170
      DO 50  I=1,3                                                      A3060180
      GM1 (I,J) =M1(I,J)                                                A3060190
      GM2 (I,J) =M2(I,J)                                                A3060200
   50 CONTINUE                                                          A3060210
      I=4                                                               A3060220
      DO 100 J=1,3                                                      A3060230
      GM1 (I,J)=0.0D0                                                   A3060240
      GM2 (I,J)=0.0D0                                                   A3060250
  100 CONTINUE                                                          A3060260
      GM1 (4,4)=1.0D0                                                   A3060270
      GM2 (4,4)=1.0D0                                                   A3060280
      DO 190 I=1,4                                                      A3060290
      DO 190 J=1,4                                                      A3060300
      GM3 (I,J)=0.0D0                                                   A3060310
      DO 190 K=1,4                                                      A3060320
      GM3 (I,J)= GM3 (I,J)+GM1 (I,K)*GM2 (K,J)                          A3060330
  190 CONTINUE                                                          A3060340
      DO 230 J =1,4                                                     A3060350
      DO 230 I =1,3                                                     A3060360
      RESULT (I,J) =GM3 (I,J)                                           A3060370
  230 CONTINUE                                                          A3060380
      RETURN                                                            A3060390
       END                                                              A3060400
**** SOURCE FILE : M0000424.V01   ***
*
C.....FORTRAN SUBROUTINE              APT308                12/67       A3080000
C PURPOSE      TO MOVE A 3 X 4 MATRIX FROM ONE ARRAY TO ANOTHER.        A3080010
C LINKAGE      CALL APT308 (RESULT, MATRX1).                            A3080020
C ARGUMENTS    RESULT    ARRAY TO CONTAIN THE MATRIX                    A3080030
C              MATRX1    ARRAY CONTAINING THE MATRIX WHICH IS           A3080040
C                        TO BE MOVED                                    A3080050
C SUBSIDIARIES NONE                                                     A3080060
       SUBROUTINE APT308 (RESULT,MATRX1)                                A3080070
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3080080
C      THIS ROUTINE MOVES A 3X4 MATRIX FROM ONE ARRAY IN CORE TO ANOTHERA3080090
      DIMENSION RESULT(3,4) ,MATRX1 (3,4)                               A3080100
      DOUBLE PRECISION MATRX1                                           A3080110
           DO 40 J = 1,4                                                A3080120
           DO 40 I = 1,3                                                A3080130
      RESULT (I,J) = MATRX1(I,J)                                        A3080140
   40 CONTINUE                                                          A3080150
      RETURN                                                            A3080160
       END                                                              A3080170
**** SOURCE FILE : M0011537.V07   ***
*
C                                                                       A3090001
C.....FORTRAN SUBROUTINE                   APT309                       A3090002
C PURPOSE      TO WRITE ON THE VERIFICATION LISTING THE GEOMETRIC       A3090010
C              DEFINITION ERROR MESSAGES PRODUCED BY THE                A3090020
C              DEFINITION REDUCTION SUBROUTINES.                        A3090030
C LINKAGE      CALL APT309                                              A3090040
C ARGUMENTS    NONE                                                     A3090050
C SUBSIDIARIES NONE                                                     A3090060
       SUBROUTINE APT309                                                A3090070
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3090080
C THIS ROUTINE WRITES THE GEOMETRIC DEFINITION ERROR DIAGNOSTIC MESSAGE A3090090
C ASSOCIATED WITH THE ERROR CODE IN IRECRD(4) ON THE VERIFICATION       A3090100
C LISTING TAPE. A CHECK IS MADE TO SEE THAT THE ERROR CODE DOES NOT     A3090110
C EXCEED 88.                                                            A3090120
C                                                                       A3090130
C                                                                       A3090140
      COMMON /EDITOR/ EDITOR                                            A3090150
      DIMENSION EDITOR(1500),IRECRD(256)                                A3090170
C                                                                       A3090180
      DIMENSION AREA3(250)                                              A3090181
      EQUIVALENCE (EDITOR(1500),AREA3(250))                             A3090182
      DIMENSION JRECRD(512)                                             A3090185
      DOUBLE PRECISION IRECRD                                           A3090190
      EQUIVALENCE (EDITOR(1),IRECRD(1),JRECRD(1))                       A3090200
      CHARACTER*20 IFMT1,IFMT3,IFMT4                                    A3090204
      CHARACTER*8 FMT2                                                  A3090206
C                                                                       A3090207
      INCLUDE 'DARRAY.INC'                                              A3090208
C                                                                       A3090220
      DATA IFMT4/' DEFINITION WARNING '/                                A3090227
      DIMENSION NERRLV(20)                                              A3090230
      DATA IERRN/20/,NERRLV/2,3,8,9,30,40,45,49,50,71,84,92,94,5129,6*0/A3090240
C                                                                       A3090260
      DATA IFMT1/' DEFINITION ERROR   '/                                A3090270
      DATA FMT2/'ISN NO. '/                                             A3090275
      DATA IFMT3/' INVALID ERROR CODE '/                                A3090280
      J=JRECRD(4)                                                       A3090289
      II=J/10000                                                        A3090290
      III=J-II*10000                                                    A3090292
      I=JRECRD(8)                                                       A3090293
      CALL CFORM('0',DARRAY,1,1)                                        A3090294
      CALL ICONV(J,DARRAY,2,8)                                          A3090296
      CALL CFORM('.',DARRAY,10,1)                                       A3090298
      CALL ICONV(I,DARRAY,34,4)                                         A3090300
      CALL ICONV(III,DARRAY,51,4)                                       A3090301
      CALL CFORM(FMT2,DARRAY,43,7)                                      A3090302
      CALL CFORM('FROM SUBROUTINE ',DARRAY,56,16)                       A3090303
      CALL HOLFRM(IRECRD(5),DARRAY,72,8,NWD)                            A3090304
      IF(JRECRD(8).GE.5000.AND.JRECRD(8).LE.5999) GO TO  700            A3090305
      IF(JRECRD(8).GT.98) GO TO 100                                     A3090306
      DO 800 JJ=1,IERRN                                                 A3090307
      IF(I.EQ.NERRLV(JJ)) GO TO 810                                     A3090308
  800 CONTINUE                                                          A3090309
  700 IF(JRECRD(8).EQ.5129) GO TO  810                                  A3090310
      CALL CFORM(IFMT1,DARRAY,14,20)                                    A3090311
C                                                                       A3090335
      GO TO 915                                                         A3090336
  810 CALL CFORM(IFMT4,DARRAY,14,20)                                    A3090337
C                                                                       A3090338
  915 CONTINUE                                                          A3090339
      CALL CPRINT(DARRAY)                                               A3090340
  950 CALL CLEROR(I)                                                    A3090345
C                                                                       A3090355
      RETURN                                                            A3090360
  100 CALL CFORM(IFMT3,DARRAY,14,20)                                    A3090370
      CALL CPRINT(DARRAY)                                               A3090372
C                                                                       A3090380
      GOTO 950                                                          A3090400
       END                                                              A3090410
**** SOURCE FILE : M0000426.V02   ***
*
C.....FORTRAN SUBROUTINE                   APT310                       A3100000
C PURPOSE      TO COMPARE A BCD WORD WITH THE CONTENTS OF A             A3100010
C              HOLERITH ARRAY TO DETERMINE THE PROCESSING TO            A3100020
C              BE PERFORMED.                                            A3100030
C LINKAGE      CALL APT310  (RESULT, BCD)                               A3100040
C ARGUMENTS    RESULT    INTEGER VARIABLE TO CONTAIN THE                A3100050
C                        SUBSCRIPT OF THE HOLERITH ARRAY                A3100060
C                        INDICATING THE ELEMENT OF THE ARRAY            A3100070
C                        THAT MATCHES THE INPUT WORD.                   A3100080
C              BCD       THE INPUT WORD TO BE COMPARED WITH             A3100090
C                        THE HOLERITH ARRAY.                            A3100100
C SUBSIDIARIES NONE                                                     A3100110
      SUBROUTINE APT310 (RESULT,BCD )                                   A3100120
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3100130
C     THIS ROUTINE COMPARES A BCD WORD WITH THE CONTENTS OF A HOLERITH  A3100140
C     ARRAY TO DETERMINE THE PROCESSING TO BE PERFORMED                 A3100150
      CHARACTER*6 HOLARR(25),TEST                                       A3100160
       INTEGER RESULT                                                   A3100170
      DATA  HOLARR      /'CAMERA','CLDATA','AERR  ','COPY  ','DYNDMP',  A3100180
C                            1         2      3         4        5      A3100185
     1 'FINI  ','INDEX ','INSERT','LETTER','MULTAX','OVPLOT','PARTNO',  A3100190
C        6         7         8        9       10        11       12     A3100195
     2 'PLOT  ','PPRINT','TRANS ','VTLAXS','GERR  ','TRACUT','ARLEM ',  A3100200
C        13        14       15       16       17        18       19     A3100205
     3 'HOLDPP','CLDAT ','MACHIN','CLPRNT','CUT   ','DNTCUT'/           A3100210
C         20       21       22       23       24        25              A3100215
               KNT = 26                                                 A3100220
      CALL HOLFRM(BCD,TEST,1,6,NWD)                                     A3100228
           DO 25 I = 1,25                                               A3100230
      IF (TEST .EQ. HOLARR(I)) GO TO 50                                 A3100240
   25  CONTINUE                                                         A3100250
      RESULT =KNT                                                       A3100260
      GO TO 100                                                         A3100270
   50 RESULT = I                                                        A3100280
  100 RETURN                                                            A3100290
       END                                                              A3100300
**** SOURCE FILE : M0004201.V09   ***
*
C                                                                       A3110001
C......    FORTRAN SUBROUTINE APT311    11/69    RC                     A3110002
C PURPOSE      ALTERS EXFILE POINTS AND TOOL AXIS VECTORS               A3110010
C              BY PRORATING THE DIFFERENCE BETWEEN THE                  A3110020
C              STARTING AND ENDING ANGLES ALONG THE SUM                 A3110030
C              OF CUT VECTORS FOR SWARF CUTTING.                        A3110040
C LINKAGE      CALL APT311                                              A3110050
C ARGUMENTS    NONE                                                     A3110060
C SUBSIDIARIES APT307,APT314,APT336,APT340,APT341                       A3110070
C                                                                       A3110080
      SUBROUTINE APT311                                                 A3110090
C********************************************************************   A3110100
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3110110
C***********************************************************************A3110120
C     ***** COMMON-EQUIVALENCE BLOCK VARIABLES *****                    A3110130
C                                                                       A3110140
      COMMON /EDITOR/ EDITOR                                            A3110150
      DIMENSION  EDITOR(1500)                                           A3110160
C                                                                       A3110170
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)                   A3110180
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))    A3110190
C                                                                       A3110200
C                                                                       A3110210
      EQUIVALENCE             (AREA1(1),RECORD(1)),(AREA1(1),IRECRD(1)),A3110220
     1  (AREA1(257),CURRNT),(AREA1(258),IDPLOT(1)),(AREA1(260),IPLOTI), A3110225
     2   (AREA1(261),IPX)   , (AREA1(262),IPY)   , (AREA1(263),NCAMRA), A3110230
     3   (AREA1(264),NRECNO), (AREA1(265),SEQNO) , (AREA1(266),NX)    , A3110235
     4   (AREA1(267),NY), (AREA1(268),PARTNO(1)),  (AREA1(280),PT0(1)), A3110240
     5   (AREA1(283),PTU(1)), (AREA1(286),KPLOT) ,                      A3110245
     6 (AREA1(335),IPLTAB(1)),(AREA1(375),MLTFLG), (AREA1(376),NREAD) , A3110250
     7 (AREA1(377),NNNNN(1)), (AREA1(381),NRECF) , (AREA1(382),NRECL) , A3110255
     8   (AREA1(383),NCFL)  , (AREA1(384),NPWDS) , (AREA1(385),NPTAB) , A3110260
     9   (AREA1(386),INDXR) , (AREA1(387),INDXN) , (AREA1(388),NRECN1)  A3110265
      EQUIVALENCE             (AREA1(389),NTAPE) , (AREA1(390),NCLEND), A3110270
     1 (AREA1(391),NRECLS), (AREA1(392),NTAPE1),(AREA1(393),INDTBS(1)), A3110272
     2   (AREA1(473),INDXS) , (AREA1(474),EMPTY) , (AREA1(475),ISTFLG), A3110274
     3   (AREA1(476),ICPYSW),     (AREA1(287),MATTAB(1,1,1))            A3110276
      EQUIVALENCE             (AREA1(477),SAVSEQ)                       A3110278
C                                                                       A3110280
      EQUIVALENCE      (AREA2(1),AMATRX(1,1)),     (AREA2(1),AMTR(1)) , A3110290
     1   (AREA2( 37),AN1)   , (AREA2( 38),AN2)   , (AREA2( 39),BRANCH), A3110292
     2   (AREA2( 40),CMAT(1,1)),  (AREA2(52),CNTMAT(1,1)),              A3110294
     3   (AREA2(52),CNTM(1)),  (AREA2(88),CONT(1)),                     A3110296
     4                       (AREA2(91),COUNT(1)), (AREA2( 94),ICLWAS), A3110298
     5   (AREA2( 95),ICOPY) , (AREA2( 96),INDN)  ,                      A3110300
     6   (AREA2( 99),INDTAB(1)),  (AREA2( 99),TABIND(1)),               A3110302
     7                      (AREA2(259),INDXNO(1)),(AREA2(262),IPLOTX), A3110304
     8 (AREA2(463),IPLWAS),(AREA2(464),IRECNI(1)),(AREA2(465),JCOPY)  , A3110306
     9   (AREA2(466),KCOPY) , (AREA2(467),LPRINT), (AREA2(468),MAXCOP)  A3110308
      EQUIVALENCE             (AREA2(485),TNTM(1)),(AREA2(521),VUN)   , A3110310
     1   (AREA2(469),MULTAX), (AREA2(470),NLETRS), (AREA2(471),NTAB)  , A3110312
     2   (AREA2(472),ORIGIN), (AREA2(473),PPRINT(1)),                   A3110314
     3   (AREA2(485),TMATRX(1,1)),  (AREA2(522),TRAMAT(1,1)),           A3110316
     4   (AREA2(534),NCSMAX), (AREA2(535),LVLCPY), (AREA2(536),NOCPY)   A3110318
C                                                                       A3110320
C                                                                       A3110490
      EQUIVALENCE             (AREA3(  1),AX0)   , (AREA3(  2),AX)    , A3110500
     1   (AREA3(  3),AY0)   , (AREA3(  4),AY)    , (AREA3(  5),DC)    , A3110510
     2   (AREA3(  6),DX)    , (AREA3(  7),DY)    , (AREA3(  8),DELX)  , A3110520
     3   (AREA3(  9),DELY)  , (AREA3( 10),IERR)  , (AREA3( 11),ITRUNC), A3110530
     4   (AREA3( 12),LOKATE), (AREA3( 13),MCODE) , (AREA3( 14),NX0)   , A3110540
     5   (AREA3( 15),NX1)   , (AREA3( 16),NX2)   , (AREA3( 17),NX4)   , A3110550
     6   (AREA3( 18),NX5)   , (AREA3( 19),NY0)   , (AREA3( 20),NY1)   , A3110560
     7   (AREA3( 21),NY2)   , (AREA3( 22),NY4)   , (AREA3( 23),NY5)   , A3110570
     8   (AREA3( 24),PARAM),(AREA3(25),PARRAY(1)), (AREA3( 75),PNAME) , A3110580
     9   (AREA3( 76),PPT(1)), (AREA3( 79),EMPTY2), (AREA3( 80),TL)      A3110590
      EQUIVALENCE             (AREA3( 81),X0)    , (AREA3( 82),X1)    , A3110600
     1   (AREA3( 83),X2)    , (AREA3( 84),X3)    , (AREA3( 85),XNEW)  , A3110610
     2   (AREA3( 86),Y0)    , (AREA3( 87),Y1)    , (AREA3( 88),Y2)    , A3110620
     3   (AREA3( 89),Y3)    , (AREA3( 90),YNEW)  , (AREA3( 91),EMPTY3)  A3110630
C                                                                       A3110640
C                                                                       A3110820
      DIMENSION   AMATRX(3,4),AMTR  ( 36),CMAT  (3,4),CNTMAT(3,4),      A3110830
     1CNTM  ( 36),CONT  (  3),COUNT (  3),IDPLOT(  2),INDTAB(160),      A3110840
     2INDXNO(  3),IRECNI(  3),IRECRD(256),PARRAY( 50),PARTNO( 12),      A3110850
     3PPRINT( 12),PPT   (  3),PT0   (  3),PTU   (  3),NNNNN (  4),      A3110860
     4RECORD(256),TRAMAT(3,4),TABIND(160),TMATRX(3,4),TNTM  ( 36)       A3110870
C                                                                       A3110880
C                                                                       A3110885
      INCLUDE 'KNUMBR.INC'                                              A3110916
C                                                                       A3110920
      COMMON /KFLAGS/ KFLAGS                                            A3110925
      DIMENSION  KFLAGS(5)                                              A3110930
      EQUIVALENCE             (KFLAGS( 1),CLPRT) , (KFLAGS( 2),CLWRT) , A3110935
     1   (KFLAGS( 3),CLPLOT), (KFLAGS( 4),TAPFLG), (KFLAGS( 5),ITRAFL)  A3110940
C                                                                       A3110945
      INCLUDE 'CLHOLRTH.INC'                                            A3111012
C                                                                       A3111015
      COMMON /NCFSTO/ NCFSTO,CSCALE                                     A3111020
      DIMENSION NCFSTO(3000),MATTAB(4,4,3),AMTTAB(4,4,3),IPLTAB(40)     A3111025
      EQUIVALENCE  (MATTAB(1,1,1),AMTTAB(1,1,1))                        A3111030
C                                                                       A3111035
      COMMON /VERSON/ NEWSYS,ISTAND,IMACHN,IFIRST,NUM,KONSYS(2)         A3111040
C                                                                       A3111045
C...     TYPE DECLARATIONS AND MISCELLANEOUS EQUIVALENCES               A3111050
C                                                                       A3111055
      DOUBLE PRECISION  NCFSTO, IRECRD, MATTAB, KKSTAK, INDEX           A3111060
      INTEGER  CLPRT,CLWRT,CLPLOT,CURRNT,BRANCH,PPFLAG,TAPFLG           A3111070
C                                                                       A3111075
      DIMENSION  PPSTAK(15,30), KKSTAK(15,30)                           A3111079
      EQUIVALENCE (PPSTAK(1,1),KKSTAK(1,1))                             A3111080
      DIMENSION  ALETRA(3), INDTBS(80)                                  A3111085
C                                                                       A3111090
      DIMENSION  JRECRD(512)                                            A3111100
      EQUIVALENCE  (RECORD(1),JRECRD(1)), (JRECRD(6),NUMWDS)            A3111110
C                                                                       A3111120
C...            SYSTEM I/O FILE NAMES                                   A3111130
C                                                                       A3111140
C                                                                       A3111240
C***********************************************************************A3111250
      COMMON/R5AXIS/                                                    A3111260
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,   A3111270
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,  A3111280
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,   A3111290
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,CUTTER,TEST  ,CRADUS    A3111300
      COMMON/I5AXIS/                                                    A3111310
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV             A3111320
C********************************************************************   A3111330
      CHARACTER*8 HCLDAT,HNAME,LEFT,RIGHT,ZSMALL,CTEST                  A3111332
      INTEGER ITEMP(2),BCDF                                             A3111333
      EQUIVALENCE (ITEMP(1),TEMP)                                       A3111334
      COMMON/NRECC/NRECC                                                A3111340
      DIMENSION NRECC(21)                                               A3111350
C                                                                       A3111353
      INTEGER Z4E                                                       A3111354
      PARAMETER (Z4E=1308622848)                                        A3111355
      INTEGER IPOW(8)                                                   A3111362
      EQUIVALENCE (IPOW(1),POW1),(IPOW(3),POW3)                         A3111363
      EQUIVALENCE (IPOW(5),POW6),(IPOW(7),POW7)                         A3111364
C                                                                       A3111365
C...                                                                    A3111380
      DATA LEFT,RIGHT,ZSMALL/'LEFT    ','RIGHT   ','ZSMALL  '/          A3111384
      DATA IPOW/Z4E,1,Z4E,3,Z4E,6,Z4E,7/                                A3111385
      DATA HCLDAT/'CLDATA  '/                                           A3111387
      DATA HNAME/'NONAME  '/                                            A3111388
C...                                                                    A3111390
      GO TO (10,200,300,400,500,600),IVTFLG                             A3111400
C...    PROCESS VTLAXS/ON AND INITIALIZE VARIABLES          ***** 1*****A3111410
   10 ICLWRT = CLWRT                                                    A3111420
      ICORN1 = 0                                                        A3111430
      JSUBER=0                                                          A3111440
      IFLAG1 = 0                                                        A3111450
      JFLAG = 0                                                         A3111460
      RECNOS=RECORD(2)                                                  A3111465
      NREADS=NREAD                                                      A3111467
      NTAPES=NTAPE1                                                     A3111470
      NRECCS=NRECC(NTAPE1)                                              A3111472
      ISAVE=K0                                                          A3111480
      IVTFLG=K2                                                         A3111490
      ICLPRT=CLPRT                                                      A3111500
      CLWRT=K0                                                          A3111510
      CLPRT=K0                                                          A3111520
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)                              A3111528
      IF(CTEST.EQ.ON) GO TO 40                                          A3111530
      IF(CTEST.EQ.OFF) GO TO 30                                         A3111540
   20 JSUBER=30001                                                      A3111550
      GOTO 990                                                          A3111560
   30 JSUBER=30002                                                      A3111570
      GO TO 990                                                         A3111580
C...    CHECK FOR FLOATING POINT NUMBERS                                A3111590
   40 DO 50 I=8,12,2                                                    A3111600
      IF(IRECRD(I).NE.K1) GO TO 20                                      A3111610
   50 CONTINUE                                                          A3111620
C...    GET STARTING ANGLE                                              A3111630
      STANG=RECORD(9)/57.2957795131                                     A3111640
C...    IS TILT RIGHT OR LEFT                                           A3111650
      CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)                              A3111658
      IF(CTEST.EQ.LEFT) GO TO 60                                        A3111660
      IF(CTEST.NE.RIGHT) GO TO 20                                       A3111670
      STANG=-STANG                                                      A3111680
C...    STORE HALF CUTTER DIAMETER AND CORNER RADIUS                    A3111690
   60 CUTTER=.5*DABS(RECORD(11))                                        A3111700
      CRADUS=RECORD(13)                                                 A3111710
      IF(CUTTER.GE.CRADUS) GO TO 70                                     A3111720
      JSUBER=30008                                                      A3111730
C...    ERROR 30008 - CORNER RADIUS IS GREATER THAN THE CUTTER RADIUS.  A3111740
      GOTO 990                                                          A3111750
C...    IS CUTTER ORIENTATION RIGHT OR LEFT                             A3111760
   70 ZUN=1.0                                                           A3111770
      CALL HOLFRM(RECORD(15),CTEST,1,8,NWD)                             A3111778
      IF(CTEST.EQ.RIGHT) GO TO 80                                       A3111780
      IF(CTEST.NE.LEFT) GO TO 20                                        A3111790
      ZUN=-1.0                                                          A3111800
   80 YUN=0.                                                            A3111810
      XUN= 0.                                                           A3111820
      IABOVE=0                                                          A3111830
C...    LOOK FOR ZSMALL                                                 A3111840
      IF(NUMWDS-14) 110,90,20                                           A3111850
   90 CALL HOLFRM(RECORD(17),CTEST,1,8,NWD)                             A3111858
      IF(CTEST.NE.ZSMALL) GO TO 20                                      A3111860
      IF(CRADUS.EQ.0.) GO TO 100                                        A3111870
      JSUBER=30009                                                      A3111880
C...    ERROR 30009 - CORNER RADIUS MUST BE ZERO WHEN USING ZSMALL.     A3111890
      GOTO 990                                                          A3111900
C...    SET IABOVE=1 FOR ZSMALL, =0 FOR NOT                             A3111910
  100 IABOVE=1                                                          A3111920
  110 TLNGTH=0.                                                         A3111930
      X1=XSTART                                                         A3111940
      Y1=YSTART                                                         A3111950
      Z1=ZSTART                                                         A3111960
      XLM = XSTART                                                      A3111970
      YLM = YSTART                                                      A3111980
      ZLM = ZSTART                                                      A3111990
      XSAVE=XSTART                                                      A3112000
      YSAVE=YSTART                                                      A3112010
      ZSAVE=ZSTART                                                      A3112020
C...    CHECK FOR PREVIOUS MOTION RECORD                                A3112060
      IF(NRECEX.GT.K0) RETURN                                           A3112070
      JSUBER=30005                                                      A3112080
C...    ERROR 30005 - A VTLAXS COMMAND WAS GIVEN WITHOUT A              A3112090
C...               PREVIOUS MOTION OR FROM COMMAND.                     A3112100
      GOTO 990                                                          A3112110
C...                                                                    A3112120
C...                                                                    A3112130
C...                                                                    A3112140
C...                                                                    A3112150
  200 IF(ISAVE.EQ.K1) GO TO 210                                         A3112160
      ISAVE=K1                                                          A3112170
      JFLAG=K1                                                          A3112180
      X2=RECORD(5)                                                      A3112190
      Y2=RECORD(6)                                                      A3112200
      Z2=RECORD(7)                                                      A3112210
C...    CALCULATE TOTAL LENGTH OF MOVES                                 A3112220
  210 DO 220 I=5,NUMWDS,7                                               A3112230
      XD=RECORD(I)-X1                                                   A3112240
      YD=RECORD(I+1)-Y1                                                 A3112250
      ZD=RECORD(I+2)-Z1                                                 A3112260
      TLNGTH=TLNGTH+DSQRT(XD**2+YD**2+ZD**2)                            A3112270
      XLM = X1                                                          A3112280
      YLM = Y1                                                          A3112290
      ZLM = Z1                                                          A3112300
      X1=RECORD(I)                                                      A3112310
      Y1=RECORD(I+1)                                                    A3112320
      Z1=RECORD(I+2)                                                    A3112330
      IF(IFLAG1.EQ.K0) GO TO 220                                        A3112340
      IFLAG1=K0                                                         A3112350
      XP3 = X1                                                          A3112360
      YP3 = Y1                                                          A3112370
      ZP3 = Z1                                                          A3112380
  220 CONTINUE                                                          A3112390
      RETURN                                                            A3112400
C...                                                                    A3112410
C...                                                                    A3112420
C...                                                                    A3112430
C...    IS THIS VTLAXS/OFF                                              A3112440
  300 CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)                              A3112448
      IF(CTEST.EQ.OFF) GO TO 310                                        A3112450
      IF(CTEST.NE.ON) GO TO 20                                          A3112460
      JSUBER=30003                                                      A3112470
C...    ERROR 30003 - TWO VTLAXS/ON COMMANDS GIVEN WITHOUT A            A3112480
C                     VTLAXS/OFF  BETWEEN THEM.                         A3112490
      GOTO 990                                                          A3112500
C...    VTLAXS/OFF. SAVE ENDING ANGLE                                   A3112510
  310 IRECSV=NRECC(1)                                                   A3112520
      IF(IRECRD(8).NE.K1) GO TO 20                                      A3112530
      ENDANG=RECORD(9)/57.2957795131                                    A3112540
      IE=NRECC(1)+K1                                                    A3112550
C...    IS TILT RIGHT OR LEFT                                           A3112560
      CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)                              A3112568
      IF(CTEST.EQ.LEFT) GO TO 320                                       A3112570
      IF(CTEST.NE.RIGHT) GO TO 20                                       A3112580
      ENDANG=-ENDANG                                                    A3112590
  320 DANG=ENDANG-STANG                                                 A3112600
      DLNGTH=0.0                                                        A3112610
      IF(JFLAG.EQ.K1) GO TO 330                                         A3112620
      JSUBER=30010                                                      A3112630
C...    ERROR 30010 - NO MOTION BETWEEN A VTLAXS/ON AND VTLAXS/OFF      A3112640
      GOTO 990                                                          A3112650
C...                                                                    A3112660
C...                                                                    A3112670
C...                                                                    A3112680
C...                                                                    A3112690
C...    CALCULATE VTLAXS REVISION OF POINT JUST PRIOR       ***** 5*****A3112700
C...    TO VTLAXS/ON                                                    A3112710
  330 X1=XSAVE                                                          A3112720
      Y1=YSAVE                                                          A3112730
      Z1=ZSAVE                                                          A3112740
      TSIN=DSIN(STANG)                                                  A3112750
      TSIN1 =DABS(TSIN)                                                 A3112760
      TCOS=DCOS(STANG)                                                  A3112770
      XCV=X2-X1                                                         A3112780
      YCV=Y2-Y1                                                         A3112790
      ZCV=Z2-Z1                                                         A3112800
      X2=X1                                                             A3112810
      Y2=Y1                                                             A3112820
      Z2=Z1                                                             A3112830
      CALL APT341                                                       A3112840
      IF(JSUBER.NE.K0) GO TO 990                                        A3112850
C...    POSITION EXFILE TO THE MOTION RECORD PRIOR                      A3112860
C...    TO THE VTLAXS/ON STATEMENT                                      A3112870
      CLWRT=ICLWRT                                                      A3112875
      CLPRT=ICLPRT                                                      A3112880
      IVTFLG=6                                                          A3112890
      ITEMP(1)=BCDF(HCLDAT(1:4))                                        A3112896
      ITEMP(2)=BCDF(HCLDAT(5:8))                                        A3112898
      RECORD(1)=TEMP                                                    A3112900
      RECORD(2)=RECNOS                                                  A3112910
      RECORD(3)=POW6                                                    A3112920
      RECORD(4)=POW1                                                    A3112930
      ITEMP(1)=BCDF(GOTO(1:4))                                          A3112936
      ITEMP(2)=BCDF(GOTO(5:8))                                          A3112937
      RECORD(5)=TEMP                                                    A3112938
      RECORD(6) = 0.0                                                   A3112939
      ITEMP(1)=BCDF(HNAME(1:4))                                         A3112940
      ITEMP(2)=BCDF(HNAME(5:8))                                         A3112941
      RECORD(7)=TEMP                                                    A3112942
      RECORD(8)=0.0                                                     A3112943
      RECORD(9)=0.0                                                     A3112944
      BRANCH =2                                                         A3112945
      RETURN                                                            A3112950
C                                                                       A3112960
C...   GENERATE FIRST POINT OF VTLAXIS                                  A3112970
C                                                                       A3112980
  600 NREAD = NREADS                                                    A3112990
      NTAPE1=NTAPES                                                     A3113000
      NRECC(NTAPE1)=NRECCS-1                                            A3113010
      RECORD(3)=POW7                                                    A3113020
      RECORD(4)=POW3                                                    A3113030
      RECORD(5)=XCC                                                     A3113040
      RECORD(6)=YCC                                                     A3113050
      RECORD(7)=ZCC                                                     A3113060
      RECORD(8)=XTA                                                     A3113070
      RECORD(9)=YTA                                                     A3113080
      RECORD(10)=ZTA                                                    A3113090
      IVTFLG=4                                                          A3113100
      BRANCH=2                                                          A3113110
      RETURN                                                            A3113120
C...                                                                    A3113130
C...    PROCESS RECORDS AFTER VTLAXS/ON.                    ***** 6*****A3113140
  400 CALL HOLFRM(ORIGIN,CTEST,1,8,NWD)                                 A3113148
      IF(CTEST.NE.FROM) GOTO 410                                        A3113150
C...    FROM                                                            A3113160
      JSUBER=30004                                                      A3113170
C...    ERROR 30004 - A FROM COMMAND WAS GIVEN BETWEEN A VTLAXS/ON      A3113180
C...               COMMAND AND ITS CORRESPONDING VTLAXS/OFF COMMAND.    A3113190
      GOTO 990                                                          A3113200
  410 DO 420 I=5,NUMWDS,7                                               A3113210
      X2=RECORD(I)                                                      A3113220
      Y2=RECORD(I+1)                                                    A3113230
      Z2=RECORD(I+2)                                                    A3113240
C...    CALCULATE NEW CUTTER LOCATION AND TLAXIS (GOTO)                 A3113250
      CALL APT340                                                       A3113260
      IF(JSUBER.NE.K0) GO TO 990                                        A3113270
      RECORD(I)=XCC                                                     A3113280
      RECORD(I+1)=YCC                                                   A3113290
      RECORD(I+2)=ZCC                                                   A3113300
      RECORD(I+3)=XTA                                                   A3113310
      RECORD(I+4)=YTA                                                   A3113320
      RECORD(I+5)=ZTA                                                   A3113330
      X1=X2                                                             A3113340
      Y1=Y2                                                             A3113350
  420 Z1=Z2                                                             A3113360
      RETURN                                                            A3113370
C...                                                                    A3113380
C...                                                                    A3113390
C...                                                                    A3113400
  500 CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)                              A3113408
      IF(CTEST.EQ.OFF) GO TO 510                                        A3113410
      IVTFLG=K4                                                         A3113420
      RETURN                                                            A3113430
  510 IVTFLG=K1                                                         A3113440
      RETURN                                                            A3113450
  990 CALL APT336(JSUBER,'APT311  ')                                    A3113460
C...    POSITION EXFILE TO THE RECORD FOLLOWING VTLAXS/ON               A3113470
      IVTFLG=K1                                                         A3113500
      CLWRT=ICLWRT                                                      A3113510
      CLPRT=ICLPRT                                                      A3113520
      RETURN                                                            A3113530
      END                                                               A3113540
**** SOURCE FILE : M0000428.V05   ***
*
C                                                                       A3120001
C.....FORTRAN SUBROUTINE                   APT312                       A3120002
C PURPOSE      TO BLOCK AND WRITE CLFILE AND TO AUGMENT EACH            A3120010
C              RECORD WRITTEN BY A UNIQUE SEQUENCE NUMBER.              A3120020
C LINKAGE      CALL APT312                                              A3120030
C ARGUMENTS    NONE                                                     A3120040
C SUBSIDIARIES NONE                                                     A3120050
      SUBROUTINE APT312                                                 A3120060
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3120070
C                                                                       A3120080
C       THIS ROUTINE BLOCKS AND WRITES CLFILE FROM RECORD               A3120090
C                                                                       A3120100
      COMMON /EDITOR/EDITOR                                             A3120110
      DIMENSION  EDITOR(1500),RECORD(256),IRECRD(256),JRECRD(512)       A3120120
      DOUBLE PRECISION IRECRD                                           A3120130
      EQUIVALENCE  (EDITOR(1),IRECRD(1),RECORD(1),JRECRD(1))            A3120140
      EQUIVALENCE  (EDITOR(388),NRECN1), (JRECRD(6),NUMWDS)             A3120150
      EQUIVALENCE (EDITOR(477),SAVSEQ)                                  A3120152
      CHARACTER*8 AERR,TEST                                             A3120162
      CHARACTER*4 KFINI,ATEST                                           A3120164
C                                                                       A3120165
C...            SYSTEM I/O FILE NAMES                                   A3120170
C                                                                       A3120175
      INCLUDE 'SYMFIL.INC'                                              A3120183
      INTEGER EBUFF(516)                                                A3120196
      DATA K/2/,N/0/,KFINI/'FINI'/,EBUFF(1)/1/                          A3120197
      DATA AERR /'AERR    '/                                            A3120198
C                                                                       A3120220
      CALL HOLFRM(RECORD(1),TEST,1,8,NWD)                               A3120221
      IF (TEST .NE. AERR) GO TO 10                                      A3120222
      IREC=JRECRD(4)                                                    A3120224
      GO TO 20                                                          A3120226
C                                                                       A3120228
   10 IREC=(JRECRD(4))/10000                                            A3120230
      IREC=JRECRD(4)-IREC*10000                                         A3120240
      IREC=IREC+NRECN1*10000                                            A3120250
      JRECRD(4)=IREC                                                    A3120260
      SAVSEQ=IRECRD(2)                                                  A3120265
   20 NRECN1=NRECN1+1                                                   A3120270
C.... IF APT4 TYPE POST PROCESSOR USE FORTRAN READ STATEMENT,           A3120271
C     USE NEXT FORTRAN WRITE                                            A3120272
C     WRITE(CLFILE) RECORD(1),IPOW,IREC,IPOW,NUMWDS,                    A3120273
C    1  (RECORD(I+3),I=1,NUMWDS)                                        A3120274
C..... IF APT4 TYPE POST PROCESSOR USE APT4 I/O,                        A3120275
C      USE NEXT APT4 I/O WRITE                                          A3120276
      J=(NUMWDS+3)*2                                                    A3120277
C                                                                       A3120280
      IF(K+J.GT.514) GO TO 101                                          A3120290
  110 N = N + 1                                                         A3120300
      EBUFF(K+1) = N                                                    A3120310
      EBUFF(K+2) = J                                                    A3120320
      K = K + 2                                                         A3120330
      DO 120 I = 1,J                                                    A3120340
      K = K + 1                                                         A3120350
  120 EBUFF(K) = JRECRD(I)                                              A3120360
      CALL HOLFRM(JRECRD(1),ATEST,1,4,NWD)                              A3120368
      IF(ATEST.EQ.KFINI) GO TO 130                                      A3120370
      RETURN                                                            A3120380
  101 EBUFF(2) = N                                                      A3120390
      NR = 0                                                            A3120400
      CALL AWRITE(CLFILE,NR,EBUFF,K,IR)                                 A3120410
      K = 2                                                             A3120420
      EBUFF(1) = N + 1                                                  A3120430
      GO TO 110                                                         A3120440
  130 EBUFF(2) = N                                                      A3120450
      NR = 0                                                            A3120460
      CALL AWRITE(CLFILE,NR,EBUFF,K,IR)                                 A3120470
      RETURN                                                            A3120480
      END                                                               A3120490
**** SOURCE FILE : M0000429.V03   ***
*
C                                                                       A3130001
C.....FORTRAN SUBROUTINE              APT313                12/67       A3130002
C PURPOSE      TO TERMINATE WRITING OF CLFILE AT THE END OF             A3130010
C              THE DATA ON CLFILE.                                      A3130020
C LINKAGE      CALL APT313                                              A3130030
C ARGUMENTS    NONE                                                     A3130040
C SUBSIDIARIES NONE                                                     A3130050
      SUBROUTINE APT313                                                 A3130060
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3130070
C                                                                       A3130080
C...            SYSTEM I/O FILE NAMES                                   A3130085
C                                                                       A3130090
      INCLUDE 'SYMFIL.INC'                                              A3130101
C                                                                       A3130102
C       THIS ROUTINE TERMINATES WRITING OF CLFILE                       A3130140
C                                                                       A3130150
      CALL TAPOP (CLFILE,-2)                                            A3130155
C     ENDFILE                                                           A3130160
C     REWIND CLFILE                                                     A3130165
      RETURN                                                            A3130170
      END                                                               A3130180
**** SOURCE FILE : M0002942.V03   ***
*
C                                                                       A3140001
C.....FORTRAN SUBROUTINE                   APT314                       A3140002
C PURPOSE      TO READ EXFILE OR AN OLD CLFILE AND PLACE THE            A3140010
C              RECORD IN THE ARRAY RECORD.                              A3140020
C LINKAGE      CALL APT314                                              A3140030
C ARGUMENTS    NONE                                                     A3140040
C SUBSIDIARIES NONE                                                     A3140050
      SUBROUTINE APT314 (NTAPE,NREC)                                    A3140060
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3140070
C                                                                       A3140080
C       THIS SUBROUTINE READS AND UNBLOCKS CLFILE INTO RECORD           A3140090
C                                                                       A3140100
      COMMON /EDITOR/EDITOR                                             A3140110
      DIMENSION  EDITOR(1500),RECORD(256),IRECRD(256),JRECRD(512)       A3140120
      DOUBLE PRECISION IRECRD                                           A3140130
      EQUIVALENCE  (EDITOR(1),IRECRD(1),RECORD(1),JRECRD(1))            A3140140
C                                                                       A3140150
      INTEGER EBUFF(516)                                                A3140160
      IF(NREC.EQ.0)NREC=1                                               A3140165
      IF(NREC.NE.-1) GO TO 100                                          A3140170
      N=0                                                               A3140180
      NB=0                                                              A3140190
      M=0                                                               A3140200
      K=3                                                               A3140210
      RETURN                                                            A3140212
C                                                                       A3140214
  100 IF(NREC.GT.M) GO TO 10                                            A3140216
      IF(NREC.LT.N) GO TO 20                                            A3140218
      IF(NREC.EQ.EBUFF(K)) GO TO 30                                     A3140220
      K=3                                                               A3140222
    3 IF(NREC.EQ.EBUFF(K)) GO TO 30                                     A3140224
      K=K+EBUFF(K+1)+2                                                  A3140226
      IF(K.GT.516) CALL HELP                                            A3140228
      GO TO 3                                                           A3140230
   30 K=K+1                                                             A3140231
      L=EBUFF(K)                                                        A3140232
      DO 31 I=1,L                                                       A3140234
   31 JRECRD(I)=EBUFF(K+I)                                              A3140236
      K=K+L+1                                                           A3140240
      RETURN                                                            A3140242
   10 NB=NB+1                                                           A3140246
   15 K=516                                                             A3140248
      CALL AREAD(NTAPE,NB,EBUFF,K,IR)                                   A3140250
      K=3                                                               A3140252
      N=EBUFF(1)                                                        A3140254
      M=EBUFF(2)                                                        A3140256
      GO TO 100                                                         A3140258
   20 NB=NB-1                                                           A3140260
      GO TO 15                                                          A3140262
      END                                                               A3140270
**** SOURCE FILE : M0000431.V02   ***
*
C                                                                       A3150001
C.....FORTRAN SUBROUTINE              APT315                12/67       A3150002
C PURPOSE      TO NORMALIZE A GIVEN VECTOR.                             A3150010
C LINKAGE      CALL APT315 (B,C)                                        A3150020
C ARGUMENTS    B    ARRAY TO CONTAIN THE NORMALIZED VECTOR              A3150030
C              C    ARRAY CONTAINING THE VECTOR TO BE NORMALIZED        A3150040
C SUBSIDIARIES NONE                                                     A3150050
      SUBROUTINE APT315 (B,C)                                           A3150060
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3150070
C                                                                       A3150080
C      NORM NORMALIZES A VECTOR V---NORM= VX/V + VY/V + VZ/V            A3150090
      DIMENSION A(3),B(3),C(3)                                          A3150100
           DO 10 I = 1,3                                                A3150110
 10           A(I) = C(I)                                               A3150120
      S = DSQRT(A(1)*A(1)+A(2)*A(2)+A(3)*A(3))                          A3150130
      IF (S .LT. 0.000001D0)  S=1.0                                     A3150135
C                                                                       A3150140
       DO 2  I=1,3                                                      A3150150
       B(I)= A(I)/S                                                     A3150160
      IF ((DABS(B(I)))-0.000001D0) 1,1,2                                A3150170
 1     B(I)=0.0                                                         A3150180
 2     CONTINUE                                                         A3150190
       RETURN                                                           A3150200
       END                                                              A3150210
**** SOURCE FILE : M0000607.V02   ***
*
C                                                                       A3300010
C                                                                       A3300020
C.....  FORTRAN SUBROUTINE  APT330                                      A3300030
C  PURPOSE     TO PRINT DYNDMP INFORMATION                              A3300040
C  LINKAGE     CALL APT330 (J,N(1),N(2),N(3),N(4))                      A3300050
C                                                                       A3300060
C  ARGUMENTS   J     INDEX TO POINT SUBROUTINE NAME AND DYNDMP NUMBER.  A3300070
C                    IF J IS -1, IT INDICATES CONTINUATION CALL.        A3300080
C              N(K)  INDEX TO POINT PARAMETER NAME AND ITS VALUE.       A3300090
C                                                                       A3300100
      SUBROUTINE APT330 (J,N1,N2,N3,N4)                                 A3300110
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A3300120
      COMMON /EDITOR/ EDITOR                                            A3300130
      DIMENSION EDITOR(1500),ED(1500),IED(3000),AREA3(250)              A3300140
      EQUIVALENCE (EDITOR(1500),AREA3(250))                             A3300150
      EQUIVALENCE (EDITOR(1),ED(1),IED(1))                              A3300160
      DIMENSION NN(4)                                                   A3300180
      CHARACTER*4 NMB(50)                                               A3300184
      CHARACTER*8 NAME(131),SUBNAM(50),HDYND                            A3300190
C                                                                       A3300192
      INCLUDE 'DARRAY.INC'                                              A3300194
C                                                                       A3300198
      DATA HDYND/'DYNDMP  '/                                            A3300200
      DATA NAME(  2)/'NUMBER= '/                                        A3300210
      DATA NAME(  4)/'DP=     '/                                        A3300220
      DATA NAME(  5)/'DPI=    '/                                        A3300230
      DATA NAME(  6)/'FLIPCK= '/                                        A3300240
      DATA NAME(  7)/'IAMDCT= '/                                        A3300250
      DATA NAME(  8)/'IAUTPS= '/                                        A3300260
      DATA NAME(  9)/'INOPS=  '/                                        A3300270
      DATA NAME( 10)/'IS=     '/                                        A3300280
      DATA NAME( 11)/'IT=     '/                                        A3300290
      DATA NAME( 12)/'IWS=    '/                                        A3300300
      DATA NAME( 13)/'JCKR=   '/                                        A3300310
      DATA NAME( 14)/'JCR=    '/                                        A3300320
      DATA NAME( 15)/'JDR=    '/                                        A3300330
      DATA NAME( 16)/'JPR=    '/                                        A3300340
      DATA NAME( 17)/'JPXR=   '/                                        A3300350
      DATA NAME( 18)/'NUMPT1= '/                                        A3300360
      DATA NAME( 19)/'NUMSUR= '/                                        A3300370
      DATA NAME( 20)/'VL=     '/                                        A3300380
      DATA NAME( 21)/'TA(1)=  '/                                        A3300390
      DATA NAME( 22)/'TA(2)=  '/                                        A3300400
      DATA NAME( 23)/'TA(3)=  '/                                        A3300410
      DATA NAME( 24)/'TAK(1)= '/                                        A3300420
      DATA NAME( 25)/'TAK(2)= '/                                        A3300430
      DATA NAME( 26)/'TAK(3)= '/                                        A3300440
      DATA NAME( 27)/'TAL(1)= '/                                        A3300450
      DATA NAME( 28)/'TAL(2)= '/                                        A3300460
      DATA NAME( 29)/'TAL(3)= '/                                        A3300470
      DATA NAME( 30)/'TE(1)=  '/                                        A3300480
      DATA NAME( 31)/'TE(2)=  '/                                        A3300490
      DATA NAME( 32)/'TE(3)=  '/                                        A3300500
      DATA NAME( 33)/'TEK(1)= '/                                        A3300510
      DATA NAME( 34)/'TEK(2)= '/                                        A3300520
      DATA NAME( 35)/'TEK(3)= '/                                        A3300530
      DATA NAME( 36)/'TEL(1)= '/                                        A3300540
      DATA NAME( 37)/'TEL(2)= '/                                        A3300550
      DATA NAME( 38)/'TEL(3)= '/                                        A3300560
      DATA NAME( 39)/'TI(1)=  '/                                        A3300570
      DATA NAME( 40)/'TI(2)=  '/                                        A3300580
      DATA NAME( 41)/'TI(3)=  '/                                        A3300590
      DATA NAME( 42)/'TIK(1)= '/                                        A3300600
      DATA NAME( 43)/'TIK(2)= '/                                        A3300610
      DATA NAME( 44)/'TIK(3)= '/                                        A3300620
      DATA NAME( 45)/'CPLFL=  '/                                        A3300630
      DATA NAME( 46)/'CPTST=  '/                                        A3300640
      DATA NAME( 47)/'CSD=    '/                                        A3300650
      DATA NAME( 48)/'IFAR=   '/                                        A3300660
      DATA NAME( 49)/'INDIR=  '/                                        A3300670
      DATA NAME( 50)/'IOPSET= '/                                        A3300680
      DATA NAME( 51)/'ISFTYP= '/                                        A3300690
      DATA NAME( 52)/'ISIGCR= '/                                        A3300700
      DATA NAME( 53)/'ISVFL=  '/                                        A3300710
      DATA NAME( 54)/'J23=    '/                                        A3300720
      DATA NAME( 55)/'JENT=   '/                                        A3300730
      DATA NAME( 56)/'JTN=    '/                                        A3300740
      DATA NAME( 57)/'JU1=    '/                                        A3300750
      DATA NAME( 58)/'PLND=   '/                                        A3300760
      DATA NAME( 59)/'PLND1=  '/                                        A3300770
      DATA NAME( 60)/'PLTST=  '/                                        A3300780
      DATA NAME( 61)/'RC=     '/                                        A3300790
      DATA NAME( 62)/'S=      '/                                        A3300800
      DATA NAME( 63)/'STCK=   '/                                        A3300810
      DATA NAME( 64)/'STCK1=  '/                                        A3300820
      DATA NAME( 65)/'STCK2=  '/                                        A3300830
      DATA NAME( 66)/'STCKN=  '/                                        A3300840
      DATA NAME( 67)/'TAU1=   '/                                        A3300850
      DATA NAME( 68)/'TAU2=   '/                                        A3300860
      DATA NAME( 69)/'TH=     '/                                        A3300870
      DATA NAME( 70)/'Z=      '/                                        A3300880
      DATA NAME( 71)/'CC(1)=  '/                                        A3300890
      DATA NAME( 72)/'CC(2)=  '/                                        A3300900
      DATA NAME( 73)/'CC(3)=  '/                                        A3300910
      DATA NAME( 74)/'PLNV(1)='/                                        A3300920
      DATA NAME( 75)/'PLNV(2)='/                                        A3300930
      DATA NAME( 76)/'PLNV(3)='/                                        A3300940
      DATA NAME( 77)/'SN(1)=  '/                                        A3300950
      DATA NAME( 78)/'SN(2)=  '/                                        A3300960
      DATA NAME( 79)/'SN(3)=  '/                                        A3300970
      DATA NAME( 80)/'SP(1)=  '/                                        A3300980
      DATA NAME( 81)/'SP(2)=  '/                                        A3300990
      DATA NAME( 82)/'SP(3)=  '/                                        A3301000
      DATA NAME( 83)/'SPL(1)= '/                                        A3301010
      DATA NAME( 84)/'SPL(2)= '/                                        A3301020
      DATA NAME( 85)/'SPL(3)= '/                                        A3301030
      DATA NAME( 86)/'TEE(1)= '/                                        A3301040
      DATA NAME( 87)/'TEE(2)= '/                                        A3301050
      DATA NAME( 88)/'TEE(3)= '/                                        A3301060
      DATA NAME( 89)/'TN(1)=  '/                                        A3301070
      DATA NAME( 90)/'TN(2)=  '/                                        A3301080
      DATA NAME( 91)/'TN(3)=  '/                                        A3301090
      DATA NAME( 92)/'TP(1)=  '/                                        A3301100
      DATA NAME( 93)/'TP(2)=  '/                                        A3301110
      DATA NAME( 94)/'TP(3)=  '/                                        A3301120
      DATA NAME( 95)/'VNDIR(1)'/                                        A3301130
      DATA NAME( 96)/'VNDIR(2)'/                                        A3301140
      DATA NAME( 97)/'VNDIR(3)'/                                        A3301150
      DATA NAME( 98)/'VT(1)=  '/                                        A3301160
      DATA NAME( 99)/'VT(2)=  '/                                        A3301170
      DATA NAME(100)/'VT(3)=  '/                                        A3301180
      DATA NAME(101)/'ISGCRT= '/                                        A3301190
      DATA NAME(102)/'RCT=    '/                                        A3301200
      DATA NAME(103)/'ST=     '/                                        A3301210
      DATA NAME(104)/'ZT=     '/                                        A3301220
      DATA NAME(105)/'CCT(1)= '/                                        A3301230
      DATA NAME(106)/'CCT(2)= '/                                        A3301240
      DATA NAME(107)/'CCT(3)= '/                                        A3301250
      DATA NAME(108)/'SNT(1)= '/                                        A3301260
      DATA NAME(109)/'SNT(2)= '/                                        A3301270
      DATA NAME(110)/'SNT(3)= '/                                        A3301280
      DATA NAME(111)/'SPT(1)= '/                                        A3301290
      DATA NAME(112)/'SPT(2)= '/                                        A3301300
      DATA NAME(113)/'SPT(3)= '/                                        A3301310
      DATA NAME(114)/'SPLT(1)='/                                        A3301320
      DATA NAME(115)/'SPLT(2)='/                                        A3301330
      DATA NAME(116)/'SPLT(3)='/                                        A3301340
      DATA NAME(117)/'SPKIPS 1'/                                        A3301350
      DATA NAME(118)/'SPKIPS 2'/                                        A3301360
      DATA NAME(119)/'SPKIPS 3'/                                        A3301370
      DATA NAME(120)/'TPKIPS 1'/                                        A3301380
      DATA NAME(121)/'TPKIPS 2'/                                        A3301390
      DATA NAME(122)/'TPKIPS 3'/                                        A3301400
      DATA NAME(123)/'SPKIDS 1'/                                        A3301410
      DATA NAME(124)/'SPKIDS 2'/                                        A3301420
      DATA NAME(125)/'SPKIDS 3'/                                        A3301430
      DATA NAME(126)/'TPKIDS 1'/                                        A3301440
      DATA NAME(127)/'TPKIDS 2'/                                        A3301450
      DATA NAME(128)/'TPKIDS 3'/                                        A3301460
      DATA NAME(129)/'CMOVE(1)'/                                        A3301470
      DATA NAME(130)/'CMOVE(2)'/                                        A3301480
      DATA NAME(131)/'CMOVE(3)'/                                        A3301490
      DATA  SUBNAM(1 )/'AJUNDD( '/ , NMB(1 ) /'101)'/                   A3301500
      DATA  SUBNAM(2 )/'AJUNDD( '/ , NMB(2 ) /'102)'/                   A3301510
      DATA  SUBNAM(3 )/'AMIND ( '/ , NMB(3 ) /'103)'/                   A3301520
      DATA  SUBNAM(4 )/'AMIND ( '/ , NMB(4 ) /'104)'/                   A3301530
      DATA  SUBNAM(5 )/'AMIND ( '/ , NMB(5 ) /'105)'/                   A3301540
      DATA  SUBNAM(6 )/'AMIND ( '/ , NMB(6 ) /'106)'/                   A3301550
      DATA  SUBNAM(7 )/'AMIND ( '/ , NMB(7 ) /'107)'/                   A3301560
      DATA  SUBNAM(11)/'ARLM3 ( '/ , NMB(11) /'201)'/                   A3301570
      DATA  SUBNAM(12)/'ARLM3 ( '/ , NMB(12) /'202)'/                   A3301580
      DATA  SUBNAM(13)/'ARLM3 ( '/ , NMB(13) /'203)'/                   A3301585
      DATA  SUBNAM(14)/'ARLM3 ( '/ , NMB(14) /'204)'/                   A3301590
      DATA  SUBNAM(15)/'ARLM3 ( '/ , NMB(15) /'205)'/                   A3301600
      DATA  SUBNAM(16)/'ARLM3 ( '/ , NMB(16) /'206)'/                   A3301610
      DATA  SUBNAM(17)/'ARLM3 ( '/ , NMB(17) /'207)'/                   A3301620
      DATA  SUBNAM(18)/'ARLM3 ( '/ , NMB(18) /'208)'/                   A3301630
      DATA  SUBNAM(19)/'ARLM3 ( '/ , NMB(19) /'209)'/                   A3301640
      DATA  SUBNAM(20)/'ARLM3 ( '/ , NMB(20) /'210)'/                   A3301650
      DATA  SUBNAM(21)/'ARLM3 ( '/ , NMB(21) /'211)'/                   A3301660
      DATA  SUBNAM(22)/'ARLM3 ( '/ , NMB(22) /'212)'/                   A3301670
      DATA  SUBNAM(23)/'ARLM3 ( '/ , NMB(23) /'213)'/                   A3301680
      DATA  SUBNAM(24)/'ARLM3 ( '/ , NMB(24) /'214)'/                   A3301690
      DATA  SUBNAM(25)/'ARLM3 ( '/ , NMB(25) /'215)'/                   A3301700
      DATA  SUBNAM(26)/'ARLM3 ( '/ , NMB(26) /'216)'/                   A3301710
      DATA  SUBNAM(27)/'ARLM3 ( '/ , NMB(27) /'217)'/                   A3301720
      DATA  SUBNAM(31)/'CENTR ( '/ , NMB(31) /'401)'/                   A3301730
      DATA  SUBNAM(32)/'CENTR ( '/ , NMB(32) /'402)'/                   A3301740
      DATA  SUBNAM(33)/'CENTR ( '/ , NMB(33) /'403)'/                   A3301750
      DATA  SUBNAM(34)/'CPLAN ( '/ , NMB(34) /'404)'/                   A3301760
      DATA  SUBNAM(41)/'GO    ( '/ , NMB(41) /'501)'/                   A3301770
      DATA  SUBNAM(42)/'GO    ( '/ , NMB(42) /'502)'/                   A3301780
      DATA  SUBNAM(43)/'GO    ( '/ , NMB(43) /'503)'/                   A3301790
      DATA  SUBNAM(44)/'GO    ( '/ , NMB(44) /'504)'/                   A3301800
      DATA  SUBNAM(45)/'GO    ( '/ , NMB(45) /'505)'/                   A3301810
      DATA  SUBNAM(50)/'BRKPNT( '/ , NMB(50) /'999)'/                   A3301820
      IF(J.EQ.-1) GO TO 10                                              A3301830
      CALL CFORM(HDYND,DARRAY,1,7)                                      A3301840
      CALL CFORM(SUBNAM(J),DARRAY,8,7)                                  A3301850
      CALL CFORM(NMB(J),DARRAY,15,4)                                    A3301860
      M=4                                                               A3301870
   10 L=21                                                              A3301880
      NN(1)=N1                                                          A3301890
      NN(2)=N2                                                          A3301900
      NN(3)=N3                                                          A3301910
      NN(4)=N4                                                          A3301920
      DO 100 I=1,4                                                      A3301930
      L=L+2                                                             A3301940
      K=NN(I)                                                           A3301950
      IF(K.EQ.0) GO TO 200                                              A3301960
      II = IABS(K)                                                      A3301970
      CALL CFORM(NAME(II),DARRAY,L,8)                                   A3301980
      L=L+8                                                             A3301990
      IF(K.LT.0) GO TO 50                                               A3302000
      CALL FCONV(ED(M),DARRAY,L,13,6)                                   A3302010
      L=L+13                                                            A3302020
      GO TO 100                                                         A3302030
   50 L=L+2                                                             A3302040
      KK=2*M-1                                                          A3302050
      CALL ICONV(IED(KK),DARRAY,L,8)                                    A3302060
      L=L+11                                                            A3302070
  100 M=M+1                                                             A3302080
  200 CALL CPRINT (DARRAY)                                              A3302090
      RETURN                                                            A3302100
      END                                                               A3302110
**** SOURCE FILE : M0001850.V13   ***
*
C                                                                       A3310001
C.....FORTRAN SUBROUTINE                   APT331                       A3310002
C                                                                       A3310010
      SUBROUTINE APT331                                                 A3310020
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3310030
C                                                                       A3310040
C PURPOSE      TO WRITE ONTO THE VERIFICATION LISTING TAPE--            A3310050
C      1) THE DIAGNOSTIC NUMBER AND THE NAME OF THE PROGRAM             A3310060
C         WHICH ISSUED THE DIAGNOSTIC                                   A3310070
C      2) THE DIAGNOSTIC MESSAGE                                        A3310080
C      IF THE DIAGNOSTIC IS A RESTART ERROR IT ALSO WRITES -            A3310090
C      3) USEFUL INFORMATION ABOUT THE CUTTER AND THE PART,DRIVE,       A3310100
C         AND CHECK SURFACES AS WELL AS MANY INTERMEDIATE CUTTER        A3310110
C         LOCATION PARAMETERS                                           A3310120
C                                                                       A3310130
C LINKAGE      CALL APT331                                              A3310140
C ARGUMENTS    NONE                                                     A3310150
C SUBSIDIARIES NONE                                                     A3310160
C                                                                       A3310170
C                                                                       A3310180
      INTEGER BCDF,ITEMP(2)                                             A3310182
      EQUIVALENCE (ITEMP(1),DTEMP)                                      A3310184
C                                                                       A3310186
      COMMON/EDITOR/EDITOR                                              A3310190
      DIMENSION EDITOR(1500),IEDTOR(2,1500)                             A3310200
      EQUIVALENCE (EDITOR(1),IRECRD(1))                                 A3310201
      DIMENSION IRECRD(2)                                               A3310202
      EQUIVALENCE  (EDITOR(1),IEDTOR(1,1))                              A3310205
      DIMENSION AREA3(250)                                              A3310206
      EQUIVALENCE (EDITOR(1500),AREA3(250))                             A3310207
      INCLUDE 'DARRAY.INC'                                              A3310209
C                                                                       A3310210
C... *** EQUIVALENCE OF NECESSARY ARELEM VARIABLES***                   A3310220
C                                                                       A3310230
C...     EQUIVALENCE FOR SV BLOCK VARIABLES                             A3310240
C                                                                       A3310250
      EQUIVALENCE           (EDITOR(10),TAU1), (EDITOR(11),TAU2),       A3310260
     1   (EDITOR(12),TH),   (EDITOR(13),S),    (EDITOR(14),RC),         A3310270
     2   (EDITOR(15),SP(1)),(EDITOR(18),SN(1)),(EDITOR(21),TN(1)),      A3310280
     3   (EDITOR(24),CC(1)),(EDITOR(27),VT(1))                          A3310290
      DIMENSION  SP(3), SN(3), TN(3), CC(3), VT(3)                      A3310300
C                                                                       A3310310
C...     EQUIVALENCE FOR ISV BLOCK VARIABLES                            A3310320
C                                                                       A3310330
      EQUIVALENCE   (IEDTOR(2,6),ITLON),  (IEDTOR(2,7),ISFTYP),         A3310340
     +              (IEDTOR(2,8),IFL4),   (IEDTOR(2,9),IFAR)            A3310350
C                                                                       A3310360
C...     EQUIVALENCE FOR NECESSARY FXCOR AND IFXCOR VARIABLES           A3310370
C                                                                       A3310380
      EQUIVALENCE          (EDITOR(6),CUTDAT(1)),  (EDITOR(11),TI(1)),  A3310390
     +   (EDITOR(14),TE(1)), (EDITOR(18),FWD(1)),  (EDITOR(21),TA(1))   A3310400
      EQUIVALENCE (EDITOR(8),DPMAX), (EDITOR(10),ELMAX)                 A3310410
      DIMENSION  CUTDAT(7), TI(3), TE(3), TA(3), FWD(3)                 A3310420
C                                                                       A3310430
      EQUIVALENCE              (IEDTOR(2,17),IS), (IEDTOR(2,9),NMPNTS), A3310440
     1   (IEDTOR(2,7),ISTRUP), (IEDTOR(2,6),IGO), (IEDTOR(2,4),ICSCNT)  A3310450
C                                                                       A3310460
C......EQUIVALENCE FOR PREVIOUS SEQ. NO.                                A3310462
      EQUIVALENCE  (EDITOR(477),SAVSEQ)                                 A3310464
C                                                                       A3310470
C....***** EQUIVALENCE OF PRINTOUT AND IDENTIFICATION VARIABLES ***     A3310480
C                                                                       A3310490
C...     EQUIVALENCE FOR QUADRIC SURFACE IDENTIFICATION                 A3310500
C                                                                       A3310510
      EQUIVALENCE  (EDITOR(6),COEFF(1)),  (EDITOR(16),TRANS(1,1))       A3310520
      EQUIVALENCE (IEDTOR(2,5),IQSDFG)                                  A3310530
      DIMENSION   CANFRM(10), COEFF(10), XCOEFF(5), TRANS(3,4)          A3310540
      EQUIVALENCE (COEFF(6),XCOEFF(1))                                  A3310550
C                                                                       A3310560
      CHARACTER*32    QUAD(16),QSDNAM                                   A3310570
C                                                                       A3310572
C....    LABEL PRINTOUT                                                 A3310573
C                                                                       A3310574
      CHARACTER*28   JCODE(5), KCODE(16)                                A3310575
C                                                                       A3310581
C                                                                       A3310582
C....    EQUIVALENCE FOR SURFACE NAME AND TYPE VARIABLES                A3310583
C        AND CANONICAL FORM ARRAY                                       A3310584
C                                                                       A3310585
      EQUIVALENCE  (EDITOR(30),SRFNME),  (EDITOR(34),CANFRM(1)),        A3310586
     +  (IEDTOR(2,31),ISUB), (IEDTOR(2,32),MODE), (IEDTOR(2,33),ISIZE)  A3310587
C                                                                       A3310588
C....    EQUIVALENCE FOR IMPORTANT PRINTOUT VARIABLES                   A3310589
C                                                                       A3310591
C                                                                       A3310592
      EQUIVALENCE  (IEDTOR(2,2),ISBTYP), (IEDTOR(2,4),NUMERR(2))        A3310593
      EQUIVALENCE  (APRNT2(17),R(1)), (APRNT2(21),H(1))                 A3310594
C                                                                       A3310595
      DIMENSION  NUMERR(2),APRNT1(20),APRNT2(76),R(4),H(4)              A3310596
      DIMENSION   JTLON(2), JSFTYP(2), JFL4(2), JFAR(2)                 A3310597
      CHARACTER*6 GOTYP(7),TYP(6)                                       A3310599
      CHARACTER*4 SRFTYP(4)                                             A3310601
      CHARACTER*8 BLANK ,BADTYP                                         A3310602
      CHARACTER*12 LSTRT,MSTRT,BLNK                                     A3310603
C                                                                       A3310605
      INCLUDE 'KNUMBR.INC'                                              A3310606
C                                                                       A3310613
C                                                                       A3310614
C..      SURFACE NAME ARRAY                                             A3310615
C                                                                       A3310616
      CHARACTER*6 ANAME(30)                                             A3310617
C                                                                       A3310621
C        SUBROUTINE NAME INDEX ARRAY                                    A3310622
C                                                                       A3310623
      DIMENSION  INDEX(100),INDEXA(50),INDEXB(50)                       A3310624
      EQUIVALENCE   (INDEX(1),INDEXA(1)), (INDEX(51),INDEXB(1))         A3310625
C                                                                       A3310631
C...  SUBROUTINE NAMES                                                  A3310632
C                                                                       A3310633
      CHARACTER*6   NAME(100)                                           A3310634
C                                                                       A3310680
C        DATA FOR QUADRIC SURFACE TYPES                                 A3310690
C                                                                       A3310700
      DATA  QUAD(1)   /' NO RECOGNIZABLE SURFACE        '/              A3310710
      DATA  QUAD(2)   /' A PLANE                        '/              A3310720
      DATA  QUAD(3)   /' TWO PARALLEL (COINCIDENT)PLANES'/              A3310730
      DATA  QUAD(4)   /' A PARABOLIC CYLINDER           '/              A3310740
      DATA  QUAD(5)   /' TWO INTERSECTING PLANES        '/              A3310750
      DATA  QUAD(6)   /' A HYPERBOLIC CYLINDER          '/              A3310760
      DATA  QUAD(7)   /' AN ELLIPTIC CYLINDER           '/              A3310770
      DATA  QUAD(8)   /' A HYPERBOLIC PARABOLOID        '/              A3310780
C                                                                       A3310790
      DATA  QUAD(9)   /' AN IMAGINARY ELLIPTIC CYLINDER '/              A3310800
      DATA  QUAD(10)  /' AN ELLIPTIC PARABOLOID         '/              A3310810
      DATA  QUAD(11)  /' A HYPERBOLOID OF ONE SHEET     '/              A3310820
      DATA  QUAD(12)  /' A CONE                         '/              A3310830
      DATA  QUAD(13)  /' A HYPERBOLOID OF TWO SHEETS    '/              A3310840
      DATA  QUAD(14)  /' AN ELLIPSOID                   '/              A3310850
      DATA  QUAD(15)  /' A POINT ELLIPSOID              '/              A3310860
      DATA  QUAD(16)  /' AN IMAGINARY ELLIPSOID         '/              A3310870
C                                                                       A3311070
C....    DATA FOR LABEL PRINTOUT                                        A3311080
C                                                                       A3311090
      DATA  JCODE(1)   /'    TOOL TO SURFACE RELATION'/                 A3311100
      DATA  JCODE(2)   /'    INTERSECTION NUMBER     '/                 A3311110
      DATA  JCODE(3)   /'    TOLERANCES   OUTTOL     '/                 A3311120
      DATA  JCODE(4)   /'                  INTOL     '/                 A3311130
      DATA  JCODE(5)   /'    THICK SETTINGS          '/                 A3311140
C                                                                       A3311150
      DATA  KCODE(1)   /'    EFF. DIST. TO SURFACE   '/                 A3311160
      DATA  KCODE(2)   /'    EFF. SURFACE POINT     X'/                 A3311170
      DATA  KCODE(3)   /'                           Y'/                 A3311180
      DATA  KCODE(4)   /'                           Z'/                 A3311190
      DATA  KCODE(5)   /'    TOOL POINT             R'/                 A3311200
      DATA  KCODE(6)   /'                           H'/                 A3311210
      DATA  KCODE(7)   /'    SURFACE NORMAL         X'/                 A3311220
      DATA  KCODE(8)   /'                           Y'/                 A3311230
      DATA  KCODE(9)   /'                           Z'/                 A3311240
      DATA  KCODE(10)  /'    TOOL NORMAL            X'/                 A3311250
      DATA  KCODE(11)  /'                           Y'/                 A3311260
      DATA  KCODE(12)  /'                           Z'/                 A3311270
      DATA  KCODE(13)  /'    RADIUS OF CURVATURE     '/                 A3311280
      DATA  KCODE(14)  /'    CENTER OF CURVATURE    X'/                 A3311290
      DATA  KCODE(15)  /'                           Y'/                 A3311300
      DATA  KCODE(16)  /'                           Z'/                 A3311310
C                                                                       A3311497
C     MOTION AND CONTROL SURFACE TYPES                                  A3311498
C                                                                       A3311500
      DATA GOTYP/'GOLFT ','GORGT ','GOFWD ','GOBACK','GOUP  ','GODOWN', A3311510
     1           '      '/                                              A3311511
      DATA   TYP/'TO    ','PAST  ','ON    ','TANTO ','PSTAN ','OFFSET'/ A3311520
      DATA  SRFTYP/'PS  ','DS  ','CS1 ','CS2 '/,BLANK /'        '/      A3311530
      DATA LSTRT/'START OF CUT'/,BLNK/'            '/,BADTYP/' UNKNOWN'/A3311540
C                                                                       A3311665
C     SURFACE NAME ARRAY DATA                                           A3311666
C                                                                       A3311667
      DATA ANAME/ 'LINE  ','PLANE ','CYLNDR','CIRCLE','SPHERE','HYPERB',A3311670
     1   'LCONIC','ELLIPS','CONE  ','GCONIC','TABCYL','RLDSRF','POLCON',A3311680
     2   'QADRIC','PARSRF','      ','      ','MATRIX','POINT ','VECTOR',A3311690
     3   '      ','      ','      ','UNKNOW','      ','PATERN','      ',A3311700
     4   '      ','SSURF ','SCURV '/                                    A3311701
C                                                                       A3311746
C     SUBROUTINE NAME INDEX ARRAY                                       A3311747
C                                                                       A3311748
      DATA  INDEXA /      0,  20001,  20101,  20102,  20103,            A3311750
     1                20104,  20105,  20106,  20107,  20108,            A3311755
     2                20201,  20202,  20203,  20204,  20205,            A3311760
     3                20206,  20207,  20208,  20901,  20902,            A3311765
     4               -20903,  21001,  21002, -21003,  21101,            A3311770
     5               -21102,  21301,  22001,  22201,  22202,            A3311775
     6                22203,  22204,  22205,  22206,  22207,            A3311780
     7                22208,  22209,  22210, -22211,  22212,            A3311785
     8                22213,  22214,  22215, -22216,  22217,            A3311790
     9               -22300,  22301, -22701,  23401,  23501/            A3311795
      DATA  INDEXB /  23901,  23902,  23903,  23904,  23905,            A3311800
     1               -22401,  24001,  24002,  24003,  24004,            A3311802
     2               -24201, -24202,  24203, -24401,  24402,            A3311804
     3                24403,  24404, -25001,  25002,  25003,            A3311806
     4                25004,  25005,  25006,  25007,  25008,            A3311808
     5                    0,  26002,      0,  26001,  26401,            A3311810
     6                26601, -26801,  26802,  26803, -28801,            A3311812
     7                20109,  23908,  24005,  24006,  26602,            A3311820
     8               -27001,  27002,  27003,  27104,  27105,            A3311830
     9                25009,  20110,  27206,      0,      0/            A3311840
C                                                                       A3311884
C     SUBROUTINE NAMES                                                  A3311885
C                                                                       A3311886
      DATA  NAME            /'APT200','APT201','  GO  ',' PSIS ',       A3311890
     1     ' TLLFT',' TLRGT',' TLON ','TLONPS','TLOFPS','INDIRP',       A3311900
     2     'INDIRV','SRFVCT',' FROM ','GODLTA',' GOTO ',' CUT  ',       A3311910
     3     'DNTCUT','NDTEST','COMP3D','OUTTOL','INTOL ','TOLER ',       A3311920
     4     'CUTTER','TLAXIS','MULTAX','MAXDP ','NUMPTS','THICK ',       A3311930
     5     ' NOPS ','AUTOPS','GOUGCK','NKNOWN','APT232','APT233',       A3311940
     6     'APT234','APT235','APT236','APT237','APT238','ARLM2 ',       A3311950
     7     'ARLM3 ','NKNOWN','CHECK ','NKNOWN','PLANE ','NKNOWN',       A3311960
     8     'DELTA ','NKNOWN','GOUGE ','NKNOWN','CENTR ','NKNOWN',       A3311970
     9  'CPLAN ', 'NKNOWN', 'DDSSRF', 'NKNOWN', 'TINKER', 'NKNOWN',     A3311980
     1     'NKNOWN','NKNOWN','AMIND ','NKNOWN','NKNOWN','NKNOWN',       A3311990
     2     'U1COMP','NKNOWN','TLNORM','NKNOWN','RADAR ','NKNOWN',       A3312000
     3     'LCLS  ','DDPARA','FCN   ','NKNOWN','NKNOWN','NKNOWN',       A3312010
     4     'NKNOWN','NKNOWN','NKNOWN','NKNOWN','NKNOWN','NKNOWN',       A3312020
     5     ' DDST ','DDPLAN','DDCYLN','DDSPHR','DDQUAD','DDCONE',       A3312030
     6     'DDTABC','NKNOWN','NKNOWN','NKNOWN',' QUAD ','VNORM ',       A3312040
     7     'CROSS ','ATAPE ','ASTOS ',' AERR ','DYNDMP','NKNOWN'/       A3312050
C                                                                       A3312060
C                       ***************                  ***************A3312090
C                       ***** WARNING. VLFILE  IS  EQUIVALENCE TO CLLST*A3312092
C                       ***************                  ***************A3312094
C                                                                       A3312120
C     ------------------------------------------------------------      A3312130
C                                                                       A3312140
C                                                                       A3312150
C.....   ISBTYP INDICATES TYPE OF ERROR RECORD AS FOLLOWS               A3312160
C                                                                       A3312170
C     ISBTYP=1 --  DIAGNOSTIC MESSAGE                                   A3312180
C     ISBTYP=2 --  FXCOM VARIABLES                                      A3312190
C     ISBTYP=3 --  SURFACE VARIABLES(PS)                                A3312200
C     ISBTYP=4 --  SURFACE VARIABLES(DS)                                A3312210
C     ISBTYP=5 --  SURFACE VARIABLES(CS1)                               A3312220
C     ISBTYP=6 --  SURFACE VARIABLES(CS2)                               A3312230
C     ISBTYP=7 --  QUADRIC SURFACE IDENTIFICATION                       A3312240
C     ISBTYP=8 --  POCKET                                               A3312245
C                                                                       A3312250
      GO TO  (10,180,30,40,40,40,110,800), ISBTYP                       A3312260
C                                                                       A3312270
C...***** SUB-TYPE 1 - PRINT DIAGNOSTIC MESSAGE AND CUTTER PARAMETERS*  A3312280
C                                                                       A3312290
   10 NUMABS=IABS(NUMERR(2))                                            A3312300
      J2=(NUMABS-20000)/100 + 1                                         A3312310
      IF (J2 .LE. 0 .OR. J2 .GT. 100) GO TO 500                         A3312320
C                                                                       A3312324
C...    FIND CORRECT DIAGN MESSAGE NUMBER FOR THIS ERROR                A3312326
      N=1                                                               A3312330
      DO 12  M=1,100                                                    A3312340
      MOUT=M                                                            A3312350
      IF (NUMABS .EQ. IABS(INDEX(M)) )  GO TO 13                        A3312360
   12 CONTINUE                                                          A3312370
      N=0                                                               A3312380
   13 CALL CFORM('0',DARRAY,1,1)                                        A3312384
      I=SAVSEQ+0.1                                                      A3312385
      CALL ICONV(I,DARRAY,2,8)                                          A3312386
      IF( NUMERR(2)) 14,18,18                                           A3312390
C                                                                       A3312400
C..      WARNING DIAGNOSTIC                                             A3312410
   14 CALL CFORM('.    WARNING NUMBER (',DARRAY,10,21)                  A3312420
      CALL ICONV(NUMERR(2),DARRAY,31,6)                                 A3312425
      CALL CFORM(') FROM SUBROUTINE',DARRAY,38,17)                      A3312430
      CALL CFORM(NAME(J2),DARRAY,56,6)                                  A3312432
      CALL CPRINT(DARRAY)                                               A3312434
   15 IF(N .NE. K0) GO TO 16                                            A3312440
      M=K1                                                              A3312450
      MOUT=K1                                                           A3312460
   16 CALL CLEROR(NUMABS)                                               A3312470
C                                                                       A3312480
      IF(NUMERR(2))9000,19,19                                           A3312490
C                                                                       A3312500
C...     RESTART DIAGNOSTIC                                             A3312510
   18 CALL CFORM('.    ENTERING RESTART MODE. ERROR NUMBER (            A3312520
     C      ',DARRAY,10,42)                                             A3312521
      CALL ICONV(NUMERR(2),DARRAY,52,6)                                 A3312522
      CALL CFORM(') FROM SUBROUTINE',DARRAY,59,17)                      A3312530
      CALL CFORM(NAME(J2),DARRAY,77,6)                                  A3312540
      CALL CPRINT(DARRAY)                                               A3312545
      GO TO 15                                                          A3312550
C                                                                       A3312560
C        CHECK FOR CUTTER DEFINITION ERROR                              A3312570
   19 IF(J2.EQ.23) GO TO 20                                             A3312586
      IF (MOUT .NE. 9 .AND. MOUT .NE. 11) GO TO 25                      A3312590
C                                                                       A3312600
   20 CALL CFORM('0RESTART USING A POINT CUTTER (PARAMETERS ALL ZERO).  A3312610
     C ',DARRAY,1,52)                                                   A3312611
      CALL CPRINT(DARRAY)                                               A3312620
C                                                                       A3312630
      IF (J2 .NE. 23) GO TO 9000                                        A3312640
      CALL CFORM('0ORIGINAL (ERRONEOUS) PARAMETERS WERE--',             A3312650
     C           DARRAY,1,39)                                           A3312651
      CALL CPRINT(DARRAY)                                               A3312652
      L=6                                                               A3312654
      DO 921 I=1,7                                                      A3312656
      CALL FCONV(CUTDAT(I),DARRAY,L,13,6)                               A3312658
  921 L=L+13                                                            A3312660
      CALL CPRINT (DARRAY)                                              A3312662
      GO TO 9000                                                        A3312670
C                                                                       A3312680
C...     PRINTOUT CUTTER PARAMETERS                                     A3312690
   25 CALL CFORM('0CUTTER PARAMETERS --',DARRAY,1,21)                   A3312700
      CALL CPRINT (DARRAY)                                              A3312708
      L=6                                                               A3312710
      DO 925 I2=1,7                                                     A3312712
      CALL FCONV(CUTDAT(I2),DARRAY,L,13,6)                              A3312714
  925 L=L+13                                                            A3312716
      CALL CPRINT(DARRAY)                                               A3312718
      GO TO 9000                                                        A3312720
C                                                                       A3312730
C...***** SUB-TYPE 3 - PART SURFACE VARIABLES *****                     A3312740
C                                                                       A3312750
   30 CALL CFORM('0   SURFACE DATA..........',DARRAY ,1,26)             A3312760
      CALL CPRINT(DARRAY)                                               A3312770
C                                                                       A3312780
C...***** SUB-TYPES 3, 4, 5, 6 - ALL SURFACE CANONICAL FORMS *****      A3312790
C                                                                       A3312800
C        IT INDEXES THE SURFACE                                         A3312810
   40 IT=ISBTYP-2                                                       A3312820
C                                                                       A3312830
C     CHECK FOR INVALID SURFACE MODE                                    A3312840
      IF(MODE.LE.0.OR.MODE.GT.30) MODE=24                               A3312850
C                                                                       A3312860
C        PRINT OUT CANONICAL FORM                                       A3312870
      CALL CFORM(SRFTYP(IT),DARRAY,5,4)                                 A3312871
      CALL CFORM('...',DARRAY,9,3)                                      A3312872
      CALL HOLFRM(SRFNME ,DARRAY,13,6,NWD)                              A3312873
      CALL CFORM('(     ) =',DARRAY,19,9)                               A3312874
      CALL ICONV(ISUB,DARRAY,20,5)                                      A3312876
      CALL CFORM(ANAME(MODE),DARRAY,29,6)                               A3312878
      CALL CFORM('/',DARRAY,35,1)                                       A3312880
      IF(MODE.EQ.15) GO TO 4720                                         A3312882
      K=ISIZE                                                           A3312884
      IF(ISIZE.GT.7) K=7                                                A3312886
      L=37                                                              A3312888
      DO 4718 I=1,K                                                     A3312890
      CALL FCONV(CANFRM(I),DARRAY,L,11,4)                               A3312892
 4718 L=L+11                                                            A3312894
      IF(ISIZE.LE.7) GO TO 4720                                         A3312896
      CALL CPRINT(DARRAY)                                               A3312898
      L=4                                                               A3312900
      DO 4719 I=8,ISIZE                                                 A3312902
      CALL FCONV(CANFRM(I),DARRAY,L,11,4)                               A3312904
 4719 L=L+11                                                            A3312906
 4720 CALL CPRINT(DARRAY)                                               A3312909
C                                                                       A3312910
C        SAVE NECESSARY FLAGS FOR THIS SURFACE.                         A3312920
      NSV=IT-2                                                          A3312930
      IF (NSV) 58,58,59                                                 A3312940
   58 JTLON(IT)=ITLON                                                   A3312950
      GO TO 61                                                          A3312960
   59 JSFTYP(NSV)=ISFTYP                                                A3312970
      JFL4(NSV)  =IFL4                                                  A3312980
      JFAR(NSV)  =IFAR                                                  A3312990
C                                                                       A3313000
C        SAVE NECESSARY VARIABLE VALUES FOR THIS SURFACE                A3313010
   61 APRNT1(IT+ 8)=TAU1                                                A3313020
      APRNT1(IT+12)=TAU2                                                A3313030
      APRNT1(IT+16)=TH                                                  A3313040
C                                                                       A3313050
C        APRNT2 VALUES ARE FOR NON-ARLM2 DIAGNOSTICS                    A3313060
      APRNT2(IT)=S                                                      A3313070
      APRNT2(IT+48)=RC                                                  A3313080
      DO 81 I=1,3                                                       A3313090
      J=IT+4*(I-1)                                                      A3313100
      APRNT2(J+4)=SP(I)                                                 A3313110
      APRNT2(J+24)=SN(I)                                                A3313120
      APRNT2(J+36)=TN(I)                                                A3313130
      APRNT2(J+52)=CC(I)                                                A3313140
   81 APRNT2(J+64)=VT(I)                                                A3313150
      GO TO 9000                                                        A3313160
C                                                                       A3313170
C....*****  SUB-TYPE 7 - QUADRIC SURFACE IDENTIFICATION *****           A3313180
C                                                                       A3313190
  110 QSDNAM=QUAD(IQSDFG)                                               A3313220
C                                                                       A3313240
C        PRINTOUT FOR QUADRIC IDENTIFICATION                            A3313250
C                                                                       A3313260
      CALL CFORM('0',DARRAY,1,1)                                        A3313265
      CALL CFORM(' THE SURFACE IS',DARRAY,21,15)                        A3313270
      CALL CFORM(QSDNAM,DARRAY,37,32)                                   A3313280
      CALL CPRINT(DARRAY)                                               A3313285
C                                                                       A3313290
      CALL CFORM('ROTATION MATRIX',DARRAY,31,15)                        A3313360
      CALL CPRINT(DARRAY)                                               A3313370
C                                                                       A3313380
      DO 136 I=1,3                                                      A3313390
      L=16                                                              A3313391
      DO 135 J=1,4                                                      A3313392
      CALL FCONV(TRANS(I,J),DARRAY,L,16,7)                              A3313394
  135 L=L+16                                                            A3313396
      CALL CPRINT(DARRAY)                                               A3313398
  136 CONTINUE                                                          A3313400
C                                                                       A3313470
      CALL CFORM('THE TRANSFORMED COEFFICIENTS ARE- ',DARRAY,22,33)     A3313480
      CALL CPRINT(DARRAY)                                               A3313490
C                                                                       A3313500
      L=16                                                              A3313510
      DO 150 I=1,5                                                      A3313515
      CALL FCONV (COEFF(I),DARRAY,L,16,7)                               A3313520
  150 L=L+16                                                            A3313525
      CALL CPRINT(DARRAY)                                               A3313530
      L=16                                                              A3313535
      DO 151 I=1,5                                                      A3313540
      CALL FCONV(XCOEFF(I),DARRAY,L,16,7)                               A3313545
  151 L=L+16                                                            A3313550
      CALL CPRINT(DARRAY)                                               A3313560
C                                                                       A3313570
      GO TO 9000                                                        A3313580
C                                                                       A3313590
C...***** SUB-TYPE 2 - PRINT FXCOM AND SURFACE VARIABLE DATA *****      A3313600
C                                                                       A3313610
C        CHECK FOR A STARTUP MOTION                                     A3313620
  180 IF (ISTRUP .EQ. 1) GO TO 181                                      A3313630
C                                                                       A3313640
C        CHECK FOR A VALID MOTION COMMAND (IGO BETWEEN 1 AND 6)         A3313650
      IF ((IGO+5)/6 - 1) 181,182,181                                    A3313660
C                                                                       A3313670
C        NO COMMANDED DIRECTION-PRINT BLANKS                            A3313680
  181 IGO=7                                                             A3313690
      GOTYP(7)=BLANK                                                    A3313700
C                                                                       A3313710
C        CHECK FOR A STARTUP                                            A3313720
  182 IF (ISTRUP.EQ.1) THEN                                             A3313736
        MSTRT=LSTRT                                                     A3313740
      ELSE                                                              A3313746
        MSTRT=BLNK                                                      A3313760
      END IF                                                            A3313776
C                                                                       A3313780
C        CHECK FOR VALID FWD MOTION VECTOR                              A3313790
      DO 184 I=1,3                                                      A3313800
      IF (FWD(I) .LT. 1.0D-32 .OR. FWD(I) .GT. 1.0D+32) FWD(I)=0.0      A3313810
  184 CONTINUE                                                          A3313820
C                                                                       A3313830
      FWDNRM=DSQRT(FWD(1)**2 + FWD(2)**2 + FWD(3)**2)                   A3313840
      IF (DABS(FWDNRM-1.0) .LE. 0.01) GO TO 185                         A3313850
      FWD(1)=0.0                                                        A3313860
      FWD(2)=0.0                                                        A3313870
      FWD(3)=0.0                                                        A3313880
C                                                                       A3313890
C        PRINT OUT MOTION INFORMATION                                   A3313900
C                                                                       A3313910
  185 CALLCFORM('0MOTION AND TOOL POSITION DATA..........',DARRAY,1,40) A3313920
      CALL CPRINT(DARRAY)                                               A3313930
      CALL CFORM('COMMANDED MOTION DIRECTION -',DARRAY,5,28)            A3313940
      CALL CFORM(MSTRT,DARRAY,33,12)                                    A3313946
      CALL CFORM(GOTYP(IGO),DARRAY,48,6)                                A3313948
      CALL CFORM('=',DARRAY,57,1)                                       A3313950
      L=59                                                              A3313952
      DO 187 I=1,3                                                      A3313954
      CALL FCONV(FWD(I),DARRAY,L,16,7)                                  A3313956
  187 L=L+19                                                            A3313958
      CALL CPRINT(DARRAY)                                               A3313960
      CALL CFORM('CURRENT MOTION DIRECTION............................  A3313970
     C=',DARRAY,5,53)                                                   A3313971
      L=59                                                              A3313972
      DO 188 I=1,3                                                      A3313974
      CALL FCONV(TI(I),DARRAY,L,16,7)                                   A3313976
  188 L=L+19                                                            A3313980
      CALL CPRINT(DARRAY)                                               A3313990
      CALL CFORM('CURRENT TOOL POSITION(UNACCEPTED)...................  A3314000
     C=',DARRAY,5,53)                                                   A3314001
      L=59                                                              A3314005
      DO 189 I=1,3                                                      A3314010
      CALL FCONV(TE(I),DARRAY,L,16,7)                                   A3314015
  189 L=L+19                                                            A3314020
      CALL CPRINT(DARRAY)                                               A3314025
      CALL CFORM('CURRENT TOOL AXIS VECTOR............................  A3314030
     C=',DARRAY,5,53)                                                   A3314031
      L=59                                                              A3314035
      DO 190 I=1,3                                                      A3314040
      CALL FCONV(TA(I),DARRAY,L,16,7)                                   A3314045
  190 L=L+19                                                            A3314050
      CALL CPRINT(DARRAY)                                               A3314055
C                                                                       A3314060
C        CHECK FOR A DIAGNOSTIC FROM AMIND ASSOCIATED ROUTINES          A3314070
      IF ((J2-61)*(J2-73)) 191,191,193                                  A3314080
C                                                                       A3314090
  191 IS=IS-1                                                           A3314100
      CALL CFORM('CURRENT SURFACE=',DARRAY,5,16)                        A3314110
      CALL CFORM(SRFTYP(IS),DARRAY,21,4)                                A3314115
      CALL CPRINT(DARRAY)                                               A3314120
C                                                                       A3314130
C..      IF AN ARLM2 DIAGNOSTIC SET KVAL TO 2                           A3314140
  193 KVAL=2                                                            A3314150
      IF (J2 .EQ. 40) GO TO 196                                         A3314160
C                                                                       A3314170
C        GIVE ADDITIONAL INFORMATION IF NOT ARLM2 ERROR                 A3314180
      KVAL=3                                                            A3314190
      CALL CFORM('0   MAXIMUM STEP (MAXDP)= ',DARRAY,1,25)              A3314200
      CALL FCONV(DPMAX,DARRAY,26,11,4)                                  A3314202
      CALL CFORM('MAXIMUM LENGTH(L)= ',DARRAY,45,18)                    A3314204
      CALL FCONV(ELMAX,DARRAY,63,11,4)                                  A3314206
      CALL CFORM('NUMPTS=',DARRAY,82,7)                                 A3314208
      CALL ICONV(NMPNTS,DARRAY,91,5)                                    A3314210
      CALL CPRINT(DARRAY)                                               A3314220
C                                                                       A3314230
  196 CALL CFORM('0   GENERAL DATA - THIS CUT -',DARRAY,1,29)           A3314240
      CALL CFORM('PART SURF.       DRIVE SURF.',DARRAY,39,28)           A3314250
      CALL CFORM('CHECK SURF. 1      CHECK SURF. 2',DARRAY,72,32)       A3314260
      CALL CPRINT(DARRAY)                                               A3314265
C                                                                       A3314270
C        FIND CORRECT TOOL TO SURFACE TYPE FOR PART AND DRIVE SURFACES  A3314280
C                                                                       A3314290
      DO 205  I=1,2                                                     A3314300
      IF (JTLON(I) .NE. 0) GO TO 204                                    A3314310
      ITEMP(1)=BCDF(TYP(3)(1:4))                                        A3314316
      ITEMP(2)=BCDF(TYP(3)(5:6))                                        A3314318
      APRNT1(I)=DTEMP                                                   A3314320
      GO TO 205                                                         A3314330
  204 ITEMP(1)=BCDF(TYP(6)(1:4))                                        A3314336
      ITEMP(2)=BCDF(TYP(6)(5:6))                                        A3314338
      APRNT1(I)=DTEMP                                                   A3314340
  205 CONTINUE                                                          A3314350
C                                                                       A3314360
C        FIND CORRECT TOOL TO SURFACE TYPE FOR CHECK SURFACES           A3314370
C                                                                       A3314380
      IF (NSV .LE. 0) GO TO 230                                         A3314390
      DO 222  I=1,NSV                                                   A3314400
      IGT=JSFTYP(I)                                                     A3314410
C                                                                       A3314420
C      TEST IF IGT MARKER GIVES VALID TOOL TO SURFACE RELATION          A3314430
      IF (((IGT+3)/4 .NE. 1) .AND.(IGT .NE. 8)) GO TO 221               A3314440
      IF (IGT-4) 217,218,219                                            A3314450
C                                                                       A3314460
  217 ITEMP(1)=BCDF(TYP(IGT)(1:4))                                      A3314466
      ITEMP(2)=BCDF(TYP(IGT)(5:6))                                      A3314468
      APRNT1(I+2)=DTEMP                                                 A3314470
      GO TO 222                                                         A3314480
  218 IF (JFL4(I) .EQ. 1) GO TO 219                                     A3314490
      ITEMP(1)=BCDF(TYP(4)(1:4))                                        A3314496
      ITEMP(2)=BCDF(TYP(4)(5:6))                                        A3314498
      APRNT1(I+2)=DTEMP                                                 A3314500
      GO TO 222                                                         A3314510
  219 ITEMP(1)=BCDF(TYP(5)(1:4))                                        A3314516
      ITEMP(2)=BCDF(TYP(5)(5:6))                                        A3314518
      APRNT1(I+2)=DTEMP                                                 A3314520
      GO TO 222                                                         A3314530
  221 ITEMP(1)=BCDF(BADTYP(1:4))                                        A3314536
      ITEMP(2)=BCDF(BADTYP(5:8))                                        A3314538
      APRNT1(I+2)=DTEMP                                                 A3314540
  222 CONTINUE                                                          A3314550
C                                                                       A3314560
C        PRINT OUT TOOL INFORMATION                                     A3314570
C                                                                       A3314580
  230 CALL CFORM(JCODE(1),DARRAY,6,28)                                  A3314590
      L=42                                                              A3314595
      DO 231 I=1,IT                                                     A3314600
      CALL HOLFRM(APRNT1(I),DARRAY,L,8,NWD)                             A3314602
  231 L=L+18                                                            A3314604
      CALL CPRINT(DARRAY)                                               A3314606
C                                                                       A3314610
      IF (IT .LE. 2) GO TO 233                                          A3314620
      CALL CFORM(JCODE(2),DARRAY,6,28)                                  A3314630
      L=77                                                              A3314632
      DO 232 I=1,NSV                                                    A3314634
      CALL ICONV(JFAR(I),DARRAY,L,2)                                    A3314636
  232 L=L+16                                                            A3314638
      CALL CPRINT(DARRAY)                                               A3314640
C                                                                       A3314650
C        MORE PRINTOUT-TOLERANCES                                       A3314660
  233 DO 235  I=1,KVAL                                                  A3314670
      K=I+2                                                             A3314680
      M=4*(I-1)+9                                                       A3314700
      N=M+IT-1                                                          A3314710
      CALL CFORM(JCODE(K),DARRAY,6,28)                                  A3314718
      L=36                                                              A3314720
      DO 234 J=M,N                                                      A3314722
      CALL FCONV(APRNT1(J),DARRAY,L,15,7)                               A3314724
  234 L=L+18                                                            A3314726
      CALL CPRINT(DARRAY)                                               A3314728
  235 CONTINUE                                                          A3314729
C                                                                       A3314730
C        IS IT AN ARLM2 DIAGNOSTIC, IF SO RETURN                        A3314740
C                                                                       A3314750
      IF (KVAL .EQ. 2) GO TO 9000                                       A3314760
      CALL CFORM('0   CONDITIONS AT FAILURE',DARRAY,1,25)               A3314770
      CALL CPRINT(DARRAY)                                               A3314780
C                                                                       A3314790
C        COMPUTE R AND H.                                               A3314800
C                                                                       A3314810
      DO 246 I=1,IT                                                     A3314820
      DOT=TA(1)*APRNT2(I+64) + TA(2)*APRNT2(I+68) + TA(3)*APRNT2(I+72)  A3314830
      VTNORM=DSQRT(APRNT2(I+64)**2 + APRNT2(I+68)**2 + APRNT2(I+72)**2) A3314840
      IF(VTNORM) 244,243,244                                            A3314850
  243 ACOS=0.                                                           A3314860
      GO TO 245                                                         A3314870
  244 ACOS=DOT/VTNORM                                                   A3314880
  245 ASIN=DSQRT(1.0-ACOS**2)                                           A3314890
      R(I)=VTNORM*ASIN                                                  A3314900
  246 H(I)=VTNORM*ACOS                                                  A3314910
C                                                                       A3314920
C        PRINT OUT SURFACE VARIABLES.                                   A3314930
C                                                                       A3314940
      DO 299  I=1,16                                                    A3314950
      K=I                                                               A3314960
      M=4*(I-1)+1                                                       A3314980
      N=M+IT-1                                                          A3314990
      CALL CFORM(KCODE(K),DARRAY,6,28)                                  A3315000
      L=36                                                              A3315002
      DO 298 J=M,N                                                      A3315004
      CALL FCONV(APRNT2(J),DARRAY,L,15,7)                               A3315006
  298 L=L+18                                                            A3315008
      CALL CPRINT(DARRAY)                                               A3315010
  299 CONTINUE                                                          A3315012
      GO TO 9000                                                        A3315020
C                                                                       A3315030
C...***** INVALID DIAGNOSTIC NUMBER *****                               A3315040
C                                                                       A3315050
 500  CONTINUE                                                          A3315051
      NIU=NUMERR(2)                                                     A3315052
      IF((NIU.GE.3511).AND.(NIU.LE.3599)) GO TO 810                     A3315053
      IF((NIU.GE.5001).AND.(NIU.LE.5999)) GO TO 820                     A3315054
      CALL CFORM('0       ****  ARELEM ERROR',DARRAY,1,26)              A3315060
      CALL ICONV(NUMABS,DARRAY,29,5)                                    A3315065
      CALL CPRINT(DARRAY)                                               A3315070
      GO TO 8000                                                        A3315075
C                                                                       A3315080
C...***** POCKET ERRORS(NUMBERS 3501-3510)  *****                       A3315090
C                                                                       A3315092
  800 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)              A3315100
      CALL ICONV(NUMERR(2),DARRAY,27,5)                                 A3315102
      CALL CFORM('FROM SUBROUTINE POCKET ***',DARRAY,33,26)             A3315110
      CALL CPRINT(DARRAY)                                               A3315115
      GO TO 8000                                                        A3315116
  810 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)              A3315117
      CALL ICONV(NIU,DARRAY,28,5)                                       A3315118
      CALL CFORM('FROM SMIL OR SCON **',DARRAY,35,20)                   A3315119
      CALL CPRINT(DARRAY)                                               A3315120
      GO TO 8000                                                        A3315121
  820 CALL CFORM('0       ****  ERROR NUMBER',DARRAY,1,26)              A3315122
      CALL ICONV(NIU,DARRAY,28,5)                                       A3315123
      CALL CFORM('FROM SS - SYSTEM  **',DARRAY,35,20)                   A3315124
      CALL CPRINT(DARRAY)                                               A3315125
 8000 CALL CLEROR(IABS(NUMERR(2)))                                      A3315126
 9000 RETURN                                                            A3315130
      END                                                               A3315200
**** SOURCE FILE : M0000435.V02   ***
*
C                                                                       A3320001
C.....FORTRAN SUBROUTINE              APT332                12/67       A3320002
C PURPOSE      TO WRITE ONTO THE VERIFICATION LISTING TAPE A            A3320010
C              GROUP OF COMMON VARIABLES FOR EACH DYNDMP CALL           A3320020
C              FROM AN ACTIVATED DYNDMP BREAKPOINT.                     A3320030
C LINKAGE      CALL APT332                                              A3320040
C ARGUMENTS    NONE                                                     A3320050
C SUBSIDIARIES NONE                                                     A3320060
      SUBROUTINE APT332                                                 A3320070
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3320080
C                                                                       A3320090
C...  THIS PROGRAM WRITES THE DYNDMP INFORMATION BLOCKS ONTO THE        A3320100
C     VERIFICATION LISTING TAPE                                         A3320110
C                                                                       A3320120
      COMMON / EDITOR/EDITOR                                            A3320130
C                                                                       A3320140
      DIMENSION EDITOR (1500)                                           A3320150
C                                                                       A3320160
      EQUIVALENCE (EDITOR(1500),ED(1500))                               A3320170
C                                                                       A3320180
      DIMENSION ED(1500)                                                A3320190
      INTEGER   WORDNO(2)                                               A3320200
C                                                                       A3320210
      DIMENSION NUMBER(2)                                               A3320220
      EQUIVALENCE(ED(2),NUMBER(1))                                      A3320225
      EQUIVALENCE (NUMBER(1), NUMBR1)                                   A3320570
      EQUIVALENCE (NUMBER(2), NUMBR2)                                   A3320580
C                                                                       A3320590
      GO TO (101,102,103,104,105,106,107,999,999,999,                   A3320600
     1       201,202,203,204,205,206,207,208,209,210,                   A3320610
     2       211,212,213,214,215,216,217,999,999,999,                   A3320620
     3       401,402,403,404,999,999,999,999,999,999,                   A3320630
     4       501,502,503,504,505,999,999,999,999,999),NUMBR2            A3320640
  101 CALL APT330 (1,62,92,93,94)                                       A3320650
      CALL APT330 (-1,89,90,91,0)                                       A3320660
      GO TO 9999                                                        A3320670
  102 CALL APT330 (2,62,80,81,82)                                       A3320680
      CALL APT330 (-1,77,78,79,0)                                       A3320690
      GO TO 9999                                                        A3320700
  103 CALL APT330 (3,-10,-55,-56,-50)                                   A3320710
      CALL APT330 (-1,-57,30,31,32)                                     A3320720
      CALL APT330 (-1,21,22,23,0)                                       A3320730
      GO TO 9999                                                        A3320740
  104 CALL APT330 (4,-10,62,-52,70)                                     A3320750
      CALL APT330 (-1,61,71,72,73)                                      A3320760
      CALL APT330 (-1,80,81,82,83)                                      A3320770
      CALL APT330 (-1,84,85,77,78)                                      A3320780
      CALL APT330 (-1,79,0,0,0)                                         A3320790
      GO TO 9999                                                        A3320800
  105 CALL APT330 (5,-10,92,93,94)                                      A3320810
      CALL APT330 (-1,89,90,91,0)                                       A3320820
      GO TO 9999                                                        A3320830
  106 CALL APT330 (6,-10,62,70,6)                                       A3320840
      CALL APT330 (-1,-7,80,81,82)                                      A3320850
      CALL APT330 (-1,77,78,79,92)                                      A3320860
      CALL APT330 (-1,93,94,89,90)                                      A3320870
      CALL APT330 (-1,91,0,0,0)                                         A3320880
      GO TO 9999                                                        A3320890
  107 CALL APT330 (7,-10,62,67,68)                                      A3320900
      CALL APT330 (-1,70,6,-7,69)                                       A3320910
      CALL APT330 (-1,61,80,81,82)                                      A3320920
      CALL APT330 (-1,77,78,79,92)                                      A3320930
      CALL APT330 (-1,93,94,89,90)                                      A3320940
      CALL APT330 (-1,91,71,72,73)                                      A3320950
      CALL APT330 (-1,98,99,100,0)                                      A3320960
      GO TO 9999                                                        A3320970
  201 CALL APT330 (11,33,34,35,24)                                      A3320980
      CALL APT330 (-1,25,26,42,43)                                      A3320990
      CALL APT330 (-1,44,117,118,119)                                   A3321000
      CALL APT330 (-1,120,121,122,123)                                  A3321010
      CALL APT330 (-1,124,125,126,127)                                  A3321020
      CALL APT330 (-1,128,0,0,0)                                        A3321030
      GO TO 9999                                                        A3321040
  202 CALL APT330 (12,4,5,0,0)                                          A3321050
      GO TO 9999                                                        A3321060
  203 CALL APT330 (13,-10,47,5,0)                                       A3321070
      GO TO 9999                                                        A3321080
  204 CALL APT330 (14,4,129,130,131)                                    A3321090
      CALL APT330 (-1,36,37,38,27)                                      A3321100
      CALL APT330 (-1,28,29,30,31)                                      A3321110
      CALL APT330 (-1,32,21,22,23)                                      A3321120
      GO TO 9999                                                        A3321130
  205 CALL APT330 (15,-10,-14,30,31)                                    A3321140
      CALL APT330 (-1,32,21,22,23)                                      A3321150
      GO TO 9999                                                        A3321160
  206 CALL APT330 (16,-15,4,0,0)                                        A3321170
      GO TO 9999                                                        A3321180
  207 CALL APT330 (17,-10,-13,47,0)                                     A3321190
      GO TO 9999                                                        A3321200
  208 CALL APT330 (18,20,-18,0,0)                                       A3321210
      GO TO 9999                                                        A3321220
  209 CALL APT330 (19,-14,-12,86,87)                                    A3321230
      CALL APT330 (-1,88,0,0,0)                                         A3321240
      GO TO 9999                                                        A3321250
  210 CALL APT330 (20,-10,62,70,-54)                                    A3321260
      CALL APT330 (-1,63,64,0,0)                                        A3321270
      GO TO 9999                                                        A3321280
  211 CALL APT330 (21,-10,-54,65,66)                                    A3321290
      CALL APT330 (-1,77,78,79,0)                                       A3321300
      GO TO 9999                                                        A3321310
  212 CALL APT330 (22,-10,-15,4,20)                                     A3321320
      GO TO 9999                                                        A3321330
  213 CALL APT330 (23,-10,4,0,0)                                        A3321340
      GO TO 9999                                                        A3321350
  214 CALL APT330 (24,-10,-16,47,0)                                     A3321360
      GO TO 9999                                                        A3321370
  215 CALL APT330 (25,-10,-51,-54,62)                                   A3321380
      CALL APT330 (-1,70,63,64,65)                                      A3321390
      GO TO 9999                                                        A3321400
  216 CALL APT330 (26,-51,-54,65,66)                                    A3321410
      CALL APT330 (-1,77,78,79,39)                                      A3321420
      CALL APT330 (-1,40,41,0,0)                                        A3321430
      GO TO 9999                                                        A3321440
  217 CALL APT330 (27,-10,-48,30,31)                                    A3321450
      CALL APT330 (-1,32,21,22,23)                                      A3321460
      GO TO 9999                                                        A3321470
  401 CALL APT330 (31,-17,58,74,75)                                     A3321480
      CALL APT330 (-1,76,129,130,131)                                   A3321490
      GO TO 9999                                                        A3321500
  402 CALL APT330 (32,46,45,58,74)                                      A3321510
      CALL APT330 (-1,75,76,0,0)                                        A3321520
      GO TO 9999                                                        A3321530
  403 CALL APT330 (33,-10,59,60,0)                                      A3321540
      GO TO 9999                                                        A3321550
  404 CALL APT330 (34,-11,103,-101,104)                                 A3321560
      CALL APT330 (-1,102,105,106,107)                                  A3321570
      CALL APT330 (-1,111,112,113,114)                                  A3321580
      CALL APT330 (-1,115,116,108,109)                                  A3321590
      CALL APT330 (-1,110,0,0,0)                                        A3321600
      GO TO 9999                                                        A3321610
  501 CALL APT330 (41,-9,-19,-8,0)                                      A3321620
      GO TO 9999                                                        A3321630
  502 CALL APT330 (42,-10,-49,0,0)                                      A3321640
      GO TO 9999                                                        A3321650
  503 CALL APT330 (43,-10,95,96,97)                                     A3321660
      CALL APT330 (-1,30,31,32,0)                                       A3321670
      GO TO 9999                                                        A3321680
  504 CALL APT330 (44,-10,-53,47,77)                                    A3321690
      CALL APT330 (-1,78,79,0,0)                                        A3321700
      GO TO 9999                                                        A3321710
  505 CALL APT330 (45,30,31,32,0)                                       A3321720
      GO TO 9999                                                        A3321730
  999 CALL APT330 (50,-2,0,0,0)                                         A3321740
 9999 RETURN                                                            A3321750
       END                                                              A3322370
**** SOURCE FILE : M0004202.V09   ***
*
C......    FORTRAN SUBROUTINE APT335    11/69    RC                     A3350020
C  PURPOSE     TO PERFORM THE LOGIC NECESSARY TO IMPLEMENT COPY         A3350030
C              AND SET UP THE TRANSFORMATION MATRIX, TMATRX             A3350040
C                                                                       A3350050
C  CALLING SEQUENCE  CALL APT335                                        A3350060
C                                                                       A3350070
C  CALLED BY   APT301                                                   A3350080
C                                                                       A3350090
C  SUBSIDIARIES   APT302, APT305, APT306, APT307, APT308, APT315        A3350100
C                                                                       A3350110
C                                                                       A3350120
      SUBROUTINE APT335                                                 A3350130
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3350140
C                                                                       A3350150
C     THE FOLLOWING PROGRAM IS THE EXECUTIVE ROUTINE FOR THE CLTAPE     A3350160
C     EDITOR.IT HAS THREE FUNCTIONS                                     A3350170
C     TO PROVIDE A VERIFICATION LISTING OF THE CLFILE, INCLUDING ERROR  A3350180
C     DIAGNOSTICS                                                       A3350190
C     TO PROCESS COPY AND VTLAXS COMMANDS                               A3350200
C     TO PROVIDE THE BASE STRUCTURE FOR ANY FUTURE PLOTTING PROGRAMS    A3350210
C                                                                       A3350220
C     THE EXECUTION OF A PART PROGRAM RESULTS IN THE PREPARATION OF     A3350230
C     EXFILE. THE CLEDITOR USES EXFILE AS INPUT TO PREPARE THE          A3350240
C     CLFILE. THE FORMAT OF EXFILE IS NOT IDENTICAL TO THE CLFILE.      A3350250
C                                                                       A3350260
C                                                                       A3350270
C     ***** COMMON-EQUIVALENCE BLOCK VARIABLES *****                    A3350280
C                                                                       A3350290
      COMMON /EDITOR/ EDITOR                                            A3350300
      DIMENSION  EDITOR(1500)                                           A3350310
C                                                                       A3350320
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)                   A3350330
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))    A3350340
      EQUIVALENCE             (AREA1(1),RECORD(1)),(AREA1(1),IRECRD(1)),A3350350
     1  (AREA1(257),CURRNT),(AREA1(258),IDPLOT(1)),(AREA1(260),IPLOTI), A3350360
     2   (AREA1(261),IPX)   , (AREA1(262),IPY)   , (AREA1(263),NCAMRA), A3350370
     3   (AREA1(264),NRECNO), (AREA1(265),SEQNO) , (AREA1(266),NX)    , A3350380
     4   (AREA1(267),NY), (AREA1(268),PARTNO(1)),  (AREA1(280),PT0(1)), A3350390
     5   (AREA1(283),PTU(1)), (AREA1(286),KPLOT) ,                      A3350400
     6(AREA1(335),IPLTAB(1)), (AREA1(375),MLTFLG), (AREA1(376),NREAD) , A3350410
     7 (AREA1(377),NNNNN(1)), (AREA1(381),NRECF) , (AREA1(382),NRECL) , A3350420
     8   (AREA1(383),NCFL)  , (AREA1(384),NPWDS) , (AREA1(385),NPTAB) , A3350430
     9   (AREA1(386),INDXR) , (AREA1(387),INDXN) , (AREA1(388),NRECN1)  A3350440
      EQUIVALENCE             (AREA1(389),NTAPE) , (AREA1(390),NCLEND), A3350450
     1 (AREA1(391),NRECLS), (AREA1(392),NTAPE1),(AREA1(393),INDTBS(1)), A3350460
     2   (AREA1(473),INDXS) , (AREA1(474),EMPTY) , (AREA1(475),ISTFLG), A3350470
     3   (AREA1(476),ICPYSW),     (AREA1(287),MATTAB(1,1,1))            A3350480
      EQUIVALENCE             (AREA1(477),SAVSEQ)                       A3350490
C                                                                       A3350500
      EQUIVALENCE      (AREA2(1),AMATRX(1,1)),     (AREA2(1),AMTR(1)) , A3350510
     1   (AREA2( 37),AN1)   , (AREA2( 38),AN2)   , (AREA2( 39),BRANCH), A3350520
     2   (AREA2( 40),CMAT(1,1)),  (AREA2(52),CNTMAT(1,1)),              A3350530
     3   (AREA2(52),CNTM(1)),  (AREA2(88),CONT(1)),                     A3350540
     4                       (AREA2(91),COUNT(1)), (AREA2( 94),ICLWAS), A3350550
     5   (AREA2( 95),ICOPY) , (AREA2( 96),INDN)  ,                      A3350560
     6   (AREA2( 99),INDTAB(1)),  (AREA2( 99),TABIND(1)),               A3350570
     7                      (AREA2(259),INDXNO(1)),(AREA2(262),IPLOTX), A3350580
     8 (AREA2(463),IPLWAS),(AREA2(464),IRECNI(1)),(AREA2(465),JCOPY)  , A3350590
     9   (AREA2(466),KCOPY) , (AREA2(467),LPRINT), (AREA2(468),MAXCOP)  A3350600
      EQUIVALENCE             (AREA2(485),TNTM(1)),(AREA2(521),VUN)   , A3350610
     1   (AREA2(469),MULTAX), (AREA2(470),NLETRS), (AREA2(471),NTAB)  , A3350620
     2   (AREA2(472),ORIGIN), (AREA2(473),PPRINT(1)),                   A3350630
     3   (AREA2(485),TMATRX(1,1)),  (AREA2(522),TRAMAT(1,1)),           A3350640
     4   (AREA2(534),NCSMAX), (AREA2(535),LVLCPY), (AREA2(536),NOCPY)   A3350650
C                                                                       A3350660
      EQUIVALENCE             (AREA3(  1),AX0)   , (AREA3(  2),AX)    , A3350670
     1   (AREA3(  3),AY0)   , (AREA3(  4),AY)    , (AREA3(  5),DC)    , A3350680
     2   (AREA3(  6),DX)    , (AREA3(  7),DY)    , (AREA3(  8),DELX)  , A3350690
     3   (AREA3(  9),DELY)  , (AREA3( 10),IERR)  , (AREA3( 11),ITRUNC), A3350700
     4   (AREA3( 12),LOKATE), (AREA3( 13),MCODE) , (AREA3( 14),NX0)   , A3350710
     5   (AREA3( 15),NX1)   , (AREA3( 16),NX2)   , (AREA3( 17),NX4)   , A3350720
     6   (AREA3( 18),NX5)   , (AREA3( 19),NY0)   , (AREA3( 20),NY1)   , A3350730
     7   (AREA3( 21),NY2)   , (AREA3( 22),NY4)   , (AREA3( 23),NY5)   , A3350740
     8   (AREA3( 24),PARAM) ,                      (AREA3( 75),PNAME) , A3350750
     9   (AREA3( 76),PPT(1)), (AREA3( 79),EMPTY2), (AREA3( 80),TL)      A3350760
      EQUIVALENCE             (AREA3( 81),X0)    , (AREA3( 82),X1)    , A3350770
     1   (AREA3( 83),X2)    , (AREA3( 84),X3)    , (AREA3( 85),XNEW)  , A3350780
     2   (AREA3( 86),Y0)    , (AREA3( 87),Y1)    , (AREA3( 88),Y2)    , A3350790
     3   (AREA3( 89),Y3)    , (AREA3( 90),YNEW)  , (AREA3( 91),EMPTY3)  A3350800
C                                                                       A3350810
C                                                                       A3350820
      DIMENSION   AMATRX(3,4),AMTR  ( 36),CMAT  (3,4),CNTMAT(3,4),      A3350830
     1CNTM  ( 36),CONT  (  3),COUNT (  3),IDPLOT(  2),INDTAB(160),      A3350840
     2INDXNO(  3),IRECNI(  3),IRECRD(256),PARTNO( 12),                  A3350850
     3PPRINT( 12),PPT   (  3),PT0   (  3),PTU   (  3),NNNNN (  4),      A3350860
     4RECORD(256),TRAMAT(3,4),TABIND(160),TMATRX(3,4),TNTM  ( 36)       A3350870
C                                                                       A3350880
      INCLUDE 'DARRAY.INC'                                              A3350886
C                                                                       A3350890
      INCLUDE 'KNUMBR.INC'                                              A3350902
C                                                                       A3350960
      COMMON /KFLAGS/ KFLAGS                                            A3350970
      DIMENSION  KFLAGS(5)                                              A3350980
      EQUIVALENCE             (KFLAGS( 1),CLPRT) , (KFLAGS( 2),CLWRT) , A3350990
     1   (KFLAGS( 3),CLPLOT), (KFLAGS( 4),TAPFLG), (KFLAGS( 5),ITRAFL)  A3351000
C                                                                       A3351010
      INCLUDE 'CLHOLRTH.INC'                                            A3351142
C                                                                       A3351150
      COMMON /NCFSTO/ NCFSTO,CSCALE                                     A3351160
      DIMENSION NCFSTO(60000),MATTAB(4,4,3),AMTTAB(4,4,3),IPLTAB(40)    A3351170
      EQUIVALENCE  (MATTAB(1,1,1),AMTTAB(1,1,1))                        A3351180
C                                                                       A3351190
C...     TYPE DECLARATIONS AND MISCELLANEOUS EQUIVALENCES               A3351200
C                                                                       A3351210
      DOUBLE PRECISION  NCFSTO, IRECRD, MATTAB, KKSTAK                  A3351230
      INTEGER  CLPRT,CLWRT,CLPLOT,CURRNT,BRANCH,PPFLAG,TAPFLG           A3351240
C                                                                       A3351250
      DIMENSION  ALETRA(3), INDTBS(80)                                  A3351260
      DIMENSION  PPSTAK(15,30), KKSTAK(15,30), CPFL(6)                  A3351270
      EQUIVALENCE  (PPSTAK(1,1),KKSTAK(1,1))                            A3351280
C                                                                       A3351290
      DIMENSION  JRECRD(512)                                            A3351300
      EQUIVALENCE  (RECORD(1),JRECRD(1)), (JRECRD(6),NUMWDS)            A3351310
C                                                                       A3351320
      INTEGER Z4E                                                       A3351323
      PARAMETER (Z4E=1308622848)                                        A3351324
      INTEGER IPOW(2)                                                   A3351325
      EQUIVALENCE(IPOW(1),ZERO)                                         A3351326
C                                                                       A3351330
C...     SYSTEM I/O FILE NAMES                                          A3351340
C                                                                       A3351350
      COMMON/NRECC/NRECC                                                A3351480
      DIMENSION NRECC(21)                                               A3351490
C                                                                       A3351500
      INTEGER CPYEND                                                    A3351510
      DIMENSION CPYEND(2,3)                                             A3351520
C                                                                       A3351530
      DIMENSION AMATSV(3,4,3)                                           A3351531
C                                                                       A3351532
      CHARACTER*8 INDEX,CTEST                                           A3351538
      CHARACTER IFMT13*6,IFMT14*20,IFMT17*12,IFMT18*12                  A3351540
C                                                                       A3351550
      DATA IFMT13/' COPY '/                                             A3351560
      DATA IFMT14/' HAS BEEN COMPLETED '/                               A3351565
      DATA IFMT17/' BEGIN PASS '/                                       A3351570
      DATA IFMT18/' THRU COPY  '/                                       A3351575
C                                                                       A3351580
      DATA  IPOW/Z4E,0/                                                 A3351590
      DATA  INDEX/'INDEX   '/,NOCPSV/0/                                 A3351600
C                                                                       A3351610
C...     ***** COPY COMMAND PROCESSING ROUTINE *****                    A3351620
C                                                                       A3351630
C...     IF AN AERR RECORD HAS BEEN ENCOUNTERED DURING THIS COPY LOOP   A3351640
C        THIS SECTION SETS FLAGS TO BYPASS COPY PROCESSING              A3351650
C                                                                       A3351660
      IF (NOCPY .EQ. 0 .AND. NOCPSV .EQ. 0) GO TO 3005                  A3351670
      LVLTMP=LVLCPY-1                                                   A3351680
      IF (LVLTMP .LT. 0) GO TO 3002                                     A3351690
      NOCPSV=NOCPY                                                      A3351700
      IF (LVLTMP .EQ. 0) NOCPY=0                                        A3351710
      IF (NOCPSV .EQ. 0) GO TO 3005                                     A3351720
      LVLCPY=LVLTMP                                                     A3351730
 3002 ISTFLG=3                                                          A3351740
      NCFL=1                                                            A3351750
      NRECL=1                                                           A3351760
      ICOPY=0                                                           A3351770
      CALL APT336(30034,'APT335  ')                                     A3351780
      ICPYSW=0                                                          A3351790
      GO TO 3963                                                        A3351800
C                                                                       A3351810
C                                                                       A3351820
C                                                                       A3351830
C                                                                       A3351840
C     THIS SECTION PROCESSES THE COPY INSTRUCTION. THE PROGRAM IS SETUP A3351850
C                                                                       A3351860
C     TO PERFORM THREE LEVELS OF NESTED COPIES.THE ONLY LIMITATION ON   A3351870
C                                                                       A3351880
C     THIS IS MAXCOP AND THE AMOUNT OF STORAGE PROVIDED FOR AMATRX,     A3351890
C                                                                       A3351900
C     CNTMAT,COUNT,INDXNO,AND IRECNI.                                   A3351910
C                                                                       A3351920
C     FOR EACH ADDITIONAL NEST AMATRX AND CNTMAT EACH MUST BE INCREASED A3351930
C                                                                       A3351940
C     BY 12. COUNT,INDXNO,AND IRECNI EACH MUST BE INCREASED BY 1.       A3351950
C                                                                       A3351960
C     ALSO MAXCOP MUST BE INCREASED BY 1.                               A3351970
C                                                                       A3351980
C     AMATRX IS THE MATRIX DEFINED BY EACH COPY AS IT IS SENSED AND IS  A3351990
C                                                                       A3352000
C     SET UP BY XYROT,SAME,OR MODIFY INSTRUCTIONS.                      A3352010
C     CNTMAT IS THE CURRENT RESULTANT COPY MATRIX.                      A3352020
C     COUNT IS THE NUMBER OF TIMES A COPY IS TO LOOP.                   A3352030
C     TMATRXIS THE COMBINATION OF ALL MATRICES PRESENTLY IN EFFECT.     A3352040
C     INDXNO IS THE NUMBER OF THE COPY JUST SETUP.                      A3352050
C     IRECNI IS THE RECORD NUMBER OF THE CURRENT COPY.                  A3352060
C     CURRNT IS THE RECORD NUMBER OF THE INSTRUCTION JUST READ.         A3352070
C                                                                       A3352080
C     CHECK FOR VALID INDEX/N                                           A3352090
 3005 CSCALE=1.0                                                        A3352100
      ICPYSW = 0                                                        A3352110
C                                                                       A3352120
      DO 3010 I=1,NTAB,2                                                A3352130
      IF (INT(IRECRD(5))-INDTAB(I).EQ.0) GO TO 3029                     A3352140
 3010 CONTINUE                                                          A3352150
C                                                                       A3352160
C     INDEX NUMBER NOT FOUND IN INDEX TABLE                             A3352170
C                                                                       A3352180
      CALL APT336(30014,'APT335  ')                                     A3352190
 3021 GO TO 3963                                                        A3352200
C                                                                       A3352210
C     SAVE INDEX POINTER                                                A3352220
C                                                                       A3352230
 3029 INDXS=(I+1)/2                                                     A3352240
      INDXN=I                                                           A3352250
      INDXR=I+1                                                         A3352260
C                                                                       A3352270
C...  CHECK IF RECORD IS AN INDEX/N,NOMORE                              A3352280
C...  COMMAND THAT TERMINATES A COPY LOOP                               A3352290
C                                                                       A3352300
      IF (BRANCH.EQ.7.AND.(ICOPY.EQ.0.OR.                               A3352310
     /    RECORD(5).NE.AMTTAB(1,4,ICOPY))) RETURN                       A3352320
      IF (BRANCH.EQ.7) GO TO 3735                                       A3352330
C                                                                       A3352340
C     DETERMINE WHAT COPY MODIFIER IS INVOLVED                          A3352350
C                                                                       A3352360
 3030 CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)                              A3352368
      IF(CTEST.EQ.TRANSL) GO TO 3131                                    A3352370
C                                                                       A3352380
      IF(CTEST.EQ.XYROT ) GO TO 3361                                    A3352390
C                                                                       A3352400
      IF(CTEST.EQ.SAME  ) GO TO 3501                                    A3352410
C                                                                       A3352420
      CALL HOLFRM(IRECRD(7),CTEST,1,8,NWD)                              A3352428
      IF(CTEST.EQ.MODIFY) GO TO 3580                                    A3352430
C                                                                       A3352440
      IF(CTEST.EQ.MIRROR) GO TO 3670                                    A3352450
C                                                                       A3352460
C     IN CORRECT MODIFIER IN A COPY COMMAND                             A3352470
      CALL APT336(30013,'APT335  ')                                     A3352480
C                                                                       A3352490
C     TURN OFF WRITING OF CLTAPE,PLOT-TURN ON CLPRNT                    A3352500
 3100 CLWRT =K0                                                         A3352510
      CLPLOT=0                                                          A3352520
      CLPRT=1                                                           A3352530
      ICOPY=K0                                                          A3352540
      ISTFLG=3                                                          A3352550
      GO TO 3963                                                        A3352560
C     THIS SECTION SETS UP THE TRANSL PARAMETERS                        A3352570
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT             A3352580
 3131 IF (JRECRD(6)-12.LT.0) GO TO 3701                                 A3352590
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS                         A3352600
      IF (RECORD(15).LT. 0.5D0) GO TO 3704                              A3352610
C     SET UP THE TRANSL MATRIX                                          A3352620
C                                                                       A3352630
      AMATRX(1,4)=RECORD( 9)                                            A3352640
      AMATRX(2,4)=RECORD(11)                                            A3352650
      AMATRX(3,4)=RECORD(13)                                            A3352660
      AMATRX(1,1)=1.0D0                                                 A3352670
      AMATRX(1,2)=0.0D0                                                 A3352680
C                                                                       A3352690
      AMATRX(1,3)=0.0D0                                                 A3352700
C                                                                       A3352710
      AMATRX(2,1)=0.0D0                                                 A3352720
C                                                                       A3352730
      AMATRX(2,2)=1.0D0                                                 A3352740
C                                                                       A3352750
      AMATRX(2,3)=0.0D0                                                 A3352760
C                                                                       A3352770
      AMATRX(3,1)=0.0D0                                                 A3352780
      AMATRX(3,2)=0.0D0                                                 A3352790
      AMATRX(3,3)=1.0D0                                                 A3352800
      ICOUNT=RECORD(15)                                                 A3352810
      GO TO 3710                                                        A3352820
C     THIS SECTION SETS UP THE XYROT PARAMETERS                         A3352830
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT             A3352840
 3361 IF (JRECRD(6)-K8.LT.0) GO TO 3701                                 A3352850
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS                         A3352860
      IF (RECORD(11).LT.0.5D0) GO TO 3704                               A3352870
C     SET UP THE XYROT MATRIX                                           A3352880
            RADIN  = RECORD(9)* 0.0174532925D0                          A3352890
      AMATRX(1,1) = DCOS(RADIN)                                         A3352900
C                                                                       A3352910
      AMATRX(1,2) =-DSIN(RADIN)                                         A3352920
C                                                                       A3352930
      AMATRX(1,3)= 0.D0                                                 A3352940
C                                                                       A3352950
      AMATRX(1,4)=0.0D0                                                 A3352960
C                                                                       A3352970
      AMATRX(2,1) = DSIN(RADIN)                                         A3352980
C                                                                       A3352990
      AMATRX(2,2) = DCOS(RADIN)                                         A3353000
C                                                                       A3353010
      AMATRX(2,3)=0.0D0                                                 A3353020
C                                                                       A3353030
      AMATRX(2,4)=0.0D0                                                 A3353040
      AMATRX(3,1)=0.0D0                                                 A3353050
      AMATRX (3,2)=0.D0                                                 A3353060
      AMATRX (3,3)=1.D0                                                 A3353070
      AMATRX (3,4)=0.D0                                                 A3353080
      ICOUNT=RECORD(11)                                                 A3353090
      GO TO 3710                                                        A3353100
C     THIS SECTION SETS UP THE SAME PARAMETERS                          A3353110
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT             A3353120
 3501 IF (JRECRD(6)-K6.LT.0) GO TO 3701                                 A3353130
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS                         A3353140
        IF (RECORD(9).LT.0.5D0) GO TO 3704                              A3353150
C     SET UP THE SAME MATRIX                                            A3353160
C                                                                       A3353170
C                                                                       A3353180
      DO 3520 I=1,3                                                     A3353190
      DO 3520 J=1,4                                                     A3353200
C                                                                       A3353210
 3520 AMATRX (I,J) =0.0D0                                               A3353220
C                                                                       A3353230
      AMATRX(1,1)=1.0D0                                                 A3353240
C                                                                       A3353250
      AMATRX(2,2)=1.0D0                                                 A3353260
C                                                                       A3353270
      AMATRX(3,3)=1.0D0                                                 A3353280
C                                                                       A3353290
      ICOUNT=RECORD(9)                                                  A3353300
      GO TO 3710                                                        A3353310
C     THIS SECTION SETS UP THE MODIFY PARAMETERS                        A3353320
C     CHECK IF THE CORRECT NUMBER OF PARAMETERS ARE PRESENT             A3353330
 3580 IF (JRECRD(6) .NE. 20)  GO TO 3701                                A3353340
C     CHECK IF THE PARAMETER N IS ZERO OR MINUS                         A3353350
      IF (RECORD(23) .LT. 0.5D0)  GO TO 3704                            A3353360
C     SET UP MODIFY MATRIX                                              A3353370
      K = 9                                                             A3353380
      DO 3640 I=1,3                                                     A3353390
      DO 3640 J=1,4                                                     A3353400
      K = K + K1                                                        A3353410
C                                                                       A3353420
 3640 AMATRX(I,J)= RECORD(K)                                            A3353430
C                                                                       A3353440
      ICOUNT=RECORD(23)                                                 A3353450
C      CHECK FOR A SCALE MATRIX                                         A3353460
       DO 3653 I=1,3                                                    A3353470
      IF (DABS( AMATRX(I,4)) - 0.000001D0)  3653,3653,3659              A3353480
 3653  CONTINUE                                                         A3353490
       DO 3656 I=2,3                                                    A3353500
       IF (AMATRX(1,1)-AMATRX(I,I)) 3659,3656,3659                      A3353510
 3656  CONTINUE                                                         A3353520
      IF (CSCALE-1.0D0) 3658,3657,3658                                  A3353530
 3657        CSCALE= AMATRX(1,1)                                        A3353540
      GO TO 3710                                                        A3353550
 3658        CSCALE= CSCALE*AMATRX(1,1)                                 A3353560
      GO TO 3710                                                        A3353570
 3659        CSCALE= 1.0D0                                              A3353580
      GO TO 3710                                                        A3353590
C     THIS SECTION SETS UP THE MIRROR PARAMETERS (NOT OPERATIVE)        A3353600
C     PRINT DIAGNOSTIC FOR USING A MIRROR MODIFIER                      A3353610
C                                                                       A3353620
 3670 CALL APT336(30017,'APT335  ')                                     A3353630
      CLPRT=1                                                           A3353640
      GO TO 3963                                                        A3353650
C                                                                       A3353660
C....    ERROR - INCORRECT NUMBER OF PARAMETERS                         A3353670
 3701 CALL APT336(30015,'APT335  ')                                     A3353680
      GO TO 3100                                                        A3353690
C                                                                       A3353700
C....    ERROR - PARAMETER  N  IS ZERO OR MINUS                         A3353710
 3704 CALL APT336(30016,'APT335  ')                                     A3353720
      GO TO 3100                                                        A3353730
C                                                                       A3353740
C     THE TRANSL,XYROT,SAME,MODIFY,OR MIRROR TYPE COPY HAS BEEN SET UP  A3353750
C     SET RECORD NO. OF CURRENT COPY EQUAL TO RECORD NUMBER OF CURRENT  A3353760
C     INSTRUCTION                                                       A3353770
C                                                                       A3353780
 3710 IF (ICOPY.EQ.0) GO TO 3770                                        A3353790
      IF (RECORD(5).EQ.AMTTAB(1,4,ICOPY)) GO TO 3730                    A3353800
      IF (INDTAB(INDXR).LT.NRECC(1)) GO TO 3770                         A3353810
C                                                                       A3353820
C     ERROR - THIS COPY NOT CURRENT COPY OR INDEX NOT IN PROPER PLACE   A3353830
C                                                                       A3353840
 3719 CALL APT336(30018,'APT335  ')                                     A3353850
      GO TO 3100                                                        A3353860
C                                                                       A3353870
C     THIS COPY HAS CURRENT INDEX NO. - CHECK RECORD NO IN CASE THERE   A3353880
C     ARE MULTIPLE COPIES TO THE SAME INDEX                             A3353890
C                                                                       A3353900
 3730 IF (NRECC(1).NE.MATTAB(2,4,ICOPY  )) GO TO 3770                   A3353910
C                                                                       A3353920
C     THIS IS THE CURRENT COPY - REDUCE COUNT                           A3353930
C                                                                       A3353940
 3735 AMTTAB(4,4,ICOPY)=AMTTAB(4,4,ICOPY)-1.0D0                         A3353950
      IF (AMTTAB(4,4,ICOPY)) 3719,3740,3760                             A3353960
 3740 I=AMTTAB(1,4,ICOPY)                                               A3353970
      IF (CLPRT .NE. 1) GO TO 3743                                      A3353980
      IO=JRECRD(4)                                                      A3353990
      CALL ICONV(IO,DARRAY,2,8)                                         A3353995
      CALL CFORM('.',DARRAY,10,1)                                       A3354000
      CALL CFORM(IFMT13,DARRAY,14,6)                                    A3354005
      CALL ICONV(I,DARRAY,20,5)                                         A3354010
      CALL CFORM(IFMT14,DARRAY,25,20)                                   A3354015
      CALL CPRINT(DARRAY)                                               A3354016
 3743 ICOPY=ICOPY-1                                                     A3354020
      IF (ICOPY) 3719,3745,3750                                         A3354030
C                                                                       A3354040
C...     DECREASE COPY LEVEL MARKER AND RESET FLAGS PROPERLY            A3354050
 3745 ISTFLG=1                                                          A3354060
      NREAD=1                                                           A3354070
      LVLCPY=LVLCPY-1                                                   A3354080
C...     IF COPY LEVEL IS ZERO, RESET FLAGS FOR INITIAL COPY STORAGE    A3354090
 3750 IF (LVLCPY) 3751,3752,3753                                        A3354100
 3751 LVLCPY=0                                                          A3354110
 3752 NREAD=1                                                           A3354120
      ISTFLG=3                                                          A3354130
      NCFL=1                                                            A3354140
      NRECL=1                                                           A3354150
      GO TO 3757                                                        A3354160
C...     RESET FLAGS FOR STORAGE STARTING AFTER THIS COPY COMMAND       A3354170
 3753 NCFL=CPYEND(2,ICOPY+1)                                            A3354180
 3757 CALL APT305                                                       A3354190
      IF (NREAD.LT.3.AND.NRECC(1).NE.                                   A3354200
     /    CPYEND(1,ICOPY+1))                                            A3354210
     /  NRECC(1)=CPYEND(1,ICOPY+1)                                      A3354220
      NRECC(1)=CPYEND(1,ICOPY+1)                                        A3354230
      GO TO 3962                                                        A3354240
C                                                                       A3354250
C     MAKE ANOTHER PASS THROUGH THIS COPY LOOP - UPDATE MATRIX IN MATTABA3354260
C                                                                       A3354270
 3760 CALL APT306(AMTTAB(1,1,ICOPY),AMTTAB(1,1,ICOPY),AMATSV(1,1,ICOPY))A3354280
      GO TO 3820                                                        A3354290
C                                                                       A3354300
C     FIRST TIME FOR THIS COPY - STORE IN NCFSTO                        A3354310
C                                                                       A3354320
 3770 IF (ISTFLG.NE.1) GO TO 3800                                       A3354330
      IF ((NCFL + (NUMWDS+3)) .GE. NCSMAX) GO TO 3800                   A3354340
 3775 K=(NUMWDS +3)                                                     A3354350
      DO 3780 I = 1,K                                                   A3354360
      NCFSTO(NCFL)=IRECRD(I)                                            A3354370
 3780 NCFL=NCFL+1                                                       A3354380
      K=NCFL-NUMWDS-1                                                   A3354390
      NCFSTO(K)=JRECRD(6)+NPWDS*1000                                    A3354400
      NPWDS=NUMWDS+3                                                    A3354410
      NRECL=NRECL+1                                                     A3354420
C                                                                       A3354430
C     ADVANCE COPY LEVEL INDICATOR (ICOPY)                              A3354440
C                                                                       A3354450
 3800 ICOPY = ICOPY+1                                                   A3354460
      CPYEND(1,ICOPY)=NRECC(1)                                          A3354470
      CPYEND(2,ICOPY)=NCFL                                              A3354480
C                                                                       A3354490
      IF (MAXCOP-ICOPY) 3801,3810,3810                                  A3354500
C                                                                       A3354510
C     OVER 3 LEVES OF NESTED COPIES                                     A3354520
C                                                                       A3354530
 3801 CALL APT336(30019,'APT335  ')                                     A3354540
      GO TO 3100                                                        A3354550
C                                                                       A3354560
C     STORE MATRIX FOR NEW COPY IN MATTAB                               A3354570
C                                                                       A3354580
 3810 IF (CLWRT .EQ. 0) GO TO 3100                                      A3354590
      CALL APT308(AMTTAB(1,1,ICOPY),AMATRX(1,1))                        A3354600
      AMTTAB(4,4,ICOPY)=ICOUNT                                          A3354610
      MATTAB(3,4,ICOPY  ) = INDTAB(   INDXR)                            A3354620
      MATTAB(2,4,ICOPY  ) = NRECC(1)                                    A3354630
      MATTAB(1,4,ICOPY  )= INDTAB(  INDXN)                              A3354640
      CALL APT308(AMATSV(1,1,ICOPY),AMATRX(1,1))                        A3354642
      COUNT(ICOPY)=ICOUNT                                               A3354644
C                                                                       A3354650
C     GENERATE PRODUCT TRANSFORMATION MATRIX FOR THIS COPY PASS ---     A3354660
C                                                                       A3354670
 3820 CALL APT305                                                       A3354680
C                                                                       A3354690
C     NOW WE SET UP THE POINTER TO THE CLFILE STORAGE AREA AND BACK UP  A3354700
C      THE INPUT TAPE (IF NECESSARY)                                    A3354710
C                                                                       A3354720
C     NRECF = RECORD NUMBER OF FIRST RECORD IN CLFILE STORAGE (NCFSTO)  A3354730
C     NRECL = RECORD NUMBER OF LAST RECORD IN CLFILE STORAGE            A3354740
C     NRECC = RECORD NUMBER OF CURRENT RECORD                           A3354750
C     MATTAB(1,4,ICOPY) = INDEX NUMBER                                  A3354760
C     MATTAB(2,4,ICOPY) = RECORD NUMBER OF COPY                         A3354770
C     MATTAB(3,4,ICOPY) = RECORD NUMBER OF INDEX                        A3354780
C     ICOPY =  COPY LEVEL                                               A3354790
C     NCFL  =  CLFILE STORAGE AREA POINTER   NCFSTO(NCFL)               A3354800
C                                                                       A3354810
 3900 IF (CLPRT .EQ. 1) CALL APT302                                     A3354820
      IF (MATTAB(3,4,ICOPY  ).GT.NRECL) GO TO 3950                      A3354830
      NREAD=K3                                                          A3354840
      ISTFLG=K2                                                         A3354850
      NCFL=INDTBS(INDXS)                                                A3354860
      K=NCFSTO(NCFL+2)/1000                                             A3354870
      K=NCFSTO(NCFL+2)+3-K*1000                                         A3354880
      DO 3905 I = 1,K                                                   A3354890
      IRECRD(I)=NCFSTO(NCFL)                                            A3354900
 3905 NCFL=NCFL+1                                                       A3354910
      IRECRD(3)=ZERO                                                    A3354920
      NUMWDS=K-3                                                        A3354930
 3910 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)                              A3354938
      IF(CTEST.EQ.INDEX .AND.                                           A3354940
     C   DABS(IRECRD(5)-MATTAB(1,4,ICOPY) ).LT. 0.1) GO TO 3960         A3354950
      ICPYSW = -1                                                       A3354960
      GO TO 3963                                                        A3354970
 3950 MATTMP=MATTAB(3,4,ICOPY)                                          A3354980
      NRECC(1)=MATTMP                                                   A3355000
      CALL APT314(NTAPE,NRECC(1))                                       A3355010
      GO TO 3910                                                        A3355020
 3960 I=COUNT(ICOPY)-AMTTAB(4,4,ICOPY)+1.0D0                            A3355030
      K=AMTTAB(1,4,ICOPY)                                               A3355040
      IF (CLPRT .NE. 1) GO TO 3962                                      A3355050
      IO=JRECRD(4)                                                      A3355060
      CALL ICONV(IO,DARRAY,2,8)                                         A3355065
      CALL CFORM('.',DARRAY,10,1)                                       A3355070
      CALL CFORM(IFMT17,DARRAY,14,12)                                   A3355075
      CALL ICONV(I,DARRAY,26,4)                                         A3355080
      CALL CFORM(IFMT18,DARRAY,30,12)                                   A3355085
      CALL CPRINT(DARRAY)                                               A3355086
 3962 ICPYSW = 1                                                        A3355090
 3963 RETURN                                                            A3355100
      END                                                               A3355110
**** SOURCE FILE : M0001851.V08   ***
*
C                                                                       A3360001
C.....FORTRAN SUBROUTINE              APT336                 8/1/68  AR A3360002
C PURPOSE      TO WRITE ON THE VERIFICATION LISTING THE CLEDITOR        A3360010
C              ERROR MESSAGES.                                          A3360020
C LINKAGE      CALL APT336(IERROR,SUBNAM)                               A3360030
C ARGUMENTS    IERROR    INTEGER VARIABLE CONTAING THE ERROR NUMBER     A3360040
C SUBSIDIARIES NONE                                                     A3360050
      SUBROUTINE APT336 (IERROR,SUBNAM)                                 A3360060
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3360070
C                                                                       A3360071
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR                        A3360072
C                                                                       A3360073
          INCLUDE 'SUPER.INC'                                           A3360074
C                                                                       A3360079
      INCLUDE 'CLERR.INC'                                               A3360082
C                                                                       A3360091
      COMMON /EDITOR/ EDITOR                                            A3360092
      DIMENSION EDITOR(1500),AREA3(250)                                 A3360093
      EQUIVALENCE (EDITOR(1500),AREA3(250))                             A3360094
      INCLUDE 'DARRAY.INC'                                              A3360095
C                                                                       A3360096
C                                                                       A3360110
C                                                                       A3360111
C... INITILIZE ARRAY INDICATING WHICH ERRORS ARE OF SEVERITY LEVEL FOUR.A3360112
C                                                                       A3360113
      INTEGER  ERRLEV,IERRN                                             A3360114
      DIMENSION  ERRLEV(4)                                              A3360115
      CHARACTER SUBNAM*8,NOTEXT*54                                      A3360116
      DATA  IERRN/0/,ERRLEV/4*0/                                        A3360117
      DATA NOTEXT/' THERE IS NO DIAGNOSTIC MESSAGE FOR THIS ERROR NUMBERA3360118
     * '/                                                               A3360119
C                                                                       A3360120
      CALL CFORM('0       ****  CL EDITING ERROR NO.',DARRAY,1,34)      A3360121
      CALL ICONV(IERROR,DARRAY,36,5)                                    A3360125
      CALL CFORM(' FROM SUBROUTINE ',DARRAY,42,17)                      A3360127
      CALL CFORM(SUBNAM,DARRAY,59,8)                                    A3360128
      CALL CFORM('****',DARRAY,67,4)                                    A3360129
      CALL CPRINT(DARRAY)                                               A3360130
      DO 10 I=1,CERDM                                                   A3360142
      IF(IERROR.EQ.CERAD1(I))GOTO 40                                    A3360143
   10 CONTINUE                                                          A3360144
      CALL CFORM(NOTEXT,DARRAY,15,54)                                   A3360145
      CALL CPRINT(DARRAY)                                               A3360146
      GOTO 60                                                           A3360147
   40 K=CERAD2(I)                                                       A3360148
      IF (I.EQ.1) THEN                                                  A3360149
        J=1                                                             A3360150
      ELSE                                                              A3360151
        J=CERAD2(I-1)+1                                                 A3360152
      END IF                                                            A3360153
      L1=11                                                             A3360154
      DO 50 I=J,K                                                       A3360155
        IF (L1.GE.113) THEN                                             A3360156
          CALL CPRINT(DARRAY)                                           A3360157
          L1=11                                                         A3360158
        END IF                                                          A3360159
        L1=L1+4                                                         A3360160
        DARRAY(L1:L1+3)=CERTXT(I)                                       A3360161
   50 CONTINUE                                                          A3360162
      CALL CPRINT(DARRAY)                                               A3360163
C... SET ERROR LEVEL INDICATOR FOR SUPERVISOR.                          A3360164
   60 XTRAS(1) = XTRAS(1) + 1                                           A3360165
      IF(ERRX.GT.4) GOTO 320                                            A3360166
      ERRX = 4                                                          A3360168
      DO 310 I=1,IERRN                                                  A3360170
      IF(IERROR.EQ.ERRLEV(I)) GOTO 320                                  A3360172
  310 CONTINUE                                                          A3360174
      ERRX = 8                                                          A3360176
  320 RETURN                                                            A3360178
      END                                                               A3360180
**** SOURCE FILE : M0000441.V02   ***
*
C                                                                       A3400001
C.....FORTRAN SUBROUTINE                APT340...            8/1/68  AR A3400002
C                                                                       A3400010
C PURPOSE      SETS UP CUT VECTOR TO BE USED IN APT341                  A3400020
C LINKAGE      CALL APT340                                              A3400030
C ARGUMENTS    NONE                                                     A3400040
C SUBSIDIARIES APT341                                                   A3400050
C********************************************************************   A3400060
      SUBROUTINE APT340                                                 A3400070
C***********************************************************************A3400080
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3400090
C     SYSTEM COMMON,DIMENSION, AND EQUIVALENCE STATEMENTS               A3400100
      COMMON /EDITOR/EDITOR                                             A3400110
C                                                                       A3400120
      DIMENSION EDITOR(1500)                                            A3400130
C                                                                       A3400140
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)                   A3400145
      EQUIVALENCE (EDITOR(1500),AREA1 (1500),AREA2 (1000),AREA3 (250))  A3400150
      EQUIVALENCE  (AREA3(82),X1),  (AREA3(83),X2),                     A3400160
     +             (AREA3(87),Y1),  (AREA3(88),Y2)                      A3400165
      COMMON/R5AXIS/                                                    A3400170
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,   A3400180
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,  A3400190
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,   A3400200
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,CUTTER,TEST  ,CRADUS    A3400210
      COMMON/I5AXIS/                                                    A3400220
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV             A3400230
C...    ESTABLISH CUT VECTOR                                            A3400240
      XCV = X2 - X1                                                     A3400250
      YCV = Y2 - Y1                                                     A3400260
      ZCV = Z2 - Z1                                                     A3400270
      DLNGTH = DLNGTH +DSQRT(XCV**2+YCV**2+ZCV**2)                      A3400280
C...    NO WCORN                                                        A3400290
      CALL APT341                                                       A3400300
      RETURN                                                            A3400310
      END                                                               A3400320
**** SOURCE FILE : M0000442.V02   ***
*
C                                                                       A3410001
C.....FORTRAN SUBROUTINE                APT341...            8/1/68  AR A3410002
C                                                                       A3410010
C PURPOSE      COMPUTES THE ALTERED TOOL POSITION. THE TILT             A3410020
C              ANGLE IS PRORATED OVER THE TOTAL MOVE FROM               A3410030
C              VTLAXS/ON TO OFF                                         A3410040
C LINKAGE      CALL APT341                                              A3410050
C ARGUMENTS    NONE                                                     A3410060
C SUBSIDIARIES APT315,APT342                                            A3410070
C********************************************************************   A3410080
      SUBROUTINE APT341                                                 A3410090
C***********************************************************************A3410100
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3410110
C********************************************************************   A3410120
C     SYSTEM COMMON,DIMENSION, AND EQUIVALENCE STATEMENTS               A3410130
      COMMON /EDITOR/EDITOR                                             A3410140
C                                                                       A3410150
      DIMENSION EDITOR(1500)                                            A3410160
C                                                                       A3410170
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)                   A3410175
      EQUIVALENCE (EDITOR(1500),AREA1 (1500),AREA2 (1000),AREA3 (250))  A3410180
      EQUIVALENCE  (AREA3(82),X1),  (AREA3(83),X2),                     A3410190
     +             (AREA3(87),Y1),  (AREA3(88),Y2)                      A3410195
      COMMON/R5AXIS/                                                    A3410200
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,   A3410210
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,  A3410220
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,   A3410230
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,CUTTER,TEST  ,CRADUS    A3410240
      COMMON/I5AXIS/                                                    A3410250
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV             A3410260
C                                                                       A3410270
C...    PRORATE TILT ANGLE                                              A3410280
      CANG=STANG+(DLNGTH/TLNGTH)*DANG                                   A3410290
      TSIN=DSIN(CANG)                                                   A3410300
      TSIN1 =DABS(TSIN)                                                 A3410310
      TCOS=DCOS(CANG)                                                   A3410320
      CALL APT342(ZCV,ZUN,ZTR)                                          A3410330
      CALL APT315(ZTR,ZTR)                                              A3410340
C...    IS CANG .GT. 80 DEGREES                                         A3410350
      IF(DABS(TCOS)-.1736) 5, 5, 90                                     A3410360
90    CONTINUE                                                          A3410370
C...    CALCULATE XYZ COORDINATES OF NEW CUTTER POSITION                A3410380
      IF(CRADUS)  100, 110, 100                                         A3410390
100   CONTINUE                                                          A3410400
      Z = CRADUS*(1.0-TCOS)+(CUTTER-CRADUS)*TSIN1                       A3410410
      GOTO  120                                                         A3410420
110   CONTINUE                                                          A3410430
      Z =DABS(CUTTER*TSIN)                                              A3410440
  120 IF(CANG*ZUN)  130, 150, 150                                       A3410450
  130 IF(CRADUS)   140, 170, 140                                        A3410460
  140 TEST = CRADUS*(TCOS-TSIN1+(TSIN1-1.0)/TCOS)-CUTTER*(TCOS-2.0/TCOS A3410470
     1+1.0)                                                             A3410480
      TEST = -TEST                                                      A3410490
      GOTO 9                                                            A3410500
  150 IF(CRADUS)  160,  8, 160                                          A3410510
  160 TEST = CRADUS*(TCOS-TSIN1+(TSIN1-1.0)/TCOS)+CUTTER*(1.0-TCOS)     A3410520
      GOTO 9                                                            A3410530
  170 IF(IABOVE)  3,  6,  3                                             A3410540
    3 Z = -Z                                                            A3410550
      GOTO 8                                                            A3410560
    5 JSUBER=30007                                                      A3410570
C...    ERROR 30007 - TILT ANGLE IS GREATER THAN 80 DEGREES.            A3410580
      GOTO  40                                                          A3410590
    6 TEST =-(2.0*CUTTER/TCOS-CUTTER-CUTTER*TCOS)                       A3410600
      GOTO 9                                                            A3410610
    8 TEST = CUTTER*(1.0-TCOS)                                          A3410620
    9 XDO = TEST*XTR                                                    A3410630
      YDO =TEST*YTR                                                     A3410640
      ZDO =TEST*ZTR                                                     A3410650
      XCC=X2+XDO                                                        A3410660
      YCC=Y2+YDO                                                        A3410670
      ZCC=Z2+Z                                                          A3410680
C...    CALCULATE IJK COMPONENTS OF NEW TLAXIS VECTOR                   A3410690
      XTR=TCOS*XTR                                                      A3410700
      YTR=TCOS*YTR                                                      A3410710
      IF(ZUN) 10, 20,20                                                 A3410720
   10 ZTR=TSIN                                                          A3410730
      CALL APT342(ZCV,ZTR,ZTA)                                          A3410740
      GOTO 30                                                           A3410750
   20 ZTR=-TSIN                                                         A3410760
      CALL APT342(ZTR,ZCV,ZTA)                                          A3410770
   30 CALL APT315(ZTA,ZTA)                                              A3410780
      X1=X2                                                             A3410790
      Y1=Y2                                                             A3410800
      Z1=Z2                                                             A3410810
   40 CONTINUE                                                          A3410820
      RETURN                                                            A3410830
       END                                                              A3410840
**** SOURCE FILE : M0000443.V01   ***
*
C.....FORTRAN SUBROUTINE                APT342...            8/1/68  AR A3420000
C PURPOSE      TO CALCULATE A VECTOR THAT IS THE CROSS PRODUCT          A3420010
C              OF TWO SPECIFIED VECTORS.                                A3420020
C LINKAGE      CALL APT342(V1,V2,V3)                                    A3420030
C ARGUMENTS    V1,V2 ARE VECTORS WHOSE CROSS PRODUCT IS V3.             A3420040
C SUBSIDIARIES NONE                                                     A3420050
      SUBROUTINE APT342(CRA,CRB,CRC)                                    A3420060
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A3420070
      DIMENSION CRA(3),CRB(3),CRC(3)                                    A3420080
      CRTEM1=CRA(2)*CRB(3)-CRA(3)*CRB(2)                                A3420090
      CRTEM2=CRA(3)*CRB(1)-CRA(1)*CRB(3)                                A3420100
      CRC(3)=CRA(1)*CRB(2)-CRA(2)*CRB(1)                                A3420110
      CRC(1)=CRTEM1                                                     A3420120
      CRC(2)=CRTEM2                                                     A3420130
      RETURN                                                            A3420140
       END                                                              A3420150
**** SOURCE FILE : M0000432.V06   ***
*
C                                                                       A3160001
C.....BLOCK DATA ROUTINE BDA316              APT316          12/67      A3160002
C PURPOSE      THIS IS A BLOCK DATA SUBROUTINE AND IS NOT               A3160010
C              CALLED OR EXECUTED.  THE SUBROUTINE LOADS THE            A3160020
C              COMMON STORAGE ARRAY HOLRTH WITH THE BCD REPRESENTATION  A3160030
C              OF THE RECORD TYPES WHICH REQUIRE SPECIAL HANDLING       A3160050
C              IN THE CLTAPE EDITOR.                                    A3160060
C                                                                       A3160061
      BLOCK DATA BDA316                                                 A3160070
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A3160080
C                                                                       A3160090
C                                                                       A3160096
      INCLUDE 'CLHOLRTH.INC'                                            A3160112
      CHARACTER*8 HOLRTH (30)                                           A3160130
      EQUIVALENCE (HOLRTH(1),ALL)                                       A3160132
C                                                                       A3160133
C                                                                       A3160150
       DATA  HOLRTH    /'ALL   ','CIRCLE','FINI  ','FROM  ','GODLTA',   A3160160
     1'GOTO  ','INDIRP','INDIRV','MODIFY','MIRROR','SAME  ','TRANSL',   A3160170
     2'XYROT ','YZPLAN','ZXPLAN','XYPLAN','CUT   ','DNTCUT','INTOL ',   A3160180
     3'OUTTOL','CUTTER','OVPLOT','COPY  ','ON    ','OFF   ','DUMMY5',   A3160190
     4'DUMMY6','DUMMY7','DUMMY8','DUMMY9'/                              A3160200
      END                                                               A3160410
**** SOURCE FILE : M0011541.W01   ***
*
C                                                                       M0000100
C...FORTRAN SUBROUTINE CLERRW  (BLOCK DATA)                             M0000200
C                                                                       M0000300
      BLOCK DATA BDCLER                                                 M0000400
C                                                                       M0000500
      INCLUDE 'CLERR.INC'                                               M0000610
C                                                                       M0000620
      INTEGER A,B                                                       M0000700
      DIMENSION A(34),B(34)                                             M0000800
      CHARACTER*4 E(570)                                                M0000900
C...CERAD1 : ERROR & WARNING NUMBERS FOR CL EDITOR                      M0000910
C...CERAD2 : POSITION IN ARRAY CERTXT OF END OF ERROR MESSAGE           M0000920
      EQUIVALENCE (A(1),CERAD1(1))                                      M0001000
      EQUIVALENCE (B(1),CERAD2(1))                                      M0001100
      EQUIVALENCE (E(1),CERTXT(1))                                      M0001200
C                                                                       M0001300
      DATA CERCNT,CERDM     / 570,  34/                                 M0001400
C                                                                       M0001500
      DATA A(  1),A(  2),A(  3),A(  4)/  30001,  30002,  30003,  30004/ M0001600
      DATA A(  5),A(  6),A(  7),A(  8)/  30005,  30006,  30008,  30009/ M0001700
      DATA A(  9),A( 10),A( 11),A( 12)/  30010,  30011,  30012,  30013/ M0001800
      DATA A( 13),A( 14),A( 15),A( 16)/  30014,  30015,  30016,  30017/ M0001900
      DATA A( 17),A( 18),A( 19),A( 20)/  30018,  30019,  30020,  30021/ M0002000
      DATA A( 21),A( 22),A( 23),A( 24)/  30024,  30025,  30026,  30027/ M0002100
      DATA A( 25),A( 26),A( 27),A( 28)/  30030,  30031,  30032,  30034/ M0002200
      DATA A( 29),A( 30),A( 31),A( 32)/  30035,  30036,  30037,  30038/ M0002300
      DATA A( 33),A( 34)/  30039,  30040/                               M0002400
      DATA B(  1),B(  2),B(  3),B(  4)/      7,     32,     52,     76/ M0002500
      DATA B(  5),B(  6),B(  7),B(  8)/     94,    110,    126,    141/ M0002600
      DATA B(  9),B( 10),B( 11),B( 12)/    153,    171,    189,    199/ M0002700
      DATA B( 13),B( 14),B( 15),B( 16)/    206,    219,    232,    246/ M0002800
      DATA B( 17),B( 18),B( 19),B( 20)/    272,    279,    287,    294/ M0002900
      DATA B( 21),B( 22),B( 23),B( 24)/    314,    324,    345,    369/ M0003000
      DATA B( 25),B( 26),B( 27),B( 28)/    379,    400,    410,    434/ M0003100
      DATA B( 29),B( 30),B( 31),B( 32)/    461,    487,    514,    521/ M0003200
      DATA B( 33),B( 34)/    553,    570/                               M0003300
      DATA E(   1),E(   2),E(   3),E(   4)/'INVA','LID ','VTLA','XS S'/ M0003400
      DATA E(   5),E(   6),E(   7),E(   8)/'TATE','MENT','.   ','A VT'/ M0003500
      DATA E(   9),E(  10),E(  11),E(  12)/'LAXS','/OFF',' COM','MAND'/ M0003600
      DATA E(  13),E(  14),E(  15),E(  16)/' WAS',' GIV','EN W','ITHO'/ M0003700
      DATA E(  17),E(  18),E(  19),E(  20)/'UT A',' VTL','AXS/','ON C'/ M0003800
      DATA E(  21),E(  22),E(  23),E(  24)/'OMMA','ND O','R  A',' PRE'/ M0003900
      DATA E(  25),E(  26),E(  27),E(  28)/'VIOU','S VT','LAXS',' ERR'/ M0004000
      DATA E(  29),E(  30),E(  31),E(  32)/'OR O','CCUR','RED.','    '/ M0004100
      DATA E(  33),E(  34),E(  35),E(  36)/'TWO ','VTLA','XS/O','N CO'/ M0004200
      DATA E(  37),E(  38),E(  39),E(  40)/'MMAN','DS W','ERE ','GIVE'/ M0004300
      DATA E(  41),E(  42),E(  43),E(  44)/'N WI','THOU','T A ','VTLA'/ M0004400
      DATA E(  45),E(  46),E(  47),E(  48)/'XS/O','FF C','OMMA','ND B'/ M0004500
      DATA E(  49),E(  50),E(  51),E(  52)/'ETWE','EN T','HEM.','    '/ M0004600
      DATA E(  53),E(  54),E(  55),E(  56)/'A FR','OM C','OMMA','ND W'/ M0004700
      DATA E(  57),E(  58),E(  59),E(  60)/'AS G','IVEN',' BET','WEEN'/ M0004800
      DATA E(  61),E(  62),E(  63),E(  64)/' A V','TLAX','S/ON',' COM'/ M0004900
      DATA E(  65),E(  66),E(  67),E(  68)/'MAND',' AND',' ITS','  CO'/ M0005000
      DATA E(  69),E(  70),E(  71),E(  72)/'RRES','POND','ING ','VTLA'/ M0005100
      DATA E(  73),E(  74),E(  75),E(  76)/'XS/O','FF C','OMMA','ND. '/ M0005200
      DATA E(  77),E(  78),E(  79),E(  80)/'A VT','LAXS',' COM','MAND'/ M0005300
      DATA E(  81),E(  82),E(  83),E(  84)/' WAS',' GIV','EN W','ITHO'/ M0005400
      DATA E(  85),E(  86),E(  87),E(  88)/'UT A',' PRE','VIOU','S MO'/ M0005500
      DATA E(  89),E(  90),E(  91),E(  92)/'TION',' OR ','FROM','  CO'/ M0005600
      DATA E(  93),E(  94),E(  95),E(  96)/'MMAN','D.  ','A VT','LAXS'/ M0005700
      DATA E(  97),E(  98),E(  99),E( 100)/' COM','MAND',' WAS',' GIV'/ M0005800
      DATA E( 101),E( 102),E( 103),E( 104)/'EN W','ITHO','UT A',' PRE'/ M0005900
      DATA E( 105),E( 106),E( 107),E( 108)/'VIOU','S MU','LTAX',' COM'/ M0006000
      DATA E( 109),E( 110),E( 111),E( 112)/'MAND','.   ','VTLA','XS E'/ M0006100
      DATA E( 113),E( 114),E( 115),E( 116)/'RROR','. CO','RNER',' RAD'/ M0006200
      DATA E( 117),E( 118),E( 119),E( 120)/'IUS ','IS G','REAT','ER T'/ M0006300
      DATA E( 121),E( 122),E( 123),E( 124)/'HAN ','THE ','CUTT','ER R'/ M0006400
      DATA E( 125),E( 126),E( 127),E( 128)/'ADIU','S.  ','VTLA','XS E'/ M0006500
      DATA E( 129),E( 130),E( 131),E( 132)/'RROR','. CO','RNER',' RAD'/ M0006600
      DATA E( 133),E( 134),E( 135),E( 136)/'IUS ','MUST',' BE ','ZERO'/ M0006700
      DATA E( 137),E( 138),E( 139),E( 140)/' WHE','N US','ING ','ZSMA'/ M0006800
      DATA E( 141),E( 142),E( 143),E( 144)/'LL. ','NO M','OTIO','N BE'/ M0006900
      DATA E( 145),E( 146),E( 147),E( 148)/'TWEE','N A ','VTLA','XS/O'/ M0007000
      DATA E( 149),E( 150),E( 151),E( 152)/'N AN','D A ','VTLA','XS/O'/ M0007100
      DATA E( 153),E( 154),E( 155),E( 156)/'FF. ','TRAC','UT W','AS G'/ M0007200
      DATA E( 157),E( 158),E( 159),E( 160)/'IVEN',' BET','WEEN',' A V'/ M0007300
      DATA E( 161),E( 162),E( 163),E( 164)/'TLAX','S/ON',' AND',' ITS'/ M0007400
      DATA E( 165),E( 166),E( 167),E( 168)/' COR','RESP','ONDI','NG  '/ M0007500
      DATA E( 169),E( 170),E( 171),E( 172)/'VTLA','XS/O','FF. ','COPY'/ M0007600
      DATA E( 173),E( 174),E( 175),E( 176)/' WAS',' GIV','EN B','ETWE'/ M0007700
      DATA E( 177),E( 178),E( 179),E( 180)/'EN A',' VTL','AXS/','ON A'/ M0007800
      DATA E( 181),E( 182),E( 183),E( 184)/'ND I','TS C','ORRE','SPON'/ M0007900
      DATA E( 185),E( 186),E( 187),E( 188)/'DING','  VT','LAXS','/OFF'/ M0008000
      DATA E( 189),E( 190),E( 191),E( 192)/'.   ','INCO','RREC','T MO'/ M0008100
      DATA E( 193),E( 194),E( 195),E( 196)/'DIFI','ER I','N A ','COPY'/ M0008200
      DATA E( 197),E( 198),E( 199),E( 200)/' COM','MAND','.   ','INDE'/ M0008300
      DATA E( 201),E( 202),E( 203),E( 204)/'X NU','MBER',' NOT',' DEF'/ M0008400
      DATA E( 205),E( 206),E( 207),E( 208)/'INED','.   ','INCO','RREC'/ M0008500
      DATA E( 209),E( 210),E( 211),E( 212)/'T NU','MBER',' OF ','PARA'/ M0008600
      DATA E( 213),E( 214),E( 215),E( 216)/'METE','RS I','N TH','E CO'/ M0008700
      DATA E( 217),E( 218),E( 219),E( 220)/'PY C','OMMA','ND. ','THE '/ M0008800
      DATA E( 221),E( 222),E( 223),E(224)/'PARA','METE','R ''N',''' IN'/M0008900
      DATA E( 225),E( 226),E( 227),E( 228)/' THE',' COP','Y IS',' ZER'/ M0009000
      DATA E( 229),E( 230),E( 231),E( 232)/'O OR',' NEG','ATIV','E.  '/ M0009100
      DATA E( 233),E( 234),E( 235),E( 236)/'MIRR','OR, ','MIRR','OR O'/ M0009200
      DATA E( 237),E( 238),E( 239),E( 240)/'N TH','E WA','LL, ','YOU '/ M0009300
      DATA E( 241),E( 242),E( 243),E( 244)/'ARE ','NOT ','ALLO','WED '/ M0009400
      DATA E( 245),E( 246),E( 247),E( 248)/'AT A','LL. ','COPY',' LOG'/ M0009500
      DATA E( 249),E( 250),E( 251),E( 252)/'IC E','RROR','. CH','ECK '/ M0009600
      DATA E( 253),E( 254),E( 255),E( 256)/'PART',' PRO','GRAM',' FOR'/ M0009700
      DATA E( 257),E( 258),E( 259),E( 260)/' OVE','RLAP','PING',' COP'/ M0009800
      DATA E( 261),E( 262),E( 263),E( 264)/'Y AR','EAS ',' OR ','AN I'/ M0009900
      DATA E( 265),E( 266),E( 267),E( 268)/'LLEG','AL T','RANS','FER '/ M0010000
      DATA E( 269),E( 270),E( 271),E( 272)/'INTO',' COP','Y LO','OP. '/ M0010100
      DATA E( 273),E( 274),E( 275),E( 276)/'COPY',' IS ','OVER',' 3 N'/ M0010200
      DATA E( 277),E( 278),E( 279),E( 280)/'EST ','LEVE','LS. ','INDE'/ M0010300
      DATA E( 281),E( 282),E( 283),E( 284)/'X NU','MBER',' PRE','VIOU'/ M0010400
      DATA E( 285),E( 286),E( 287),E( 288)/'SLY ','USED','.   ','TOO '/ M0010500
      DATA E( 289),E( 290),E( 291),E( 292)/'MANY',' IND','EX/N',' COM'/ M0010600
      DATA E( 293),E( 294),E( 295),E( 296)/'MAND','S.  ','SYST','EM F'/ M0010700
      DATA E( 297),E( 298),E( 299),E( 300)/'AILU','RE. ','POSI','TION'/ M0010800
      DATA E( 301),E( 302),E( 303),E( 304)/'ING ','ERRO','R IN',' COP'/ M0010900
      DATA E( 305),E( 306),E( 307),E( 308)/'Y LO','GIC.','  CH','ECK '/ M0011000
      DATA E( 309),E( 310),E( 311),E( 312)/'COMP','UTER',' PRO','GRAM'/ M0011100
      DATA E( 313),E( 314),E( 315),E( 316)/'MER.','    ','BAD ','PARA'/ M0011200
      DATA E( 317),E( 318),E( 319),E( 320)/'METE','R IN',' THI','S CL'/ M0011300
      DATA E( 321),E( 322),E( 323),E( 324)/'DAT ','STAT','EMEN','T.  '/ M0011400
      DATA E( 325),E( 326),E( 327),E( 328)/'THE ','FIRS','T RE','CORD'/ M0011500
      DATA E( 329),E( 330),E( 331),E( 332)/' NUM','BER ','GIVE','N IN'/ M0011600
      DATA E( 333),E( 334),E( 335),E( 336)/' THE',' CLD','AT S','TATE'/ M0011700
      DATA E( 337),E( 338),E( 339),E( 340)/'MENT',' WAS',' NOT','  FO'/ M0011800
      DATA E( 341),E( 342),E( 343),E( 344)/'UND ','IN O','LD C','LFIL'/ M0011900
      DATA E( 345),E( 346),E( 347),E( 348)/'E.  ','EXFI','LE F','ORMA'/ M0012000
      DATA E( 349),E( 350),E( 351),E( 352)/'T ER','ROR.',' UNR','ECOG'/ M0012100
      DATA E( 353),E( 354),E( 355),E( 356)/'NIZA','BLE ','COMM','AND.'/ M0012200
      DATA E( 357),E( 358),E( 359),E( 360)/' FRA','ME S','IZE ','IS  '/ M0012300
      DATA E( 361),E( 362),E( 363),E( 364)/'LESS',' THA','N ZE','RO I'/ M0012400
      DATA E( 365),E( 366),E( 367),E( 368)/'N WI','DTH ','OR L','ENGT'/ M0012500
      DATA E( 369),E( 370),E( 371),E( 372)/'H.  ','UNID','ENTI','FIED'/ M0012600
      DATA E( 373),E( 374),E( 375),E( 376)/' POS','T PR','OCES','SOR '/ M0012700
      DATA E( 377),E( 378),E( 379),E( 380)/'COMM','AND.','    ','THE '/ M0012800
      DATA E( 381),E( 382),E( 383),E( 384)/'LAST',' REC','ORD ','NUMB'/ M0012900
      DATA E( 385),E( 386),E( 387),E( 388)/'ER G','IVEN',' IN ','THE '/ M0013000
      DATA E( 389),E( 390),E( 391),E( 392)/'CLDA','T ST','ATEM','ENT '/ M0013100
      DATA E( 393),E( 394),E( 395),E( 396)/'WAS ','NOT ',' FOU','ND I'/ M0013200
      DATA E( 397),E( 398),E( 399),E( 400)/'N OL','D CL','FILE','.   '/ M0013300
      DATA E( 401),E( 402),E( 403),E( 404)/'INVA','LID ','CLFI','LE R'/ M0013400
      DATA E( 405),E( 406),E( 407),E( 408)/'ECOR','D. R','UN T','ERMI'/ M0013500
      DATA E( 409),E( 410),E( 411),E( 412)/'NATE','D.  ','NO C','OPY '/ M0013600
      DATA E( 413),E( 414),E( 415),E( 416)/'TRAN','SFOR','MATI','ON H'/ M0013700
      DATA E( 417),E( 418),E( 419),E( 420)/'AS B','EEN ','PERF','ORME'/ M0013800
      DATA E( 421),E( 422),E( 423),E( 424)/'D BE','CAUS','E AN',' ERR'/ M0013900
      DATA E( 425),E( 426),E( 427),E( 428)/'OR  ','HAS ','OCCU','RED '/ M0014000
      DATA E( 429),E( 430),E( 431),E( 432)/'INSI','DE T','HE C','OPY '/ M0014100
      DATA E( 433),E( 434),E( 435),E( 436)/'LOOP','.   ','THE ','LIMI'/ M0014200
      DATA E( 437),E( 438),E( 439),E( 440)/'T ON',' THE',' NUM','BER '/ M0014300
      DATA E( 441),E( 442),E( 443),E( 444)/'OF L','ENGT','H OF',' POS'/ M0014400
      DATA E( 445),E( 446),E( 447),E( 448)/'TPRO','CESS','OR T','YPE '/ M0014500
      DATA E( 449),E( 450),E( 451),E( 452)/' COM','MAND','S AF','TER '/ M0014600
      DATA E( 453),E( 454),E( 455),E( 456)/'A HO','LDPP',' COM','MAND'/ M0014700
      DATA E( 457),E( 458),E( 459),E( 460)/' HAS',' BEE','N EX','CEED'/ M0014800
      DATA E( 461),E( 462),E( 463),E( 464)/'ED. ','THE ','FOLL','OWIN'/ M0014900
      DATA E( 465),E( 466),E( 467),E( 468)/'G VT','LAXS',' SEQ','UENC'/ M0015000
      DATA E( 469),E( 470),E( 471),E( 472)/'E HA','S NO','T BE','EN P'/ M0015100
      DATA E( 473),E( 474),E( 475),E( 476)/'ROCE','SSED',' BEC','AUSE'/ M0015200
      DATA E( 477),E( 478),E( 479),E( 480)/'  AN',' ARE','LEM ','ERRO'/ M0015300
      DATA E( 481),E( 482),E( 483),E( 484)/'R HA','S OC','CURR','ED W'/ M0015400
      DATA E( 485),E( 486),E( 487),E( 488)/'ITHI','N IT','.   ','AN A'/ M0015500
      DATA E( 489),E( 490),E( 491),E( 492)/'RELE','M RE','STAR','T ER'/ M0015600
      DATA E( 493),E( 494),E( 495),E( 496)/'ROR ','HAS ','CAUS','ED C'/ M0015700
      DATA E( 497),E( 498),E( 499),E( 500)/'L PR','INTO','UT S','TART'/ M0015800
      DATA E( 501),E( 502),E( 503),E( 504)/'ING ','AT T','HE  ','CL P'/ M0015900
      DATA E( 505),E( 506),E( 507),E( 508)/'OINT',' PRE','CEDI','NG T'/ M0016000
      DATA E( 509),E( 510),E( 511),E( 512)/'HE E','RROR',' INF','ORMA'/ M0016100
      DATA E( 513),E( 514),E( 515),E( 516)/'TION','.   ','ERRO','NEOU'/ M0016200
      DATA E( 517),E( 518),E( 519),E( 520)/'S UN','ITS ','COMM','AND.'/ M0016300
      DATA E( 521),E( 522),E( 523),E( 524)/'    ','TOO ','EXTE','NSIV'/ M0016400
      DATA E( 525),E( 526),E( 527),E( 528)/'E CO','PY C','OMMA','NDS,'/ M0016500
      DATA E( 529),E( 530),E( 531),E( 532)/' COM','MON ','NCFS','TO T'/ M0016600
      DATA E( 533),E( 534),E( 535),E( 536)/'OO S','MALL',': SU','BDIV'/ M0016700
      DATA E( 537),E( 538),E( 539),E( 540)/'IDE ',' COP','Y-SE','QUEN'/ M0016800
      DATA E( 541),E( 542),E( 543),E( 544)/'CE, ','OR I','NCRE','ASE '/ M0016900
      DATA E( 545),E( 546),E( 547),E( 548)/'NCFS','TO-S','TORA','GE ('/ M0017000
      DATA E( 549),E( 550),E( 551),E( 552)/'SYST','EM P','ROGR','AMME'/ M0017100
      DATA E( 553),E( 554),E( 555),E( 556)/'R). ','COPY',' OR ','TRAC'/ M0017200
      DATA E( 557),E( 558),E( 559),E( 560)/'UT P','ROCE','SSIN','G FO'/ M0017300
      DATA E( 561),E( 562),E( 563),E( 564)/'R EX','TEND','ED C','LDAT'/ M0017400
      DATA E( 565),E( 566),E( 567),E( 568)/'A FO','RMAT','S NO','T MO'/ M0017500
      DATA E( 569),E( 570)/'UNTE','D.  '/                               M0017600
C                                                                       M0017700
      END                                                               M0017800
**** SOURCE FILE : M0000444.V04   ***
*
C                                                                       CLED0001
C....FORTRAN SUBROUTINE  ...CLED...       11/69                  HG     CLED0002
      SUBROUTINE CLED                                                   CLED0010
C                                                                       CLED0020
C         PURPOSE           ...TO CALL APT301                           CLED0030
C                                                                       CLED0040
C         CALLING SEQUENCE  ...THIS IS THE MAIN PROGRAM OF THE CLEDITOR CLED0050
C                                                                       CLED0060
C         ARGUMENTS         ...NONE                                     CLED0070
C                                                                       CLED0080
C         CALLED BY         ...NONE                                     CLED0090
C                                                                       CLED0100
C         SUBSIDIARIES      ...TYPE...      ...ENTRY...                 CLED0110
C                                                                       CLED0120
C                           SUBROUTINE         APT301                   CLED0130
C                                                                       CLED0140
C         RESTRICTIONS      ...NONE                                     CLED0150
C                                                                       CLED0160
C         DIAGNOSTICS       ...NONE                                     CLED0170
C....                                                                   CLED0180
C                                                                       CLED0190
C                                                                       CLED0200
C                                                                       CLED0210
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR                        CLED0220
C                                                                       CLED0230
      INCLUDE 'SUPER.INC'                                               CLED0236
C                                                                       CLED0255
C                                                                       CLED0290
      INCLUDE 'SYMFIL.INC'                                              CLED0291
      CALL  APT301                                                      CLED0380
C....    INDICATE NORMAL ENDING                                         CLED0384
      ABEND=.FALSE.                                                     CLED0386
C                                                                       CLED0460
      RETURN                                                            CLED0470
      END                                                               CLED0480
**** SOURCE FILE : M0004176.V02   ***
*
C                                                                       ER000100
C                                                                       ER000200
C.....FORTRAN SUBROUTINE             CLEROR...                          ER000300
C                                                                       ER000400
C PURPOSE      TO PRINT DIAGNOSTICS                                     ER000500
C                                                                       ER000600
C LINKAGE      CALL CLEROR(NERR)                                        ER000700
C                                                                       ER000800
C ARGUMENTS    NERR       INTEGER ERROR NUMBER                          ER000900
C                                                                       ER001000
C                                                                       ER001100
      SUBROUTINE CLEROR(NERR)                                           ER001200
C                                                                       ER001300
C...                ...ERROR DIAGNOSTICS                                ER001400
C                                                                       ER001500
      INCLUDE 'EXERR.INC'                                               ER001610
C                                                                       ER001620
      CHARACTER B*120,NOTEXT*54                                         ER001810
C                                                                       ER001900
      DATA B/'                                                       ' /ER002000
      DATA NOTEXT/'THERE IS NO DIAGNOSTIC MESSAGE FOR THIS ERROR NUMBER ER002100
     * '/                                                               ER002200
C                                                                       ER002300
C...     POSITION OF THE CURRENT ERROR NUMBER                           ER002400
C                                                                       ER002500
      I=0                                                               ER002600
      NUMMIN=1                                                          ER002700
      NUMMAX=ERRDM                                                      ER002800
      NUMBER=IABS(NERR)                                                 ER002900
   10 NUMMER=(NUMMIN+NUMMAX)/2                                          ER003000
      NUMB=ERRAD1(NUMMER)                                               ER003100
      IF(I.GT.ERND)GOTO  40                                             ER003200
      I=I+1                                                             ER003300
      IF(NUMBER-NUMB)30,60,20                                           ER003400
   20 NUMMIN=NUMMER+1                                                   ER003500
      GOTO 10                                                           ER003600
   30 NUMMAX=NUMMER-1                                                   ER003700
      GOTO 10                                                           ER003800
   40 CALL CFORM(NOTEXT,B,14,54)                                        ER003900
      CALL CPRINT(B)                                                    ER004000
      GOTO 150                                                          ER004100
C                                                                       ER004200
   60 KK=ERRAD2(NUMMER)                                                 ER004310
      IF (NUMMER.EQ.1) THEN                                             ER004320
        II=1                                                            ER004330
      ELSE                                                              ER004340
        II=ERRAD2(NUMMER-1)+1                                           ER004500
      END IF                                                            ER004510
C                                                                       ER004700
      K=10                                                              ER005110
      DO 70 I=II,KK                                                     ER005120
        IF (K.GE.113) THEN                                              ER005130
          CALL CPRINT(B)                                                ER005140
          K=10                                                          ER005150
        END IF                                                          ER005160
        K=K+4                                                           ER005170
        B(K:K+3)=ERRTXT(I)                                              ER005180
   70 CONTINUE                                                          ER005190
      CALL CPRINT(B)                                                    ER005200
C                                                                       ER005700
  150 RETURN                                                            ER005800
C                                                                       ER005900
      END                                                               ER006000
**** SOURCE FILE : M0011539.W03   ***
*
C                                                                       CNVR0001
C......    FORTRAN SUBROUTINE CNVRT3    11/69    RC                     CNVR0002
C.....FORTRAN SUBROUTINE                CNVRT3...            8/1/68  AR CNVR0010
C PURPOSE          TO CONVERT EXFILE RECORDS INTOAPTIII FORMAT AND      CNVR0020
C                  WRITE THEM ON CLFIL3.                                CNVR0030
C                                                                       CNVR0040
C CALLING SEQUENCE CALL CNVRT3(MLTFLG)                                  CNVR0050
C                                                                       CNVR0060
C ARGUMENTS        MLTFLG     MULTAX FLAG-0,IF OFF                      CNVR0070
C                                         1,IF ON                       CNVR0072
C                                                                       CNVR0080
C CALLED BY        APT301                                               CNVR0090
C                                                                       CNVR0100
C SUBSIDIARIES     NONE                                                 CNVR0110
C                                                                       CNVR0120
C DIAGNOSTICS      ERROR CODE   COMMENT                                 CNVR0130
C                  ----------   -------                                 CNVR0140
C                               UNIDENTIFIED POSTPROCESSOR COMMAND---   CNVR0150
C                               XXXXXX. SEQUENCE NO. NNNNNN.            CNVR0160
C                                                                       CNVR0170
C                               UNIDENTIFIED MODIFIER--- XXXXXX.        CNVR0180
C                               SEQUENCE NO. NNNNNN.                    CNVR0190
C                                                                       CNVR0200
C METHOD           THE CURRENT EXFILE RECORD IN THE RECORD ARRAY IS     CNVR0210
C                  EXAMINED AND THE APPROPRIATE APTIII CLTAPE RECORDS   CNVR0220
C                  ARE WRITTEN ON CLFIL3.                               CNVR0230
C                                                                       CNVR0240
C*********************************************************************  CNVR0250
C                                                                       CNVR0260
      SUBROUTINE  CNVRT3(MLTFLG)                                        CNVR0270
      IMPLICIT  DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)             CNVR0280
C                                                                       CNVR0290
      COMMON /EDITOR/ EDITOR                                            CNVR0300
      DIMENSION  EDITOR(1500)                                           CNVR0310
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)                   CNVR0315
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))    CNVR0320
C                                                                       CNVR0322
      EQUIVALENCE (AREA2(94),NUMCLD)                                    CNVR0327
      DIMENSION  RECORD(256),IRECRD(256),JRECRD(512)                    CNVR0330
      EQUIVALENCE  (EDITOR(1),IRECRD(1),RECORD(1),JRECRD(1))            CNVR0340
      EQUIVALENCE  (JRECRD(6),NUMWDS)                                   CNVR0350
      DOUBLE PRECISION  IRECRD                                          CNVR0360
C                                                                       CNVR0365
C...            SYSTEM I/O FILE NAMES                                   CNVR0370
C                                                                       CNVR0380
      INCLUDE 'SYMFIL.INC'                                              CNVR0465
C                                                                       CNVR0470
C                                                                       CNVR0471
      COMMON/I5AXIS/                                                    CNVR0472
     1 IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV            CNVR0473
C                                                                       CNVR0474
C... LOCAL VARIABLES                                                    CNVR0480
C                                                                       CNVR0490
      CHARACTER*6 RECTYP,PPNAME,PMNAME,PARAM,PM0,PM1,                   CNVR0495
     1            PAR0,PAR1,PAR2,PAR3,SPLWDS                            CNVR0496
      DIMENSION  IRXXXX(515),RXXXX(256),IR1000(7),R1000(2),RECTYP(10),  CNVR0500
     1           PPNAME(22),PMNAME(100),PARAM(200),IJK(2),PM0(50),      CNVR0510
     2           PM1(50),PAR0(50),PAR1(50),PAR2(50),PAR3(50),SPLWDS(20) CNVR0515
      CHARACTER*6 PP2(2),PM2(8),PAR4(7)                                 CNVR0516
      INTEGER     IPP2(2),IPM2(8),IPAR4(7)                              CNVR0517
      CHARACTER*8 BLANK,SCALIN(4),TEST8                                 CNVR0518
      CHARACTER*6 OFF,FROM,GODLTA,SCALWD,TEST,ATEST                     CNVR0519
      EQUIVALENCE  (IJK(2),IRXXXX(1)),(IRXXXX(4),RXXXX(1)),             CNVR0520
     1             (IRXXXX(3),SUBTYP),(IR1000(4),R1000(1)),             CNVR0530
     3             (PMNAME(1),PM0(1)),(PMNAME(51),PM1(1)),              CNVR0541
     3             (PARAM(1),PAR0(1)),(PARAM(51),PAR1(1)),              CNVR0542
     4             (PARAM(101),PAR2(1)),(PARAM(151),PAR3(1))            CNVR0545
      INTEGER BCDF                                                      CNVR0551
      INTEGER  SUBTYP,SUBCLS                                            CNVR0560
      CHARACTER    RCDCHR*1000,BLK,CHAR*8,BLK2*2,BLK4*4                 CNVR0570
      EQUIVALENCE  (BLK,BLANK),(BLK2,BLANK),(BLK4,BLANK)                CNVR0575
      LOGICAL  MULTAX                                                   CNVR0580
C                                                                       CNVR0582
C...     RECORD TYPES AND POST PROCESSOR SUBCLASS WORDS                 CNVR0584
C                                                                       CNVR0586
      DATA  RECTYP /'FINI  ','AERR  ','GERR  ','MULTAX','CLDATA',       CNVR0587
     1              'CLPRNT','CLDAT ','      ','      ','      '/       CNVR0588
C                                                                       CNVR0589
      DATA  SPLWDS /'CUT   ','2DCALC','******','INTOL ','OUTTOL',       CNVR0590
     1              'CUTTER','******','******','DYNDMP','******',       CNVR0592
     2              'DNTCUT','3DCALC','TOLER ','THICK ','MAXDP ',       CNVR0594
     3              'NUMPTS','GOUGCK','POCKET','******','******'/       CNVR0596
C                                                                       CNVR0598
C                                                                       CNVR0600
      DATA  PPNAME /'END   ','STOP  ','OPSTOP','ISTOP ','RAPID ',       CNVR0610
     1              'SWITCH','RETRCT','DRESS ','PICKUP','UNLOAD',       CNVR0620
     2              'PENUP ','PENDWN','ZERO  ','CODEL ','RESET ',       CNVR0630
     3              'GOCLER','DRAWLI','PROBY ','PROBX ','ULOCKX',       CNVR0640
     4              'LOCKX ','FACEML'/                                  CNVR0650
      DATA PP2/'GOHOME','BREAK '/                                       CNVR0653
      DATA IPP2/   14,    17  /                                         CNVR0656
      DATA  PM0    /'PLUNGE','HEAD  ','MODE  ','CLEARP','TMARK ',       CNVR0660
     1              'REWIND','CUTCOM','REVERS','FEDRAT','DELAY ',       CNVR0670
     2              'AIR   ','OPSKIP','LEADER','PPLOT ','MACHIN',       CNVR0680
     3              'MCHTOL','PIVOTZ','MCHFIN','SEQNO ','INTCOD',       CNVR0690
     4              'DISPLY','AUXFUN','CHECK ','POSTN ','TOOLNO',       CNVR0700
     5              'ROTABL','ORIGIN','SAFETY','ARCSLP','COOLNT',       CNVR0710
     6              'SPINDL','IFRO  ','TURRET','*1034*','ROTHED',       CNVR0720
     7              'THREAD','TRANS ','TRACUT','INDEX ','COPY  ',       CNVR0730
     8              'PLOT  ','OVPLOT','LETTER','PPRINT','PARTNO',       CNVR0740
     9              'INSERT','CAMERA','PREFUN','COUPLE','PITCH '/       CNVR0750
      DATA  PM1      /'MDWRIT','MDEND ','ASLOPE','CYCLE ','LOADTL',     CNVR0760
     1              'SELCTL','CLRSRF','DWELL ','DRAFT ','CLAMP ',       CNVR0770
     2              'PLABEL','MAXDPM','SLOWDN','MAXVEL','LPRINT',       CNVR0780
     3              'MOVETO','CORNFD','PBS   ','REGBRK','VTLAXS',       CNVR0790
     4              'WCORN ','MAGTAP','*1073*','*1074*','*1075*',       CNVR0800
     5              '*1076*','*1077*','*1078*','*1079*','*1080*',       CNVR0810
     6              '*1081*','*1082*','*1083*','*1084*','*1085*',       CNVR0820
     7  15*'      '/                                                    CNVR0830
      DATA PM2/'DELETE','PPLOT','WRTMDI','ENDMDI','POSMAP',             CNVR0833
     1              'DEBUGG','LINTOL','******'/                         CNVR0834
      DATA IPM2/ 1012,  1014  ,  1051  ,  1052  ,   1068 ,              CNVR0836
     1                 1032,  1067  ,     0  /                          CNVR0838
      DATA PAR0    /'ATANGL','CENTER','CROSS ','FUNOFY','INTOF ',       CNVR0840
     1              'INVERS','LARGE ','LEFT  ','LENGTH','MINUS ',       CNVR0850
     2              'NEGX  ','NEGY  ','NEGZ  ','NOX   ','NOY   ',       CNVR0860
     3              'NOZ   ','PARLEL','PERPTO','PLUS  ','POSX  ',       CNVR0870
     4              'POSY  ','POSZ  ','RADIUS','RIGHT ','SCALE ',       CNVR0880
     5              'SMALL ','TANTO ','TIMES ','TRANSL','UNIT  ',       CNVR0890
     6              'XLARGE','XSMALL','XYPLAN','XYROT ','YLARGE',       CNVR0900
     7              'YSMALL','YZPLAN','YZROT ','ZLARGE','ZSMALL',       CNVR0910
     8              'ZXPLAN','ZXROT ','3PT2SL','4PT1SL','5PT   ',       CNVR0920
     9              'INTERC','SLOPE ','IN    ','OUT   ','OPEN  '/       CNVR0930
      DATA  PAR1     /'ALL   ','LAST  ','NOMORE','SAME  ','MODIFY',     CNVR0940
     1              'MIRROR','START ','ENDARC','CCLW  ','CLW   ',       CNVR0950
     2              'MEDIUM','HIGH  ','LOW   ','CONST ','DECR  ',       CNVR0960
     3              'INCR  ','GRID  ','ROTREF','TO    ','PAST  ',       CNVR0970
     4              'ON    ','OFF   ','IPM   ','IPR   ','CIRCUL',       CNVR0980
     5              'LINEAR','PARAB ','RPM   ','MAXRPM','TURN  ',       CNVR0990
     6              'FACE  ','BORE  ','BOTH  ','XAXIS ','YAXIS ',       CNVR1000
     7              'ZAXIS ','NORMDS','AUTO  ','FLOOD ','MIST  ',       CNVR1010
     8              'TAPKUL','STEP  ','MAIN  ','SIDE  ','LINCIR',       CNVR1020
     9              'MAXIPM','REV   ','TYPE  ','NIXIE ','LIGHT '/       CNVR1030
      DATA PAR2    /'FOURPT','TWOPT ','PTSLOP','PTNORM','SPLINE',       CNVR1040
     1              'RTHETA','THETAR','XYZ   ','TANON ','TRFORM',       CNVR1050
     2              'NORMAL','UP    ','DOWN  ','LOCK  ','SFM   ',       CNVR1060
     3              'XCOORD','YCOORD','ZCOORD','MULTRD','XYVIEW',       CNVR1070
     4              'YZVIEW','ZXVIEW','SOLID ','DASH  ','DOTTED',       CNVR1080
     5              'CTRLIN','DITTO ','PEN   ','SCRIBE','BLACK ',       CNVR1090
     6              'RED   ','GREEN ','BLUE  ','INTENS','LITE  ',       CNVR1100
     7              'MED   ','DARK  ','CHUCK ','COLLET','AAXIS ',       CNVR1110
     8              'BAXIS ','CAXIS ','TPI   ','OPTION','RANGE ',       CNVR1120
     9              'PSTAN ','RANDOM','FRONT ','REAR  ','SADDLE'/       CNVR1130
      DATA PAR3      /'MILL  ','THRU  ','DEEP  ','TRAV  ','SETOOL',     CNVR1140
     1              'SETANG','HOLDER','MANUAL','ADJUST','CUTANG',       CNVR1150
     2              'NOW   ','NEXT  ','DRILL ','BINARY','BCD   ',       CNVR1160
     3              'PART  ','REAM  ','TAP   ','CAM   ','NOCLRP',       CNVR1170
     4              'REGTOL','TRAVED','MAXWD ','MAXLNG','SPIRAL',       CNVR1180
     5              'ANTSPI','ZIGZAG','NOBND ','MAXPTS','GAPLES',       CNVR1190
     6              '**181*','ARC   ',' *183*','RETAIN','ZIGZAG',       CNVR1200
     7              'OMIT  ','AVOID ',' *188*','AT    ',' *190*',       CNVR1210
     8              ' *191*',' *192*',' *193*',' *194*',' *195$',       CNVR1220
     9              ' *196*',' *197*',' *198*',' *199*',' *200*'/       CNVR1230
      DATA PAR4/'PITCH','RAIL','FULL','SAVMDI','SAVTDI','MMPM','MMPR'/  CNVR1232
      DATA IPAR4/ 67   ,  93  , 147  ,   398  ,   396  ,   171,  172/   CNVR1234
      DATA IR1000(2)/1000/                                              CNVR1240
      DATA IRCOLD/-1/                                                   CNVR1241
      DATA  BLANK,OFF,MULTAX,FROM,GODLTA /'        ','OFF   ',.FALSE.,  CNVR1250
     1 'FROM  ','GODLTA'/                                               CNVR1260
      DATA  NNN/0/                                                      CNVR1261
      DATA SCALIN /'MM      ','CM      ','INCHES  ','FEET    '/         CNVR1263
      DATA SCALWD /'UNITS '/                                            CNVR1264
      DATA I3000/0/                                                     CNVR1265
C     --------------------------------------------------------          CNVR1267
C                                                                       CNVR1270
      KKIX=0                                                            CNVR1272
      IF (NNN .NE. 0) GO TO 3                                           CNVR1273
      DO 1 I=4,7                                                        CNVR1274
        IR1000(I)=BCDF(BLK4)                                            CNVR1275
    1 CONTINUE                                                          CNVR1276
C...     STORE SEQUENCE NUMBER AND INITIALIZE                           CNVR1288
    3 ISEQ=JRECRD(4)                                                    CNVR1291
      IR1000(3)=ISEQ-(ISEQ/10000)*10000                                 CNVR1294
      IRXXXX(1)=ISEQ/10000                                              CNVR1297
      IRXXXX(3)=0                                                       CNVR1300
      DO 10  I = 1,5                                                    CNVR1310
   10 RXXXX(I) = 0.D0                                                   CNVR1320
      IX = 0                                                            CNVR1330
C                                                                       CNVR1332
C...     BRANCH ON RECORD TYPE                                          CNVR1334
      CALL HOLFRM(RECORD(1),TEST,1,6,NWD)                               CNVR1335
      DO 100  IT=1,10                                                   CNVR1336
      IF (TEST .NE. RECTYP(IT)) GO TO 100                               CNVR1338
      GO TO (300,350,400,500,1000, 450,9999,9999,9999,9999), IT         CNVR1339
  100 CONTINUE                                                          CNVR1340
C                                                                       CNVR1346
C...     CHECK FOR SPECIAL WORDS--SPECIAL PROCESSING NEEDED             CNVR1348
      DO 105 KK=1,20                                                    CNVR1350
      IF (TEST .EQ. SPLWDS(KK)) GO TO 600                               CNVR1352
  105 CONTINUE                                                          CNVR1360
C                                                                       CNVR1368
C...     *** POSTPROCESSOR TYPE COMMANDS***                             CNVR1370
      IF(TEST.EQ.SCALWD) GO TO 605                                      CNVR1371
      IRXXXX(2) = 2000                                                  CNVR1380
      CALL HOLFRM(RECORD(5),TEST8,1,8,NWD)                              CNVR1388
      IF ((JRECRD(6) .NE. 2) .OR. (TEST8 .NE. BLANK))  GO TO 140        CNVR1390
      DO 110 SUBTYP = 1,22                                              CNVR1400
      IF (TEST .EQ. PPNAME(SUBTYP))  GO TO 9000                         CNVR1410
  110 CONTINUE                                                          CNVR1420
      DO 111 I = 1,2                                                    CNVR1422
      SUBTYP=IPP2(I)                                                    CNVR1424
      IF(TEST.EQ.PP2(I))GOTO 9000                                       CNVR1426
  111 CONTINUE                                                          CNVR1428
C                                                                       CNVR1430
  140 DO 150  SUBTYP = 1001,1100                                        CNVR1470
      IF (TEST .EQ. PMNAME(SUBTYP-1000))  GO TO 160                     CNVR1480
  150 CONTINUE                                                          CNVR1485
      DO 151 I=1,8                                                      CNVR1486
      SUBTYP=IPM2(I)                                                    CNVR1487
      IF(TEST.EQ.PM2(I))GOTO 160                                        CNVR1488
  151 CONTINUE                                                          CNVR1490
C                                                                       CNVR1492
C...     UNIDENTIFIED POSTPROCESSOR COMMAND--ISSUE ERROR MESSAGE        CNVR1494
      CALL APT336(30030,'CNVRT3  ')                                     CNVR1500
      GO TO 9999                                                        CNVR1502
C                                                                       CNVR1504
  160 IR = 4                                                            CNVR1510
      LR=NUMWDS+3                                                       CNVR1512
      IF (JRECRD(8) .EQ. 3 .AND. JRECRD(12) .EQ. 0)  IX=1               CNVR1515
  170 IX = IX + 1                                                       CNVR1520
      IT=JRECRD(IR*2)                                                   CNVR1528
      GO TO (180,190,230,225), IT                                       CNVR1530
C...     ***  TYPE 1 --- FLOATING POINT DATA ITEM PAIR                  CNVR1535
  180 RXXXX(IX) = RECORD(IR+1)                                          CNVR1540
      GO TO 250                                                         CNVR1550
C...     ***  TYPE 2 --- ALPHANUMERIC DATA ITEM PAIR                    CNVR1555
  190 CALL HOLFRM(RECORD(IR+1),ATEST,1,6,NWD)                           CNVR1558
      DO 200  I = 1,200                                                 CNVR1560
      IF (ATEST .EQ. PARAM(I))  GO TO 220                               CNVR1570
  200 CONTINUE                                                          CNVR1580
      DO 201 J=1,7                                                      CNVR1582
      I=IPAR4(J)                                                        CNVR1584
      IF(ATEST.EQ.PAR4(J))GOTO 220                                      CNVR1586
  201 CONTINUE                                                          CNVR1588
      CALL HOLFRM(RECORD(IR+1),RCDCHR,1,8,NWD)                          CNVR1596
      CHAR=BLANK                                                        CNVR1597
      N=6                                                               CNVR1598
      DO 210  I = 6,1,-1                                                CNVR1600
      IF (RCDCHR(I:I) .EQ. BLK) GO TO 210                               CNVR1615
      CHAR(N:N) = RCDCHR(I:I)                                           CNVR1620
      N = N - 1                                                         CNVR1622
  210 CONTINUE                                                          CNVR1623
      IRXXXX(2*IX+2) = BCDF(CHAR(1:4))                                  CNVR1624
      IRXXXX(2*IX+3) = BCDF(CHAR(5:8))                                  CNVR1625
      GO TO 250                                                         CNVR1626
  220 MM=2*IX+2                                                         CNVR1627
      IRXXXX(MM) = 0                                                    CNVR1628
      IRXXXX(MM+1) = I                                                  CNVR1630
      GO TO 250                                                         CNVR1632
C...     ***  TYPE 4 --- GEOMETRIC VARIABLE                             CNVR1635
  225 M=JRECRD((IR+1)*2)                                                CNVR1636
      DO 227  I=1,M                                                     CNVR1638
      J=IX+I-1                                                          CNVR1640
      RXXXX(J)=RECORD(IR+I+1)                                           CNVR1642
  227 CONTINUE                                                          CNVR1644
      IX=J                                                              CNVR1646
      IR=IR+M                                                           CNVR1647
      GO TO 250                                                         CNVR1648
C...     ***  TYPE 3 --- ALPHANUMERIC LITERAL STRING                    CNVR1649
  230 M = JRECRD((IR+2)*2)                                              CNVR1650
      RCDCHR=BLANK                                                      CNVR1662
      CALL HOLFRM(RECORD(IR+3),RCDCHR,1,M,NWD)                          CNVR1664
      N=M/6                                                             CNVR1666
      IF (M.GT.N*6) N=N+1                                               CNVR1668
      I=1                                                               CNVR1672
      DO 232  KIX=1,N                                                   CNVR1675
      CHAR=RCDCHR(I:I+5)//BLK2                                          CNVR1676
      IRXXXX(2*IX+2) = BCDF(CHAR(1:4))                                  CNVR1677
      IRXXXX(2*IX+3) = BCDF(CHAR(5:8))                                  CNVR1678
      IX=IX+1                                                           CNVR1679
      I=I+6                                                             CNVR1684
  232 CONTINUE                                                          CNVR1685
      DO 240  KIX = IX,12                                               CNVR1690
      IRXXXX(2*IX+2) = BCDF(BLANK)                                      CNVR1692
      IRXXXX(2*IX+3) = BCDF(BLANK)                                      CNVR1694
      IF (SUBTYP.GE.1044.AND.SUBTYP.LE.1046)KKIX=11                     CNVR1696
  240 CONTINUE                                                          CNVR1735
      IR = IR + JRECRD((IR+1)*2)                                        CNVR1740
  250 IR = IR + 2                                                       CNVR1745
  260 IF (IR.LT.LR)  GOTO 170                                           CNVR1750
      GOTO 9000                                                         CNVR1752
                                                                        CNVR1753
C...     FINI RECORD...                                                 CNVR1754
  300 IRXXXX(2) = 14000                                                 CNVR1760
      IF (NNN.EQ.0)RETURN                                               CNVR1765
      GO TO 9000                                                        CNVR1770
C                                                                       CNVR1772
C...     AERR RECORD -- STORE PREVIOUS SEQUENCE NUMBER                  CNVR1774
  350 IF (JRECRD(4) .NE. 1) GO TO 9999                                  CNVR1776
      IR1000(3)=ISVSEQ-(ISVSEQ/10000)*10000                             CNVR1778
      IRXXXX(1)=ISVSEQ/10000                                            CNVR1780
C...     GERR RECORD                                                    CNVR1782
  400 IRXXXX(2)=13000                                                   CNVR1784
      IRXXXX(3) = 3                                                     CNVR1790
      IRXXXX(5) = JRECRD(8)                                             CNVR1800
  410 IX=1                                                              CNVR1804
      IRXXXX(4)=0                                                       CNVR1805
      GO TO 9000                                                        CNVR1806
C...     CLPRNT RECORD.....SET ON OR OFF                                CNVR1808
  450 IRXXXX(2)=13000                                                   CNVR1810
      IRXXXX(3)=4                                                       CNVR1812
      IRXXXX(5)=1                                                       CNVR1814
      CALL HOLFRM(RECORD(5),TEST,1,6,NWD)                               CNVR1815
      IF (TEST .EQ. OFF) IRXXXX(5)=0                                    CNVR1816
      GO TO 410                                                         CNVR1820
C...     MULTAX RECORD -- SET MULTAX FLAG                               CNVR1822
  500 IRXXXX(2) = 9000                                                  CNVR1830
      IRXXXX(3) = 2                                                     CNVR1840
      IRXXXX(4)=0                                                       CNVR1845
      IRXXXX(5) = 1                                                     CNVR1850
      CALL HOLFRM(RECORD(5),TEST,1,6,NWD)                               CNVR1855
      IF(TEST.EQ.OFF)IRXXXX(5)=0                                        CNVR1860
      MULTAX = .FALSE.                                                  CNVR1870
      IF (IRXXXX(5) .EQ. 1)  MULTAX = .TRUE.                            CNVR1880
      GO TO 410                                                         CNVR1898
  605 IRXXXX(2)=9000                                                    CNVR1900
      IRXXXX(3)=9                                                       CNVR1901
      CALL HOLFRM(RECORD(5),TEST8,1,8,NWD)                              CNVR1902
      DO 601 I=1,4                                                      CNVR1903
      IF(TEST8.EQ.SCALIN(I)) GO TO 603                                  CNVR1904
  601 CONTINUE                                                          CNVR1905
C...     ERROR 30038 -- ERRONEOUS UNITS COMMAND                         CNVR1906
      CALL APT336(30038,'CNVRT3  ')                                     CNVR1907
      GO TO 9999                                                        CNVR1908
  603 IRXXXX(5)=I                                                       CNVR1909
      GO TO 410                                                         CNVR1911
C                                                                       CNVR1912
C...     ********* CLDATA RECORDS *********                             CNVR1913
 1000 IF(JRECRD(8)-2) 1010,1030,1030                                    CNVR1914
 1010 SUBCLS = 5                                                        CNVR1920
      CALL HOLFRM(RECORD(5),ATEST,1,6,NWD)                              CNVR1924
      IF (ATEST .EQ.FROM)  SUBCLS = 3                                   CNVR1930
      SAVNAM = RECORD(7)                                                CNVR1940
      SAVSUB = RECORD(8) + .0                                           CNVR1945
      IF(JRECRD(6).LE.6) GO TO 9997                                     CNVR1950
      IX =12                                                            CNVR1960
C...     SAVE CIRCLE CANONICAL FORM                                     CNVR1962
      IRXXXX(2) = 3000                                                  CNVR1970
      IRXXXX(3) = 2                                                     CNVR1980
      IRXXXX(7) = 4                                                     CNVR1990
      IRXXXX(9)=9                                                       CNVR1995
      RXXXX(4) = RECORD(7)                                              CNVR2000
      RXXXX(5) = RECORD(8)                                              CNVR2005
      DO 1020 I=6,12                                                    CNVR2010
1020  RXXXX(I)=RECORD(I+4)                                              CNVR2020
      GO TO 9000                                                        CNVR2030
C                                                                       CNVR2032
C...     SAVE CUTTER LOCATION POINTS                                    CNVR2034
 1030 IRXXXX(2) = 5000                                                  CNVR2040
      IRXXXX(3) = SUBCLS                                                CNVR2050
      NSAVE=NNN                                                         CNVR2055
      SBCLSV=SUBCLS                                                     CNVR2056
      SUBCLS = 6                                                        CNVR2060
      RXXXX(1) = SAVNAM                                                 CNVR2065
      RXXXX(2) = SAVSUB                                                 CNVR2070
      I = 3                                                             CNVR2080
      MM=4                                                              CNVR2090
      IF (MULTAX) MM=7                                                  CNVR2100
      DO 1070  J = 1,NUMWDS                                             CNVR2132
      IF (( (J+1) - ((J-1)/MM * MM) )/3 - 1) 1070,1050,1050             CNVR2134
 1050 RXXXX(I) = RECORD(J+3)                                            CNVR2136
      I = I + 1                                                         CNVR2140
 1070 CONTINUE                                                          CNVR2142
      IX =I - 1                                                         CNVR2144
      IF (IRXXXX(3) - 5)  9010,9010,9100                                CNVR2150
 9000 IF (KKIX .GE. 11)  IX=KKIX                                        CNVR2160
 9010 IF(I3000.EQ.1) GO TO 9050                                         CNVR2161
      IF(IR1000(3).EQ.IRCOLD) GO TO 9100                                CNVR2162
      NNN=NNN+1                                                         CNVR2163
      IRCOLD=IR1000(3)                                                  CNVR2164
      IR1000(1) = NNN                                                   CNVR2166
      CALL ATAPWT(CLFIL3,IRET,2,IR1000,3,R1000,2)                       CNVR2170
 9050 I3000=0                                                           CNVR2171
 9100 NNN = NNN + 1                                                     CNVR2172
      IRXXXX(1) = NNN                                                   CNVR2174
C...     CALCULATE CLFIL3 RECORD NUMBER TO LIST ON VLFILE               CNVR2175
      ISEQ=IR1000(3)+NNN*10000                                          CNVR2176
      JRECRD(4)=ISEQ                                                    CNVR2177
      IF (IX .EQ. 0) GO TO 9200                                         CNVR2178
      IF(IRXXXX(2).EQ.3000) I3000=1                                     CNVR2179
      CALL ATAPWT(CLFIL3,IRET,2,IRXXXX,3,RXXXX,IX)                      CNVR2180
      GO TO 9998                                                        CNVR2182
 9200 CALL ATAPWT(CLFIL3,IRET,1,IRXXXX,3,DUM,1)                         CNVR2188
 9998 IF (IRXXXX(2) .NE. 14000) GO TO 9999                              CNVR2190
      CALL ATAPOP(CLFIL3,2,IRET)                                        CNVR2200
      CALL ATAPOP(CLFIL3,1,IRET)                                        CNVR2210
      GO TO 9999                                                        CNVR2220
C                                                                       CNVR2300
C...     ***** SPECIAL POSTPROCESSOR TYPE RECORDS *****                 CNVR2310
  600 IF (KK .GT. 11) GO TO 9999                                        CNVR2320
      IRXXXX(2)=6000                                                    CNVR2330
      GO TO (610,9999,9999,620,620, 620,9999,9999,9999,9999, 610),KK    CNVR2340
C                                                                       CNVR2350
C...     ARELEM FLAGS-CUT,DNTCUT                                        CNVR2360
  610 IRXXXX(3)=KK-KK/10*10                                             CNVR2370
      IRXXXX(5)=0                                                       CNVR2380
      IF (KK .GT. 10) IRXXXX(5)=1                                       CNVR2390
      IX=1                                                              CNVR2400
      GO TO 410                                                         CNVR2410
C                                                                       CNVR2420
C...     ARELEM DATA ITEMS-CUTTER,INTOL,OUTTOL                          CNVR2430
  620 IRXXXX(3)=KK                                                      CNVR2440
      LR=NUMWDS+3                                                       CNVR2445
      DO 625  I=5,LR,2                                                  CNVR2450
      IX=I/2-1                                                          CNVR2455
      RXXXX(IX)=RECORD(I)                                               CNVR2460
  625 CONTINUE                                                          CNVR2480
      GO TO 9000                                                        CNVR2490
C                                                                       CNVR2500
C...     SAVE SEQUENCE NUMBER IF NOT AERR TYPE RECORD                   CNVR2505
 9997 I=NNN+2                                                           CNVR2506
      IF (IR1000(3).EQ.IRCOLD)I=I-1                                     CNVR2507
      JRECRD(4)=IR1000(3)+10000*I                                       CNVR2508
 9999 IF (TEST .NE. RECTYP(2)) ISVSEQ=JRECRD(4)                         CNVR2510
      RETURN                                                            CNVR2520
      END                                                               CNVR2530
**** MODULE = POSTEXEC ****
**** SOURCE FILE : M0000398.W01   ***
*
C                                                                       ACTR0001
C...  FORTRAN SUBROUTINE           ACNTRL...         RC,AR              ACTR0002
C     MODIFIED FOR SSV3  E.MCLELLAN                                     ACTR0003
C                                                                       ACTR0010
      SUBROUTINE ACNTRL(ARRAY,FILEA)                                    ACTR0020
      IMPLICIT  DOUBLE PRECISION(A-H,O-Z)                               ACTR0030
C                                                                       ACTR0040
C...  THIS SUBROUTINE RECEIVES CONTROL FOR THE POSTEXEC LOAD MODULE.    ACTR0050
C     IT READS CPFILE AND AND LISTS THE NAMES OF THE NECESSARY          ACTR0060
C     POSTPROCESSORS.                                                   ACTR0070
C     CLFILE(S) ARE ALSO SAVED FOR FUTURE POST PROCESSING               ACTR0080
C                                                                       ACTR0100
      INCLUDE 'SYMFIL.INC'                                              ACTR0192
      CHARACTER*6 PPNAME                                                ACTR0194
C                                                                       ACTR0200
C     ****         ****      ****      ****      ****      ****         ACTR0250
C                                                                       ACTR0260
C                                                                       ACTR0270
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR                        ACTR0280
C                                                                       ACTR0290
          COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS       ACTR0300
          DIMENSION XTRAS(7),CFLAGS(4),LXTRAS(7)                        ACTR0310
          INTEGER   ERRX,XTRAS                                          ACTR0320
          LOGICAL   ERR,FINI,XC,CL,ASM,LXTRAS,CFLAGS,PX,END,ABEND       ACTR0330
          EQUIVALENCE (LXTRAS(1),XTRAS(1)),(CFLAGS(1),ERR)              ACTR0340
C                                                                       ACTR0350
      DIMENSION NNN(48),PPS(2,10)                                       ACTR0360
      EQUIVALENCE (NNN(6),NOP),(NNN(3),N)                               ACTR0380
      EQUIVALENCE (PPS(1,1),NNN(9))                                     ACTR0390
C                                                                       ACTR0420
C                                                                       ACTR0430
      CALL AREAD(CPFILE,1,NNN,48,IR)                                    ACTR0500
C                                                                       ACTR0600
C... IS POST PROCESSING REQUIRED                                        ACTR0700
C                                                                       ACTR0800
      IF(N.NE.0) THEN                                                   ACTR0900
C                                                                       ACTR1000
C...CLOSE CLFILES AND KEEP                                              ACTR1100
C                                                                       ACTR1200
        CALL TAPOP(CLFILP,-3)                                           ACTR1300
        IF (NOP.EQ.1) CALL TAPOP(CLFILE,-3)                             ACTR1400
        CALL TAPOP(CLFIL3,-3)                                           ACTR1500
C                                                                       ACTR1600
C....WRITE CURRENT POST PROCESSOR NAMES TO FILE - PPFILE.DAT            ACTR1700
C                                                                       ACTR1800
        NUMPST=N/2                                                      ACTR1900
C                                                                       ACTR2000
        DO 50 I=1,NUMPST                                                ACTR2100
          CALL HOLFRM(PPS(1,I),PPNAME,1,6,NWD)                          ACTR2200
          CALL OUTMSG(' POST PROCESSOR '//PPNAME//' REQUESTED')         ACTR2300
   50   CONTINUE                                                        ACTR2400
C                                                                       ACTR2500
      ENDIF                                                             ACTR2600
C                                                                       ACTR2700
      ABEND=.FALSE.                                                     ACTR2800
C                                                                       ACTR2900
      END                                                               ACTR3000
**** SOURCE FILE : M0000396.V02   ***
*
C                                                                       CLR40010
C....  FORTRAN SUBROUTINE  CLRD4                          8/1/72        CLR40020
C  PURPOSE     TO READ CLFIL2 AND PLACE RHE RECORD IN THE ARRAY.        CLR40030
C  LINKAGE     CALL CLRD4  (FILE,NR,NBUFF,IR)                           CLR40040
C                                                                       CLR40050
C  ARGUMENTS   FILE    FILE NUMBER IN THE SYMFIL COMMON.                CLR40060
C                      IF FILE=-1, RESET ALL COUNTERS FOR OTHER FILE.   CLR40070
C              NR      CONTAINING RECORD NUMBER TO BE RETRIEVED.        CLR40080
C              NBUFF   DATA ARRAY TO CONTAIN THE RETRIEVED RECORD.      CLR40090
C              IR      RETURN ERROR FLAG. =0 NOERROR, =1 ERROR.         CLR40100
C                                                                       CLR40110
      SUBROUTINE CLRD4  (FILE,NR,NBUFF,IR)                              CLR40120
      INTEGER FILE,EBUFF(516),NBUFF(2)                                  CLR40130
      SAVE N,NB,M,K                                                     CLR40134
      DATA N/0/,NB/0/,M/0/,K/3/                                         CLR40140
      IF(FILE.NE.-1) GO TO 100                                          CLR40150
C     INITIALIZE FLAGS                                                  CLR40160
C     N IS MAXIMUM RECORD NUMBER IN THIS BLOCK                          CLR40170
      N=0                                                               CLR40180
C     NB IS BLOCK NUMBER COUNTER                                        CLR40190
      NB=0                                                              CLR40200
C     M IS MINIMUM RECORD NUMBER IN THIS BLOCK                          CLR40210
      M=0                                                               CLR40220
C     K IS POINTER OF BUFFER                                            CLR40230
      K=3                                                               CLR40240
C     CHECK SPECIFIED RECORD IS IN CURRENT BLOCK                        CLR40250
  100 IF(NR.GT.M) GO TO 10                                              CLR40260
      IF(NR.LT.N) GO TO 20                                              CLR40270
C     YES, SPECIFIED RECORD IS IN CURRENT BLOCK                         CLR40280
      IF(NR.EQ.EBUFF(K)) GO TO 30                                       CLR40290
      K=3                                                               CLR40300
C     FIND THE POSITION OF THE RECORD                                   CLR40310
    3 IF (NR.EQ.EBUFF(K)) GO TO 30                                      CLR40320
      K=K+EBUFF(K+1)+2                                                  CLR40330
      IF(K.GT.516) GO TO 200                                            CLR40340
      GO TO 3                                                           CLR40350
   30 K=K+1                                                             CLR40360
C     GET THE SIZE OF RECORD                                            CLR40370
      L=EBUFF(K)                                                        CLR40380
C     MOVE THE RECORD                                                   CLR40390
      DO 31 I=1,L                                                       CLR40400
   31 NBUFF(I)=EBUFF(K+I)                                               CLR40410
      K=K+L+1                                                           CLR40420
      RETURN                                                            CLR40430
C     TRY NEXT BLOCK                                                    CLR40440
   10 NB=NB+1                                                           CLR40450
   15 K=516                                                             CLR40460
      CALL AREAD(FILE,NB,EBUFF,K,KR)                                    CLR40470
      IF(KR.EQ.3) GO TO 200                                             CLR40480
      K=3                                                               CLR40490
      N=EBUFF(1)                                                        CLR40500
      M=EBUFF(2)                                                        CLR40510
      GO TO 100                                                         CLR40520
C     TRY PREVIOUS RECORD                                               CLR40530
   20 NB = NB -1                                                        CLR40540
      GO TO 15                                                          CLR40550
  200 IR=1                                                              CLR40560
      RETURN                                                            CLR40570
      END                                                               CLR40580
**** MODULE = UTILITY ****
**** SOURCE FILE : ABCDBN00.ORG   ***
*
*                                                                       00000100
*  * ABCDBN *    FORTRAN 77 VERSION  11-JUL-1986  E.MCLELLAN            00000200
*                                                                       00000300
*   PURPOSE      TO CONVERT FLOATING POINT NUMBERS                      00000400
*                FROM LEFT JUSTIFIED CHARACTER FORM                     00000500
*                TO DOUBLE PRECISION VALUES                             00000600
*                                                                       00000700
*   CALLING SEQUENCE                                                    00000800
*                CALL ABCDBN(STR,VALUE,NUM)                             00000900
*                                                                       00001000
*   ARGUMENTS                                                           00001100
*       STR     CHARACTER   STRING ARRAY CONTAINING NUMBERS             00001200
*                           LEFT JUSTIFIEDIN 12 BYTES,                  00001300
*                           TO BE CONVERTED TO FLOATING POINT           00001400
*       VALUE   DOUBLE      ARRAY TO CONTAIN CONVERTED NUMBERS          00001500
*               PRECISION                                               00001600
*       NUM     INTEGER     NUMBER OF ITEMS IN ARRAY                    00001700
*                                                                       00001800
      SUBROUTINE ABCDBN(STR,VALUE,NUM)                                  00001900
C                                                                       00002000
      INTEGER NUM                                                       00002100
      CHARACTER*12 STR(NUM),TSTR                                        00002200
      DOUBLE PRECISION VALUE(NUM)                                       00002300
C                                                                       00002400
      DO 10 I=1,NUM                                                     00002500
        TSTR=STR(I)                                                     00002600
        K=INDEX(TSTR,'.')                                               00002700
        IF (K.EQ.0) THEN                                                00002800
          J=INDEX(TSTR,' ')                                             00002900
          IF (J.NE.0) THEN                                              00003000
            TSTR(J:J)='.'                                               00003100
          ENDIF                                                         00003200
        ENDIF                                                           00003300
        READ (TSTR,'(F12.0)') VALUE(I)                                  00003400
 10   CONTINUE                                                          00003500
      RETURN                                                            00003600
      END                                                               00003700
**** SOURCE FILE : AREAD000.ORG   ***
*
*                                                                       00000100
*  *  AREAD  *   VAX11 VERSION   11.5.82   E.MCLELLAN                   00000200
*                MODIFIED        16.7.85   E.MCLELLAN                   00000300
*                                                                       00000400
*                                                                       00000500
*  PURPOSE     TO READ ONE RECORD FROM A SPECIFIED FILE                 00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL AREAD (NO,IRECNO,DATA,ISIZE,IRET)                   00000900
*  ARGUMENTS                                                            00001000
*              NO        FILE NUMBER                                    00001100
*              IRECNO    RECORD NO. IF SET TO ZERO RETRIEVES            00001200
*                        THE NEXT RECORD. IF SET TO 'N'                 00001300
*                        RETRIEVES N-TH RECORD DIRECTLY.                00001400
*              DATA      DATA ARRAY TO CONTAIN THE RETRIEVED            00001500
*                        RECORD                                         00001600
*              ISIZE     SIZE OF RECORD (IN 4 BYTE WORDS)               00001700
*              IRET      RETURN FLAG =0  NO ERROR                       00001800
*                                    =1  E.O.F ENCOUNTERED              00001900
*                                    =2  ISIZE IS BIGGER THAN ACTUAL    00002000
*                                        RECORD SIZE. DATA ASSUMED TO   00002100
*                                        SPAN MORE THAN ONE RECORD      00002200
*                                        DATA TRANSFERRED TO ARRAY      00002300
*                                    =3  UNRECOVERABLE ERROR            00002400
*                                                                       00002500
*                                                                       00002600
*  GLOBAL VARIABLES:  NONE                                              00002700
*                                                                       00002800
*---------------------------------------------------                    00002900
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00003000
*---------------------------------------------------                    00003100
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00003200
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00003300
*                                         (DIRECT OR SEQUENTIAL)        00003400
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00003500
*                                         (FORMATTED OR UNFORMATTED)    00003600
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00003700
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00003800
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00003900
*   U               IFILTB    INTEGER    UNIT NUMBER                    00004000
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00004100
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00004200
*                                        READ OR WRITTEN (DIRECT ACCESS)00004300
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00004400
*                                         (DIRECT ACCESS)               00004500
*                                                                       00004600
*  LOCAL VARIABLES:                                                     00004700
*                   TYPE       DESCRIPTION                              00004800
*         OD        LOGICAL    FLAG TO INDICATE IF FILE IS OPEN         00004900
*         IACC      CHARACTER  ACCESS TYPE RETURN BY INQUIRE            00005000
*         DARRAY    CHARACTER  PRINT BUFFER                             00005100
*         IRECL     INTEGER    RECORD LENGTH                            00005200
*         NUM       INTEGER    NUMBER OF COMPLETE PHYSICAL RECORDS      00005300
*                              SPANNED BY LOGICAL RECORD BEING READ     00005400
*         POSN      INTEGER    START POSITION IN PRINT BUFFER           00005500
*         SLEN      INTEGER    LENGTH OF STRING ENTERED IN PRINT BUFFER 00005600
*                                                                       00005700
*  FILES:  FILE REFERENCED BY FILE NUMBER                               00005800
*                                                                       00005900
*  SUBSIDIARIES:                                                        00006000
*               FILOPN                                                  00006100
*               CFORM                                                   00006200
*               ICONV                                                   00006300
*               CPRINT                                                  00006400
*                                                                       00006500
      SUBROUTINE AREAD (NO,IRECNO,DATA,ISIZE,IRET)                      00006600
C                                                                       00006700
      INCLUDE 'FILTAB.INC'                                              00006800
C                                                                       00006900
      LOGICAL OD                                                        00007000
      DIMENSION DATA(*)                                                 00007100
      CHARACTER*12 IACC                                                 00007200
      CHARACTER*80 DARRAY                                               00007300
      INTEGER POSN,SLEN                                                 00007400
      DATA DARRAY/' '/                                                  00007500
      ID=U(NO)                                                          00007600
C                                                                       00007700
C---- IS UNIT OPENED, IF NOT OPEN                                       00007800
      INQUIRE (UNIT=ID,OPENED=OD)                                       00007900
      IF (OD) GOTO 10                                                   00008000
C---- OPEN UNIT                                                         00008100
      CALL FILOPN(NO)                                                   00008200
C---- CHECK FILE ACCESS                                                 00008300
   10 INQUIRE (UNIT=ID,ACCESS=IACC)                                     00008400
      IF (IACC.EQ.'DIRECT') THEN                                        00008500
C---- DIRECT ACCESS FILE                                                00008600
        IRECL=RL(NO)                                                    00008700
        IF (IRECNO.EQ.0) THEN                                           00008800
          IRECNO=NXTREC(NO)                                             00008900
        END IF                                                          00009000
C.... IF LSTREC(NO).EQ.0 THEN READING AN EXTERNALLY WRITTEN             00009080
C     DIRECT ACCESS FILE FOR WHICH LENGTH IS NOT KNOWN                  00009090
        IF ((LSTREC(NO).NE.0).AND.(IRECNO.GT.LSTREC(NO))) THEN          00009100
          IRET=1                                                        00009200
          RETURN                                                        00009300
        END IF                                                          00009400
        IREC=IRECNO                                                     00009500
        IF (ISIZE.LE.IRECL) THEN                                        00009600
          READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (DATA(I),I=1,ISIZE)     00009700
        ELSE                                                            00009800
          NUM=ISIZE/IRECL                                               00009900
          DO 20 J=1,NUM                                                 00010000
          I1=(J-1)*IRECL+1                                              00010100
          I2=J*IRECL                                                    00010200
          READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (DATA(I),I=I1,I2)       00010300
   20     IREC=IREC+1                                                   00010400
          IF ((ISIZE-NUM*IRECL).GT.0) THEN                              00010500
            I1=NUM*IRECL+1                                              00010600
            READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (DATA(I),I=I1,ISIZE)  00010700
          ELSE                                                          00010800
            IREC=IREC-1                                                 00010900
          END IF                                                        00011000
          IRET=2                                                        00011100
        END IF                                                          00011200
        NXTREC(NO)=IREC+1                                               00011300
        ELSE                                                            00011400
C---- SEQUENTIAL ACCESS FILE                                            00011500
          READ (ID,END=80) (DATA(I),I=1,ISIZE)                          00011600
        END IF                                                          00011700
      RETURN                                                            00011800
 80   IRET=1                                                            00011900
      RETURN                                                            00012000
 90   SLEN=0                                                            00012100
      CALL CFORM (' *** ERROR READING BY AREAD FROM FILE :',            00012200
     1            DARRAY,2,SLEN)                                        00012300
      POSN=SLEN+3                                                       00012400
      SLEN=0                                                            00012500
      CALL CFORM (FILNAM(NO),DARRAY,POSN,SLEN)                          00012600
      POSN=POSN+SLEN+2                                                  00012700
      SLEN=0                                                            00012800
      CALL CFORM ('RECNO:',DARRAY,POSN,SLEN)                            00012900
      POSN=POSN+SLEN+1                                                  00013000
      SLEN=6                                                            00013100
      CALL ICONV (IRECNO,DARRAY,POSN,SLEN)                              00013200
      CALL CPRINT (DARRAY)                                              00013300
      IRET=3                                                            00013400
      RETURN                                                            00013500
      END                                                               00013600
**** SOURCE FILE : AWRITE00.V01   ***
*
*                                                                       00000100
*  *  AWRITE  *   VAX11 VERSION    11.05.82   E.MCLELLAN                00000200
*                 MODIFIED         16.7.85                              00000300
*                                                                       00000400
*  PURPOSE     TO WRITE ONE RECORD ON A SPECIFIED FILE                  00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL AWRITE (NO,IRECNO,DATA,ISIZE,IRET)                  00000800
*  ARGUMENTS                                                            00000900
*              NO        FILE NUMBER                                    00001000
*              IRECNO    RECORD NO. IF SET TO ZERO WILL WRITE           00001100
*                        NEXT RECORD. CONTAINS ACTUAL RECORD            00001200
*                        NUMBER ON RETURNING                            00001300
*              DATA      DATA ARRAY CONTAINING RECORD TO                00001400
*                        BE WRITTEN ON THE FILE                         00001500
*              ISIZE     SIZE OF RECORD (IN 4 BYTE WORDS)               00001600
*              IRET      RETURN FLAG =0  NO ERROR                       00001700
*                                    =1  ERROR                          00001800
*                                                                       00001900
*  GLOBAL VARIABLES:                                                    00002000
*                                                                       00002100
*---------------------------------------------------                    00002200
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00002300
*---------------------------------------------------                    00002400
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00002500
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00002600
*                                         (DIRECT OR SEQUENTIAL)        00002700
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00002800
*                                         (FORMATTED OR UNFORMATTED)    00002900
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00003000
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00003100
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00003200
*   U               IFILTB    INTEGER    UNIT NUMBER                    00003300
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00003400
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00003500
*                                        READ OR WRITTEN (DIRECT ACCESS)00003600
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00003700
*                                         (DIRECT ACCESS)               00003800
*                                                                       00003900
*  LOCAL VARIABLES:                                                     00004000
*                   TYPE       DESCRIPTION                              00004100
*        OD         LOGICAL    FLAG TO INDICATE IF FILE IS OPENED       00004200
*        IACC       CHARACTER  FILE ACCESS TYPE RETURNED BY INQUIRE     00004300
*        DARRAY     CHARACTER  PRINT BUFFER                             00004400
*        DUM        REAL       DUMMY ARRAY FOR FILLING OUT A PHYSICAL   00004500
*                              RECORD                                   00004600
*        NUM        INTEGER    NUMBER OF FULL PHYSICAL RECORDS TO       00004700
*                              WRITTEN FOR LOGICAL RECORD               00004800
*        POSN       INTEGER    START POSITION IN PRINT BUFFER           00004900
*        SLEN       INTEGER    LENGTH OF STRING ENTERED IN PRINT BUFFER 00005000
*                                                                       00005100
*  FILES:  FILE REFERENCED BY FILE NUMBER                               00005200
*                                                                       00005300
*  SUBSIDIARIES:                                                        00005400
*               FILOPN                                                  00005500
*               CFORM                                                   00005600
*               ICONV                                                   00005700
*               CPRINT                                                  00005800
*                                                                       00005900
      SUBROUTINE AWRITE (NO,IRECNO,DATA,ISIZE,IRET)                     00006000
C                                                                       00006100
      INCLUDE 'FILTAB.INC'                                              00006200
      LOGICAL OD                                                        00006300
      CHARACTER*12 IACC                                                 00006400
      DIMENSION DATA(*)                                                 00006500
      CHARACTER*80 DARRAY                                               00006600
      INTEGER POSN,SLEN                                                 00006700
      REAL DUM(256)                                                     00006900
      DATA DARRAY/' '/                                                  00006950
      DATA DUM/256*0.0/                                                 00007000
      ID=U(NO)                                                          00007100
C                                                                       00007200
C---- IS FILE OPENED, IF NOT OPEN                                       00007300
      INQUIRE (UNIT=ID,OPENED=OD)                                       00007400
      IF (OD) GOTO 10                                                   00007500
C---- OPEN UNIT                                                         00007600
      CALL FILOPN(NO)                                                   00007700
C---- CHECK FILE ACCESS                                                 00007800
   10 INQUIRE (UNIT=ID,ACCESS=IACC)                                     00007900
      IF (IACC.EQ.'DIRECT') THEN                                        00008000
C---- DIRECT ACCESS FILE                                                00008100
        IRECL=RL(NO)                                                    00008200
        IF (IRECNO.EQ.0) THEN                                           00008300
          IRECNO=LSTREC(NO)+1                                           00008400
        END IF                                                          00008500
        IREC=IRECNO                                                     00008600
        IF (ISIZE.LE.IRECL) THEN                                        00008700
          WRITE (ID,REC=IREC,IOSTAT=IRET,ERR=90) (DATA(I),I=1,ISIZE)    00008800
        ELSE                                                            00008900
        NUM=ISIZE/IRECL                                                 00009000
          DO 20 J=1,NUM                                                 00009100
          I1=(J-1)*IRECL+1                                              00009200
          I2=J*IRECL                                                    00009300
          WRITE (ID,REC=IREC,IOSTAT=IRET,ERR=90) (DATA(I),I=I1,I2)      00009400
   20     IREC=IREC+1                                                   00009500
          IF ((ISIZE-NUM*IRECL).GT.0) THEN                              00009600
            I1=NUM*IRECL+1                                              00009700
            I2=(NUM+1)*IRECL-ISIZE                                      00009800
            WRITE (ID,REC=IREC,IOSTAT=IRET,ERR=90)                      00009900
     1            (DATA(I),I=I1,ISIZE),(DUM(I),I=1,I2)                  00010000
          ELSE                                                          00010100
            IREC=IREC-1                                                 00010200
          END IF                                                        00010300
        END IF                                                          00010400
        IF (IREC.GT.LSTREC(NO)) THEN                                    00010500
          LSTREC(NO)=IREC                                               00010600
        END IF                                                          00010700
        NXTREC(NO)=IREC+1                                               00010800
        ELSE                                                            00010900
C---- SEQUENTIAL ACCESS FILE                                            00011000
        WRITE (ID) (DATA(I),I=1,ISIZE)                                  00011100
        END IF                                                          00011200
      RETURN                                                            00011300
   90 SLEN=0                                                            00011400
      CALL CFORM(' *** ERROR WRITING BY AWRITE ON FILE :',              00011500
     1            DARRAY,2,SLEN)                                        00011600
      POSN=SLEN+3                                                       00011700
      SLEN=0                                                            00011800
      CALL CFORM (FILNAM(NO),DARRAY,POSN,SLEN)                          00011900
      POSN=POSN+SLEN+2                                                  00012000
      SLEN=0                                                            00012100
      CALL CFORM ('RECNO :',DARRAY,POSN,SLEN)                           00012200
      POSN=POSN+SLEN+1                                                  00012300
      SLEN=6                                                            00012400
      CALL ICONV (IRECNO,DARRAY,POSN,SLEN)                              00012500
      CALL CPRINT (DARRAY)                                              00012600
      IRET=1                                                            00012700
      RETURN                                                            00012800
      END                                                               00012900
**** SOURCE FILE : BADNAM00.V01   ***
*
*                                                                       00000100
*  * BADNAM *    FORTRAN 77 SUBROUTINE   15-JUL-1986  E.MCLELLAN        00000200
*                                                                       00000300
*   PURPOSE:  TO RETURN THE BCD EQUIVALENT OF 'BADNAM  '                00000400
*                                                                       00000700
*   CALLING SEQUENCE:                                                   00000800
*                    CALL BADNAM(IWORD)                                 00000900
*                                                                       00001000
*   ARGUMENTS:                                                          00001100
*         IWORD  INTEGER  ARRAY INTO WHICH 'BADNAM  ' IS TO BE LOADED   00001120
*                                                                       00001200
*   GLOBAL VARIABLES: NONE                                              00001300
*                                                                       00002000
*   LOCAL VARIABLES:                                                    00002100
*                   TYPE        DESCRIPTION                             00002110
*         IBDNAM    INTEGER     INTEGER ARRAY TO BUILD UP BCDF          00002120
*         FIRST     LOGICAL     FLAG INDICATING FIRST CALL              00002150
*                                                                       00002200
*   SUBSIDIARIES:  BCDF                                                 00002300
*                                                                       00002400
      SUBROUTINE BADNAM(IWORD)                                          00002500
C                                                                       00002600
      INTEGER BCDF                                                      00002700
C                                                                       00002800
      INTEGER IBDNAM(2),IWORD(2)                                        00002900
      LOGICAL FIRST                                                     00003120
      SAVE IBDNAM,FIRST                                                 00003140
      DATA FIRST/.TRUE./                                                00003160
                                                                        00003200
      IF (FIRST) THEN                                                   00003220
        IBDNAM(1) = BCDF('BADN')                                        00003300
        IBDNAM(2) = BCDF('AM  ')                                        00003600
        FIRST=.FALSE.                                                   00003700
      ENDIF                                                             00003800
C                                                                       00003900
      IWORD(1)=IBDNAM(1)                                                00004000
      IWORD(2)=IBDNAM(2)                                                00004040
      RETURN                                                            00004100
      END                                                               00004200
**** SOURCE FILE : BCDF0000.W01   ***
*
*                                                                       00000100
*  * BCDF *  FORTRAN 77 INTEGER FUNCTION  19-DEC-1985  E.MCLELLAN       00000200
*            MODIFIED                      2-FEB-1988  E.MCLELLAN       00000250
*                                                                       00000300
*  PURPOSE:  CONVERT A STRING OF CHARACTERS WHICH OCCUPY THE SAME       00000400
*            NUMBER OF BYTES AS AN INTEGER WORD INTO AN EQUIVALENT      00000500
*            INTEGER VALUE                                              00000600
*                                                                       00000700
*  CALLING SEQUENCE:                                                    00000800
*                   VALUE=BCDF(STR)                                     00000900
*                                                                       00001000
*  ARGUMENTS:                                                           00001100
*                   TYPE       DESCRIPTION                              00001200
*       STR         CHARACTER  STRING TO BE CONVERTED                   00001300
*                                                                       00001400
*  GLOBAL VARIABLES:                                                    00001500
*                                                                       00001600
*---------------------------------------------------                    00001700
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00001800
*---------------------------------------------------                    00001900
*   IWRD            SDP       INTEGER    NO. OF BYTES PER WORD          00002000
*   NBCHAR          SDP       INTEGER    NO. OF BITS PER BYTE           00002100
*                                                                       00002300
*  LOCAL VARIABLES:                                                     00002400
*                   TYPE       DESCRIPTION                              00002500
*        I          INTEGER    LOOP COUNT                               00002600
*        BCD        INTEGER    VARIABLE FOR BUILDING UP BCD VALUE       00002650
*        TSTR       CHARACTER  TEMPORARY STORAGE FOR STRING             00002660
*                                                                       00002700
*  FILES:  NONE                                                         00002800
*                                                                       00002900
*  SUBSIDIARIES:  NONE                                                  00003000
*                                                                       00003100
      INTEGER FUNCTION BCDF(STR)                                        00003200
C                                                                       00003300
      INCLUDE 'SDP.INC'                                                 00003400
C                                                                       00003500
      INTEGER  BCD                                                      00003550
      CHARACTER*(*) STR,TSTR*10                                         00003600
C                                                                       00003700
      BCD=0                                                             00003800
      TSTR=STR//' '                                                     00003850
      DO 10 I=1,IWRD                                                    00003900
      BCD=ISHFT(BCD,NBCHAR)+ICHAR(TSTR(I:I))                            00004000
  10  CONTINUE                                                          00004100
C                                                                       00004200
      BCDF=BCD                                                          00004300
C                                                                       00004400
      RETURN                                                            00004500
      END                                                               00004600
**** SOURCE FILE : CFORM000.ORG   ***
*
*                                                                       00000010
*  * CFORM *  FORTRAN 77 SUBROUTINE  26.10.84  E.MCLELLAN               00000020
*                                                                       00000030
*  PURPOSE:  TO INSERT A CHARACTER STRING IN A CHARACTER BUFFER         00000040
*            AT LOCATION POSN.                                          00000050
*            THE LENGTH OF THE STRING IS RETURNED IF THE ARGUMENT       00000060
*            LENGTH IS ZERO ON INPUT.                                   00000070
*                                                                       00000080
*  CALLING SEQUENCE:                                                    00000090
*                   CALL CFORM(STRING,BUFFER,POSN,LENGTH)               00000100
*                                                                       00000110
*  ARGUMENTS:                                                           00000120
*                   TYPE       DESCRIPTION                              00000130
*       STRING      CHARACTER  CHARACTER STRING TO BE INSERTED          00000140
*       BUFFER      CHARACTER  CHARACTER BUFFER INTO WHICH              00000150
*                              STRING IS TO BE INSERTED                 00000160
*       POSN        INTEGER    LOCATION IN CHARACTER BUFFER             00000170
*                              AT WHICH STRING IS TO BE INSERTED        00000180
*       LENGTH      INTEGER    LENGTH OF STRING                         00000190
*                              IF = 0 ON INPUT, ACTUAL LENGTH           00000200
*                              IS RETURNED TO CALLING ROUTINE           00000210
*                                                                       00000220
*  GLOBAL VARIABLES:  NONE                                              00000230
*                                                                       00000240
*  LOCAL VARIABLES:  NONE                                               00000250
*                                                                       00000260
*  FILES:  NONE                                                         00000270
*                                                                       00000280
*  SUBSIDIARIES:  NONE                                                  00000290
*                                                                       00000300
      SUBROUTINE CFORM(STRING,BUFFER,POSN,LENGTH)                       00000310
C                                                                       00000320
      CHARACTER STRING*(*),BUFFER*(*)                                   00000330
      INTEGER POSN,LENGTH                                               00000340
C                                                                       00000350
C.....IF LENGTH IS ZERO ON INPUT RETURN ACTUAL LENGTH OF STRING         00000360
C                                                                       00000370
      IF (LENGTH.EQ.0) THEN                                             00000380
         LENGTH=LEN(STRING)                                             00000390
      ENDIF                                                             00000400
C                                                                       00000410
C.....INSERT CHARACTER STRING IN PRINT BUFFER                           00000420
C                                                                       00000430
      BUFFER(POSN:POSN+LENGTH-1)=STRING(1:LENGTH)                       00000440
C                                                                       00000450
      RETURN                                                            00000460
      END                                                               00000470
**** SOURCE FILE : CHREAD00.ORG   ***
*
*                                                                       00000100
*  *  CHREAD  *                  18.6.86   E.MCLELLAN                   00000200
*                                                                       00000300
*                                                                       00000400
*  PURPOSE     TO READ A RECORD CONTAINING CHARACTER DATA               00000500
*              FROM A SPECIFIED FILE                                    00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL CHREAD (NO,IRECNO,CDATA,ISIZE,IRET)                 00000900
*  ARGUMENTS                                                            00001000
*              NO        FILE NUMBER                                    00001100
*              IRECNO    RECORD NO. IF SET TO ZERO RETRIEVES            00001200
*                        THE NEXT RECORD. IF SET TO 'N'                 00001300
*                        RETRIEVES N-TH RECORD DIRECTLY.                00001400
*              CDATA     CHARACTER ARRAY TO CONTAIN THE RETRIEVED       00001500
*                        RECORD                                         00001600
*              ISIZE     SIZE OF RECORD (IN BYTES)                      00001700
*              IRET      RETURN FLAG =0  NO ERROR                       00001800
*                                    =1  E.O.F ENCOUNTERED              00001900
*                                    =2  ISIZE IS BIGGER THAN ACTUAL    00002000
*                                        RECORD SIZE. DATA ASSUMED TO   00002100
*                                        SPAN MORE THAN ONE RECORD      00002200
*                                        DATA TRANSFERRED TO ARRAY      00002300
*                                    =3  UNRECOVERABLE ERROR            00002400
*                                                                       00002500
*                                                                       00002600
*  GLOBAL VARIABLES:  NONE                                              00002700
*                                                                       00002800
*---------------------------------------------------                    00002900
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00003000
*---------------------------------------------------                    00003100
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00003200
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00003300
*                                         (DIRECT OR SEQUENTIAL)        00003400
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00003500
*                                         (FORMATTED OR UNFORMATTED)    00003600
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00003700
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00003800
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00003900
*   U               IFILTB    INTEGER    UNIT NUMBER                    00004000
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00004100
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00004200
*                                        READ OR WRITTEN (DIRECT ACCESS)00004300
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00004400
*                                         (DIRECT ACCESS)               00004500
*                                                                       00004600
*  LOCAL VARIABLES:                                                     00004700
*                   TYPE       DESCRIPTION                              00004800
*         OD        LOGICAL    FLAG TO INDICATE IF FILE IS OPEN         00004900
*         IACC      CHARACTER  ACCESS TYPE RETURN BY INQUIRE            00005000
*         DARRAY    CHARACTER  PRINT BUFFER                             00005100
*         IRECL     INTEGER    RECORD LENGTH                            00005200
*         NUM       INTEGER    NUMBER OF COMPLETE PHYSICAL RECORDS      00005300
*                              SPANNED BY LOGICAL RECORD BEING READ     00005400
*         POSN      INTEGER    START POSITION IN PRINT BUFFER           00005500
*         SLEN      INTEGER    LENGTH OF STRING ENTERED IN PRINT BUFFER 00005600
*                                                                       00005700
*  FILES:  FILE REFERENCED BY FILE NUMBER                               00005800
*                                                                       00005900
*  SUBSIDIARIES:                                                        00006000
*               FILOPN                                                  00006100
*               CFORM                                                   00006200
*               ICONV                                                   00006300
*               CPRINT                                                  00006400
*                                                                       00006500
      SUBROUTINE CHREAD (NO,IRECNO,CDATA,ISIZE,IRET)                    00006600
C                                                                       00006700
      INCLUDE 'FILTAB.INC'                                              00006800
C                                                                       00006900
      LOGICAL OD                                                        00007000
      CHARACTER CDATA(*)                                                00007100
      CHARACTER*12 IACC                                                 00007200
      CHARACTER*80 DARRAY                                               00007300
      INTEGER POSN,SLEN                                                 00007400
      DATA DARRAY/' '/                                                  00007500
C                                                                       00007600
      ID=U(NO)                                                          00007700
C                                                                       00007800
C---- IS UNIT OPENED, IF NOT OPEN                                       00007900
      INQUIRE (UNIT=ID,OPENED=OD)                                       00008000
      IF (OD) GOTO 10                                                   00008100
C---- OPEN UNIT                                                         00008200
      CALL FILOPN(NO)                                                   00008300
C---- CHECK FILE ACCESS                                                 00008400
   10 INQUIRE (UNIT=ID,ACCESS=IACC)                                     00008500
      IF (IACC.EQ.'DIRECT') THEN                                        00008600
C---- DIRECT ACCESS FILE                                                00008700
        IRECL=RL(NO)                                                    00008800
        IF (IRECNO.EQ.0) THEN                                           00008900
          IRECNO=NXTREC(NO)                                             00009000
        END IF                                                          00009100
        IF (IRECNO.GT.LSTREC(NO)) THEN                                  00009200
          IRET=1                                                        00009300
          RETURN                                                        00009400
        END IF                                                          00009500
        IREC=IRECNO                                                     00009600
        IF (ISIZE.LE.IRECL) THEN                                        00009700
          READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (CDATA(I),I=1,ISIZE)    00009800
        ELSE                                                            00009900
          NUM=ISIZE/IRECL                                               00010000
          DO 20 J=1,NUM                                                 00010100
          I1=(J-1)*IRECL+1                                              00010200
          I2=J*IRECL                                                    00010300
          READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (CDATA(I),I=I1,I2)      00010400
   20     IREC=IREC+1                                                   00010500
          IF ((ISIZE-NUM*IRECL).GT.0) THEN                              00010600
            I1=NUM*IRECL+1                                              00010700
            READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (CDATA(I),I=I1,ISIZE) 00010800
          ELSE                                                          00010900
            IREC=IREC-1                                                 00011000
          END IF                                                        00011100
          IRET=2                                                        00011200
        END IF                                                          00011300
        NXTREC(NO)=IREC+1                                               00011400
        ELSE                                                            00011500
C---- SEQUENTIAL ACCESS FILE                                            00011600
          READ (ID,END=80) (CDATA(I),I=1,ISIZE)                         00011700
        END IF                                                          00011800
      RETURN                                                            00011900
 80   IRET=1                                                            00012000
      RETURN                                                            00012100
 90   SLEN=0                                                            00012200
      CALL CFORM (' *** ERROR READING BY CHREAD FROM FILE :',           00012300
     1            DARRAY,2,SLEN)                                        00012400
      POSN=SLEN+3                                                       00012500
      SLEN=0                                                            00012600
      CALL CFORM (FILNAM(NO),DARRAY,POSN,SLEN)                          00012700
      POSN=POSN+SLEN+2                                                  00012800
      SLEN=0                                                            00012900
      CALL CFORM ('RECNO:',DARRAY,POSN,SLEN)                            00013000
      POSN=POSN+SLEN+1                                                  00013100
      SLEN=6                                                            00013200
      CALL ICONV (IRECNO,DARRAY,POSN,SLEN)                              00013300
      CALL CPRINT (DARRAY)                                              00013400
      IRET=3                                                            00013500
      RETURN                                                            00013600
      END                                                               00013700
**** SOURCE FILE : CHWRIT00.ORG   ***
*
*                                                                       00000100
*  *  CHWRIT  *                    18.06.86   E.MCLELLAN                00000200
*                                                                       00000300
*  PURPOSE     TO WRITE ONE CHARACTER RECORD ON A SPECIFIED FILE        00000400
*                                                                       00000500
*  CALLING SEQUENCE                                                     00000600
*              CALL CHWRIT (NO,IRECNO,CDATA,ISIZE,IRET)                 00000700
*  ARGUMENTS                                                            00000800
*              NO        FILE NUMBER                                    00000900
*              IRECNO    RECORD NO. IF SET TO ZERO WILL WRITE           00001000
*                        NEXT RECORD. CONTAINS ACTUAL RECORD            00001100
*                        NUMBER ON RETURNING                            00001200
*              CDATA     CHARACTER ARRAY CONTAINING RECORD TO           00001300
*                        BE WRITTEN ON THE FILE                         00001400
*              ISIZE     SIZE OF RECORD (IN BYTES)                      00001500
*              IRET      RETURN FLAG =0  NO ERROR                       00001600
*                                    =1  ERROR                          00001700
*                                                                       00001800
*  GLOBAL VARIABLES:                                                    00001900
*                                                                       00002000
*---------------------------------------------------                    00002100
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00002200
*---------------------------------------------------                    00002300
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00002400
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00002500
*                                         (DIRECT OR SEQUENTIAL)        00002600
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00002700
*                                         (FORMATTED OR UNFORMATTED)    00002800
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00002900
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00003000
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00003100
*   U               IFILTB    INTEGER    UNIT NUMBER                    00003200
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00003300
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00003400
*                                        READ OR WRITTEN (DIRECT ACCESS)00003500
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00003600
*                                         (DIRECT ACCESS)               00003700
*                                                                       00003800
*  LOCAL VARIABLES:                                                     00003900
*                   TYPE       DESCRIPTION                              00004000
*        OD         LOGICAL    FLAG TO INDICATE IF FILE IS OPENED       00004100
*        IACC       CHARACTER  FILE ACCESS TYPE RETURNED BY INQUIRE     00004200
*        DARRAY     CHARACTER  PRINT BUFFER                             00004300
*        CDUM       CHARACTER  DUMMY ARRAY FOR FILLING OUT A PHYSICAL   00004400
*                              RECORD                                   00004500
*        NUM        INTEGER    NUMBER OF FULL PHYSICAL RECORDS TO       00004600
*                              WRITTEN FOR LOGICAL RECORD               00004700
*        POSN       INTEGER    START POSITION IN PRINT BUFFER           00004800
*        SLEN       INTEGER    LENGTH OF STRING ENTERED IN PRINT BUFFER 00004900
*                                                                       00005000
*  FILES:  FILE REFERENCED BY FILE NUMBER                               00005100
*                                                                       00005200
*  SUBSIDIARIES:                                                        00005300
*               FILOPN                                                  00005400
*               CFORM                                                   00005500
*               ICONV                                                   00005600
*               CPRINT                                                  00005700
*                                                                       00005800
      SUBROUTINE CHWRIT (NO,IRECNO,CDATA,ISIZE,IRET)                    00005900
C                                                                       00006000
      INCLUDE 'FILTAB.INC'                                              00006100
      LOGICAL OD                                                        00006200
      CHARACTER*12 IACC                                                 00006300
      CHARACTER CDATA(*)                                                00006400
      CHARACTER*80 DARRAY                                               00006500
      INTEGER POSN,SLEN                                                 00006600
      CHARACTER CDUM                                                    00006700
C                                                                       00006800
      DATA DARRAY/' '/                                                  00006900
      DATA CDUM/' '/                                                    00007000
C                                                                       00007100
      ID=U(NO)                                                          00007200
C                                                                       00007300
C---- IS FILE OPENED, IF NOT OPEN                                       00007400
      INQUIRE (UNIT=ID,OPENED=OD)                                       00007500
      IF (OD) GOTO 10                                                   00007600
C---- OPEN UNIT                                                         00007700
      CALL FILOPN(NO)                                                   00007800
C---- CHECK FILE ACCESS                                                 00007900
   10 INQUIRE (UNIT=ID,ACCESS=IACC)                                     00008000
      IF (IACC.EQ.'DIRECT') THEN                                        00008100
C---- DIRECT ACCESS FILE                                                00008200
        IRECL=RL(NO)                                                    00008300
        IF (IRECNO.EQ.0) THEN                                           00008400
          IRECNO=LSTREC(NO)+1                                           00008500
        END IF                                                          00008600
        IREC=IRECNO                                                     00008700
        IF (ISIZE.LE.IRECL) THEN                                        00008800
          WRITE (ID,REC=IREC,IOSTAT=IRET,ERR=90) (CDATA(I),I=1,ISIZE)   00008900
        ELSE                                                            00009000
          NUM=ISIZE/IRECL                                               00009100
          DO 20 J=1,NUM                                                 00009200
            I1=(J-1)*IRECL+1                                            00009300
            I2=J*IRECL                                                  00009400
            WRITE (ID,REC=IREC,IOSTAT=IRET,ERR=90) (CDATA(I),I=I1,I2)   00009500
            IREC=IREC+1                                                 00009600
   20     CONTINUE                                                      00009700
          IF ((ISIZE-NUM*IRECL).GT.0) THEN                              00009800
            I1=NUM*IRECL+1                                              00009900
            I2=(NUM+1)*IRECL-ISIZE                                      00010000
            WRITE (ID,REC=IREC,IOSTAT=IRET,ERR=90)                      00010100
     1            (CDATA(I),I=I1,ISIZE),(CDUM,I=1,I2)                   00010200
          ELSE                                                          00010300
            IREC=IREC-1                                                 00010400
          END IF                                                        00010500
        END IF                                                          00010600
        IF (IREC.GT.LSTREC(NO)) THEN                                    00010700
          LSTREC(NO)=IREC                                               00010800
        END IF                                                          00010900
        NXTREC(NO)=IREC+1                                               00011000
        ELSE                                                            00011100
C---- SEQUENTIAL ACCESS FILE                                            00011200
        WRITE (ID) (CDATA(I),I=1,ISIZE)                                 00011300
        END IF                                                          00011400
      RETURN                                                            00011500
   90 SLEN=0                                                            00011600
      CALL CFORM(' *** ERROR WRITING BY CHWRIT ON FILE :',              00011700
     1            DARRAY,2,SLEN)                                        00011800
      POSN=SLEN+3                                                       00011900
      SLEN=0                                                            00012000
      CALL CFORM (FILNAM(NO),DARRAY,POSN,SLEN)                          00012100
      POSN=POSN+SLEN+2                                                  00012200
      SLEN=0                                                            00012300
      CALL CFORM ('RECNO :',DARRAY,POSN,SLEN)                           00012400
      POSN=POSN+SLEN+1                                                  00012500
      SLEN=6                                                            00012600
      CALL ICONV (IRECNO,DARRAY,POSN,SLEN)                              00012700
      CALL CPRINT (DARRAY)                                              00012800
      IRET=1                                                            00012900
      RETURN                                                            00013000
      END                                                               00013100
**** SOURCE FILE : CLOCF400.ORG   ***
*
*                                                                       00000100
*  * CLOCF4 *  FORTRAN 77 SUBROUTINE  4-DEC-85  E.MCLELLAN              00000200
*                                                                       00000300
*  PURPOSE:  USE SYSTEM DEPENDENT FUNCTION 'CPUTIM'                     00000400
*            TO OBTAIN CPU TIME IN 1/100THS OF A SECOND                 00000500
*                                                                       00000600
*  CALLING SEQUENCE:                                                    00000700
*                   CALL CLOCF4(TIME)                                   00000800
*                                                                       00000900
*  ARGUMENTS:                                                           00001000
*                   TYPE       DESCRIPTION                              00001100
*       TIME        INTEGER    CPU TIME IN 1/100THS OF A SECOND         00001200
*                                                                       00001300
*  GLOBAL VARIABLES:  NONE                                              00001400
*                                                                       00001500
*  LOCAL VARIABLES:  NONE                                               00001600
*                                                                       00001700
*  FILES:  NONE                                                         00001800
*                                                                       00001900
*  SUBSIDIARIES:                                                        00002000
*               CPUTIM                                                  00002100
*                                                                       00002200
      SUBROUTINE CLOCF4(TIME)                                           00002300
C                                                                       00002400
      INTEGER TIME                                                      00002500
C                                                                       00002600
      INTEGER CPUTIM                                                    00002700
      EXTERNAL CPUTIM                                                   00002800
C                                                                       00002900
      TIME=CPUTIM()                                                     00003000
      RETURN                                                            00003100
      END                                                               00003200
**** SOURCE FILE : CMPRES00.ORG   ***
*
*                                                                       00000100
*  * CMPRES *  FORTRAN 77 SUBROUTINE  9-DEC-1985  E.MCLELLAN            00000200
*                                                                       00000300
*  PURPOSE:  COMPRESS STRINGS OF BLANK CHARACTERS TO A SINGLE BLANK     00000400
*                                                                       00000500
*  CALLING SEQUENCE:                                                    00000600
*                   CALL CMPRES(STRING,SLEN)                            00000700
*                                                                       00000800
*  ARGUMENTS:                                                           00000900
*                   TYPE       DESCRIPTION                              00001000
*      STRING       CHARACTER  CHARACTER STRING TO BE COMPRESSED        00001100
*      SLEN         INTEGER    LENGTH OF ORIGINAL STRING ON INPUT       00001200
*                              AND COMPRESSED STRING ON OUTPUT          00001300
*                                                                       00001400
*  GLOBAL VARIABLES:  NONE                                              00001500
*                                                                       00001600
*  LOCAL VARIABLES:  NONE                                               00001700
*                                                                       00001800
*  FILES:  NONE                                                         00001900
*                                                                       00002000
*  SUBSIDIARIES:  NONE                                                  00002100
*                                                                       00002200
      SUBROUTINE CMPRES(STRING,SLEN)                                    00002300
C                                                                       00002400
      CHARACTER STRING*(*)                                              00002500
      INTEGER SLEN                                                      00002600
C                                                                       00002700
      SLEN=LEN(STRING)                                                  00002750
      DO 10 I=SLEN,1,-1                                                 00002800
      IF (STRING(I:I).NE.' ') THEN                                      00002900
        SLEN=I                                                          00003000
        GOTO 20                                                         00003100
      ENDIF                                                             00003200
   10 CONTINUE                                                          00003300
C                                                                       00003400
   20 I=INDEX(STRING(:SLEN),'  ')                                       00003500
      IF (I.NE.0) THEN                                                  00003600
         STRING(I:)=STRING(I+1:SLEN)//' '                               00003700
         SLEN=SLEN-1                                                    00003800
         GOTO 20                                                        00003900
      ELSE                                                              00004000
         RETURN                                                         00004100
      ENDIF                                                             00004200
C                                                                       00004300
      END                                                               00004400
**** SOURCE FILE : M0001088.V03   ***
*
      SUBROUTINE CPRINT(ARRAY)                                          00000100
C---       PURPOSE IS TO CONTROL COMPRESSION OF PRINTOUT                00000200
C---       IF ICMTES IS GT 0, STRINGS OF BLANKS ARE COMPRESSED          00000300
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000400
      COMMON/CMPTST/ICMTES                                              00000500
      CHARACTER ARRAY*(*)                                               00000600
      INTEGER SLEN                                                      00000700
C                                                                       00000800
      SLEN=LEN(ARRAY)                                                   00000850
      IF(ICMTES.EQ.0) GO TO 10                                          00000900
C                                                                       00001000
      CALL CMPRES(ARRAY,SLEN)                                           00001100
C                                                                       00001200
   10 CONTINUE                                                          00001300
      CALL SPRINT(ARRAY(:SLEN))                                         00001400
C                                                                       00001500
      RETURN                                                            00001600
      END                                                               00001700
**** SOURCE FILE : CPUNCH00.V01   ***
*
      SUBROUTINE CPUNCH(ARRAY,FLAGG)                                    00000100
*                                                                       00000200
*  *  CPUNCH  *   VAX11 FORTRAN VERSION  13.5.82  E.MCLELLAN            00000300
*                                                                       00000400
*  PURPOSE     TO FORMAT A RECORD FOR PUNCHING ON PNCHFL                00000500
*  CALLING SEQUENCE                                                     00000600
*              CALL CPUNCH(ARRAY,FLAGG)                                 00000700
*  ARGUMENTS                                                            00000800
*              ARRAY   80 BYTE ARRAY CONTAINING THE                     00000900
*                      BCD CHARACTERS TO BE PUNCHED                     00001000
*              FLAGG   .EQ.0 BLANK FILL ARRAY AFTER PUNCHING            00001100
*                      .NE.0 OMIT BLANKING                              00001200
*                                                                       00001300
C                                                                       00001400
C...                 SYSTEM I/O FILES                                   00001500
C                                                                       00001600
      INCLUDE 'SYMFIL.INC'                                              00001700
C                                                                       00001800
C...     FILE ATTRIBUTES                                                00001900
C                                                                       00002000
      INCLUDE 'FILTAB.INC'                                              00002100
C                                                                       00002200
      CHARACTER ARRAY*80                                                00002300
      INTEGER FLAGG,ID                                                  00002400
      LOGICAL OD                                                        00002500
C                                                                       00002600
C.... UNIT NO FOR PNCHFL                                                00002700
C                                                                       00002800
      ID=U(PNCHFL)                                                      00002900
C                                                                       00003000
C---- IS PNCHFL OPEN, IF NOT, OPEN PNCHFL                               00003100
      INQUIRE (UNIT=ID,OPENED=OD)                                       00003200
C                                                                       00003300
      IF (.NOT.OD) THEN                                                 00003400
        CALL FILOPN(PNCHFL)                                             00003500
      END IF                                                            00003600
C                                                                       00003700
      WRITE (ID,'(A80)') ARRAY                                          00003800
      IF (FLAGG.EQ.0) THEN                                              00003900
C---- BLANK FILL ARRAY                                                  00004000
        ARRAY=' '                                                       00004100
      ENDIF                                                             00004200
      RETURN                                                            00004300
      END                                                               00004400
C                                                                       00004500
C---- CLOSE PNCHFL, IF OPEN                                             00004600
C                                                                       00004700
      SUBROUTINE CPUCLO                                                 00004800
C                                                                       00004900
      INCLUDE 'SYMFIL.INC'                                              00005000
C                                                                       00005100
      INCLUDE 'FILTAB.INC'                                              00005200
C                                                                       00005300
      INTEGER ID                                                        00005400
      LOGICAL OD                                                        00005500
C                                                                       00005600
      ID=U(PNCHFL)                                                      00005700
      INQUIRE (UNIT=ID,OPENED=OD)                                       00005800
      IF (OD) THEN                                                      00005900
         CLOSE (UNIT=ID,STATUS='KEEP')                                  00006000
      ENDIF                                                             00006100
      RETURN                                                            00006200
      END                                                               00006300
**** SOURCE FILE : CREAD000.ORG   ***
*
*                                                                       00000100
*  *  CREAD  *   FORTRAN 77 VERSION   4-DEC-85   E.MCLELLAN             00000200
*                                                                       00000300
*  PURPOSE     TO READ A RECORD FROM SYSTEM INPUT DEVICE                00000400
*                                                                       00000500
*  CALLING SEQUENCE                                                     00000600
*              CALL CREAD(REC,FLAG)                                     00000700
*  ARGUMENTS                                                            00000800
*              REC     CHARACTER STRING TO CONTAIN INPUT RECORD         00000900
*              FLAG    =0  NORMAL RETURN                                00001000
*                      =1 END OF FILE DETECTED                          00001100
*                                                                       00001200
      SUBROUTINE CREAD(REC,FLAG)                                        00001300
C                                                                       00001400
      INCLUDE 'SYMFIL.INC'                                              00001500
C                                                                       00001600
      CHARACTER*80 REC                                                  00001700
      INTEGER FLAG                                                      00001800
C                                                                       00001900
      READ (INFILE,'(A80)',IOSTAT=FLAG) REC                             00002000
      FLAG=ABS(FLAG)                                                    00002100
      RETURN                                                            00002200
      END                                                               00002300
**** SOURCE FILE : DNONAM00.V01   ***
*
*                                                                       00000100
*  * DNONAM *    FORTRAN 77 SUBROUTINE   15-JUL-1986  E.MCLELLAN        00000200
*                                                                       00000300
*   PURPOSE:  TO RETURN THE BCD EQUIVALENT OF 'DNONAM  '                00000400
*             IN THE FIRST 8 BYTES OF THE ARGUMENT                      00000500
*             (NOTE: THIS SHOULD GIVE A NONE VALID D.P. NUMBER          00000600
*                    ON MOST SYSTEMS)                                   00000650
*                                                                       00000700
*   CALLING SEQUENCE:                                                   00000800
*                    CALL DNONAM(IWORD)                                 00000900
*                                                                       00001000
*   ARGUMENTS:                                                          00001100
*         IWORD  INTEGER  ARRAY INTO WHICH 'DNONAM  ' IS TO BE LOADED   00001120
*                                                                       00001200
*   GLOBAL VARIABLES:                                                   00001300
*                                                                       00001400
*----------------------------------------------------                   00001500
*   VARIABLE    BLOCK    TYPE        DESCRIPTION                        00001600
*----------------------------------------------------                   00001700
*   IFAC        SDP      INTEGER     BYTE LEFT SHIFT                    00001800
*                                    MULTIPLICATION FACTOR              00001900
*                                                                       00002000
*   LOCAL VARIABLES:                                                    00002100
*                   TYPE        DESCRIPTION                             00002110
*         IBDNAM    INTEGER     INTEGER ARRAY TO BUILD UP BCDF          00002120
*         FIRST     LOGICAL     FLAG INDICATING FIRST CALL              00002150
*                                                                       00002200
*   SUBSIDIARIES:  NONE                                                 00002300
*                                                                       00002400
      SUBROUTINE DNONAM(IWORD)                                          00002500
C                                                                       00002600
      INTEGER IDNONM(2),IWORD(2)                                        00002900
      INTEGER BCDF                                                      00002950
      LOGICAL FIRST                                                     00003120
      SAVE IDNONM,FIRST                                                 00003140
      DATA FIRST/.TRUE./                                                00003160
                                                                        00003200
      IF (FIRST) THEN                                                   00003220
        IDNONM(1) = BCDF('DNON')                                        00003300
        IDNONM(2) = BCDF('AM  ')                                        00003600
        FIRST=.FALSE.                                                   00003700
      ENDIF                                                             00003800
C                                                                       00003900
      IWORD(1)=IDNONM(1)                                                00004000
      IWORD(2)=IDNONM(2)                                                00004040
      RETURN                                                            00004100
      END                                                               00004200
**** SOURCE FILE : FCONV000.ORG   ***
*
*                                                                       00000100
*  *  FCONV  *    VAX11  FORTRAN VERSION 8.6.82  E.MCLELLAN             00000200
*                                                                       00000300
*                          IMPROVED      25.06.82  E.MCLELLAN           00000400
*                          MODIFIED      16.07.85  E.MCLELLAN           00000500
*                                                                       00000600
*  PURPOSE     TO CONVERT FLOATING POINT NUMBERS TO ALPHAMERIC          00000700
*              REPRESENTATION                                           00000800
*  CALLING SEQUENCE                                                     00000900
*              CALL FCONV(F,A,N,I,J)                                    00001000
*  ARGUMENTS                                                            00001100
*              F   DOUBLE PRECISION NUMBER TO BE CONVERTED              00001200
*              A   CHARACTER STRING TO CONTAIN THE CHARACTERS           00001300
*              N   INTEGER INDICATING THE STARTING BYTE POSITION        00001400
*                  FROM THE LEFT, TO STORE THE CHARACTERS IN A          00001500
*              I   NUMBER OF CHARCTERS DESIRED                          00001600
*              J   NUMBER OF FRACTIONAL DIGITS REQUIRED                 00001700
*                                                                       00001800
      SUBROUTINE FCONV(F,A,N,I,J)                                       00001900
C                                                                       00002000
      DOUBLE PRECISION F,DLSD,TENTOJ,FJ                                 00002100
      CHARACTER*(*) A                                                   00002200
      CHARACTER*35 INFIL                                                00002300
C                                                                       00002400
C.... CHECK SIZE OF VALUE F                                             00002500
C                                                                       00002600
      IF ((F.LT.-2.**31).OR.(F.GT.(2.**31-1)).OR.                       00002700
     1  (F.LE.-10.**(I-J-2)).OR.(F.GE.10.**(I-J-1))) THEN               00002800
C.... FOR LARGE NUMBERS AND VALUES WHICH WOULD OVERFLOW                 00002900
C     REQUESTED FIELD - OUTPUT IN D FORMAT                              00003000
C                                                                       00003100
        WRITE (INFIL,'(D35.15)') F                                      00003200
        K=14                                                            00003300
        IF (INFIL(K:K).EQ.' ') K=15                                     00003400
C.... STORE MANTISSA TO MAX NO OF SIGNIFICANT FIGS FOR FIELD            00003500
        I1=N                                                            00003600
        I2=N+I-5                                                        00003700
        K1=K+I-5                                                        00003800
        A(I1:I2)=INFIL(K:K1)                                            00003900
C.... NOW ADD EXPONENT                                                  00004000
        I1=I2+1                                                         00004100
        I2=I2+4                                                         00004200
        A(I1:I2)=INFIL(32:35)                                           00004300
C                                                                       00004400
      ELSE                                                              00004500
C                                                                       00004600
C.... NORMAL ROUTE                                                      00004700
C                                                                       00004800
C.... ROUND F TO J DECIMAL PLACES                                       00004900
      TENTOJ=10.D0**J                                                   00005000
      MSD=INT(F)                                                        00005100
      DLSD=F-DFLOAT(MSD)                                                00005200
      LSD=INT(DLSD*TENTOJ+DSIGN(0.5D0,F))                               00005300
      FJ=DFLOAT(MSD)+DFLOAT(LSD)/TENTOJ                                 00005400
      WRITE (INFIL,'(F35.10)') FJ                                       00005500
      DO 10 K=1,35                                                      00005600
      IF (INFIL(K:K).NE.' ') GOTO 20                                    00005700
   10 CONTINUE                                                          00005800
      K=35                                                              00005900
C                                                                       00006000
   20 L=25-K+1+J                                                        00006100
C                                                                       00006200
      I2=N+I-1                                                          00006300
      I1=I2-L+1                                                         00006400
      K1=25+J                                                           00006500
      A(I1:I2)=INFIL(K:K1)                                              00006600
C                                                                       00006700
      ENDIF                                                             00006800
C                                                                       00006900
      RETURN                                                            00007000
      END                                                               00007100
**** SOURCE FILE : FREAD000.ORG   ***
*
*                                                                       00000100
*  *  FREAD  *                  18.6.86   E.MCLELLAN                    00000200
*                                                                       00000300
*                                                                       00000400
*  PURPOSE     TO READ A RECORD CONTAINING CHARACTER DATA               00000500
*              FROM A SPECIFIED FILE, CONVERT EACH 12 BYTE ITEM         00000600
*              INTO A DOUBLE PRECISION FLOATING POINT NUMBER            00000700
*                                                                       00000800
*  CALLING SEQUENCE                                                     00000900
*              CALL FREAD (NO,IRECNO,DATA,ISIZE,IRET)                   00001000
*  ARGUMENTS                                                            00001100
*              NO        FILE NUMBER                                    00001200
*              IRECNO    RECORD NO. IF SET TO ZERO RETRIEVES            00001300
*                        THE NEXT RECORD. IF SET TO 'N'                 00001400
*                        RETRIEVES N-TH RECORD DIRECTLY.                00001500
*              DATA      DATA ARRAY TO CONTAIN THE RETRIEVED            00001600
*                        RECORD (DOUBLE PRECISION)                      00001700
*              ISIZE     SIZE OF RECORD (IN DOUBLE PRECISION WORDS)     00001800
*              IRET      RETURN FLAG =0  NO ERROR                       00001900
*                                    =1  E.O.F ENCOUNTERED              00002000
*                                    =2  ISIZE IS BIGGER THAN ACTUAL    00002100
*                                        RECORD SIZE. DATA ASSUMED TO   00002200
*                                        SPAN MORE THAN ONE RECORD      00002300
*                                        DATA TRANSFERRED TO ARRAY      00002400
*                                    =3  UNRECOVERABLE ERROR            00002500
*                                                                       00002600
*                                                                       00002700
*  GLOBAL VARIABLES:  NONE                                              00002800
*                                                                       00002900
*---------------------------------------------------                    00003000
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00003100
*---------------------------------------------------                    00003200
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00003300
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00003400
*                                         (DIRECT OR SEQUENTIAL)        00003500
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00003600
*                                         (FORMATTED OR UNFORMATTED)    00003700
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00003800
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00003900
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00004000
*   U               IFILTB    INTEGER    UNIT NUMBER                    00004100
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00004200
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00004300
*                                        READ OR WRITTEN (DIRECT ACCESS)00004400
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00004500
*                                         (DIRECT ACCESS)               00004600
*                                                                       00004700
*  LOCAL VARIABLES:                                                     00004800
*                   TYPE       DESCRIPTION                              00004900
*         OD        LOGICAL    FLAG TO INDICATE IF FILE IS OPEN         00005000
*         CDATA     CHARACTER  CHARACTER VARIABLE INTO WHICH RECORD     00005100
*                              IS INITIALLY READ                        00005200
*         IACC      CHARACTER  ACCESS TYPE RETURN BY INQUIRE            00005300
*         DARRAY    CHARACTER  PRINT BUFFER                             00005400
*         IRECL     INTEGER    RECORD LENGTH                            00005500
*         NUM       INTEGER    NUMBER OF COMPLETE PHYSICAL RECORDS      00005600
*                              SPANNED BY LOGICAL RECORD BEING READ     00005700
*         POSN      INTEGER    START POSITION IN PRINT BUFFER           00005800
*         SLEN      INTEGER    LENGTH OF STRING ENTERED IN PRINT BUFFER 00005900
*                                                                       00006000
*  FILES:  FILE REFERENCED BY FILE NUMBER                               00006100
*                                                                       00006200
*  SUBSIDIARIES:                                                        00006300
*               FILOPN                                                  00006400
*               CFORM                                                   00006500
*               ICONV                                                   00006600
*               CPRINT                                                  00006700
*                                                                       00006800
      SUBROUTINE FREAD (NO,IRECNO,DATA,ISIZE,IRET)                      00006900
C                                                                       00007000
      INCLUDE 'FILTAB.INC'                                              00007100
C                                                                       00007200
      INTEGER NO,IRECNO,ISIZE,IRET                                      00007300
      DOUBLE PRECISION DATA(ISIZE)                                      00007400
      LOGICAL OD                                                        00007500
      CHARACTER*12 CDATA(3000)                                          00007600
      CHARACTER*12 IACC                                                 00007700
      CHARACTER*80 DARRAY                                               00007800
      INTEGER POSN,SLEN                                                 00007900
      DATA DARRAY/' '/                                                  00008000
C                                                                       00008100
      ID=U(NO)                                                          00008200
C                                                                       00008300
C---- IS UNIT OPENED, IF NOT OPEN                                       00008400
      INQUIRE (UNIT=ID,OPENED=OD)                                       00008500
      IF (OD) GOTO 10                                                   00008600
C---- OPEN UNIT                                                         00008700
      CALL FILOPN(NO)                                                   00008800
C---- CHECK FILE ACCESS                                                 00008900
   10 INQUIRE (UNIT=ID,ACCESS=IACC)                                     00009000
      IF (IACC.EQ.'DIRECT') THEN                                        00009100
C---- DIRECT ACCESS FILE                                                00009200
      IRECL=RL(NO)                                                      00009300
        IF (IRECNO.EQ.0) THEN                                           00009400
          IRECNO=NXTREC(NO)                                             00009500
        END IF                                                          00009600
        IF (IRECNO.GT.LSTREC(NO)) THEN                                  00009700
          IRET=1                                                        00009800
          RETURN                                                        00009900
        END IF                                                          00010000
        IREC=IRECNO                                                     00010100
        IF (ISIZE*12.LE.IRECL) THEN                                     00010200
          READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (CDATA(I),I=1,ISIZE)    00010300
          CALL ABCDBN(CDATA,DATA,ISIZE)                                 00010400
        ELSE                                                            00010500
          NUM=(ISIZE*12)/IRECL                                          00010600
          DO 20 J=1,NUM                                                 00010700
            I2=IRECL/12                                                 00010800
            READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (CDATA(I),I=1,I2)     00010900
            I1=(J-1)*I2+1                                               00011000
            CALL ABCDBN(CDATA,DATA(I1),I2)                              00011100
            IREC=IREC+1                                                 00011200
   20     CONTINUE                                                      00011250
          IF ((ISIZE*12-NUM*IRECL).GT.0) THEN                           00011300
            I2=ISIZE-NUM*IRECL/12                                       00011400
            READ (ID,REC=IREC,IOSTAT=IRET,ERR=90) (CDATA(I),I=1,I2)     00011500
            I1=ISIZE-I2+1                                               00011600
            CALL ABCDBN(CDATA,DATA(I1),I2)                              00011700
          ELSE                                                          00011800
            IREC=IREC-1                                                 00011900
          END IF                                                        00012000
          IRET=2                                                        00012100
        END IF                                                          00012200
        NXTREC(NO)=IREC+1                                               00012300
      ELSE                                                              00012400
C---- SEQUENTIAL ACCESS FILE                                            00012500
        READ (ID,END=80) (CDATA(I),I=1,ISIZE)                           00012700
        CALL ABCDBN(CDATA,DATA,ISIZE)                                   00012800
      ENDIF                                                             00014400
      RETURN                                                            00014500
 80   IRET=1                                                            00014600
      RETURN                                                            00014700
 90   SLEN=0                                                            00014800
      CALL CFORM (' *** ERROR READING BY FREAD FROM FILE :',            00014900
     1            DARRAY,2,SLEN)                                        00015000
      POSN=SLEN+3                                                       00015100
      SLEN=0                                                            00015200
      CALL CFORM (FILNAM(NO),DARRAY,POSN,SLEN)                          00015300
      POSN=POSN+SLEN+2                                                  00015400
      SLEN=0                                                            00015500
      CALL CFORM ('RECNO:',DARRAY,POSN,SLEN)                            00015600
      POSN=POSN+SLEN+1                                                  00015700
      SLEN=6                                                            00015800
      CALL ICONV (IRECNO,DARRAY,POSN,SLEN)                              00015900
      CALL CPRINT (DARRAY)                                              00016000
      IRET=3                                                            00016100
      RETURN                                                            00016200
      END                                                               00016300
**** SOURCE FILE : HEX00000.ORG   ***
*
*                                                                       00000010
*  * HEX *  FORTRAN 77 CHARACTER FUNCTION   6.11.85  E.MCLELLAN         00000020
*                                                                       00000030
*  PURPOSE:  TO CONVERT AN INTEGER VALUE TO A CHARACTER STRING          00000040
*            REPRESENTING THE EQUIVALENT HEXADECIMAL NUMBER             00000050
*                                                                       00000060
*  CALLING SEQUENCE:                                                    00000070
*                   STRING=HEX(VALUE)                                   00000080
*                                                                       00000090
*  ARGUMENTS:                                                           00000100
*                   TYPE       DESCRIPTION                              00000110
*       VALUE       INTEGER    INTEGER VALUE TO BE CONVERTED            00000120
*                              TO HEX CHARACTER STRING                  00000130
*                                                                       00000140
*  GLOBAL VARIABLES:  NONE                                              00000150
*                                                                       00000160
*  LOCAL VARIABLES:                                                     00000170
*                   TYPE       DESCRIPTION                              00000180
*       DIV         INTEGER    DIVISORS FOR EACH HALF BYTE              00000190
*                              POSITION (POWERS OF 16)                  00000200
*       J           INTEGER    INTEGRAL QUOTIENT                        00000210
*       V           INTEGER    DIVIDEND                                 00000220
*       H           CHARACTER  HEX CHARACTERS (0-F)                     00000230
*                                                                       00000240
*  FILES:  NONE                                                         00000250
*                                                                       00000260
*  SUBSIDIARIES:  NONE                                                  00000270
*                                                                       00000280
      CHARACTER*8 FUNCTION HEX(VALUE)                                   00000290
C                                                                       00000300
      INTEGER VALUE,DIV(7),J,V                                          00000310
      CHARACTER H(0:15)                                                 00000320
C                                                                       00000330
      DATA DIV / 268435456, 16777216, 1048576,                          00000340
     1           65536,  4096,  256,   16    /                          00000350
C                                                                       00000360
      DATA H / '0','1','2','3','4','5','6','7',                         00000370
     1         '8','9','A','B','C','D','E','F'/                         00000380
C                                                                       00000390
      V=VALUE                                                           00000400
      DO 10 I=1,7                                                       00000410
        J=V/DIV(I)                                                      00000420
        V=V-J*DIV(I)                                                    00000430
        HEX(I:I)=H(J)                                                   00000440
  10  CONTINUE                                                          00000450
      HEX(8:8)=H(V)                                                     00000460
C                                                                       00000470
      RETURN                                                            00000480
      END                                                               00000490
**** SOURCE FILE : HOLFRM00.W01   ***
*
*                                                                       00000100
*  * HOLFRM *  FORTRAN 77 SUBROUTINE  16.7.86  E.MCLELLAN               00000200
*                MODIFIED                 2-FEB-1988  E.MCLELLAN        00000250
*                                                                       00000300
*  PURPOSE:  TO INSERT SPECIFIED NUMBER OF CHARACTERS IN BCDF FORM      00000400
*            FROM INTEGER ARRAY INTO CHARACTER VARIABLE                 00000500
*            STARTING FROM SPECIFIED LOCATION - RETURNING THE NUMBER    00000600
*            OF INTEGER WORDS OCCUPIED                                  00000700
*                                                                       00000800
*  CALLING SEQUENCE:                                                    00000900
*                   CALL HOLFRM(IARR,STR,IST,NCHR,NWD)                  00001000
*                                                                       00001100
*  ARGUMENTS:                                                           00001200
*                   TYPE       DESCRIPTION                              00001300
*       IARR        INTEGER    ARRAY CONTAINING BCDF CHARACTERS         00001400
*       STR         CHARACTER  STRING INTO WHICH CHARACTERS ARE         00001500
*                              TO BE LOADED                             00001600
*       IST         INTEGER    START LOCATION IN STR                    00001700
*       NCHR        INTEGER    NUMBER OF CHARACTERS TO BE INSERTED      00001800
*       NWD         INTEGER    NUMBER OF WORDS OCCUPIED                 00001900
*                                                                       00002000
*  GLOBAL VARIABLES:                                                    00002100
*                                                                       00002200
*---------------------------------------------------                    00002300
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00002400
*---------------------------------------------------                    00002500
*     IWRD          SDP       INTEGER    NO OF BYTES PER WORD           00002600
*     NBCHAR        SDP       INTEGER    NO OF BITS PER BYTE            00002700
*                                                                       00002900
*  LOCAL VARIABLES:                                                     00003000
*                   TYPE       DESCRIPTION                              00003100
*     IVAL          INTEGER    VALUE OF INTEGER WORD                    00003200
*     JVAL          INTEGER    INDEX OF CHARACTER IN CONCATINATION      00003300
*                              SEQUENCE                                 00003400
*                                                                       00003500
*  FILES:  NONE                                                         00003600
*                                                                       00003700
*  SUBSIDIARIES:  NONE                                                  00003800
*                                                                       00003900
      SUBROUTINE HOLFRM(IARR,STR,IST,NCHR,NWD)                          00004000
C                                                                       00004100
C.... SYSTEM DEPENDENT PARAMETERS                                       00004200
C                                                                       00004300
      INCLUDE 'SDP.INC'                                                 00004400
C                                                                       00004500
      INTEGER IARR(*),IST,NCHR,NWD,IVAL,JVAL,SLEN                       00004600
C                                                                       00004700
      CHARACTER*(*) STR                                                 00004800
C                                                                       00004900
      SLEN=LEN(STR)                                                     00004910
      NWD=NCHR/IWRD                                                     00005000
      IF (NCHR.GT.NWD*IWRD) NWD=NWD+1                                   00005100
      DO 20 I=1,NWD                                                     00005200
        IVAL=IARR(I)                                                    00005300
        K1=IST+I*IWRD                                                   00005350
        DO 10 J=IWRD,1,-1                                               00005400
          K=K1-J                                                        00005500
          JJ=NBCHAR*(J-1)                                               00005550
          JVAL=ISHFT(IVAL,-JJ)                                          00005600
          IF (K.LE.SLEN) THEN                                           00005610
            STR(K:K)=CHAR(JVAL)                                         00005700
          ENDIF                                                         00005710
          IVAL=(IVAL-ISHFT(JVAL,JJ))                                    00005800
  10    CONTINUE                                                        00005900
  20  CONTINUE                                                          00006000
C                                                                       00006100
      RETURN                                                            00006200
      END                                                               00006300
**** SOURCE FILE : ICONV000.ORG   ***
*
*                                                                       00000100
*  *  ICONV  *    VAX11 FORTRAN VERSION   8.4.81   E.MCLELLAN           00000200
*                                                                       00000300
*                              MODIFEED  25.06.82  E.MCLELLAN           00000400
*                              MODIFIED  16.07.85  E.MCLELLAN           00000500
*                              MODIFIED  07.07.86  E.MCLELLAN           00000550
*                                                                       00000600
*  PURPOSE     TO CONVERT INTEGERS TO ALPHAMERIC REPRESENTATAION        00000700
*                                                                       00000800
*  CALLING SEQUENCE                                                     00000900
*              CALL ICONV(I,A,N,K)                                      00001000
*  ARGUMENTS                                                            00001100
*              I   INTEGER VALUE TO BE CONVERTED TO CHARACTER           00001200
*              A   CHARACTER STRING TO CONTAIN THE CONVERTED INTEGER    00001300
*              N   INTEGER INDICATING THE START BYTE POSITION TO        00001400
*                  STORE THE CHARACTERS IN A                            00001500
*              K   INTEGER INDICATING TOTAL NUMBER OF CHARACTERS        00001600
*                  DESIRED                                              00001700
*                                                                       00001800
      SUBROUTINE ICONV(I,A,N,K)                                         00001900
C                                                                       00002000
      CHARACTER*(*) A                                                   00002100
      CHARACTER*11 INTFIL                                               00002200
      WRITE (INTFIL,'(I11)') I                                          00002300
      DO 10 J=1,11                                                      00002400
      IF (INTFIL(J:J).NE.' ') GOTO 20                                   00002500
   10 CONTINUE                                                          00002600
      J=11                                                              00002700
C                                                                       00002800
   20 L=12-J                                                            00002900
      IF (L.GT.K) GOTO 30                                               00003000
C                                                                       00003100
      I2=N+K-1                                                          00003200
      I1=I2-L+1                                                         00003300
      A(I1:I2)=INTFIL(J:11)                                             00003400
      GO TO 99                                                          00003500
C---- OVERFLOW                                                          00003600
   30 I1=N                                                              00003700
      DO 35 J=1,K                                                       00003800
      A(I1:I1)='*'                                                      00003900
   35 I1=I1+1                                                           00004000
C                                                                       00004100
   99 CONTINUE                                                          00004200
      RETURN                                                            00004300
      END                                                               00004400
**** SOURCE FILE : OUTMSG.ORG   ***
*
*                                                                       00000100
*  * OUTMSG *  FORTRAN 77 SUBROUTINE  1.12.88  E.MCLELLAN               00000200
*                                                                       00000300
*  PURPOSE:  TO PRINT MESSAGE ON THE VLFILE                             00000400
*                                                                       00000500
*  CALLING SEQUENCE:                                                    00000600
*                   CALL OUTMSG(STR)                                    00000700
*                                                                       00000800
*  ARGUMENTS:                                                           00000900
*                   TYPE       DESCRIPTION                              00001000
*      STR          CHARACTER  CHARACTER STRING TO BE PRINTED           00001100
*                              MAY BE LITERAL OR A STRING VARIABLE      00001200
*  GLOBAL VARIABLES:                                                    00001300
*           BLOCK   TYPE       DESCRIPTION                              00001400
*   VLFILE  SYMFIL  INTEGER    UNIT NUMBER FOR SYSTEM OUTPUT DEVICE     00001500
*                                                                       00001600
*  LOCAL VARIABLES:                                                     00001700
*                   TYPE       DESCRIPTION                              00001800
*        SLEN       INTEGER    LENGTH OF STRING TO BE PRINTED           00001850
*        F1         CHARACTER  INTERNAL FILE FOR INTEGER TO CHARACTER   00001900
*                              CONVERSION                               00002000
*        FORM       CHARACTER  OUTPUT FORMAT                            00002100
*                                                                       00002200
*  FILES:                                                               00002300
*        VLFILE     SYSTEM OUTPUT DEVICE                                00002400
*                                                                       00002500
*  SUBSIDIARIES:  NONE                                                  00002600
*                                                                       00002800
      SUBROUTINE OUTMSG(STR)                                            00002900
C                                                                       00003000
      CHARACTER STR*(*),F1*3,FORM*9                                     00003100
      INTEGER SLEN                                                      00003150
C                                                                       00003200
      INCLUDE 'SYMFIL.INC'                                              00003300
C                                                                       00003400
      SLEN=LEN(STR)                                                     00003500
C                                                                       00003600
C.... SET UP FORMAT AND PRINT                                           00003700
C                                                                       00003800
      WRITE (F1,'(I3)') SLEN                                            00003900
      FORM='(1X,A'//F1//')'                                             00004000
      WRITE (VLFILE,FORM) STR                                           00004100
C                                                                       00004200
      END                                                               00004300
**** SOURCE FILE : SHIFT000.ORG   ***
*
      SUBROUTINE SHIFT(WORD,JCHAR)                                      00000010
*                                                                       00000020
*  *  SHIFT  *  VAX11 VERSION   4.10.85    E.MCLELLAN                   00000030
*                                                                       00000040
*  PURPOSE     TO APPEND A SINGLE CHARACTER 'JCHAR' TO THE CHARACTER    00000050
*              STRING BEING SET UP IN 'WORD' TO FORM A LEFT-JUSTIFIED   00000060
*              'NAME' IN 'WORD'                                         00000070
*                                                                       00000080
*  CALLING SEQUENCE                                                     00000090
*              CALL SHIFT(WORD,JCHAR)                                   00000100
*  ARGUMENTS   WORD   CHARACTER STRING IN WHICH A 'NAME'                00000110
*                     IS BEING BUILT UP                                 00000120
*              JCHAR  CONTAINS THE NEXT CHARACTER (LEFT JUSTIFIED)      00000130
*                     TO BE PLACED IN WORD                              00000140
*                                                                       00000150
      CHARACTER*6 WORD,JCHAR,TEMP                                       00000160
C                                                                       00000170
      J=INDEX(WORD(1:),' ')                                             00000180
      IF(J.NE.0) THEN                                                   00000190
       WORD(J:J)=JCHAR(1:1)                                             00000200
      ELSE                                                              00000210
C  LEFT SHIFT CONTENTS OF WORD AND APPEND CHARACTER                     00000220
       TEMP=WORD(2:6)//JCHAR(1:1)                                       00000230
       WORD=TEMP                                                        00000240
      ENDIF                                                             00000250
      RETURN                                                            00000260
      END                                                               00000270
**** SOURCE FILE : SPRINT00.V02   ***
*
*                                                                       00000100
*  * SPRINT *  FORTRAN 77 SUBROUTINE  3.12.85  E.MCLELLAN               00000200
*                                                                       00000300
*  PURPOSE:  PRINT CHARACTER STRING ON (VLFILE) SYSTEM OUTPUT DEVICE    00000400
*                                                                       00000500
*  CALLING SEQUENCE:                                                    00000600
*                   CALL SPRINT(BUFFER)                                 00000700
*                                                                       00000800
*  ARGUMENTS:                                                           00000900
*                   TYPE       DESCRIPTION                              00001000
*      BUFFER       CHARACTER  CHARACTER STRING TO BE PRINTED           00001100
*                                                                       00001200
*  GLOBAL VARIABLES:                                                    00001300
*           BLOCK   TYPE       DESCRIPTION                              00001400
*   VLFILE  SYMFIL  INTEGER    UNIT NUMBER FOR SYSTEM OUTPUT DEVICE     00001500
*                                                                       00001600
*  LOCAL VARIABLES:                                                     00001700
*                   TYPE       DESCRIPTION                              00001800
*        SLEN       INTEGER    LENGTH OF STRING TO BE PRINTED           00001850
*        F1         CHARACTER  INTERNAL FILE FOR INTEGER TO CHARACTER   00001900
*                              CONVERSION                               00002000
*        FORM       CHARACTER  OUTPUT FORMAT                            00002100
*                                                                       00002200
*  FILES:                                                               00002300
*        VLFILE     SYSTEM OUTPUT DEVICE                                00002400
*                                                                       00002500
*  SUBSIDIARIES:  NONE                                                  00002600
*                                                                       00002800
      SUBROUTINE SPRINT(BUFFER)                                         00002900
C                                                                       00003000
      CHARACTER BUFFER*(*),F1*3,FORM*6                                  00003100
      INTEGER SLEN                                                      00003150
C                                                                       00003200
      INCLUDE 'SYMFIL.INC'                                              00003300
C                                                                       00003400
      SLEN=LEN(BUFFER)                                                  00003500
C.....OMIT TRAILING BLANKS                                              00003505
      DO 10 I=SLEN,1,-1                                                 00003510
        IF (BUFFER(I:I).NE.' ') THEN                                    00003520
          SLEN=I                                                        00003530
          GOTO 20                                                       00003540
        ENDIF                                                           00003550
  10  CONTINUE                                                          00003560
        SLEN=1                                                          00003570
  20  CONTINUE                                                          00003580
      IF (BUFFER(1:1).EQ.'C') THEN                                      00003600
         CLOSE (VLFILE,STATUS='KEEP')                                   00003700
      ELSE                                                              00003800
         WRITE (F1,'(I3)') SLEN                                         00003900
         FORM='(A'//F1//')'                                             00004000
         WRITE (VLFILE,FORM) BUFFER                                     00004100
      ENDIF                                                             00004200
C                                                                       00004300
      BUFFER=' '                                                        00004400
C                                                                       00004500
      RETURN                                                            00004600
      END                                                               00004700
**** SOURCE FILE : STRTSH00.V01   ***
*
*                                                                       00000100
*  * STRTSH *    FORTRAN 77 SUBROUTINE   15-JUL-1986  E.MCLELLAN        00000200
*                MODIFIED                 3-FEB-1988  E.MCLELLAN        00000250
*                                                                       00000300
*   PURPOSE:  TO RETURN THE BCD EQUIVALENT OF '*',NULL,'TRASH',NULL     00000400
*             IN THE FIRST 8 BYTES OF THE ARGUMENT                      00000500
*             (NOTE: THIS SHOULD GIVE A NONE VALID D.P. NUMBER          00000600
*                    ON MOST SYSTEMS)                                   00000650
*                                                                       00000700
*   CALLING SEQUENCE:                                                   00000800
*                    CALL STRTSH(IWORD)                                 00000900
*                                                                       00001000
*   ARGUMENTS:                                                          00001100
*         IWORD  INTEGER  ARRAY INTO WHICH '* TRASH ' IS TO BE LOADED   00001120
*                                                                       00001200
*   GLOBAL VARIABLES:                                                   00001300
*                                                                       00001400
*----------------------------------------------------                   00001500
*   VARIABLE    BLOCK    TYPE        DESCRIPTION                        00001600
*----------------------------------------------------                   00001700
*   NBCHAR      SDP      INTEGER     NO OF BITS PER BYTE                00001750
*                                                                       00002000
*   LOCAL VARIABLES:                                                    00002100
*                   TYPE        DESCRIPTION                             00002110
*         ITRASH    INTEGER     INTEGER ARRAY TO BUILD UP BCDF          00002120
*         FIRST     LOGICAL     FLAG INDICATING FIRST CALL              00002150
*                                                                       00002200
*   SUBSIDIARIES:  NONE                                                 00002300
*                                                                       00002400
      SUBROUTINE STRTSH(IWORD)                                          00002500
C                                                                       00002600
      INCLUDE 'SDP.INC'                                                 00002700
C                                                                       00002800
      INTEGER ITRASH(2),IWORD(2)                                        00002900
      LOGICAL FIRST                                                     00003120
      SAVE ITRASH,FIRST                                                 00003140
      DATA FIRST/.TRUE./                                                00003160
      IF (FIRST) THEN                                                   00003220
        I3=3*NBCHAR                                                     00003222
        I2=2*NBCHAR                                                     00003224
        ITRASH(1) = ISHFT(ICHAR('*'),I3)                                00003300
     +            + ISHFT(ICHAR('T'),NBCHAR)                            00003400
     +            + ICHAR('R')                                          00003500
        ITRASH(2) = ISHFT(ICHAR('A'),I3)                                00003600
     +            + ISHFT(ICHAR('S'),I2)                                00003620
     +            + ISHFT(ICHAR('H'),NBCHAR)                            00003640
        FIRST=.FALSE.                                                   00003700
      ENDIF                                                             00003800
C                                                                       00003900
      IWORD(1)=ITRASH(1)                                                00004000
      IWORD(2)=ITRASH(2)                                                00004040
      RETURN                                                            00004100
      END                                                               00004200
**** SOURCE FILE : TAPOP000.ORG   ***
*
*                                                                       00000100
*  *  TAPOP  *   VAX11 VERSION    11.5.82   E.MCLELLAN                  00000200
*                MODIFIED         18.07.85  E.MCLELLAN                  00000300
*                                                                       00000400
*  PURPOSE     TO PERFORM I/O FILE HANDLING OPERATIONS                  00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL TAPOP (NO,N)                                        00000800
*  ARGUMENTS                                                            00000900
*              NO        FORTRAN NUMBER                                 00001000
*              N  =-1    REWIND FILE BEFORE WRITING NEW FILE            00001100
*                 =-2    REWIND FILE BEFORE READING OLD FILE            00001200
*                 =-3    CLOSE FILE                                     00001300
*                 =-4    REWIND FILE                                    00001400
*                 =-5    GET THE NO. OF THE NEXT RECORD                 00001500
*                                                                       00001600
*                                                                       00001700
*  GLOBAL VARIABLES:                                                    00001800
*                                                                       00001900
*---------------------------------------------------                    00002000
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00002100
*---------------------------------------------------                    00002200
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00002300
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00002400
*                                         (DIRECT OR SEQUENTIAL)        00002500
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00002600
*                                         (FORMATTED OR UNFORMATTED)    00002700
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00002800
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00002900
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00003000
*   U               IFILTB    INTEGER    UNIT NUMBER                    00003100
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00003200
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00003300
*                                        READ OR WRITTEN (DIRECT ACCESS)00003400
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00003500
*                                         (DIERECT ACCESS)              00003600
*  LOCAL VARIABLES:                                                     00003700
*                   TYPE       DESCRIPTION                              00003800
*        IACC       CHARACTER  FILE ACCESS RETURNED BY INQUIRE          00003900
*        DARRAY     CHARACTER  PRINT BUFFER                             00004000
*        POSN       INTEGER    START POSTION IN PRINT BUFFER            00004100
*        SLEN       INTEGER    LENGTH OF STRING ENTERED IN BUFFER       00004200
*                                                                       00004300
*  FILES:  FILE REFERENCED BY FILE NUMBER                               00004400
*                                                                       00004500
*  SUBSIDIARIES:                                                        00004600
*               FILOPN                                                  00004700
*               CFORM                                                   00004800
*               CPRINT                                                  00004900
*                                                                       00005000
      SUBROUTINE TAPOP (NO,N)                                           00005100
C                                                                       00005200
      INCLUDE 'FILTAB.INC'                                              00005300
      CHARACTER*12 IACC                                                 00005400
      CHARACTER DARRAY*80                                               00005500
      INTEGER POSN,SLEN                                                 00005600
      DATA DARRAY/' '/                                                  00005700
      ID=U(NO)                                                          00005800
C                                                                       00005900
      IF (N.EQ.-1) THEN                                                 00006000
C---- CLOSE FILE                                                        00006100
        CLOSE (UNIT=ID,ERR=91,STATUS=CLSTAT(NO))                        00006200
C---- OPEN FILE                                                         00006300
      CALL FILOPN(NO)                                                   00006400
      NXTREC(NO)=1                                                      00006500
      LSTREC(NO)=0                                                      00006600
C                                                                       00006700
        ELSE IF (N.EQ.-2) THEN                                          00006800
          INQUIRE (UNIT=ID,ACCESS=IACC)                                 00006900
          IF (IACC.EQ.'DIRECT') THEN                                    00007000
            NXTREC(NO)=1                                                00007100
          ELSE                                                          00007200
            REWIND (UNIT=ID)                                            00007300
          END IF                                                        00007400
        ELSE IF (N.EQ.-3) THEN                                          00007500
C---- CLOSE FILE                                                        00007600
          CLOSE (UNIT=ID,ERR=91,STATUS=CLSTAT(NO))                      00007700
        ELSE IF (N.EQ.-4) THEN                                          00007800
          INQUIRE (UNIT=ID,ACCESS=IACC)                                 00007900
          IF (IACC.EQ.'DIRECT') THEN                                    00008000
            NXTREC(NO)=1                                                00008100
          ELSE                                                          00008200
            REWIND (UNIT=ID)                                            00008300
          END IF                                                        00008400
        ELSE IF (N.EQ.-5) THEN                                          00008500
            N=LSTREC(NO)+1                                              00008600
      ENDIF                                                             00008700
      RETURN                                                            00008800
 90   SLEN=0                                                            00008900
      CALL CFORM (' *** ERROR OPENING FILE :',DARRAY,2,SLEN)            00009000
      POSN=SLEN+3                                                       00009100
      SLEN=0                                                            00009200
      CALL CFORM (FILNAM(NO),DARRAY,POSN,SLEN)                          00009300
      POSN=POSN+SLEN+4                                                  00009400
      SLEN=0                                                            00009500
      CALL CFORM ('*** FROM ROUTINE: TAPOP',DARRAY,POSN,SLEN)           00009600
      CALL CPRINT (DARRAY)                                              00009700
      CALL ABNEND                                                       00009800
 91   CALL CFORM (' *** ERROR CLOSING FORTRAN UNIT NO:',DARRAY,2,35)    00009900
      CALL ICONV (U(NO),DARRAY,37,2)                                    00010000
      CALL CFORM ('*** FROM ROUTINE: TAPOP',DARRAY,40,23)               00010100
      CALL CPRINT (DARRAY)                                              00010200
      RETURN                                                            00010300
      END                                                               00010400
**** SOURCE FILE : TRASH000.V01   ***
*
*                                                                       00000100
*  * TRASH *    FORTRAN 77 SUBROUTINE   15-JUL-1986  E.MCLELLAN         00000200
*                MODIFIED                 3-FEB-1988  E.MCLELLAN        00000250
*                                                                       00000300
*   PURPOSE:  TO RETURN THE BCD EQUIVALENT OF '$',NULL,'TRASH',NULL     00000400
*             IN THE FIRST 8 BYTES OF THE ARGUMENT                      00000500
*             (NOTE: THIS SHOULD GIVE A NONE VALID D.P. NUMBER          00000600
*                    ON MOST SYSTEMS)                                   00000650
*                                                                       00000700
*   CALLING SEQUENCE:                                                   00000800
*                    CALL TRASH(IWORD)                                  00000900
*                                                                       00001000
*   ARGUMENTS:                                                          00001100
*         IWORD  INTEGER  ARRAY INTO WHICH '$ TRASH ' IS TO BE LOADED   00001120
*                                                                       00001200
*   GLOBAL VARIABLES:                                                   00001300
*                                                                       00001400
*----------------------------------------------------                   00001500
*   VARIABLE    BLOCK    TYPE        DESCRIPTION                        00001600
*----------------------------------------------------                   00001700
*   NBCHAR      SDP      INTEGER     NO OF BITS PER BYTE                00001750
*                                                                       00002000
*   LOCAL VARIABLES:                                                    00002100
*                   TYPE        DESCRIPTION                             00002110
*         ITRASH    INTEGER     INTEGER ARRAY TO BUILD UP BCDF          00002120
*         FIRST     LOGICAL     FLAG INDICATING FIRST CALL              00002150
*                                                                       00002200
*   SUBSIDIARIES:  NONE                                                 00002300
*                                                                       00002400
      SUBROUTINE TRASH(IWORD)                                           00002500
C                                                                       00002600
      INCLUDE 'SDP.INC'                                                 00002700
C                                                                       00002800
      INTEGER ITRASH(2),IWORD(2)                                        00002900
      LOGICAL FIRST                                                     00003120
      SAVE ITRASH,FIRST                                                 00003140
      DATA FIRST/.TRUE./                                                00003160
      IF (FIRST) THEN                                                   00003220
        I3=3*NBCHAR                                                     00003222
        I2=2*NBCHAR                                                     00003224
        ITRASH(1) = ISHFT(ICHAR('$'),I3)                                00003300
     +            + ISHFT(ICHAR('T'),NBCHAR)                            00003400
     +            + ICHAR('R')                                          00003500
        ITRASH(2) = ISHFT(ICHAR('A'),I3)                                00003600
     +            + ISHFT(ICHAR('S'),I2)                                00003620
     +            + ISHFT(ICHAR('H'),NBCHAR)                            00003640
        FIRST=.FALSE.                                                   00003700
      ENDIF                                                             00003800
C                                                                       00003900
      IWORD(1)=ITRASH(1)                                                00004000
      IWORD(2)=ITRASH(2)                                                00004040
      RETURN                                                            00004100
      END                                                               00004200
**** SOURCE FILE : ABUFTP00.V01   ***
*
      SUBROUTINE ABUFTP(NO,N)                                           00000100
*                                                                       00000200
*  *  ABUFTP  *  VAX-11 VERSION   08.07.82  E.MCLELLAN                  00000300
*                                                                       00000400
*  PURPOSE     TO PROVIDE FILE HANDLING  CAPABILITY                     00000500
*              COMPATABLE  WITH APT 111 POST PROCESSOR USAGE            00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL ABUFTP(NO,N)                                        00000900
*  ARGUMENTS                                                            00001000
*              NO    FILE NUMBER                                        00001100
*                    FOR NC 360 HELD IN SECOND HALF                     00001200
*                    OF REAL*8 WORD                                     00001300
*              N=1   OPEN FILE IN WRITE MODE                            00001400
*               =2   OPEN FILE IN READ MODE                             00001500
*               =3   REWIND FILE                                        00001600
*               =9   CLOSE FILE                                         00001700
*                                                                       00001800
*  ALTERNATIVE ENTRY                                                    00001900
*              CALL BUFFTP(NO,N)                                        00002000
*                                                                       00002100
      INCLUDE 'FILTAB.INC'                                              00002200
*                                                                       00002300
      INTEGER NO(2)                                                     00002400
      LOGICAL OD                                                        00002500
C                                                                       00002600
      INCLUDE 'DARRAY.INC'                                              00002700
C                                                                       00002800
*                                                                       00002900
      ENTRY BUFFTP(NO,N)                                                00003000
C                                                                       00003100
C                                                                       00003400
      IFIL=NO(1)                                                        00003500
      IF (NO(1).EQ.0) IFIL=NO(2)                                        00003600
C                                                                       00003700
      IF ((IFIL.LT.1).OR.(IFIL.GT.50)) THEN                             00003800
         CALL CFORM(' *** FILE NUMBER OUTSIDE RANGE 1-50',DARRAY,2,35)  00003900
         CALL CFORM(' REQUESTED IN CALL TO ABUFTP OR BUFFTP ***',DARRAY 00004000
     1              ,37,42)                                             00004100
         CALL CPRINT(DARRAY)                                            00004200
         CALL ABNEND                                                    00004300
      ELSE                                                              00004400
         ID=U(IFIL)                                                     00004500
C                                                                       00004600
        IF (N.EQ.1) THEN                                                00004700
C....    OPEN FILE IN WRITE MODE                                        00004800
C                                                                       00004900
       INQUIRE (UNIT=ID,OPENED=OD)                                      00005000
       IF (OD) THEN                                                     00005100
       RETURN                                                           00005200
       ELSE                                                             00005300
         CALL FILOPN(IFIL)                                              00005400
       END IF                                                           00005500
C                                                                       00005600
        ELSE IF (N.EQ.2) THEN                                           00005700
C                                                                       00005800
C.....   OPEN FILE IN READ MODE                                         00005900
C                                                                       00006000
        INQUIRE (UNIT=ID,OPENED=OD)                                     00006100
        IF (OD) THEN                                                    00006200
        RETURN                                                          00006300
        ELSE                                                            00006400
         CALL FILOPN(IFIL)                                              00006500
        END IF                                                          00006600
C                                                                       00006700
        ELSE IF (N.EQ.3) THEN                                           00006800
C                                                                       00006900
C.....   REWIND FILE                                                    00007000
C                                                                       00007100
         CALL TAPOP(IFIL,-4)                                            00007200
C                                                                       00007300
        ELSE IF (N.EQ.9) THEN                                           00007400
C                                                                       00007500
C.....   CLOSE FILE                                                     00007600
C                                                                       00007700
         CALL TAPOP(IFIL,-3)                                            00007800
C                                                                       00007900
        ELSE                                                            00008000
C                                                                       00008100
C.....   INVALID ARGUMENT                                               00008200
C                                                                       00008300
        CALL CFORM(' *** INVALID ARGUMENT IN CALL TO ABUFTP(BUFFTP) ***'00008400
     1              ,DARRAY,2,51)                                       00008500
        CALL CPRINT(DARRAY)                                             00008600
        CALL ABNEND                                                     00008700
C                                                                       00008800
        END IF                                                          00008900
      END IF                                                            00009000
      RETURN                                                            00009100
      END                                                               00009200
**** SOURCE FILE : ASERCH00.V01   ***
*
      SUBROUTINE ASERCH(NO,IRECNO,IRET)                                 00000100
*                                                                       00000200
*  * ASERCH *  VAX-11 FORTRAN 77 VERSION   13.10.82  E.MCLELLAN         00000300
*                                                                       00000400
*  PURPOSE     TO POSITION A FILE TO START OF REQUIRED RECORD           00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL ASERCH(NO,IRECNO,IRET)                              00000800
*  ARGUMENTS                                                            00000900
*              NO         FILE NUMBER                                   00001000
*              IRECNO     REQUIRED RECORD                               00001100
*              IRET.LT.0  NORMAL RETURN                                 00001200
*                  .EQ.0  ZERO OR NEGATIVE RECORD NUMBER                00001300
*                  .EQ.2  ABNORMAL CONDITION RETURNED BY ATAPRD         00001400
*                  .EQ.3  ERROR BACKSPACING FILE                        00001500
*                  .EQ.4  ERROR REWINDING FILE                          00001600
*                                                                       00001700
*  ALTERNATE ENTRY    ****    COMMENTED OUTT   ****                     00001800
*              CALL SEARCH(NO,IRECNO,IRET)                              00001900
*                                                                       00002000
      INTEGER NO(2)                                                     00002100
C                                                                       00002200
      DOUBLE PRECISION REC(256)                                         00002300
      DIMENSION IREC(3)                                                 00002400
C                                                                       00002500
C      ENTRY SEARCH(NO,IRECNO,IRET)                                     00002600
C                                                                       00002700
C.....CHECK VALUE IN IRECNO - MUST BE GT ZERO                           00002800
      IF (IRECNO.LE.0) THEN                                             00002900
         IRET=0                                                         00003000
         RETURN                                                         00003100
      ELSE                                                              00003200
         IREW=0                                                         00003300
C                                                                       00003400
C.....READ NEXT RECORD FROM FILE                                        00003500
   10 CALL ATAPRD(NO,IRET,NWDS,2,IREC,3,REC,0)                          00003600
           IF (IRET.LT.0) THEN                                          00003700
C.....IS THIS THE RECORD BEFORE THE REQUIRED RECORD                     00003800
              IF (IREC(1).EQ.IRECNO-1) THEN                             00003900
C.....YES SO NEXT RECORD WILL BE THE REQUIRED RECORD                    00004000
                 RETURN                                                 00004100
C.....NO IS NEXT RECORD LT REQUIRED RECORD - READ NEXT RECORD           00004200
              ELSE IF (IREC(1)+1.LT.IRECNO) THEN                        00004300
C.....YES                                                               00004400
                 GO TO 10                                               00004500
C.....N0  IS REQUIRED RECORD NEARER START OF FILE OR CURRENT RECORD     00004600
              ELSE IF (IRECNO.GT.IREC(1)/2) THEN                        00004700
C.....NEARER CURRENT RECORD - BACKSPACE N TIMES BY CALLING ATAPOP       00004800
                 N=IREC(1)-IRECNO+1                                     00004900
                 DO 20 I=1,N                                            00005000
                 CALL ATAPOP(NO,3,IRET)                                 00005100
                      IF (IRET.GT.0) THEN                               00005200
                         IRET=3                                         00005300
                         RETURN                                         00005400
                      END IF                                            00005500
   20            CONTINUE                                               00005600
                 RETURN                                                 00005700
C.....NEARER START - REWIND AND SEARCH                                  00005800
              ELSE                                                      00005900
                 CALL ATAPOP(NO,1,IRET)                                 00006000
                      IF (IRET.GT.0) THEN                               00006100
                         IRET=4                                         00006200
                         RETURN                                         00006300
                      ELSE                                              00006400
                         GO TO 10                                       00006500
                      END IF                                            00006600
              END IF                                                    00006700
C.....NON NORMAL RETURN FROM ATAPRD                                     00006800
         ELSE IF (IRET.EQ.0) THEN                                       00006900
C.....EOF ENCOUNTERED                                                   00007000
             IF (IREW.EQ.1) THEN                                        00007100
                IRET=0                                                  00007200
                RETURN                                                  00007300
             ELSE                                                       00007400
C.....REWIND FILE                                                       00007500
            CALL ATAPOP(NO,1,IRET)                                      00007600
                 IF (IRET.GT.0) THEN                                    00007700
                    IRET=4                                              00007800
                    RETURN                                              00007900
                 ELSE                                                   00008000
                    IREW=1                                              00008100
                    GO TO 10                                            00008200
                 END IF                                                 00008300
             END IF                                                     00008400
         ELSE                                                           00008500
C.....ABNORMAL CONDITION RETURNED BY ATAPRD                             00008600
            IRET=2                                                      00008700
            RETURN                                                      00008800
         END IF                                                         00008900
      END IF                                                            00009000
      RETURN                                                            00009100
      END                                                               00009200
**** SOURCE FILE : ATAPOP00.ORG   ***
*
      SUBROUTINE ATAPOP(NO,N,IRET)                                      00000010
*                                                                       00000020
*  *  ATAPOP  *  VAX-11 VERSION   13.07.82  E.MCLELLAN                  00000030
*                                                                       00000040
*  PURPOSE     TO PROVIDE FILE POSITIONING CAPABILITY                   00000050
*              COMPATABLE WITH APT 111 POST PROCESSOR USAGE             00000060
*                                                                       00000070
*  CALLING SEQUENCE                                                     00000080
*              CALL ATAPOP(NO,N,IRET)                                   00000090
*  ARGUMENTS                                                            00000100
*              NO         FILE NUMBER                                   00000110
*                         FOR NC 360 HELD IN SECOND HALF                00000120
*                         OF DOUBLE PRECISION WORD                      00000130
*              N=1        REWIND FILE                                   00000140
*               =2        WRITE END OF FILE (CLOSE FILE)                00000150
*               =3        BACKSPACE RECORD                              00000160
*              IRET.GT.0  ABNORMAL ERROR CONDITION                      00000170
*                  .LT.0  OPERATION SUCCESSFUL                          00000180
*                                                                       00000190
*  ALTERNATE ENTRY                                                      00000200
*              CALL TAPEOP(NO,N,IRET)                                   00000210
*                                                                       00000220
C                                                                       00000230
      INCLUDE 'FILTAB.INC'                                              00000240
C                                                                       00000250
      CHARACTER*12 IACC                                                 00000260
C                                                                       00000270
      INTEGER NO(2)                                                     00000280
C                                                                       00000290
      INCLUDE 'DARRAY.INC'                                              00000300
C                                                                       00000310
      ENTRY TAPEOP(NO,N,IRET)                                           00000320
C                                                                       00000330
      IRET=-1                                                           00000340
C                                                                       00000350
      IFIL=NO(1)                                                        00000360
      IF (NO(1).EQ.0)  IFIL=NO(2)                                       00000370
      IF ((IFIL.LT.1).OR.(IFIL.GT.50)) THEN                             00000380
        CALL CFORM('0 *** FILE NUMBER OUTSIDE RANGE 1-50',DARRAY,1,36)  00000390
        CALL CFORM(' REQUESTED IN CALL TO ATAPOP OR TAPEOP ***',DARRAY, 00000400
     1                37,42)                                            00000410
        CALL CPRINT(DARRAY)                                             00000420
        IRET=1                                                          00000430
      ELSE                                                              00000440
C                                                                       00000450
       IF (N.EQ.1) THEN                                                 00000460
C.....REWIND                                                            00000470
          CALL TAPOP(IFIL,-2)                                           00000480
       ELSE IF (N.EQ.2) THEN                                            00000490
C.....CLOSE FILE                                                        00000500
          CALL TAPOP(IFIL,-3)                                           00000510
       ELSE IF (N.EQ.3) THEN                                            00000520
C.....BACKSPACE ONE RECORD                                              00000530
          ID=U(IFIL)                                                    00000540
          INQUIRE(UNIT=ID,ACCESS=IACC)                                  00000550
             IF (IACC.EQ.'DIRECT') THEN                                 00000560
C.....DECREASE NO OF NEXT RECORD TO BE READ BY 1                        00000570
                NXTREC(IFIL)=NXTREC(IFIL)-1                             00000580
             ELSE                                                       00000590
                BACKSPACE(UNIT=ID)                                      00000600
             END IF                                                     00000610
C                                                                       00000620
        ELSE                                                            00000630
        CALL CFORM(' *** INVALID ARGUMENT IN CALL TO ATAPOP(TAPEOP) ***'00000640
     1              ,2,51)                                              00000650
        CALL CPRINT(DARRAY)                                             00000660
        END IF                                                          00000670
        IRET=1                                                          00000680
      END IF                                                            00000690
      RETURN                                                            00000700
      END                                                               00000710
**** SOURCE FILE : ATAPXC00.ORG   ***
*
      SUBROUTINE ATAPXC(FILE1,FILE2)                                    00000100
*                                                                       00000200
*  * ATAPXC *  VAX11 FORTRAN 77 VERSION  27.8.82 E.MCLELLAN             00000300
*                                                                       00000400
*  PURPOSE     TO INTERCHANGE TWO FILES                                 00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL ATAPXC(FILE1,FILE2)                                 00000800
*                                                                       00000900
*  ARGUMENTS                                                            00001000
*              FILE1  FILE NUMBER OF FIRST FILE                         00001100
*              FILE2  FILE NUMBER OF SECOND FILE                        00001200
*  ALTERNATE ENTRY                                                      00001300
*              CALL TAPECH(FILE1,FILE2)                                 00001400
*                                                                       00001500
      ENTRY TAPECH(FILE1,FILE2)                                         00001600
      INTEGER FILE1,FILE2                                               00001700
C                                                                       00001800
      I=FILE1                                                           00001900
      FILE1=FILE2                                                       00002000
      FILE2=I                                                           00002100
      RETURN                                                            00002200
      END                                                               00002300
**** SOURCE FILE : CARDPN00.V01   ***
*
      SUBROUTINE CARDPN(A,N,M,I,D)                                      00000100
*                                                                       00000200
*  * CARDPN *   VAX-11 FORTRAN 77 VERSION   15.10.82  E.MCLELLAN        00000300
*                                                                       00000400
*  PURPOSE      WRITE AN ASCII FILE , PNCHFL                            00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*               CALL CARDPN(A,N,M,I,D)                                  00000800
*  ARGUMENTS                                                            00000900
*              A   LOCATION OF FIRST WORD TO BE PUNCHED                 00001000
*              N   NO OF 4 BYTE WORDS TO BE PUNCHED,NORMALLY 18,        00001100
*                  IF GREATER NO, ID AND SEQUENCE NO WILL BE PUNCHED    00001200
*              M   MODE IGNORED BY THIS VERSION OF ROUTINE              00001300
*             I   4 BYTE SEQUENCE NO TO BE PUNCHED IN COL 77-80         00001400
*                 TREATED AS MODULO 10,000                              00001500
*             D   LOCATION OF A 4 BYTE IDENTIFICATION WORD TO BE        00001600
*                 PUNCHED IN COLUMNS 73-76 (ALPHA ONLY)                 00001700
*                                                                       00001800
      REAL A(18)                                                        00001900
      LOGICAL OD                                                        00002000
C                                                                       00002100
      INCLUDE 'DARRAY.INC'                                              00002200
C                                                                       00002300
C                                                                       00002400
      INQUIRE(FILE='PNCHFL.',OPENED=OD)                                 00002500
          IF (.NOT.OD) THEN                                             00002600
             OPEN(UNIT=7,FILE='PNCHFL',ERR=90,STATUS='NEW',             00002700
     1            ACCESS='SEQUENTIAL',FORM='FORMATTED')                 00002800
          END IF                                                        00002900
C                                                                       00003000
      IF (N.LE.18) THEN                                                 00003100
         WRITE(7,'(18A4)') (A(I),I=1,N)                                 00003200
      ELSE                                                              00003300
         ISEQ=MOD(I,10000)                                              00003400
         WRITE(7,'(19A4,I4)') (A(I),I=1,18),D,ISEQ                      00003500
      END IF                                                            00003600
      RETURN                                                            00003700
C                                                                       00003800
   90 CALL CFORM('**** ERROR OPENING PNCHFL.DAT ****',DARRAY,2,34)      00003900
      CALL CPRINT(DARRAY)                                               00004000
      CALL ABNEND                                                       00004100
      RETURN                                                            00004200
      END                                                               00004300
                                                                        00004400
**** SOURCE FILE : CONBCD00.ORG   ***
*
      SUBROUTINE CONBCD(A,B,II,JJ,K)                                    00000100
*                                                                       00000200
*  * CONBCD *   VAX11 FORTRAN 77 VERSION  09.09.82  E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE      TO CONVERT A FLOATING-POINT NUMBER TO A FIXED           00000500
*               FORMAT FOR SUBSEQUENT TAPE PUNCHING                     00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*               CALL CONBCD(A,B,I,J,K)                                  00000900
*  ARGUMENTS                                                            00001000
*               A  FLOATING-POINT NUMBER TO BE CONVERTED TO BCD         00001100
*               B  LOCATION WHERE BCD NUMBERS WILL BE STORED            00001200
*               I  NUMBER OF BCD DIGITS TO BE INCLUDED IN B.            00001300
*                  IF I IS NEGATIVE,THE SIGN OF A WILL BE INCLUDED      00001400
*                  AND THE FIELD LENGTH WILL BE I+1 BCD CHARACTERS      00001500
*               J  NUMBER OF FRACTIONAL BCD DIGITS TO BE INCLUDED IN I  00001600
*                  IF J NEGATIVE, DECIMAL POINT WILL BE INCLUDED        00001700
*                  AND FIELD LENGTH INCREASED TO I+1 BCD CHARACTERS     00001800
*                  IF BOTH I AND J ARE NEGATIVE,FIELD LENGTH WILL       00001900
*                  BE I+2 CHARACTERS.                                   00002000
*                  IF ABS(J) GT 100, TRAILING ZEROS WILL BE DELETED.    00002100
*                  J WILL THEN EQUAL ABS(J)-100                         00002200
*                  IF ABS(J) GT 200, LEADING ZEROS WILL BE DELETED.     00002300
*                  J WILL THEN EQUAL ABS(J)-200                         00002400
*                  IF J LT -300, LEADING AND TRAILING ZEROS WILL        00002500
*                  BE DELETED. J WILL EQUAL ABS(J)-300                  00002600
*               K  =1  A ASSUMED SINGLE PRECISION                       00002700
*                  =2  A ASSUMED DOUBLE PRECISION                       00002800
*                  =0  A ASSUMED DOUBLE PRECISION                       00002900
*                      (EQUIVALENTTO OMISSION OF K)                     00003000
*         NOTE:    IF K=0 AND I LE 6,THE OUTPUT IS RIGHT JUSTIFIED IN   00003100
*                  THE FIRST 6 BYTES OF B FOLLOWED BY 2 BLANKS          00003200
*                  IF K=0 AND I GT 6,THE OUTPUT IS RIGHT JUSTIFIED IN   00003300
*                  FIRST 12 BYTES OF B FOLLOWED BY 4 BLANKS             00003400
*                  IF K=1 OR 2 THEN OUTPUT IS RIGHT JUSTIFIED IN B      00003500
*                  IF B IS DIMENSIONED CORRECTLY                        00003600
*                                                                       00003700
*         LIMITS:     K    IMAX     JMAX    BMIN                        00003800
*                         (CHARS) (DIGITS) (BYTES)                      00003900
*                     0     12        8       8                         00004000
*                     1      8        6       4                         00004100
*                     2     16       14       8                         00004200
*                                                                       00004300
*                     IMAX INCLUDES SIGN AND DECIMAL POINT INCLUSION    00004400
*                                                                       00004500
      LOGICAL SFL,DFL,TZFL,LZFL                                         00004600
C.....SFL  TRUE IF SIGN TO BE INCLUDED                                  00004700
C     DFL  TRUE IF DECIMAL POINT TO BE INCLUDED                         00004800
C     TZFL TRUE IF TRAILING ZEROS TO BE DELETED                         00004900
C     LZFL TRUE IF LEADING ZEROS TO BE DELETED                          00005000
C                                                                       00005100
      DOUBLE PRECISION A,ATEM,F,TENTOJ,DPF                              00005200
      REAL B(4)                                                         00005300
      EQUIVALENCE (AS,ATEM)                                             00005400
      CHARACTER*32 INTFIL                                               00005500
      CHARACTER*16 OUTFIL                                               00005600
C                                                                       00005700
      INCLUDE 'DARRAY.INC'                                              00005800
C                                                                       00005900
C                                                                       00006000
      ATEM=A                                                            00006100
      I=II                                                              00006200
      J=JJ                                                              00006300
C                                                                       00006400
C..... INITIALIZE FLAGS                                                 00006500
C                                                                       00006600
      SFL=.FALSE.                                                       00006700
      DFL=.FALSE.                                                       00006800
      TZFL=.FALSE.                                                      00006900
      LZFL=.FALSE.                                                      00007000
C                                                                       00007100
C.....CHECK FIFTH PARAMETER AND SET LIMITS                              00007200
C                                                                       00007300
      IF (K.EQ.0) THEN                                                  00007400
         IM=12                                                          00007500
         JM=8                                                           00007600
      ELSE IF (K.EQ.1) THEN                                             00007700
         IM=8                                                           00007800
         JM=6                                                           00007900
      ELSE IF (K.EQ.2) THEN                                             00008000
         IM=16                                                          00008100
         JM=14                                                          00008200
      END IF                                                            00008300
C                                                                       00008400
C.....IF I NEGATIVE INCLUDE SIGN                                        00008500
C                                                                       00008600
      IF (I.LT.0) THEN                                                  00008700
         SFL=.TRUE.                                                     00008800
         I=IABS(I)+1                                                    00008900
      ELSE IF (I.EQ.0) THEN                                             00009000
         CALL CFORM('**** INVALID CONBCD PARAMETER (I=0) ****',DARRAY,  00009100
     1               2,40)                                              00009200
         CALL CPRINT(DARRAY)                                            00009300
         CALL ABNEND                                                    00009400
      END IF                                                            00009500
C                                                                       00009600
C.....IF J NEGATIVE INCLUDE DECIMAL POINT                               00009700
C                                                                       00009800
      IF (J.LT.0) THEN                                                  00009900
         DFL=.TRUE.                                                     00010000
         I=I+1                                                          00010100
      END IF                                                            00010200
C                                                                       00010300
C.....IF J.GT.300 ,NOT VALID                                            00010400
C                                                                       00010500
      IF (J.GT.300) THEN                                                00010600
         CALL CFORM('**** INVALID CONBCD PARAMETER (J.GT.300) ****',    00010700
     1               DARRAY,2,45)                                       00010800
         CALL CPRINT(DARRAY)                                            00010900
         CALL ABNEND                                                    00011000
C                                                                       00011100
C.....IF J.LT.-300, DELETE LEADING AND TRAILING ZEROS                   00011200
C                  (ONLY VALID IF DECIMAL POINT INCLUDED)               00011300
      ELSE IF (J.LT.-300) THEN                                          00011400
         TZFL=.TRUE.                                                    00011500
         LZFL=.TRUE.                                                    00011600
         J=IABS(J)-300                                                  00011700
C                                                                       00011800
C.....IF ABS(J).GT.200 , DELETE LEADING ZEROS                           00011900
C                                                                       00012000
      ELSE IF (IABS(J).GT.200) THEN                                     00012100
         LZFL=.TRUE.                                                    00012200
         J=IABS(J)-200                                                  00012300
C                                                                       00012400
C.....IF ABS(J).GT.100 , DELETE TRAILING ZEROS                          00012500
C                                                                       00012600
      ELSE IF (IABS(J).GT.100) THEN                                     00012700
         TZFL=.TRUE.                                                    00012800
         J=IABS(J)-100                                                  00012900
      ELSE                                                              00013000
         J=IABS(J)                                                      00013100
      END IF                                                            00013200
C                                                                       00013300
C.....CHECK LIMITS                                                      00013400
C                                                                       00013500
      IF (I.GT.IM) THEN                                                 00013600
         CALL CFORM('**** I.GT.IMAX FOR CURRENT K IN CONBCD CALL****',  00013700
     1              DARRAY,2,48)                                        00013800
         CALL CPRINT(DARRAY)                                            00013900
         I=IM                                                           00014000
      END IF                                                            00014100
C                                                                       00014200
      IF (J.GT.JM) THEN                                                 00014300
         CALL CFORM('**** J.GT.JMAX FOR CURRENT K IN CONBCD CALL****',  00014400
     1            DARRAY,2,48)                                          00014500
         CALL CPRINT(DARRAY)                                            00014600
         J=JM                                                           00014700
      END IF                                                            00014800
C                                                                       00014900
C.....STORE VALUE IN DOUBLE PRECISION WORD F                            00015000
C                                                                       00015100
      IF (K.EQ.1) THEN                                                  00015200
          F=AS                                                          00015300
      ELSE                                                              00015400
          F=A                                                           00015500
      END IF                                                            00015600
C                                                                       00015700
C.....STORE SIGN OF F                                                   00015800
C                                                                       00015900
      IS=INT(DSIGN(1.0D0,F))                                            00016000
C                                                                       00016100
C.....ROUND ABS VALUE OF F TO J DECIMAL PLACES                          00016200
C                                                                       00016300
      TENTOJ=10.0D0**J                                                  00016400
      F=ABS(F)                                                          00016500
      INF=INT(F)                                                        00016600
      DPF=F-DFLOAT(INF)                                                 00016700
      INP=INT(DPF*TENTOJ+0.5D0)                                         00016800
      F=DFLOAT(INF)+DFLOAT(INP)/TENTOJ                                  00016900
C                                                                       00017000
C.....WRITE F TO INTERNAL FILE                                          00017100
C                                                                       00017200
      WRITE (INTFIL,'(F32.14)') F                                       00017300
C                                                                       00017400
C.....INSERT TRAILING BLANKS                                            00017500
C                                                                       00017600
      LSD=J+18                                                          00017700
      INTFIL(LSD+1:32)=' '                                              00017800
C                                                                       00017900
C.....ARE TRAILING ZEROS TO BE DELETED                                  00018000
C                                                                       00018100
      IF (TZFL) THEN                                                    00018200
          L=LSD                                                         00018300
   10     IF (INTFIL(L:L).EQ.'0') THEN                                  00018400
             INTFIL(L:L)=' '                                            00018500
             L=L-1                                                      00018600
             GO TO 10                                                   00018700
          END IF                                                        00018800
      END IF                                                            00018900
C                                                                       00019000
C.....WHERE IS FIRST NON BLANK CHARACTER IN INTFIL                      00019100
C                                                                       00019200
      L=1                                                               00019300
  20  IF (INTFIL(L:L).EQ.' ') THEN                                      00019400
        IF (.NOT.LZFL) THEN                                             00019500
           INTFIL(L:L)='0'                                              00019600
        END IF                                                          00019700
        L=L+1                                                           00019800
        GO TO 20                                                        00019900
      END IF                                                            00020000
      L1=L                                                              00020100
C                                                                       00020200
C.....IS DECIMAL POINT REQUIRED                                         00020300
C                                                                       00020400
      IF (.NOT.DFL) THEN                                                00020500
C.....NO DELETE DECIMAL POINT                                           00020600
      L=17                                                              00020700
  30  INTFIL(L+1:L+1)=INTFIL(L:L)                                       00020800
      IF (L.EQ.L1) THEN                                                 00020900
         IF (LZFL) THEN                                                 00021000
            INTFIL(L1:L1)=' '                                           00021100
         ELSE                                                           00021200
            INTFIL(L1:L1)='0'                                           00021300
         END IF                                                         00021400
      ELSE                                                              00021500
         L=L-1                                                          00021600
         GO TO 30                                                       00021700
      END IF                                                            00021800
      END IF                                                            00021900
C                                                                       00022000
C.....IS SIGN REQUIRED                                                  00022100
C                                                                       00022200
      MSD=LSD-I+1                                                       00022300
      IF (SFL) THEN                                                     00022400
         IF (IS.GE.0) THEN                                              00022500
            INTFIL(MSD:MSD)='+'                                         00022600
         ELSE                                                           00022700
            INTFIL(MSD:MSD)='-'                                         00022800
         END IF                                                         00022900
      END IF                                                            00023000
C                                                                       00023100
C.....SET UP OUTFIL ACCORDING TO K AND I                                00023200
C                                                                       00023300
      OUTFIL(1:16)=' '                                                  00023400
      IF (K.EQ.0) THEN                                                  00023500
         IF (I.GT.6) THEN                                               00023600
            OUTFIL(13-I:12)=INTFIL(MSD:LSD)                             00023700
            READ (OUTFIL,'(4A4)') (B(L),L=1,4)                          00023800
         ELSE                                                           00023900
            OUTFIL(7-I:6)=INTFIL(MSD:LSD)                               00024000
            READ (OUTFIL,'(2A4)') B(1),B(2)                             00024100
         END IF                                                         00024200
C                                                                       00024300
      ELSE IF (I.GT.8) THEN                                             00024400
            OUTFIL(17-I:16)=INTFIL(MSD:LSD)                             00024500
            READ (OUTFIL,'(4A4)') (B(L),L=1,4)                          00024600
      ELSE IF (I.GT.4) THEN                                             00024700
            OUTFIL(9-I:8)=INTFIL(MSD:LSD)                               00024800
            READ (OUTFIL,'(2A4)') B(1),B(2)                             00024900
      ELSE                                                              00025000
            OUTFIL(5-I:4)=INTFIL(MSD:LSD)                               00025100
            READ (OUTFIL,'(A4)') B(1)                                   00025200
      END IF                                                            00025300
C                                                                       00025400
      RETURN                                                            00025500
      END                                                               00025600
**** SOURCE FILE : DISPAT00.ORG   ***
*
      SUBROUTINE DISPAT                                                 00000100
*                                                                       00000200
*  * DISPAT *  VAX 11 FORTRAN 77 VERSION  20.09.82  E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     TO TERMINATE A POSTPROCESSOR                             00000500
*                                                                       00000600
      STOP ' CURRENT POSTPROCESSOR COMPLETE'                            00000700
      END                                                               00000800
**** SOURCE FILE : NNTAIN00.ORG   ***
*
      INTEGER FUNCTION NNTAIN(A,B,C)                                    00000100
*                                                                       00000200
*  * NNTAIN *  VAX11 FORTRAN 77 VERSION  27.8.82  E.MCLELLAN            00000300
*                                                                       00000400
*  PURPOSE     TO TEST IF A FLOATING POINT NUMBER LIES                  00000500
*              WITHIN A CLOSED INTERVAL                                 00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*              IF (NNTAIN(A,B,C)) 1,2,3                                 00000900
*  ARGUMENTS                                                            00001000
*              A IS ONE LIMIT OF THE CLOSED INTERVAL                    00001100
*              B IS FLOATING POINT NUMBER TO BE TESTED                  00001200
*                TO SEE IF IT FALLS IN THE CLOSED INTERVAL              00001300
*              C IS THE OTHER LIMIT OF THE CLOSED INTERVAL              00001400
*                                                                       00001500
*              INTEGER RETURNED = 1  IF B LIES IN CLOSED INTERVAL       00001600
*                               =-1  IF B DOES NOT LIE IN CLOSED        00001700
*                                    INTERVAL                           00001800
*                               = 0  IF ERROR CONDITION APPLIES         00001900
*                                    I.E. A=C                           00002000
*                                                                       00002100
      DOUBLE PRECISION A,B,C,LOW,HIGH                                   00002200
C                                                                       00002300
      IF (A.EQ.C) THEN                                                  00002400
C.....ERROR CONDITION A=C                                               00002500
         NNTAIN=0                                                       00002600
         RETURN                                                         00002700
      ELSE                                                              00002800
C.....SET UP UPPER AND LOWER LIMITS TO CLOSED INTERVAL                  00002900
         IF (A.GT.C) THEN                                               00003000
            LOW=C                                                       00003100
            HIGH=A                                                      00003200
         ELSE                                                           00003300
            LOW=A                                                       00003400
            HIGH=C                                                      00003500
         END IF                                                         00003600
C.....TEST IF B WITHIN CLOSED INTERVAL                                  00003700
         IF ((B.GE.LOW).AND.(B.LE.HIGH)) THEN                           00003800
C.....YES                                                               00003900
            NNTAIN=1                                                    00004000
            RETURN                                                      00004100
         ELSE                                                           00004200
C.....NO                                                                00004300
            NNTAIN=-1                                                   00004400
            RETURN                                                      00004500
         END IF                                                         00004600
      END IF                                                            00004700
      END                                                               00004800
**** SOURCE FILE : PUNIDN00.V01   ***
*
      SUBROUTINE PUNIDN(A)                                              00000100
*                                                                       00000200
*  * PUNIDN *  VAX-11 FORTRAN 77 VERSION  21.10.82  E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     TO SET UP CARD IDENTIFICATION AND SEQUENCE NUMBERS       00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL PUNIDN(A)                                           00000800
*  ARGUMENTS                                                            00000900
*             A  ADDRESS FIELD OF 4 BCD CHARACTERS                      00001000
*  ALTERNATE ENTRIES                                                    00001100
*             CALL PUNSEQ(B)                                            00001200
*             B  START SEQUENCE NUMBER TO BE PUNCHED - REAL*4           00001300
*                                                                       00001400
*             CALL PUNNUM(C)                                            00001500
*             C  LATEST SEQUENCE NUMBER BEING PUNCHED - REAL*4          00001600
*                                                                       00001700
      COMMON/PUN/PNID,PNO                                               00001800
C                                                                       00002000
      PNID=A                                                            00002100
      RETURN                                                            00002200
C                                                                       00002300
      ENTRY PUNSEQ(B)                                                   00002400
      PNO=B                                                             00002500
      RETURN                                                            00002600
C                                                                       00002700
      ENTRY PUNNUM(C)                                                   00002800
      C=PNO                                                             00002900
      RETURN                                                            00003000
      END                                                               00003100
**** SOURCE FILE : PUNIDS00.ORG   ***
*
      REAL FUNCTION PUNIDS()                                            00000100
*                                                                       00000200
*  * PUNIDS *  VAX-11 FORTRAN 77 VERSION  21.10.82  E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     TO RETREIVE CARD IDENTIFICATION AND SEQUENCE NUMBER      00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              VALUE = PUNIDS()                                         00000800
*  ARGUMENT                                                             00000900
*              NONE    NOTE: PARENTHESIS MUST APPEAR                    00001000
*              VALUE   WILL CONTAIN 4 BCD CHARACTERS BEING IDENT        00001100
*  ALTERNATE ENTRY                                                      00001200
*              VALUE = PUNNOM()                                         00001300
*                                                                       00001400
*              VALUE   WILL CONTAIN REAL*4 VALUE BEING CURRENT          00001500
*                      SEQUENCE NUMBER                                  00001600
*                                                                       00001700
      COMMON/PUN/PNID,PNO                                               00001800
C                                                                       00001900
      PUNIDS=PNID                                                       00002000
      RETURN                                                            00002100
C                                                                       00002200
      ENTRY PUNNOM()                                                    00002300
      PUNNOM=PNO                                                        00002400
      RETURN                                                            00002500
      END                                                               00002600
**** SOURCE FILE : RDSATZ00.ORG   ***
*
      SUBROUTINE RDSATZ(ID,ARRAY,IANZ,NRSATZ,IRET)                      00000100
C                                                                       00000200
      DOUBLE PRECISION ARRAY(10)                                        00000300
      INTEGER ID,IANZ,NRSATZ,IRET                                       00000400
C                                                                       00000500
      READ(UNIT=ID,ERR=90,END=95) (ARRAY(I),I=1,10)                     00000600
      IRET=0                                                            00000700
      RETURN                                                            00000800
C                                                                       00000900
   90 IRET=3                                                            00001000
      RETURN                                                            00001100
C                                                                       00001200
   95 IRET=-1                                                           00001300
      RETURN                                                            00001400
      END                                                               00001500
**** SOURCE FILE : WTSATZ00.ORG   ***
*
      SUBROUTINE WTSATZ(ID,ARRAY,IANZ,IRET)                             00000100
C                                                                       00000200
      DOUBLE PRECISION ARRAY(IANZ)                                      00000300
      INTEGER ID,IANZ,IRET                                              00000400
C                                                                       00000500
      WRITE(UNIT=ID,ERR=90) (ARRAY(I),I=1,IANZ)                         00000600
      IRET=0                                                            00000700
      RETURN                                                            00000800
C                                                                       00000900
   90 IRET=3                                                            00001000
      RETURN                                                            00001100
      END                                                               00001200
**** SOURCE FILE : ATAPWT.ORG   ***
*
*                                                                       00000100
*  *  ATAPWT  *  FORTRAN 77 VERSION   1-MAR-1988 E.MCLELLAN             00000200
*                                                                       00000300
*  PURPOSE     TO WRITE AN APT 111 FORMATTED CLFILE                     00000400
*              RESTRICTED TO TWO INPUT ARRAYS MAXIMUM                   00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL ATAPWT(NO,IRET,N,A1,N1,A2,N2)                       00000800
*  ARGUMENTS                                                            00000900
*              NO         FILE NUMBER                                   00001000
*                         FOR NC 360 HELD IN SECOND HALF                00001100
*                         OF DOUBLE PRECISION WORD                      00001200
*              IRET.LT.0  NORMAL RETURN                                 00001300
*                  .GT.0  ABNORMAL CONDITION                            00001400
*              N          NO OF ARRAYS AI SPECIFIED IN CALLING SEQUENCE 00001500
*              AI         ARRAY CONTAINING DATA TO BE WRITTEN TO FILE   00001600
*              NI         NO OF ITEMS IN ARRAY AI TO BE WRITTEN TO FILE 00001700
*                                                                       00001800
      SUBROUTINE ATAPWT(NO,IRET,NUM,A1,N1,A2,N2)                        00001900
C                                                                       00002000
C.... ARGUMENTS                                                         00002100
      INTEGER NO,IRET,NUM,A1,N1,N2                                      00002200
      DOUBLE PRECISION A2                                               00002300
      DIMENSION NO(2),A1(N1),A2(N2)                                     00002400
C                                                                       00002500
C.... LOCAL VARIABLES                                                   00002600
      INTEGER NWRDS,IREC                                                00002700
      REAL REC                                                          00002800
      DOUBLE PRECISION DREC                                             00002900
      DIMENSION REC(512),DREC(254),IREC(512)                            00003000
      EQUIVALENCE (REC(1),IREC(1))                                      00003100
      EQUIVALENCE (REC(5),DREC(1))                                      00003200
C                                                                       00003300
C.... COMMON BLOCKS                                                     00003400
      INCLUDE 'DARRAY.INC'                                              00003500
C                                                                       00003600
      ID=NO(1)                                                          00003700
      IF (NO(1).EQ.0)  ID=NO(2)                                         00003800
C                                                                       00003900
      IF (NUM.EQ.1) THEN                                                00004000
        NWRDS=N1                                                        00004100
      ELSE IF (NUM.EQ.2) THEN                                           00004200
        NWRDS=3+2*N2                                                    00004300
      ELSE                                                              00004400
        CALL CFORM(' *** ERROR IN CALL TO ATAPWT, MAXIMUM OF TWO ARRAYS 00004500
     +ALLOWED ***',DARRAY,2,63)                                         00004600
        CALL CPRINT(DARRAY)                                             00004700
        IRET=1                                                          00004800
        RETURN                                                          00004900
      ENDIF                                                             00005000
C                                                                       00005100
      IREC(1)=NWRDS                                                     00005200
      DO 10 I=2,4                                                       00005300
       IREC(I)=0                                                        00005400
  10  CONTINUE                                                          00005500
C                                                                       00005600
      DO 20 I=1,N1                                                      00005700
       IREC(I+1)=A1(I)                                                  00005800
  20  CONTINUE                                                          00005900
C                                                                       00006000
      IF (NUM.EQ.2) THEN                                                00006100
        DO 30 I=1,N2                                                    00006200
          DREC(I)=A2(I)                                                 00006300
  30    CONTINUE                                                        00006400
      ENDIF                                                             00006500
C                                                                       00006600
      WRITE(ID,IOSTAT=IRET) (REC(I),I=1,NWRDS+1)                        00006700
C                                                                       00006800
      RETURN                                                            00006900
      END                                                               00007000
**** SOURCE FILE : ATAPRD.ORG   ***
*
*                                                                       00000100
*  *  ATAPRD  *  FORTRAN 77 VERSION  1-MAR-1988 E.MCLELLAN              00000200
*                                                                       00000300
*  PURPOSE      TO READ AN APT 111 FORMATTED CLFILE                          00000400
*               RESTRICTED TO TWO OUTPUT ARRAYS ONLY                    00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*               CALL ATAPRD(NO,IRET,NW,N,A1,N1,A2,N2)                                00000800
*  ARGUMENTS                                                            00000900
*               NO         FILE NUMBER                                               00001000
*                         FOR NC 360 HELD IN SECOND HALF                00001100
*                         OF DOUBLE PRECISION WORD                      00001200
*               IRET.LT.0  NORMAL RETURN                                             00001300
*                   .EQ.0  END OF FILE ENCOUNTERED                                   00001400
*                   .GT.0  ABNORMAL CONDITION                                        00001500
*               NW         NO OF DATA ITEMS RETURNED IN A2                           00001600
*               N          NO OF ARRAYS SPECIFIED IN CALLING SEQUENCE                00001700
*               AI         ARRAY INTO WHICH DATA IS TO BE READ                       00001800
*               NI         NO OF ITEMS IN ARRAY AI                                   00001900
*                          IF N2=0 ON ENTRY - ALL REMAINING ITEMS ARE                00002000
*                          TRANSFERRED TO ARRAY A2 AND NO RETURNED IN NW             00002100
*                          NOTE: FIRST 3 ITEMS TO BE TRANSFERRED                     00002200
*                                ARE ASSUMED INTEGER THE REMAINDER                   00002300
*                                REAL*8                                              00002400
      SUBROUTINE ATAPRD(NO,IRET,NW,N,A1,N1,A2,N2)                       00002500
C                                                                       00002600
C.... ARGUMENTS                                                         00002700
      INTEGER NO,IRET,NW,N,A1,N1,N2                                     00002800
      DOUBLE PRECISION A2                                               00002900
      DIMENSION NO(2),A1(N1),A2(254)                                    00003000
C                                                                       00003100
C.... LOCAL VARIABLES                                                   00003200
      INTEGER NWRDS,IREC                                                00003300
      REAL REC                                                          00003400
      DOUBLE PRECISION DREC                                             00003500
      DIMENSION IREC(512),REC(512),DREC(256)                            00003600
      EQUIVALENCE (REC(1),IREC(1))                                      00003700
      EQUIVALENCE (REC(1),DREC(1))                                      00003800
C                                                                       00003900
C.... COMMON BLOCKS                                                     00004000
      INCLUDE 'DARRAY.INC'                                              00004100
C                                                                       00004200
      ID=NO(1)                                                          00004300
      IF (NO(1).EQ.0)  ID=NO(2)                                         00004400
C                                                                       00004500
      READ (ID,ERR=99,END=90,IOSTAT=IRET) NWRDS,(REC(I+1),I=1,NWRDS)    00004600
C                                                                       00004700
      DO 10 I=1,N1                                                      00004800
        A1(I)=IREC(I+1)                                                 00004900
   10 CONTINUE                                                          00005000
C                                                                       00005100
      IF (N.EQ.1) THEN                                                  00005200
        IRET=-1                                                         00005300
      ELSE IF (N.EQ.2) THEN                                             00005400
C                                                                       00005500
       IF (N2.EQ.0) THEN                                                00005600
         NW=(NWRDS-N1)/2                                                00005700
         NN=NW                                                          00005800
       ELSE                                                             00005900
         NN=N2                                                          00006000
       ENDIF                                                            00006100
C                                                                       00006200
       I1=(N1+2)/2                                                      00006300
       DO 20 I=1,NN                                                     00006400
         A2(I)=DREC(I1+I)                                               00006500
   20  CONTINUE                                                         00006600
       IRET=-1                                                          00006700
      ELSE                                                              00006800
       CALL CFORM(' *** ERROR IN CALL TO ATAPRD - MAXIMUM OF TWO ARRAYS 00006900
     +ALLOWED ***',DARRAY,1,64)                                         00007000
       CALL CPRINT(DARRAY)                                              00007100
       IRET=1                                                           00007200
      ENDIF                                                             00007300
      RETURN                                                            00007400
C                                                                       00007500
   90 IRET=0                                                            00007600
      RETURN                                                            00007700
   99 IRET=1                                                            00007800
      RETURN                                                            00007900
      END                                                               00008000
**** MODULE = GOLOFT ****
**** SOURCE FILE : M0012333.V01   ***
*
      BLOCK DATA BDCCLR                                                 M0000100
C                                                                       M0000200
C COMMON FOR REGIONAL STARTUP AND RETRACT VALUES                        M0000300
C                                                                       M0000400
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000500
C                                                                       M0000600
      COMMON/CCLEAR/ DIRMOT(3,4)                                        M0000700
     *              ,GOFEED(4)                                          M0000800
     *              ,GLFEED                                             M0000900
     *              ,REGLDA(2)                                          M0001000
     *              ,IRETRO(4)                                          M0001100
     *              ,IDIRMO(4)                                          M0001200
     *              ,ICANIN(4)                                          M0001300
     *              ,IFEEDF                                             M0001400
C                                                                       M0001500
C              (1) : START                                              M0001600
C              (2) : AWAY                                               M0001700
C              (3) : BACK                                               M0001800
C              (4) : THRU                                               M0001900
C DIRMOT(3,4): ARRAY FOR MOTDIR, NORMAL OR VECTOR VALUES                M0002000
C              (1,I) : VALUES OF MOTDIR AND/OR NORMAL                   M0002100
C              (2,I)                                                    M0002200
C           OR (1,I) : VALUES OF VECTOR                                 M0002300
C              (2,I)                                                    M0002400
C              (3,I)                                                    M0002500
C                                                                       M0002600
      DATA DIRMOT /12*0.D0/                                             M0002700
C                                                                       M0002800
C GOFEED(4)  : ARRAY FOR MOTION FEEDRAT                                 M0002900
C              (1)   : FEDRAT OF START-MOTION (START AT FIRST POINT)    M0003000
C              (2)   : FEDRAT OF AWAY-MOTION                            M0003100
C              (3)   : FEDRAT OF BACK-MOTION                            M0003200
C              (4)   : FEDRAT OF THRU-MOTION (RETRACT AT LAST POINT)    M0003300
C                                                                       M0003400
      DATA GOFEED /4*0.D0/                                              M0003500
C                                                                       M0003600
C GLFEED     : VARIABLE FOR NORMAL FEDRAT BEFORE GOMILL OR GOLOFT       M0003700
      DATA GLFEED /0.D0/                                                M0003800
C                                                                       M0003900
C REGLDA     : ARRAY FOR CANONICAL FORM OF REGION DATA                  M0004000
      DATA REGLDA /2*0.D0/                                              M0004100
C                                                                       M0004200
C IRETRO(4)  : ARRAY FOR START, AWAY, BACK, THRU                        M0004300
C              (1) : START                                              M0004400
C              (2) : AWAY                                               M0004500
C              (3) : BACK                                               M0004600
C              (4) : THRU                                               M0004700
C                    0 : NOT USED                                       M0004800
C                    1 : CONDITION SET                                  M0004900
      DATA IRETRO /4*0/                                                 M0005000
C                                                                       M0005100
C IDIRMO(4)  : ARRAY FOR START ON AND END CONDITION                     M0005200
C                    0 : NOT SET                                        M0005300
C                    1 : MOTDIR AND/OR NORMAL                           M0005400
C                    2 : VECTOR                                         M0005500
      DATA IDIRMO /4*0/                                                 M0005600
C                                                                       M0005700
C ICANIN(4)  : ARRAY FOR THE CANONICAL FORM INDEX OF THE SURFACE        M0005800
C                    0 : NOT SET                                        M0005900
C                    IC: INDEX                                          M0006000
      DATA ICANIN /4*0/                                                 M0006100
C                                                                       M0006200
C IFEEDF     : FLAG (=1) FOR >GOP< TO OUTPUT GLOBAL FEEDRATE            M0006300
      DATA IFEEDF /0/                                                   M0006400
C                                                                       M0006500
      END                                                               M0006600
**** SOURCE FILE : BDGLFL.ORG   ***
*
      BLOCK DATA BDGLFL                                                 00000100
C                                                                       00000200
C.... INITIALIZE COMMON/GLFLGS/                                         00000300
C                                                                       00000400
      INCLUDE 'GLFLGS.INC'                                              00000500
C                                                                       00000600
      DATA REGFLG/0/                                                    00000700
      DATA RINGFG/.FALSE./                                              00000800
      DATA MOTDIR/0/                                                    00000900
      DATA IAUTOG/0/                                                    00001000
C                                                                       00001100
      END                                                               00001200
**** SOURCE FILE : M0012242.V01   ***
*
      BLOCK DATA BDPLGL                                                 M0000100
C                                                                       M0000200
C  INITIALISE COMMON FOR  >GOLOFT/PLOTFT<                               M0000300
C                                                                       M0000400
C                                                                       M0000900
C  VALUES FOR  >GOLOFT/PLOTFT<                                          M0001000
      INTEGER IPLGO(26)                                                 M0001100
C                                                                       M0001200
C  USED CUTTER SEGMENT                                                  M0001300
      INTEGER JCSEG                                                     M0001400
C                                                                       M0001500
C  NUMBER OF VALID CUTTER SEGMENTS                                      M0001600
      INTEGER NCSEG                                                     M0001700
C                                                                       M0001800
C  CUTTER SEGMENT IN TLLDAT ARRAYS                                      M0001900
      INTEGER ICSEG(10)                                                 M0002000
C                                                                       M0002100
C  NATURE OF SEGMENT                                                    M0002200
      INTEGER NLIOCI(10)                                                M0002300
C                                                                       M0002400
C  COMPONENTS OF SEGMENT AND UNIT NORMAL POINTING INTO THE CUTTER       M0002500
      DOUBLE PRECISION COSAL(10)                                        M0002600
      DOUBLE PRECISION SINAL(10)                                        M0002700
C                                                                       M0002800
C  DISTANCE PARALLEL TO THE CUTTER AXIS                                 M0002900
      DOUBLE PRECISION CUTY(10)                                         M0003000
C                                                                       M0003100
C  DISTANCE TO THE CUTTER AXIS                                          M0003200
      DOUBLE PRECISION CUTX(10)                                         M0003300
C                                                                       M0003400
C  ELEMENT LENGTH                                                       M0003500
      DOUBLE PRECISION CUTL(10)                                         M0003600
C                                                                       M0003700
C  VECTOR-COMPONENTS OF THE TOOL-AXIS-VECTOR                            M0003800
      DOUBLE PRECISION VTA(3)                                           M0003900
C                                                                       M0004000
      COMMON/PLGOL/IPLGO,JCSEG,NCSEG,ICSEG,NLIOCI,                      M0004010
     *             COSAL,SINAL,                                         M0004020
     *             CUTY,CUTX,CUTL,                                      M0004030
     *             VTA                                                  M0004040
C                                                                       M0004100
      DATA IPLGO  /26*0/                                                M0004200
      DATA JCSEG  /0/                                                   M0004300
      DATA NCSEG  /0/                                                   M0004400
      DATA ICSEG  /10*0/                                                M0004500
      DATA NLIOCI /10*0/                                                M0004600
      DATA SINAL  /10*0.D0/                                             M0004700
      DATA COSAL  /10*0.D0/                                             M0004800
      DATA CUTY   /10*0.D0/                                             M0004900
      DATA CUTX   /10*0.D0/                                             M0005000
      DATA CUTL   /10*0.D0/                                             M0005100
      DATA VTA    /3*0.D0/                                              M0005200
C                                                                       M0005300
      END                                                               M0005400
**** SOURCE FILE : M0012230.V01   ***
*
      SUBROUTINE CPLDST(SPV,PLANE,TH,IWAS,DIST,IRET)                    M0000100
C                                                                       M0000200
C   ROUTINE TO CALCULATE THE DISTANCE OF A CUTTER TO/ON/PAST POINT      M0000300
C    TO A PLANE                                                         M0000400
C                                                                       M0000500
C                                                                       M0000600
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000700
C                                                                       M0000800
C  CONTROL OF TEST-OUTPUT                                               M0000900
      COMMON/SSPRT/SSPRT,SSTEST                                         M0001000
      LOGICAL SSPRT,SSTEST                                              M0001100
C                                                                       M0001200
C  INPUT EVALUATION VALUES OF CUTTER POSITION                           M0001300
      DOUBLE PRECISION SPV(52)                                          M0001400
C                                                                       M0001500
C  INPUT PLANE                                                          M0001600
      DOUBLE PRECISION PLANE(4)                                         M0001700
C                                                                       M0001800
C  INPUT THICKNES                                                       M0001900
      DOUBLE PRECISION TH                                               M0002000
C                                                                       M0002100
C  INPUT TO/ON/PAST TYPE (2/3/4)                                        M0002200
      INTEGER IWAS                                                      M0002300
C                                                                       M0002400
C  OUTPUT DISTANCE                                                      M0002500
      DOUBLE PRECISION DIST                                             M0002600
C                                                                       M0002700
C  OUTPUT RETURN CODE (=0 IF OK)                                        M0002800
      INTEGER IRET                                                      M0002900
C                                                                       M0003000
C  TOOL POINT,HELP VECTORS                                              M0003100
      DOUBLE PRECISION TP(3),VT(3),VT2(3)                               M0003200
C                                                                       M0003300
C  GOLOFT/PLOTFT COMMON                                                 M0003400
C                                                                       M0003800
C  USED CUTTER SEGMENT                                                  M0003900
      INTEGER JCSEG                                                     M0004000
C                                                                       M0004100
C  NUMBER OF VALID CUTTER SEGMENTS                                      M0004200
      INTEGER NCSEG                                                     M0004300
C                                                                       M0004400
C  CUTTER SEGMENT IN TLLDAT ARRAYS                                      M0004500
      INTEGER ICSEG(10)                                                 M0004600
C                                                                       M0004700
C  NATURE OF SEGMENT                                                    M0004800
      INTEGER NLIOCI(10)                                                M0004900
C                                                                       M0005000
C  COMPONENTS OF SEGMENT AND UNIT NORMAL POINTING INTO THE CUTTER       M0005100
      DOUBLE PRECISION COSAL(10)                                        M0005200
      DOUBLE PRECISION SINAL(10)                                        M0005300
C                                                                       M0005400
C  DISTANCE PARALLEL TO THE CUTTER AXIS                                 M0005500
      DOUBLE PRECISION CUTY(10)                                         M0005600
C                                                                       M0005700
C  DISTANCE TO THE CUTTER AXIS                                          M0005800
      DOUBLE PRECISION CUTX(10)                                         M0005900
C                                                                       M0006000
C  ELEMENT LENGTH                                                       M0006100
      DOUBLE PRECISION CUTL(10)                                         M0006200
C                                                                       M0006210
      COMMON/PLGOL/ID(24),OBNAM1,JCSEG,NCSEG,ICSEG,NLIOCI,              M0006220
     *             COSAL,SINAL,                                         M0006230
     *             CUTY,CUTX,CUTL                                       M0006240
C                                                                       M0006300
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0006400
C                                                                       M0006500
C CHECK TOOL POSITION INFORMATION                                       M0006600
      IF(IWAS.GE.2.AND.IWAS.LE.4) GOTO 5                                M0006700
      IRET=MAX0(IRET,1)                                                 M0006800
      IF(.NOT.SSTEST)RETURN                                             M0006900
C                                                                       M0007000
C  WRONG TOOL AXIS INFORMATION.                                         M0007100
      CALL AERR(22223,'CPLDST  ')                                       M0007200
      CALL BAD(1,0,'IWAS',IWAS)                                         M0007300
      RETURN                                                            M0007400
C                                                                       M0007500
C  MOVE TOOL TIP                                                        M0007600
    5 DO 10 I=1,3                                                       M0007700
   10 TP(I)=SPV(32+I)                                                   M0007800
C                                                                       M0007900
C  ON-CONDITION ?                                                       M0008000
      IF(IWAS.EQ.3) GOTO 90                                             M0008100
C                                                                       M0008200
C  COMPUTE COSIN OF ANGLE BETWEEN TOOL AXIS AND PLANE                   M0008300
      COSANG=SPV(37)*PLANE(1)                                           M0008400
     *      +SPV(38)*PLANE(2)                                           M0008500
     *      +SPV(39)*PLANE(3)                                           M0008600
      IF(IWAS.EQ.4) COSANG=-COSANG                                      M0008700
C                                                                       M0008800
C  FIND TOOL SEGMENT                                                    M0008900
      DO 20 I=1,NCSEG                                                   M0009000
      IF(NLIOCI(I).EQ.1) GOTO 20                                        M0009100
      JCSEG=I                                                           M0009200
      IF(COSAL(I).LE.COSANG) GOTO 25                                    M0009300
   20 CONTINUE                                                          M0009400
C                                                                       M0009500
C  COMPUTE VECTOR PERPTO AXIS AND PERPTO PLANE NORMAL                   M0009600
   25 CALL CROSS(PLANE,SPV(37),VT)                                      M0009700
C                                                                       M0009800
C  COMPUTE LENGTH OF THIS VECTOR                                        M0009900
      VLL=VT(1)*VT(1)+VT(2)*VT(2)+VT(3)*VT(3)                           M0010000
C                                                                       M0010100
C  TAKE ONLY TOOL TIP, IF VLL TOO SMALL                                 M0010200
      IF(VLL.LE.1.D-10) GOTO 90                                         M0010300
      VLL=DSQRT(VLL)                                                    M0010400
C                                                                       M0010500
C  COMPUTE VECTOR PERPENTICULAR TO TOOL AXIS AND POINTING TO PLANE      M0010600
      CALL CROSS(VT,SPV(37),VT2)                                        M0010700
C                                                                       M0010800
C  INVERT VLL FOR PAST CONDITION                                        M0010900
      IF(IWAS.EQ.4) VLL=-VLL                                            M0011000
C                                                                       M0011100
C  COMPUTE FACTOR FOR TO AND PAST CONDITION                             M0011200
      FACT=1.D0                                                         M0011300
      IF(IWAS.EQ.4) FACT=-1.D0                                          M0011400
C                                                                       M0011500
C  COMPUTE CUTTER POINT                                                 M0011600
      DO 40 I=1,3                                                       M0011700
   40 TP(I)=TP(I)                                                       M0011800
     *           +SPV(36+I)*CUTY(JCSEG)                                 M0011900
     *           +VT2(   I)*CUTX(JCSEG)/VLL                             M0012000
     *           -PLANE( I)*(CUTL(JCSEG)+TH)*FACT                       M0012100
C                                                                       M0012200
C  COMPUTE DISTANCE                                                     M0012300
   90 DIST=TP(1)*PLANE(1)                                               M0012400
     *    +TP(2)*PLANE(2)                                               M0012500
     *    +TP(3)*PLANE(3)                                               M0012600
     *    -PLANE(4)                                                     M0012700
C                                                                       M0012800
      RETURN                                                            M0012900
      END                                                               M0013000
**** SOURCE FILE : M0011488.V01   ***
*
      SUBROUTINE GCLEAR(CNAME)                                          M0000100
C                                                                       M0000200
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               M0000300
C                                                                       M0000400
C PROCESSES THE GCLEAR STATEMENT                                        M0000500
C                                                                       M0000600
      COMMON/CCLEAR/ DIRMOT(3,4)                                        M0000700
     *              ,GOFEED(4)                                          M0000800
     *              ,GLFEED                                             M0000900
     *              ,REGLDA(2)                                          M0001000
     *              ,IRETRO(4)                                          M0001100
     *              ,IDIRMO(4)                                          M0001200
     *              ,ICANIN(4)                                          M0001300
      INCLUDE 'BLANKCOM.INC'                                            M0001400
C                                                                       M0001500
      LOGICAL CKDEF                                                     M0001600
      CHARACTER*6 HPOS,HARG,TEST                                        M0001650
      DIMENSION HPOS(6),HARG(5),LCNN(7),CNAME(1)                        M0001700
      INTEGER ADDRSS                                                    M0001800
C                                                                       M0001900
      DATA HPOS /'START ','AWAY  ','BACK  ','THRU  ','ON    ','OFF   '/ M0002000
      DATA HARG /'MOTDIR','NORMAL','PARLEL','FEED  ','CLEARS'/          M0002100
      DATA LCNN /7,7,10,10,7,4,10/                                      M0002200
C                                                                       M0002300
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0002400
C                                                                       M0002500
C SET DEFAULT GLFEED                                                    M0002600
      IF(GLFEED.EQ.0.D0) GLFEED=50.D0                                   M0002700
C                                                                       M0002800
      IS=4                                                              M0002900
      IE=SSCAN(2)-1                                                     M0003000
C                                                                       M0003100
C             DEFINE COLUMN, I.E. POSITION OF TOOL MOTION               M0003200
      K=0                                                               M0003300
      DO 10 MP=1,6                                                      M0003400
      CALL HOLFRM(SSCAN(IS),TEST,1,6,NWD)                               M0003450
      IF(TEST.NE.HPOS(MP)) GOTO 10                                      M0003500
      IF(MP-5)20,4,6                                                    M0003600
    4 K=1                                                               M0003700
    6 DO 8 I=1,4                                                        M0003800
    8 IRETRO(I)=K                                                       M0003900
      GOTO 15                                                           M0004000
   10 CONTINUE                                                          M0004100
C                                                                       M0004200
C             NO CONDITIONS CHANGED                                     M0004300
   15 GOTO 999                                                          M0004400
C                                                                       M0004500
C             ZERO LOCATIONS MP IN THE /CCLEAR/ ARRAYS                  M0004600
   20 IS=IS+2                                                           M0004700
      IRETRO(  MP)=0                                                    M0004800
      CALL HOLFRM(SSCAN(IS),TEST,1,6,NWD)                               M0004850
      IF(TEST.EQ.HPOS(6)) GOTO 15                                       M0004900
      IRETRO(  MP)=1                                                    M0005000
      IF(TEST.EQ.HPOS(5)) GOTO 15                                       M0005100
C                                                                       M0005200
C FEED PARAMETER                                                        M0005300
      IF(TEST.NE.HARG(4)) GOTO 25                                       M0005400
      GOFEED(MP)=SSCAN(IS+2)                                            M0005500
      IS=IS+4                                                           M0005600
      IF(IS.LT.IE) GOTO 25                                              M0005700
      GOTO 115                                                          M0005800
C                                                                       M0005900
   25 DO 30 I=1,3                                                       M0006000
   30 DIRMOT(I,MP)=0.D0                                                 M0006100
      IDIRMO(  MP)=0                                                    M0006200
      ICANIN(  MP)=0                                                    M0006300
C                                                                       M0006400
C             SET FLAGS AND VALUES FOR MOTION CONDITIONS                M0006500
   40 CALL HOLFRM(SSCAN(IS),TEST,1,6,NWD)                               M0006550
      DO 50 I=1,5                                                       M0006600
      IF(TEST.NE.HARG(I)) GOTO 50                                       M0006700
      GOTO( 60, 60, 70, 80, 90),I                                       M0006800
   50 CONTINUE                                                          M0006900
C                                                                       M0007000
C             NO FURTHER CONDITION CHANGE                               M0007100
      GOTO 999                                                          M0007200
C                                                                       M0007300
C             MOTION DIRECTION OR NORMAL DIRECTION (FLAG AND VALUE)     M0007400
   60 IDIRMO(MP)=1                                                      M0007500
      DIRMOT(I,MP)=SSCAN(IS+2)                                          M0007600
      GOTO 100                                                          M0007700
C                                                                       M0007800
C             MOTION DIRECTION OR NORMAL DIRECTION (FLAG AND VALUE)     M0007900
   70 IS=IS+2                                                           M0008000
      IF(CKDEF(SSCAN(IS)))GOTO 130                                      M0008100
      K=IS-1                                                            M0008200
      DO 75 I=1,3                                                       M0008300
   75 DIRMOT(I,MP)=SSCAN(K+I)                                           M0008400
      IDIRMO(MP)=2                                                      M0008500
      GOTO 100                                                          M0008600
C                                                                       M0008700
C             SPECIAL FEEDRATES                                         M0008800
   80 GOFEED(MP)=SSCAN(IS+2)                                            M0008900
      GOTO 100                                                          M0009000
C                                                                       M0009100
C             CLEARANCE SURFACES                                        M0009200
   90 IF(CKDEF(SSCAN(IS+2)))GOTO 130                                    M0009300
      ICANIN(MP)=(ADDRSS(CNAME(1))-ADDRSS(COM(1)))/8+1                  M0009400
      I=SSCAN(IS+1)                                                     M0009500
      K=5                                                               M0009600
      IF(I.LT.8)K=LCNN(I)                                               M0009700
      IS=IS+K                                                           M0009800
      GOTO 110                                                          M0009900
C                                                                       M0010000
  100 IS=IS+4                                                           M0010100
  110 IF(IS.LT.IE)GOTO 40                                               M0010200
C                                                                       M0010300
C IF NO MOTION, SET MOTION-DIRECTION ZERO                               M0010400
  115 IF(DIRMOT(1,MP).EQ.0.D0.AND.                                      M0010500
     *   DIRMOT(2,MP).EQ.0.D0.AND.                                      M0010600
     *   DIRMOT(3,MP).EQ.0.D0) IDIRMO(MP)=0                             M0010700
C                                                                       M0010800
C SET DEFAULT FOR FEED, IF ZERO-FEDRAT GIVEN                            M0010900
      IF(GOFEED(MP).EQ.0.D0) GOFEED(MP)=50.D0                           M0011000
C                                                                       M0011100
  120 GOTO 999                                                          M0011200
C                                                                       M0011300
  130 CALL ERROR(5157,'GCLEAR  ')                                       M0011400
      GOTO 120                                                          M0011500
C                                                                       M0011600
  999 CONTINUE                                                          M0011700
      RETURN                                                            M0011800
      END                                                               M0011900
**** SOURCE FILE : M0012335.V02   ***
*
      SUBROUTINE SETVER(W)                                              M0000100
C                                                                       M0000200
C ROUTINE SETVER SETS THE STARTING VALUES FOR INTERSECTION              M0000300
C                                                                       M0000310
C STORES ARRAY W IN ARRAY W1 IN COMMON/VERCOM FOR USE BY GETVER         M0000320
C                                                                       M0000330
C       W1     : I: DEFINITION OF 1ST LINE: START POINT (U1,V1)         M0000400
C                                           END   POINT (U2,V2)         M0000500
C                    W1(1) = U1                                         M0000600
C                    W1(2) = V1                                         M0000700
C                    W1(3) = U2-U1                                      M0000800
C                    W1(4) = V2-V1                                      M0000900
C                                                                       M0001000
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0001100
C                                                                       M0001200
      DIMENSION W1(4),W(4)                                              M0001300
C                                                                       M0001310
      COMMON/VERCOM/UMIN1,UMAX1,VMIN1,VMAX1,W1                          M0001320
C                                                                       M0001330
      DO 10 I=1,4                                                       M0001340
        W1(I)=W(I)                                                      M0001350
   10 CONTINUE                                                          M0001360
C                                                                       M0001400
      UMIN1=DMIN1(W1(1),W1(1)+W1(3))                                    M0001500
      UMAX1=DMAX1(W1(1),W1(1)+W1(3))                                    M0001600
      VMIN1=DMIN1(W1(2),W1(2)+W1(4))                                    M0001700
      VMAX1=DMAX1(W1(2),W1(2)+W1(4))                                    M0001800
      END                                                               M0001900
C                                                                       M0002000
      SUBROUTINE GETVER(W2,RESULT,IRES)                                 M0002100
C                                                                       M0002200
C ROUTINE   GETVER COMPUTES THE INTERSECTION                            M0002300
C       W2     : I: DEFINITION OF 2ND LINE: START POINT (U3,V3)         M0002400
C                                           END   POINT (U4,V4)         M0002500
C                    W2(1) = U3                                         M0002600
C                    W2(2) = V3                                         M0002700
C                    W2(3) = U4-U3                                      M0002800
C                    W2(4) = V4-V3                                      M0002900
C       RESULT : O: RESULTING VALUES, POINT OF INTERSECTION             M0003000
C       IRES   : O: =0: NO INTERSECTION                                 M0003100
C                   =1: INTERSECTION, RESULT IN RESULT                  M0003200
C                   =2: INTERSECTION, PARALLEL LINES,                   M0003300
C                        UPON EACH OTHER                                M0003400
C                                                                       M0003410
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0003420
C                                                                       M0003430
      DIMENSION W1(4), W2(4), RESULT(2)                                 M0003440
C                                                                       M0003450
      COMMON/VERCOM/UMIN1,UMAX1,VMIN1,VMAX1,W1                          M0003460
C                                                                       M0003500
      IRES=0                                                            M0003600
C                                                                       M0003700
      IF(UMIN1.GT.DMAX1(W2(1),W2(1)+W2(3))) RETURN                      M0003800
      IF(UMAX1.LT.DMIN1(W2(1),W2(1)+W2(3))) RETURN                      M0003900
      IF(VMIN1.GT.DMAX1(W2(2),W2(2)+W2(4))) RETURN                      M0004000
      IF(VMAX1.LT.DMIN1(W2(2),W2(2)+W2(4))) RETURN                      M0004100
C                                                                       M0004200
      IF(((W2(1)-W1(1))*W1(4)  -                                        M0004300
     *    (W2(2)-W1(2))*W1(3)) *                                        M0004400
     *   ((W2(1)+W2(3) -W1(1)) *W1(4) -                                 M0004500
     *    (W2(2)+W2(4) -W1(2)) *W1(3))                                  M0004600
     *                            .GT.0.D0) RETURN                      M0004700
C                                                                       M0004800
      IF(((W1(1)-W2(1))*W2(4)  -                                        M0004900
     *    (W1(2)-W2(2))*W2(3)) *                                        M0005000
     *   ((W1(1)+W1(3) -W2(1)) *W2(4) -                                 M0005100
     *    (W1(2)+W1(4) -W2(2)) *W2(3))                                  M0005200
     *                            .GT.0.D0) RETURN                      M0005300
C                                                                       M0005400
C INTERSECT THE 1ST AND 2ND LINE                                        M0005500
      A1= W1(4)                                                         M0005600
      A2=-W1(3)                                                         M0005700
      A3= W1(4)*W1(1)-W1(3)*W1(2)                                       M0005800
      B1= W2(4)                                                         M0005900
      B2=-W2(3)                                                         M0006000
      B3= W2(4)*W2(1)-W2(3)*W2(2)                                       M0006100
C                                                                       M0006200
C  CHECK FOR PARALLEL                                                   M0006300
      D=A2*B1-A1*B2                                                     M0006400
      IF(DABS(D).LT.1D-10)GOTO 50                                       M0006500
      RESULT(1)=-(A3*B2-A2*B3)/D                                        M0006600
      RESULT(2)=(A3*B1-A1*B3)/D                                         M0006700
      IRES=1                                                            M0006800
      GOTO 60                                                           M0006900
   50 IRES=2                                                            M0007000
   60 CONTINUE                                                          M0007100
CCCCC WRITE(6,100)IRES,W1,W2,RESULT                                     M0007200
CC100 FORMAT(' IRES,W1,W2,RESULT:'/I3/1X,4F20.5/1X,4F20.5/1X,2F20.5)    M0007300
C                                                                       M0007400
      RETURN                                                            M0007500
      END                                                               M0007600
**** SOURCE FILE : M0012232.V01   ***
*
      SUBROUTINE GOCHOR(MODC,U1,U2,J11,IRET)                            M0000100
C                                                                       M0000200
C                                                                       M0000300
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000400
C                                                                       M0000500
      COMMON/PLGOL/ID(24)                                               M0000600
      DOUBLE PRECISION UVCONS,TOL,VL                                    M0000700
      EQUIVALENCE (ID(1),UVCONS)                                        M0000800
      EQUIVALENCE (ID(7),TOL)                                           M0000900
      EQUIVALENCE (ID(9),VL)                                            M0001000
C                                                                       M0001100
C  POINT STORAGE AND CURVATURE                                          M0001200
      DOUBLE PRECISION SPV(52,3),K1                                     M0001300
C                                                                       M0001400
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0001500
C                                                                       M0001600
      TOL2=TOL*TOL                                                      M0001700
      UI=U1                                                             M0001800
      UJ=U1                                                             M0001900
C                                                                       M0002000
C  TANGENT IN SPV (-1)                                                  M0002100
      IT=4                                                              M0002200
      IF(MODC.EQ.2.OR.MODC.EQ.3) IT=8                                   M0002300
C                                                                       M0002400
C  DIFFERENT KINDS OF CALCULATION                                       M0002500
    1 GOTO( 10, 20, 30, 40, 50),MODC                                    M0002600
C                                                                       M0002700
C  CURVE                                                                M0002800
   10 CALL GOP(3,UI,UDUMMY,SPV(1,1),J11,IRET)                           M0002900
C                                                                       M0003000
C  CURVATURE OF A CURVE                                                 M0003100
      SPSP=0.D0                                                         M0003200
      SPPSPP=0.D0                                                       M0003300
      SPSPP=0.D0                                                        M0003400
      DO 11 I=1,3                                                       M0003500
      SPI=SPV(4+I,1)                                                    M0003600
      SPPI=SPV(8+I,1)                                                   M0003700
      SPSP=SPI*SPI+SPSP                                                 M0003800
      SPPSPP=SPPI*SPPI+SPPSPP                                           M0003900
   11 SPSPP=SPI*SPPI+SPSPP                                              M0004000
C                                                                       M0004100
C  OFFSET OF RADIUS                                                     M0004200
      ZR=0.D0                                                           M0004300
      IF(DABS(SPSP).LT.1.D-12) GOTO 12                                  M0004400
C                                                                       M0004500
C  LENGTH OF THE TANGENT                                                M0004600
      TL=DSQRT(SPSP)                                                    M0004700
      K1=DSQRT((DABS(SPSP*SPPSPP-SPSPP*SPSPP)/SPSP/SPSP/SPSP))          M0004800
      GOTO 60                                                           M0004900
   12 K1=1.D18                                                          M0005000
      GOTO 60                                                           M0005100
C                                                                       M0005200
C  CURVATURE AT VARIABLE V                                              M0005300
   20 CONTINUE                                                          M0005400
   30 CALL GOP(3,UVCONS,UI,SPV(1,1),J11,IRET)                           M0005500
C                                                                       M0005600
C  K=N/G                                                                M0005700
      K1=SPV(51,1)/SPV(47,1)                                            M0005800
C                                                                       M0005900
C  LENGTH OF TANGENT                                                    M0006000
      TL=DSQRT(SPV(47,1))                                               M0006100
C                                                                       M0006200
C  OFFSET OF RADIUS                                                     M0006300
      ZR=SPV(52,1)                                                      M0006400
      GOTO 60                                                           M0006500
C                                                                       M0006600
C  CURVATURE AT VARIABLE  U                                             M0006700
   40 CONTINUE                                                          M0006800
   50 CALL GOP(3,UI,UVCONS,SPV(1,1),J11,IRET)                           M0006900
C                                                                       M0007000
C  K=L/E                                                                M0007100
      K1=SPV(49,1)/SPV(45,1)                                            M0007200
C                                                                       M0007300
C  LENGTH OF THE TANGENT                                                M0007400
      TL=DSQRT(SPV(45,1))                                               M0007500
C                                                                       M0007600
C  OFFSET OF RADIUS                                                     M0007700
      ZR=SPV(52,1)                                                      M0007800
      GOTO 60                                                           M0007900
C                                                                       M0008000
C  CACULATION OF THE STEP OUT U-DISTANCE                                M0008100
   60 IF(K1.LT.0.D0)ZR=-ZR                                              M0008200
      K1=DABS(K1)                                                       M0008300
      R1=1.D0/(K1+1.D-12)                                               M0008400
      IF(R1.LT.TOL) GOTO 61                                             M0008500
      IF(ZR.EQ.0.D0) GOTO 63                                            M0008600
      R1=R1+ZR                                                          M0008700
      IF(R1.LE.0.D0)GOTO 61                                             M0008800
      TL=TL/(R1-ZR)*R1                                                  M0008900
   63 DU=2.D0*DSQRT(TOL*(R1+R1-TOL))/TL                                 M0009000
      GOTO 62                                                           M0009100
   61 DU=TOL                                                            M0009200
C  R1 LESS THAN THE TOLERANCE                                           M0009300
      CALL AERR(-22221,'GOCHOR  ')                                      M0009400
   62 CONTINUE                                                          M0009500
C                                                                       M0009600
C  LENGTH COMPUTING OF THE CUT                                          M0009700
      IF(DU*TL.LT.VL) GOTO 64                                           M0009800
      DU=DU*VL*.99D0/TL                                                 M0009900
   64 CONTINUE                                                          M0010000
      GOTO(110,120,130,140,150),MODC                                    M0010100
C                                                                       M0010200
C  U2 IS BIGGER THAN   U1                                               M0010300
  110 CONTINUE                                                          M0010400
  120 CONTINUE                                                          M0010500
  140 IANZ=(U2-UI)/DU                                                   M0010600
      ANZ=IANZ+1                                                        M0010700
      DU=(U2-UI)/ANZ                                                    M0010800
      UJ=UI+DU+.0000001D0                                               M0010900
      IF(UJ.GT.U2) UJ=U2                                                M0011000
      GOTO 160                                                          M0011100
C                                                                       M0011200
C  U1 IS BIGGER THAN  U2                                                M0011300
  130 CONTINUE                                                          M0011400
  150 IANZ=(UI-U2)/DU                                                   M0011500
      ANZ=IANZ+1                                                        M0011600
      DU=(UI-U2)/ANZ                                                    M0011700
      UJ=UI-DU-.0000001D0                                               M0011800
      IF(UJ.LT.U2) UJ=U2                                                M0011900
      GOTO 160                                                          M0012000
C                                                                       M0012100
C  COMPUTATION OF THE NEW ENDPOINT AND CONTROL OF THE CHORD             M0012200
  160 GOTO(210,220,230,240,250),MODC                                    M0012300
  210 CONTINUE                                                          M0012400
  240 CONTINUE                                                          M0012500
  250 CALL GOP(1,UJ          ,UVCONS,SPV(1,2),J11,IRET)                 M0012600
      CALL GOP(1,(UJ+UI)/2.D0,UVCONS,SPV(1,3),J11,IRET)                 M0012700
      GOTO 260                                                          M0012800
  220 CONTINUE                                                          M0012900
  230 CALL GOP(1,UVCONS,          UJ,SPV(1,2),J11,IRET)                 M0013000
      CALL GOP(1,UVCONS,(UJ+UI)/2.D0,SPV(1,3),J11,IRET)                 M0013100
      GOTO 260                                                          M0013200
C                                                                       M0013300
C  DISTANCE VALUES :                                                    M0013400
  260 AB=QABPST(SPV(1,1),SPV(1,2),SPV(1,3))                             M0013500
      IF(AB.LE.TOL2) GOTO 270                                           M0013600
      UJ=(UI+UJ)/2.D0                                                   M0013700
      GOTO 160                                                          M0013800
C                                                                       M0013900
C  CONTROL OF THE LENGTH OF A CUT                                       M0014000
  270 VL1=DSQRT((SPV(1,2)-SPV(1,1))**2                                  M0014100
     *         +(SPV(2,2)-SPV(2,1))**2                                  M0014200
     *         +(SPV(3,2)-SPV(3,1))**2)                                 M0014300
C                                                                       M0014400
      IF(VL1.LE.VL) GOTO 280                                            M0014500
      DU=DU*VL*.9D0/VL1                                                 M0014600
      GOTO 64                                                           M0014700
C                                                                       M0014800
C  CONTROL OF THE TURNING POINT                                         M0014900
  280 IF((SPV(IT+2,1)*SPV(IT+3,3)-SPV(IT+3,1)*SPV(IT+2,3))              M0015000
     *  *(SPV(IT+2,3)*SPV(IT+3,2)-SPV(IT+3,3)*SPV(IT+2,2))              M0015100
     *  +(SPV(IT+3,1)*SPV(IT+1,3)-SPV(IT+1,1)*SPV(IT+3,3))              M0015200
     *  *(SPV(IT+3,3)*SPV(IT+1,2)-SPV(IT+1,3)*SPV(IT+3,2))              M0015300
     *  +(SPV(IT+1,1)*SPV(IT+2,3)-SPV(IT+2,1)*SPV(IT+1,3))              M0015400
     *  *(SPV(IT+1,3)*SPV(IT+2,2)-SPV(IT+2,3)*SPV(IT+1,2)))             M0015500
     * 285,290,290                                                      M0015600
  285 UJ=(UI+UJ)/2.D0                                                   M0015700
      GOTO 160                                                          M0015800
  290 UI=UJ                                                             M0015900
C                                                                       M0016000
C  FINISHED ?                                                           M0016100
      IF(UJ.NE.U2) GOTO 1                                               M0016200
C                                                                       M0016300
C  THE LAST POINT WILL BE OUTPUT IN THE CALLING PROGRAM                 M0016400
      RETURN                                                            M0016500
      END                                                               M0016600
**** SOURCE FILE : M0012234.V04   ***
*
      SUBROUTINE GOL(ADRESS)                                            M0000100
C                                                                       M0000200
C  MAIN DISPATCHING ROUTINE FOR GOLOFT/PLOTFT                           M0000300
C                                                                       M0000400
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000500
C                                                                       M0000600
C  CANONICAL FORM OF SS GEOMETRY                                        M0000700
      DIMENSION ADRESS(3)                                               M0000800
C                                                                       M0000900
C  HELP ARRAY FOR VECTOR TRANSFORMATION                                 M0001000
      DOUBLE PRECISION VTAX(3),VT1(4)                                   M0001100
      EQUIVALENCE(VT1(2),VTAX(1))                                       M0001200
      INCLUDE 'DARRAY.INC'                                              M0001300
C                                                                       M0001400
C   STORAGE FOR REGION SEGMENTS                                         M0001500
      DOUBLE PRECISION UV(4,25)                                         M0001600
C                                                                       M0001700
C  GOLOFT COMMON                                                        M0001800
      INTEGER JCSEG,NCSEG                                               M0002100
      INTEGER ICSEG(10),NLIOCI(10)                                      M0002200
      DOUBLE PRECISION COSAL(10),SINAL(10),CUTY(10),CUTX(10),CUTL(10)   M0002300
C                                                                       M0002400
C  VECTOR-COMPONENTS OF THE TOOL-AXIS-VECTOR                            M0002500
      DOUBLE PRECISION VTA(3)                                           M0002600
                                                                        M0002610
      COMMON/PLGOL/ID(24),OBNAM1,JCSEG,NCSEG,ICSEG,NLIOCI,              M0002620
     *             COSAL,SINAL,CUTY,CUTX,CUTL,VTA                       M0002630
C                                                                       M0002640
      DOUBLE PRECISION UVCONS,UVA,UVE,TOL,VL                            M0002700
C                                                                       M0002800
C UVCONS:    U-, V- CONSTANTS, GIVEN BY "UCONST,U" OR "VCONST,V"        M0002900
      EQUIVALENCE (ID( 1),UVCONS)                                       M0003000
C                                                                       M0003100
C UVA:       STARTPARAMETER GIVEN BY "START,S"                          M0003200
      EQUIVALENCE (ID( 3),UVA   )                                       M0003300
C                                                                       M0003400
C UVE:       ENDPARAMETER GIVEN BY "THRU,T"                             M0003500
      EQUIVALENCE (ID( 5),UVE   )                                       M0003600
C                                                                       M0003700
C TOL:       INCREMENTS BY "INCR,I", ERROR OF CHORD BY "CHORD,C"        M0003800
      EQUIVALENCE (ID( 7),TOL   )                                       M0003900
C                                                                       M0004000
C VL:        LENGTH-PARAMETER GIVEN BY "LENGTH,L"                       M0004100
      EQUIVALENCE (ID( 9),VL    )                                       M0004200
C                                                                       M0004300
C NU:        AMOUNT OF INTERMEDIATE LINES IN DIRECTION    UCONST        M0004400
      EQUIVALENCE (ID(11),NU    )                                       M0004500
C                                                                       M0004600
C NV:        AMOUNT OF INTERMEDIATE LINES IN DIRECTION    VCONST        M0004700
      EQUIVALENCE (ID(12),NV    )                                       M0004800
C                                                                       M0004900
C IART:      IART = 1   PLOTFT/SCURV,.........,PARAM,....               M0005000
C            IART = 2   PLOTFT/SCURV,.........,FLOW ,....               M0005100
C            IART = 3   PLOTFT/SSURF,UCONST,U,...........               M0005200
C            IART = 4   PLOTFT/SSURF,VCONST,V,...........               M0005300
C            IART = 5   PLOTFT/SSURF,GRID,...............               M0005400
C            IART = 6   GOLOFT/SSURF,UCONST,U,...........               M0005500
C            IART = 7   GOLOFT/SSURF,VCONST,V,...........               M0005600
      EQUIVALENCE (ID(13),IART  )                                       M0005700
C                                                                       M0005800
C INVERS:    INVERSION OF THE POINT-SEQUENCE                            M0005900
      EQUIVALENCE (ID(14),INVERS)                                       M0006000
C                                                                       M0006100
C MIRROR:    INVERSION OF THE MANUFACTURED SIDE  (DIRECTION OF NORMAL)  M0006200
      EQUIVALENCE (ID(15),MIRROR)                                       M0006300
C                                                                       M0006400
C NORMAL:   =1, IF  TLAXIS/NORMPS GIVEN; SURFACE-NORMAL = AXIS-DIRECTIONM0006500
      EQUIVALENCE (ID(16),NORMAL)                                       M0006600
C                                                                       M0006700
C INCR:     =1 IF "INCR,I", =0 IF "CHORD,C" GIVEN                       M0006800
      EQUIVALENCE (ID(17),INCR  )                                       M0006900
C                                                                       M0007000
C IAT:       IAT   = 0 AT NOT PROGRAMMED                                M0007100
C            IAT   = 1 AT   "AT,A",        = 2 AT   "AT,TO,PL1"         M0007200
C            IAT   = 3 AT   "AT,ON,PL1,    = 4 AT   "AT,PAST,PL1        M0007300
      EQUIVALENCE (ID(18),IAT   )                                       M0007400
C                                                                       M0007500
C ISTRT:     ISTRT = 0 START NOT PROGRAMMED                             M0007600
C            ISTRT = 1 AT   "START,A",     = 2 AT   "START,TO,PL1"      M0007700
C            ISTRT = 3 AT   "START,ON,PL1, = 4 AT   "START,PAST,PL1     M0007800
      EQUIVALENCE (ID(19),ISTRT )                                       M0007900
C                                                                       M0008000
C ITHRU:     ITHRU = 0 THRU NOT PROGRAMMED                              M0008100
C            ITHRU = 1 AT   "THRU,A",      = 2 AT   "THRU,TO,PL1"       M0008200
C            ITHRU = 3 AT   "THRU,ON,PL1,  = 4 AT   "THRU,PAST,PL1      M0008300
      EQUIVALENCE (ID(20),ITHRU )                                       M0008400
C                                                                       M0008500
C   LOGIC-FUNCTION FOR CHECKING THE GEOMETRY                            M0008600
      LOGICAL CKDEF                                                     M0008700
C                                                                       M0008800
C  BLANK-COMMON                                                         M0008900
      INCLUDE 'BLANKCOM.INC'                                            M0009000
C                                                                       M0009100
C  OUTPUT-ARRAY OF THE HEADER                                           M0009200
      DOUBLE PRECISION OBNAME,MODF(7)                                   M0009300
      CHARACTER*8 CMODF(7)                                              M0009310
      DOUBLE PRECISION LEIT(9)                                          M0009500
      INTEGER ILEIT(18),IMODF(2,7)                                      M0009710
      EQUIVALENCE (LEIT(7),OBNAME),(LEIT(1),ILEIT(1))                   M0009800
      EQUIVALENCE (MODF(1),IMODF(1,1))                                  M0009810
      DOUBLE PRECISION PENUP (5)                                        M0010000
      EQUIVALENCE (PENUP (1),IPENU(1))                                  M0010200
      INTEGER IPENU(10)                                                 M0010300
C                                                                       M0010400
      INCLUDE 'TOTAL.INC'                                               M0010500
      INCLUDE 'FXCOR.INC'                                               M0010900
      INCLUDE 'SV.INC'                                                  M0011300
      INCLUDE 'IFXCOR.INC'                                              M0011700
      INCLUDE 'GLFLGS.INC'                                              M0012700
C                                                                       M0012900
C  SYSTEM - INPUT/OUTPUT-NAMES                                          M0013000
      INCLUDE 'SYMFIL.INC'                                              M0013100
C                                                                       M0013400
C  STORAGE OF POINTS                                                    M0013500
      DOUBLE PRECISION SPV(52)                                          M0013600
C                                                                       M0013700
C  CONTROL OF TEST-OUTPUT                                               M0013800
      COMMON/SSPRT/SSPRT,SSTEST                                         M0013900
      LOGICAL SSPRT,SSTEST                                              M0014000
C                                                                       M0014010
      INTEGER Z4E                                                       M0014020
      PARAMETER (Z4E=1308622848)                                        M0014030
C                                                                       M0014040
      INTEGER BCDF                                                      M0014045
      LOGICAL FIRST                                                     M0014050
      SAVE FIRST,LEIT,PENUP                                             M0014060
C                                                                       M0014070
      DATA CMODF/'PLOTKP  ','PLOTKF  ','PLOTFU  ','PLOTFV  ','PLOTGR  ',M0014075
     +          'GOFLU   ','GOFLV   '/                                  M0014076
      DATA VT1/20030000.0D0,3*.0D0/                                     M0014080
      DATA ILEIT/0,0,Z4E,0,Z4E,6,Z4E,1,0,0,Z4E,0,0,0,Z4E,0,Z4E,0/       M0014085
      DATA IPENU/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/                             M0014090
      DATA FIRST/.TRUE./                                                M0014095
C                                                                       M0014100
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0014200
C                                                                       M0014300
C     INITIALISE CHARACTER ITEMS FOR OUTPUT TO EXFILE                   M0014310
C                                                                       M0014320
      IF (FIRST) THEN                                                   M0014330
        DO 5 I=1,7                                                      M0014332
          IMODF(1,I)=BCDF(CMODF(I)(1:4))                                M0014334
          IMODF(2,I)=BCDF(CMODF(I)(5:8))                                M0014336
    5   CONTINUE                                                        M0014338
        ILEIT(1)=BCDF('CLDA')                                           M0014340
        ILEIT(2)=BCDF('TA  ')                                           M0014350
        IPENU(1)=BCDF('PENU')                                           M0014360
        IPENU(2)=BCDF('P   ')                                           M0014370
        IPENU(9)=BCDF('    ')                                           M0014380
        IPENU(10)=IPENU(9)                                              M0014390
        FIRST=.FALSE.                                                   M0014392
      ENDIF                                                             M0014395
      IF(.NOT.SSTEST) GOTO 22                                           M0014400
      CALL CFORM('1 GOLOFT/PLOTFT-CALLED WITH IART=  ',DARRAY,1,34)     M0014500
      CALL ICONV(IART,DARRAY,34,4)                                      M0014600
      CALL CPRINT(DARRAY)                                               M0014700
      CALL CFORM('  PART PROGRAM-SEQUENCE-N0. (ISN): ',DARRAY,1,34)     M0014800
      CALL RECORD(I)                                                    M0014900
      CALL ICONV(I,DARRAY,34,4)                                         M0015000
      CALL CPRINT(DARRAY)                                               M0015100
      CALL CFORM('0  -U-, V- CONSTANTS         UVCONS=',DARRAY,1,36)    M0015200
      CALL FCONV(UVCONS,DARRAY,36,15,6)                                 M0015300
      CALL CPRINT(DARRAY)                                               M0015400
      CALL CFORM('   -START PARAMETER             UVA=',DARRAY,1,36)    M0015500
      CALL FCONV(UVA   ,DARRAY,36,15,6)                                 M0015600
      CALL CPRINT(DARRAY)                                               M0015700
      CALL CFORM('   -END PARAMETER               UVE=',DARRAY,1,36)    M0015800
      CALL FCONV(UVE   ,DARRAY,36,15,6)                                 M0015900
      CALL CPRINT(DARRAY)                                               M0016000
      CALL CFORM('   -TOLERANCE                   TOL=',DARRAY,1,36)    M0016100
      IF(INCR.EQ.1) CALL CFORM('   -INCREMENT ',DARRAY,1,14)            M0016200
      CALL FCONV(TOL   ,DARRAY,36,15,6)                                 M0016300
      CALL CPRINT(DARRAY)                                               M0016400
      CALL CFORM('   -MAX.CUT-VECTOR               VL=',DARRAY,1,36)    M0016500
      CALL FCONV(VL    ,DARRAY,36,15,6)                                 M0016600
      CALL CPRINT(DARRAY)                                               M0016700
      CALL CFORM('   -NO. INTERMEDIATE LINES-U     NU=',DARRAY,1,36)    M0016800
      CALL ICONV(NU    ,DARRAY,36,5)                                    M0016900
      CALL CPRINT(DARRAY)                                               M0017000
      CALL CFORM('   -NO. INTERMEDIATE LINES-V     NV=',DARRAY,1,36)    M0017100
      CALL ICONV(NV    ,DARRAY,36,5)                                    M0017200
      CALL CPRINT(DARRAY)                                               M0017300
      CALL CFORM('   -INTERPOLATION-MODE         IART=',DARRAY,1,36)    M0017400
      CALL ICONV(IART  ,DARRAY,36,5)                                    M0017500
      CALL CPRINT(DARRAY)                                               M0017600
      CALL CFORM('   -POINT SEQ. INVERSION     INVERS=',DARRAY,1,36)    M0017700
      CALL ICONV(INVERS,DARRAY,36,5)                                    M0017800
      CALL CPRINT(DARRAY)                                               M0017900
      CALL CFORM('   -SPIMANUF. SIDE INVERSION    MIRROR=',DARRAY,1,36) M0018000
      CALL ICONV(MIRROR,DARRAY,36,5)                                    M0018100
      CALL CPRINT(DARRAY)                                               M0018200
      CALL CFORM('   -NORMALS REQUIRED         NORMAL=',DARRAY,1,36)    M0018300
      CALL ICONV(NORMAL,DARRAY,36,5)                                    M0018400
      CALL CPRINT(DARRAY)                                               M0018500
      IC1=ICS                                                           M0018600
      IC2=ICS+LSV1                                                      M0018700
      CALL CFORM('   -AT    CONDITION              AT=',DARRAY,1,36)    M0018800
      CALL ICONV(IAT,DARRAY,36,5)                                       M0018900
      CALL CPRINT(DARRAY)                                               M0019000
      IF(IAT.LT.2.OR.IAT.GT.4) GOTO 7                                   M0019100
      CALL CFORM('   -THICK FOR CHECKSURFACE 1     TH=',DARRAY,1,36)    M0019200
      CALL FCONV(TH(IC1),DARRAY,36,15,6)                                M0019300
      CALL CPRINT(DARRAY)                                               M0019400
      CALL CFORM('   -OUTTOL                     TAU1=',DARRAY,1,36)    M0019500
      CALL FCONV(TAU1(IC1),DARRAY,36,15,6)                              M0019600
      CALL CPRINT(DARRAY)                                               M0019700
      CALL CFORM('   -INTOL                      TAU2=',DARRAY,1,36)    M0019800
      CALL FCONV(TAU2(IC1),DARRAY,36,15,6)                              M0019900
      CALL CPRINT(DARRAY)                                               M0020000
    7 CALL CFORM('   -START CONDITION           START=',DARRAY,1,36)    M0020100
      CALL ICONV(ISTRT,DARRAY,36,5)                                     M0020200
      CALL CPRINT(DARRAY)                                               M0020300
      IF(ISTRT.LT.2.OR.ISTRT.GT.4) GOTO 8                               M0020400
      CALL CFORM('   -THICK FOR CHECKSURFACE 1     TH=',DARRAY,1,36)    M0020500
      CALL FCONV(TH(IC1),DARRAY,36,15,6)                                M0020600
      CALL CPRINT(DARRAY)                                               M0020700
      CALL CFORM('   -OUTTOL                     TAU1=',DARRAY,1,36)    M0020800
      CALL FCONV(TAU1(IC1),DARRAY,36,15,6)                              M0020900
      CALL CPRINT(DARRAY)                                               M0021000
      CALL CFORM('   -INTOL                      TAU2=',DARRAY,1,36)    M0021100
      CALL FCONV(TAU2(IC1),DARRAY,36,15,6)                              M0021200
      CALL CPRINT(DARRAY)                                               M0021300
    8 CALL CFORM('   -THRU  CONDITION            THRU=',DARRAY,1,36)    M0021400
      CALL ICONV(ITHRU,DARRAY,36,5)                                     M0021500
      CALL CPRINT(DARRAY)                                               M0021600
      IF(ITHRU.LT.2.OR.ITHRU.GT.4) GOTO 9                               M0021700
      CALL CFORM('   -THICK FOR CHECKSURFACE 2     TH=',DARRAY,1,36)    M0021800
      CALL FCONV(TH(IC2),DARRAY,36,15,6)                                M0021900
      CALL CPRINT(DARRAY)                                               M0022000
      CALL CFORM('   -OUTTOL                     TAU1=',DARRAY,1,36)    M0022100
      CALL FCONV(TAU1(IC2),DARRAY,36,15,6)                              M0022200
      CALL CPRINT(DARRAY)                                               M0022300
      CALL CFORM('   -INTOL                      TAU2=',DARRAY,1,36)    M0022400
      CALL FCONV(TAU2(IC2),DARRAY,36,15,6)                              M0022500
      CALL CPRINT(DARRAY)                                               M0022600
    9 CALL CFORM('   -SURFACE NAME                   :',DARRAY,1,36)    M0022700
      CALL UNPACK(ADRESS,MODE,ISIZE,ISBSCT)                             M0022800
      CALL HOLFRM(ADRESS(3),DARRAY,36,8,N)                              M0022900
      IF(ISBSCT.LT.1) GOTO 10                                           M0023000
      CALL HOLFRM(ADRESS(ISBSCT*3),DARRAY,36,8,N)                       M0023100
      CALL CFORM(' (....) ',DARRAY,44,8)                                M0023200
      CALL ICONV(ISBSCT,DARRAY,46,4)                                    M0023300
   10 CALL CPRINT(DARRAY)                                               M0023400
C                                                                       M0023500
C  COMMON START OF ROUTINE                                              M0023600
C                                                                       M0023700
C  NAME OF THE SURFACE                                                  M0023800
   22 CALL UNPACK(ADRESS,MODE,ISIZE,ISBSCT)                             M0023900
      OBNAME=ADRESS(ISIZE+1)                                            M0024000
      IF(ISBSCT.GT.1)OBNAME=ADRESS(ISBSCT*ISIZE+ISBSCT)                 M0024100
      OBNAM1=OBNAME                                                     M0024200
C                                                                       M0024300
C   SAVE REGION FLAG ANS SWITCH OFF GLOBAL REGION FLAG TO PREVENT       M0024400
C                        REGION PROCESSING IF PROGRAMMED IN ATAPE       M0024500
      REGFLS=REGFLG                                                     M0024600
      REGFLG=0                                                          M0024700
C                                                                       M0024800
C  FETCHING THE SURFACE                                                 M0024900
      LDAFLG=3                                                          M0025000
      CALL APT094(LDAFLG,ADRESS,J11)                                    M0025100
      J11=J11-41                                                        M0025200
C                                                                       M0025300
C  TAKE OLD TLAXIS FOR 5-AXIS DIRECTION DECISION                        M0025400
      IF(MANTAX.NE.2.OR.NORMAL.EQ.1) GOTO 200                           M0025500
      DO 210 I=1,3                                                      M0025600
  210 VTAX(I)=TA(I)                                                     M0025700
      CALL TRANSM(VTA,VTAX,3,3,-1)                                      M0025800
  200 CONTINUE                                                          M0025900
C                                                                       M0026000
C PREPARATION FOR PLANE LIMITS                                          M0026100
      IRET=0                                                            M0026200
      INCR1=INCR                                                        M0026300
      INCR=1                                                            M0026400
      CALL GOLPLN(J11,IRET)                                             M0026500
      INCR=INCR1                                                        M0026600
C                                                                       M0026700
C  WRONG TOOL AXIS INFORMATION.                                         M0026800
      IF(IRET.EQ.1) CALL AERR(22223,'GOL     ')                         M0026900
C                                                                       M0027000
C  TOOL-AXIS CAN NOT BE COMPUTED.                                       M0027100
      IF(IRET.EQ.2) CALL AERR(22222,'GOL     ')                         M0027200
C                                                                       M0027300
C  POINT IS OUTSIDE OF THE U/V PARAMETERS OF THE PATCH.                 M0027400
      IF(IRET.EQ.3) CALL AERR(22220,'GOL     ')                         M0027500
      IF(IRET.NE.0) GOTO 998                                            M0027600
C                                                                       M0027700
C  TAKE OLD TLAXIS FOR 5-AXIS DIRECTION DECISION                        M0027800
      IF(MANTAX.NE.2.OR.NORMAL.EQ.1) GOTO 300                           M0027900
      DO 310 I=1,3                                                      M0028000
  310 VTAX(I)=TA(I)                                                     M0028100
      CALL TRANSM(VTA,VTAX,3,3,-1)                                      M0028200
  300 CONTINUE                                                          M0028300
C                                                                       M0028400
C  OUTPUT OF    PENUP, IF  PLOTFT/GRID WANTED                           M0028500
      IF(IART.NE.5) GOTO 30                                             M0028600
      NR=0                                                              M0028700
      J=10                                                              M0028800
      CALL RECORD(ISEQNO)                                               M0028900
      IPENU(4)=ISEQNO                                                   M0029000
      CALL EWRITE(EXFILE,NR,PENUP,J,IR)                                 M0029100
C                                                                       M0029200
C  OUTPUT OF THE HEADER ONLY FOR >PLOTFT/SCURV,...<                     M0029300
   30 IF(IART.GT.2)GOTO 35                                              M0029400
      NR=0                                                              M0029500
      J=18                                                              M0029600
      CALL RECORD(ILEIT(4))                                             M0029700
      ISEQNO=ILEIT(4)                                                   M0029800
      LEIT(5)=MODF(IART)                                                M0029900
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0030000
      ICL=2                                                             M0030100
      IF(UVA.EQ.UVE)ICL=3                                               M0030200
C                                                                       M0030300
C  DISPATCHING OF IART                                                  M0030400
   35 IF(UVA.EQ.-1.D30) UVA=0.D0                                        M0030500
      GOTO(1200,1100,1300,1400,1500,1600,1700),IART                     M0030600
      STOP                                                              M0030700
C                                                                       M0030800
C  PLOTFT/CURVE,FLOW,...                                                M0030900
 1100 UMX=SSCAN(J11+8)                                                  M0031000
C                                                                       M0031100
C  IF NEEDED OUTPUT WITH 'PARAM'                                        M0031200
      IF(UMX.EQ.0.D0) UMX=SSCAN(J11+4)                                  M0031300
C                                                                       M0031400
C  KEEP THE 'FLOW'-SEGMENT-ACCOUNT                                      M0031500
      UHILFS=SSCAN(J11+8)                                               M0031600
      GOTO 1210                                                         M0031700
C                                                                       M0031800
C  PLOTFT/CURVE,PARAM,...                                               M0031900
 1200 UMX=SSCAN(J11+4)                                                  M0032000
C                                                                       M0032100
C  KEEP THE 'FLOW'-SEGMENT-ACCOUNT                                      M0032200
      UHILFS=SSCAN(J11+8)                                               M0032300
C                                                                       M0032400
C  'FLOW'-SEGMENT-ACCOUNT =0 FOR A SHORT TIME                           M0032500
      SSCAN(J11+8)=0.D0                                                 M0032600
 1210 UA=DMAX1(.0D0,UVA)                                                M0032700
      IF(UVE.EQ.1.D30) UVE=UMX                                          M0032800
      UE=DMIN1(UVE,UMX)                                                 M0032900
      IANZ=(UE-UA)/TOL                                                  M0033000
      ANZ=IANZ                                                          M0033100
      IF(IANZ.EQ.0) ANZ=1.D0                                            M0033200
      ANZ=ANZ-.0001                                                     M0033300
      TOLI=(UE-UA)/ANZ                                                  M0033400
      IF(UA.GE.UE) GOTO 1205                                            M0033500
      IF(UVA.GE.0.D0) GOTO 1220                                         M0033600
 1205 CALL GOP(2,UVA,UDUMMY,SPV,J11,IRET)                               M0033700
      IF(UA.GE.UE) GOTO 1240                                            M0033800
 1220 IF(INCR.EQ.1) GOTO 1221                                           M0033900
C                                                                       M0034000
C  OUTPUT OF POINTS UNDER CHORD-CONTROL                                 M0034100
      CALL GOCHOR (1,UA,UE,J11,IRET)                                    M0034200
      GOTO 1222                                                         M0034300
C                                                                       M0034400
C  MOVEMENT WITH 'INCR'                                                 M0034500
 1221 CALL GOP(2,UA,UDUMMY,SPV,J11,IRET)                                M0034600
      UA=UA+TOLI                                                        M0034700
      IF(UA.LT.UE) GOTO 1221                                            M0034800
 1222 IF(UE.EQ.UVE)ICL=3                                                M0034900
      CALL GOP(2,UE,UDUMMY,SPV,J11,IRET)                                M0035000
      IF(UE.EQ.UVE) GOTO 1260                                           M0035100
 1240 IF(ICL.EQ.3) GOTO 1260                                            M0035200
      ICL=3                                                             M0035300
      CALL GOP(2,UVE,UDUMMY,SPV,J11,IRET)                               M0035400
 1260 SSCAN(J11+8)=UHILFS                                               M0035500
      GOTO 999                                                          M0035600
C                                                                       M0035700
C  PLOTTING OF THE GRID                                                 M0035800
 1500 INVERS=0                                                          M0035900
      INVER1=1                                                          M0036000
      IF(NU.LT.0) GOTO 1510                                             M0036100
      UVCONS=0.D0                                                       M0036200
      UVA=0.D0                                                          M0036300
      UVE=SSCAN(J11+9)-1.D0                                             M0036400
      DELTUV=1.D0/(NU+1)                                                M0036500
      UMX=SSCAN(J11+10)-1.D0                                            M0036600
      GOTO 1300                                                         M0036700
 1510 IF(NV.LT.0) GOTO 999                                              M0036800
      UVCONS=0.D0                                                       M0036900
      UVA=0.D0                                                          M0037000
      UVE=SSCAN(J11+10)-1.D0                                            M0037100
      DELTUV=1.D0/(NV+1)                                                M0037200
      VMAX=SSCAN(J11+9)-1.D0                                            M0037300
      GOTO 1400                                                         M0037400
C                                                                       M0037500
C  PLOTTING OR MANUFACTURING WITH    UCONST                             M0037600
 1300 CONTINUE                                                          M0037700
 1600 VMAX=SSCAN(J11+9)-1.D0                                            M0037800
      IF(UVE.EQ.1.D30) UVE=VMAX                                         M0037900
C                                                                       M0038000
C  PRESET >NSEG< AND >LSEG< TO ZERO FOR REGION/OFF CASE                 M0038100
      NSEG=0                                                            M0038200
      LSEG=0                                                            M0038300
C  COMPUTE THE SEGMENTS                                                 M0038400
      IF(REGFLS.EQ.0)GOTO 1604                                          M0038500
      CALL NUMVER(UVCONS,UVA,UVCONS,UVE,ADRESS,UV,NSEG)                 M0038600
      LDAFLG=3                                                          M0038700
      CALL APT094(LDAFLG,ADRESS,J11)                                    M0038800
      J11=J11-41                                                        M0038900
      IF(NSEG.EQ.0)GOTO 1552                                            M0039000
      IF(INVERS.EQ.1)GOTO 1602                                          M0039100
C                                                                       M0039200
C  PREPARATION OF REGION SEGMENT CUTS                                   M0039300
      ISEG=1                                                            M0039400
 1601 UVCONS=UV(1,ISEG)                                                 M0039500
      UVA   =UV(2,ISEG)                                                 M0039600
      UVE   =UV(4,ISEG)                                                 M0039700
      LSEG=3                                                            M0039800
      IF(ISEG.EQ.1)LSEG=1                                               M0039900
      ISEG=ISEG+1                                                       M0040000
      NSEG=NSEG-1                                                       M0040100
      GOTO 1604                                                         M0040200
C                                                                       M0040300
C  PREPARATION OF INVERS REGION SEGMENT CUTS                            M0040400
 1602 ISEG=NSEG                                                         M0040500
      NNSEG=NSEG                                                        M0040600
 1603 UVCONS=UV(1,ISEG)                                                 M0040700
      UVA   =UV(2,ISEG)                                                 M0040800
      UVE   =UV(4,ISEG)                                                 M0040900
      LSEG=2                                                            M0041000
      IF(ISEG.EQ.NNSEG)LSEG=4                                           M0041100
      ISEG=ISEG-1                                                       M0041200
      NSEG=NSEG-1                                                       M0041300
 1604 CONTINUE                                                          M0041400
      VA=DMAX1(.0D0,UVA)                                                M0041500
      VE=DMIN1(UVE,VMAX)                                                M0041600
C                                                                       M0041700
C  COMPUTING OF A CUT-NUMBER WITHOUT REST                               M0041800
      IANZ=(VE-VA)/TOL                                                  M0041900
      ANZ=IANZ                                                          M0042000
      IF(IANZ.EQ.0) ANZ=1.D0                                            M0042100
      ANZ=ANZ-.0001                                                     M0042200
      TOLI=(VE-VA)/ANZ                                                  M0042300
C                                                                       M0042400
C  INVERS ?                                                             M0042500
      IF(INVERS.EQ.1) GOTO 1650                                         M0042600
C                                                                       M0042700
C  CUTTER PATH INTRODUCTION                                             M0042800
      IF(LSEG.EQ.0)LSEG=1                                               M0042900
      ICL=2                                                             M0043000
      IF(UVA.EQ.UVE)ICL=3                                               M0043100
      CALL GORETR(LSEG,UVCONS,UVA,SPV,J11,IRET)                         M0043200
C                                                                       M0043300
C  NOT   INVERS                                                         M0043400
      IF(VA.GE.VE) GOTO 1605                                            M0043500
      IF(UVA.GE.0.D0) GOTO 1620                                         M0043600
 1605 CALL GOP(2,UVCONS,UVA,SPV,J11,IRET)                               M0043700
      IF(VA.GE.VE) GOTO 1640                                            M0043800
 1620 IF(INCR.EQ.1) GOTO 1621                                           M0043900
C                                                                       M0044000
C  OUTPUT OF POINTS UNDER CONTROL OF CHORD                              M0044100
      CALL GOCHOR (2,VA,VE,J11,IRET)                                    M0044200
      GO TO 1622                                                        M0044300
C                                                                       M0044400
C  MOVEMENTS WITH 'INCR'                                                M0044500
 1621 CALL GOP(2,UVCONS,VA,SPV,J11,IRET)                                M0044600
      VA=VA+TOLI                                                        M0044700
      IF(VA.LT.VE) GOTO 1621                                            M0044800
 1622 IF(VE.EQ.UVE) ICL=3                                               M0044900
      CALL GOP(2,UVCONS,VE,SPV,J11,IRET)                                M0045000
      IF(VE.EQ.UVE) GOTO 1550                                           M0045100
 1640 IF(ICL.EQ.3) GOTO 1550                                            M0045200
      ICL=3                                                             M0045300
      CALL GOP(2,UVCONS,UVE,SPV,J11,IRET)                               M0045400
      GOTO 1550                                                         M0045500
C                                                                       M0045600
C  INVERS                                                               M0045700
C                                                                       M0045800
C  CUTTER PATH INTRODUCTION                                             M0045900
 1650 IF(LSEG.EQ.0)LSEG=4                                               M0046000
      ICL=2                                                             M0046100
      IF(UVA.EQ.UVE)ICL=3                                               M0046200
      CALL GORETR(LSEG,UVCONS,UVE,SPV,J11,IRET)                         M0046300
      IF(VA.GE.VE) GOTO 1655                                            M0046400
      IF(UVE.LE.VMAX) GOTO 1670                                         M0046500
 1655 CALL GOP(2,UVCONS,UVE,SPV,J11,IRET)                               M0046600
      IF(VA.GE.VE) GOTO 1690                                            M0046700
 1670 IF(INCR.EQ.1) GOTO 1671                                           M0046800
C                                                                       M0046900
C  OUTPUT OF POINTS UNDER CONTROL OF CHORD                              M0047000
      CALL GOCHOR (3,VE,VA,J11,IRET)                                    M0047100
      GO TO 1672                                                        M0047200
C                                                                       M0047300
C  MOVEMENT WITH 'INCR'                                                 M0047400
 1671 CALL GOP(2,UVCONS,VE,SPV,J11,IRET)                                M0047500
      VE=VE-TOLI                                                        M0047600
      IF(VA.LT.VE) GOTO 1671                                            M0047700
 1672 IF(VA.EQ.UVA) ICL=3                                               M0047800
      CALL GOP(2,UVCONS,VA,SPV,J11,IRET)                                M0047900
      IF(VA.EQ.UVA) GOTO 1550                                           M0048000
 1690 IF(ICL.EQ.3) GOTO 1550                                            M0048100
      ICL=3                                                             M0048200
      CALL GOP(2,UVCONS,UVA,SPV,J11,IRET)                               M0048300
C                                                                       M0048400
C  RETRACT AT END OF SEGMENT                                            M0048500
 1550 IF(INVERS.EQ.1)GOTO 1551                                          M0048600
      LSEG=2                                                            M0048700
      IF(NSEG.EQ.0)LSEG=4                                               M0048800
      CALL GORETR(LSEG,UVCONS,UVE,SPV,J11,IRET)                         M0048900
      IF(NSEG.NE.0)GOTO 1601                                            M0049000
      GOTO 1552                                                         M0049100
 1551 LSEG=3                                                            M0049200
      IF(NSEG.EQ.0)LSEG=1                                               M0049300
      CALL GORETR(LSEG,UVCONS,UVA,SPV,J11,IRET)                         M0049400
      IF(NSEG.NE.0)GOTO 1603                                            M0049500
 1552 IF(IART.NE.5) GOTO 999                                            M0049600
      INVERS=INVERS+INVER1                                              M0049700
      INVER1=-INVER1                                                    M0049800
      UVCONS=UVCONS+DELTUV                                              M0049900
      IF(UVCONS.LE.UMX) GOTO 1300                                       M0050000
      NU=-1                                                             M0050100
      GOTO 1500                                                         M0050200
C                                                                       M0050300
C  PLOTTING OR MANUFACTURING WITH VCONST                                M0050400
 1400 CONTINUE                                                          M0050500
 1700 UMX=SSCAN(J11+10)-1.D0                                            M0050600
      IF(UVE.EQ.1.D30) UVE=UMX                                          M0050700
C                                                                       M0050800
C  PRESET >NSEG< AND >LSEG< TO ZERO FOR REGION/OFF CASE                 M0050900
      NSEG=0                                                            M0051000
      LSEG=0                                                            M0051100
C  COMPUTE THE SEGMENTS                                                 M0051200
      IF(REGFLS.EQ.0)GOTO 1704                                          M0051300
      CALL NUMVER(UVA,UVCONS,UVE,UVCONS,ADRESS,UV,NSEG)                 M0051400
      LDAFLG=3                                                          M0051500
      CALL APT094(LDAFLG,ADRESS,J11)                                    M0051600
      J11=J11-41                                                        M0051700
      IF(NSEG.EQ.0)GOTO 1562                                            M0051800
      IF(INVERS.EQ.1)GOTO 1702                                          M0051900
C                                                                       M0052000
C  PREPARATION OF REGION SEGMENT CUTS                                   M0052100
      ISEG=1                                                            M0052200
 1701 UVCONS=UV(2,ISEG)                                                 M0052300
      UVA   =UV(1,ISEG)                                                 M0052400
      UVE   =UV(3,ISEG)                                                 M0052500
      LSEG=3                                                            M0052600
      IF(ISEG.EQ.1)LSEG=1                                               M0052700
      ISEG=ISEG+1                                                       M0052800
      NSEG=NSEG-1                                                       M0052900
      GOTO 1704                                                         M0053000
C                                                                       M0053100
C  PREPARATION OF INVERS REGION SEGMENT CUTS                            M0053200
 1702 ISEG=NSEG                                                         M0053300
      NNSEG=NSEG                                                        M0053400
 1703 UVCONS=UV(2,ISEG)                                                 M0053500
      UVA   =UV(1,ISEG)                                                 M0053600
      UVE   =UV(3,ISEG)                                                 M0053700
      LSEG=2                                                            M0053800
      IF(ISEG.EQ.NNSEG)LSEG=4                                           M0053900
      ISEG=ISEG-1                                                       M0054000
      NSEG=NSEG-1                                                       M0054100
 1704 CONTINUE                                                          M0054200
      UA=DMAX1(.0D0,UVA)                                                M0054300
      UE=DMIN1(UVE,UMX)                                                 M0054400
C                                                                       M0054500
C  COMPUTATION OF THE CUT-NUMBER WITHOUT REST                           M0054600
      IANZ=(UE-UA)/TOL                                                  M0054700
      ANZ=IANZ                                                          M0054800
      IF(IANZ.EQ.0) ANZ=1.D0                                            M0054900
      ANZ=ANZ-.0001                                                     M0055000
      TOLI=(UE-UA)/ANZ                                                  M0055100
C                                                                       M0055200
C  INVERS ?                                                             M0055300
      IF(INVERS.EQ.1) GOTO 1750                                         M0055400
C                                                                       M0055500
C  CUTTER PATH INTRODUCTION                                             M0055600
      IF(LSEG.EQ.0)LSEG=1                                               M0055700
      ICL=2                                                             M0055800
      IF(UVA.EQ.UVE)ICL=3                                               M0055900
      CALL GORETR(LSEG,UVA,UVCONS,SPV,J11,IRET)                         M0056000
C                                                                       M0056100
C  NOT  INVERS                                                          M0056200
      IF(UA.GE.UE) GOTO 1705                                            M0056300
      IF(UVA.GE.0.D0) GOTO 1720                                         M0056400
 1705 CALL GOP(2,UVA,UVCONS,SPV,J11,IRET)                               M0056500
      IF(UA.GE.UE) GOTO 1740                                            M0056600
 1720 IF(INCR.EQ.1) GOTO 1721                                           M0056700
C                                                                       M0056800
C  OUTPUT OF POINTS UNDER CONTROL OF CHORD                              M0056900
      CALL GOCHOR (4,UA,UE,J11,IRET)                                    M0057000
      GO TO 1722                                                        M0057100
C                                                                       M0057200
C  MOVEMENT WITH 'INCR'                                                 M0057300
 1721 CALL GOP(2,UA,UVCONS,SPV,J11,IRET)                                M0057400
      UA=UA+TOLI                                                        M0057500
      IF(UA.LT.UE) GOTO 1721                                            M0057600
 1722 IF(UE.EQ.UVE)ICL=3                                                M0057700
      CALL GOP(2,UE,UVCONS,SPV,J11,IRET)                                M0057800
      IF(UE.EQ.UVE) GOTO 1560                                           M0057900
 1740 IF(ICL.EQ.3) GOTO 1560                                            M0058000
      ICL=3                                                             M0058100
      CALL GOP(2,UVE,UVCONS,SPV,J11,IRET)                               M0058200
      GOTO 1560                                                         M0058300
C                                                                       M0058400
C  INVERS                                                               M0058500
C                                                                       M0058600
C  CUTTER PATH INTRODUCTION                                             M0058700
 1750 IF(LSEG.EQ.0)LSEG=4                                               M0058800
      ICL=2                                                             M0058900
      IF(UVA.EQ.UVE)ICL=3                                               M0059000
      CALL GORETR(LSEG,UVE,UVCONS,SPV,J11,IRET)                         M0059100
      IF(UA.GE.UE) GOTO 1755                                            M0059200
      IF(UVE.LE.UMX) GOTO 1770                                          M0059300
 1755 CALL GOP(2,UVE,UVCONS,SPV,J11,IRET)                               M0059400
      IF(UA.GE.UE) GOTO 1790                                            M0059500
 1770 IF(INCR.EQ.1) GOTO 1771                                           M0059600
C                                                                       M0059700
C  OUTPUT OF POINTS UNDER CONTROL OF CHORD                              M0059800
      CALL GOCHOR (5,UE,UA,J11,IRET)                                    M0059900
      GO TO 1772                                                        M0060000
C                                                                       M0060100
C  MOVEMENT WITH 'INCR'                                                 M0060200
 1771 CALL GOP(2,UE,UVCONS,SPV,J11,IRET)                                M0060300
      UE=UE-TOLI                                                        M0060400
      IF(UA.LT.UE) GOTO 1771                                            M0060500
 1772 IF(UA.EQ.UVA) ICL=3                                               M0060600
      CALL GOP(2,UA,UVCONS,SPV,J11,IRET)                                M0060700
      IF(UA.EQ.UVA) GOTO 1560                                           M0060800
 1790 IF(ICL.EQ.3) GOTO 1560                                            M0060900
      ICL=3                                                             M0061000
      CALL GOP(2,UVA,UVCONS,SPV,J11,IRET)                               M0061100
C                                                                       M0061200
C  RETRACT AT END OF SEGMENT                                            M0061300
 1560 IF(INVERS.EQ.1)GOTO 1561                                          M0061400
      LSEG=2                                                            M0061500
      IF(NSEG.EQ.0)LSEG=4                                               M0061600
      CALL GORETR(LSEG,UVE,UVCONS,SPV,J11,IRET)                         M0061700
      IF(NSEG.NE.0)GOTO 1701                                            M0061800
      GOTO 1562                                                         M0061900
 1561 LSEG=3                                                            M0062000
      IF(NSEG.EQ.0)LSEG=1                                               M0062100
      CALL GORETR(LSEG,UVA,UVCONS,SPV,J11,IRET)                         M0062200
      IF(NSEG.NE.0)GOTO 1703                                            M0062300
 1562 IF(IART.NE.5) GOTO 999                                            M0062400
      INVERS=INVERS+INVER1                                              M0062500
      INVER1=-INVER1                                                    M0062600
      UVCONS=UVCONS+DELTUV                                              M0062700
      IF(UVCONS.LE.VMAX) GOTO 1400                                      M0062800
      NV=-1                                                             M0062900
      GOTO 999                                                          M0063000
C                                                                       M0063100
C  DIRECTION OF MOVEMENT                                                M0063200
  999 DO 2000 I=1,3                                                     M0063300
 2000 TEMP(I)=TE(I)-TEK(I)                                              M0063400
      CALL VNORM(TEMP,TI)                                               M0063500
      IGOTO=0                                                           M0063600
      IF(IER.GT.0) GOTO 998                                             M0063700
      IF(DABS(TI(1)*TA(1)+TI(2)*TA(2)+TI(3)*TA(3)).GT..997D0) GOTO 998  M0063800
      DO 2010 I=1,3                                                     M0063900
 2010 PMOVE(I)=TI(I)                                                    M0064000
C                                                                       M0064100
C                                                                       M0064200
C  POINT IS OUTSIDE OF THE U/V PARAMETERS OF THE PATCH.                 M0064300
      IF(IRET.EQ.2) CALL AERR(22220,'GOL     ')                         M0064400
C                                                                       M0064500
C   RESTURE GLOBAL REGION FLAG                                          M0064600
  998 REGFLG=REGFLS                                                     M0064700
      RETURN                                                            M0064800
      END                                                               M0064900
**** SOURCE FILE : M0012104.V05   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE GOLOFT                                M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE GOLOFT                                        M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    ALARM           SUBROUTINE    PRO026           M0000800
C          SUBROUTINE    ARGCVT                                         M0000900
C          SUBROUTINE    BINBCD                                         M0001000
C          SUBROUTINE    CALLZZ                                         M0001100
C          SUBROUTINE    CONCAT                                         M0001200
C          INTEGER FCT.  NUMB                                           M0001300
C          SUBROUTINE    ONEARG                                         M0001400
C          SUBROUTINE    OPCODE                                         M0001500
C          SUBROUTINE    RLSLIN                                         M0001600
C          INTEGER FCT.  SEARCH                                         M0001700
C          SUBROUTINE    TWOARG                                         M0001800
C                                                                       M0001900
      SUBROUTINE GOLOFT                                                 M0002000
C                                                                       M0002100
      IMPLICIT INTEGER (A-Z)                                            M0002200
C                                                                       M0002300
C                                                                       M0002400
C        1.    NAME TABLE AND TABLE LIMITS                              M0002500
C                                                                       M0002600
      INCLUDE 'NAMETB.INC'                                              M0002700
C NAMMAX:      NAMTBL INDEX OF THE PART PROGRAM NAME SECTION            M0002900
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0003100
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0003150
C                                                                       M0003300
C        2.    STACK AND POINTER STORAGE                                M0003400
C                                                                       M0003500
      COMMON/STKLST/STKLST                                              M0003600
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      M0003700
C TOP:         POINTER TO LAST STACK ENTRY                              M0003800
      EQUIVALENCE (TOP,STKLST(1))                                       M0003900
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             M0004000
      EQUIVALENCE (ARGTOP,STKLST(2))                                    M0004100
C STACK:       WORKING STACK                                            M0004200
      EQUIVALENCE (STACK(1,1),STKLST(4))                                M0004300
C ARGSTK:      ARGUMENT STACK                                           M0004400
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               M0004500
C                                                                       M0004600
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0004700
C                                                                       M0004800
      COMMON/CODE/CODE                                                  M0004900
      DIMENSION CODE(150),NUMBER(2),TEMP(2),PERMID(2),VBL(2),IDENT(2)   M0005000
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        M0005100
      EQUIVALENCE (NUMBER(1),CODE(27))                                  M0005200
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0005300
      EQUIVALENCE (TEMP(1),CODE(33))                                    M0005400
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        M0005500
      EQUIVALENCE (PERMID(1),CODE(39))                                  M0005600
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        M0005700
      EQUIVALENCE (VBL(1),CODE(61))                                     M0005800
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        M0005900
      EQUIVALENCE (IDENT(1),CODE(69))                                   M0006000
C                                                                       M0006100
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         M0006200
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    M0006300
      COMMON/TMP/TXXXX                                                  M0006400
      DIMENSION TXXXX(2,32)                                             M0006500
C                                                                       M0006600
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      M0006700
C                                                                       M0006800
      COMMON/BCDPTR/BCDPTR                                              M0006900
      DIMENSION BCDPTR(7)                                               M0007000
C DOTTAB:      NAMTBL POINTER TO ALPHAMERIC LITERAL '$$TAB'             M0007100
      EQUIVALENCE (DOTTAB,BCDPTR(7))                                    M0007200
C                                                                       M0007300
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           M0007400
C                                                                       M0007500
      INCLUDE 'GMTY.INC'                                                M0007600
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            M0007800
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  M0008000
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    M0008200
C                                                                       M0008400
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    M0008500
C                                                                       M0008600
      COMMON/CFSIZE/CFSIZE                                              M0008700
      DIMENSION CFSIZE(205),MAXSIZ(2)                                   M0008800
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                M0008900
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 M0009000
C                                                                       M0009100
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0009200
C                                                                       M0009300
      COMMON/IL/IL                                                      M0009400
      DIMENSION IL(21)                                                  M0009500
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              M0009600
      EQUIVALENCE (REPL,IL(17))                                         M0009700
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              M0009800
      EQUIVALENCE (MOVE,IL(19))                                         M0009900
C                                                                       M0010000
C       17.    MODE CODES                                               M0010100
C                                                                       M0010200
      COMMON/MODX/MODX                                                  M0010300
      DIMENSION MODX(32)                                                M0010400
C REAL:        MODE CODE (21) FOR A SCALAR                              M0010500
      EQUIVALENCE (REAL,MODX(21))                                       M0010600
C SCURV:       MODE CODE (30) FOR SCULPTURED CURVE                      M0010700
      EQUIVALENCE (SCURV,MODX(30))                                      M0010800
C                                                                       M0010900
C       27.    OPERAND MODIFIERS                                        M0011000
C                                                                       M0011100
      COMMON/OPMOD/OPMOD                                                M0011200
      DIMENSION OPMOD(6)                                                M0011300
C DLR:         CONTAINS OPERAND TYPE CODE 1                             M0011400
      EQUIVALENCE (DLR,OPMOD(2))                                        M0011500
C                                                                       M0011600
C       28.    OPERAND MODIFIERS                                        M0011700
C                                                                       M0011800
      COMMON/SUBLST/SUBLST                                              M0011900
      DIMENSION SUBLST(135),APTXXX(120)                                 M0012000
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            M0012100
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 M0012200
C                                                                       M0012300
C       29.    CLASS CODE MODULI                                        M0012400
C                                                                       M0012500
      COMMON/MODULI/MODULI                                              M0012600
      DIMENSION MODULI(2)                                               M0012700
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0012800
      EQUIVALENCE (MODULO,MODULI(1))                                    M0012900
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0013000
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0013100
C*                                                                      M0013200
      DIMENSION LENGTH(42)                                              M0013300
      CHARACTER IBUFF*15,BLANK*8                                        M0013310
      CHARACTER*6 PLFT,UC,VC,FLW                                        M0013320
      DATA PLFT,UC,VC,FLW/'PLOTFT','UCONST','VCONST','FLOW  '/          M0013400
      DATA BLANK/'        '/                                            M0013410
      DATA LENGTH/3,7,6,6,5,3,4,7,5,6,3,5,4,2,3,2,8,6,6,6,4,            M0013500
     *            4,4,1,7,5,5,5,3,8,6,7,5,7,5,6,4,6,4,5,3,2/            M0013600
C**                                                                     M0013700
C     PREPARE MODES AND PERMANENT IDENTIFIERS OF THE ARGSTK ARGUMENTS   M0013800
C          AND MOVE THEM TO STACK(2,TOP+1) AND HIGHER ADDR.             M0013900
C                                                                       M0014000
      IF(ARGTOP.LT.1)GOTO 4000                                          M0014100
      TP=TOP+1                                                          M0014200
      STACK(2,TP)=-1                                                    M0014300
      DO 40 ERRPT=1,ARGTOP                                              M0014400
      NN=0                                                              M0014500
      J=ARGSTK(ERRPT)                                                   M0014600
      IF(J.GT.NAMMAX)GOTO 20                                            M0014700
      CLASS=NAMTBL(J)/MODULO*MODULO                                     M0014800
      MM=NAMTBL(J)-CLASS                                                M0014900
      IF(MM.GT.MODHLF)MM=MM-MODHLF                                      M0015000
      IF(CLASS.NE.PERMID(1))GOTO 10                                     M0015100
      NN=50                                                             M0015200
      MM=MM+NN                                                          M0015300
      GOTO 30                                                           M0015400
   10 IF(CLASS.EQ.VBL(1).OR.CLASS.EQ.TEMP(1))GOTO 30                    M0015500
      IF(CLASS.NE.NUMBER(1))GOTO 4030                                   M0015600
   20 MM=REAL                                                           M0015700
   30 TP=TP+1                                                           M0015800
      STACK(1,TP)=MM-NN                                                 M0015900
   40 STACK(2,TP)=PMIDTB(MM)                                            M0016000
C                                                                       M0016100
C                                                                       M0016200
C     SEARCH FOR THE PRODUCTION NUMBER AND BRANCH                       M0016300
C                                                                       M0016400
      KK=ARGTOP                                                         M0016500
      LPROD=0                                                           M0016600
      FMT=1                                                             M0016700
      NN=GEOLOC(48)                                                     M0016800
   50 ERRPT=KK                                                          M0016900
      TP2=TP*2                                                          M0016950
      PROD=SEARCH(STACK,TP2,GEOMTB(NN),ERRPT)                           M0017000
C                                                                       M0017100
      IF(PROD.EQ.200)GOTO 4050                                          M0017200
      IF((KK-ERRPT).NE.LENGTH(PROD))GOTO 4090                           M0017300
C                                                                       M0017400
C                   PRODUCTION NUMBERS                                  M0017500
C             1    2    3    4    5    6    7    8    9   10   11   12  M0017600
      GOTO( 100, 200, 200, 200, 200, 200, 200, 300, 300, 300, 300, 300, M0017700
C            13   14   15   16   17   18   19   20   21   22   23   24  M0017800
     *      300, 300, 300, 400, 500, 400, 500, 500, 400, 400, 500, 600, M0017900
C            25   26   27   28   29   30   31   32   33   34   35   36  M0018000
     *      600, 600, 600, 600, 600, 700, 700, 800, 800, 700, 700, 800, M0018100
C            37   38   39   40   41   42                                M0018200
     *      800, 900, 900, 900, 900, 900),PROD                          M0018300
C                                                                       M0018400
C     GOLOFT/SSURF,UCONST,U,.............                               M0018500
C                                                                       M0018600
  100 FMT=6                                                             M0018700
      IF(CNAMTB(STACK(1,TOP-1)).NE.PLFT)GOTO 110                        M0018800
      FMT=3                                                             M0018900
      STACK(2,TP)=PMIDTB(SCURV)                                         M0019000
  110 IF(CNAMTB(ARGSTK(ARGTOP-1)).EQ.VC)FMT=FMT+1                       M0019100
      LPROD=1                                                           M0019200
      GOTO 2900                                                         M0019300
C                                                                       M0019400
  200 IF(FMT.LT.6)GOTO 4100                                             M0019500
      IF(LPROD.EQ.0.OR.LPROD.GE.PROD)GOTO 4070                          M0019600
      LPROD=7                                                           M0019700
      GOTO 2900                                                         M0019800
C                                                                       M0019900
  300 IF(FMT.LT.6)GOTO 4100                                             M0020000
      IF(LPROD.EQ.0.OR.LPROD.GE.PROD)GOTO 4070                          M0020100
      GOTO 3000                                                         M0020200
C                                  FLOW                                 M0020300
C     PLOTFT/SCURV,START,S,.......,PARAM,.....                          M0020400
C                                                                       M0020500
  400 JJ=1                                                              M0020600
      GOTO 510                                                          M0020700
C                                                                       M0020800
  500 JJ=3                                                              M0020900
  510 IF(CNAMTB(STACK(1,TOP-1)).NE.PLFT)GOTO 4100                       M0021000
      IF(CNAMTB(ARGSTK(JJ)).EQ.FLW)FMT=2                                M0021100
      GOTO 3000                                                         M0021200
C                                                                       M0021300
C     PLOTFT/SSURF,UCONST,U,START,S,.......                             M0021400
C     PLOTFT/SCURV,START,S,................                             M0021500
C                                                                       M0021600
  600 GOTO 3000                                                         M0021700
C                                                                       M0021800
C     PLOTFT/SSURF,GRID,...................                             M0021900
C                                                                       M0022000
  700 JJ=4                                                              M0022100
      GOTO 810                                                          M0022200
  800 JJ=3                                                              M0022300
  810 KK=ARGTOP-2                                                       M0022400
      IF(CNAMTB(ARGSTK(KK)).NE.UC)GOTO 4080                             M0022500
      KK=ARGTOP-JJ                                                      M0022600
      IF(CNAMTB(ARGSTK(KK)).NE.VC)GOTO 4080                             M0022700
  900 FMT=5                                                             M0022800
      IF(CNAMTB(STACK(1,TOP-1)).NE.PLFT)GOTO 4100                       M0022900
      GOTO 3000                                                         M0023000
C                                                                       M0023100
C     REDUCE STACK BY I                                                 M0023200
C                                                                       M0023300
 2900 IF(ERRPT.EQ.0)GOTO 3010                                           M0023400
      JJ=LENGTH(PROD)-1                                                 M0023500
      STACK(2,TP-JJ)=STACK(2,TP)                                        M0023600
      TP=TP-JJ                                                          M0023700
      KK=KK-JJ                                                          M0023800
      GOTO 50                                                           M0023900
C                                                                       M0024000
C     GENERATE I.L. OUTPUT                                              M0024100
C                                                                       M0024200
 3000 IF(ERRPT.GT.0)GOTO 4010                                           M0024300
 3010 TP=ARGTOP+TOP+1                                                   M0024400
      INDEX=-3                                                          M0024500
      JJ=ARGSTK(ARGTOP)                                                 M0024600
 3020 MM=STACK(1,TP)                                                    M0024700
      NN=ARGSTK(ARGTOP)                                                 M0024800
      I=1                                                               M0024900
      IBUFF(8:15)=BLANK                                                 M0025000
      CALL BINBCD(MM,IBUFF(4:),NCH)                                     M0025200
      WRITE (IBUFF(1:3),'(I3)') NCH                                     M0025210
      CALL CONCAT(IBUFF,'.')                                            M0025300
      J=NUMB(IBUFF(4:15))+NAMMAX                                        M0025400
      CALL OPCODE(MOVE)                                                 M0025500
      CALL TWOARG(INDEX,DOTTAB)                                         M0025600
      CALL TWOARG(DLR,J)                                                M0025700
      CALL RLSLIN                                                       M0025800
      INDEX=INDEX-1                                                     M0025900
      IF (NN.GT.NAMMAX) THEN                                            M0025910
        I=TXXXX(1,MM)                                                   M0025920
      ELSE                                                              M0025930
      IF(NAMTBL(NN)/MODULO*MODULO.NE.PERMID(1))I=TXXXX(1,MM)            M0026000
      ENDIF                                                             M0026010
      IF(I.EQ.12)I=1                                                    M0026100
      IF(I.GT.1)GOTO 3030                                               M0026200
      CALL OPCODE(MOVE)                                                 M0026300
      GOTO 3040                                                         M0026400
 3030 CALL OPCODE(REPL)                                                 M0026500
      CALL ONEARG(I)                                                    M0026600
 3040 CALL TWOARG(INDEX,DOTTAB)                                         M0026700
      CALL ARGCVT(NN)                                                   M0026800
      CALL RLSLIN                                                       M0026900
      INDEX=INDEX-I                                                     M0027000
      ARGTOP=ARGTOP-1                                                   M0027100
      TP=TP-1                                                           M0027200
      IF(ARGTOP.GT.0) GOTO 3020                                         M0027300
      DO 3050 KK=1,2                                                    M0027400
      IBUFF(8:15)=BLANK                                                 M0027500
      CALL BINBCD(FMT,IBUFF(4:),NCH)                                    M0027700
      WRITE (IBUFF(1:3),'(I3)') NCH                                     M0027710
      CALL CONCAT(IBUFF,'.')                                            M0027800
      J=NUMB(IBUFF(4:15))+NAMMAX                                        M0027900
      CALL OPCODE(MOVE)                                                 M0028000
      CALL TWOARG(-KK,DOTTAB)                                           M0028100
      CALL TWOARG(DLR,J)                                                M0028200
      CALL RLSLIN                                                       M0028300
 3050 FMT=-INDEX                                                        M0028400
      CALL CALLZZ(APTXXX(92))                                           M0028500
      CALL ARGCVT(STACK(1,TOP-1))                                       M0028600
      CALL ARGCVT(JJ)                                                   M0028700
C                                                                       M0028800
      NOWRDS=40+INDEX                                                   M0028900
      IF(NOWRDS .LE.MAXSIZ(2)) GOTO 3100                                M0029000
      IF(NOWRDS .GE.MAXSIZ(1)) GO TO 3090                               M0029100
C                                                                       M0029200
C     REPLACE MAXSIZ(2)                                                 M0029300
C                                                                       M0029400
      MAXSIZ(2)=NOWRDS                                                  M0029500
      GOTO 3100                                                         M0029600
C                                                                       M0029700
C     ADJUST BOTH MAXSIZ(1) AND (2)                                     M0029800
C                                                                       M0029900
 3090 MAXSIZ(2)=MAXSIZ(1)                                               M0030000
      MAXSIZ(1)=NOWRDS                                                  M0030100
C                                                                       M0030200
 3100 RETURN                                                            M0030300
C                                                                       M0030400
 4000 ERRPT=1-TOP                                                       M0030500
 4010 CALL ALARM(2052,-ERRPT,8,'GOLOFT  ')                              M0030600
      GOTO 3100                                                         M0030700
 4030 CALL ALARM(2021,-ERRPT,8,'GOLOFT  ')                              M0030800
      GOTO 3100                                                         M0030900
 4050 IF(ERRPT.LE.0)ERRPT=1                                             M0031000
 4060 CALL ALARM(2001,-ERRPT,8,'GOLOFT  ')                              M0031100
      GOTO 3100                                                         M0031200
 4070 ERRPT=KK-1                                                        M0031300
      GOTO 4060                                                         M0031400
 4080 ERRPT=KK                                                          M0031500
      GOTO 4060                                                         M0031600
 4090 ERRPT=ERRPT+1                                                     M0031700
      GOTO 4010                                                         M0031800
 4100 ERRPT=1-TOP                                                       M0031900
      GOTO 4060                                                         M0032000
C                                                                       M0032100
      END                                                               M0032200
**** SOURCE FILE : M0012236.V02   ***
*
      SUBROUTINE GOLOVO(ADRESS)                                         M0000100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000200
C                                                                       M0000300
C...  1.MAIN CDE PACKAGE. INCLUDED IN EVERY PROGRAM IN THE SUBROUTINE   M0000400
C...    LIBRARY.                                                        M0000500
C                                                                       M0000600
      INCLUDE 'TOTAL.INC'                                               M0000700
C                                                                       M0001500
      INCLUDE 'ISV.INC'                                                 M0001600
C                                                                       M0001800
      INCLUDE 'FXCOR.INC'                                               M0002100
C                                                                       M0002400
      INCLUDE 'IFXCOR.INC'                                              M0002500
C                                                                       M0002900
      INCLUDE 'BLANKCOM.INC'                                            M0003000
C                                                                       M0003100
      DOUBLE PRECISION HMOD,WORD                                        M0003200
      INTEGER IWORD(2)                                                  M0003210
      EQUIVALENCE (WORD,IWORD(1))                                       M0003220
C                                                                       M0003300
      COMMON/PLGOL/ID(26)                                               M0003400
C                                                                       M0003500
C UVCONS: U-, V- CONSTANTS, GIVEN BY "UCONST,U" OR "VCONST,V"           M0003600
      EQUIVALENCE (ID( 1),UVCONS)                                       M0003700
C    UVA: START PARAMETER GIVEN BY "START,S"                            M0003800
      DIMENSION UVA(2)                                                  M0003850
      EQUIVALENCE (ID( 3),UVA(1))                                       M0003900
C    UVE: END PARAMETER GIVEN BY "THRU,T"                               M0004000
      EQUIVALENCE (ID( 5),UVE   )                                       M0004100
C    TOL: INCREMENTS BY "INCR,I", ERROR OF CHORD BY "CHORD,C"           M0004200
      EQUIVALENCE (ID( 7),TOL   )                                       M0004300
C     VL: LENGTH-PARAMETER GIVEN BY "LENGTH,L"                          M0004400
      EQUIVALENCE (ID( 9),VL    )                                       M0004500
C     NU: AMOUNT OF INTERMEDIATE LINES IN DIRECTION    UCONST           M0004600
      EQUIVALENCE (ID(11),NU    )                                       M0004700
C     NV: AMOUNT OF INTERMEDIATE LINES IN DIRECTION    VCONST           M0004800
      EQUIVALENCE (ID(12),NV    )                                       M0004900
C IART:      IART = 1   PLOTFT/SCURV,.........,PARAM,....               M0005000
C            IART = 2   PLOTFT/SCURV,.........,FLOW ,....               M0005100
C            IART = 3   PLOTFT/SSURF,UCONST,U,...........               M0005200
C            IART = 4   PLOTFT/SSURF,VCONST,V,...........               M0005300
C            IART = 5   PLOTFT/SSURF,GRID,...............               M0005400
C            IART = 6   GOLOFT/SSURF,UCONST,U,...........               M0005500
C            IART = 7   GOLOFT/SSURF,VCONST,V,...........               M0005600
      EQUIVALENCE (ID(13),IART  )                                       M0005700
C INVERS: INVERT THE TRAVEL DIRECTION IF =1                             M0005800
      EQUIVALENCE (ID(14),INVERS)                                       M0005900
C MIRROR: INVERT NORMAL DIRECTION IF =1                                 M0006000
      EQUIVALENCE (ID(15),MIRROR)                                       M0006100
C NORMAL: TAKE THE SURFACE NORMAL AS TOOL AXIS IF =1                    M0006200
      EQUIVALENCE (ID(16),NORMAL)                                       M0006300
C   INCR: =1 IF "INCR,I", =0 IF "CHORD,C" GIVEN                         M0006400
C           CURVATURE CALCULATION NECESSARY IF NOT =1                   M0006450
      EQUIVALENCE (ID(17),INCR  )                                       M0006500
C    IAT: IAT   = 0 AT NOT PROGRAMMED                                   M0006600
C         IAT   = 1 AT   "AT,A",        = 2 AT   "AT,TO,PL1"            M0006700
C         IAT   = 3 AT   "AT,ON,PL1,    = 4 AT   "AT,PAST,PL1           M0006800
      EQUIVALENCE (ID(18),IAT   )                                       M0006900
C  ISTRT: ISTRT = 0 START NOT PROGRAMMED                                M0007000
C         ISTRT = 1 AT   "START,A",     = 2 AT   "START,TO,PL1"         M0007100
C         ISTRT = 3 AT   "START,ON,PL1, = 4 AT   "START,PAST,PL1        M0007200
      EQUIVALENCE (ID(19),ISTRT )                                       M0007300
C  ITHRU: ITHRU = 0 THRU NOT PROGRAMMED                                 M0007400
C         ITHRU = 1 AT   "THRU,A",      = 2 AT   "THRU,TO,PL1"          M0007500
C         ITHRU = 3 AT   "THRU,ON,PL1,  = 4 AT   "THRU,PAST,PL1         M0007600
      EQUIVALENCE (ID(20),ITHRU )                                       M0007700
C   IPL1: CF-BEGIN OF THE "AT" OR "START" PLANE IN THE ARRAY SSCAN      M0007800
      EQUIVALENCE (ID(21),IPL1  )                                       M0007900
C   IPL2: CF-BEGIN OF THE "THRU" PLANE IN THE ARRAY SSCAN               M0008000
      EQUIVALENCE (ID(22),IPL2  )                                       M0008100
C  ISCAN: FIRST FREE LOCATION IN SSCAN AFTER GOLOFT DATA                M0008200
      EQUIVALENCE (ID(23),ISCAN )                                       M0008300
C                                                                       M0008310
      LOGICAL CKDEF                                                     M0008320
      DIMENSION JART(3),ADRESS(1)                                       M0008330
      EQUIVALENCE(JART(1),IAT)                                          M0008340
C                                                                       M0008350
      CHARACTER*6 TEST,UCONST,VCONST,START,THRU,AT,TO,ON,PAST,PARAM,    M0008360
     +            FLOW,RINCR,CHORD,RMIROR,RINVRS,RLENGT                 M0008365
      LOGICAL FIRST                                                     M0008370
      INTEGER BCDF                                                      M0008375
      SAVE FIRST,HMOD                                                   M0008380
C                                                                       M0008400
      DATA UCONST/'UCONST'/,   VCONST/'VCONST'/,   START /'START '/     M0008500
      DATA THRU  /'THRU  '/,   AT    /'AT    '/,   TO    /'TO    '/     M0008600
      DATA ON    /'ON    '/,   PAST  /'PAST  '/,   PARAM /'PARAM '/     M0008700
      DATA FLOW  /'FLOW  '/,   RINCR /'INCR  '/,   CHORD /'CHORD '/     M0008800
      DATA RMIROR/'MIRROR'/,   RINVRS/'INVERS'/,   RLENGT/'LENGTH'/     M0008900
      DATA RLW /21./                                                    M0009000
      DATA FIRST/.TRUE./                                                M0009010
C                                                                       M0009310
      IF (FIRST) THEN                                                   M0009320
        IWORD(1)=BCDF('TO  ')                                           M0009330
        IWORD(2)=BCDF('    ')                                           M0009340
        HMOD=WORD                                                       M0009350
        FIRST=.FALSE.                                                   M0009360
      ENDIF                                                             M0009370
C                                                                       M0009400
      IF(CKDEF(ADRESS)) GOTO 170                                        M0009500
C  INITIALIZE PART SURFACE                                              M0009600
      IS=IPS                                                            M0009700
      CALL APT234(HMOD,ADRESS)                                          M0009800
      UVA(1)=-1.D30                                                     M0009900
      UVE   = 1.D30                                                     M0010000
      TOL=.05                                                           M0010100
C  USE OF MAXDP/DPMAX,... AS DEFAULT                                    M0010200
      VL=DPMAX                                                          M0010300
      NU=-1                                                             M0010400
      NV=-1                                                             M0010500
      DO 1 I=14,22                                                      M0010600
    1 ID(I)=0                                                           M0010700
      INCR=1                                                            M0010800
      IF(GAMMA.NE.0.D0.OR.NUMAX.NE.1)GOTO 5                             M0010900
      IF(DABS(ALP).EQ.0.D0)NORMAL=JTLFLG(IPS)                           M0011000
    5 IART=SSCAN(1)                                                     M0011100
      ISCAN=SSCAN(2)                                                    M0011200
      GOTO(45,45,20,20,30,10,10),IART                                   M0011300
   10 CALL HOLFRM(SSCAN(ISCAN-3),TEST,1,6,NWD)                          M0011400
      IF (TEST.NE.RLENGT)GOTO 20                                        M0011410
      VL=SSCAN(ISCAN-1)                                                 M0011500
      ISCAN=ISCAN-4                                                     M0011600
   20 UVCONS=SSCAN(9)                                                   M0011700
      ICUR=11                                                           M0011800
      GOTO 50                                                           M0011900
C                                                                       M0012000
   30 ICUR=9                                                            M0012100
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0012110
      IF(TEST.NE.UCONST)GOTO 40                                         M0012200
      ICUR=ICUR+2                                                       M0012300
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0012310
      NU=1                                                              M0012400
      IF(SSCAN(ICUR-1).NE.RLW)GOTO 40                                   M0012500
      NU=DABS(SSCAN(ICUR))                                              M0012600
      ICUR=ICUR+2                                                       M0012700
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0012710
   40 IF(TEST.NE.VCONST)GOTO 140                                        M0012800
      ICUR=ICUR+2                                                       M0012900
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0012910
      NV=1                                                              M0013000
      IF(SSCAN(ICUR-1).NE.RLW)GOTO 140                                  M0013100
      NV=DABS(SSCAN(ICUR))                                              M0013200
      ICUR=ICUR+2                                                       M0013300
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0013310
      GOTO 140                                                          M0013400
C                                                                       M0013500
   45 ICUR=7                                                            M0013600
   50 IF(ICUR.GE.ISCAN)GOTO 160                                         M0013700
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0013710
      IF(TEST.NE.AT)GOTO 60                                             M0013800
      K=1                                                               M0013900
      GOTO 80                                                           M0014000
   60 IF(TEST.NE.START)GOTO 70                                          M0014100
      K=2                                                               M0014200
      GOTO 80                                                           M0014300
   70 IF(TEST.NE.THRU)GOTO 120                                          M0014400
      K=3                                                               M0014500
C                                                                       M0014600
   80 ICUR=ICUR+2                                                       M0014700
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0014710
      JART(K)=1                                                         M0014800
      IF(SSCAN(ICUR-1).NE.RLW)GOTO 90                                   M0014900
      UVA(1+K/3)=SSCAN(ICUR)                                            M0015000
      ICUR=ICUR+2                                                       M0015100
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0015110
      GOTO 110                                                          M0015200
   90 IF(TEST.EQ.TO  )JART(K)=2                                         M0015300
      IF(TEST.EQ.ON  )JART(K)=3                                         M0015400
      IF(TEST.EQ.PAST)JART(K)=4                                         M0015500
      ICUR=ICUR+2                                                       M0015600
      IF(CKDEF(SSCAN(ICUR)))GOTO 170                                    M0015700
      ID(21+K/3)=ICUR                                                   M0015800
      ICUR=ICUR+5                                                       M0015900
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0015910
  110 IF(K.EQ.2)GOTO 70                                                 M0016000
C                                                                       M0016100
  120 IF(ICUR.GT.ISCAN)GOTO 160                                         M0016200
      IF(TEST.EQ.PARAM.OR.TEST.EQ.FLOW) THEN                            M0016300
        ICUR=ICUR+2                                                     M0016310
        CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                           M0016320
      ENDIF                                                             M0016330
      IF(TEST.NE.RINVRS)GOTO 130                                        M0016400
      ICUR=ICUR+2                                                       M0016500
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0016510
      INVERS=1                                                          M0016600
  130 IF(TEST.NE.RMIROR)GOTO 140                                        M0016700
      ICUR=ICUR+2                                                       M0016800
      CALL HOLFRM(SSCAN(ICUR),TEST,1,6,NWD)                             M0016810
      MIRROR=1                                                          M0016900
C                                                                       M0017000
  140 IF(TEST.EQ.RINCR)GOTO 150                                         M0017100
      IF(TEST.NE.CHORD)GOTO 160                                         M0017200
      INCR=0                                                            M0017300
  150 TOL=SSCAN(ICUR+2)                                                 M0017400
C                                                                       M0017500
  160 IF(IART.NE.5)GOTO 161                                             M0017600
      IF(NU.NE.-1.OR.NV.NE.-1)GOTO 161                                  M0017700
      NU=0                                                              M0017800
      NV=0                                                              M0017900
  161 CALL GOL(ADRESS)                                                  M0018000
      RETURN                                                            M0018100
  170 CALL AERR(5157,'GOLOVO  ')                                        M0018200
      IAERR=1                                                           M0018300
      RETURN                                                            M0018400
      END                                                               M0018500
**** SOURCE FILE : M0012238.V01   ***
*
      SUBROUTINE GOLPLN(J11,IRET)                                       M0000100
C                                                                       M0000200
C   ROUTINE TO TEST, IF A PLANE IS INVOLVED AND TO CALCULATE A UV VALUE M0000300
C                                                                       M0000400
C                                                                       M0000500
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000600
C                                                                       M0000700
C  CONTROL OF TEST-OUTPUT                                               M0000800
      COMMON/SSPRT/SSPRT,SSTEST                                         M0000900
      LOGICAL SSPRT,SSTEST                                              M0001000
C                                                                       M0001100
      COMMON/PLGOL/ID(24),OBNAM1                                        M0001200
C                                                                       M0001300
C UVCONS:    U-, V- CONSTANT, GIVEN AT  "UCONST,U" OR "VCONST,V"        M0001400
      EQUIVALENCE (ID( 1),UVCONS)                                       M0001500
C                                                                       M0001600
C UVA:       START-PRAMETER, GIVEN BY "START,S"                         M0001700
      EQUIVALENCE (ID( 3),UVA   )                                       M0001800
C                                                                       M0001900
C UVE:       END-PARAMETER, GIVEN BY "THRU,T"                           M0002000
      EQUIVALENCE (ID( 5),UVE   )                                       M0002100
C                                                                       M0002200
C IART:      IART = 1   PLOTFT/SCURV,.........,PARAM,....               M0002300
C            IART = 2   PLOTFT/SCURV,.........,FLOW ,....               M0002400
C            IART = 3   PLOTFT/SSURF,UCONST,U,...........               M0002500
C            IART = 4   PLOTFT/SSURF,VCONST,V,...........               M0002600
C            IART = 5   PLOTFT/SSURF,GRID,...............               M0002700
C            IART = 6   GOLOFT/SSURF,UCONST,U,...........               M0002800
C            IART = 7   GOLOFT/SSURF,VCONST,V,...........               M0002900
      EQUIVALENCE (ID(13),IART  )                                       M0003000
C                                                                       M0003100
C IAT:       IAT   = 0 : AT NOT PROGRAMMED                              M0003200
C            IAT   = 1 : AT   "AT,A",        = 2 AT   "AT,TO,PL1"       M0003300
C            IAT   = 3 : AT   "AT,ON,PL1,    = 4 AT   "AT,PAST,PL1      M0003400
C                                                                       M0003500
      EQUIVALENCE (ID(18),IAT   )                                       M0003600
C ISTRT:     ISTRT = 0 : START NOT PROGRAMMED                           M0003700
C            ISTRT = 1 : AT   "START,A",     = 2 AT   "START,TO,PL1"    M0003800
C            ISTRT = 3 : AT   "START,ON,PL1, = 4 AT   "START,PAST,PL1   M0003900
      EQUIVALENCE (ID(19),ISTRT )                                       M0004000
C                                                                       M0004100
C ITHRU:     ITHRU = 0 : THRU NOT PROGRAMMED                            M0004200
C            ITHRU = 1 : AT   "THRU,A",      = 2 AT   "THRU,TO,PL1"     M0004300
C            ITHRU = 3 : AT   "THRU,ON,PL1,  = 4 AT   "THRU,PAST,PL1    M0004400
      EQUIVALENCE (ID(20),ITHRU )                                       M0004500
C                                                                       M0004600
C IPL1:      CF-BEGIN OF THE "AT" OR "START" PLANE IN THE ARRAY SSCAN   M0004700
      EQUIVALENCE (ID(21),IPL1  )                                       M0004800
C                                                                       M0004900
C IPL2:      CF-BEGIN OF THE  "THRU" PLANE IN THE ARRAY SSCAN           M0005000
      EQUIVALENCE (ID(22),IPL2  )                                       M0005100
C                                                                       M0005200
C  COMMON TOTAL                                                         M0005300
      INCLUDE 'TOTAL.INC'                                               M0005400
      INCLUDE 'SV.INC'                                                  M0005700
C                                                                       M0005900
      INCLUDE 'IFXCOR.INC'                                              M0006000
C                                                                       M0006500
C  BLANK COMMON                                                         M0006600
      INCLUDE 'BLANKCOM.INC'                                            M0006700
C                                                                       M0006800
C  EVALUATION RESULTS                                                   M0006900
      DOUBLE PRECISION SPV(52)                                          M0007000
C                                                                       M0007100
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0007200
C                                                                       M0007300
C RETURN IF NOT >GOLOFT<                                                M0007400
      IF(IART.NE.6.AND.IART.NE.7) RETURN                                M0007500
C                                                                       M0007600
C LOOP OVER THE 3 POSSIBLE PLANE CONDITIONS: >AT<,>START<,>THRU<        M0007700
      DO 90 I=1,3                                                       M0007800
C                                                                       M0007900
C >AT< CONDITION                                                        M0008000
      IWAS=IAT                                                          M0008100
      IPL=IPL1                                                          M0008200
      IIC=ICS                                                           M0008300
      IF(I.EQ.1) GOTO 1                                                 M0008400
C                                                                       M0008500
C >START< CONDITION                                                     M0008600
      IWAS=ISTRT                                                        M0008700
      IF(I.EQ.2) GOTO 1                                                 M0008800
C                                                                       M0008900
C >THRU< CONDITION                                                      M0009000
      IWAS=ITHRU                                                        M0009100
      IPL=IPL2                                                          M0009200
      IIC=ICS+LSV1                                                      M0009300
C                                                                       M0009400
C WITH AT CONDITION,  SET THRU PARAMETER EQUAL START PARAMETER          M0009500
    1 IF(I.EQ.1.AND.IWAS.NE.0)UVE=UVA                                   M0009600
C                                                                       M0009700
C CHECK,  IF PLANE CONDITION                                            M0009800
      IF(IWAS.LT.2.OR.IWAS.GT.4) GOTO 90                                M0009900
C                                                                       M0010000
C PROLOG FOR >UCONST<                                                   M0010100
      IF(IART.NE.6) GOTO 10                                             M0010200
      U=UVCONS                                                          M0010300
      DU=0.D0                                                           M0010400
      UE=U                                                              M0010500
      V=0.D0                                                            M0010600
      DV=.5D0                                                           M0010700
      VE=SSCAN(J11+9)-1.D0                                              M0010800
      GOTO 20                                                           M0010900
C                                                                       M0011000
C PROLOG FOR >VCONST<                                                   M0011100
   10 U=0.D0                                                            M0011200
      DU=.5D0                                                           M0011300
      UE=SSCAN(J11+10)-1.D0                                             M0011400
      V=UVCONS                                                          M0011500
      DV=0.D0                                                           M0011600
      VE=V                                                              M0011700
C                                                                       M0011800
C COMPUTE PLANE ORIENTATION AND SWITCH IF NECESSARY                     M0011900
C  FIRST TOOL TIP IS INVESTIGATED                                       M0012000
   20 CALL GOP(1,U,V,SPV,J11,IRET)                                      M0012100
C                                                                       M0012200
C NORMALISATION OF INPUT PLANE                                          M0012300
      VLL=DSQRT(SSCAN(IPL)**2+SSCAN(IPL+1)**2+SSCAN(IPL+2)**2)          M0012400
      DO 21 J=1,4                                                       M0012500
   21 SSCAN(IPL+J-1)=SSCAN(IPL+J-1)/VLL                                 M0012600
C                                                                       M0012700
C DISTANCE OF FIRST POINT TO PLANE (DIST=AX+BY+CZ-D)                    M0012800
      DI  =SSCAN(IPL)*SPV(33)                                           M0012900
     *    +SSCAN(IPL+1)*SPV(34)                                         M0013000
     *    +SSCAN(IPL+2)*SPV(35)                                         M0013100
     *    -SSCAN(IPL+3)                                                 M0013200
C                                                                       M0013300
C INVERSION OF PLANE IF DISTANCE IS NEGETIVE                            M0013400
      IF(DI.GT.0.D0) GOTO 25                                            M0013500
      DO 22 J=1,4                                                       M0013600
   22 SSCAN(IPL+J-1)=-SSCAN(IPL+J-1)                                    M0013700
C                                                                       M0013800
C PRESET OLD DISTANCE                                                   M0013900
   25 CONTINUE                                                          M0014000
      CALL CPLDST(SPV,SSCAN(IPL),TH(IIC),IWAS,ODIST,IRET)               M0014100
      DIST=ODIST                                                        M0014200
      OU=U                                                              M0014300
      OV=V                                                              M0014400
      GOTO 35                                                           M0014500
C                                                                       M0014600
C FIND INTERSECTION (OUTER LOOP)                                        M0014700
C  OLD DISTANCE AND OLD PARAMETERS                                      M0014800
   30 ODIST=DIST                                                        M0014900
      OU=U                                                              M0015000
      OV=V                                                              M0015100
C                                                                       M0015200
C NEW PARAMETERS                                                        M0015300
      U=U+DU                                                            M0015400
      V=V+DV                                                            M0015500
      IF(U.GT.UE.OR.V.GT.VE) GOTO 80                                    M0015600
      CALL GOP(1,U,V,SPV,J11,IRET)                                      M0015700
      CALL CPLDST(SPV,SSCAN(IPL),TH(IIC),IWAS,DIST,IRET)                M0015800
C                                                                       M0015900
C  TOLERANCE INVESTIGATION (OUTTOL)                                     M0016000
   35 IF(DIST.GT.TAU1(IIC)) GOTO 30                                     M0016100
C                                                                       M0016200
C  INTOL:                                                               M0016300
      IF(DIST.GE.TAU2(IIC)) GOTO 50                                     M0016400
C                                                                       M0016500
C FIND INTERSECTION (INNER LOOP): NESTED INTERVALS                      M0016600
   40 UM=(OU+U)/2.D0                                                    M0016700
      VM=(OV+V)/2.D0                                                    M0016800
      CALL GOP(1,UM,VM,SPV,J11,IRET)                                    M0016900
      CALL CPLDST(SPV,SSCAN(IPL),TH(IIC),IWAS,DISTM,IRET)               M0017000
C                                                                       M0017100
C INSIDE OUTTOL TOLERANCE ?                                             M0017200
      IF(DISTM.LE.TAU1(IIC)) GOTO 45                                    M0017300
C NO                                                                    M0017400
      OU=UM                                                             M0017500
      OV=VM                                                             M0017600
      ODIST=DISTM                                                       M0017700
C                                                                       M0017800
C BREAK FOR UNLIMITED LOOP                                              M0017900
      IF(ODIST-DIST.LT.1.D-5) GOTO 50                                   M0018000
      GOTO 40                                                           M0018100
C                                                                       M0018200
C INSIDE INTOL TOLERANCE ?                                              M0018300
   45 IF(DIST.GE.TAU2(IIC)) GOTO 50                                     M0018400
C NO                                                                    M0018500
      U=UM                                                              M0018600
      V=VM                                                              M0018700
      DIST=DISTM                                                        M0018800
C                                                                       M0018900
C BREAK FOR UNLIMITED LOOP                                              M0019000
      IF(ODIST-DIST.LT.1.D-5) GOTO 50                                   M0019100
      GOTO 40                                                           M0019200
C                                                                       M0019300
C  ONE FINAL POINT FOUND                                                M0019400
   50 IF(IART.EQ.6.AND.I.NE.3) UVA=V                                    M0019500
      IF(IART.EQ.6.AND.I.EQ.3) UVE=V                                    M0019600
      IF(IART.EQ.7.AND.I.NE.3) UVA=U                                    M0019700
      IF(IART.EQ.7.AND.I.EQ.3) UVE=U                                    M0019800
      IF(I.EQ.1) IAT=1                                                  M0019900
C                                                                       M0020000
C WITH AT CONDITION,  SET THRU PARAMETER EQUAL START PARAMETER          M0020100
      IF(I.EQ.1) UVE=UVA                                                M0020200
      IF(I.EQ.2) ISTRT=1                                                M0020300
      IF(I.EQ.3) ITHRU=1                                                M0020400
      GOTO 90                                                           M0020500
C                                                                       M0020600
C NO INTERSECTION BETWEEN GOLOFT CUTTER PATH AND PLANE FOUND            M0020700
   80 CONTINUE                                                          M0020800
C                                                                       M0020900
C  POINT OUTSIDE OF U/V PARAMETERS OF THE PATCH                         M0021000
C                                                                       M0021100
C  POINT IS OUTSIDE OF THE U/V PARAMETERS OF THE PATCH.                 M0021200
      IF(SSTEST) CALL AERR(22220,'GOLPLN  ')                            M0021300
      IAERR=1                                                           M0021400
      IRET=MAX0(IRET,3)                                                 M0021500
      GOTO 90                                                           M0021600
C                                                                       M0021700
   90 CONTINUE                                                          M0021800
      RETURN                                                            M0021900
      END                                                               M0022000
**** SOURCE FILE : M0012240.V01   ***
*
      SUBROUTINE GOP(MOD,U,V,SPV,J11,IRET)                              M0000100
C                                                                       M0000200
C                                                                       M0000300
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000400
C                                                                       M0000500
      INCLUDE 'TOTAL.INC'                                               M0000600
      INCLUDE 'GLFLGS.INC'                                              M0001000
      INCLUDE 'FXCOR.INC'                                               M0001100
      INCLUDE 'SV.INC'                                                  M0001900
      INCLUDE 'IFXCOR.INC'                                              M0002010
      INCLUDE 'ISV.INC'                                                 M0002020
C                                                                       M0002100
C SS - ARELEM - COMMON                                                  M0002200
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0002300
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0002400
C                                                                       M0002500
C                                                                       M0004300
C  LENGTH OF PROJECTION OF NEW AXIS ON OLD AXIS                         M0004400
      DOUBLE PRECISION AL(2)                                            M0004500
C                                                                       M0004600
C  PAIRS OF SIN AND COSIN VALUES                                        M0004700
      DOUBLE PRECISION SIND(2),COSD(2)                                  M0004800
C                                                                       M0004900
C  TWO POSSIBLE TOOL AXIS IN 4 OR 5 AXIS CASE                           M0005000
      DOUBLE PRECISION AX(3,2)                                          M0005100
      DOUBLE PRECISION LEIT(9)                                          M0005200
      INTEGER ILEIT(18)                                                 M0005250
      EQUIVALENCE (LEIT(1),ILEIT(1))                                    M0005600
      DOUBLE PRECISION PENUP (5)                                        M0005800
      INTEGER IPENU(10)                                                 M0005850
      EQUIVALENCE (PENUP (1),IPENU(1))                                  M0006000
      DOUBLE PRECISION PENDWN(5)                                        M0006200
      INTEGER IPEND(10)                                                 M0006250
      EQUIVALENCE (PENDWN(1),IPEND(1))                                  M0006400
      DOUBLE PRECISION FEDRAT(5)                                        M0006600
      INTEGER IFEDR(10)                                                 M0006650
      EQUIVALENCE (FEDRAT(1),IFEDR(1))                                  M0006800
C                                                                       M0007000
C  OUTPUT-ARRAY OF THE HEADER                                           M0007100
      DOUBLE PRECISION MODF(7)                                          M0007200
      INTEGER IMODF(2,7)                                                M0007210
      EQUIVALENCE (MODF(1),IMODF(1,1))                                  M0007220
      CHARACTER*8 CMODF(7)                                              M0007230
C                                                                       M0007400
      COMMON/CCLEAR/ DIRMOT(3,4)                                        M0007500
     *              ,GOFEED(4)                                          M0007600
     *              ,GLFEED                                             M0007700
     *              ,REGLDA(2)                                          M0007800
     *              ,IRETRO(4)                                          M0007900
     *              ,IDIRMO(4)                                          M0008000
     *              ,ICANIN(4)                                          M0008100
     *              ,IFEEDF                                             M0008200
C                                                                       M0008300
C   GOLOFT/PLOTFT-COMMON                                                M0008400
C                                                                       M0008500
      DIMENSION ICSEG(10),NLIOCI(10)                                    M0008510
      DIMENSION COSAL(10),SINAL(10)                                     M0008520
      DIMENSION CUTY(10),CUTX(10),CUTL(10),VTA(3)                       M0008530
C                                                                       M0008540
      COMMON/PLGOL/ID(24),OBNAM1,JCSEG,NCSEG,ICSEG,NLIOCI,              M0008600
     *             COSAL,SINAL,                                         M0008700
     *             CUTY,CUTX,CUTL,VTA                                   M0008800
C     EQUIVALENCE (ID(1),UVCONS)                                        M0008900
C     EQUIVALENCE (ID(3),UVA)                                           M0009000
C     EQUIVALENCE (ID(5),UVE)                                           M0009100
C     EQUIVALENCE (ID(7),TOL)                                           M0009200
C     EQUIVALENCE (ID(9),VL)                                            M0009300
C     EQUIVALENCE (ID(11),NU)                                           M0009400
C     EQUIVALENCE (ID(12),NV)                                           M0009500
C                                                                       M0009600
C   IART: 1,2: PLOTING CURVES; 3,4: PLOTING SURFACE LINES               M0009700
C           5: PLOT SURF GRID; 6,7: SURFACE CUTTING                     M0009800
      EQUIVALENCE (ID(13),IART)                                         M0009900
C INVERS: INVERT THE TRAVEL DIRECTION IF =1                             M0010000
C     EQUIVALENCE (ID(14),INVERS)                                       M0010100
C MIRROR: INVERT NORMAL DIRECTION IF =1                                 M0010200
      EQUIVALENCE (ID(15),MIRROR)                                       M0010300
C NORMAL: TAKE THE SURFACE NORMAL AS TOOL AXIS IF =1                    M0010400
      EQUIVALENCE (ID(16),NORMAL)                                       M0010500
C   INCR: CURVATURE CALCULATION NECESSARY IF NOT =1                     M0010600
      EQUIVALENCE (ID(17),INCR)                                         M0010700
C                                                                       M0010800
C  JCSEG: USED CUTTER SEGMENT                                           M0010900
C  NCSEG: NUMBER OF VALID CUTTER SEGMENTS                               M0011200
C  ICSEG: CUTTER SEGMENT IN TLLDAT ARRAYS                               M0011500
C NLIOCI: NATURE OF SEGMENT                                             M0011800
C  COSAL: COMPONENTS OF SEGMENT AND UNIT NORMAL                         M0012100
C  SINAL: POINTING INTO THE CUTTER                                      M0012110
C   CUTY: DISTANCE PARALLEL TO THE CUTTER AXIS                          M0012500
C   CUTX: DISTANCE TO THE CUTTER AXIS                                   M0012800
C   CUTL: ELEMENT LENGTH                                                M0013100
C    VTA: VECTOR-COMPONENTS OF THE TOOL-AXIS-VECTOR                     M0013400
C                                                                       M0013600
C     BLANK-COMMON                                                      M0013700
      INCLUDE 'BLANKCOM.INC'                                            M0013800
C                                                                       M0013900
C SYSTEM - I/O NAMES                                                    M0014000
      INCLUDE 'SYMFIL.INC'                                              M0014100
C                                                                       M0014400
C   POINT STORAGE FOR TRANSFORMATION PURPOSE                            M0014500
      DOUBLE PRECISION PT(3),PT1(4)                                     M0014600
      EQUIVALENCE(PT1(2),PT(1))                                         M0014700
C   VECTOR STORAGE FOR TRANSFORMATION PURPOSE                           M0014800
      DOUBLE PRECISION VT0(3),VT1(4),VT2(3)                             M0014900
      EQUIVALENCE(VT1(2),VT0(1))                                        M0015000
C   MOTION DIRECTION AND CROSS VECTOR                                   M0015100
      DOUBLE PRECISION DM(3),Q(3)                                       M0015200
C   EVALUATION FIELDS                                                   M0015300
      DOUBLE PRECISION SPV(52),PATCH(64)                                M0015400
      INTEGER IFLAG(4) , ITOP(6,4)                                      M0015500
      INCLUDE 'DARRAY.INC'                                              M0015600
C                                                                       M0015700
      INTEGER ITEST5                                                    M0015800
C                                                                       M0015900
C       SS PRINT CONTROL                                                M0016000
      COMMON/SSPRT/SSPRT,SSTEST                                         M0016100
      LOGICAL SSPRT,SSTEST                                              M0016200
C                                                                       M0016300
      INTEGER J11O                                                      M0016400
C                                                                       M0016402
      INTEGER Z4E,BCDF                                                  M0016404
      PARAMETER (Z4E=1308622848)                                        M0016406
C                                                                       M0016408
      LOGICAL FIRST                                                     M0016410
      SAVE FIRST,LEIT,PENUP,PENDWN,FEDRAT,MODF                          M0016420
                                                                        M0016430
      DATA ILEIT/0,0,Z4E,0,Z4E,6,Z4E,1,0,0,Z4E,0,0,0,Z4E,0,Z4E,0/       M0016440
      DATA IPENU/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/                             M0016450
      DATA IPEND/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/                             M0016460
      DATA IFEDR/0,0,Z4E,0,Z4E,2,Z4E,1,0,0/                             M0016470
      DATA CMODF/'PLOTKP  ','PLOTKF  ','PLOTFU  ',                      M0016480
     *   'PLOTFV  ','PLOTGR  ','GOFLU   ','GOFLV   '/                   M0016490
      DATA PT1/19030000.0D0,3*.0D0/                                     M0016492
      DATA VT1/20030000.0D0,3*.0D0/                                     M0016494
      DATA ITEST5/1/,J11O/-1/                                           M0016496
      DATA FIRST/.TRUE./                                                M0016498
C                                                                       M0016500
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0016600
C                                                                       M0016700
C     INITIALISE CHARACTER ITEMS FOR OUTPUT TO EXFILE                   M0016710
C                                                                       M0016720
      IF (FIRST) THEN                                                   M0016730
        DO 5 I=1,7                                                      M0016732
          IMODF(1,I)=BCDF(CMODF(I)(1:4))                                M0016734
          IMODF(2,I)=BCDF(CMODF(I)(5:8))                                M0016736
    5   CONTINUE                                                        M0016738
        ILEIT(1)=BCDF('CLDA')                                           M0016740
        ILEIT(2)=BCDF('TA  ')                                           M0016742
        LEIT(5)=MODF(5)                                                 M0016744
        IPENU(1)=BCDF('PENU')                                           M0016750
        IPENU(2)=BCDF('P   ')                                           M0016752
        IPENU(9)=BCDF('    ')                                           M0016754
        IPENU(10)=IPENU(9)                                              M0016756
        IPEND(1)=BCDF('PEND')                                           M0016760
        IPEND(2)=BCDF('WN  ')                                           M0016762
        PENDWN(5)=PENUP(5)                                              M0016764
        IFEDR(1)=BCDF('FEDR')                                           M0016770
        IFEDR(2)=BCDF('AT  ')                                           M0016772
        FIRST=.FALSE.                                                   M0016790
      ENDIF                                                             M0016795
C  PREPARATION OF THE EVALUATION RESULT STORAGE                         M0016800
      IF(INCR.EQ.1)GOTO 11                                              M0016900
      DO 10 I=33,52                                                     M0017000
   10 SPV(I)=0.D0                                                       M0017100
C                                                                       M0017200
C   CURVE OR SURFACE ?                                                  M0017300
   11 IF(IART.GE.3) GOTO 1000                                           M0017400
      MM=0                                                              M0017500
      IF(MOD.NE.2)MM=2                                                  M0017600
      CALL CURFLO(U,SSCAN(J11+1),SPV,MM,0)                              M0017700
      DO 80 I=1,3                                                       M0017800
      PT(I)=SPV(I)                                                      M0017900
   80 SPV(32+I)=SPV(I)                                                  M0018000
      IF(MOD.EQ.1)RETURN                                                M0018100
      DO 90 I=1,3                                                       M0018200
   90 TEK(I)=TE(I)                                                      M0018300
      CALL TRANSM(TE,PT,2,3,0)                                          M0018400
      GOTO 7100                                                         M0018500
C                                                                       M0018600
C    COMPUTATION OF PATCH NUMBER AND FETCHING OF THE PATCH              M0018700
 1000 NSPL=SSCAN(J11+9)-1.0D0                                           M0018800
      NPNT=SSCAN(J11+10)-1.0D0                                          M0018900
      IU=U                                                              M0019000
      IV=V                                                              M0019100
      IF(IU.LT.NPNT) GOTO 2110                                          M0019200
      IU=NPNT-1                                                         M0019300
 2130 UP=U-IU                                                           M0019400
 2140 IF(IV.LT.NSPL) GOTO 2120                                          M0019500
      IV=NSPL-1                                                         M0019600
 2150 VP=V-IV                                                           M0019700
 2160 NPATCH=IV*NPNT+IU+1                                               M0019800
      GOTO 2310                                                         M0019900
 2110 IF(IU.GE.0) GOTO 2130                                             M0020000
      IU=0                                                              M0020100
      UP=U                                                              M0020200
      GOTO 2140                                                         M0020300
 2120 IF(IV.GE.0) GOTO 2150                                             M0020400
      IV=0                                                              M0020500
      VP=V                                                              M0020600
      GOTO 2160                                                         M0020700
 2310 IF(J11.EQ.J11O.AND.                                               M0020800
     *   NPATCH.EQ.NPATO.AND.                                           M0020900
     *   SSCAN(J11+1).EQ.CANOLD) GOTO 2315                              M0021000
      CALL LODPCH(SSCAN(J11+1),PATCH,IFLAG,ITOP,NPATCH,1)               M0021100
      J11O=J11                                                          M0021200
      NPATO=NPATCH                                                      M0021300
      CANOLD=SSCAN(J11+1)                                               M0021400
 2315 MM=2                                                              M0021500
      CALL CNSURF(UP,VP,PATCH,SPV,IFLAG,MM)                             M0021600
C                                                                       M0021700
C STORE VALUES FOR ATAPE                                                M0021800
      UU(1)=UP                                                          M0021900
      VV(1)=VP                                                          M0022000
      IPNUM(1)=NPATCH                                                   M0022100
C                                                                       M0022200
C STORE SURFACE POINT WITH NORMAL FOR ATAPE                             M0022300
      DO 2320 I=1,3                                                     M0022400
      PT(I)=SPV(I)                                                      M0022500
      VT0(I)=SPV(I+28)                                                  M0022600
 2320 CONTINUE                                                          M0022700
      CALL TRANSM(SP(1,IPS),PT,2,3,0)                                   M0022800
      CALL TRANSM(SN(1,IPS),VT0,3,3,0)                                  M0022900
C                                                                       M0023000
C  CALCULATION OF MOTION DIRECTION                                      M0023100
      IWO=8                                                             M0023200
      IF(IART.EQ.7)IWO=4                                                M0023300
      DO 4080 I=1,3                                                     M0023400
 4080 DM(I)=SPV(IWO+I)                                                  M0023500
C                                                                       M0023600
C  LENGTH OF MOTION DIRECTION                                           M0023700
      VLL=DSQRT(DM(1)*DM(1)+DM(2)*DM(2)+DM(3)*DM(3))                    M0023800
C  INVERT LENGTH IF MOTION DIRECTION IS INVERS                          M0023900
      IF(INVERS.EQ.1)VLL=-VLL                                           M0024000
C  NORMALIZE MOTION DIRECTION                                           M0024100
      DO 4090 I=1,3                                                     M0024200
      DM(I)=DM(I)/VLL                                                   M0024300
 4090 VT0(I)=DM(I)                                                      M0024400
      CALL TRANSM(TI,VT0,3,3,0)                                         M0024500
C                                                                       M0024600
C   INVERSION OF NORMAL                                                 M0024700
      IF(MIRROR.NE.1)GOTO 4000                                          M0024800
      DO 3090 I=29,31                                                   M0024900
 3090 SPV(I)=-SPV(I)                                                    M0025000
C                                                                       M0025100
C   IS THE SURFACE NORMAL TO BE USED AS TOOL AXIS ?                     M0025200
 4000 IF(NORMAL.EQ.1)GOTO 4050                                          M0025300
      IF(JTLFLG(IPS).NE.0) GOTO 4070                                    M0025400
C                                                                       M0025500
C  GIVEN TOOL-AXIS IS USED                                              M0025600
      DO 4010 I=1,3                                                     M0025700
 4010 VT0(I)=TA(I)                                                      M0025800
      CALL TRANSM(SPV(37),VT0,3,3,-1)                                   M0025900
      GOTO 5000                                                         M0026000
C                                                                       M0026100
C SURFACE NORMAL AS TOOL-AXIS                                           M0026200
 4050 DO 4060 I=1,3                                                     M0026300
 4060 SPV(36+I)=SPV(28+I)                                               M0026400
      GOTO 5000                                                         M0026500
C                                                                       M0026600
C ********** 4 AND 5 AXIS CALCULATION **************                    M0026700
C                                                                       M0026800
C  ONLY GOLOFT ALLOWED                                                  M0026900
 4070 IF(IART.NE.6.AND.IART.NE.7)GOTO 5000                              M0027000
C                                                                       M0027100
C TLAXIS PARLELL CASE                                                   M0027200
      IF(MANTAX.EQ.2.AND.NUMAX.EQ.2)GOTO 4300                           M0027300
C                                                                       M0027400
C  CALCULATE CROSS VECTOR                                               M0027500
      CALL CROSS(DM,SPV(29),Q)                                          M0027600
C                                                                       M0027700
C 5 AXIS CALCULATION                                                    M0027800
 4100 IF(MANTAX.NE.2.OR.NUMAX.NE.1)GOTO 4200                            M0027900
C  NEAR NORMAL SURFACE CONDITION                                        M0028000
      IF(DABS(SAGL).LT.1.D-5)GOTO 4110                                  M0028100
C  INTERSECTION CONDITION                                               M0028200
      IF(DABS(DSIN(ALP)/SAGL).LE.1.D0)GOTO 4120                         M0028300
C  TOOL AXIS CAN NOT BE COMPUTED                                        M0028400
 4110 IRET=MAX0(IRET,2)                                                 M0028500
      IF(.NOT.SSTEST) GOTO 4115                                         M0028600
C                                                                       M0028700
C  TOOL-AXIS CAN NOT BE COMPUTED.                                       M0028800
      CALL AERR (22222,'GOP     ')                                      M0028900
C                                                                       M0029000
      CALL BAD(1,1,'SAGL',SAGL)                                         M0029100
      CALL BAD(1,1,'CAGL',CAGL)                                         M0029200
      CALL BAD(1,1,'VN  ',VN  )                                         M0029300
      CALL BAD(1,1,'VM  ',VM  )                                         M0029400
      CALL BAD(-1,1,'VQ  ',VQ  )                                        M0029500
      CALL BAD(2,1,'SIND',SIND)                                         M0029600
      CALL BAD(-2,1,'COSD',COSD)                                        M0029700
      CALL BAD(1,1,'A   ',A   )                                         M0029800
      CALL BAD(1,1,'B   ',B   )                                         M0029900
      CALL BAD(-1,1,'W   ',W   )                                        M0030000
C                                                                       M0030100
 4115 SPV(37)=0.D0                                                      M0030200
      SPV(38)=0.D0                                                      M0030300
      SPV(39)=1.D0                                                      M0030400
      GOTO 5000                                                         M0030500
C                                                                       M0030600
C  SIN OF DELTA                                                         M0030700
 4120 SIND(1)=-DSIN(ALP)/SAGL                                           M0030800
      SIND(2)=SIND(1)                                                   M0030900
C                                                                       M0031000
C  COSIN OF DELTA                                                       M0031100
      COSD(1)=DSQRT(1.D0-SIND(1)*SIND(1))                               M0031200
      COSD(2)=-COSD(1)                                                  M0031300
      GOTO 4280                                                         M0031400
C                                                                       M0031500
C 4 AXIS CALCULATION                                                    M0031600
 4200 IF(MANTAX.NE.2.OR.NUMAX.NE.0)GOTO 5000                            M0031700
C  NEAR NORMAL SURFACE CONDITION                                        M0031800
      IF(DABS(SAGL).LT.1.D-5)GOTO 4110                                  M0031900
C  COMPUTE COMPONENTS OF 4 AXIS VECTOR IN NORMAL MOTION AND CROSS DIR   M0032000
      VN=0.D0                                                           M0032100
      VM=0.D0                                                           M0032200
      VQ=0.D0                                                           M0032300
      DO 4210 I=1,3                                                     M0032400
      VN=VN+SPV(28+I)*AX4(I)                                            M0032500
      VM=VM+DM(I)*AX4(I)                                                M0032600
 4210 VQ=VQ+Q(I)*AX4(I)                                                 M0032700
C  COMPUTE SOLUTIONS FOR QUADRATIC EQUATION FOR COSIN(DELTA)            M0032800
      B=CAGL/SAGL*VN*VQ                                                 M0032900
      A=VQ*VQ+VM*VM                                                     M0033000
C  4 AXIS VECTOR NEAR NORMAL SURFACE                                    M0033100
      IF(A.LT.1.D-10)GOTO 4110                                          M0033200
      W=A-(CAGL/SAGL*VN)**2                                             M0033300
C  NO INTERSECTION                                                      M0033400
      IF(W.LT.0.D0)GOTO 4110                                            M0033500
      W=VM*DSQRT(W)                                                     M0033600
      COSD(1)=(B+W)/A                                                   M0033700
      COSD(2)=(B-W)/A                                                   M0033800
      IF(DABS(COSD(1)).GT.1.D0)COSD(1)=COSD(2)                          M0033900
      IF(DABS(COSD(2)).GT.1.D0)COSD(2)=COSD(1)                          M0034000
      IF(DABS(COSD(2)).GT.1.D0)GOTO 4110                                M0034100
      SIND(1)=(CAGL/SAGL*VN-COSD(1)*VQ)/VM                              M0034200
      SIND(2)=(CAGL/SAGL*VN-COSD(2)*VQ)/VM                              M0034300
C  COMPUTE THE TWO POSSIBLE AXIS VECTORS AND THE SCALAR PRODUCT         M0034400
C   WITH THE PREVIOUS AXIS VECTOR                                       M0034500
 4280 DO 4285 J=1,2                                                     M0034600
      AL(J)=0.D0                                                        M0034700
      DO 4285 I=1,3                                                     M0034800
      AX(I,J)=SAGL*(Q(I)*COSD(J)+DM(I)*SIND(J))-CAGL*SPV(28+I)          M0034900
      AL(J)=AL(J)+AX(I,J)*VTA(I)                                        M0035000
 4285 CONTINUE                                                          M0035100
C  SELECTION OF THE NEW TOOL AXIS VECTOR WICH IS CLOSER TO THE OLD ONE  M0035200
      J=1                                                               M0035300
      IF(AL(2).GT.AL(1))J=2                                             M0035400
C  NEW AXIS DIRECTION                                                   M0035500
      DO 4290 I=1,3                                                     M0035600
      VTA(I)=AX(I,J)                                                    M0035700
 4290 SPV(36+I)=VTA(I)                                                  M0035800
      GOTO 5000                                                         M0035900
C PARALLEL AXIS CALCULATION (ALONG RULINGS)                             M0036000
C  SELECTION OF CROSS DIRECTION                                         M0036100
 4300 IWO=4                                                             M0036200
      IF(IART.EQ.7)IWO=8                                                M0036300
      DO 4310 I=1,3                                                     M0036400
 4310 Q(I)=SPV(IWO+I)                                                   M0036500
C  LENGTH OF CROSS DIRECTION                                            M0036600
      VLL=DSQRT(Q(1)**2+Q(2)**2+Q(3)**2)                                M0036700
C  USE INVERTED LENGTH IF CROSS DIRECTION HAS TO BE INVERTED            M0036800
C   NEW AXIS SHOULD HAVE THE SAME ORIENTATION AS THE OLD ONE            M0036900
      IF(Q(1)*VTA(1)+Q(2)*VTA(2)+Q(3)*VTA(3).LT.0.D0)VLL=-VLL           M0037000
C  NEW AXIS DIRECTION PLUS A SMALL AMOUNT IN ORDER TO AVOID JUMPING     M0037100
      DO 4320 I=1,3                                                     M0037200
      VTA(I)=Q(I)/VLL+1.D-12*SPV(28+I)                                  M0037300
 4320 SPV(36+I)=VTA(I)                                                  M0037400
C  STORING NEW POINT                                                    M0037500
 5000 DO 5090 I=1,3                                                     M0037600
C  PART SURFACE THICKNES IS USED                                        M0037700
 5090 SPV(32+I)=SPV(I)+TH(IPS)*SPV(28+I)                                M0037800
C  END OF CALCULATION IF PLOTING                                        M0037900
      IF (IART.LT.6) GOTO 7000                                          M0038000
C  END OF CALCULATION IF NORMAL CONDITION                               M0038100
      IF(NORMAL.EQ.1)GOTO 7000                                          M0038200
C  END OF CALCULATION IF ZERO CUTTER                                    M0038300
      IF(CUTDAT(1).LT..001) GOTO 7000                                   M0038400
C  CALCULATION OF VECTOR PERPENDICULAR TO SURFACE NORMAL AND TOOL AXIS  M0038500
      CALL CROSS(SPV(29),SPV(37),VT0)                                   M0038600
C  LENGTH OF CROSS VECTOR                                               M0038700
      VLL=VT0(1)*VT0(1)+VT0(2)*VT0(2)+VT0(3)*VT0(3)                     M0038800
C  END OF CALCULATION IF SURFACE NORMAL AND TOOL AXIS ARE PARALLEL      M0038900
      IF(VLL.LE.1.D-10) GOTO 7000                                       M0039000
      VLL=DSQRT(VLL)                                                    M0039100
C  PROJECTION OF SURFACE NORMAL                                         M0039200
      CALL CROSS(SPV(37),VT0,VT2)                                       M0039300
C  NEW TOOL-TIP CALCULATION                                             M0039400
C  IS RING CUTTER GIVEN ?                                               M0039500
      IF(.NOT.RINGFG) GOTO 6070                                         M0039600
C  STORE RING AS 10TH SEGMENT                                           M0039700
      JCSEG=10                                                          M0039800
      CUTL(JCSEG)=0.D0                                                  M0039900
      CUTX(JCSEG)=RI(8)                                                 M0040000
      CUTY(JCSEG)=TLHITE(8)                                             M0040100
      GOTO 6075                                                         M0040200
C   COMPUTATION OF THE COSIN OF THE ANGLE BETWEEN THE TOOL-AXIS         M0040300
C   AND THE SURFACE NORMAL                                              M0040400
 6070 CGAMMA=0.D0                                                       M0040500
      DO 6080 I=1,3                                                     M0040600
 6080 CGAMMA=SPV(36+I)*SPV(28+I)+CGAMMA                                 M0040700
      DO 6081 I=1,NCSEG                                                 M0040800
      JCSEG=I                                                           M0040900
      IF(NLIOCI(I).EQ.1) GOTO 6081                                      M0041000
      IF(COSAL(I).LE.CGAMMA) GOTO 6082                                  M0041100
 6081 CONTINUE                                                          M0041200
 6082 CONTINUE                                                          M0041300
C                                                                       M0041400
C NEW TOOL-TIP CALCULATION                                              M0041500
 6075 DO 6090 I=1,3                                                     M0041600
 6090 SPV(32+I)=SPV(32+I)                                               M0041700
     *                   +SPV(28+I)*CUTL(JCSEG)                         M0041800
     *                   +VT2(   I)*CUTX(JCSEG)/VLL                     M0041900
     *                   -SPV(36+I)*CUTY(JCSEG)                         M0042000
C  NO CURVATURE CALCULATION IF INCR=1                                   M0042100
 7000 IF(INCR.EQ.1)GOTO 7005                                            M0042200
C  COMPUTATION OF THE FUNDAMENTAL FORMS                                 M0042300
      E=0.D0                                                            M0042400
      F=0.D0                                                            M0042500
      G=0.D0                                                            M0042600
      XL=0.D0                                                           M0042700
      XN=0.D0                                                           M0042800
      XM=0.D0                                                           M0042900
C  PROJECTION LENGTH                                                    M0043000
      PL=0.D0                                                           M0043100
      DO 7002 I=1,3                                                     M0043200
      SUPI=SPV(4+I)                                                     M0043300
      SVPI=SPV(8+I)                                                     M0043400
      E=SUPI*SUPI+E                                                     M0043500
      F=SUPI*SVPI+F                                                     M0043600
      G=SVPI*SVPI+G                                                     M0043700
      XNORM=SPV(28+I)                                                   M0043800
      XL=SPV(12+I)*XNORM+XL                                             M0043900
      XM=SPV(16+I)*XNORM+XM                                             M0044000
      XN=SPV(20+I)*XNORM+XN                                             M0044100
C  PROJECTION LENGTH                                                    M0044200
 7002 PL=(SPV(32+I)-SPV(I))*SPV(28+I)+PL                                M0044300
      SPV(45)=E                                                         M0044400
      SPV(46)=F                                                         M0044500
      SPV(47)=G                                                         M0044600
      SPV(49)=XL                                                        M0044700
      SPV(50)=XM                                                        M0044800
      SPV(51)=XN                                                        M0044900
C  PROJECTION LENGTH                                                    M0045000
      SPV(52)=PL                                                        M0045100
C  READY IF ONLY PLOTING                                                M0045200
      IF(IART.LE.5)GOTO 7005                                            M0045300
C   LENGTH OF NORMAL                                                    M0045400
      XNL=DSQRT(E*G-F*F)+1.D-12                                         M0045500
C   COMPUTATION OF THE MAIN CURVATURE DIRECTION                         M0045600
C   A=G*M-F*N                                                           M0045700
      A=G*SPV(50)-F*SPV(51)                                             M0045800
C   B=G*L-E*N                                                           M0045900
      B=G*SPV(49)-E*SPV(51)                                             M0046000
C   C=F*L-E*M                                                           M0046100
      C=F*SPV(49)-E*SPV(50)                                             M0046200
      T1=B*B-4.D0*A*C                                                   M0046300
      T2=DSQRT(T1)                                                      M0046400
      T3=E*B-2.D0*F*C                                                   M0046500
      IF(T3.LT.0.D0)T2=-T2                                              M0046600
      T4=DSQRT(2.D0*E*E*T1+2.D0*E*T3*T2)                                M0046700
      IF(DABS(T4).GT.0.D-20)GO TO 7060                                  M0046800
C   NO MAIN CURVATURE DIRECTION FOUND                                   M0046900
      SINALF=0.D0                                                       M0047000
      COSALF=1.D0                                                       M0047100
      GOTO 7070                                                         M0047200
 7060 SINALF=(T3+E*T2)/T4                                               M0047300
      COSALF=(2.D0*C*XNL)/T4                                            M0047400
 7070 WE=DSQRT(E)                                                       M0047500
      DO 7300 I=1,3                                                     M0047600
C  U-TANGENT                                                            M0047700
 7300 VT0(I)=SPV(4+I)/WE                                                M0047800
C  VECTOR PERPENTICULAR TO U-TANGENT                                    M0047900
      IF(MIRROR.NE.1)CALL CROSS(SPV(29),VT0,VT2)                        M0048000
      IF(MIRROR.EQ.1)CALL CROSS(VT0,SPV(29),VT2)                        M0048100
C  DIRECTION OF 1. MAIN CURVATURE                                       M0048200
      DO 7310 I=1,3                                                     M0048300
 7310 SPV(40+I)=COSALF*VT0(I)+SINALF*VT2(I)                             M0048400
C  COMPUTATION OF 1. MAIN CURVATURE                                     M0048500
      DV=E*SINALF                                                       M0048600
      DU= XNL*COSALF-F*SINALF                                           M0048700
      SPV(40)=(SPV(49)*DU*DU+2.D0*SPV(50)*DU*DV+SPV(51)*DV*DV)/         M0048800
     *        (E*DU*DU+2.D0*F*DU*DV+G*DV*DV)                            M0048900
C  COMPUTATION OF 2. MAIN CURVATURE                                     M0049000
      DV=E*COSALF                                                       M0049100
      DU=-XNL*SINALF-F*COSALF                                           M0049200
      SPV(44)=(SPV(49)*DU*DU+2.D0*SPV(50)*DU*DV+SPV(51)*DV*DV)/         M0049300
     *        (E*DU*DU+2.D0*F*DU*DV+G*DV*DV)                            M0049400
C  RETURN ,IF COMPUTATION OF POSITIONS ONLY                             M0049500
 7005 IF(MOD.EQ.1)RETURN                                                M0049600
C  IS THE TOOL AXIS TO BE CHANGED                                       M0049700
      IF(NORMAL.NE.1.AND.MANTAX.NE.2)GOTO 7020                          M0049800
C  STORING TOOL AXIS                                                    M0049900
      DO 7010 I=1,3                                                     M0050000
      TAK(I)=TA(I)                                                      M0050100
 7010 VT0(I)=SPV(36+I)                                                  M0050200
      CALL TRANSM(TA,VT0,3,3,0)                                         M0050300
C  STORING TOOL TIP                                                     M0050400
 7020 DO 7030 I=1,3                                                     M0050500
      TEK(I)=TE(I)                                                      M0050600
 7030 PT(I)=SPV(32+I)                                                   M0050700
      CALL TRANSM(TE,PT,2,3,0)                                          M0050800
C   CL FILE OUTPUT                                                      M0050900
      IF(IART.NE.5)GOTO 7100                                            M0051000
      IF(ITEST5.EQ.0.AND.ICL.EQ.2)GOTO 7100                             M0051100
      IF(ITEST5.EQ.0)GOTO 7050                                          M0051200
C   1. POINT OD A 'GRID' CURVE                                          M0051300
      ICL=3                                                             M0051400
      CALL ATAPE                                                        M0051500
      ICL=2                                                             M0051600
      NR=0                                                              M0051700
      J=10                                                              M0051800
      CALL RECORD(ISEQNO)                                               M0051900
      IPEND(4)=ISEQNO                                                   M0052000
      CALL EWRITE(EXFILE,NR,PENDWN,J,IR)                                M0052100
      NR=0                                                              M0052200
      J=18                                                              M0052300
      CALL RECORD(ISEQNO)                                               M0052400
      ILEIT(4)=ISEQNO                                                   M0052500
      LEIT(5)=MODF(IART)                                                M0052600
      LEIT(7)=OBNAM1                                                    M0052700
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0052800
      ITEST5=0                                                          M0052900
      GOTO 7200                                                         M0053000
C   LAST POINT                                                          M0053100
 7050 CALL ATAPE                                                        M0053200
      ITEST5=1                                                          M0053300
      NR=0                                                              M0053400
      J=10                                                              M0053500
      CALL RECORD(ISEQNO)                                               M0053600
      IPENU(4)=ISEQNO                                                   M0053700
      CALL EWRITE(EXFILE,NR,PENUP,J,IR)                                 M0053800
      GOTO 7200                                                         M0053900
C                                                                       M0054000
C  IS THE GLOBAL FEEDRAT TO BE WRITTEN                                  M0054100
 7100 IF(IFEEDF.NE.1.OR.IART.LT.6)GOTO 7150                             M0054200
C                                                                       M0054300
C  OUTPUT POINT                                                         M0054400
      ICL=3                                                             M0054500
      CALL ATAPE                                                        M0054600
      ICL=2                                                             M0054700
C                                                                       M0054800
C  FEDRAT AFTER FIRST GOLOFT POINT                                      M0054900
      NR=0                                                              M0055000
      J=10                                                              M0055100
      CALL RECORD(ISEQNO)                                               M0055200
      IFEDR(4)=ISEQNO                                                   M0055300
      FEDRAT(5)=GLFEED                                                  M0055400
      CALL EWRITE(EXFILE,NR,FEDRAT,J,IR)                                M0055500
      NR=0                                                              M0055600
      J=18                                                              M0055700
      CALL RECORD(ISEQNO)                                               M0055800
      ILEIT(4)=ISEQNO                                                   M0055900
      LEIT(5)=MODF(IART)                                                M0056000
      LEIT(7)=OBNAM1                                                    M0056100
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0056200
      IFEEDF=0                                                          M0056300
      GOTO 7200                                                         M0056400
 7150 CALL ATAPE                                                        M0056500
 7200 IF(.NOT.SSTEST)RETURN                                             M0056600
      CALL CFORM('0PKT.,NORM.:',DARRAY,1,12)                            M0056700
      CALL FCONV(SPV(1),DARRAY, 13,14,4)                                M0056800
      CALL FCONV(SPV(2),DARRAY, 28,14,4)                                M0056900
      CALL FCONV(SPV(3),DARRAY, 43,14,4)                                M0057000
      CALL FCONV(SPV(29),DARRAY,61,14,6)                                M0057100
      CALL FCONV(SPV(30),DARRAY,76,14,6)                                M0057200
      CALL FCONV(SPV(31),DARRAY,91,14,6)                                M0057300
      CALL CPRINT(DARRAY)                                               M0057400
      CALL CFORM(' TE,TA     :   ',DARRAY,1,15)                         M0057500
      CALL FCONV(TE(1),DARRAY, 15,14,4)                                 M0057600
      CALL FCONV(TE(2),DARRAY, 30,14,4)                                 M0057700
      CALL FCONV(TE(3),DARRAY, 45,14,4)                                 M0057800
      CALL FCONV(TA(1),DARRAY,63,14,6)                                  M0057900
      CALL FCONV(TA(2),DARRAY,78,14,6)                                  M0058000
      CALL FCONV(TA(3),DARRAY,93,14,6)                                  M0058100
      CALL CPRINT(DARRAY)                                               M0058200
      IF(INCR.EQ.1)RETURN                                               M0058300
      CALL CFORM(' E,F,G,L,M,N:  ',DARRAY,1,15)                         M0058400
      CALL FCONV(E,DARRAY, 15,14,6)                                     M0058500
      CALL FCONV(F,DARRAY, 30,14,6)                                     M0058600
      CALL FCONV(G,DARRAY, 45,14,6)                                     M0058700
      CALL FCONV(SPV(49),DARRAY,63,14,6)                                M0058800
      CALL FCONV(SPV(50),DARRAY,78,14,6)                                M0058900
      CALL FCONV(SPV(51),DARRAY,93,14,6)                                M0059000
      CALL CPRINT(DARRAY)                                               M0059100
      IF(IART.LE.5)RETURN                                               M0059200
      CALL CFORM(' SIN,COS,K,K:  ',DARRAY,1,15)                         M0059300
      CALL FCONV(SINALF,DARRAY, 15,14,6)                                M0059400
      CALL FCONV(COSALF,DARRAY, 30,14,6)                                M0059500
      CALL FCONV(SPV(40),DARRAY,45,14,6)                                M0059600
      CALL FCONV(SPV(44),DARRAY,63,14,6)                                M0059700
      CALL CPRINT(DARRAY)                                               M0059800
      CALL CFORM(' TANGENT    :  ',DARRAY,1,15)                         M0059900
      CALL FCONV(SPV(41),DARRAY,15,14,6)                                M0060000
      CALL FCONV(SPV(42),DARRAY,30,14,6)                                M0060100
      CALL FCONV(SPV(43),DARRAY,45,14,6)                                M0060200
      CALL CPRINT(DARRAY)                                               M0060300
      RETURN                                                            M0060400
      END                                                               M0060500
**** SOURCE FILE : M0011489.V01   ***
*
      SUBROUTINE GORETR (LSEG,U,V,SPV,J11,IRET)                         M0000100
C                                                                       M0000200
C  RETRACT AND MOVEIN ROUTINE FOR >GOL<                                 M0000300
C                                                                       M0000400
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000500
C                                                                       M0000600
C  GOLOFT COMMON                                                        M0000700
      COMMON/PLGOL/ID(24),OBNAM1                                        M0000800
C                                                                       M0000900
C IART:      IART = 1   PLOTFT/SCURV,.........,PARAM,....               M0001000
C            IART = 2   PLOTFT/SCURV,.........,FLOW ,....               M0001100
C            IART = 3   PLOTFT/SSURF,UCONST,U,...........               M0001200
C            IART = 4   PLOTFT/SSURF,VCONST,V,...........               M0001300
C            IART = 5   PLOTFT/SSURF,GRID,...............               M0001400
C            IART = 6   GOLOFT/SSURF,UCONST,U,...........               M0001500
C            IART = 7   GOLOFT/SSURF,VCONST,V,...........               M0001600
      EQUIVALENCE (ID(13),IART  )                                       M0001700
C                                                                       M0001800
C INVERS:    INVERSION OF THE POINT-SEQUENCE                            M0001900
      EQUIVALENCE (ID(14),INVERS)                                       M0002000
C                                                                       M0002100
C  BLANK-COMMON                                                         M0002200
      INCLUDE 'BLANKCOM.INC'                                            M0002300
C                                                                       M0002400
C   POINT STORAGE FOR TRANSFORMATION PURPOSE                            M0002500
      DOUBLE PRECISION PT(3),PT1(4)                                     M0002600
      EQUIVALENCE(PT1(2),PT(1))                                         M0002700
C                                                                       M0002800
C   VECTOR STORAGE FOR TRANSFORMATION PURPOSE                           M0002900
      DOUBLE PRECISION VT(3),VT1(4),VT2(3)                              M0003000
      EQUIVALENCE(VT1(2),VT(1))                                         M0003100
C                                                                       M0003200
C  OUTPUT-ARRAY OF THE HEADER                                           M0003300
      CHARACTER*8 CMODF(9)                                              M0003310
      DOUBLE PRECISION OBNAME,MODF(9)                                   M0003400
      DOUBLE PRECISION LEIT(9)                                          M0003700
      INTEGER ILEIT(18),IMODF(2,9)                                      M0003710
      EQUIVALENCE (LEIT(7),OBNAME),(LEIT(1),ILEIT(1))                   M0004000
      EQUIVALENCE (MODF(1),IMODF(1,1))                                  M0004010
      DOUBLE PRECISION RAPID (5)                                        M0004200
      INTEGER IRAPI(10)                                                 M0004250
      EQUIVALENCE (RAPID (1),IRAPI(1))                                  M0004400
      DOUBLE PRECISION FEDRAT(5)                                        M0004600
      INTEGER IFEDR(10)                                                 M0004650
      EQUIVALENCE (FEDRAT(1),IFEDR(1))                                  M0004800
C                                                                       M0005000
      INCLUDE 'TOTAL.INC'                                               M0005100
      INCLUDE 'FXCOR.INC'                                               M0005300
      INCLUDE 'IFXCOR.INC'                                              M0006300
C                                                                       M0006600
C  SYSTEM - INPUT/OUTPUT-NAMES                                          M0006700
      INCLUDE 'SYMFIL.INC'                                              M0006800
C                                                                       M0007100
C  STORAGE OF POINTS                                                    M0007200
      DOUBLE PRECISION SPV(52)                                          M0007300
C                                                                       M0007400
C  MOTION DIRECTIONS (LATER RETRACT POINT), CLEAR POINT                 M0007500
      DOUBLE PRECISION DM(3) , CP(3)                                    M0007600
C                                                                       M0007700
      COMMON/CCLEAR/ DIRMOT(3,4)                                        M0007800
     *              ,GOFEED(4)                                          M0007900
     *              ,GLFEED                                             M0008000
     *              ,REGLDA(2)                                          M0008100
     *              ,IRETRO(4)                                          M0008200
     *              ,IDIRMO(4)                                          M0008300
     *              ,ICANIN(4)                                          M0008400
     *              ,IFEEDF                                             M0008500
C                                                                       M0008600
      INTEGER Z4E,BCDF                                                  M0008610
      PARAMETER (Z4E=1308622848)                                        M0008620
      LOGICAL FIRST                                                     M0008622
      SAVE FIRST,ILEIT,IRAPI,IFEDR,MODF                                 M0008625
C                                                                       M0008630
      DATA PT1/19030000.0D0,3*.0D0/                                     M0008640
      DATA VT1/20030000.0D0,3*.0D0/                                     M0008650
      DATA CMODF/'PLOTKP  ','PLOTKF  ','PLOTFU  ',                      M0008660
     *   'PLOTFV  ','PLOTGR  ','GOFLU   ','GOFLV   ',                   M0008665
     *   'CLEARS  ','CLEARP  '/                                         M0008670
      DATA ILEIT/0,0,Z4E,0,Z4E,6,Z4E,1,0,0,Z4E,0,0,0,Z4E,0,Z4E,0/       M0008675
      DATA IRAPI/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/                             M0008680
      DATA IFEDR/0,0,Z4E,0,Z4E,2,Z4E,1,0,0/                             M0008685
      DATA FIRST/.TRUE./                                                M0008690
C                                                                       M0008695
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0008700
C                                                                       M0008800
C.... INITIALIZE CHARACTER ITEMS FOR EXFILE RECORD                      M0008810
C                                                                       M0008820
      IF (FIRST) THEN                                                   M0008830
        DO 5 I=1,9                                                      M0008832
          IMODF(1,I)=BCDF(CMODF(I)(1:4))                                M0008834
          IMODF(2,I)=BCDF(CMODF(I)(5:8))                                M0008836
   5    CONTINUE                                                        M0008838
        ILEIT(1)=BCDF('CLDA')                                           M0008840
        ILEIT(2)=BCDF('TA  ')                                           M0008842
        IRAPI(1)=BCDF('RAPI')                                           M0008844
        IRAPI(2)=BCDF('D   ')                                           M0008846
        IFEDR(1)=BCDF('FEDR')                                           M0008848
        IFEDR(2)=BCDF('AT  ')                                           M0008850
        IBLNK   =BCDF('    ')                                           M0008852
        IRAPI(9)=IBLNK                                                  M0008854
        IRAPI(10)=IBLNK                                                 M0008856
        FIRST=.FALSE.                                                   M0008860
      ENDIF                                                             M0008870
C                                                                       M0008900
C  SET FLAG FOR GLOBAL FEED                                             M0009000
      IFEEDF=0                                                          M0009100
C                                                                       M0009200
C  SAVE CL-FLAG                                                         M0009300
      ICLS=ICL                                                          M0009400
C                                                                       M0009500
C  RETRACT AND FEEDRAT ONLY FOR GOLOFT                                  M0009600
      IF(IART.LE.5)GOTO 90                                              M0009700
C                                                                       M0009800
C  EXTRA MOTION IF FLAG IS ONE                                          M0009900
      IF(IRETRO(LSEG).EQ.0)GOTO 90                                      M0010000
C                                                                       M0010100
C  COMPUTE THE POINT IF PLUNGE IN MOTION                                M0010200
      IF((INVERS.EQ.0.AND.(LSEG.EQ.1.OR.LSEG.EQ.3)).OR.                 M0010300
     *   (INVERS.EQ.1.AND.(LSEG.EQ.2.OR.LSEG.EQ.4)))                    M0010400
     *  CALL GOP (1,U,V,SPV,J11,IRET)                                   M0010500
C                                                                       M0010600
C  CALCULATION OF MOTION DIRECTION                                      M0010700
      DO 9 I=1,3                                                        M0010800
    9 DM(I)=0.D0                                                        M0010900
      IF(IDIRMO(LSEG).NE.1)GOTO 20                                      M0011000
      IWO=8                                                             M0011100
      IF(IART.EQ.7)IWO=4                                                M0011200
      DO 10 I=1,3                                                       M0011300
   10 DM(I)=SPV(IWO+I)                                                  M0011400
C                                                                       M0011500
C  LENGTH OF MOTION DIRECTION                                           M0011600
      VLL=DSQRT(DM(1)*DM(1)+DM(2)*DM(2)+DM(3)*DM(3))                    M0011700
C  INVERT LENGTH IF MOTION DIRECTION IS INVERS                          M0011800
      IF(INVERS.EQ.1)VLL=-VLL                                           M0011900
C  NORMALIZE MOTION DIRECTION                                           M0012000
      DO 11 I=1,3                                                       M0012100
      DM(I)=DM(I)/VLL                                                   M0012200
   11 VT(I)=DM(I)                                                       M0012300
C                                                                       M0012400
C  CALCULATE EXTRA MOTION                                               M0012500
      DO 12 I=1,3                                                       M0012600
   12 DM(I)=DM(I)*DIRMOT(1,LSEG)+SPV(28+I)*DIRMOT(2,LSEG)               M0012700
      GOTO 30                                                           M0012800
C                                                                       M0012900
C  VECTOR MOTION                                                        M0013000
   20 IF(IDIRMO(LSEG).NE.2) GOTO 30                                     M0013100
      DO 22 I=1,3                                                       M0013200
   22 DM(I)=DIRMOT(I,LSEG)                                              M0013300
C                                                                       M0013400
C  COMPUTE STEP IN OR RETRACT POINT                                     M0013500
   30 VLL=1.D0                                                          M0013600
      IF(INVERS.EQ.1)VLL=-1.D0                                          M0013700
      IF((INVERS.EQ.0.AND.(LSEG.EQ.1.OR.LSEG.EQ.3)).OR.                 M0013800
     *   (INVERS.EQ.1.AND.(LSEG.EQ.2.OR.LSEG.EQ.4)))VLL=-VLL            M0013900
      DO 32 I=1,3                                                       M0014000
   32 DM(I)=SPV(32+I)+DM(I)*VLL                                         M0014100
C                                                                       M0014200
C  COMPUTE CLEARENCE POSITION                                           M0014300
      IF(ICANIN(LSEG).EQ.0)GOTO 45                                      M0014400
C                                                                       M0014500
C  COMPUTE POINT DISTANCE                                               M0014600
      VLL=COM(ICANIN(LSEG))*DM(1)+COM(ICANIN(LSEG)+1)*DM(2)             M0014700
     *   +COM(ICANIN(LSEG)+2)*DM(3)-COM(ICANIN(LSEG)+3)                 M0014800
C                                                                       M0014900
C  COMPUTE CLEAR POINT ON CLEAR PLANE                                   M0015000
      DO 40 I=1,3                                                       M0015100
   40 CP(I)=DM(I)-COM(ICANIN(LSEG)+I-1)*VLL                             M0015200
   45 CONTINUE                                                          M0015300
C                                                                       M0015400
C  DECISION IF STEP IN OR STEP OUT                                      M0015500
      IF((INVERS.EQ.0.AND.(LSEG.EQ.2.OR.LSEG.EQ.4)).OR.                 M0015600
     *   (INVERS.EQ.1.AND.(LSEG.EQ.1.OR.LSEG.EQ.3)))GOTO 70             M0015700
C                                                                       M0015800
C  STEP IN ******************************                               M0015900
      IF(ICANIN(LSEG).EQ.0)GOTO 55                                      M0016000
C                                                                       M0016100
C   RAPID                                                               M0016200
      NR=0                                                              M0016300
      J=10                                                              M0016400
      CALL RECORD(ISEQNO)                                               M0016500
      IRAPI(4)=ISEQNO                                                   M0016600
      CALL EWRITE(EXFILE,NR,RAPID,J,IR)                                 M0016700
C                                                                       M0016800
C   CLEAR POINT                                                         M0016900
      NR=0                                                              M0017000
      J=18                                                              M0017100
      CALL RECORD(ILEIT(4))                                             M0017200
      ISEQNO=ILEIT(4)                                                   M0017300
      LEIT(5)=MODF(8)                                                   M0017400
      LEIT(7)=OBNAM1                                                    M0017500
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0017600
      ICL=3                                                             M0017700
C                                                                       M0017800
C  STORING TOOL AXIS                                                    M0017900
      DO 50 I=1,3                                                       M0018000
      TAK(I)=TA(I)                                                      M0018100
   50 VT(I)=SPV(36+I)                                                   M0018200
      CALL TRANSM(TA,VT,3,3,0)                                          M0018300
C                                                                       M0018400
C  STORING TOOL TIP                                                     M0018500
      DO 51 I=1,3                                                       M0018600
      TEK(I)=TE(I)                                                      M0018700
   51 PT(I)=CP(I)                                                       M0018800
      CALL TRANSM(TE,PT,2,3,0)                                          M0018900
      CALL ATAPE                                                        M0019000
C                                                                       M0019100
C NEAR POINT ?                                                          M0019200
   55 IF(IDIRMO(LSEG).EQ.0) GOTO 90                                     M0019300
C                                                                       M0019400
C   RAPID                                                               M0019500
      NR=0                                                              M0019600
      J=10                                                              M0019700
      CALL RECORD(ISEQNO)                                               M0019800
      IRAPI(4)=ISEQNO                                                   M0019900
      CALL EWRITE(EXFILE,NR,RAPID,J,IR)                                 M0020000
C                                                                       M0020100
C  NEAR POINT                                                           M0020200
      NR=0                                                              M0020300
      J=18                                                              M0020400
      CALL RECORD(ILEIT(4))                                             M0020500
      ISEQNO=ILEIT(4)                                                   M0020600
      LEIT(5)=MODF(9)                                                   M0020700
      LEIT(7)=OBNAM1                                                    M0020800
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0020900
      ICL=3                                                             M0021000
C                                                                       M0021100
C  STORING TOOL AXIS                                                    M0021200
      DO 61 I=1,3                                                       M0021300
      TAK(I)=TA(I)                                                      M0021400
   61 VT(I)=SPV(36+I)                                                   M0021500
      CALL TRANSM(TA,VT,3,3,0)                                          M0021600
C                                                                       M0021700
C  STORING TOOL TIP                                                     M0021800
      DO 62 I=1,3                                                       M0021900
      TEK(I)=TE(I)                                                      M0022000
   62 PT(I)=DM(I)                                                       M0022100
      CALL TRANSM(TE,PT,2,3,0)                                          M0022200
      CALL ATAPE                                                        M0022300
C                                                                       M0022400
C FEDRATE FOR NEAR POINT                                                M0022500
      IF(GOFEED(LSEG).EQ.0.D0)GOTO 90                                   M0022600
      NR=0                                                              M0022700
      J=10                                                              M0022800
      CALL RECORD(ISEQNO)                                               M0022900
      IFEDR(4)=ISEQNO                                                   M0023000
      FEDRAT(5)=GOFEED(LSEG)                                            M0023100
      CALL EWRITE(EXFILE,NR,FEDRAT,J,IR)                                M0023200
C                                                                       M0023300
C  SET FLAG FOR GLOBAL FEEDRAT OUTPUT IN >GOP<                          M0023400
      IF(ICLS.EQ.2)IFEEDF=1                                             M0023500
C                                                                       M0023600
C  CONTINUE WITH NORMAL PATH                                            M0023700
      GOTO 90                                                           M0023800
C                                                                       M0023900
C  STEP OUT ********************************                            M0024000
C                                                                       M0024100
C  NEAR POINT ?                                                         M0024200
   70 IF(IDIRMO(LSEG).EQ.0) GOTO 80                                     M0024300
C                                                                       M0024400
C FEDRATE FOR NEAR POINT                                                M0024500
      IF(GOFEED(LSEG).EQ.0.D0) GOTO 75                                  M0024600
      NR=0                                                              M0024700
      J=10                                                              M0024800
      CALL RECORD(ISEQNO)                                               M0024900
      IFEDR(4)=ISEQNO                                                   M0025000
      FEDRAT(5)=GOFEED(LSEG)                                            M0025100
      CALL EWRITE(EXFILE,NR,FEDRAT,J,IR)                                M0025200
C                                                                       M0025300
C  NEAR POINT                                                           M0025400
   75 NR=0                                                              M0025500
      J=18                                                              M0025600
      CALL RECORD(ILEIT(4))                                             M0025700
      ISEQNO=ILEIT(4)                                                   M0025800
      LEIT(5)=MODF(9)                                                   M0025900
      LEIT(7)=OBNAM1                                                    M0026000
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0026100
      ICL=3                                                             M0026200
C                                                                       M0026300
C  STORING TOOL AXIS                                                    M0026400
      DO 76 I=1,3                                                       M0026500
      TAK(I)=TA(I)                                                      M0026600
   76 VT(I)=SPV(36+I)                                                   M0026700
      CALL TRANSM(TA,VT,3,3,0)                                          M0026800
C                                                                       M0026900
C  STORING TOOL TIP                                                     M0027000
      DO 77 I=1,3                                                       M0027100
      TEK(I)=TE(I)                                                      M0027200
   77 PT(I)=DM(I)                                                       M0027300
      CALL TRANSM(TE,PT,2,3,0)                                          M0027400
      CALL ATAPE                                                        M0027500
C                                                                       M0027600
C  FEDRAT FOR NORMAL GOLOFT                                             M0027700
      IF(GOFEED(LSEG).EQ.0.D0.OR.LSEG.EQ.2.OR.LSEG.EQ.3)GOTO 80         M0027800
      NR=0                                                              M0027900
      J=10                                                              M0028000
      CALL RECORD(ISEQNO)                                               M0028100
      IFEDR(4)=ISEQNO                                                   M0028200
      FEDRAT(5)=GLFEED                                                  M0028300
      CALL EWRITE(EXFILE,NR,FEDRAT,J,IR)                                M0028400
C                                                                       M0028500
C  CLEAR POINT                                                          M0028600
   80 IF(ICANIN(LSEG).EQ.0)GOTO 99                                      M0028700
C                                                                       M0028800
C   RAPID                                                               M0028900
      NR=0                                                              M0029000
      J=10                                                              M0029100
      CALL RECORD(ISEQNO)                                               M0029200
      IRAPI(4)=ISEQNO                                                   M0029300
      CALL EWRITE(EXFILE,NR,RAPID,J,IR)                                 M0029400
C                                                                       M0029500
C   CLEAR POINT                                                         M0029600
      NR=0                                                              M0029700
      J=18                                                              M0029800
      CALL RECORD(ILEIT(4))                                             M0029900
      ISEQNO=ILEIT(4)                                                   M0030000
      LEIT(5)=MODF(8)                                                   M0030100
      LEIT(7)=OBNAM1                                                    M0030200
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0030300
      ICL=3                                                             M0030400
C                                                                       M0030500
C  STORING TOOL AXIS                                                    M0030600
      DO 81 I=1,3                                                       M0030700
      TAK(I)=TA(I)                                                      M0030800
   81 VT(I)=SPV(36+I)                                                   M0030900
      CALL TRANSM(TA,VT,3,3,0)                                          M0031000
C                                                                       M0031100
C  STORING TOOL TIP                                                     M0031200
      DO 82 I=1,3                                                       M0031300
      TEK(I)=TE(I)                                                      M0031400
   82 PT(I)=CP(I)                                                       M0031500
      CALL TRANSM(TE,PT,2,3,0)                                          M0031600
      CALL ATAPE                                                        M0031700
      GOTO 99                                                           M0031800
C                                                                       M0031900
C  OUTPUT OF THE HEADER                                                 M0032000
   90 IF((INVERS.EQ.0.AND.(LSEG.EQ.2.OR.LSEG.EQ.4)).OR.                 M0032100
     *   (INVERS.EQ.1.AND.(LSEG.EQ.1.OR.LSEG.EQ.3)))GOTO 99             M0032200
      NR=0                                                              M0032300
      J=18                                                              M0032400
      CALL RECORD(ILEIT(4))                                             M0032500
      ISEQNO=ILEIT(4)                                                   M0032600
      LEIT(5)=MODF(IART)                                                M0032700
      LEIT(7)=OBNAM1                                                    M0032800
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0032900
      ICL=ICLS                                                          M0033000
C                                                                       M0033100
   99 RETURN                                                            M0033200
      END                                                               M0033300
**** SOURCE FILE : M0012365.V01   ***
*
      SUBROUTINE INTBND(NS,IRC)                                         M0000100
C                                                                       M0000200
C     CALCULATES A SURFACE BOUNDARY PT ON THE INTERSECTION OF           M0000300
C     TWO SURFACES.                                                     M0000400
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000500
C                                                                       M0000600
C SS - ARELEM - COMMON                                                  M0000700
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0000800
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0000900
C                                                                       M0001000
C   COMMON FOR 2 SURFACE INTERSECTION                                   M0001100
      COMMON/INTCOM/IKEEP(255)                                          M0001200
C   EVALUATION VECTOR FOR PS AND DS                                     M0001300
      DOUBLE PRECISION SPV(4,8,2)                                       M0001400
      EQUIVALENCE (IKEEP(  1),SPV(1,1,1))                               M0001500
C   LAST THREE U,V PAIRS OF PS AND DS                                   M0001600
      DOUBLE PRECISION UV(2,3,2)                                        M0001700
      EQUIVALENCE (IKEEP(129),UV(1,1,1))                                M0001800
C   HISTORY OF UNIT NORMALS AT INTERSECTION POINTS ON PS AND DS         M0001900
      DOUBLE PRECISION UN(3,3,2)                                        M0002000
      EQUIVALENCE (IKEEP(165),UN(1,1,1))                                M0002100
C   THICKNESS ON PS AND DS                                              M0002200
      DOUBLE PRECISION THICK(2)                                         M0002300
      EQUIVALENCE (IKEEP(201),THICK(1))                                 M0002400
C   POINT OF INTERSECTION                                               M0002500
      DOUBLE PRECISION PXYZ(3)                                          M0002600
      EQUIVALENCE (IKEEP(205),PXYZ(1))                                  M0002700
C   OLD POINT OF INTERSECTION                                           M0002800
      DOUBLE PRECISION OXYZ(3)                                          M0002900
      EQUIVALENCE (IKEEP(211),OXYZ(1))                                  M0003000
C   DS TANGENT PLANE                                                    M0003100
      DOUBLE PRECISION DTP(4)                                           M0003200
      EQUIVALENCE (IKEEP(217),DTP(1))                                   M0003300
C   PS TANGENT PLANE                                                    M0003400
      DOUBLE PRECISION PTP(4)                                           M0003500
      EQUIVALENCE (IKEEP(225),PTP(1))                                   M0003600
C   PLANE PERPENTICULAR TO INTERSECTION DIRECTION                       M0003700
      DOUBLE PRECISION CTP(4)                                           M0003800
      EQUIVALENCE (IKEEP(233),CTP(1))                                   M0003900
C  TRACE                                                                M0004000
CCCCC EQUIVALENCE (IKEEP(249),ITRACE)                                   M0004100
C                                                                       M0004200
      DIMENSION CTPI(4),PL(4,3)                                         M0004300
      DIMENSION DXYZ(3,2),P1(3),P2(3)                                   M0004400
      LOGICAL UXBND,VXBND                                               M0004500
C                                                                       M0004600
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0004700
C                                                                       M0004800
CCCCC IF(ITRACE.EQ.1)                                                   M0004900
CCCCC*WRITE(6,1000)KS                                                   M0005000
C1000 FORMAT(' ***TRACE***INTBND-KS=',I5)                               M0005100
      UXBND = .FALSE.                                                   M0005200
      VXBND = .FALSE.                                                   M0005300
      U  =UV(1,1,NS)                                                    M0005400
      V  =UV(2,1,NS)                                                    M0005500
C                                                                       M0005600
C DETERMINE PARAMETRIC VALUE OF BOUNDARY (UBND OR VBND)                 M0005700
C -----------------------------------------------------                 M0005800
C  TEST FIRST FOR U OR V OR U&V OUT OF BOUNDS                           M0005900
      UUU=DABS(U-.5D0) + 1.D-12                                         M0006000
      VVV=DABS(V-.5D0) + 1.D-12                                         M0006100
      NT = 0                                                            M0006200
      UBND = 0.D0                                                       M0006300
C IS U OUT OF BOUNDS?                                                   M0006400
      IF (UUU.LT..5D0) GOTO 30                                          M0006500
C U OUT OF BOUNDS; LIMIT: 0 <= UBND <= 1.                               M0006600
      IF(U.GT..5D0)UBND = 1.D0                                          M0006700
      NT = NT + 1                                                       M0006800
      UXBND = .TRUE.                                                    M0006900
   30 CONTINUE                                                          M0007000
      VBND = 0.D0                                                       M0007100
C IS V OUT OF BOUNDS?                                                   M0007200
      IF (VVV.LT..5D0) GOTO 50                                          M0007300
C V OUT OF BOUNDS; LIMIT: 0 <= VBND <= 1.                               M0007400
      IF(V.GT..5D0)VBND = 1.D0                                          M0007500
      NT = NT + 1                                                       M0007600
      VXBND = .TRUE.                                                    M0007700
   50 CONTINUE                                                          M0007800
C RESET U,V HISTORY TABLE:                                              M0007900
      UV(1,1,NS)=U                                                      M0008000
      UV(1,2,NS)=U                                                      M0008100
      UV(1,3,NS)=U                                                      M0008200
      UV(2,1,NS)=V                                                      M0008300
      UV(2,2,NS)=V                                                      M0008400
      UV(2,3,NS)=V                                                      M0008500
      IF (.NOT. UXBND) GOTO 60                                          M0008600
C SET UUU AT APPROPRIATE BOUNDARY:                                      M0008700
      UUU = UBND                                                        M0008800
      J=2                                                               M0008900
      JJ=3                                                              M0009000
      GOTO 80                                                           M0009100
   60 CONTINUE                                                          M0009200
      IF (.NOT. VXBND) GOTO 70                                          M0009300
C SET VVV AT APPROPRIATE BOUNDARY:                                      M0009400
      VVV = VBND                                                        M0009500
      J=3                                                               M0009600
      JJ=2                                                              M0009700
      GOTO 80                                                           M0009800
   70 CONTINUE                                                          M0009900
      GO TO 999                                                         M0010000
   80 CONTINUE                                                          M0010100
C                                                                       M0010200
C EXECUTE THIS CODE FOR U BOUNDARY OR V BOUNDARY (OR BOTH):             M0010300
      DO 200 IS = 1,NT                                                  M0010400
C                                                                       M0010500
C ITERATE (MAX. 15 TIMES) TO FIND INTERSECTION PT PXYZ ON BOUNDARY      M0010600
C ----------------------------------------------------------------      M0010700
      DO 220 K=1,15                                                     M0010800
      KK=K                                                              M0010900
      HTX=PXYZ(1)                                                       M0011000
      HTY=PXYZ(2)                                                       M0011100
      HTZ=PXYZ(3)                                                       M0011200
C                                                                       M0011300
C USE PXYZ FROM PREVIOUS LOOP:                                          M0011400
      DO 240 L=1,3                                                      M0011500
      P1(L)=PXYZ(L)                                                     M0011600
      P2(L)=PXYZ(L)                                                     M0011700
  240 CONTINUE                                                          M0011800
C                                                                       M0011900
C EVALUATE POINT, NORMAL & PARTIALS ALONG BOUNDARY:                     M0012000
      DUV=-.0001D0                                                      M0012100
      DO 190 L=1,3                                                      M0012200
      IF(L.EQ.3) DUV=0.D0                                               M0012300
C ON V BOUNDARY, SET UUU = U-DUV, U+DUV, U.                             M0012400
      IF(J.EQ.3) UUU=UV(1,1,NS) + DUV                                   M0012500
C ON U BOUNDARY, SET VVV = V-DUV, V+DUV, V.                             M0012600
      IF(J.EQ.2) VVV=UV(2,1,NS) + DUV                                   M0012700
C COMPUTE POINT, NORMAL & PARTIALS AT UUU,VVV ON SURFACE I:             M0012800
      CALL CNSURF(UUU,VVV,BB(1,NS),SPV(1,1,NS),IIFLAG(1,NS),0)          M0012900
      IF (L.GT.2) GOTO 250                                              M0013000
C ON U BOUNDARY, SAVE V-PARTIALS; ON V BOUNDARY, SAVE U-PARTIALS:       M0013100
      DXYZ(1,L)=SPV(1,JJ,NS)                                            M0013200
      DXYZ(2,L)=SPV(2,JJ,NS)                                            M0013300
      DXYZ(3,L)=SPV(3,JJ,NS)                                            M0013400
  250 CONTINUE                                                          M0013500
      DUV=-DUV                                                          M0013600
  190 CONTINUE                                                          M0013700
C                                                                       M0013800
C COMPUTE YPL = NORMAL TO PLANE OF BOUNDARY:                            M0013900
C ------------------------------------------                            M0014000
C                                                                       M0014100
C TRY YPL = CROSS PRODUCT OF V-PARTIAL & NORMAL VECTOR:                 M0014200
      CTPI(1)=SPV(2,JJ,NS)*SPV(3,8,NS) - SPV(3,JJ,NS)*SPV(2,8,NS)       M0014300
      CTPI(2)=SPV(3,JJ,NS)*SPV(1,8,NS) - SPV(1,JJ,NS)*SPV(3,8,NS)       M0014400
      CTPI(3)=SPV(1,JJ,NS)*SPV(2,8,NS) - SPV(2,JJ,NS)*SPV(1,8,NS)       M0014500
      IYPL=1                                                            M0014600
      SEC=DSQRT(CTPI(1)**2 + CTPI(2)**2 + CTPI(3)**2)                   M0014700
C IS VECTOR LARGE ENOUGH? ...                                           M0014800
      IF (SEC.LE.1.D-10) GOTO 260                                       M0014900
C NORMALIZE YPL:                                                        M0015000
      CTPI(1)=CTPI(1)/SEC                                               M0015100
      CTPI(2)=CTPI(2)/SEC                                               M0015200
      CTPI(3)=CTPI(3)/SEC                                               M0015300
C CTPI(4) = DOT PRODUCT OF YPL & BOUNDARY POINT:                        M0015400
      CTPI(4)=CTPI(1)*SPV(1,1,NS) + CTPI(2)*SPV(2,1,NS)                 M0015500
     *                            + CTPI(3)*SPV(3,1,NS)                 M0015600
      GOTO 270                                                          M0015700
  260 CONTINUE                                                          M0015800
C                                                                       M0015900
C TRY YPL = CROSS PRODUCT OF V-PARTIALS AT V +/- DELTA:                 M0016000
C                                                                       M0016100
      IYPL=0                                                            M0016200
      CTPI(1)=DXYZ(2,1)*DXYZ(3,2) - DXYZ(3,1)*DXYZ(2,2)                 M0016300
      CTPI(2)=DXYZ(3,1)*DXYZ(1,2) - DXYZ(1,1)*DXYZ(3,2)                 M0016400
      CTPI(3)=DXYZ(1,1)*DXYZ(2,2) - DXYZ(2,1)*DXYZ(1,2)                 M0016500
      SEC=DSQRT(CTPI(1)**2 + CTPI(2)**2 + CTPI(3)**2)                   M0016600
C IS VECTOR LARGE ENOUGH? ***                                           M0016700
      IF (SEC.GE.1.D-20) GOTO 280                                       M0016800
C                                                                       M0016900
C USE YPL = U-PARTIAL AT U,V:                                           M0017000
C                                                                       M0017100
      IYPL=0                                                            M0017200
      CTPI(1)=SPV(1,J,NS)                                               M0017300
      CTPI(2)=SPV(2,J,NS)                                               M0017400
      CTPI(3)=SPV(3,J,NS)                                               M0017500
      SEC=DSQRT(CTPI(1)**2 + CTPI(2)**2 + CTPI(3)**2)                   M0017600
  280 CONTINUE                                                          M0017700
C NORMALIZE CTPI:                                                       M0017800
      CTPI(1)=CTPI(1)/SEC                                               M0017900
      CTPI(2)=CTPI(2)/SEC                                               M0018000
      CTPI(3)=CTPI(3)/SEC                                               M0018100
  270 CONTINUE                                                          M0018200
C                                                                       M0018300
C COMPUTE PLANES TANGENT TO S1 & S2 BELOW PXYZ:                         M0018400
C ---------------------------------------------                         M0018500
C  COMPUTE PLANE DTP TANGENT TO DS:                                     M0018600
      CALL INTTPL(2,P1,DTP,IRC)                                         M0018700
C COMPUTE PLANE PTP TANGENT TO PS:                                      M0018800
      CALL INTTPL(1,P2,PTP,IRC)                                         M0018900
C                                                                       M0019000
C RELOAD DT TABLES WITH SURFACE NORMAL OFFSETS                          M0019100
      UN(1,1,2)=DTP(1)                                                  M0019200
      UN(2,1,2)=DTP(2)                                                  M0019300
      UN(3,1,2)=DTP(3)                                                  M0019400
      UN(1,1,1)=PTP(1)                                                  M0019500
      UN(2,1,1)=PTP(2)                                                  M0019600
      UN(3,1,1)=PTP(3)                                                  M0019700
      DO 290 L=1,3                                                      M0019800
      UN(L,2,1)=UN(L,1,1)                                               M0019900
      UN(L,2,2)=UN(L,1,2)                                               M0020000
      UN(L,3,1)=UN(L,2,1)                                               M0020100
      UN(L,3,2)=UN(L,2,2)                                               M0020200
C EVALUATE THICKNESS                                                    M0020300
      SPV(L,1,NS)=SPV(L,1,NS) + UN(L,1,NS)*THICK(NS)                    M0020400
  290 CONTINUE                                                          M0020500
C IF BOUNDARY ALGORITHM 2 OR 3, YPL(4) = DOT PRODUCT OF YPL AND         M0020600
C  OFFSET BOUNDARY POINT:                                               M0020700
      IF(IYPL.EQ.0)                                                     M0020800
     *CTPI(4)=CTPI(1)*SPV(1,1,NS) + CTPI(2)*SPV(2,1,NS)                 M0020900
     *                            + CTPI(3)*SPV(3,1,NS)                 M0021000
C                                                                       M0021100
C LOAD PL TABLE                                                         M0021200
      DO 300 L=1,4                                                      M0021300
      PL(L,1)=PTP(L)                                                    M0021400
      PL(L,2)=CTPI(L)                                                   M0021500
      PL(L,3)=DTP(L)                                                    M0021600
  300 CONTINUE                                                          M0021700
C                                                                       M0021800
C SOLVE FOR PXYZ AT INTERSECTION OF PLANES PTP,YPL,DTP:                 M0021900
C -----------------------------------------------------                 M0022000
      DO 310 L=1,4                                                      M0022100
      I1=1                                                              M0022200
      J1=2                                                              M0022300
      K1=3                                                              M0022400
      IF(L.EQ.2) I1=4                                                   M0022500
      IF(L.EQ.3) J1=4                                                   M0022600
      IF(L.EQ.4) K1=4                                                   M0022700
C CRAMER'S RULE:                                                        M0022800
      DET=  PL(I1,1)*PL(J1,2)*PL(K1,3) + PL(I1,2)*PL(J1,3)*PL(K1,1)     M0022900
     *    + PL(I1,3)*PL(J1,1)*PL(K1,2) - PL(I1,3)*PL(J1,2)*PL(K1,1)     M0023000
     *    - PL(I1,2)*PL(J1,1)*PL(K1,3) - PL(I1,1)*PL(J1,3)*PL(K1,2)     M0023100
      IF (L.NE.1) GOTO 330                                              M0023200
      DEN=DET                                                           M0023300
C DEGENERATE SOLUTION?                                                  M0023400
      IF (DABS(DEN).LT.1.D-16) GOTO 320                                 M0023500
      GOTO 340                                                          M0023600
  330 CONTINUE                                                          M0023700
      PXYZ(L-1)=DET/DEN                                                 M0023800
  340 CONTINUE                                                          M0023900
  310 CONTINUE                                                          M0024000
  320 CONTINUE                                                          M0024100
      IF (DABS(DEN).GE.1.D-16) GOTO 350                                 M0024200
C DEGENERATE SOLN; COMPUTE TANGENT YABC & PXYZ ON DTP & PTP:            M0024300
      SAL=PTP(1)*DTP(1) + PTP(2)*DTP(2) + PTP(3)*DTP(3)                 M0024400
      CALSQ=1.D0-SAL*SAL                                                M0024500
      IF (CALSQ.LE.1.D-20) GOTO 360                                     M0024600
      CAL=DSQRT(CALSQ)*CTP(4)                                           M0024700
      CTP(1)=(DTP(2)*PTP(3)-PTP(2)*DTP(3))/CAL                          M0024800
      CTP(2)=(DTP(3)*PTP(1)-PTP(3)*DTP(1))/CAL                          M0024900
      CTP(3)=(DTP(1)*PTP(2)-PTP(1)*DTP(2))/CAL                          M0025000
      D1=(PTP(4)-SAL*DTP(4))/CALSQ                                      M0025100
      D2=DTP(4)-SAL*D1                                                  M0025200
      D3=CTP(1)*PXYZ(1) + CTP(2)*PXYZ(2) + CTP(3)*PXYZ(3)               M0025300
      PXYZ(1)=PTP(1)*D1 + DTP(1)*D2 + CTP(1)*D3                         M0025400
      PXYZ(2)=PTP(2)*D1 + DTP(2)*D2 + CTP(2)*D3                         M0025500
      PXYZ(3)=PTP(3)*D1 + DTP(3)*D2 + CTP(3)*D3                         M0025600
  360 CONTINUE                                                          M0025700
  350 CONTINUE                                                          M0025800
      DIS=DSQRT((PXYZ(1)-HTX)**2 + (PXYZ(2)-HTY)**2 + (PXYZ(3)-HTZ)**2) M0025900
C CONVERGENCE?                                                          M0026000
      IF (DIS.LT.1.D-12) GOTO 230                                       M0026100
  220 CONTINUE                                                          M0026200
  230 CONTINUE                                                          M0026300
C                                                                       M0026400
C DONE WITH THIS BOUNDARY; CHECK BOUNDS & TRY OTHER ONE IF NECESSARY    M0026500
C ------------------------------------------------------------------    M0026600
      IF (NT.EQ.1) GOTO 210                                             M0026700
C                                                                       M0026800
C BOTH U & V ARE OUT OF BOUNDS, CHECK IF NOW IN BOUNDS:                 M0026900
      HU = UV(1,1,NS)                                                   M0027000
      HV = UV(2,1,NS)                                                   M0027100
      CALL INTNRM(NS,HU,HV,PXYZ,SPV,IRC)                                M0027200
C POINT IS ALONG U BOUNDARY; IF TRULY WITHIN BOUNDS, RETURN: ***        M0027300
      IF (IRC.EQ.0 .OR. J.EQ.3) GOTO 210                                M0027400
C                                                                       M0027500
C SET VVV AT APPROPRIATE BOUNDARY:                                      M0027600
      VVV = VBND                                                        M0027700
      J=3                                                               M0027800
      JJ=2                                                              M0027900
  200 CONTINUE                                                          M0028000
  210 CONTINUE                                                          M0028100
C                                                                       M0028200
C LOAD THIS UV FOR LAST CALL TO INTTPL IN INTCON                        M0028300
      DO 370 M=1,3                                                      M0028400
      UV(1,M,NS)=UUU                                                    M0028500
      UV(2,M,NS)=VVV                                                    M0028600
  370 CONTINUE                                                          M0028700
C                                                                       M0028800
  999 RETURN                                                            M0028900
      END                                                               M0029000
**** SOURCE FILE : M0004614.V01   ***
*
      SUBROUTINE INTCON(PT,NPT,KS)                                      M0000100
C                                                                       M0000200
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000300
C                                                                       M0000400
C SS - ARELEM - COMMON                                                  M0000500
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0000600
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0000700
C                                                                       M0000800
C   COMMON FOR 2 SURFACE INTERSECTION                                   M0000900
      COMMON/INTCOM/IKEEP(255)                                          M0001000
C   LAST THREE U,V PAIRS OF PS AND DS                                   M0001100
      DOUBLE PRECISION UV(2,3,2)                                        M0001200
      EQUIVALENCE (IKEEP(129),UV(1,1,1))                                M0001300
C   HISTORY OF UNIT NORMALS AT INTERSECTION POINTS ON PS AND DS         M0001400
      DOUBLE PRECISION UN(3,3,2)                                        M0001500
      EQUIVALENCE (IKEEP(165),UN(1,1,1))                                M0001600
C   POINT OF INTERSECTION                                               M0001700
      DOUBLE PRECISION PXYZ(3)                                          M0001800
      EQUIVALENCE (IKEEP(205),PXYZ(1))                                  M0001900
C   OLD POINT OF INTERSECTION                                           M0002000
      DOUBLE PRECISION OXYZ(3)                                          M0002100
      EQUIVALENCE (IKEEP(211),OXYZ(1))                                  M0002200
C   DS TANGENT PLANE                                                    M0002300
      DOUBLE PRECISION DTP(4)                                           M0002400
      EQUIVALENCE (IKEEP(217),DTP(1))                                   M0002500
C   PS TANGENT PLANE                                                    M0002600
      DOUBLE PRECISION PTP(4)                                           M0002700
      EQUIVALENCE (IKEEP(225),PTP(1))                                   M0002800
C   PLANE PERPENTICULAR TO INTERSECTION DIRECTION                       M0002900
      DOUBLE PRECISION CTP(4)                                           M0003000
      EQUIVALENCE (IKEEP(233),CTP(1))                                   M0003100
C   8 TIMES ABSOLUTE TOLERANCE                                          M0003200
      DOUBLE PRECISION CK                                               M0003300
      EQUIVALENCE (IKEEP(241),CK)                                       M0003400
C   MAXIMUM STEP                                                        M0003500
      DOUBLE PRECISION STEPMX                                           M0003600
      EQUIVALENCE (IKEEP(243),STEPMX)                                   M0003700
C   STEP LENGTH                                                         M0003800
      DOUBLE PRECISION STEP                                             M0003900
      EQUIVALENCE (IKEEP(245),STEP)                                     M0004000
C   OLD STEP LENGTH                                                     M0004100
      DOUBLE PRECISION OSTEP                                            M0004200
      EQUIVALENCE (IKEEP(247),OSTEP)                                    M0004300
C   TRACE                                                               M0004400
CCCCC EQUIVALENCE (IKEEP(249),ITRACE)                                   M0004500
C   INTERNAL POINT COUNT                                                M0004600
      EQUIVALENCE (IKEEP(250),IPTKNT)                                   M0004700
C   MAXIMUM NUMBER OF POINTS                                            M0004800
      EQUIVALENCE (IKEEP(251),NPTS)                                     M0004900
C   OUT OF BOUND SIGNAL FOR PS AND DS                                   M0005000
      INTEGER ISFER(2)                                                  M0005100
      EQUIVALENCE (IKEEP(252),ISFER(1))                                 M0005200
C   PATCH NUMBER FOR PS AND DS (SURFACE RECNO*1000 + PATCH NO)          M0005300
      INTEGER IPNR(2)                                                   M0005400
      EQUIVALENCE (IKEEP(254),IPNR(1))                                  M0005500
C                                                                       M0005600
      DOUBLE PRECISION PT(9,1),PL(4)                                    M0005700
      DOUBLE PRECISION PT0(3)                                           M0005800
      LOGICAL LPLANE, LSKIP                                             M0005900
C                                                                       M0006000
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0006100
C                                                                       M0006200
C INITIAL STARTUP INFO.                                                 M0006300
C                                                                       M0006400
CCCCC IF(ITRACE.EQ.1)                                                   M0006500
CCCCC*WRITE(6,1000)KS,PXYZ                                              M0006600
C1000 FORMAT(' ***TRACE***INTCON-KS,START PXYZ=',I5,3G12.5)             M0006700
      ISTATE = 1                                                        M0006800
      NBOUND = 0                                                        M0006900
      IPT=1                                                             M0007000
      NPT=0                                                             M0007100
      IPTKNT=NPTS                                                       M0007200
      IPTCK=IPTKNT-2                                                    M0007300
      HSTEP=STEPMX                                                      M0007400
C MAX. STEP = .25 FOR FIRST TWO POINTS:                                 M0007500
      STEPMX=.25D0 * 25.4D0                                             M0007600
      STMIN = 0.01D0 * 25.4D0                                           M0007700
      IF (STEPMX.NE.0.D0) GOTO 50                                       M0007800
      STEPMX = .25D0                                                    M0007900
      STMIN = .25D0                                                     M0008000
   50 CONTINUE                                                          M0008100
C                                                                       M0008200
C SAVE INITIAL TANGENT FOR DETECTING LOOPAROUND TO START:               M0008300
      PL(1)=CTP(1)                                                      M0008400
      PL(2)=CTP(2)                                                      M0008500
      PL(3)=CTP(3)                                                      M0008600
      PL(4)=CTP(1)*PXYZ(1) + CTP(2)*PXYZ(2) + CTP(3)*PXYZ(3)            M0008700
      ICONT=1                                                           M0008800
      NDROP=-3                                                          M0008900
      STEP=0.D0                                                         M0009000
      OSTEP=STEP                                                        M0009100
      RADC=2000.D0                                                      M0009200
      DX=0.D0                                                           M0009300
      DY=0.D0                                                           M0009400
      DZ=0.D0                                                           M0009500
      ISTOUT=0                                                          M0009600
      CURVCK=CK*2.D0                                                    M0009700
      DIST = 0.D0                                                       M0009800
      LPLANE = .FALSE.                                                  M0009900
C IS S1 A PLANE?                                                        M0010000
      IF(IIFLAG(1,2).LE.0)LPLANE = .TRUE.                               M0010100
C                                                                       M0010200
C PROCEED TO NEXT POINT; SAVE ALL CURRENT POSITIONS                     M0010300
  100 CONTINUE                                                          M0010400
C HISTORY OF UNIT NORMAL "UN":                                          M0010500
      DO 110 I=1,3                                                      M0010600
      UN(I,3,1)=UN(I,2,1)                                               M0010700
      UN(I,3,2)=UN(I,2,2)                                               M0010800
      UN(I,2,1)=UN(I,1,1)                                               M0010900
      UN(I,2,2)=UN(I,1,2)                                               M0011000
  110 CONTINUE                                                          M0011100
C PREVIOUS TANGENT YABC & PREVIOUS INTERSECTION PT. PXYZ:               M0011200
      OYA=CTP(1)                                                        M0011300
      OYB=CTP(2)                                                        M0011400
      OYC=CTP(3)                                                        M0011500
      OXYZ(1)=PXYZ(1)                                                   M0011600
      OXYZ(2)=PXYZ(2)                                                   M0011700
      OXYZ(3)=PXYZ(3)                                                   M0011800
C DISTANCE ALONG INTERSECTION:                                          M0011900
      ODIST = DIST                                                      M0012000
C SHIFT U,V PARAMETERS FOR BOTH SURFACES WITHIN THE HISTORY TABLE       M0012100
C  (LATEST U,V ARE STORED BY INTTPL):                                   M0012200
      DO 114 I = 1,2                                                    M0012300
C STACK U HISTORY:                                                      M0012400
      UV(1,3,I) = UV(1,2,I)                                             M0012500
      UV(1,2,I) = UV(1,1,I)                                             M0012600
C STACK V HISTORY:                                                      M0012700
      UV(2,3,I) = UV(2,2,I)                                             M0012800
  114 UV(2,2,I) = UV(2,1,I)                                             M0012900
      ISFER(1)=0                                                        M0013000
      ISFER(2)=0                                                        M0013100
C AFTER FIRST TWO PTS. RESTORE MAX. STEP TO INPUT VALUE:                M0013200
      IF(IPTCK.EQ.IPTKNT) STEPMX=HSTEP                                  M0013300
C DECREMENT POINT COUNTDOWN COUNTER:                                    M0013400
      IPTKNT=IPTKNT-1                                                   M0013500
      IF(IPTKNT.LE.0)GO TO 920                                          M0013600
C IPAR = COUNTER OF RETRIES WHEN TANGENT PLANES ARE PARALLEL            M0013700
      IPAR = 0                                                          M0013800
      LSKIP = .FALSE.                                                   M0013900
C                                                                       M0014000
C CONTINUE ITERATING TO FIND A POINT:                                   M0014100
  120 CONTINUE                                                          M0014200
C                                                                       M0014300
C  EXTRAPOLATE NEXT POINT                                               M0014400
C  ----------------------                                               M0014500
      HX=OXYZ(1) + STEP*OYA                                             M0014600
      HY=OXYZ(2) + STEP*OYB                                             M0014700
      HZ=OXYZ(3) + STEP*OYC                                             M0014800
      PXYZ(1)=HX + DX                                                   M0014900
      PXYZ(2)=HY + DY                                                   M0015000
      PXYZ(3)=HZ + DZ                                                   M0015100
C                                                                       M0015200
  125 CONTINUE                                                          M0015300
C                                                                       M0015400
C COMPUTE TANGENT PLANES                                                M0015500
C ----------------------                                                M0015600
C  COMPUTE SCALED DISTANCE ALONG INTERSECTION:                          M0015700
      DIST = ODIST + DSQRT((PXYZ(1)-OXYZ(1))**2                         M0015800
     *                   + (PXYZ(2)-OXYZ(2))**2 + (PXYZ(3)-OXYZ(3))**2) M0015900
C COMPUTE PLANE DTP, TANGENT TO DS                                      M0016000
      CALL INTTPL(2,PXYZ,DTP,ISFER(2))                                  M0016100
C COMPUTE PLANE PTP, TANGENT TO PS                                      M0016200
      CALL INTTPL(1,PXYZ,PTP,ISFER(1))                                  M0016300
C                                                                       M0016400
C SAL = COS OF ANGLE BETWEEN PLANES:                                    M0016500
      SAL=PTP(1)*DTP(1) + PTP(2)*DTP(2) + PTP(3)*DTP(3)                 M0016600
      CALSQ=1.D0-SAL*SAL                                                M0016700
C                                                                       M0016800
C ARE THE SURFACES PARALLEL?                                            M0016900
      IF(CALSQ.GT.1.D-20)GO TO 260                                      M0017000
C   ON FIRST PT., TRY ANYWAY:                                           M0017100
      IF(KS.LT.0) GOTO 240                                              M0017200
C TANGENT PLANES ARE PARALLEL; INCREASE STEP SIZE:                      M0017300
      STEP = STEP*1.7D0                                                 M0017400
      IPAR = IPAR + 1                                                   M0017500
C DON'T REDUCE STEP SIZE:                                               M0017600
      IF(ISTATE.EQ.5)ISTATE=6                                           M0017700
      IF(IPAR.LE.2)GO TO 120                                            M0017800
      GOTO 920                                                          M0017900
  240 CALSQ=1.D-20                                                      M0018000
  260 CAL=DSQRT(CALSQ)*CTP(4)                                           M0018100
C                                                                       M0018200
C DS UNIT NORMALS                                                       M0018300
      UN(1,1,2)=DTP(1)                                                  M0018400
      UN(2,1,2)=DTP(2)                                                  M0018500
      UN(3,1,2)=DTP(3)                                                  M0018600
C PS UNIT NORMALS                                                       M0018700
      UN(1,1,1)=PTP(1)                                                  M0018800
      UN(2,1,1)=PTP(2)                                                  M0018900
      UN(3,1,1)=PTP(3)                                                  M0019000
C COMPUTE UNIT TANGENT VECTOR YABC:                                     M0019100
      CTP(1)=(DTP(2)*PTP(3)-PTP(2)*DTP(3))/CAL                          M0019200
      CTP(2)=(DTP(3)*PTP(1)-PTP(3)*DTP(1))/CAL                          M0019300
      CTP(3)=(DTP(1)*PTP(2)-PTP(1)*DTP(2))/CAL                          M0019400
C HCO = COS OF ANGLE BETWEEN THIS TANGENT & PREVIOUS ONE:               M0019500
      HCO=CTP(1)*OYA + CTP(2)*OYB + CTP(3)*OYC                          M0019600
C MAKE SURE CTP HAS NOT REVERSED:                                       M0019700
      IF(HCO.GE.-.9D0)GO TO 270                                         M0019800
      CTP(1) = -CTP(1)                                                  M0019900
      CTP(2) = -CTP(2)                                                  M0020000
      CTP(3) = -CTP(3)                                                  M0020100
      CTP(4) = -CTP(4)                                                  M0020200
      HCO = -HCO                                                        M0020300
C                                                                       M0020400
C PROJECT EXTRAPOLATED POINT ONTO INTERSECTION OF TANGENT PLANES:       M0020500
C ---------------------------------------------------------------       M0020600
  270 D1=(PTP(4)-SAL*DTP(4))/CALSQ                                      M0020700
      D2=DTP(4)-SAL*D1                                                  M0020800
      D3=CTP(1)*PXYZ(1) + CTP(2)*PXYZ(2) + CTP(3)*PXYZ(3)               M0020900
      PXYZ(1)=PTP(1)*D1 + DTP(1)*D2 + CTP(1)*D3                         M0021000
      PXYZ(2)=PTP(2)*D1 + DTP(2)*D2 + CTP(2)*D3                         M0021100
      PXYZ(3)=PTP(3)*D1 + DTP(3)*D2 + CTP(3)*D3                         M0021200
C                                                                       M0021300
C IF START UP (KS=-1), SAVE PT. & EXIT:                                 M0021400
      IF(KS.LT.0) GOTO 540                                              M0021500
C                                                                       M0021600
C TEST FOR BOUNDARY, IF APPROPRIATE:                                    M0021700
C ----------------------------------                                    M0021800
C STILL WITHIN BOUNDS?                                                  M0021900
  280 IF(ISFER(1).EQ.0.AND.ISFER(2).EQ.0)GO TO 290                      M0022000
      IF(ISTATE.EQ.8.OR.ISTATE.EQ.10)GO TO 290                          M0022100
C NO; CUT STEP SIZE AND TRY FOR MORE POINTS:                            M0022200
      NBOUND = NBOUND + 1                                               M0022300
      IF(ISTATE.LT.6.OR.ISTATE.EQ.9)ISTATE = 6                          M0022400
      ISTATE = ISTATE + 1                                               M0022500
      STEP = STEP/10.D0                                                 M0022600
      IF(DABS(STEP).LT.STMIN)STEP = STMIN                               M0022700
      OSTEP = STEP                                                      M0022800
      IF(ISTATE.LT.8)GO TO 120                                          M0022900
  290 CONTINUE                                                          M0023000
C                                                                       M0023100
C BRANCH TO THE STEP CONTROL LOGIC:                                     M0023200
C ---------------------------------                                     M0023300
      GO TO (300,300,310,400,320,350,350,500,540,540),ISTATE            M0023400
  300 STEP=0.D0                                                         M0023500
      ISTATE = ISTATE + 1                                               M0023600
      GOTO 120                                                          M0023700
  310 STEP=STMIN                                                        M0023800
      ISTATE = 4                                                        M0023900
      GOTO 120                                                          M0024000
C                                                                       M0024100
C DECREASE STEP SIZE UNLESS BEND IN INTERSECTION IS NEGLIGIBLE          M0024200
C  AND TRY AGAIN WITH SAME POINT.                                       M0024300
C -------------------------------                                       M0024400
C  CHECK CHORDAL TOLERANCE                                              M0024500
  320 NDROP=NDROP+1                                                     M0024600
      IF(NDROP.GE.0)ISTATE = 6                                          M0024700
C CHECK CURVATURE FIRST                                                 M0024800
      CO=DABS(HCO)                                                      M0024900
      IF(CO.GT..999999997D0) GOTO 325                                   M0025000
      SI=DSQRT(1.D0-CO*CO)                                              M0025100
      FAC=SI*STEP/CURVCK                                                M0025200
      IF(CO.LT..707D0) FAC=100.D0                                       M0025300
      GOTO 326                                                          M0025400
C                                                                       M0025500
C IF HERE, RADC IS CLOSE TO BEING STRAIGHT LINE, CHECK DROP             M0025600
  325 D1=PXYZ(1)-OXYZ(1)                                                M0025700
      D2=PXYZ(2)-OXYZ(2)                                                M0025800
      D3=PXYZ(3)-OXYZ(3)                                                M0025900
      SEC=DSQRT(D1*D1 + D2*D2 + D3*D3)                                  M0026000
      IF(SEC.EQ.0.D0) SEC=1.D0                                          M0026100
      D1=D1/SEC                                                         M0026200
      D2=D2/SEC                                                         M0026300
      D3=D3/SEC                                                         M0026400
      CO=DABS(D1*OYA + D2*OYB + D3*OYC)                                 M0026500
      IF(CO.GT..9999999D0) GOTO 350                                     M0026600
      SI=DSQRT(1.D0-CO*CO)                                              M0026700
      FAC=SEC*SI/CK                                                     M0026800
  326 IF(FAC.LT.1.1D0) GOTO 350                                         M0026900
C SCALE DOWN STEP SIZE:                                                 M0027000
      STEP=STEP/DSQRT(FAC)                                              M0027100
C                                                                       M0027200
C LOAD OLD UV FOR STEP FIX POINT ON SURFACE                             M0027300
      DO 340 J=1,2                                                      M0027400
      DO 340 I=1,3,2                                                    M0027500
      UV(1,I,J)=UV(1,2,J)                                               M0027600
      UV(2,I,J)=UV(2,2,J)                                               M0027700
  340 CONTINUE                                                          M0027800
      GOTO 120                                                          M0027900
C                                                                       M0028000
C COMPUTE CORRECTION DX & STEP SIZE FOR NEXT POINT:                     M0028100
C -------------------------------------------------                     M0028200
  350 CONTINUE                                                          M0028300
      NDROP=-3                                                          M0028400
C IF NOT AT EDGE, ITERATE ON NEXT POINT:                                M0028500
      IF(ISTATE.EQ.6)ISTATE = 5                                         M0028600
      DX=PXYZ(1)-HX                                                     M0028700
      DY=PXYZ(2)-HY                                                     M0028800
      DZ=PXYZ(3)-HZ                                                     M0028900
C                                                                       M0029000
      IF(ISTOUT.NE.0) GOTO 400                                          M0029100
      ISTOUT=1                                                          M0029200
      GOTO 120                                                          M0029300
C                                                                       M0029400
C EXTRAPOLATE STEP SIZE FOR NEXT PXYZ                                   M0029500
C -----------------------------------                                   M0029600
  400 IF(CTP(1)**2 + CTP(2)**2 + CTP(3)**2.LT.1.D-10) GOTO 920          M0029700
C                                                                       M0029800
      OSTEP=DABS(STEP)                                                  M0029900
      IF(NBOUND.EQ.2)GO TO 540                                          M0030000
      ORC=RADC                                                          M0030100
C COMPUTE STEP SIZE:                                                    M0030200
      D1=1.D0-HCO*HCO                                                   M0030300
      IF(D1-2.D-9) 410,410,420                                          M0030400
C USE MAXIMUM STEP SIZE:                                                M0030500
  410 STEP=STEPMX                                                       M0030600
      RADC=2000.D0                                                      M0030700
      GOTO 430                                                          M0030800
  420 SI=DSQRT(D1)                                                      M0030900
C                                                                       M0031000
      IF(STEP.GT..001D0) RADC=DABS(STEP/SI)                             M0031100
      IF(ISTATE.EQ.4) ORC=RADC                                          M0031200
C                                                                       M0031300
C EXTRAP ONLY WHEN ORC & RADC IS REASONABLE                             M0031400
      RFAC=ORC/RADC                                                     M0031500
      IF(RFAC.GT.1.9D0.OR.RFAC.LT..55D0) ORC=RADC                       M0031600
      RCNEXT=2.D0*RADC-ORC                                              M0031700
      IF(RCNEXT.LT..015D0) RCNEXT=.015D0                                M0031800
      STEP=DSQRT(CK*2.D0*RCNEXT)                                        M0031900
      IF(STEP.LT..011D0) STEP=.011D0                                    M0032000
C                                                                       M0032100
C IF RAD. CURV. SMALL, REDUCE DXYZ CORRECTIONS                          M0032200
      IF(RADC.GT..1D0) GOTO 430                                         M0032300
      RFAC=RADC*10.0D0                                                  M0032400
      DX=DX*RFAC                                                        M0032500
      DY=DY*RFAC                                                        M0032600
      DZ=DZ*RFAC                                                        M0032700
  430 CONTINUE                                                          M0032800
      IF(STEP.GT.STEPMX) STEP=STEPMX                                    M0032900
C                                                                       M0033000
      IF(OSTEP-.011D0) 460,460,450                                      M0033100
  450 STEP2=OSTEP*1.5D0                                                 M0033200
      IF(STEP.GT.STEP2) STEP=STEP2                                      M0033300
  460 CONTINUE                                                          M0033400
C GO TO NEXT POINT UNLESS 4TH ITERATION ON 1ST POINT:                   M0033500
      IF(ISTATE.GT.4)GO TO 530                                          M0033600
      ISTATE = 5                                                        M0033700
      GO TO 120                                                         M0033800
C                                                                       M0033900
C AT EDGE; SOLVE FOR BOUNDARY POINT:                                    M0034000
C ----------------------------------                                    M0034100
  500 IF(ISFER(1).NE.0) CALL INTBND(1,ISFER(1))                         M0034200
      IF(ISFER(2).NE.0) CALL INTBND(2,ISFER(2))                         M0034300
      ISTATE = 10                                                       M0034400
C SET IPTKNT FOR NORMAL RETURN:                                         M0034500
      IPTKNT = -1                                                       M0034600
      GO TO 125                                                         M0034700
C                                                                       M0034800
C STORE THE OUTPUT DATA                                                 M0034900
C ---------------------                                                 M0035000
C  IF BEND IN INTERSECTION > 100 DEG., EXIT:                            M0035100
  530 IF(HCO+.174D0) 920,920,540                                        M0035200
C                                                                       M0035300
C OUT OF BOUNDS?                                                        M0035400
  540 IF(ISFER(1).LT.0.OR.ISFER(2).LT.0)GO TO 920                       M0035500
C ACCUMULATE THE LENGTH ALONG INTERSECTION ***                          M0035600
      DIST = ODIST + DSQRT((PXYZ(1)-OXYZ(1))**2                         M0035700
     *                   + (PXYZ(2)-OXYZ(2))**2 + (PXYZ(3)-OXYZ(3))**2) M0035800
      IF (KS.NE.0) GOTO 510                                             M0035900
      IF(IPT.GE.NPTS) GOTO 920                                          M0036000
      IPT=IPT+1                                                         M0036100
  510 CONTINUE                                                          M0036200
C STORE  THE INTERSECTION PT                                            M0036300
      PT(1,IPT)=PXYZ(1)                                                 M0036400
      PT(2,IPT)=PXYZ(2)                                                 M0036500
      PT(3,IPT)=PXYZ(3)                                                 M0036600
      IF (NPT.NE.0) GOTO 550                                            M0036700
C SAVE THE START PT                                                     M0036800
      PT0(1) = PXYZ(1)                                                  M0036900
      PT0(2) = PXYZ(2)                                                  M0037000
      PT0(3) = PXYZ(3)                                                  M0037100
  550 CONTINUE                                                          M0037200
      IF (ISTATE.GE.10) GOTO 700                                        M0037300
C                                                                       M0037400
C CHECK FOR LOOPAROUND TO START (CLOSED SURFACE)                        M0037500
C ----------------------------------------------                        M0037600
C  HAS TANGENT VECTOR GONE NEGATIVE?                                    M0037700
      IF (ICONT.NE.1) GOTO 560                                          M0037800
      CS=PL(1)*CTP(1) + PL(2)*CTP(2) + PL(3)*CTP(3)                     M0037900
      IF(CS.LT.-.707D0) ICONT=-1                                        M0038000
      GOTO 650                                                          M0038100
  560 CONTINUE                                                          M0038200
      IF (ICONT.NE.-1) GOTO 570                                         M0038300
C HAS TANGENT VECTOR GONE NEGATIVE & BACK TO POSITIVE?                  M0038400
C  IF CS GOES POSITIVE, BEGIN CHECKS                                    M0038500
      CS=PL(1)*CTP(1) + PL(2)*CTP(2) + PL(3)*CTP(3)                     M0038600
      IF(CS.GT..707D0) ICONT=0                                          M0038700
      GOTO 650                                                          M0038800
  570 CONTINUE                                                          M0038900
C BACK TO START POSITION?                                               M0039000
C  CONTINOUS CUT FLAG IS ON, CHECK CURRENT POSITION                     M0039100
      D1=PL(1)*PXYZ(1) + PL(2)*PXYZ(2) + PL(3)*PXYZ(3) - PL(4)          M0039200
      IF(D1.LT.0.D0)GO TO 620                                           M0039300
C                                                                       M0039400
C PASSED START POSITION, CHECK DISTANCE FROM CURRENT POSITION           M0039500
C  TO START POINT.                                                      M0039600
      DX1=PXYZ(1)-PT0(1)                                                M0039700
      DY1=PXYZ(2)-PT0(2)                                                M0039800
      DZ1=PXYZ(3)-PT0(3)                                                M0039900
      D1=DABS(CTP(1)*DX1 + CTP(2)*DY1 + CTP(3)*DZ1)                     M0040000
      IF(D1.GT.3.D0*OSTEP) GOTO 620                                     M0040100
      D1=DSQRT(DX1**2 + DY1**2 + DZ1**2)                                M0040200
      IF(D1.LT..01D0) GOTO 605                                          M0040300
      CO=CTP(1)*DX1/D1 + CTP(2)*DY1/D1 + CTP(3)*DZ1/D1                  M0040400
      IF(DABS(CO).GT..9999999D0) GOTO 605                               M0040500
      SI=DSQRT(1.D0-CO*CO)                                              M0040600
      IF(D1*SI/CK.GT.1.2D0) GOTO 620                                    M0040700
C                                                                       M0040800
C LOAD START POINT HERE & SET EXIT FLAG                                 M0040900
  605 IPTKNT=-1                                                         M0041000
      ISTATE = 11                                                       M0041100
      IF (KS.NE.0) GOTO 640                                             M0041200
C                                                                       M0041300
C SET LAST POSITION DATA TO FIRST POSITION DATA                         M0041400
      DO 630 I=1,3                                                      M0041500
      PT(I,IPT)=PT(I,1)                                                 M0041600
      PT(I+3,IPT)=PT(I+3,1)                                             M0041700
      PT(I+6,IPT)=PT(I+6,1)                                             M0041800
  630 CONTINUE                                                          M0041900
      GO TO 920                                                         M0042000
  640 CONTINUE                                                          M0042100
  650 CONTINUE                                                          M0042200
  700 CONTINUE                                                          M0042300
  620 CONTINUE                                                          M0042400
      IF (KS.NE.0 .AND. ISTATE.LE.9 .AND. NPT.NE.0) GOTO 720            M0042500
C STORE PT, NORMAL & TANGENT ...                                        M0042600
C  TZCK = PXYZ(1)*DTP(1) + PXYZ(2)*DTP(2) + PXYZ(3)*DTP(3) - DTP(4)     M0042700
C  TXCK = PXYZ(1)*PTP(1) + PXYZ(2)*PTP(2) + PXYZ(3)*PTP(3) - PTP(4)     M0042800
C   COMPUTE PLANE DTP, TANGENT TO DS                                    M0042900
      CALL INTTPL(2,PXYZ,DTP,ISFER(2))                                  M0043000
C COMPUTE PLANE PTP, TANGENT TO PS                                      M0043100
      CALL INTTPL(1,PXYZ,PTP,ISFER(1))                                  M0043200
C SAL = COS OF ANGLE BETWEEN PLANES:                                    M0043300
      SAL=PTP(1)*DTP(1) + PTP(2)*DTP(2) + PTP(3)*DTP(3)                 M0043400
      CALSQ=1.D0-SAL*SAL                                                M0043500
      IF(CALSQ.LT.1.D-20)CALSQ = 1.D-20                                 M0043600
      CAL=DSQRT(CALSQ)*CTP(4)                                           M0043700
C COMPUTE UNIT TANGENT VECTOR YABC:                                     M0043800
      CTP(1)=(DTP(2)*PTP(3)-PTP(2)*DTP(3))/CAL                          M0043900
      CTP(2)=(DTP(3)*PTP(1)-PTP(3)*DTP(1))/CAL                          M0044000
      CTP(3)=(DTP(1)*PTP(2)-PTP(1)*DTP(2))/CAL                          M0044100
      PT(4,IPT)=UV(1,1,2)                                               M0044200
      PT(5,IPT)=UV(2,1,2)                                               M0044300
      PT(6,IPT)=IPNR(2)                                                 M0044400
      PT(7,IPT)=UV(1,1,1)                                               M0044500
      PT(8,IPT)=UV(2,1,1)                                               M0044600
      PT(9,IPT)=IPNR(1)                                                 M0044700
  720 CONTINUE                                                          M0044800
      NPT = NPT+1                                                       M0044900
C START PT. ONLY?                                                       M0045000
      IF(KS.LT.0)GO TO 920                                              M0045100
C IF OUTSIDE EDGE, QUIT; IF INTERPATCH BOUNDARY, CONTINUE:              M0045200
      IF(ISTATE.EQ.10)GO TO 920                                         M0045300
      IF(ISTATE.EQ.9)ISTATE = 5                                         M0045400
C GO FOR ANOTHER PT. IF NOT AT EDGE OR BACK AT START:                   M0045500
      IF(ISTATE.LT.10)GO TO 100                                         M0045600
C                                                                       M0045700
C RETURN THE LENGTH ALONG INTERSECTION                                  M0045800
C ------------------------------------                                  M0045900
  920 CONTINUE                                                          M0046000
      IF(KS.EQ.0) NPT=IPT                                               M0046100
      STEPMX=HSTEP                                                      M0046200
C                                                                       M0046300
      RETURN                                                            M0046400
      END                                                               M0046500
**** SOURCE FILE : M0012393.V01   ***
*
      SUBROUTINE INTFA1 (FACE,PL,PF,IRC1)                               M0000100
C                                                                       M0000200
      DOUBLE PRECISION FACE(6,3),PL(4),PF(3),V2(3),V3(3)                M0000300
C                                                                       M0000400
      IRC1=0                                                            M0000500
      DO 10 I=1,3                                                       M0000600
      V2(1)=PF(1)-FACE(1,I)                                             M0000700
      V2(2)=PF(2)-FACE(2,I)                                             M0000800
      V2(3)=PF(3)-FACE(3,I)                                             M0000900
      CALL CROSS (V2,FACE(4,I),V3)                                      M0001000
      IF(PL(1)*V3(1)+PL(2)*V3(2)+PL(3)*V3(3).LT.0.D0) GOTO 20           M0001100
   10 CONTINUE                                                          M0001200
      IRC1=1                                                            M0001300
   20 CONTINUE                                                          M0001400
C                                                                       M0001500
      RETURN                                                            M0001600
      END                                                               M0001700
**** SOURCE FILE : M0012399.V01   ***
*
      SUBROUTINE INTFA2 (FACE,PL,P1,P2,IRC1)                            M0000100
C                                                                       M0000200
      DOUBLE PRECISION FACE(6,3),PL(4),P1(3),P2(3),PI(3),DIST,DIST1     M0000300
C                                                                       M0000400
      DIST1=-PL(4)                                                      M0000500
      DIST=0.D0                                                         M0000600
C                                                                       M0000700
      DO 10 I=1,3                                                       M0000800
      DIST1=DIST1+PL(I)*P1(I)                                           M0000900
   10 DIST=DIST+(P2(I)-P1(I))*PL(I)                                     M0001000
C                                                                       M0001100
      DIST=DIST1/DIST                                                   M0001200
C                                                                       M0001300
      DO 20 I=1,3                                                       M0001400
   20 PI(I)=P1(I)+(P2(I)-P1(I))*DIST                                    M0001500
C                                                                       M0001600
      CALL INTFA1(FACE,PL,PI,IRC1)                                      M0001700
C                                                                       M0001800
      RETURN                                                            M0001900
      END                                                               M0002000
**** SOURCE FILE : M0012323.V01   ***
*
      SUBROUTINE INTNRM(NS,U,V,PTA,SPVA,IRC)                            M0000100
C                                                                       M0000200
C     INTNRM COMPUTES THE POINT  ON A SURFACE FROM WHICH A SURFACE      M0000300
C     NORMAL PASSES THRU POINT 'PTA'. THE UV VALUES ARE USED FOR A      M0000400
C     CLOSE APPROXIMATION ON INPUT AND ARE ADJUSTED TO THE ACTUAL       M0000500
C     UV OF SURFACE ON OUTPUT.                                          M0000600
C                                                                       M0000700
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000800
C                                                                       M0000900
      DIMENSION PTA(3),SPVA(4,8),SPVI(4,8)                              M0001000
      DIMENSION XU(3),XV(3),XUU(3),XVV(3),XUV(3)                        M0001100
      EQUIVALENCE (SPVI(1,2),XU(1)),(SPVI(1,3),XV(1))                   M0001200
      EQUIVALENCE (SPVI(1,4),XUU(1))                                    M0001300
      EQUIVALENCE (SPVI(1,5),XUV(1)),(SPVI(1,6),XVV(1))                 M0001400
C                                                                       M0001500
C SS - ARELEM - COMMON                                                  M0001600
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0001700
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0001800
C                                                                       M0001900
C   COMMON FOR 2 SURFACE INTERSECTION                                   M0002000
      COMMON/INTCOM/IKEEP(255)                                          M0002100
CCCCC EQUIVALENCE (IKEEP(249),ITRACE)                                   M0002200
C                                                                       M0002300
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0002400
C                                                                       M0002500
CCCCC IF(ITRACE.EQ.1)                                                   M0002600
CCCCC*WRITE(6,1000)                                                     M0002700
C1000 FORMAT(' ***TRACE***INTNRM')                                      M0002800
      IRC=0                                                             M0002900
      DTOL=1.D-12                                                       M0003000
      UI=U                                                              M0003100
      VI=V                                                              M0003200
C                                                                       M0003300
      ISCAN=0                                                           M0003400
      NTIM = 0                                                          M0003500
      GOTO 25                                                           M0003600
C                                                                       M0003700
C SCAN ENTIRE SURFACE FOR GLOBAL MIN. DIST. POINT                       M0003800
C -----------------------------------------------                       M0003900
   15 ISCAN=1                                                           M0004000
      D1=90.D30                                                         M0004100
      U1=.5D0                                                           M0004200
      V1=.5D0                                                           M0004300
      TUVINC = 1.0D0                                                    M0004400
      DO 350 K=1,3                                                      M0004500
      TUVINC = TUVINC/10.0D0                                            M0004600
      UVINC=TUVINC                                                      M0004700
      IF(K.GT.1) UVINC=UVINC*2.D0                                       M0004800
      US=U1 - UVINC*5.D0                                                M0004900
      VS=V1 - UVINC*5.D0                                                M0005000
      DO 340 I=1,11                                                     M0005100
      V=VS + UVINC*(I-1)                                                M0005200
      DO 330 J=1,11                                                     M0005300
      U=US + UVINC*(J-1)                                                M0005400
      CALL CNSURF(U,V,BB(1,NS),SPVA,IIFLAG(1,NS),0)                     M0005500
      D2=(SPVA(1,1)-PTA(1))**2 + (SPVA(2,1)-PTA(2))**2                  M0005600
     *                         + (SPVA(3,1)-PTA(3))**2                  M0005700
      IF (D2.GE.D1) GOTO 320                                            M0005800
      D1=D2                                                             M0005900
      U1=U                                                              M0006000
      V1=V                                                              M0006100
  320 CONTINUE                                                          M0006200
  330 CONTINUE                                                          M0006300
  340 CONTINUE                                                          M0006400
  350 CONTINUE                                                          M0006500
      U=U1                                                              M0006600
      V=V1                                                              M0006700
C                                                                       M0006800
C ALLOW ONLY UNIT SQUARE UV                                             M0006900
   25 IF(U.LT.0.D0) U=0.D0                                              M0007000
      IF(V.LT.0.D0) V=0.D0                                              M0007100
      IF(U.GT.1.D0) U=1.D0                                              M0007200
      IF(V.GT.1.D0) V=1.D0                                              M0007300
C SAVE BEST SOLN FOR RESET                                              M0007400
      DSQMIN = 999.D0                                                   M0007500
      UMIN = U                                                          M0007600
      VMIN = V                                                          M0007700
      ULIM0 = 0.D0                                                      M0007800
      ULIM1 = 1.D0                                                      M0007900
      VLIM0 = 0.D0                                                      M0008000
      VLIM1 = 1.D0                                                      M0008100
      UX0 = 0.D0                                                        M0008200
      VX0 = 0.D0                                                        M0008300
      DUMIN = 1.D0                                                      M0008400
      DVMIN = 1.D0                                                      M0008500
C                                                                       M0008600
C ITERATE (31 TIMES MAX.) TO FIND LOCAL MIN. DIST PTA                   M0008700
C ---------------------------------------------------                   M0008800
      DO 600 I=1,31                                                     M0008900
      NTIM=NTIM + 1                                                     M0009000
      USV=U                                                             M0009100
      VSV=V                                                             M0009200
      IF (I.LT.11) GOTO 440                                             M0009300
C                                                                       M0009400
C FIRST TIME HERE, DO DIAGONAL MINI-SEARCH FOR BEST SOLN                M0009500
      IF (I.NE.11) GOTO 430                                             M0009600
      D1=90.D30                                                         M0009700
      U = UX0                                                           M0009800
      DU = DUMIN/10.D0                                                  M0009900
      V = VX0                                                           M0010000
      DV = DVMIN/10.D0                                                  M0010100
      DO 420 K=1,2                                                      M0010200
      DO 410 J=1,9                                                      M0010300
      U = U + DU                                                        M0010400
      V = V + DV                                                        M0010500
      CALL CNSURF(U,V,BB(1,NS),SPVA,IIFLAG(1,NS),0)                     M0010600
      D2=(SPVA(1,1)-PTA(1))**2+(SPVA(2,1)-PTA(2))**2                    M0010700
     *                        +(SPVA(3,1)-PTA(3))**2                    M0010800
      IF (D2.GE.D1) GOTO 400                                            M0010900
      D1=D2                                                             M0011000
      UI=U                                                              M0011100
      VI=V                                                              M0011200
  400 CONTINUE                                                          M0011300
  410 CONTINUE                                                          M0011400
C SEARCH OPPOSITE DIAGONAL                                              M0011500
      U = UX0                                                           M0011600
      V = V + DV                                                        M0011700
      DV = -DV                                                          M0011800
  420 CONTINUE                                                          M0011900
      U = UI                                                            M0012000
      V = VI                                                            M0012100
  430 CONTINUE                                                          M0012200
C                                                                       M0012300
C IF HERE, USE NEWTON'S METHOD                                          M0012400
C ----------------------------                                          M0012500
C  COMPUTE POINT, 1ST & 2ND DERIVATIVES                                 M0012600
      CALL CNSURF(U,V,BB(1,NS),SPVI,IIFLAG(1,NS),2)                     M0012700
      DX=PTA(1) - SPVI(1,1)                                             M0012800
      DY=PTA(2) - SPVI(2,1)                                             M0012900
      DZ=PTA(3) - SPVI(3,1)                                             M0013000
C SOLVE FOR F(U,V) & G(U,V) = 0 ***                                     M0013100
      FUV = DX*XU(1) + DY*XU(2) + DZ*XU(3)                              M0013200
      GUV = DX*XV(1) + DY*XV(2) + DZ*XV(3)                              M0013300
C CONVERGENCE ?                                                         M0013400
      IF(DABS(FUV).LT.DTOL.AND.DABS(GUV).LT.DTOL)GO TO 110              M0013500
C EVALUATE PARTIALS OF F & G                                            M0013600
      DFDU = (DX*XUU(1) + DY*XUU(2) + DZ*XUU(3)) -                      M0013700
     *                       (XU(1)**2 + XU(2)**2 + XU(3)**2)           M0013800
      DFDV = (DX*XUV(1) + DY*XUV(2) + DZ*XUV(3)) -                      M0013900
     *                       (XU(1)*XV(1) + XU(2)*XV(2) + XU(3)*XV(3))  M0014000
      DGDU = DFDV                                                       M0014100
      DGDV = (DX*XVV(1) + DY*XVV(2) + DZ*XVV(3)) -                      M0014200
     *                       (XV(1)**2 + XV(2)**2 + XV(3)**2)           M0014300
      DET = DFDU*DGDV - DFDV*DGDU                                       M0014400
C COMPUTE CORRECTIONS TO U & V                                          M0014500
      DELU = -(DGDV*FUV - DFDV*GUV)/DET                                 M0014600
      DELV = -(DFDU*GUV - DGDU*FUV)/DET                                 M0014700
C SAVE UPPER & LOWER BOUNDS ON U & V                                    M0014800
      IF(DELU.GT.0.D0)ULIM0 = DMAX1(ULIM0,U)                            M0014900
      IF(DELU.GT.0.D0)ULIM1 = DMAX1(ULIM1,U)                            M0015000
      IF(DELV.GT.0.D0)VLIM0 = DMAX1(VLIM0,V)                            M0015100
      IF(DELV.GT.0.D0)VLIM1 = DMAX1(VLIM1,V)                            M0015200
      IF(DELU.LT.0.D0)ULIM1 = DMIN1(ULIM1,U)                            M0015300
      IF(DELU.LT.0.D0)ULIM0 = DMIN1(ULIM0,U)                            M0015400
      IF(DELV.LT.0.D0)VLIM1 = DMIN1(VLIM1,V)                            M0015500
      IF(DELV.LT.0.D0)VLIM0 = DMIN1(VLIM0,V)                            M0015600
      GOTO 490                                                          M0015700
  440 CONTINUE                                                          M0015800
C                                                                       M0015900
C 1ST 11 TIMES USE  PLANE CONVERGENCE APPROACH                          M0016000
C --------------------------------------------                          M0016100
      CALL CNSURF(U,V,BB(1,NS),SPVI,IIFLAG(1,NS),2)                     M0016200
C                                                                       M0016300
C GET LENGTH OF PARTIALS                                                M0016400
      SECU=DSQRT(XU(1)**2 + XU(2)**2 + XU(3)**2)                        M0016500
      SECV=DSQRT(XV(1)**2 + XV(2)**2 + XV(3)**2)                        M0016600
C                                                                       M0016700
      DX=PTA(1)-SPVI(1,1)                                               M0016800
      DY=PTA(2)-SPVI(2,1)                                               M0016900
      DZ=PTA(3)-SPVI(3,1)                                               M0017000
      D1=(XU(1)*DX + XU(2)*DY + XU(3)*DZ)/SECU                          M0017100
      D2=(XV(1)*DX + XV(2)*DY + XV(3)*DZ)/SECV                          M0017200
C                                                                       M0017300
C CAL. COS-1 BETWEEN PARTIALS                                           M0017400
      COS=(XU(1)*XV(1)+XU(2)*XV(2)+XU(3)*XV(3))/(SECU*SECV)             M0017500
      CS=1.D0-COS*COS                                                   M0017600
      IF(CS.LT.1.D-20) CS=1.D-20                                        M0017700
C                                                                       M0017800
      DELU=(D1-D2*COS)/CS                                               M0017900
      IF(DABS(DELU).LT.1.D-20) DELU=1.D-20                              M0018000
      DSQ=DSQRT(DELU*DELU*CS + D2*D2)                                   M0018100
C                                                                       M0018200
C IF DISTANCE IS LT 1.D-12; EXIT                                        M0018300
      IF(DSQ.LT.DTOL) GOTO 110                                          M0018400
C SAVE BEST SOLN FOR RESET                                              M0018500
      IF (DSQ.GE.DSQMIN) GOTO 450                                       M0018600
      DSQMIN = DSQ                                                      M0018700
      UMIN = U                                                          M0018800
      VMIN = V                                                          M0018900
  450 CONTINUE                                                          M0019000
C                                                                       M0019100
C RECALCULATE U & V                                                     M0019200
C -----------------                                                     M0019300
      DELV=(D2-DELU*COS)/SECV                                           M0019400
      DELU=DELU/SECU                                                    M0019500
C SAVE MIN. OSCILLATION DIST. ***                                       M0019600
      IF (I.EQ.1) GOTO 480                                              M0019700
      IF (ODELU*DELU.GE.0.D0.OR.DABS(U-OU).GE.DABS(DUMIN)) GOTO 460     M0019800
      UX0 = OU                                                          M0019900
      DUMIN = U - OU                                                    M0020000
  460 CONTINUE                                                          M0020100
      IF (ODELV*DELV.GE.0.D0.OR.DABS(V-OV).GE.DABS(DVMIN)) GOTO 470     M0020200
      VX0 = OV                                                          M0020300
      DVMIN = V - OV                                                    M0020400
  470 CONTINUE                                                          M0020500
  480 CONTINUE                                                          M0020600
  490 CONTINUE                                                          M0020700
      IF(DABS(DELU).GT..25D0) DELU=.25D0*DELU/DABS(DELU)                M0020800
      IF(DABS(DELV).GT..25D0) DELV=.25D0*DELV/DABS(DELV)                M0020900
      DU=DELU                                                           M0021000
      DV=DELV                                                           M0021100
      IF (I.EQ.1.OR.I.EQ.11) GOTO 540                                   M0021200
C AITKEN DEL SQUARE ALGORITHM ---------------------------               M0021300
C  USE SECANT TO EXTRAPOLATE/INTERPOLATE NEXT U & V                     M0021400
      DEN=ODELU-DELU                                                    M0021500
      IF (DABS(DEN).LE.1.D-20) GOTO 510                                 M0021600
      RNUM=U-OU                                                         M0021700
      IF (DABS(RNUM).LE.1.D-20) GOTO 500                                M0021800
      RTU=RNUM/DEN                                                      M0021900
      IF(RTU.GT.1.D-12) DU=DELU*RTU                                     M0022000
      IF(ODELU*DELU.LT.0.D0) DU=DU*.67D0                                M0022100
  500 CONTINUE                                                          M0022200
  510 CONTINUE                                                          M0022300
C                                                                       M0022400
C CAL. NEW V                                                            M0022500
      DEN=ODELV-DELV                                                    M0022600
      IF (DABS(DEN).LE.1.D-20) GOTO 530                                 M0022700
      RNUM=V-OV                                                         M0022800
      IF (DABS(RNUM).LE.1.D-20) GOTO 520                                M0022900
      RTV=RNUM/DEN                                                      M0023000
      IF(RTV.GT.1.D-12) DV=DELV*RTV                                     M0023100
      IF(ODELV*DELV.LT.0.D0) DV=DV*.67D0                                M0023200
  520 CONTINUE                                                          M0023300
  530 CONTINUE                                                          M0023400
  540 CONTINUE                                                          M0023500
C                                                                       M0023600
C UPDATE U & V AND LOOP BACK  ---------------------------------         M0023700
      OU=U                                                              M0023800
      U=U+DU                                                            M0023900
      U2 = OU + DELU                                                    M0024000
      ODELU=DELU                                                        M0024100
      OV=V                                                              M0024200
      V=V+DV                                                            M0024300
      V2 = OV + DELV                                                    M0024400
      ODELV=DELV                                                        M0024500
C                                                                       M0024600
C KEEP U & V WITHIN LIMITS ------------------------------------         M0024700
      IF(U.LT.0.D0)U=0.D0                                               M0024800
      IF(V.LT.0.D0)V=0.D0                                               M0024900
      IF(U.GT.1.D0)U=1.D0                                               M0025000
      IF(V.GT.1.D0)V=1.D0                                               M0025100
      IF(U2.LT.0.D0)U2=0.D0                                             M0025200
      IF(V2.LT.0.D0)V2=0.D0                                             M0025300
      IF(U2.GT.1.D0)U2=1.D0                                             M0025400
      IF(V2.GT.1.D0)V2=1.D0                                             M0025500
C                                                                       M0025600
C CONVERGENCE ?                                                         M0025700
      IF(DABS(U-USV).LT.1.D-10.AND.DABS(V-VSV).LT.1.D-10)GO TO 110      M0025800
C                                                                       M0025900
C    NO CHANGE IN U OR V, USE THIS POINT NORMAL                         M0026000
C WHICH IS BETTER, (U,V) OR (U2,V2) ?                                   M0026100
      CALL CNSURF(U,V,BB(1,NS),SPVI,IIFLAG(1,NS),0)                     M0026200
      DD1=(PTA(1)-SPVI(1,1))**2+(PTA(2)-SPVI(2,1))**2                   M0026300
     *                         +(PTA(3)-SPVI(3,1))**2                   M0026400
      CALL CNSURF(U2,V2,BB(1,NS),SPVI,IIFLAG(1,NS),0)                   M0026500
      DD2=(PTA(1)-SPVI(1,1))**2+(PTA(2)-SPVI(2,1))**2                   M0026600
     *                         +(PTA(3)-SPVI(3,1))**2                   M0026700
      IF (DD2.GE.DD1) GOTO 550                                          M0026800
      U = U2                                                            M0026900
      V = V2                                                            M0027000
  550 CONTINUE                                                          M0027100
  600 CONTINUE                                                          M0027200
C                                                                       M0027300
C END OF LOOP WITH NO SOL., SCAN ENTIRE SURFACE                         M0027400
      IF(ISCAN.EQ.0) GOTO 15                                            M0027500
C                                                                       M0027600
C IF U OR V ON OR BEYOND SURFACE BOUNDARY AND THE ENTRY POINT           M0027700
C  DROPPED TO THE SURFACE IS OUT OF BOUNDS BY MORE THAN 1.D-4,          M0027800
C  GENERATE A NEGATIVE RETURN CODE TO INITIATE ENDUP.                   M0027900
C  EVALUATE POINT, AND DERIVATIVES ----------------------------------   M0028000
  110 CALL CNSURF(U,V,BB(1,NS),SPVA,IIFLAG(1,NS),2)                     M0028100
      UTOL=1.D-4                                                        M0028200
      VTOL=UTOL                                                         M0028300
      IF(DABS(U-.5D0).GE..5D0.AND.DABS(D1).GT.UTOL) IRC=-1              M0028400
      IF(DABS(V-.5D0).GE..5D0.AND.DABS(D2).GT.VTOL) IRC=-1              M0028500
C                                                                       M0028600
  999 RETURN                                                            M0028700
      END                                                               M0028800
**** SOURCE FILE : M0012405.V03   ***
*
      SUBROUTINE INTOUT(IOUT,PTT,NP,IORD,J11,J12,SNAME,SINDEX)          M0000100
C                                                                       M0000200
C   OUTPUT OF INTERSECTION ROUTINES                                     M0000300
C                                                                       M0000400
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000500
C                                                                       M0000600
      DOUBLE PRECISION PTT(9,1)                                         M0000700
C                                                                       M0000800
C   OUTPUT FIELD FOR CANON                                              M0000900
      CHARACTER*80 OF                                                   M0001000
C                                                                       M0001100
      INCLUDE 'TOTAL.INC'                                               M0001200
      INCLUDE 'IFXCOR.INC'                                              M0001710
      INCLUDE 'FXCOR.INC'                                               M0001810
      INCLUDE 'SV.INC'                                                  M0002110
C                                                                       M0002200
C                                                                       M0002700
C   COMMON FOR 2 SURFACE INTERSECTION                                   M0002800
      COMMON/INTCOM/IKEEP(255)                                          M0002900
C   EVALUATION VECTOR FOR PS AND DS                                     M0003000
      DOUBLE PRECISION SPV(4,8,2)                                       M0003100
      EQUIVALENCE (IKEEP(  1),SPV(1,1,1))                               M0003200
C   PATCH NUMBER FOR PS AND DS (SURFACE RECNO*1000 + PATCH NO)          M0003300
      INTEGER IPNR(2)                                                   M0003400
      EQUIVALENCE (IKEEP(254),IPNR(1))                                  M0003500
C                                                                       M0003600
C SS - ARELEM - COMMON                                                  M0003700
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0003800
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0003900
C                                                                       M0004000
C  EXFILE INTRODUCTION                                                  M0004100
      DOUBLE PRECISION LEIT(9)                                          M0004200
      INTEGER ILEIT(18)                                                 M0004700
      EQUIVALENCE (LEIT(1),ILEIT(1))                                    M0004750
C                                                                       M0004800
C     BLANK-COMMON                                                      M0004900
      INCLUDE 'BLANKCOM.INC'                                            M0005000
C                                                                       M0005100
C SYSTEM - I/O NAMES                                                    M0005200
      INCLUDE 'SYMFIL.INC'                                              M0005300
C                                                                       M0005600
C   POINT STORAGE FOR TRANSFORMATION PURPOSE                            M0005700
      DOUBLE PRECISION PT(3),PT1(4)                                     M0005800
      EQUIVALENCE(PT1(2),PT(1))                                         M0005900
C   VECTOR STORAGE FOR TRANSFORMATION PURPOSE                           M0006000
      DOUBLE PRECISION VN(3),VT1(4),VT2(3)                              M0006100
      EQUIVALENCE(VT1(2),VN(1))                                         M0006200
C                                                                       M0006300
C  MOTION DIRECTION                                                     M0006400
      DOUBLE PRECISION DM(3)                                            M0006500
C                                                                       M0006510
      INTEGER Z4E,BCDF                                                  M0006520
      PARAMETER (Z4E=1308622848)                                        M0006525
      LOGICAL FIRST                                                     M0006530
      SAVE FIRST,ILEIT                                                  M0006535
      DATA ILEIT/0,0,Z4E,0,Z4E,6,Z4E,1,0,0,Z4E,0,0,0,Z4E,0,Z4E,0/       M0006540
      DATA PT1/19030000.0D0,3*.0D0/                                     M0006550
      DATA VT1/20030000.0D0,3*.0D0/                                     M0006560
      DATA FIRST/.TRUE./                                                M0006570
C                                                                       M0006600
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0006700
C                                                                       M0006800
C     INITIALISE CHARACTER ITEMS FOR OUTPUT TO EXFILE                   M0006810
C                                                                       M0006820
      IF (FIRST) THEN                                                   M0006830
        ILEIT(1)=BCDF('CLDA')                                           M0006840
        ILEIT(2)=BCDF('TA  ')                                           M0006850
        ILEIT(9)=BCDF('INTS')                                           M0006860
        ILEIT(10)=BCDF('EC  ')                                          M0006870
        ILEIT(13)=BCDF('    ')                                          M0006880
        ILEIT(14)=ILEIT(13)                                             M0006890
        FIRST=.FALSE.                                                   M0006892
      ENDIF                                                             M0006895
                                                                        M0006899
C  TYPE OF OPERATION                                                    M0006900
      ITYPE=IOUT+1                                                      M0007000
C                                                                       M0007100
C  START AND INCREMENTS FOR OUTPUT                                      M0007200
      IP=1                                                              M0007300
      IF(IORD.LT.0)IP=NP                                                M0007400
      IPD=1                                                             M0007500
      IF(IORD.LT.0)IPD=-1                                               M0007600
C                                                                       M0007700
C  PREPARATION FOR EXFILE OUTPUT                                        M0007800
      IF(ITYPE.NE.1)GOTO 10                                             M0007900
      NR=0                                                              M0008000
      J=18                                                              M0008100
      CALL RECORD(ISEQNO)                                               M0008200
      ILEIT(4)=ISEQNO                                                   M0008300
C  NAME                                                                 M0008400
      LEIT(7)=SNAME                                                     M0008500
      ILEIT(16)=SINDEX                                                  M0008600
      ILEIT(18)=29                                                      M0008700
      CALL EWRITE(EXFILE,NR,LEIT,J,IR)                                  M0008800
C                                                                       M0008900
C  OUTPUT LOOP                                                          M0009000
   10 DO 50 I=1,NP                                                      M0009100
      GOTO (20,30,40),ITYPE                                             M0009200
      RETURN                                                            M0009300
C                                                                       M0009400
C   EXFILE OUTPUT ****************************************************  M0009500
C                                                                       M0009600
C  STORING INTERSECTION POINT                                           M0009700
   20 DO 110 J=1,3                                                      M0009800
      TEK(J)=TE(J)                                                      M0009900
  110 PT(J)=PTT(J,IP)                                                   M0010000
      CALL TRANSM(TE,PT,2,3,0)                                          M0010100
C                                                                       M0010200
C LOAD PS PATCH IF NECESSARY                                            M0010300
      IPATCH=PTT(9,IP)                                                  M0010400
      IPA=IPATCH-IPATCH/1000*1000                                       M0010500
      IF(IPNR(1).NE.IPATCH)                                             M0010600
     *CALL LODPCH(SSCAN(J12+1),BB(1,1),IIFLAG(1,1),IITOP(1,1,1),IPA,0)  M0010700
      IPNR(1)=IPATCH                                                    M0010800
C                                                                       M0010900
C STORE (U,V,P)-VALUES OF PS FOR ATAPE                                  M0011000
      UU(1)=PTT(7,IP)                                                   M0011100
      VV(1)=PTT(8,IP)                                                   M0011200
      IPNUM(1)=IPA                                                      M0011300
C                                                                       M0011400
C  EVALUATE POINT                                                       M0011500
      CALL CNSURF(UU(1),VV(1),BB(1,1),SPV(1,1,1),IIFLAG(1,1),2)         M0011600
C                                                                       M0011700
C STORE SURFACE POINT WITH NORMAL FOR ATAPE                             M0011800
      DO 120 J=1,3                                                      M0011900
      PT(J)=PTT(J,IP)                                                   M0012000
      VN(J)=SPV(J,8,1)                                                  M0012100
  120 CONTINUE                                                          M0012200
      CALL TRANSM(SP(1,IPS),PT,2,3,0)                                   M0012300
      CALL TRANSM(SN(1,IPS),VN,3,3,0)                                   M0012400
C                                                                       M0012500
C LOAD DS PATCH IF NECESSARY                                            M0012600
      IF(IIFLAG(1,2).LE.0)GOTO 124                                      M0012700
      IPATCH=PTT(6,IP)                                                  M0012800
      IPA=IPATCH-IPATCH/1000*1000                                       M0012900
      IF(IPNR(2).NE.IPATCH)                                             M0013000
     *CALL LODPCH(SSCAN(J11+1),BB(1,2),IIFLAG(1,2),IITOP(1,1,2),IPA,0)  M0013100
      IPNR(2)=IPATCH                                                    M0013200
C                                                                       M0013300
C STORE (U,V,P)-VALUES OF PS FOR ATAPE                                  M0013400
      UU(2)=PTT(4,IP)                                                   M0013500
      VV(2)=PTT(5,IP)                                                   M0013600
      IPNUM(2)=IPA                                                      M0013700
C                                                                       M0013800
C  EVALUATE POINT                                                       M0013900
      CALL CNSURF(UU(2),VV(2),BB(1,2),SPV(1,1,2),IIFLAG(1,2),2)         M0014000
      GOTO 126                                                          M0014100
C                                                                       M0014200
C  PLANE DS                                                             M0014300
  124 UU(2)=0.D0                                                        M0014400
      VV(2)=0.D0                                                        M0014500
      IPNUM(2)=0                                                        M0014600
C                                                                       M0014700
C STORE SURFACE POINT WITH NORMAL FOR ATAPE                             M0014800
  126 DO 130 J=1,3                                                      M0014900
      PT(J)=PTT(J,IP)                                                   M0015000
      IF(IIFLAG(1,2).LE.0)SPV(J,8,2)=BB(J,2)                            M0015100
      VN(J)=SPV(J,8,2)                                                  M0015200
  130 CONTINUE                                                          M0015300
      CALL TRANSM(SP(1,IDS),PT,2,3,0)                                   M0015400
      CALL TRANSM(SN(1,IDS),VN,3,3,0)                                   M0015500
C                                                                       M0015600
C  NORMALIZE MOTION DIRECTION                                           M0015700
      CALL CROSS(SPV(1,8,2),SPV(1,8,1),DM)                              M0015800
      VLL=DSQRT(DM(1)**2+DM(2)**2+DM(3)**2)                             M0015900
      DO 140 J=1,3                                                      M0016000
      DM(J)=DM(J)/VLL                                                   M0016100
  140 VN(J)=DM(J)                                                       M0016200
      CALL TRANSM(TI,VN,3,3,0)                                          M0016300
C                                                                       M0016400
C  STORE POSITION ON EXFILE                                             M0016500
      ICL=2                                                             M0016600
      IF(I.EQ.NP)ICL=3                                                  M0016700
      CALL ATAPE                                                        M0016800
      GOTO 49                                                           M0016900
C                                                                       M0017000
C   SSCAN OUTPUT *******************************************************M0017100
   30 CONTINUE                                                          M0017200
C   PS PATCH INDEX FOR POINT NAME                                       M0017300
      IPA=PTT(9,IP)                                                     M0017400
      OF=' '                                                            M0017410
      CALL ICONV (IPA+10000,OF,1,5)                                     M0017500
      CALL CFORM ('PT',OF,1,2)                                          M0017600
      CALL CFORM ('(',OF,7,1)                                           M0017700
C  POINT INDEX                                                          M0017800
      CALL ICONV (I,OF,8,4)                                             M0017900
      CALL CFORM (')=POINT/',OF,12,8)                                   M0018000
C  X,Y,Z                                                                M0018100
      CALL FCONV (PTT(1,IP),OF,20,16,6)                                 M0018200
      CALL CFORM (',',OF,36,1)                                          M0018300
      CALL FCONV (PTT(2,IP),OF,37,16,6)                                 M0018400
      CALL CFORM (',',OF,53,1)                                          M0018500
      CALL FCONV (PTT(3,IP),OF,54,16,6)                                 M0018600
C  FILLER                                                               M0018700
      CALL CFORM ('  ',OF,70,2)                                         M0018800
      GOTO 48                                                           M0018900
C                                                                       M0019000
C   HEX OUTPUT *********************************************************M0019100
   40 CONTINUE                                                          M0019200
      OF=' HEX OUTPUT NOT SUPPORTED IN THIS VERSION'                    M0019210
      CALL CPRINT(OF)                                                   M0019220
      GOTO 30                                                           M0019230
C   PS PATCH INDEX FOR POINT NAME                                       M0019300
C      IPA=PTT(9,IP)                                                    M0019400
C      CALL ICONV (IPA+10000,OF,1,5)                                    M0019500
C      CALL CFORM ('PT',OF,0,2)                                         M0019600
C      CALL CFORM ('  ',OF,6,2)                                         M0019700
C  POINT INDEX                                                          M0019800
C      PP=I                                                             M0019900
C      CALL CFORM (PP,OF,8,8)                                           M0020000
C  POINT TYPE AND LENGTH OF SSCANICAL FORM                              M0020100
C      CALL CFORM (1,OF,16,4)                                           M0020200
C      CALL CFORM (6,OF,20,4)                                           M0020300
C  FILLER                                                               M0020400
C      CALL CFORM (0.D0,OF,24,8)                                        M0020500
C  X,Y,Z                                                                M0020600
C      CALL CFORM (PTT(1,IP),OF,32,8)                                   M0020700
C      CALL CFORM (PTT(2,IP),OF,40,8)                                   M0020800
C      CALL CFORM (PTT(3,IP),OF,48,8)                                   M0020900
C  FILLER                                                               M0021000
C      CALL CFORM (0.D0,OF,56,8)                                        M0021100
C      CALL CFORM (0.D0,OF,64,8)                                        M0021200
C  COMMON OUTPUT OF SSCAN AND HEX                                       M0021300
   48 CALL HOLFRM (SNAME,OF(73:80),1,6,N)                               M0021400
      CALL CFORM ('  ',OF,79,2)                                         M0021500
      INDEX=SINDEX                                                      M0021600
      IF(INDEX.NE.0)CALL ICONV(INDEX,OF,79,2)                           M0021700
      CALL CPUNCH(OF,1)                                                 M0021800
C                                                                       M0021900
C  POINT INDEX INCREMENTING                                             M0022000
   49 IP=IP+IPD                                                         M0022100
   50 CONTINUE                                                          M0022200
C                                                                       M0022300
C  END PUNCH OUTPUT FOR HEX FORMAT                                      M0022400
C      IF(ITYPE.NE.3)GOTO 99                                            M0022500
C      CALL CFORM ('(ENDPCH)',OF,1,8)                                   M0022600
C      DO 60 I=8,65,8                                                   M0022700
C      CALL CFORM ('        ',OF,I,8)                                   M0022800
C   60 CONTINUE                                                         M0022900
C      CALL CFORM (-1,OF,73,4)                                          M0023000
C      CALL CFORM (-1,OF,77,4)                                          M0023100
C      CALL CPUNCH(OF,1)                                                M0023200
C                                                                       M0023300
   99 RETURN                                                            M0023400
      END                                                               M0023500
**** SOURCE FILE : M0011516.V03   ***
*
      SUBROUTINE INTSEC                                                 M0000100
C                                                                       M0000200
C ROUTINE TO INTERSEC A PLANE WITH SSURF'S  OR                          M0000300
C                       SSURF'S WITH SSURF'S                            M0000400
C                                                                       M0000500
C                                                                       M0000600
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000700
C                                                                       M0000800
C  INTERSECTION START POINT                                             M0000900
      DOUBLE PRECISION STP(3)                                           M0001000
C                                                                       M0001100
C  POLYEDER STORAGE                                                     M0001200
      DOUBLE PRECISION POED1(3,5,5),POED2(3,5,5),DUMMY1(2),DUMMY2(2)    M0001300
      EQUIVALENCE (POED1(3,5,5),DUMMY1(1))                              M0001400
      EQUIVALENCE (POED2(3,5,5),DUMMY2(1))                              M0001500
C                                                                       M0001600
C   PLANE STORAGE FOR TRANSFORMATION PURPOSE                            M0001700
      DOUBLE PRECISION PL(4),PL1(6)                                     M0001800
      EQUIVALENCE(PL1(2),PL(1))                                         M0001900
C                                                                       M0002000
C SS - ARELEM - COMMON                                                  M0002100
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0002200
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0002300
C                                                                       M0002400
C   SECTION INDICATORS                                                  M0002500
      INTEGER INTDS(0:900),INTPS(0:900)                                 M0002600
C                                                                       M0002700
C   CONTOUR POINTER FIELD                                               M0002800
C    JCON(1,X) : POINTER TO FIRST SEGMENT                               M0002900
C    JCON(2,X) : POINTER TO LAST SEGMENT                                M0003000
      INTEGER MCON                                                      M0003010
      PARAMETER (MCON=50)                                               M0003020
      INTEGER JCON(2,MCON)                                              M0003100
C    ICON : CURRENT CONTOUR                                             M0003200
C    NCON : NEW CONTOUR                                                 M0003300
      INTEGER ICON,NCON                                                 M0003400
C                                                                       M0003500
C   CONTOUR SEGMENT FIELD                                               M0003600
C    JSIX(1,X) : POINTER TO FIRST POINT IN PT ARRAY                     M0003700
C    JSIX(2,X) : POINTER TO LAST POINT IN PT ARRAY                      M0003800
C    JSIX(3,X) : POINTER TO PREVIOUS CONTOUR SEGMENT                    M0003900
C    JSIX(4,X) : POINTER TO FOLLOWING CONTOUR SEGMENT                   M0004000
      INTEGER MSIX                                                      M0004010
      PARAMETER (MSIX=200)                                              M0004020
      INTEGER JSIX(4,MSIX)                                              M0004100
C    ISIX : CURRENT CONTOUR SEGMENT                                     M0004200
C    NSIX : NEW CREATET CONTOUR SEGMENT                                 M0004300
      INTEGER ISIX,NSIX                                                 M0004400
C                                                                       M0004500
C   COMMON FOR 2 SURFACE INTERSECTION                                   M0004600
      COMMON/INTCOM/IKEEP(255)                                          M0004700
C   THICKNESS ON PS AND DS                                              M0004800
      DOUBLE PRECISION THICK(2)                                         M0004900
      EQUIVALENCE (IKEEP(201),THICK(1))                                 M0005000
C   SUBROUTINE TRACE                                                    M0005100
CCCCC EQUIVALENCE (IKEEP(249),ITRACE)                                   M0005200
C   PATCH NUMBER FOR PS AND DS (SURFACE RECNO*1000 + PATCH NO)          M0005300
      INTEGER IPNR(2)                                                   M0005400
      EQUIVALENCE (IKEEP(254),IPNR(1))                                  M0005500
C                                                                       M0005600
C       TOTAL-LIBRARY.                                                  M0005700
C                                                                       M0005800
      INCLUDE 'TOTAL.INC'                                               M0005900
C                                                                       M0006200
      INCLUDE 'SV.INC'                                                  M0006300
C                                                                       M0006500
      INCLUDE 'IFXCOR.INC'                                              M0006600
C                                                                       M0007800
      DOUBLE PRECISION HMOD                                             M0007900
C                                                                       M0008000
C BLANK COMMON                                                          M0008100
      INCLUDE 'BLANKCOM.INC'                                            M0008200
C                                                                       M0008300
C SCRATCH AREA TO STORE THE RESULTING POINTS                            M0008400
      COMMON/SSPAD/NSCNMX,ISCAN,PT(9,1000)                              M0008500
C                                                                       M0008600
C SWITCH FOR PLANE/SSURF (=1) OR SSURF/SSURF (=2) INTERSECTION          M0008700
      INTEGER IWHAT                                                     M0008800
C                                                                       M0008900
C CHECK DEFINITION FUNCTION                                             M0009000
      LOGICAL CKDEF                                                     M0009100
C                                                                       M0009200
C STORAGE FOR FIRST AND SECOND SET OF SSURF'S                           M0009300
      INTEGER IFIRST(50), ISECND(50)                                    M0009400
C                                                                       M0009500
C CONTROL WORDS                                                         M0009600
      CHARACTER*8 WITH,DCANON,HEX,TEST                                  M0009700
C                                                                       M0009710
      INTEGER BCDF                                                      M0009880
C                                                                       M0009890
      DOUBLE PRECISION WORD                                             M0009901
      INTEGER IWORD(2)                                                  M0009902
      EQUIVALENCE (WORD,IWORD(1))                                       M0009903
      LOGICAL FIRST                                                     M0009904
      SAVE FIRST,PL1                                                    M0009905
C                                                                       M0009910
      DATA STP/3*0.D0/                                                  M0009920
      DATA PL1/1030000.0D0,5*.0D0/                                      M0009930
      DATA WITH/'WITH    '/,DCANON/'CANON   '/,HEX/'HEX     '/          M0009940
      DATA FIRST/.TRUE./                                                M0009950
C                                                                       M0010000
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0010100
C                                                                       M0010110
C.... INITIALISE CHARACTER ITEM FOR OUTPUT TO EXFILE                    M0010120
C                                                                       M0010130
      IF (FIRST) THEN                                                   M0010140
        IWORD(1)=BCDF('SYSP')                                           M0010150
        IWORD(2)=BCDF('L   ')                                           M0010160
        PL1(6)=WORD                                                     M0010170
        FIRST=.FALSE.                                                   M0010180
      ENDIF                                                             M0010190
C                                                                       M0010200
C SET THICKNESS FOR DRIVE-SURFACE                                       M0010300
      THDOLD=TH(IDS)                                                    M0010400
      TOLD=.8D0*(TAU1(IDS)-TAU2(IDS))                                   M0010500
      TH(IDS)=TH(IDS)+TAU2(IDS)+TOLD/8.D0                               M0010600
      THICK(1)=TH(IDS)                                                  M0010700
C                                                                       M0010800
C SET THICKNESS FOR PART-SURFACE                                        M0010900
      THPOLD=TH(IPS)                                                    M0011000
      TOLP=.8D0*(TAU1(IPS)-TAU2(IPS))                                   M0011100
      TH(IPS)=TH(IPS)+TAU2(IPS)+TOLP/8.D0                               M0011200
      THICK(2)=TH(IPS)                                                  M0011300
C                                                                       M0011400
C READ THE INTERSECTION ARGUMENT AND STORE THEM                         M0011500
      NFIRST=0                                                          M0011600
      NSECND=0                                                          M0011700
      IWHAT=1                                                           M0011800
      IOUT=0                                                            M0011900
      MSCAN=SSCAN(2)                                                    M0012000
      ISCAN=3                                                           M0012100
    1 IF(ISCAN.GE.MSCAN) GOTO 20                                        M0012200
C                                                                       M0012300
C GEOMETRY ?  (PLANE/LINE OR SSURF)                                     M0012400
      IF((SSCAN(ISCAN).NE.1.D0.AND.SSCAN(ISCAN).NE.2.D0)                M0012500
     *                       .AND.SSCAN(ISCAN).NE.29.D0) GOTO 10        M0012600
C                                                                       M0012700
C CHECK, IF GEOMETRY IS VALID                                           M0012800
      IF(.NOT.CKDEF(SSCAN(ISCAN))) GOTO 2                               M0012900
C                                                                       M0013000
C GEOMETRY ELEMENT IS NOT DEFINED: RETURN WITHOUT RESULT                M0013100
      CALL ERROR(22830,'INTSEC  ')                                      M0013200
      GOTO 999                                                          M0013300
C                                                                       M0013400
C LINE / PLANE ?                                                        M0013500
    2 IF(SSCAN(ISCAN).NE.1.D0.AND.SSCAN(ISCAN).NE.2.D0) GOTO 5          M0013600
C                                                                       M0013700
C  NORMALIZE AND STORE THE PLANE                                        M0013800
      SEC=DSQRT(SSCAN(ISCAN+1)**2 + SSCAN(ISCAN+2)**2                   M0013900
     *        + SSCAN(ISCAN+3)**2)                                      M0014000
      DO 3 I=1,4                                                        M0014100
    3 PL(I)=SSCAN(ISCAN+I)/SEC                                          M0014200
      PL(4)=SSCAN(ISCAN+4)/SEC+TH(IDS)                                  M0014300
C                                                                       M0014400
C INITIALIZE SYSTEM DS PLANE                                            M0014500
      IS=IDS                                                            M0014600
      CALL APT234(HMOD,PL)                                              M0014700
C                                                                       M0014800
C   TRANSFORM PLANE FROM LOCAL TO BASIC COORDINATE SYSTEM               M0014900
      CALL TRANSM(BB(1,2),PL,4,4,-1)                                    M0015000
C   SIGNAL THE PLANE                                                    M0015100
      IIFLAG(1,2)=-1                                                    M0015200
      IPNR(2)=0                                                         M0015300
C   CONTINUE WITH SCANNING                                              M0015400
      ISCAN=ISCAN+5                                                     M0015500
      IWHAT=2                                                           M0015600
      GOTO 1                                                            M0015700
C                                                                       M0015800
C GET COMMON INDEX OF SSURF                                             M0015900
    5 LDAFLG=7                                                          M0016000
      CALL APT094(LDAFLG,SSCAN(ISCAN+1),CANIND)                         M0016100
      INDCAN=CANIND                                                     M0016200
      ISCAN=ISCAN+3                                                     M0016300
      GOTO (7,8),IWHAT                                                  M0016400
C                                                                       M0016500
C A FIRST SURFACE IS FOUND                                              M0016600
    7 NFIRST=NFIRST+1                                                   M0016700
      IFIRST(NFIRST)=INDCAN                                             M0016800
      IF(NFIRST.EQ.1) GOTO 1                                            M0016900
C                                                                       M0017000
      JFIRST=NFIRST-1                                                   M0017100
      DO 17 I=1,JFIRST                                                  M0017200
      IF(IFIRST(I).NE.INDCAN) GOTO 17                                   M0017300
      NFIRST=NFIRST-1                                                   M0017400
C                                                                       M0017500
C SAME SSURF FOUND TWICE BEFORE WITH, ONLY FIRST FOUND SSURF            M0017600
C  IN FIRST PART OF THE STATEMENT WILL BE USED                          M0017700
      CALL AERR(-22832,'INTSEC  ')                                      M0017800
      GOTO 1                                                            M0017900
   17 CONTINUE                                                          M0018000
      GOTO 1                                                            M0018100
C                                                                       M0018200
C A SECOND SURFACE IS FOUND                                             M0018300
    8 NSECND=NSECND+1                                                   M0018400
      ISECND(NSECND)=INDCAN                                             M0018500
      IF(NSECND.EQ.1) GOTO 118                                          M0018600
C                                                                       M0018700
      JSECND=NSECND-1                                                   M0018800
      DO 18 I=1,JSECND                                                  M0018900
      IF(ISECND(I).NE.INDCAN) GOTO 18                                   M0019000
      NSECND=NSECND-1                                                   M0019100
C                                                                       M0019200
C SAME SSURF FOUND TWICE AFTER WITH, ONLY FIRST FOUND SSURF             M0019300
C  IN SECOND PART OF THE STATEMENT WILL BE USED                         M0019400
      CALL AERR(-22833,'INTSEC  ')                                      M0019500
      GOTO 118                                                          M0019600
   18 CONTINUE                                                          M0019700
C                                                                       M0019800
C CHECK, IF SAME SSURF SHOULD BE INTERSECTED                            M0019900
  118 IF(NSECND.EQ.0) GOTO 1                                            M0020000
      IF(NFIRST.EQ.0) GOTO 1                                            M0020100
      DO 19 I=1,NFIRST                                                  M0020200
      IF(IFIRST(I).NE.ISECND(NSECND)) GOTO 19                           M0020300
C                                                                       M0020400
C SAME SSURF WILL BE INTERSECTED BY ITSELF, THIS IS NOT POSSIBLE        M0020500
      CALL ERROR(22834,'INTSEC  ')                                      M0020600
      NSECND=NSECND-1                                                   M0020700
      GOTO 1                                                            M0020800
   19 CONTINUE                                                          M0020900
      GOTO 1                                                            M0021000
C                                                                       M0021100
C CONTROL WORDS                                                         M0021200
   10 CALL HOLFRM(SSCAN(ISCAN+1),TEST,1,8,NWD)                          M0021300
      IF(TEST.NE.WITH) GOTO 11                                          M0021310
      IWHAT=2                                                           M0021400
      ISCAN=ISCAN+2                                                     M0021500
      GOTO 1                                                            M0021600
C                                                                       M0021700
C CANON POINT TO OUTPUT ?                                               M0021800
   11 IF(TEST.NE.DCANON) GOTO 12                                        M0021900
      IOUT=1                                                            M0022000
      ISCAN=ISCAN+2                                                     M0022100
      GOTO 1                                                            M0022200
C                                                                       M0022300
C HEX OUTPUT ?                                                          M0022400
   12 IF(TEST.NE.HEX) GOTO 13                                           M0022500
      IOUT=2                                                            M0022600
   13 ISCAN=ISCAN+2                                                     M0022700
      GOTO 1                                                            M0022800
C                                                                       M0022900
C PREPARATION OF INTERSECTIONS                                          M0023000
   20 IF(NSECND.NE.0) GOTO 21                                           M0023100
C                                                                       M0023200
C NO INTERSECTION POSSIBLE                                              M0023300
      CALL ERROR(22831,'INTSEC  ')                                      M0023400
      GOTO 999                                                          M0023500
   21 CONTINUE                                                          M0023600
C                                                                       M0023700
C  INTERSECTIONS                                                        M0023800
C ********************************************************************* M0023900
C                                                                       M0024000
C  OUTER LOOP FOR FIRST ARGUMENT SURFACES (DS)                          M0024100
      N1=MAX0(1,NFIRST)                                                 M0024200
      DO 330 J1=1,N1                                                    M0024300
      N2=1                                                              M0024400
      IF(NFIRST.EQ.0)GOTO 210                                           M0024500
C                                                                       M0024600
C  LOCATE THE NON PLANE DRIVE SURFACE                                   M0024700
      LDAFLG=3                                                          M0024800
      CALL APT094(LDAFLG,COM(IFIRST(J1)),J11)                           M0024900
      J11=J11-41                                                        M0025000
C  NUMBER OF PATCHES                                                    M0025100
      N2=SSCAN(J11+4)                                                   M0025200
C  SURFACE RECORD NUMBER TIMES 1000 FOR PATCH IDENTIFICATION            M0025300
      IPNR(2)=SSCAN(J11+1)*1000                                         M0025400
C                                                                       M0025500
C  INITIALIZE DRIVE SURFACE                                             M0025600
      IS=IDS                                                            M0025700
      CALL APT234 (HMOD,COM(IFIRST(J1)))                                M0025800
  210 CONTINUE                                                          M0025900
C                                                                       M0026000
C  PREPARATION OF PATCH REFERENCE OF FIRST ARGUMENT SURFACES            M0026100
      DO 410 J2=1,N2                                                    M0026200
  410 INTDS(J2)=0                                                       M0026300
C ********************************************************************* M0026400
C                                                                       M0026500
C  OUTER LOOP FOR SECOND ARGUMENT SURFACES (PS)                         M0026600
      DO 320 J3=1,NSECND                                                M0026700
      DO 40 J33=1,3                                                     M0026800
C                                                                       M0026900
C  LOCATE THE PART SURFACE                                              M0027000
      LDAFLG=3                                                          M0027100
      CALL APT094(LDAFLG,COM(ISECND(J3)),J12)                           M0027200
      J12=J12-41                                                        M0027300
C                                                                       M0027400
C  CHECK SURFACE LOCATION IF DS IS NOT A PLANE                          M0027500
      IF(IIFLAG(1,2).LE.0)GOTO 50                                       M0027600
C                                                                       M0027700
C  CHECK SURFACE RECORD NUMBER AND LENGTH                               M0027800
      IF(COM(IFIRST(J1)).EQ.SSCAN(J11+1).AND.                           M0027900
     *   COM(IFIRST(J1)+1).EQ.SSCAN(J11+8))GOTO 50                      M0028000
C                                                                       M0028100
C  LOCATE THE NON PLANE DRIVE SURFACE                                   M0028200
      LDAFLG=3                                                          M0028300
      CALL APT094(LDAFLG,COM(IFIRST(J1)),J11)                           M0028400
      J11=J11-41                                                        M0028500
   40 CONTINUE                                                          M0028600
C GET NAME AND INDEX OF SURFACE                                         M0028700
   50 CALL UNPACK(COM(ISECND(J3)),MODE,ISIZE,ISBSCT)                    M0028800
      SNAME=COM(ISECND(J3)+ISIZE)                                       M0028900
      IF(ISBSCT.GT.1)SNAME=COM(ISECND(J3)+(ISIZE+1)*ISBSCT-1)           M0029000
      SINDEX=ISBSCT                                                     M0029100
C  NUMBER OF PATCHES                                                    M0029200
      N4=SSCAN(J12+4)                                                   M0029300
C  SURFACE RECORD NUMBER TIMES 1000 FOR PATCH IDENTIFICATION            M0029400
      IPNR(1)=SSCAN(J12+1)*1000                                         M0029500
C                                                                       M0029600
C  INITIALIZE PART SURFACE                                              M0029700
      IS=IPS                                                            M0029800
      CALL APT234 (HMOD,COM(ISECND(J3)))                                M0029900
C                                                                       M0030000
C  PREPARATION OF PATCH REFERENCE OF SECOND ARGUMENT SURFACES           M0030100
      DO 420 J4=1,N4                                                    M0030200
  420 INTPS(J4)=0                                                       M0030300
C                                                                       M0030400
C   PREPARATION OF POINT STORAGE MANAGEMENT                             M0030500
      IPT=1                                                             M0030600
      MPT=NSCNMX/9                                                      M0030700
      NPT=0                                                             M0030800
C                                                                       M0030900
C   PREPARATION OF CONTOUR SEGMENT XREF AND CONTOUR TABLE               M0031000
      NSIX=0                                                            M0031100
      NCON=0                                                            M0031200
C ********************************************************************* M0031300
C                                                                       M0031400
C  INNER LOOP FOR FIRST ARGUMENT SURFACES OVER THE PATCHES (DS)         M0031500
      DO 310 J2=1,N2                                                    M0031600
      IF(NFIRST.EQ.0)GOTO 220                                           M0031700
      IF(INTDS(J2).EQ.1)GOTO 310                                        M0031800
      CALL LODPCH(SSCAN(J11+1),BB(1,2),IIFLAG(1,2),IITOP(1,1,2),J2,0)   M0031900
      IPNUM(2)=J2                                                       M0032000
C  SAVE PATCH POINTER                                                   M0032100
      J2S=J2                                                            M0032200
C  COMPUTE THE INDIVIDUAL PATCH                                         M0032300
      IPNR(2)=IPNR(2)/1000*1000+J2                                      M0032400
C                                                                       M0032500
C   COMPUTE 5*5 POLYHEDRON                                              M0032600
      CALL POLMTN (2,POED2,5,5)                                         M0032700
  220 CONTINUE                                                          M0032800
C ********************************************************************* M0032900
C                                                                       M0033000
C  INNER LOOP FOR SECOND ARGUMENT SURFACES OVER THE PATCHES (PS)        M0033100
      DO 300 J4=1,N4                                                    M0033200
      IF(INTPS(J4).EQ.1)GOTO 300                                        M0033300
      CALL LODPCH(SSCAN(J12+1),BB(1,1),IIFLAG(1,1),IITOP(1,1,1),J4,0)   M0033400
      IPNUM(1)=J4                                                       M0033500
C  SAVE PATCH POINTER                                                   M0033600
      J4S=J4                                                            M0033700
C  COMPUTE THE INDIVIDUAL PATCH                                         M0033800
      IPNR(1)=IPNR(1)/1000*1000+J4                                      M0033900
C                                                                       M0034000
C   COMPUTE 5*5 POLYHEDRON                                              M0034100
      CALL POLMTN (1,POED1,5,5)                                         M0034200
C                                                                       M0034300
C  SEARCH FOR INTERSECTION                                              M0034400
      TOL=(TOLD+TOLP)/2.D0                                              M0034500
      TOLTOL=TOL*TOL*2.D0                                               M0034600
      IF(NFIRST.EQ.0)CALL PLAPOL(BB(1,2),POED1,5,5,TOL,STP,IRC)         M0034700
      IF(NFIRST.NE.0)CALL POLPOL(POED2,5,5,POED1,5,5,TOL,STP,IRC)       M0034800
      IF(IRC.EQ.0)GOTO 300                                              M0034900
C                                                                       M0035000
C  CUT!                                                                 M0035100
  430 CONTINUE                                                          M0035200
C  SUBROUTINE TRACE SWITCH                                              M0035300
CCCCC ITRACE=0                                                          M0035400
      IPT=IPT+NPT                                                       M0035500
      NPT=MPT-IPT+1                                                     M0035600
      CALL INTSRF (STP,TOL,PT(1,IPT),NPT,IRC)                           M0035700
      IF(NPT.EQ.0)GOTO 300                                              M0035800
      LPT=IPT+NPT-1                                                     M0035900
C                                                                       M0036000
C   MARK USED PATCHES                                                   M0036100
      INTDS(IPNUM(2))=1                                                 M0036200
      INTPS(IPNUM(1))=1                                                 M0036300
C                                                                       M0036400
C   CREATE A CONTOUR SEGMENT ENTITY FOR A NEW SEGMENT FOUND             M0036500
      IF(NSIX.GE.MSIX)GOTO 999                                          M0036600
      NSIX=NSIX+1                                                       M0036700
      ISIX=NSIX                                                         M0036800
      JSIX(1,ISIX)=IPT                                                  M0036900
      JSIX(2,ISIX)=LPT                                                  M0037000
      JSIX(3,ISIX)=0                                                    M0037100
      JSIX(4,ISIX)=0                                                    M0037200
C                                                                       M0037300
C   CREATE A CONTOUR TABLE ENTRY                                        M0037400
      IF(NCON.GE.MCON)GOTO 999                                          M0037500
      NCON=NCON+1                                                       M0037600
      JCON(1,NCON)=ISIX                                                 M0037700
      JCON(2,NCON)=ISIX                                                 M0037800
      ICON=NCON                                                         M0037900
C                                                                       M0038000
C   TEST FOR CLOSED SEGMENT                                             M0038100
      D12=(PT(1,IPT)-PT(1,LPT))**2+(PT(2,IPT)-PT(2,LPT))**2             M0038200
     *                            +(PT(3,IPT)-PT(3,LPT))**2             M0038300
      IF(D12.LE.TOLTOL)GOTO 470                                         M0038400
C                                                                       M0038500
C   SEARCH FOR PREVIOUS CONTOUR SEGMENT                                 M0038600
  435 JSIX(3,ISIX)=0                                                    M0038700
      JSIX1=JSIX(1,ISIX)                                                M0038800
      CALL INTTRC (J12,J11,PT(1,JSIX1), 1,IRC)                          M0038900
      IF(IRC.EQ.0)GOTO 449                                              M0039000
C  INTERSECTION                                                         M0039100
      STP(1)=PT(1,JSIX1)                                                M0039200
      STP(2)=PT(2,JSIX1)                                                M0039300
      STP(3)=PT(3,JSIX1)                                                M0039400
      IPT=IPT+NPT                                                       M0039500
      NPT=MPT-IPT+1                                                     M0039600
      CALL INTSRF (STP,TOL,PT(1,IPT),NPT,IRC)                           M0039700
      IF(NPT.EQ.0)GOTO 449                                              M0039800
      LPT=IPT+NPT-1                                                     M0039900
C                                                                       M0040000
C   MARK USED PATCHES                                                   M0040100
      INTDS(IPNUM(2))=1                                                 M0040200
      INTPS(IPNUM(1))=1                                                 M0040300
C                                                                       M0040400
C  CHECK THE CONNECTION POINT                                           M0040500
      D1=(PT(1,IPT)-PT(1,JSIX1))**2+(PT(2,IPT)-PT(2,JSIX1))**2          M0040600
     *                             +(PT(3,IPT)-PT(3,JSIX1))**2          M0040700
      IF(D1.GT.TOLTOL)GOTO 440                                          M0040800
C  SAVE POINTERS FOR CLOSED CONTOUR CHECK                               M0040900
      JEND1=LPT                                                         M0041000
      JEND2=JSIX(2,JCON(2,ICON))                                        M0041100
C                                                                       M0041200
C  PREVIOUS SEGMENT, REVERSE ORDER                                      M0041300
      IF(NSIX.GE.MSIX)GOTO 999                                          M0041400
      NSIX=NSIX+1                                                       M0041500
      JSIX(1,NSIX)=LPT                                                  M0041600
      JSIX(2,NSIX)=IPT                                                  M0041700
      GOTO 442                                                          M0041800
C                                                                       M0041900
C  CHECK THE CONNECTION POINT                                           M0042000
  440 D2=(PT(1,LPT)-PT(1,JSIX1))**2+(PT(2,LPT)-PT(2,JSIX1))**2          M0042100
     *                             +(PT(3,LPT)-PT(3,JSIX1))**2          M0042200
      IF(D2.LE.TOLTOL)GOTO 441                                          M0042300
C                                                                       M0042400
C  NEW STAND ALLONE SEGMENT                                             M0042500
      IF(NSIX.GE.MSIX)GOTO 999                                          M0042600
      NSIX=NSIX+1                                                       M0042700
      JSIX(1,NSIX)=IPT                                                  M0042800
      JSIX(2,NSIX)=LPT                                                  M0042900
      JSIX(3,NSIX)=0                                                    M0043000
      JSIX(4,NSIX)=0                                                    M0043100
C                                                                       M0043200
C   CREATE A CONTOUR TABLE ENTRY                                        M0043300
      IF(NCON.GE.MCON)GOTO 999                                          M0043400
      NCON=NCON+1                                                       M0043500
      JCON(1,NCON)=NSIX                                                 M0043600
      JCON(2,NCON)=NSIX                                                 M0043700
      GOTO 449                                                          M0043800
C  SAVE POINTERS FOR CLOSED CONTOUR CHECK                               M0043900
  441 JEND1=IPT                                                         M0044000
      JEND2=JSIX(2,JCON(2,ICON))                                        M0044100
C                                                                       M0044200
C  PREVIOUS SEGMENT, NORMAL ORDER                                       M0044300
      IF(NSIX.GE.MSIX)GOTO 999                                          M0044400
      NSIX=NSIX+1                                                       M0044500
      JSIX(1,NSIX)=IPT                                                  M0044600
      JSIX(2,NSIX)=LPT                                                  M0044700
  442 JSIX(3,NSIX)=0                                                    M0044800
      JSIX(3,ISIX)=NSIX                                                 M0044900
      JSIX(4,NSIX)=ISIX                                                 M0045000
      ISIX=NSIX                                                         M0045100
      JCON(1,ICON)=ISIX                                                 M0045200
C   TEST FOR CLOSED SEGMENT                                             M0045300
      D12=(PT(1,JEND1)-PT(1,JEND2))**2+(PT(2,JEND1)-PT(2,JEND2))**2     M0045400
     *                                +(PT(3,JEND1)-PT(3,JEND2))**2     M0045500
      IF(D12.LE.TOLTOL)GOTO 470                                         M0045600
      GOTO 435                                                          M0045700
C                                                                       M0045800
C   SET ISIX TO FORWARD SEARCH                                          M0045900
  449 ISIX=JCON(2,ICON)                                                 M0046000
C                                                                       M0046100
C REINSTAL THE PREVIOUS PATCHES                                         M0046200
      IF(IIFLAG(1,2).LE.0)GOTO 448                                      M0046300
      CALL LODPCH(SSCAN(J11+1),BB(1,2),IIFLAG(1,2),IITOP(1,1,2),J2S,0)  M0046400
      IPNUM(2)=J2S                                                      M0046500
      IPNR(2)=IPNR(2)/1000*1000+J2S                                     M0046600
  448 CALL LODPCH(SSCAN(J12+1),BB(1,1),IIFLAG(1,1),IITOP(1,1,1),J4S,0)  M0046700
      IPNUM(1)=J4S                                                      M0046800
      IPNR(1)=IPNR(1)/1000*1000+J4S                                     M0046900
C                                                                       M0047000
C   SEARCH FOR FOLLOWING CONTOUR SEGMENTS                               M0047100
  450 JSIX(4,ISIX)=0                                                    M0047200
      JSIX2=JSIX(2,ISIX)                                                M0047300
      CALL INTTRC (J12,J11,PT(1,JSIX2),-1,IRC)                          M0047400
      IF(IRC.EQ.0)GOTO 469                                              M0047500
C  INTERSECTION                                                         M0047600
      STP(1)=PT(1,JSIX2)                                                M0047700
      STP(2)=PT(2,JSIX2)                                                M0047800
      STP(3)=PT(3,JSIX2)                                                M0047900
      IPT=IPT+NPT                                                       M0048000
      NPT=MPT-IPT+1                                                     M0048100
      CALL INTSRF (STP,TOL,PT(1,IPT),NPT,IRC)                           M0048200
      IF(NPT.EQ.0)GOTO 469                                              M0048300
      LPT=IPT+NPT-1                                                     M0048400
C                                                                       M0048500
C   MARK USED PATCHES                                                   M0048600
      INTDS(IPNUM(2))=1                                                 M0048700
      INTPS(IPNUM(1))=1                                                 M0048800
C                                                                       M0048900
C  CHECK THE CONNECTION POINT                                           M0049000
      D1=(PT(1,IPT)-PT(1,JSIX2))**2+(PT(2,IPT)-PT(2,JSIX2))**2          M0049100
     *                             +(PT(3,IPT)-PT(3,JSIX2))**2          M0049200
      IF(D1.GT.TOLTOL)GOTO 460                                          M0049300
C  SAVE POINTERS FOR CLOSED CONTOUR CHECK                               M0049400
      JEND1=LPT                                                         M0049500
      JEND2=JSIX(1,JCON(1,ICON))                                        M0049600
C                                                                       M0049700
C  FOLLOWING SEGMENT, NORMAL ORDER                                      M0049800
      IF(NSIX.GE.MSIX)GOTO 999                                          M0049900
      NSIX=NSIX+1                                                       M0050000
      JSIX(1,NSIX)=IPT                                                  M0050100
      JSIX(2,NSIX)=LPT                                                  M0050200
      GOTO 462                                                          M0050300
C                                                                       M0050400
C  CHECK THE CONNECTION POINT                                           M0050500
  460 D2=(PT(1,LPT)-PT(1,JSIX2))**2+(PT(2,LPT)-PT(2,JSIX2))**2          M0050600
     *                             +(PT(3,LPT)-PT(3,JSIX2))**2          M0050700
      IF(D2.LE.TOLTOL)GOTO 461                                          M0050800
C                                                                       M0050900
C  NEW STAND ALLONE SEGMENT                                             M0051000
      IF(NSIX.GE.MSIX)GOTO 999                                          M0051100
      NSIX=NSIX+1                                                       M0051200
      JSIX(1,NSIX)=IPT                                                  M0051300
      JSIX(2,NSIX)=LPT                                                  M0051400
      JSIX(3,NSIX)=0                                                    M0051500
      JSIX(4,NSIX)=0                                                    M0051600
C                                                                       M0051700
C   CREATE A CONTOUR TABLE ENTRY                                        M0051800
      IF(NCON.GE.MCON)GOTO 999                                          M0051900
      NCON=NCON+1                                                       M0052000
      JCON(1,NCON)=NSIX                                                 M0052100
      JCON(2,NCON)=NSIX                                                 M0052200
      GOTO 469                                                          M0052300
C  SAVE POINTERS FOR CLOSED CONTOUR CHECK                               M0052400
  461 JEND1=IPT                                                         M0052500
      JEND2=JSIX(1,JCON(1,ICON))                                        M0052600
C                                                                       M0052700
C  FOLLOWING SEGMENT, REVERSE ORDER                                     M0052800
      IF(NSIX.GE.MSIX)GOTO 999                                          M0052900
      NSIX=NSIX+1                                                       M0053000
      JSIX(1,NSIX)=LPT                                                  M0053100
      JSIX(2,NSIX)=IPT                                                  M0053200
  462 JSIX(4,NSIX)=0                                                    M0053300
      JSIX(4,ISIX)=NSIX                                                 M0053400
      JSIX(3,NSIX)=ISIX                                                 M0053500
      ISIX=NSIX                                                         M0053600
      JCON(2,ICON)=ISIX                                                 M0053700
C   TEST FOR CLOSED SEGMENT                                             M0053800
      D12=(PT(1,JEND1)-PT(1,JEND2))**2+(PT(2,JEND1)-PT(2,JEND2))**2     M0053900
     *                                +(PT(3,JEND1)-PT(3,JEND2))**2     M0054000
      IF(D12.LE.TOLTOL)GOTO 470                                         M0054100
      GOTO 450                                                          M0054200
  469 CONTINUE                                                          M0054300
C                                                                       M0054400
C REINSTAL THE PREVIOUS PATCHES                                         M0054500
  470 IF(IIFLAG(1,2).LE.0)GOTO 471                                      M0054600
      CALL LODPCH(SSCAN(J11+1),BB(1,2),IIFLAG(1,2),IITOP(1,1,2),J2S,0)  M0054700
      IPNUM(2)=J2S                                                      M0054800
      IPNR(2)=IPNR(2)/1000*1000+J2S                                     M0054900
  471 CALL LODPCH(SSCAN(J12+1),BB(1,1),IIFLAG(1,1),IITOP(1,1,1),J4S,0)  M0055000
      IPNUM(1)=J4S                                                      M0055100
      IPNR(1)=IPNR(1)/1000*1000+J4S                                     M0055200
  300 CONTINUE                                                          M0055300
C **********************************************************************M0055400
  310 CONTINUE                                                          M0055500
C                                                                       M0055600
C  OUTPUT OF A SINGLE SURFACE/SURFACE INTERSECTION                      M0055700
      IF(NCON.EQ.0)GOTO 560                                             M0055800
      DO 550 ICON=1,NCON                                                M0055900
      ISIX=JCON(1,ICON)                                                 M0056000
  520 IP1=JSIX(1,ISIX)                                                  M0056100
      IP2=JSIX(2,ISIX)                                                  M0056200
      INEXT=JSIX(4,ISIX)                                                M0056300
      IF(IP2.LT.IP1)GOTO 530                                            M0056400
      NPT=IP2-IP1+1                                                     M0056500
      IPT=IP1                                                           M0056600
      IDIR=1                                                            M0056700
      GOTO 540                                                          M0056800
  530 NPT=IP1-IP2+1                                                     M0056900
      IPT=IP2                                                           M0057000
      IDIR=-1                                                           M0057100
  540 CONTINUE                                                          M0057200
      CALL INTOUT(IOUT,PT(1,IPT),NPT,IDIR,J11,J12,SNAME,SINDEX)         M0057300
      IF(INEXT.EQ.0)GOTO 550                                            M0057400
      ISIX=INEXT                                                        M0057500
      GOTO 520                                                          M0057600
  550 CONTINUE                                                          M0057700
  560 CONTINUE                                                          M0057800
C **********************************************************************M0057900
  320 CONTINUE                                                          M0058000
C **********************************************************************M0058100
  330 CONTINUE                                                          M0058200
C **********************************************************************M0058300
C                                                                       M0058400
C SET THICKNESS BACK TO OLD VALUES                                      M0058500
  999 TH(IDS)=THDOLD                                                    M0058600
      TH(IPS)=THPOLD                                                    M0058700
C                                                                       M0058800
      RETURN                                                            M0058900
      END                                                               M0059000
**** SOURCE FILE : M0012321.V02   ***
*
      SUBROUTINE INTSRF(SP,TOL,PT,NPT,IRC)                              M0000100
C                                                                       M0000200
C     EXECUTIVE ROUTINE TO COMPUTE THE INTERSECTION BETWEEN TWO         M0000300
C     ARBITRARY SURFACES.                                               M0000400
C                                                                       M0000500
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000600
C                                                                       M0000700
C SS - ARELEM - COMMON                                                  M0000800
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0000900
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0001000
C                                                                       M0001100
C   COMMON FOR 2 SURFACE INTERSECTION                                   M0001200
      COMMON/INTCOM/IKEEP(255)                                          M0001300
C   EVALUATION VECTOR FOR PS AND DS                                     M0001400
      DOUBLE PRECISION SPV(4,8,2)                                       M0001500
      EQUIVALENCE (IKEEP(  1),SPV(1,1,1))                               M0001600
C   LAST THREE U,V PAIRS OF PS AND DS                                   M0001700
      DOUBLE PRECISION UV(2,3,2)                                        M0001800
      EQUIVALENCE (IKEEP(129),UV(1,1,1))                                M0001900
C   HISTORY OF UNIT NORMALS AT INTERSECTION POINTS ON PS AND DS         M0002000
      DOUBLE PRECISION UN(18)                                           M0002100
      EQUIVALENCE (IKEEP(165),UN(1))                                    M0002200
C   POINT OF INTERSECTION                                               M0002300
      DOUBLE PRECISION PXYZ(3)                                          M0002400
      EQUIVALENCE (IKEEP(205),PXYZ(1))                                  M0002500
C   PLANE PERPENTICULAR TO INTERSECTION DIRECTION                       M0002600
      DOUBLE PRECISION CTP(4)                                           M0002700
      EQUIVALENCE (IKEEP(233),CTP(1))                                   M0002800
C   MULTIBLE OF ABSOLUT TOLERANCE                                       M0002900
      DOUBLE PRECISION CK                                               M0003000
      EQUIVALENCE (IKEEP(241),CK)                                       M0003100
C   MAXIMUM STEP                                                        M0003200
      DOUBLE PRECISION STEPMX                                           M0003300
      EQUIVALENCE (IKEEP(243),STEPMX)                                   M0003400
C   STEP LENGTH                                                         M0003500
      DOUBLE PRECISION STEP                                             M0003600
      EQUIVALENCE (IKEEP(245),STEP)                                     M0003700
C   OLD STEP LENGTH                                                     M0003800
      DOUBLE PRECISION OSTEP                                            M0003900
      EQUIVALENCE (IKEEP(247),OSTEP)                                    M0004000
C   INTERNAL POINT COUNT                                                M0004100
      EQUIVALENCE (IKEEP(250),IPTKNT)                                   M0004200
C   MAXIMUM NUMBER OF POINTS                                            M0004300
      EQUIVALENCE (IKEEP(251),NPTS)                                     M0004400
C   OUT OF BOUND SIGNAL FOR PS AND DS                                   M0004500
      INTEGER ISFER(2)                                                  M0004600
      EQUIVALENCE (IKEEP(252),ISFER(1))                                 M0004700
C                                                                       M0004800
C ARGUMENTS                                                             M0004900
      DIMENSION SP(3),PT(9,1)                                           M0005000
C                                                                       M0005100
C LOCAL VARIABLES                                                       M0005200
      LOGICAL LXBND1, LXBND2, START                                     M0005300
C                                                                       M0005310
      INCLUDE 'XUNITS.INC'                                              M0005320
C                                                                       M0005330
      DOUBLE PRECISION SCALE(4)                                         M0005340
C                                                                       M0005350
C                  MM    CM    INCH   FEET                              M0005360
      DATA SCALE/25.4D0,2.54D0,1.D0,0.0833333333D0/                     M0005370
C                                                                       M0005400
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0005500
C                                                                       M0005600
      NPTS = NPT                                                        M0005700
      LXBND1 = .FALSE.                                                  M0005800
      LXBND2 = .FALSE.                                                  M0005900
      IRC=0                                                             M0006000
      NPT=0                                                             M0006100
C                                                                       M0006200
C         INITIAL STARTUP INFO                                          M0006300
      CTP(1)=1.D0                                                       M0006400
      CTP(2)=1.D0                                                       M0006500
      CTP(3)=1.D0                                                       M0006600
      CTP(4)=1.D0                                                       M0006700
      PXYZ(1)=SP(1)                                                     M0006800
      PXYZ(2)=SP(2)                                                     M0006900
      PXYZ(3)=SP(3)                                                     M0007000
      PT(1,1)=SP(1)                                                     M0007100
      PT(2,1)=SP(2)                                                     M0007200
      PT(3,1)=SP(3)                                                     M0007300
      TL=DABS(TOL)                                                      M0007400
      IF(TL.LT..00001D0) TL=.00001D0                                    M0007500
      CK=TL*8.D0                                                        M0007600
      STEPMX=.01D0*SCALE(IOLD) + TL*1000.D0                             M0007700
C MAX. STEP IS <= 4.0 INCHES *** AEQUIVALENT TO 100 MM                  M0007800
      SMAX = 4.D0 * SCALE(IOLD)                                         M0007900
C                                                                       M0008000
      IF(STEPMX.GT.SMAX) STEPMX=SMAX                                    M0008100
      STEP=0.D0                                                         M0008200
      OSTEP=STEP                                                        M0008300
C TURN CUT FLAG OFF FOR PASS 1:                                         M0008400
      MCUT=1                                                            M0008500
      DO 10 I=1,18                                                      M0008600
      UN(I)=0.D0                                                        M0008700
   10 CONTINUE                                                          M0008800
C                                                                       M0008900
C I N I T I A L I Z A T I O N                                           M0009000
C  LOOP UNTIL START POINT "PXYZ" CONVERGES (MAX. 15 LOOPS) ****         M0009100
      DO 130 II=1,15                                                    M0009200
      ITIM=II                                                           M0009300
      IF (II.GT.2) GOTO 60                                              M0009400
C                                                                       M0009500
C ON FIRST TWO ITERATIONS, SCAN SURFACES FOR START U,V:                 M0009600
      DO 50 I=1,2                                                       M0009700
C                                                                       M0009800
C IF SURFACE IS A PLANE, FORGET IT                                      M0009900
      IF (IIFLAG(1,I).LE.0) GOTO  50                                    M0010000
C                                                                       M0010100
C SCAN SURFACE FOR PT. ON SURFACE CLOSEST TO "PXYZ":                    M0010200
      DIS=90.D20                                                        M0010300
      V=-.1D0                                                           M0010400
      DO 40 J=1,5                                                       M0010500
      U=-.1D0                                                           M0010600
      V=V+.2D0                                                          M0010700
      DO 30 K=1,5                                                       M0010800
      U=U+.2D0                                                          M0010900
      CALL CNSURF(U,V,BB(1,I),SPV(1,1,I),IIFLAG(1,I),0)                 M0011000
      D1=(PXYZ(1)-SPV(1,1,I))**2 + (PXYZ(2)-SPV(2,1,I))**2              M0011100
     *                           + (PXYZ(3)-SPV(3,1,I))**2              M0011200
      IF (DIS.LT.D1) GOTO 30                                            M0011300
      DIS=D1                                                            M0011400
C                                                                       M0011500
C SAVE UV OF SURFACE                                                    M0011600
      DO 20 L=1,3                                                       M0011700
      UV(1,L,I)=U                                                       M0011800
      UV(2,L,I)=V                                                       M0011900
   20 CONTINUE                                                          M0012000
   30 CONTINUE                                                          M0012100
   40 CONTINUE                                                          M0012200
   50 CONTINUE                                                          M0012300
C                                                                       M0012400
C UV OF SURFACE IS KNOWN; COMPUTE A SINGLE INTERSECTION PT.:            M0012500
   60 CONTINUE                                                          M0012600
      KS=-1                                                             M0012700
      DO 70 L=1,3                                                       M0012800
      CALL INTCON(PT,NP,KS)                                             M0012900
      IF (L.GT.2) GOTO 70                                               M0013000
      PT(1,1)=PXYZ(1)                                                   M0013100
      PT(2,1)=PXYZ(2)                                                   M0013200
      PT(3,1)=PXYZ(3)                                                   M0013300
   70 CONTINUE                                                          M0013400
C                                                                       M0013500
C IF POINT NOT OVER DS, MOVE IT TO DS BOUNDARY                          M0013600
      IF (ISFER(2).GE.0) GOTO 80                                        M0013700
      NS=2                                                              M0013800
C SET SURFACE 2 BOUNDARY FLAG:                                          M0013900
      LXBND2 = .TRUE.                                                   M0014000
C                                                                       M0014100
C IF POINT NOT OVER PS, MOVE IT TO PS BOUNDARY                          M0014200
      GOTO 90                                                           M0014300
   80 CONTINUE                                                          M0014400
      IF (ISFER(1).GE.0) GOTO 100                                       M0014500
      NS=1                                                              M0014600
C SET SURFACE 1 BOUNDARY FLAG:                                          M0014700
      LXBND1 = .TRUE.                                                   M0014800
  100 CONTINUE                                                          M0014900
   90 CONTINUE                                                          M0015000
C                                                                       M0015100
      IF (.NOT. LXBND1.AND..NOT. LXBND2) GOTO 110                       M0015200
C FIND AN INTERSECTION PT. ON THE BOUNDARY:                             M0015300
      CALL INTBND(NS,IRC)                                               M0015400
C STILL OUT OF BOUNDS? ***                                              M0015500
      IF (IRC.LT.0) GOTO 130                                            M0015600
  110 CONTINUE                                                          M0015700
C                                                                       M0015800
C EXIT IF NO CHANGE IN PXYZ                                             M0015900
      DSQ=(PT(1,1)-PXYZ(1))**2 + (PT(2,1)-PXYZ(2))**2                   M0016000
     *                         + (PT(3,1)-PXYZ(3))**2                   M0016100
      START = (DSQ.LT.1.D-8.AND.II.GT.1)                                M0016200
      IF (START) GOTO 140                                               M0016300
      PT(1,1)=PXYZ(1)                                                   M0016400
      PT(2,1)=PXYZ(2)                                                   M0016500
      PT(3,1)=PXYZ(3)                                                   M0016600
  130 CONTINUE                                                          M0016700
  140 CONTINUE                                                          M0016800
C END OF LOOP TO FIND START POINT                                       M0016900
C  IF HERE; CANNOT FIND A START INTERS. POINT                           M0017000
      IF(.NOT.START)GOTO 999                                            M0017100
C                                                                       M0017200
C COMPUTE START UP DIR OF YA YB YC                                      M0017300
C  SET DIR. FROM CURRENT POS. TO UV=.5                                  M0017400
      HX=PXYZ(1)                                                        M0017500
      HY=PXYZ(2)                                                        M0017600
      HZ=PXYZ(3)                                                        M0017700
      KS=1                                                              M0017800
      ITIM=0                                                            M0017900
C IF S1 IS A PLANE, USE S2 FOR START DIRECTION:                         M0018000
      IF(IIFLAG(1,2).LE.0) GOTO 120                                     M0018100
C IF NEAR EDGE OF S2, USE S2 FOR START DIRECTION:                       M0018200
      IF(LXBND2.AND..NOT.LXBND1) GOTO 120                               M0018300
C                                                                       M0018400
C USE SURFACE 1 FOR START DIR.                                          M0018500
      CALL CNSURF(.5D0,.5D0,BB(1,2),SPV(1,1,1),IIFLAG(1,2),0)           M0018600
      GOTO 135                                                          M0018700
C                                                                       M0018800
C USE SURFACE 2 FOR START DIR.                                          M0018900
  120 CALL CNSURF(.5D0,.5D0,BB(1,1),SPV(1,1,1),IIFLAG(1,1),0)           M0019000
C                                                                       M0019100
C COMPUTE DIR. FROM PXYZ TO TO SPV(1-3,1,1)                             M0019200
  135 DX=SPV(1,1,1)-PXYZ(1)                                             M0019300
      DY=SPV(2,1,1)-PXYZ(2)                                             M0019400
      DZ=SPV(3,1,1)-PXYZ(3)                                             M0019500
      SEC=DSQRT(DX*DX + DY*DY + DZ*DZ)                                  M0019600
      IF(SEC.EQ.0.D0) SEC=1.D0                                          M0019700
      DX=DX/SEC                                                         M0019800
      DY=DY/SEC                                                         M0019900
      DZ=DZ/SEC                                                         M0020000
      CS=DX*CTP(1) + DY*CTP(2) + DZ*CTP(3)                              M0020100
C IS "YABC" ORIENTED TOWARD MIDDLE OF SURFACE?                          M0020200
      IF (CS.GE.0.D0) GOTO 150                                          M0020300
C                                                                       M0020400
C  FLIP CURRENT DIR. OF YA YB YC                                        M0020500
      CTP(1)=-CTP(1)                                                    M0020600
      CTP(2)=-CTP(2)                                                    M0020700
      CTP(3)=-CTP(3)                                                    M0020800
      CTP(4)=-CTP(4)                                                    M0020900
  150 CONTINUE                                                          M0021000
  160 CONTINUE                                                          M0021100
C                                                                       M0021200
C P A S S   1  &  2                                                     M0021300
C  COMPUTE POINTS UNTIL A BOUNDARY IS INTERSECTED                       M0021400
      CALL INTCON(PT,NP,KS)                                             M0021500
      ITIM=ITIM+1                                                       M0021600
C ERROR?                                                                M0021700
      IF (IPTKNT.GT.0) GOTO 220                                         M0021800
C                                                                       M0021900
C NORMAL ENDUP IF IPTKNT.LT.0                                           M0022000
C   IS INTERSECTION PASS 2 COMPLETE?                                    M0022100
      IF (MCUT.NE.0) GOTO 190                                           M0022200
C                                                                       M0022300
C IF POINTS, EXIT; ELSE TURN FORWARD AROUND AND REDO                    M0022400
      IF (NP.GT.2) GOTO  220                                            M0022500
      IF(ITIM.GT.2)GO TO 999                                            M0022600
      IF (ITIM.NE.2) GOTO 180                                           M0022700
C                                                                       M0022800
C RELOAD FIRST START POSITION & UV                                      M0022900
      PXYZ(1)=HTX                                                       M0023000
      PXYZ(2)=HTY                                                       M0023100
      PXYZ(3)=HTZ                                                       M0023200
      DO 170 I=1,3                                                      M0023300
      UV(1,I,1)=U1                                                      M0023400
      UV(2,I,1)=V1                                                      M0023500
      UV(1,I,2)=U2                                                      M0023600
      UV(2,I,2)=V2                                                      M0023700
  170 CONTINUE                                                          M0023800
C                                                                       M0023900
C FLIP CURRENT DIR. OF YA YB YC                                         M0024000
      CTP(1)=-CTP(1)                                                    M0024100
      CTP(2)=-CTP(2)                                                    M0024200
      CTP(3)=-CTP(3)                                                    M0024300
      CTP(4)=-CTP(4)                                                    M0024400
  180 CONTINUE                                                          M0024500
      GOTO 210                                                          M0024600
  190 CONTINUE                                                          M0024700
C                                                                       M0024800
C PASS 1 COMPLETE; REVERSE DIRECTION & DO PASS 2.                       M0024900
C  SAVE CURRENT POSITION:                                               M0025000
      HTX=PXYZ(1)                                                       M0025100
      HTY=PXYZ(2)                                                       M0025200
      HTZ=PXYZ(3)                                                       M0025300
      IF (NP.GT.2) GOTO 200                                             M0025400
      PXYZ(1)=HX                                                        M0025500
      PXYZ(2)=HY                                                        M0025600
      PXYZ(3)=HZ                                                        M0025700
      HTX=PXYZ(1)                                                       M0025800
      HTY=PXYZ(2)                                                       M0025900
      HTZ=PXYZ(3)                                                       M0026000
  200 CONTINUE                                                          M0026100
      U1=UV(1,2,1)                                                      M0026200
      V1=UV(2,2,1)                                                      M0026300
      U2=UV(1,2,2)                                                      M0026400
      V2=UV(2,2,2)                                                      M0026500
      KS=0                                                              M0026600
C SET CUT FLAG ON FOR PASS 2:                                           M0026700
      MCUT=0                                                            M0026800
      CK=TL*4.D0                                                        M0026900
C                                                                       M0027000
C FLIP CURRENT DIR. OF YA YB YC                                         M0027100
      CTP(1)=-CTP(1)                                                    M0027200
      CTP(2)=-CTP(2)                                                    M0027300
      CTP(3)=-CTP(3)                                                    M0027400
      CTP(4)=-CTP(4)                                                    M0027500
  210 CONTINUE                                                          M0027600
      GO TO 160                                                         M0027700
  220 CONTINUE                                                          M0027800
C                                                                       M0027900
C MAX. POINT REACHED, IF CUT ON, RETURN THESE                           M0028000
      IF(MCUT.EQ.1) GOTO 999                                            M0028100
      NPT=NP                                                            M0028200
C                                                                       M0028300
  999 RETURN                                                            M0028400
      END                                                               M0028500
**** SOURCE FILE : M0012369.V02   ***
*
      SUBROUTINE INTTPL(NS,PT,PL,IRC)                                   M0000100
C                                                                       M0000200
C     COMPUTES THE NORMALIZED COEFFICIENTS OF A PLANE TANGENT TO SURFACEM0000300
C     "NS" WHOSE NORMAL PASSES THROUGH POINT "PT".                      M0000400
C     INTTPL IS CALLED BY INTERSECTION ROUTINES INTCON & INTBND.        M0000500
C                                                                       M0000600
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                M0000700
C                                                                       M0000800
C SS - ARELEM - COMMON                                                  M0000900
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0001000
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0001100
C                                                                       M0001200
C   COMMON FOR 2 SURFACE INTERSECTION                                   M0001300
      COMMON/INTCOM/IKEEP(255)                                          M0001400
C   EVALUATION VECTOR FOR PS AND DS                                     M0001500
      DOUBLE PRECISION SPV(4,8,2)                                       M0001600
      EQUIVALENCE (IKEEP(  1),SPV(1,1,1))                               M0001700
C   LAST THREE U,V PAIRS OF PS AND DS                                   M0001800
      DOUBLE PRECISION UV(2,3,2)                                        M0001900
      EQUIVALENCE (IKEEP(129),UV(1,1,1))                                M0002000
C   POINT OF TANGENCY ON PS AND DS                                      M0002100
      DOUBLE PRECISION PTT(3,2)                                         M0002200
      EQUIVALENCE (IKEEP(153),PTT(1,1))                                 M0002300
C   THICKNESS ON PS AND DS                                              M0002400
      DOUBLE PRECISION THICK(2)                                         M0002500
      EQUIVALENCE (IKEEP(201),THICK(1))                                 M0002600
C  TRACE                                                                M0002700
CCCCC EQUIVALENCE (IKEEP(249),ITRACE)                                   M0002800
C   INTERNAL POINT COUNT                                                M0002900
      EQUIVALENCE (IKEEP(250),IPTKNT)                                   M0003000
C   MAXIMUM NUMBER OF POINTS                                            M0003100
      EQUIVALENCE (IKEEP(251),NPTS)                                     M0003200
C                                                                       M0003300
      DIMENSION PT(3),PL(4),HN(3,2)                                     M0003400
      INTEGER IPKNT(2)                                                  M0003500
      DATA IPKNT/0,0/                                                   M0003550
C                                                                       M0003600
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0003700
C                                                                       M0003800
CCCCC IF(ITRACE.EQ.1)                                                   M0003900
CCCCC*WRITE(6,1000)                                                     M0004000
C1000 FORMAT(' ***TRACE***INTTPL')                                      M0004100
C                                                                       M0004200
C IS SURFACE NOT A PLANE ?                                              M0004300
      IF (IIFLAG(1,NS).GT.0)GOTO 30                                     M0004400
C                                                                       M0004500
C LOAD THE PLANE                                                        M0004600
      DO 20 I=1,4                                                       M0004700
   20 PL(I)=BB(I,NS)                                                    M0004800
      IRC=0                                                             M0004900
      GOTO 999                                                          M0005000
C                                                                       M0005100
C SURFACE IS NOT A PLANE; FIND TANGENT PLANE.                           M0005200
   30 CONTINUE                                                          M0005300
      IRC=1                                                             M0005400
      IF (NS.NE.1.AND.NS.NE.2) GOTO 100                                 M0005500
      IRC=0                                                             M0005600
      U=UV(1,1,NS)                                                      M0005700
      V=UV(2,1,NS)                                                      M0005800
C                                                                       M0005900
C EXTRAPOLATE NEXT UV IF 2 POINTS HAVE BEEN CALCULATED.                 M0006000
      IF (NPTS.LE.IPTKNT+2.OR.IPTKNT.EQ.IPKNT(NS)) GOTO 50              M0006100
      U=U + 2.D0*(U-UV(1,2,NS)) - (UV(1,2,NS)-UV(1,3,NS))               M0006200
      V=V + 2.D0*(V-UV(2,2,NS)) - (UV(2,2,NS)-UV(2,3,NS))               M0006300
   50 CONTINUE                                                          M0006400
C                                                                       M0006500
C CALL NORMAL DISTANCE ROUTINE                                          M0006600
      CALL INTNRM(NS,U,V,PT,SPV(1,1,NS),IRC)                            M0006700
C                                                                       M0006800
C SAVE SURFACE POINT                                                    M0006900
      PTT(1,NS)=SPV(1,1,NS)                                             M0007000
      PTT(2,NS)=SPV(2,1,NS)                                             M0007100
      PTT(3,NS)=SPV(3,1,NS)                                             M0007200
C                                                                       M0007300
C SAVE UV POSITION (NOTE: RECALCULATED IN SUB INTNRM)                   M0007400
      UV(1,1,NS)=U                                                      M0007500
      UV(2,1,NS)=V                                                      M0007600
      IPKNT(NS) = IPTKNT                                                M0007700
C                                                                       M0007800
C LOAD SURFACE NORMAL                                                   M0007900
      PL(1)=SPV(1,8,NS)                                                 M0008000
      PL(2)=SPV(2,8,NS)                                                 M0008100
      PL(3)=SPV(3,8,NS)                                                 M0008200
C                                                                       M0008300
C HECK DIR. OF THIS NORMAL                                              M0008400
      IF (IPTKNT.GE.NPTS-1) GOTO 80                                     M0008500
      CS=HN(1,NS)*PL(1) + HN(2,NS)*PL(2) + HN(3,NS)*PL(3)               M0008600
C IS THE NORMAL ORIENTED THE SAME AS LAST TIME?                         M0008700
      IF (CS.GE.0.D0) GOTO 70                                           M0008800
C                                                                       M0008900
C NO; FLIP DIR.                                                         M0009000
      PL(1)=-PL(1)                                                      M0009100
      PL(2)=-PL(2)                                                      M0009200
      PL(3)=-PL(3)                                                      M0009300
   70 CONTINUE                                                          M0009400
   80 CONTINUE                                                          M0009500
C                                                                       M0009600
C SAVE THIS NORMAL FOR NEXT SOL. & CAL. CONSTANT                        M0009700
      HN(1,NS)=PL(1)                                                    M0009800
      HN(2,NS)=PL(2)                                                    M0009900
      HN(3,NS)=PL(3)                                                    M0010000
      PL(4)=PL(1)*SPV(1,1,NS) + PL(2)*SPV(2,1,NS) + PL(3)*SPV(3,1,NS)   M0010100
  100 CONTINUE                                                          M0010200
      PL(4)=PL(4) + THICK(NS)                                           M0010300
C                                                                       M0010400
  999 RETURN                                                            M0010500
      END                                                               M0010600
**** SOURCE FILE : M0005847.V01   ***
*
      SUBROUTINE INTTRC (J12,J11,PT,IDIR,IRC)                           M0000100
C                                                                       M0000200
C   J12 : I: SURFACE INDEX OF PS                                        M0000300
C   J11 : I: SURFACE INDEX OF DS                                        M0000400
C   PT  : I: POINT STORAGE OF SEGMENT END                               M0000500
C   IDIR: I: FIRST (=1) OR LAST (=-1) SEGMENT POINT                     M0000600
C   IRC : O: =0: NO CONNECTING PAIR OF PATCHES FOUND ; =1: FOUND        M0000700
C                                                                       M0000800
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000900
C                                                                       M0001000
C BLANK COMMON                                                          M0001100
      INCLUDE 'BLANKCOM.INC'                                            M0001200
C                                                                       M0001300
C   COMMON FOR 2 SURFACE INTERSECTION                                   M0001400
      COMMON/INTCOM/IKEEP(255)                                          M0001500
C   PATCH NUMBER FOR PS AND DS (SURFACE RECNO*1000 + PATCH NO)          M0001600
      INTEGER IPNR(2)                                                   M0001700
      EQUIVALENCE (IKEEP(254),IPNR(1))                                  M0001800
C                                                                       M0001900
C SS - ARELEM - COMMON                                                  M0002000
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0002100
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0002200
      DOUBLE PRECISION PT(9,1)                                          M0002300
C                                                                       M0002400
C   FIRST BORDER NUMBER FIELD                                           M0002500
      INTEGER IBO1(3,3)                                                 M0002600
C                                                                       M0002700
C   SECOND BORDER NUMBER FIELD                                          M0002800
      INTEGER IBO2(3,3)                                                 M0002900
C                                                                       M0002910
      DATA IBO1/2,1,1,2,0,3,4,4,3/                                      M0002920
      DATA IBO2/1,0,3,0,0,0,2,0,4/                                      M0002930
C                                                                       M0003000
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0003100
C                                                                       M0003200
C   RETURN CODE                                                         M0003300
      IRC=0                                                             M0003400
C                                                                       M0003500
C  PS SEARCH                                                            M0003600
      JU=2                                                              M0003700
      IF(DABS(PT(7,1)).LT.1.D-5)JU=1                                    M0003800
      IF(DABS(PT(7,1)-1.D0).LT.1.D-5)JU=3                               M0003900
      JV=2                                                              M0004000
      IF(DABS(PT(8,1)).LT.1.D-5)JV=1                                    M0004100
      IF(DABS(PT(8,1)-1.D0).LT.1.D-5)JV=3                               M0004200
C                                                                       M0004300
C  BOUNDARY NUMBER                                                      M0004400
      NB1=IBO1(JU,JV)                                                   M0004500
      IF(NB1.EQ.0)GOTO 50                                               M0004600
C                                                                       M0004700
C  NEXT PATCH                                                           M0004800
      NP=IITOP(2,NB1,1)                                                 M0004900
      IF(NP.EQ.0)GOTO 50                                                M0005000
C                                                                       M0005100
C  LOAD PATCH                                                           M0005200
      M=0                                                               M0005300
      NB2=IBO2(JU,JV)                                                   M0005400
      IF(NB2.NE.0)M=2                                                   M0005500
      CALL LODPCH(SSCAN(J12+1),BB(1,1),IIFLAG(1,1),IITOP(1,1,1),NP,M)   M0005600
      IPNR(1)=IPNR(1)/1000*1000+NP                                      M0005700
      IPNUM(1)=NP                                                       M0005800
C                                                                       M0005900
C   CORNER PATCH ?                                                      M0006000
      IF(NB2.NE.0)GOTO 20                                               M0006100
      IRC=1                                                             M0006200
      GOTO 50                                                           M0006300
C  NEXT PATCH AT CORNER                                                 M0006400
   20 NP=IITOP(2,NB2,1)                                                 M0006500
      IF(NP.EQ.0)GOTO 50                                                M0006600
C                                                                       M0006700
C  LOAD PATCH                                                           M0006800
      CALL LODPCH(SSCAN(J12+1),BB(1,1),IIFLAG(1,1),IITOP(1,1,1),NP,0)   M0006900
      IPNR(1)=IPNR(1)/1000*1000+NP                                      M0007000
      IPNUM(1)=NP                                                       M0007100
      IRC=1                                                             M0007200
C                                                                       M0007300
C  DS SEARCH                                                            M0007400
   50 IF(IIFLAG(1,2).LE.0)GOTO 99                                       M0007500
      JU=2                                                              M0007600
      IF(DABS(PT(4,1)).LT.1.D-5)JU=1                                    M0007700
      IF(DABS(PT(4,1)-1.D0).LT.1.D-5)JU=3                               M0007800
      JV=2                                                              M0007900
      IF(DABS(PT(5,1)).LT.1.D-5)JV=1                                    M0008000
      IF(DABS(PT(5,1)-1.D0).LT.1.D-5)JV=3                               M0008100
C                                                                       M0008200
C  BOUNDARY NUMBER                                                      M0008300
      NB1=IBO1(JU,JV)                                                   M0008400
      IF(NB1.EQ.0)GOTO 99                                               M0008500
      NB2=IBO2(JU,JV)                                                   M0008600
C                                                                       M0008700
C  NEXT PATCH                                                           M0008800
      NP=IITOP(2,NB1,2)                                                 M0008900
      IF(NP.EQ.0)GOTO 99                                                M0009000
C                                                                       M0009100
C  LOAD PATCH                                                           M0009200
      M=0                                                               M0009300
      NB2=IBO2(JU,JV)                                                   M0009400
      IF(NB2.NE.0)M=2                                                   M0009500
      CALL LODPCH(SSCAN(J11+1),BB(1,2),IIFLAG(1,2),IITOP(1,1,2),NP,M)   M0009600
      IPNR(2)=IPNR(2)/1000*1000+NP                                      M0009700
      IPNUM(2)=NP                                                       M0009800
C                                                                       M0009900
C   CORNER PATCH ?                                                      M0010000
      IF(NB2.NE.0)GOTO 70                                               M0010100
      IRC=1                                                             M0010200
      GOTO 99                                                           M0010300
C  NEXT PATCH AT CORNER                                                 M0010400
   70 NP=IITOP(2,NB2,2)                                                 M0010500
      IF(NP.EQ.0)GOTO 99                                                M0010600
C                                                                       M0010700
C  LOAD PATCH                                                           M0010800
      CALL LODPCH(SSCAN(J11+1),BB(1,2),IIFLAG(1,2),IITOP(1,1,2),NP,0)   M0010900
      IPNR(2)=IPNR(2)/1000*1000+NP                                      M0011000
      IPNUM(2)=NP                                                       M0011100
      IRC=1                                                             M0011200
C                                                                       M0011300
   99 RETURN                                                            M0011400
      END                                                               M0011500
**** SOURCE FILE : M0012316.V02   ***
*
      SUBROUTINE NUMVER(U1,V1,U2,V2,ADRESS,UV,NSEG)                     M0000100
C                                                                       M0000200
C ROUTINE TO CALCULATE THE SECTIONS OF A SINGLE PATH, GIVEN IN          M0000300
C  U/V-SPACE ON A GIVEN REGION.                                         M0000400
C                                                                       M0000500
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000600
C                                                                       M0000700
C INPUT : (U1,V1) START POINT                                           M0000800
C  -"-  : (U2,V2) END   POINT                                           M0000900
C  -"-  : ADRESS  CANONICAL FORM OF SURFACE                             M0001000
C OUTPUT: UV(2,I) RESULT POSITIONS (U,V) OF INTERSECTIONS               M0001100
C                 (I=2*NSEG)                                            M0001200
C  -"-  : NSEG    NUMBER OF SEGMENTS FOUND                              M0001300
C                                                                       M0001400
C CANONICAL FORM OF SURFACE                                             M0001500
      DOUBLE PRECISION ADRESS(2)                                        M0001600
C                                                                       M0001700
C RESULT POSITIONS (50 ELEMENTS ASSUMED)                                M0001800
      PARAMETER (MAXSEG=50)                                             M0001850
      DOUBLE PRECISION UV(2,MAXSEG)                                     M0001900
C                                                                       M0002000
C HELP-STORAGE FOR ORDERING THE POINT-SEQUENCE                          M0002100
C  DISTANCE OF UV(...,I) FROM (U1,V1)                                   M0002200
      DOUBLE PRECISION HS(MAXSEG)                                       M0002300
C                                                                       M0002400
C CROSSING CHARACTERISTIC:                                              M0002500
C  AT THE CROSS-POINT BETWEEN THE GIVEN PATH AND THE REGION BOUNDARY    M0002600
C  THE SITUATION >OUT TO IN< IS MARKED WITH 1, AND >IN TO OUT> WITH 2   M0002700
C  THE PRIMARY POINTS (U1,V1) AND (U2,V2) ARE MARKED WITH 0.            M0002800
      INTEGER MARK(MAXSEG)                                              M0002900
C                                                                       M0003000
C BLANK COMMON                                                          M0003100
      INCLUDE 'BLANKCOM.INC'                                            M0003200
C                                                                       M0003300
C STORAGE FOR GIVEN PATH IN UV-SPACE                                    M0003400
      DOUBLE PRECISION W1(4),W1A(4)                                     M0003500
C                                                                       M0003600
C COMMON FOR REGIONAL STARTUP AND RETRACT VALUES                        M0003700
      COMMON/CCLEAR/ DIRMOT(3,4)                                        M0003800
     *              ,GOFEED(4)                                          M0003900
     *              ,GLFEED                                             M0004000
     *              ,REGLDA(2)                                          M0004100
     *              ,IRETRO(4)                                          M0004200
     *              ,IDIRMO(4)                                          M0004300
     *              ,ICANIN(4)                                          M0004400
C                                                                       M0004500
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0004600
C                                                                       M0004700
      LDAFLG=3                                                          M0004800
      CALL APT094(LDAFLG,REGLDA,LREG)                                   M0004900
C                                                                       M0005000
C ADDRESSING WITH BLANK COMMON VARIABLE COM:                            M0005100
      LREG=LREG-1                                                       M0005200
C                                                                       M0005300
C COMPARE SURFACE OF GIVEN REGION WITH THE SURFACE INVOLVED             M0005400
C  IN THE CUT-SEQUENCE                                                  M0005500
      I=INT(COM(LREG+2))                                                M0005510
      IF(ADRESS(1).EQ.COM(I) .AND.                                      M0005600
     *   ADRESS(2).EQ.COM(I+1) ) GOTO 10                                M0005700
C                                                                       M0005800
C WARNING: ACTIVE REGION BELONGS NOT TO THE SURFACE INVOLVED            M0005900
C          IN THIS MOTION (NO SEGMENTATION TAKES PLACE)                 M0006000
      CALL AERR(-22820,'NUMVER  ')                                      M0006100
      UV(1,1)=U1                                                        M0006200
      UV(2,1)=V1                                                        M0006300
      UV(1,2)=U2                                                        M0006400
      UV(2,2)=V2                                                        M0006500
      RETURN                                                            M0006600
C                                                                       M0006700
C PRESENT INTERSECTION ROUTINE WITH GIVEN SINGLE PATH                   M0006800
   10 W1(1)=U1                                                          M0006900
      W1(2)=V1                                                          M0007000
      W1(3)=U2-U1                                                       M0007100
      W1(4)=V2-V1                                                       M0007200
C                                                                       M0007300
C RESET RESULT POSITIONS UV WITH THE START AND END POINT                M0007400
      UV(1,1)=U1                                                        M0007500
      UV(2,1)=V1                                                        M0007600
      UV(1,2)=U2                                                        M0007700
      UV(2,2)=V2                                                        M0007800
C                                                                       M0007900
      MARK(1)=0                                                         M0008000
      MARK(2)=0                                                         M0008100
      HS(1)=0.D0                                                        M0008200
      HS(2)=(U2-U1)**2 +(V2-V1)**2                                      M0008300
C                                                                       M0008400
C OUTSIDE POINTS                                                        M0008500
      AB1=(COM(LREG+5)-U1)*W1(3)+(COM(LREG+7)-V1)*W1(4)                 M0008600
      AB2=(COM(LREG+6)-U1)*W1(3)+(COM(LREG+7)-V1)*W1(4)                 M0008700
      AB3=(COM(LREG+6)-U1)*W1(3)+(COM(LREG+8)-V1)*W1(4)                 M0008800
      AB4=(COM(LREG+5)-U1)*W1(3)+(COM(LREG+8)-V1)*W1(4)                 M0008900
C                                                                       M0009000
C MINIMUM OUTSIDE POINT                                                 M0009100
      HS(3)=DMIN1(AB1,AB2,AB3,AB4,HS(1))-1.D0                           M0009200
      UV(1,3)=W1(1)+W1(3)*HS(3)/HS(2)                                   M0009300
      UV(2,3)=W1(2)+W1(4)*HS(3)/HS(2)                                   M0009400
C                                                                       M0009500
C MAXIMUM OUTSIDE POINT                                                 M0009600
      HS(4)=DMAX1(AB1,AB2,AB3,AB4,HS(2))+1.D0                           M0009700
      UV(1,4)=W1(1)+W1(3)*HS(4)/HS(2)                                   M0009800
      UV(2,4)=W1(2)+W1(4)*HS(4)/HS(2)                                   M0009900
      W1A(1)=UV(1,3)                                                    M0010000
      W1A(2)=UV(2,3)                                                    M0010100
      W1A(3)=UV(1,4)-UV(1,3)                                            M0010200
      W1A(4)=UV(2,4)-UV(2,3)                                            M0010300
      CALL SETVER(W1A)                                                  M0010400
C                                                                       M0010500
C SET OUT TO IN                                                         M0010600
      MARK(3)=1                                                         M0010700
      MARK(4)=2                                                         M0010800
      IF(COM(LREG+4).EQ.1.D0) GOTO 15                                   M0010900
C                                                                       M0011000
C SET OUT TO IN, IF REGION/...IN                                        M0011100
      MARK(3)=2                                                         M0011200
      MARK(4)=1                                                         M0011300
   15 NPT=4                                                             M0011400
C                                                                       M0011500
C CALCULATE INTERSECTIONS                                               M0011600
C  NUMBER OF ELEMENTS                                                   M0011700
      NREGE=COM(LREG+3)                                                 M0011800
      DO 90 I=1,NREGE                                                   M0011900
      J=LREG+5+I*4                                                      M0012000
      CALL GETVER(COM(J),UV(1,NPT+1),IRES)                              M0012100
      IF(IRES.EQ.0) GOTO 80                                             M0012200
      IF(IRES.NE.1) GOTO 30                                             M0012300
C                                                                       M0012400
C SINGLE POINT FOUND, >OUT TO IN< OR >IN TO OUT< IS TO BE DETERMINED    M0012500
      NPT=NPT+1                                                         M0012600
      MARK(NPT)=1                                                       M0012700
      HS(NPT)=(UV(1,NPT)-U1)*W1(3)+(UV(2,NPT)-V1)*W1(4)                 M0012800
      IF(COM(J+2)*(UV(2,3)-COM(J+1))                                    M0012900
     *  -COM(J+3)*(UV(1,3)-COM(J  )).GT.0.D0.OR.                        M0013000
     *   COM(J+2)*(UV(2,4)-COM(J+1))                                    M0013100
     *  -COM(J+3)*(UV(1,4)-COM(J  )).LT.0.D0) GOTO 80                   M0013200
C                                                                       M0013300
C MUST BE >IN TO OUT<                                                   M0013400
      MARK(NPT)=2                                                       M0013500
C                                                                       M0013600
C PATH NEAR PARALLEL TO SEGMENT                                         M0013700
   30 IF(IRES.NE.2) GOTO 80                                             M0013800
C                                                                       M0013900
C CONCAVE/CONVEX CONDITION ON 1ST COMER OF                              M0014000
C  REGION SEGMENT INVOLVED (CONCAVE IF NEGATIVE)                        M0014100
      I1=I-1                                                            M0014200
      IF(I1.EQ.0) I1=NREGE                                              M0014300
      J1=LREG+5+I1*4                                                    M0014400
      CONV1=COM(J+2)*COM(J1+3)-COM(J+3)*COM(J1+2)                       M0014500
C                                                                       M0014600
C CONCAVE/CONVEX CONDITION ON 2ND CCSSER OF                             M0014700
C  REGION SEGMENT INVOLVED                                              M0014800
      I1=I-1                                                            M0014900
      IF(I1.GT.NREGE) I1=1                                              M0015000
      J1=LREG+5+I1*4                                                    M0015100
      CONV2=COM(J1+2)*COM(J+3)-COM(J1+3)*COM(J+2)                       M0015200
C                                                                       M0015300
C NO MARK, IF BOTH SEGMENT ENDS ARE CONCAVE                             M0015400
      IF(CONV1.LT.0.D0.AND.CONV2.LT.0.D0) GOTO 80                       M0015500
C                                                                       M0015600
C POSITION OF INPUT POINTS ON GIVEN REGION SEGMENT                      M0015700
      AB=COM(J+2)**2 +COM(J+3)**2                                       M0015800
      POS1=((UV(1,3)-COM(J))*COM(J+2)+(UV(2,3)-COM(J+1))*COM(J+3))/AB   M0015900
      POS2=((UV(1,4)-COM(J))*COM(J+2)+(UV(2,4)-COM(J+1))*COM(J+3))/AB   M0016000
C                                                                       M0016100
C   NO POINT IF BOTH POINTS ARE ON SEGMENT                              M0016200
      IF(POS1.GE.0.D0.AND.POS1.LE.1.D0                                  M0016300
     *.AND.POS2.GE.0.D0.AND.POS2.LE.1.D0)GOTO 80                        M0016400
C                                                                       M0016500
C   PARALLEL OR ANTIPARALLEL                                            M0016600
      IF(POS2.GT.POS1)GOTO 40                                           M0016700
C                                                                       M0016800
C   SINGL PATH AND SEGMENT ARE PARALLEL                                 M0016900
C    1. POINT                                                           M0017000
      IF(POS1.GE.0.D0.OR.CONV1.GT.0.D0)GOTO 35                          M0017100
      NPT=NPT+1                                                         M0017200
      MARK(NPT)=2                                                       M0017300
      UV(1,NPT)=COM(J)                                                  M0017400
      UV(2,NPT)=COM(J+1)                                                M0017500
      HS(NPT)=(UV(1,NPT)-U1)*W1(3)+(UV(2,NPT)-V1)*W1(4)                 M0017600
C    2. POINT                                                           M0017700
   35 IF(POS2.LE.1.D0.OR.CONV2.GT.0.D0)GOTO 80                          M0017800
      NPT=NPT+1                                                         M0017900
      MARK(NPT)=1                                                       M0018000
      UV(1,NPT)=COM(J)  +COM(J+2)                                       M0018100
      UV(2,NPT)=COM(J+1)+COM(J+3)                                       M0018200
      HS(NPT)=(UV(1,NPT)-U1)*W1(3)+(UV(2,NPT)-V1)*W1(4)                 M0018300
      GOTO 80                                                           M0018400
C   SINGL PATH AND SEGMENT ARE ANTIPARALLEL                             M0018500
C    1. POINT                                                           M0018600
   40 IF(POS1.LE.1.D0.OR.CONV2.GT.0.D0)GOTO 45                          M0018700
      NPT=NPT+1                                                         M0018800
      MARK(NPT)=2                                                       M0018900
      UV(1,NPT)=COM(J)  +COM(J+2)                                       M0019000
      UV(2,NPT)=COM(J+1)+COM(J+3)                                       M0019100
      HS(NPT)=(UV(1,NPT)-U1)*W1(3)+(UV(2,NPT)-V1)*W1(4)                 M0019200
C    2. POINT                                                           M0019300
   45 IF(POS2.GE.0.D0.OR.CONV1.GT.0.D0)GOTO 80                          M0019400
      NPT=NPT+1                                                         M0019500
      MARK(NPT)=1                                                       M0019600
      UV(1,NPT)=COM(J)                                                  M0019700
      UV(2,NPT)=COM(J+1)                                                M0019800
      HS(NPT)=(UV(1,NPT)-U1)*W1(3)+(UV(2,NPT)-V1)*W1(4)                 M0019900
      GOTO 80                                                           M0020000
C                                                                       M0020100
C   CHECK IF NOT MORE THAN 50 SEGMENT END POINTS                        M0020200
   80 IF(NPT.LT.MAXSEG-1)GOTO 90                                        M0020300
C                                                                       M0020400
C WARNING : MORE THAN 24 SEGMENTS TO BE PROCESSED (REST IS SCIPPED)     M0020500
      CALL AERR(-22821,'NUMVER  ')                                      M0020600
      GOTO 95                                                           M0020700
   90 CONTINUE                                                          M0020800
C                                                                       M0020900
C  SORT THE RESULTS                                                     M0021000
   95 NPT1=NPT-1                                                        M0021100
      DO 110 I=1,NPT1                                                   M0021200
      K=I                                                               M0021300
      I1=I+1                                                            M0021400
      DO 100 J=I1,NPT                                                   M0021500
      IF(HS(K).LE.HS(J))GOTO 100                                        M0021600
      K=J                                                               M0021700
  100 CONTINUE                                                          M0021800
      IF(K.EQ.I)GOTO 110                                                M0021900
      U=UV(1,I)                                                         M0022000
      V=UV(2,I)                                                         M0022100
      AB=HS(I)                                                          M0022200
      MARK1=MARK(I)                                                     M0022300
      UV(1,I)=UV(1,K)                                                   M0022400
      UV(2,I)=UV(2,K)                                                   M0022500
      HS(I)=HS(K)                                                       M0022600
      MARK(I)=MARK(K)                                                   M0022700
      UV(1,K)=U                                                         M0022800
      UV(2,K)=V                                                         M0022900
      HS(K)=AB                                                          M0023000
      MARK(K)=MARK1                                                     M0023100
  110 CONTINUE                                                          M0023200
C  TEST **************************************************************  M0023300
C     NSEG=0                                                            M0023400
C     WRITE(6,200)NSEG,NPT,(UV(1,I),UV(2,I),MARK(I),HS(I),I=1,NPT)      M0023500
C  TEST **************************************************************  M0023600
C                                                                       M0023700
C  SEARCH FOR START POINT                                               M0023800
      DO 120 I=1,NPT                                                    M0023900
      IF(MARK(I).NE.0)GOTO 120                                          M0024000
C                                                                       M0024100
C  NO PATH IN REGION IF PREVIOUS POINT IS >IN TO OUT< (2)               M0024200
C                    AND NEXT POINT IS THE GIVEN END POINT OF PATH      M0024300
      IF(MARK(I-1).EQ.2.AND.MARK(I+1).EQ.0)GOTO 150                     M0024400
C                                                                       M0024500
C  CASE: PREVIOUS POINT IS >OUT TO IN< (1)                              M0024600
      NPT1=I                                                            M0024700
      MARK(I)=1                                                         M0024800
      IF(MARK(I-1).EQ.1)GOTO 125                                        M0024900
C                                                                       M0025000
C  CASE: NEXT POINT IS >OUT TO IN< (1)                                  M0025100
      NPT1=I+1                                                          M0025200
      GOTO 125                                                          M0025300
  120 CONTINUE                                                          M0025400
  125 CONTINUE                                                          M0025500
C                                                                       M0025600
C  COMPRESS DATA                                                        M0025700
      DO 130 I=1,NPT                                                    M0025800
      UV(1,I)=UV(1,NPT1)                                                M0025900
      UV(2,I)=UV(2,NPT1)                                                M0026000
      MARK(I)=MARK(NPT1)                                                M0026100
C                                                                       M0026200
C   CHECK FOR THE END POINT OF THE PATH                                 M0026300
      IF(MARK(NPT1).NE.0)GOTO 130                                       M0026400
C                                                                       M0026500
C THIS IS NO END POINT OF THE PATH IF THE PREVIOUS POINT IS >IN TO OUT< M0026600
      MARK(I)=2                                                         M0026700
      NPT1=I                                                            M0026800
      IF(MARK(I-1).EQ.2)NPT1=NPT1-1                                     M0026900
      GOTO 135                                                          M0027000
  130 NPT1=NPT1+1                                                       M0027100
  135 CONTINUE                                                          M0027200
C                                                                       M0027300
C  CHECK THE >OUT TO IN< AND >IN TO OUT< SEQUENCE                       M0027400
      NSEG=0                                                            M0027500
      DO 140 I=1,NPT1,2                                                 M0027600
      IF(MARK(I).EQ.1.AND.MARK(I+1).EQ.2) GOTO 140                      M0027700
      GOTO 150                                                          M0027800
  140 NSEG=NSEG+1                                                       M0027900
      GOTO 999                                                          M0028000
C                                                                       M0028100
C  NO PATH IN REGION                                                    M0028200
  150 NSEG=0                                                            M0028300
C                                                                       M0028400
  999 RETURN                                                            M0028500
      END                                                               M0028600
**** SOURCE FILE : M0012375.V01   ***
*
      SUBROUTINE PLAPOL(PL,POED,M,N,TOL,SP,IRC)                         M0000100
C                                                                       M0000200
C  TO CHECK THE INTERFERENCE BETWEEN A PLANE AND A POLYHEDRON           M0000300
C      PL  : I : PLANE                                                  M0000400
C      POED: I : POLYHEDRAL DATA OF SURFACE 2                           M0000500
C      TOL : I : INTERSECTION TOLERANCE                                 M0000600
C      SP  : O : INTERSECTION NEAR POINT                                M0000700
C      IRC : O : RETURNCODE : NO INTERSECTION: IRC=0                    M0000800
C                                                                       M0000900
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0001000
      DOUBLE PRECISION PL(4),TOL,POED(3,M,N),SP(3),DIST(5),DISTMI       M0001100
C                                                                       M0001200
      IRC=0                                                             M0001300
      DISTMI=1.D20                                                      M0001400
C                                                                       M0001500
C  DISTANCE TO PLANE                                                    M0001600
      DO 10 J=1,N                                                       M0001700
      DO 10 I=1,M                                                       M0001800
      DISTI=POED(1,I,J)*PL(1)+POED(2,I,J)*PL(2)+POED(3,I,J)*PL(3)       M0001900
     * -PL(4)                                                           M0002000
C                                                                       M0002100
C   MINIMUM DISTANCE SELECTION                                          M0002200
      IF(DISTMI.LT.DABS(DISTI)) GOTO 2                                  M0002300
      DISTMI=DABS(DISTI)                                                M0002400
      II=I                                                              M0002500
      JJ=J                                                              M0002600
C                                                                       M0002700
C   CROSS OF PLANE IN V-DIRECTION ?                                     M0002800
    2 IF(J.EQ.1) GOTO 5                                                 M0002900
      IF(DISTI*DIST(I).GT.0.D0) GOTO 5                                  M0003000
C                                                                       M0003100
C   CROSS OR TUCH POINT FOUND                                           M0003200
      II=I                                                              M0003300
      JJ=J                                                              M0003400
      GOTO 20                                                           M0003500
C                                                                       M0003600
C   CROSS OF PLANE IN U-DIRECTION ?                                     M0003700
    5 IF(I.EQ.1) GOTO 7                                                 M0003800
      IF(DISTI*DIST(I-1).GT.0.D0) GOTO 7                                M0003900
C                                                                       M0004000
C   CROSS OR TUCH POINT FOUND                                           M0004100
      II=I                                                              M0004200
      JJ=J                                                              M0004300
      GOTO 20                                                           M0004400
C                                                                       M0004500
C   STORE DISTANCE                                                      M0004600
    7 DIST(I)=DISTI                                                     M0004700
   10 CONTINUE                                                          M0004800
C                                                                       M0004900
C   RETURN IF THE SURFACES ARE NOT CLOSE ENOUGH                         M0005000
      IF(TOL*100.D0.LT.DISTMI) RETURN                                   M0005100
C                                                                       M0005200
C  STORE NEAR POINT                                                     M0005300
   20 DO 30 K=1,3                                                       M0005400
   30 SP(K)=POED(K,II,JJ)                                               M0005500
      IRC=1                                                             M0005600
C                                                                       M0005700
      RETURN                                                            M0005800
      END                                                               M0005900
**** SOURCE FILE : M0012387.V01   ***
*
      SUBROUTINE POLMTN(NS,POED,M,N)                                    M0000100
C                                                                       M0000200
C  TO COMPUTE A M*N POLYEDRON TO SEARCH FOR ROUGH INTERSECTION          M0000300
C                                                                       M0000400
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000500
      DOUBLE PRECISION POED(3,M,N)                                      M0000600
C                                                                       M0000700
C SS - ARELEM - COMMON                                                  M0000800
      COMMON/SSARLM/BB(64,4),UU(4),VV(4),                               M0000900
     *              IITOP(6,4,4),IIFLAG(4,4),IPNUM(4)                   M0001000
C                                                                       M0001100
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0001200
C                                                                       M0001300
      DO 1 J=1,N                                                        M0001400
      V=J-1                                                             M0001500
      V=V/4.D0                                                          M0001600
      DO 1 I=1,M                                                        M0001700
      U=I-1                                                             M0001800
      U=U/4.D0                                                          M0001900
      CALL CNSURF(U,V,BB(1,NS),POED(1,I,J),IIFLAG(1,NS),0)              M0002000
    1 CONTINUE                                                          M0002100
C                                                                       M0002200
      RETURN                                                            M0002300
      END                                                               M0002400
**** SOURCE FILE : M0012381.V01   ***
*
      SUBROUTINE POLPOL(POED1,M1,N1,POED2,M2,N2,TOL,SP,IRC)             M0000100
C                                                                       M0000200
C  TO CHECK THE INTERFERENCE BETWEEN A PLANE AND A POLYHEDRON           M0000300
C      POED1: I : POLYHEDRAL DATA OF SURFACE 1                          M0000400
C      POED2: I : POLYHEDRAL DATA OF SURFACE 2                          M0000500
C      TOL  : I : INTERSECTION TOLERANCE                                M0000600
C      SP   : O : INTERSECTION NEAR POINT                               M0000700
C      IRC  : O : RETURNCODE : NO INTERSECTION: IRC=0                   M0000800
C                                                                       M0000900
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0001000
      DOUBLE PRECISION POED1(3,M1,N1),TOL,POED2(3,M2,N2),SP(3),DIST(5),DM0001100
      DOUBLE PRECISION P1(3),P2(3),P3(3),V1(3),V2(3),V3(3),PL(4)        M0001200
      DOUBLE PRECISION FACE(3,6),PF(3)                                  M0001300
      EQUIVALENCE (FACE(1,1),P1(1))                                     M0001400
      EQUIVALENCE (FACE(1,2),V1(1))                                     M0001500
      EQUIVALENCE (FACE(1,3),P2(1))                                     M0001600
      EQUIVALENCE (FACE(1,4),V2(1))                                     M0001700
      EQUIVALENCE (FACE(1,5),P3(1))                                     M0001800
      EQUIVALENCE (FACE(1,6),V3(1))                                     M0001900
C                                                                       M0002000
C                                                                       M0002100
      IRC=0                                                             M0002200
      DISTMI=1.D20                                                      M0002300
      N1M1=N1-1                                                         M0002400
      M1M1=M1-1                                                         M0002500
      DO 50 L=1,N1M1                                                    M0002600
      DO 50 K=1,M1M1                                                    M0002700
C                                                                       M0002800
C   COMPUTE INDICES OF TRIANGLE FACES ON DS PATCH                       M0002900
      K1=K                                                              M0003000
      L1=L                                                              M0003100
      L2=L+1                                                            M0003200
      K3=K+1                                                            M0003300
      DO 50 M=1,2                                                       M0003400
      K2=K+M-1                                                          M0003500
      L3=L+2-M                                                          M0003600
C                                                                       M0003700
C  EXTRACT FACE CORNER POINTS                                           M0003800
      DO 40 N=1,3                                                       M0003900
      P1(N)=POED1(N,K1,L1)                                              M0004000
      P2(N)=POED1(N,K2,L2)                                              M0004100
      P3(N)=POED1(N,K3,L3)                                              M0004200
      V1(N)=P2(N)-P1(N)                                                 M0004300
      V2(N)=P3(N)-P2(N)                                                 M0004400
   40 V3(N)=P1(N)-P3(N)                                                 M0004500
C                                                                       M0004600
C  GENERATE PLANE COEFFICENTS                                           M0004700
      CALL CROSS(V2,V1,PL)                                              M0004800
      SEC=DSQRT(PL(1)**2+PL(2)**2+PL(3)**2)                             M0004900
      PL(1)=PL(1)/SEC                                                   M0005000
      PL(2)=PL(2)/SEC                                                   M0005100
      PL(3)=PL(3)/SEC                                                   M0005200
      PL(4)=PL(1)*P1(1)+PL(2)*P1(2)+PL(3)*P1(3)                         M0005300
C                                                                       M0005400
C  DISTANCE BETWEEN FACES ON DS PATCH AND POINTS OF PS PATCH            M0005500
      DO 10 J=1,N2                                                      M0005600
      DO 10 I=1,M2                                                      M0005700
      DISTI=POED2(1,I,J)*PL(1)+POED2(2,I,J)*PL(2)+POED2(3,I,J)*PL(3)    M0005800
     * -PL(4)                                                           M0005900
C                                                                       M0006000
C   MINIMUM DISTANCE SELECTION                                          M0006100
      IF(DISTMI.LT.DABS(DISTI)) GOTO 2                                  M0006200
C                                                                       M0006300
C  CALCULATE FOOT POINT ON PLANE                                        M0006400
      PF(1)=POED2(1,I,J)-DISTI*PL(1)                                    M0006500
      PF(2)=POED2(2,I,J)-DISTI*PL(2)                                    M0006600
      PF(3)=POED2(3,I,J)-DISTI*PL(3)                                    M0006700
C                                                                       M0006800
C   CALCULATE IF FOOT POINT IS IN PLANE                                 M0006900
      CALL INTFA1 (FACE,PL,PF,IRC1)                                     M0007000
      IF(IRC1.EQ.0) GOTO 2                                              M0007100
C                                                                       M0007200
C  DISTANCE TO PLANE                                                    M0007300
      DISTMI=DABS(DISTI)                                                M0007400
      II=I                                                              M0007500
      JJ=J                                                              M0007600
C                                                                       M0007700
C   CROSS OF PLANE IN V-DIRECTION ?                                     M0007800
    2 IF(J.EQ.1) GOTO 5                                                 M0007900
      IF(DISTI*DIST(I).GT.0.D0) GOTO 5                                  M0008000
      CALL INTFA2 (FACE,PL,POED2(1,I,J-1),POED2(1,I,J),IRC1)            M0008100
      IF(IRC1.EQ.0) GOTO 5                                              M0008200
C                                                                       M0008300
C   CROSS OR TUCH POINT FOUND                                           M0008400
      II=I                                                              M0008500
      JJ=J                                                              M0008600
      GOTO 20                                                           M0008700
C                                                                       M0008800
C   CROSS OF PLANE IN U-DIRECTION ?                                     M0008900
    5 IF(I.EQ.1) GOTO 7                                                 M0009000
      IF(DISTI*DIST(I-1).GT.0.D0) GOTO 7                                M0009100
      CALL INTFA2 (FACE,PL,POED2(1,I-1,J),POED2(1,I,J),IRC1)            M0009200
      IF(IRC1.EQ.0) GOTO 7                                              M0009300
C                                                                       M0009400
C   CROSS OR TUCH POINT FOUND                                           M0009500
      II=I                                                              M0009600
      JJ=J                                                              M0009700
      GOTO 20                                                           M0009800
C                                                                       M0009900
C   STORE DISTANCE                                                      M0010000
    7 DIST(I)=DISTI                                                     M0010100
   10 CONTINUE                                                          M0010200
   50 CONTINUE                                                          M0010300
C                                                                       M0010400
C   RETURN IF THE SURFACES ARE NOT CLOSE ENOUGH                         M0010500
      IF(TOL*100.D0.LT.DISTMI) RETURN                                   M0010600
C                                                                       M0010700
C  STORE NEAR POINT                                                     M0010800
   20 DO 30 K=1,3                                                       M0010900
   30 SP(K)=POED2(K,II,JJ)                                              M0011000
      IRC=1                                                             M0011100
C                                                                       M0011200
      RETURN                                                            M0011300
      END                                                               M0011400
**** SOURCE FILE : M0012108.V03   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE PRO028                                M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE PRO028(ERAS)                                  M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    ALARM           SUBROUTINE    PRO026           M0000800
C          SUBROUTINE    ARGCVT                                         M0000900
C          SUBROUTINE    ARGGEN                                         M0001000
C          SUBROUTINE    CALLZZ                                         M0001100
C          INTEGER FCT.  GETTMP                                         M0001200
C          INTEGER FCT.  MODE                                           M0001300
C          SUBROUTINE    OPCODE                                         M0001400
C          SUBROUTINE    PUTTMP                                         M0001500
C          SUBROUTINE    REFGEN                                         M0001600
C          SUBROUTINE    RESRVZ                                         M0001700
C          SUBROUTINE    RLSLIN                                         M0001800
C          INTEGER FCT.  SEARCH                                         M0001900
C          SUBROUTINE    TWOARG                                         M0002000
C                                                                       M0002100
      SUBROUTINE PRO028(ERAS)                                           M0002200
C                                                                       M0002300
      IMPLICIT INTEGER (A-Z)                                            M0002400
C                                                                       M0002500
C        1.    NAME TABLE AND TABLE LIMITS                              M0002600
C                                                                       M0002700
      INCLUDE 'NAMETB.INC'                                              M0002800
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0003000
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0003200
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0003210
C                                                                       M0003400
C        2.    STACK AND POINTER STORAGE                                M0003500
C                                                                       M0003600
      COMMON/STKLST/STKLST                                              M0003700
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      M0003800
C TOP:         POINTER TO LAST STACK ENTRY                              M0003900
      EQUIVALENCE (TOP,STKLST(1))                                       M0004000
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             M0004100
      EQUIVALENCE (ARGTOP,STKLST(2))                                    M0004200
C STACK:       WORKING STACK                                            M0004300
      EQUIVALENCE (STACK(1,1),STKLST(4))                                M0004400
C ARGSTK:      ARGUMENT STACK                                           M0004500
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               M0004600
C                                                                       M0004700
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0004800
C                                                                       M0004900
      COMMON/CODE/CODE                                                  M0005000
      DIMENSION CODE(150),NUMBER(2),TEMP(2),PERMID(2),VBL(2)            M0005100
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        M0005200
      EQUIVALENCE (NUMBER(1),CODE(27))                                  M0005300
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0005400
      EQUIVALENCE (TEMP(1),CODE(33))                                    M0005500
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        M0005600
      EQUIVALENCE (PERMID(1),CODE(39))                                  M0005700
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        M0005800
      EQUIVALENCE (VBL(1),CODE(61))                                     M0005900
C                                                                       M0006000
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           M0006100
C                                                                       M0006200
      INCLUDE 'GMTY.INC'                                                M0006300
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            M0006500
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  M0006700
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    M0006900
C                                                                       M0007100
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      M0007200
C                                                                       M0007300
      COMMON/BCDPTR/BCDPTR                                              M0007400
      DIMENSION BCDPTR(7)                                               M0007500
C ERASB:       NAMTBL POINTER TO ALPHAMERIC LITERAL 'APTER'             M0007600
      EQUIVALENCE (ERASB,BCDPTR(5))                                     M0007700
C                                                                       M0007800
C        9.    NAME TABLE POINTERS TO NUMBERS                           M0007900
C                                                                       M0008000
      COMMON/NUMPTR/NUMPTR                                              M0008100
      DIMENSION NUMPTR(12)                                              M0008200
C ZEROPT:      NAMTBL POINTER TO '0.    '                               M0008300
      EQUIVALENCE (ZEROPT,NUMPTR(2))                                    M0008400
C ONEPT:       NAMTBL POINTER TO '1.    '                               M0008500
      EQUIVALENCE (ONEPT,NUMPTR(4))                                     M0008600
C                                                                       M0008700
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0008800
C                                                                       M0008900
      COMMON/IL/IL                                                      M0009000
      DIMENSION IL(21)                                                  M0009100
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              M0009200
      EQUIVALENCE (REPL,IL(17))                                         M0009300
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              M0009400
      EQUIVALENCE (MOVE,IL(19))                                         M0009500
C                                                                       M0009600
C       17.    MODE CODES                                               M0009700
C                                                                       M0009800
      COMMON/MODX/MODX                                                  M0009900
      DIMENSION MODX(32)                                                M0010000
C VECTOR:      MODE CODE (20) FOR VECTOR                                M0010100
      EQUIVALENCE (VECTOR,MODX(20))                                     M0010200
C REAL:        MODE CODE (24) FOR A SCALAR                              M0010300
      EQUIVALENCE (REAL,MODX(21))                                       M0010400
C                                                                       M0010500
C       27.    OPERAND MODIFIERS                                        M0010600
C                                                                       M0010700
      COMMON/OPMOD/OPMOD                                                M0010800
      DIMENSION OPMOD(6)                                                M0010900
C NOUGHT:      CONTAINS OPERAND TYPE 0                                  M0011000
      EQUIVALENCE (NOUGHT,OPMOD(1))                                     M0011100
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             M0011200
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     M0011300
C                                                                       M0011400
C       28.    OPERAND MODIFIERS                                        M0011500
C                                                                       M0011600
      COMMON/SUBLST/SUBLST                                              M0011700
      DIMENSION SUBLST(136)                                             M0011800
C TLAXIS:      NAMTBL POINTER FOR XECUTION SUBROUTINE TLAXIS            M0011900
      EQUIVALENCE (TLAXIS,SUBLST(135))                                  M0012000
C                                                                       M0012100
C       29.    CLASS CODE MODULI                                        M0012200
C                                                                       M0012300
      COMMON/MODULI/MODULI                                              M0012400
      DIMENSION MODULI(2)                                               M0012500
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0012600
      EQUIVALENCE (MODULO,MODULI(1))                                    M0012700
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0012800
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0012900
C*                                                                      M0013000
      LOGICAL ERAS                                                      M0013100
      DIMENSION LENGTH(22)                                              M0013200
      CHARACTER HCS*6,HPS*2                                             M0013210
      DATA HCS/'CS    '/,HPS/'PS'/                                      M0013300
      DATA LENGTH/7,5,5,3,2,1,1,1,1,4,2,6,4,4,2,4,3,4,3,3,2,2/          M0013400
C**                                                                     M0013500
C     PREPARE MODES AND PERMANENT IDENTIFIERS OF THE ARGSTK ARGUMENTS   M0013600
C          AND MOVE THEM TO STACK(2,TOP+1) AND HIGHER ADDR.             M0013700
C                                                                       M0013800
      IF(ARGTOP.LT.1)GOTO 4100                                          M0013900
      TP=TOP+1                                                          M0014000
      STACK(2,TP)=-1                                                    M0014100
      DO 40 ERRPT=1,ARGTOP                                              M0014200
      NN=0                                                              M0014300
      J=ARGSTK(ERRPT)                                                   M0014400
      IF(J.GT.NAMMAX)GOTO 20                                            M0014500
      CLASS=NAMTBL(J)/MODULO*MODULO                                     M0014600
      MM=NAMTBL(J)-CLASS                                                M0014700
      IF(MM.GT.MODHLF)MM=MM-MODHLF                                      M0014800
      IF(CLASS.NE.PERMID(1))GOTO 10                                     M0014900
      NN=50                                                             M0015000
      MM=MM+NN                                                          M0015100
      GOTO 30                                                           M0015200
   10 IF(CLASS.EQ.VBL(1).OR.CLASS.EQ.TEMP(1))GOTO 30                    M0015300
      IF(CLASS.NE.NUMBER(1))GOTO 4300                                   M0015400
   20 MM=REAL                                                           M0015500
   30 TP=TP+1                                                           M0015600
      STACK(1,TP)=MM-NN                                                 M0015700
   40 STACK(2,TP)=PMIDTB(MM)                                            M0015800
C                                                                       M0015900
C                                                                       M0016000
C     SEARCH FOR THE PRODUCTION NUMBER AND BRANCH                       M0016100
C                                                                       M0016200
      MM=ARGTOP                                                         M0016300
      LL=MM                                                             M0016400
      NN=GEOLOC(49)                                                     M0016500
      LPROD=0                                                           M0016600
      II=0                                                              M0016700
   50 ERRPT=LL                                                          M0016800
      TP2=TP*2                                                          M0016850
      PROD=SEARCH(STACK,TP2,GEOMTB(NN),ERRPT)                           M0016900
C                                                                       M0017000
C                   ERROR DIAGNOSTICS                                   M0017100
C                                                                       M0017200
      IF(PROD.EQ.200)GOTO 4400                                          M0017300
      IF((LL-ERRPT).GT.LENGTH(PROD))GOTO 4500                           M0017400
      IF(PROD.LT.6)GOTO 90                                              M0017500
      IF(ERRPT.NE.0)GOTO 4200                                           M0017600
C                                                                       M0017700
C                   PRODUCTION NUMBERS                                  M0017800
C             1    2    3    4    5    6    7    8    9   10   11       M0017900
   90 GOTO( 100, 200, 200, 400, 500, 600, 700, 800, 800,1000,1000,      M0018000
C            12   13   14   15   16   17   18   19   20   21   22       M0018100
     *     1200,1300,1300,1500,2200,2200,2200,2200,2000,2100,2200),PROD M0018200
C                                                          PS           M0018300
C                PRODUCTION 1, 2, 3, 4  -->  TLAXIS/ATANGL,DS,.......   M0018400
C                                                                       M0018500
  100 ARGSTK(ARGTOP-5)=ARGSTK(ARGTOP-6)                                 M0018600
      ARGSTK(ARGTOP-6)=ARGSTK(ARGTOP-2)                                 M0018700
      ARGSTK(ARGTOP-3)=ARGSTK(ARGTOP-1)                                 M0018800
      ARGSTK(ARGTOP-2)=ARGSTK(ARGTOP  )                                 M0018900
      ARGTOP=ARGTOP-2                                                   M0019000
      MM=ARGTOP                                                         M0019100
      GOTO 410                                                          M0019200
C                                                                       M0019300
  200 JJ=ARGSTK(ARGTOP-2)                                               M0019400
      ARGSTK(ARGTOP-2)=ARGSTK(ARGTOP-4)                                 M0019500
      ARGSTK(ARGTOP-3)=ARGSTK(ARGTOP-4)                                 M0019600
      ARGSTK(ARGTOP-4)=JJ                                               M0019700
      GOTO 410                                                          M0019800
C                                                                       M0019900
  400 ARGTOP=ARGTOP+2                                                   M0020000
      ARGSTK(ARGTOP)=ARGSTK(ARGTOP-2)                                   M0020100
      ARGSTK(ARGTOP-1)=ARGSTK(ARGTOP-3)                                 M0020200
      ARGSTK(ARGTOP-2)=ZEROPT                                           M0020300
      ARGSTK(ARGTOP-3)=ZEROPT                                           M0020400
  410 MM=ARGTOP                                                         M0020500
      IF(CNAMTB(ARGSTK(MM-1)).EQ.HCS)GOTO 4600                          M0020600
      LPROD=PROD                                                        M0020700
      IF(ERRPT.EQ.0)GOTO 3000                                           M0020800
      JJ=LENGTH(PROD)-1                                                 M0020900
      STACK(2,TP-JJ)=STACK(2,TP)                                        M0021000
      TP=TP-JJ                                                          M0021100
      LL=LL-JJ                                                          M0021200
      GOTO 50                                                           M0021300
C                                                                       M0021400
C            PRODUCTION 5    TLAXIS/<REAL>,<REAL>,.......,<REAL>        M0021500
C                                                                       M0021600
  500 IF(ARGTOP-3)3000,510,530                                          M0021700
  510 ERRPT=1                                                           M0021800
      IF(MODE(ARGSTK(ERRPT)).NE.REAL)GOTO 4300                          M0021900
      KK=GETTMP(VECTOR)                                                 M0022000
      CALL OPCODE(MOVE)                                                 M0022100
      CALL TWOARG(NOUGHT,KK)                                            M0022200
      DO 520 I=1,MM                                                     M0022300
  520 CALL ARGCVT(ARGSTK(MM+1-I))                                       M0022400
      CALL RLSLIN                                                       M0022500
      CALL REFGEN(3,KK)                                                 M0022600
      CALL PUTTMP(VECTOR)                                               M0022700
      PROD=7                                                            M0022800
      GOTO 3900                                                         M0022900
C                                                                       M0023000
  530 IF(ARGTOP.LT.10)GOTO 540                                          M0023100
      CALL ALARM(2052,9-ARGTOP,4,'PRO028  ')                            M0023200
      MM=9                                                              M0023300
  540 DO 550 ERRPT=4,MM                                                 M0023400
      IF(MODE(ARGSTK(ERRPT)).NE.REAL)GOTO 4300                          M0023500
  550 CONTINUE                                                          M0023600
      GOTO 3000                                                         M0023700
C                 PRODUCTION 6  -->  TLAXIS/ LAST                       M0023800
C                 PRODUCTION 7  -->  TLAXIS/<VECTOR>                    M0023900
C                 PRODUCTION 8  -->  TLAXIS/NORMDS ; TLAXIS/NORMPS      M0024000
C                 PRODUCTION 9  -->  TLAXIS/ 1.                         M0024100
  600 KK=ONEPT                                                          M0024200
      PROD=9                                                            M0024300
      GOTO 3900                                                         M0024400
  700 MM=3                                                              M0024500
  800 KK=ARGSTK(ARGTOP)                                                 M0024600
      IF(CNAMTB(KK)(5:6).EQ.HPS)PROD=6                                  M0024700
      GOTO 3900                                                         M0024800
C                                                                       M0024900
C                 PRODUCTION 10 -->  TLAXIS/PARLEL,<REAL>,<REAL>,<REAL> M0025000
C                 PRODUCTION 11 -->  TLAXIS/PARLEL,<REAL>               M0025100
C                                                                       M0025200
 1000 GOTO 3000                                                         M0025300
C                                                          PS           M0025400
C                PRODUCTION 12,13,14,15  ->  TLAXIS/PARLEL,DS,.......   M0025500
C                                                                       M0025600
 1200 ARGSTK(ARGTOP-4)=ARGSTK(ARGTOP-3)                                 M0025700
      ARGSTK(ARGTOP-3)=ARGSTK(ARGTOP-1)                                 M0025800
      ARGSTK(ARGTOP-2)=ARGSTK(ARGTOP  )                                 M0025900
      ARGTOP=ARGTOP-2                                                   M0026000
      GOTO 1520                                                         M0026100
C                                                                       M0026200
 1300 ARGSTK(ARGTOP-2)=ARGSTK(ARGTOP-3)                                 M0026300
      GOTO 1520                                                         M0026400
C                                                                       M0026500
 1500 ARGTOP=ARGTOP+2                                                   M0026600
      ARGSTK(ARGTOP)=ARGSTK(ARGTOP-2)                                   M0026700
      ARGSTK(ARGTOP-1)=ARGSTK(ARGTOP-3)                                 M0026800
      ARGSTK(ARGTOP-2)=ZEROPT                                           M0026900
      ARGSTK(ARGTOP-3)=ZEROPT                                           M0027000
 1520 MM=ARGTOP                                                         M0027100
      IF(CNAMTB(ARGSTK(MM-1)).EQ.HCS)GOTO 4600                          M0027200
      GOTO 3000                                                         M0027300
C                                                          ..,MOTDIR,.. M0027400
C                PRODUCTION 16 BIS 22  -->  TLAXIS/ATANGL,...,CUTANG,.. M0027500
C                                                          ..,PERPTO,.. M0027600
 2000 II=ARGSTK(1)                                                      M0027700
      I=3                                                               M0027800
      DO 2010 JJ=I,ARGTOP                                               M0027900
 2010 ARGSTK(JJ-2)=ARGSTK(JJ)                                           M0028000
      ARGTOP=ARGTOP-2                                                   M0028100
      GOTO 2200                                                         M0028200
C                                                                       M0028300
 2100 II=ARGSTK(1)                                                      M0028400
      I=2                                                               M0028500
 2110 DO 2120 JJ=I,ARGTOP                                               M0028600
 2120 ARGSTK(JJ-1)=ARGSTK(JJ)                                           M0028700
      ARGTOP=ARGTOP-1                                                   M0028800
C                                                                       M0028900
 2200 MM=ARGTOP                                                         M0029000
      IF(LPROD.EQ.0)GOTO 4600                                           M0029100
      PROD=100*LPROD+PROD                                               M0029200
C                                                                       M0029300
C      I. L. OUTPUT                                                     M0029400
C                                                                       M0029500
 3000 IF(ERAS)GOTO 3100                                                 M0029600
      CALL RESRVZ(ERASB,0,9,1)                                          M0029700
      ERAS=.TRUE.                                                       M0029800
C                                                                       M0029900
 3100 CALL OPCODE(MOVE)                                                 M0030000
      CALL TWOARG(NOUGHT,ERASB)                                         M0030100
      CALL ARGGEN                                                       M0030200
      CALL RLSLIN                                                       M0030300
      IF(II.EQ.0)GOTO 3800                                              M0030400
C                                                                       M0030500
C          REPLACE FOR PLANE, LINE OR VECTOR DEFINITION                 M0030600
C                                                                       M0030700
      CALL OPCODE(REPL)                                                 M0030800
      CALL ONEARG(3)                                                    M0030900
      CALL TWOARG(-6,ERASB)                                             M0031000
      CALL ARGCVT(II)                                                   M0031100
      CALL RLSLIN                                                       M0031200
      MM=MM+3                                                           M0031300
C                                                                       M0031400
 3800 KK=ERASB                                                          M0031500
 3900 CALL CALLZZ(TLAXIS)                                               M0031600
      CALL TWOARG(QUIDLR,MM)                                            M0031700
      CALL TWOARG(QUIDLR,PROD)                                          M0031800
      CALL ARGCVT(KK)                                                   M0031900
      CALL RLSLIN                                                       M0032000
C                                                                       M0032100
 4000 RETURN                                                            M0032200
C                                                                       M0032300
 4100 ERRPT=1-TOP                                                       M0032400
 4200 CALL ALARM(2052,-ERRPT,8,'PRO028  ')                              M0032500
      GOTO 4000                                                         M0032600
 4300 CALL ALARM(2021,-ERRPT,8,'PRO028  ')                              M0032700
      GOTO 4000                                                         M0032800
 4400 IF(ERRPT.LE.0)ERRPT=1                                             M0032900
      CALL ALARM(2001,-ERRPT,8,'PRO028  ')                              M0033000
      GOTO 4000                                                         M0033100
 4500 ERRPT=ERRPT+1                                                     M0033200
      GOTO 4200                                                         M0033300
 4600 ERRPT=ARGTOP-1                                                    M0033400
      GOTO 4300                                                         M0033500
C                                                                       M0033600
      END                                                               M0033700
**** SOURCE FILE : QABPST.ORG   ***
*
      DOUBLE PRECISION FUNCTION QABPST(P1,P2,P3)                        00000100
C                                                                       00000200
C  PURPOSE: TO COMPUTE THE DISTANCE OF A POINT FROM A SPACE LINE        00000300
C                                                                       00000400
C  ARGUMENTS:                                                           00000500
C            P1    D.P.  1ST POINT OF SPACE LINE                        00000600
C            P2    D.P.  2ND POINT OF SPACE LINE                        00000700
C            P3    D.P.  POINT                                          00000800
C                                                                       00000900
      DOUBLE PRECISION P1,P2,P3,V2,V3,A,B,H,D,ZEM10                     00001000
      DIMENSION P1(3),P2(3),P3(3),V2(3),V3(3),H(3)                      00001100
C                                                                       00001200
      PARAMETER (ZEM10=1.D-10)                                          00001300
C                                                                       00001400
      DO 10 I=1,3                                                       00001500
        V2(I)=P2(I)-P1(I)                                               00001600
        V3(I)=P3(I)-P1(I)                                               00001700
  10  CONTINUE                                                          00001800
C                                                                       00001900
      CALL DOTF(A,V3,V2)                                                00002000
      CALL DOTF(B,V2,V2)                                                00002100
C                                                                       00002200
      IF (B.GT.ZEM10) THEN                                              00002300
        A=A/B                                                           00002400
      ELSE                                                              00002500
C.... IF LINE PIS VERY SHORT ASSUME PERPENDICULAR MEETS LINE AT MIDPOIN 00002600
        A=0.5                                                           00002700
      ENDIF                                                             00002800
C                                                                       00002900
      DO 20 I=1,3                                                       00003000
        H(I)=V3(I)-A*V2(I)                                              00003100
  20  CONTINUE                                                          00003200
C                                                                       00003300
      CALL DOTF(D,H,H)                                                  00003400
C                                                                       00003500
      QABPST=SQRT(D)                                                    00003600
C                                                                       00003700
      END                                                               00003800
**** SOURCE FILE : M0012301.V02   ***
*
      SUBROUTINE REGION(ARG1,ARG2)                                      M0000100
C                                                                       M0000200
C PROCESSES THE REGION/ ... STATEMENT                                   M0000300
C                                                                       M0000400
C       ARG1 : REAL NUMBER OF THE CLDAT-SECTION                         M0000500
C       ARG2 : IN, OUT OR OFF                                           M0000600
C                                                                       M0000700
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000800
C                                                                       M0000900
C                                                                       M0001800
C---     REGION FLAG                                                    M0001900
      INCLUDE 'GLFLGS.INC'                                              M0002000
C                                                                       M0002200
      DOUBLE PRECISION PAT                                              M0002300
      CHARACTER*4 IN,OUT,OFF,TEST                                       M0002400
      INTEGER IPPS,IPAT(2)                                              M0002700
      EQUIVALENCE (PAT,IPAT(1))                                         M0002750
C                                                                       M0002800
      DIMENSION RESULT(6)                                               M0002900
      EQUIVALENCE(RESULT(1),U1),(RESULT(2),V1),(RESULT(3),P)            M0003000
C                                                                       M0003100
C SCULPTURED SURFACES CANONICAL FORM IN BLANK COMMON                    M0003200
      INCLUDE 'BLANKCOM.INC'                                            M0003300
      DIMENSION ARYLDA(2)                                               M0003400
C                                                                       M0003500
C REGION STORAGE                                                        M0003600
      INTEGER MAXREG                                                    M0003640
      PARAMETER (MAXREG=50)                                             M0003650
      DIMENSION IREGIO(4,MAXREG)                                        M0003700
      INTEGER NUMREG,NUMRE1                                             M0003900
C                                                                       M0004000
C SCULPTURED SURFACES INTERMEDIATE STORAGE                              M0004100
      INCLUDE 'SSPAD.INC'                                               M0004200
C                                                                       M0004300
      DIMENSION W(2), VPREV(2), VCURR(2)                                M0004400
C                                                                       M0004500
C COMMON FOR REGIONAL STARTUP AND RETRACT VALUES                        M0004600
C              (1) : START                                              M0004700
C              (2) : AWAY                                               M0004800
C              (3) : BACK                                               M0004900
C              (4) : THRU                                               M0005000
C DIRMOT(3,4): ARRAY FOR MOTDIR, NORMAL OR VECTOR VALUES                M0005100
C              (1,I) : VALUES OF MOTDIR AND/OR NORMAL                   M0005200
C              (2,I)                                                    M0005300
C           OR (1,I) : VALUES OF VECTOR                                 M0005400
C              (2,I)                                                    M0005500
C              (3,I)                                                    M0005600
C GOFEED(4)  : ARRAY FOR MOTION FEEDRAT                                 M0005700
C              (1)   : FEDRAT OF START-MOTION (START AT FIRST POINT)    M0005800
C              (2)   : FEDRAT OF AWAY-MOTION                            M0005900
C              (3)   : FEDRAT OF BACK-MOTION                            M0006000
C              (4)   : FEDRAT OF THRU-MOTION (RETRACT AT LAST POINT)    M0006100
C GLFEED     : VARIABLE FOR NORMAL FEDRAT BEFORE GOMILL OR GOLOFT       M0006200
C IRETRO(4)  : ARRAY FOR START, AWAY, BACK, THRU                        M0006300
C              (1) : START                                              M0006400
C              (2) : AWAY                                               M0006500
C              (3) : BACK                                               M0006600
C              (4) : THRU                                               M0006700
C                    0 : NOT USED                                       M0006800
C                    1 : CONDITION SET                                  M0006900
C IDIRMO(4)  : ARRAY FOR START ON AND END CONDITION                     M0007000
C                    0 : NOT SET                                        M0007100
C                    1 : MOTDIR AND/OR NORMAL                           M0007200
C                    2 : VECTOR                                         M0007300
C ICANIN(4)  : ARRAY FOR THE CANONICAL FORM INDEX OF THE SURFACE        M0007400
C                    0 : NOT SET                                        M0007500
C                    IC: INDEX                                          M0007600
      COMMON/CCLEAR/ DIRMOT(3,4)                                        M0007700
     *              ,GOFEED(4)                                          M0007800
     *              ,GLFEED                                             M0007900
     *              ,REGLDA(2)                                          M0008000
     *              ,IRETRO(4)                                          M0008100
     *              ,IDIRMO(4)                                          M0008200
     *              ,ICANIN(4)                                          M0008300
C                                                                       M0008400
C CONTROL OF TEST-OUTPUT                                                M0008500
      COMMON/SSPRT/SSPRT,SSTEST                                         M0008600
      LOGICAL SSPRT,SSTEST                                              M0008700
C                                                                       M0008710
      CHARACTER*20 BADMSG                                               M0008720
      INTEGER BCDF                                                      M0008730
      LOGICAL FIRST                                                     M0008740
      SAVE FIRST,PAT,IPPS                                               M0008750
C                                                                       M0008760
      DATA IN  /'IN  '/,OUT /'OUT '/,OFF /'OFF '/                       M0008770
      DATA NUMREG/0/, NUMRE1/0/                                         M0008780
      DATA FIRST/.TRUE./                                                M0008790
C                                                                       M0008800
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0008900
C                                                                       M0009000
C.... INITIALIZE CHARACTER ITEMS                                        M0009010
      IF (FIRST) THEN                                                   M0009020
        IPAT(1)=BCDF('CLDA')                                            M0009030
        IPAT(2)=BCDF('TA  ')                                            M0009040
        IPPS=BCDF('PPS ')                                               M0009050
        FIRST=.FALSE.                                                   M0009060
      ENDIF                                                             M0009070
                                                                        M0009080
      CALL HOLFRM(ARG2,TEST,1,4,NWD)                                    M0009090
C                                                                       M0009095
C    SWITCH OFF REGION FLAG IF >REGION/...,OFF<                         M0009100
      IF(TEST.NE.OFF) GOTO 1                                            M0009200
      REGFLG=0                                                          M0009300
      GOTO 999                                                          M0009400
C                                                                       M0009500
C SEARCH FOR ALREADY PROCESSED REGION                                   M0009600
    1 IARG1=ARG1                                                        M0009700
      IF(TEST.EQ.IN) OUTIN=0.D0                                         M0009800
      IF(TEST.EQ.OUT) OUTIN=1.D0                                        M0009900
      IF(NUMREG.EQ.0) GOTO 3                                            M0010000
      INOUT=OUTIN                                                       M0010100
      DO 2 I=1,NUMREG                                                   M0010200
      IF(IREGIO(1,I).NE.IARG1) GOTO 2                                   M0010300
      IF(IREGIO(2,I).NE.INOUT) GOTO 2                                   M0010400
      REGLDA(1)=IREGIO(3,I)                                             M0010500
      REGLDA(2)=IREGIO(4,I)                                             M0010600
      REGFLG=1                                                          M0010700
      GOTO 700                                                          M0010800
    2 CONTINUE                                                          M0010900
C                                                                       M0011000
C FETCH THE NUMBER OF POINTS IN THE ID-AREA OUT OF EXFILE               M0011100
    3 CALL NUMF2(R,PAT,ARG1)                                            M0011200
      NUMP=R                                                            M0011300
C                                                                       M0011400
C COMPUTE RECORD NUMBER OF ASSOCIATED SSURF                             M0011500
      CALL CLDATF(P,ARG1,IPPS,1.D0)                                     M0011600
      NPA=P                                                             M0011700
      NPA=NPA/1000                                                      M0011800
      ARYLDA(1)=NPA                                                     M0011900
C                                                                       M0012000
C GET BLANK COMMON STORAGE INDEX OF SSURF CANONICAL FORM                M0012100
      LDAFLG=7                                                          M0012200
      CALL APT094(LDAFLG,ARYLDA,CANIND)                                 M0012300
C                                                                       M0012400
C GET LENGTH OF SURFACE FROM ORIGINAL CANONICAL FORM                    M0012500
      ARYLDA(2)=CANON(INT(CANIND+1.D0))                                 M0012600
C                                                                       M0012700
C GET STORAGE LOCATION OF SSURF DATA                                    M0012800
      LDAFLG=3                                                          M0012900
      CALL APT094(LDAFLG,ARYLDA,LOCCAN)                                 M0013000
      LOCCAN=LOCCAN-41                                                  M0013100
C                                                                       M0013200
C GET NUMBER OF PATCHES IN U- AND V-DIRECTION                           M0013300
      NUMSPL=SSCAN(LOCCAN+ 9)-1.D0                                      M0013400
      NUMCRS=SSCAN(LOCCAN+10)-1.D0                                      M0013500
C                                                                       M0013600
C FETCH THE U/V VALUES OF THE CLDAT-SECTION, BELONGING TO A PATCH       M0013700
      IUVSC=ISCAN                                                       M0013800
      DO 100 I=1,NUMP                                                   M0013900
C                                                                       M0014000
C  GET U,V,P DATA                                                       M0014100
      CALL ATAPER(RESULT,I,IARG1,9,IEE)                                 M0014200
      IF(IEE.EQ.0)GOTO 4                                                M0014300
C                                                                       M0014400
C  ERROR : REGION DATA CAN NOT BE FETCHED                               M0014500
      CALL ERROR(22806,'REGION  ')                                      M0014600
      GOTO 999                                                          M0014700
    4 NP=P                                                              M0014800
      ITAUS=NP/1000                                                     M0014900
      IF(ITAUS.EQ.NPA) GOTO 5                                           M0015000
C                                                                       M0015100
C ERROR: REGION DATA BELONGS TO MORE THAN ONE SURFACE                   M0015200
      CALL ERROR(22801,'REGION  ')                                      M0015300
      GOTO 999                                                          M0015400
    5 NUMPAT=NP-ITAUS*1000                                              M0015500
C                                                                       M0015600
C TRANSFORM U1/V1 VALUES TO BASIC U/V VALUES                            M0015700
      IU=MOD(NUMPAT-1,NUMCRS)+1                                         M0015800
      IV=(NUMPAT-1)/(NUMCRS)+1                                          M0015900
      U=U1+IU-1                                                         M0016000
      V=V1+IV-1                                                         M0016100
      SCAN(ISCAN+1)=U                                                   M0016200
      SCAN(ISCAN+2)=V                                                   M0016300
C                                                                       M0016400
C NO CHECK AT FIRST POINT                                               M0016500
      IF(I.EQ.1) GOTO 90                                                M0016600
C                                                                       M0016700
C CHECK, CLOSE POINT TO LAST POINT                                      M0016800
      DU=U-SCAN(ISCAN-1)                                                M0016900
      DV=V-SCAN(ISCAN)                                                  M0017000
      IF(DU*DU+DV*DV.LT.1.D-12) GOTO 100                                M0017100
C                                                                       M0017200
C NO CHECK AT 2ND POINT                                                 M0017300
      IF(I.LE.2) GOTO 90                                                M0017400
C                                                                       M0017500
C CHECK, IF LINEAR EXTENSION                                            M0017600
      IF(DABS(DU*(V-SCAN(ISCAN-2))                                      M0017700
     *       -DV*(U-SCAN(ISCAN-3))).GT.1.D-5) GOTO 90                   M0017800
C                                                                       M0017900
C REPLACE PREVIOUS POINT                                                M0018000
      SCAN(ISCAN-1)=U                                                   M0018100
      SCAN(ISCAN  )=V                                                   M0018200
      GOTO 100                                                          M0018300
C                                                                       M0018400
   90 ISCAN=ISCAN+2                                                     M0018500
      IF(ISCAN.GT.NSCNMX) GOTO 992                                      M0018600
  100 CONTINUE                                                          M0018700
C                                                                       M0018800
C CHECK, CLOSE POINT TO FIRST POINT                                     M0018900
      DU=SCAN(IUVSC+1)-SCAN(ISCAN-1)                                    M0019000
      DV=SCAN(IUVSC+2)-SCAN(ISCAN)                                      M0019100
      IF(DU*DU+DV+DV.GE.1.D-12) GOTO 110                                M0019200
      ISCAN=ISCAN-2                                                     M0019300
C                                                                       M0019400
C CHECK, IF LINEAR EXTENSION                                            M0019500
  110 IF(DABS((SCAN(IUVSC+1)-SCAN(ISCAN-1))                             M0019600
     *       *(SCAN(IUVSC+4)-SCAN(ISCAN))                               M0019700
     *       -(SCAN(IUVSC+2)-SCAN(ISCAN))                               M0019800
     *       *(SCAN(IUVSC+3)-SCAN(ISCAN-1)))                            M0019900
     *        .GT.1.D-5) GOTO 120                                       M0020000
      SCAN(IUVSC+1)=SCAN(ISCAN-1)                                       M0020100
      SCAN(IUVSC+2)=SCAN(ISCAN)                                         M0020200
      ISCAN=ISCAN-2                                                     M0020300
C                                                                       M0020400
C RECALCULATE THE NUMBER OF POINTS                                      M0020500
  120 NUMP=(ISCAN-IUVSC)/2                                              M0020600
      IF(NUMP.GE.3) GOTO 130                                            M0020700
C                                                                       M0020800
C ERROR: LESS THAN 3 POINTS AS REGION BOUNDARY                          M0020900
      CALL ERROR(22802,'REGION  ')                                      M0021000
      GOTO 999                                                          M0021100
  130 CONTINUE                                                          M0021200
C                                                                       M0021300
C TEST OF RIGHT (CLOCWISE) OR LEFT SENSE OF CONTOUR                     M0021400
C                                                                       M0021500
C  DIRECTION SENSE VECTOR                                               M0021600
      W(1)=SCAN(IUVSC+3)-SCAN(IUVSC+1)                                  M0021700
      W(2)=SCAN(IUVSC+4)-SCAN(IUVSC+2)                                  M0021800
C                                                                       M0021900
C NUMBER OF 90 DEGREE TURNS                                             M0022000
      IQ=0                                                              M0022100
C                                                                       M0022200
C PRESET OF PREVIOUS CENTER DIRECTION                                   M0022300
      VPREV(1)=W(1)                                                     M0022400
      VPREV(2)=W(2)                                                     M0022500
C                                                                       M0022600
C START-INDEX                                                           M0022700
      IA=IUVSC+2                                                        M0022800
      NUMP1=NUMP+1                                                      M0022900
C                                                                       M0023000
C SENSE LOOP                                                            M0023100
      DO 600 I=2,NUMP1                                                  M0023200
      IA1=IA+2                                                          M0023300
      IF(I.EQ.NUMP) IA1=IUVSC                                           M0023400
C                                                                       M0023500
C CURRENT CONTOUR DIRECTION                                             M0023600
      VCURR(1)=SCAN(IA1+1)-SCAN(IA+1)                                   M0023700
      VCURR(2)=SCAN(IA1+2)-SCAN(IA+2)                                   M0023800
C                                                                       M0023900
C IS THE DIRECTION SENSE VECTOR TO BE CHANGED                           M0024000
      IF(W(1)*VCURR(1)+W(2)*VCURR(2).GT.0.D0) GOTO 610                  M0024100
C                                                                       M0024200
C CROSS PRUDUCT BETWEEN SENSE VECTOR AND CONTOUR DIRECTION              M0024300
      WCV=W(1)*VCURR(2)-W(2)*VCURR(1)                                   M0024400
C                                                                       M0024500
C LEFT/RIGHT CORNER                                                     M0024600
      IF(VPREV(1)*VCURR(2)-VPREV(2)*VCURR(1).GT.0.D0) GOTO 605          M0024700
C                                                                       M0024800
C CORNER TO RIGHT                                                       M0024900
      IF(WCV.GE.0.D0) GOTO 603                                          M0025000
      IQ=IQ+2                                                           M0025100
      W(1)=-W(1)                                                        M0025200
      W(2)=-W(2)                                                        M0025300
      GOTO 610                                                          M0025400
C                                                                       M0025500
  603 IQ=IQ+1                                                           M0025600
      WW=W(1)                                                           M0025700
      W(1)=W(2)                                                         M0025800
      W(2)=-WW                                                          M0025900
      GOTO 610                                                          M0026000
C                                                                       M0026100
C CORNER TO LEFT                                                        M0026200
  605 IF(WCV.LE.0.D0) GOTO 608                                          M0026300
      IQ=IQ-2                                                           M0026400
      W(1)=-W(1)                                                        M0026500
      W(2)=-W(2)                                                        M0026600
      GOTO 610                                                          M0026700
C                                                                       M0026800
  608 IQ=IQ-1                                                           M0026900
      WW=W(1)                                                           M0027000
      W(1)=-W(2)                                                        M0027100
      W(2)=WW                                                           M0027200
      GOTO 610                                                          M0027300
C                                                                       M0027400
  610 IA=IA+2                                                           M0027500
      IF(I.EQ.NUMP) IA=IUVSC                                            M0027600
      VPREV(1)=VCURR(1)                                                 M0027700
      VPREV(2)=VCURR(2)                                                 M0027800
  600 CONTINUE                                                          M0027900
      IF(IQ.NE.0.OR.IABS(IQ).LE.4) GOTO 140                             M0028000
C                                                                       M0028100
C ERROR: REGION BOUNDARY IS INCORRECT                                   M0028200
      CALL ERROR(22803,'REGION  ')                                      M0028300
      GOTO 999                                                          M0028400
C                                                                       M0028500
C RESERVE REGION DATA SPACE                                             M0028600
  140 LDAFLG=5                                                          M0028700
      REGLDA(1)=0.D0                                                    M0028800
      REGLDA(2)=8+4*NUMP                                                M0028900
      CALL APT094(LDAFLG,REGLDA,SSCAN(1))                               M0029000
C                                                                       M0029100
C PUT REGION-VALUES INTO SSCAN (BLANK COMMON)                           M0029200
      J=1                                                               M0029300
      SSCAN(J)=NP                                                       M0029400
      SSCAN(J+1)=CANIND                                                 M0029500
      SSCAN(J+2)=NUMP                                                   M0029600
      SSCAN(J+3)=OUTIN                                                  M0029700
      J=J+3                                                             M0029800
C                                                                       M0029900
C FIND THE MIN/MAX-VALUES OF U/V                                        M0030000
      UMIN=SCAN(IUVSC+1)                                                M0030100
      UMAX=SCAN(IUVSC+1)                                                M0030200
      VMIN=SCAN(IUVSC+2)                                                M0030300
      VMAX=SCAN(IUVSC+2)                                                M0030400
C                                                                       M0030500
      IA=IUVSC+2                                                        M0030600
      IE=ISCAN-2                                                        M0030700
      DO 800 I=IA,IE,2                                                  M0030800
      UMIN=DMIN1(SCAN(I+1),UMIN)                                        M0030900
      UMAX=DMAX1(SCAN(I+1),UMAX)                                        M0031000
      VMIN=DMIN1(SCAN(I+2),VMIN)                                        M0031100
      VMAX=DMAX1(SCAN(I+2),VMAX)                                        M0031200
  800 CONTINUE                                                          M0031300
C                                                                       M0031400
C PUT THE MIN/MAX-VALUES INTO SSCAN                                     M0031500
      SSCAN(J+1)=UMIN                                                   M0031600
      SSCAN(J+2)=UMAX                                                   M0031700
      SSCAN(J+3)=VMIN                                                   M0031800
      SSCAN(J+4)=VMAX                                                   M0031900
      J=J+4                                                             M0032000
C                                                                       M0032100
C PUT THE U/V-VALUES AND DISTANCES INTO SSCAN ( IN NORMAL ORDER)        M0032200
      IF(IQ.GT.0.AND.OUTIN.EQ.1.D0.OR.                                  M0032300
     *   IQ.LT.0.AND.OUTIN.EQ.0.D0) GOTO 810                            M0032400
      DO 801 I=IUVSC,IE,2                                               M0032500
      I1=I+2                                                            M0032600
      SSCAN(J+1)=SCAN(I+1)                                              M0032700
      SSCAN(J+2)=SCAN(I+2)                                              M0032800
      IF(I.EQ.IE)I1=IUVSC                                               M0032900
      SSCAN(J+3)=SCAN(I1+1)-SCAN(I+1)                                   M0033000
      SSCAN(J+4)=SCAN(I1+2)-SCAN(I+2)                                   M0033100
      J=J+4                                                             M0033200
  801 CONTINUE                                                          M0033300
      NUMD=J                                                            M0033400
      GOTO 820                                                          M0033500
C                                                                       M0033600
C PUT THE U/V-VALUES AND DISTANCES INTO SSCAN (REVERSE ORDER)           M0033700
  810 J=J+(NUMP-1)*4                                                    M0033800
      DO 811 I=IUVSC,IE,2                                               M0033900
      I1=I-2                                                            M0034000
      SSCAN(J+1)=SCAN(I+1)                                              M0034100
      SSCAN(J+2)=SCAN(I+2)                                              M0034200
      IF(I.EQ.IUVSC)I1=IE                                               M0034300
      SSCAN(J+3)=SCAN(I1+1)-SCAN(I+1)                                   M0034400
      SSCAN(J+4)=SCAN(I1+2)-SCAN(I+2)                                   M0034500
      J=J-4                                                             M0034600
  811 CONTINUE                                                          M0034700
      NUMD=J+(NUMP+1)*4                                                 M0034800
C                                                                       M0034900
C TEST OF SELF-INTERSECTION OF REGION BOUNDARY                          M0035000
  820 IF(NUMP.EQ.3) GOTO 920                                            M0035100
      NUMPM2=NUMP-2                                                     M0035200
      DO 900 I=1,NUMPM2                                                 M0035300
C                                                                       M0035400
C PREPARE INTERSECTION TEST                                             M0035500
      CALL SETVER(SSCAN(5+I*4))                                         M0035600
C                                                                       M0035700
C LOOP INDICES FOR INNNER LOOP                                          M0035800
      J1=I+2                                                            M0035900
      J2=NUMP                                                           M0036000
      IF(I.EQ.1) J2=NUMP-1                                              M0036100
C                                                                       M0036200
C INNER LOOP                                                            M0036300
      DO 900 J=J1,J2                                                    M0036400
      CALL GETVER(SSCAN(5+J*4),RESULT,IRES)                             M0036500
      IF(IRES.EQ.0) GOTO 900                                            M0036600
C                                                                       M0036700
C ERROR: REGION BOUNDARY CONTAINS INTERSECTIONS                         M0036800
      CALL ERROR(22804,'REGION  ')                                      M0036900
      GOTO 999                                                          M0037000
  900 CONTINUE                                                          M0037100
  920 CONTINUE                                                          M0037200
C                                                                       M0037300
C WRITE ALL REGION-DATA TO LDA                                          M0037400
      LDAFLG=1                                                          M0037500
      REGLDA(1)=0.D0                                                    M0037600
      REGLDA(2)=NUMD                                                    M0037700
      CALL APT094(LDAFLG,REGLDA,SSCAN(1))                               M0037800
C                                                                       M0037900
C COMPUTE THE REGION STORAGE INDEX AND STORE THE REGION                 M0038000
      NUMRE1=NUMRE1+1                                                   M0038100
      IF(NUMRE1.GT.MAXREG) NUMRE1=1                                     M0038200
      IREGIO(1,NUMRE1)=IARG1                                            M0038300
      IREGIO(2,NUMRE1)=OUTIN                                            M0038400
      IREGIO(3,NUMRE1)=REGLDA(1)                                        M0038500
      IREGIO(4,NUMRE1)=REGLDA(2)                                        M0038600
C                                                                       M0038700
C INCREASE NUMBER OF STORED REGIONS                                     M0038800
      IF(NUMREG.LT.MAXREG) NUMREG=NUMREG+1                              M0038900
      REGFLG=1                                                          M0039000
  700 CONTINUE                                                          M0039100
C                                                                       M0039200
C TEST-OUTPUT, IF PRINT/SSTEST,ON                                       M0039300
      IF(.NOT.SSTEST) GOTO 999                                          M0039400
      CALL RECORD(NSEQ)                                                 M0039500
      LDAFLG=3                                                          M0039600
      CALL APT094(LDAFLG,REGLDA,J11)                                    M0039700
      J11=J11-41                                                        M0039800
      J111=J11+1                                                        M0039900
      J12=J11+8                                                         M0040000
      BADMSG=' REGION DATA:'                                            M0040100
      CALL CPRINT(BADMSG)                                               M0040150
      CALL BAD(-1,0,'ISN ',NSEQ)                                        M0040200
C                                                                       M0040300
      CALL BAD( 1,1,'REG1',REGLDA(1))                                   M0040400
      CALL BAD( 1,1,'REG2',REGLDA(2))                                   M0040500
      CALL BAD(-1,0,'J11 ',J11)                                         M0040600
      DO 807 I1=J111,J12,8                                              M0040700
      CALL BAD( 1,1,'S  1',SSCAN(I1))                                   M0040800
      CALL BAD( 1,1,'S  2',SSCAN(I1+1))                                 M0040900
      CALL BAD( 1,1,'S  3',SSCAN(I1+2))                                 M0041000
      CALL BAD(-1,1,'S  4',SSCAN(I1+3))                                 M0041100
      CALL BAD( 1,1,'S  5',SSCAN(I1+4))                                 M0041200
      CALL BAD( 1,1,'S  6',SSCAN(I1+5))                                 M0041300
      CALL BAD( 1,1,'S  7',SSCAN(I1+6))                                 M0041400
  807 CALL BAD(-1,1,'S  8',SSCAN(I1+7))                                 M0041500
      J13=J12+1                                                         M0041600
      J14=SSCAN(J11+3)*4+J13-1                                          M0041700
      DO 808 I=J13,J14,4                                                M0041800
      CALL BAD( 1,1,'    ',SSCAN(I))                                    M0041900
      CALL BAD( 1,1,'    ',SSCAN(I+1))                                  M0042000
      CALL BAD( 1,1,'    ',SSCAN(I+2))                                  M0042100
      CALL BAD( 1,1,'    ',SSCAN(I+3))                                  M0042110
  808 CALL BAD(-1,1,'    ',0)                                           M0042200
      GOTO 999                                                          M0042300
C                                                                       M0042400
C ERROR: TOO MANY REGION POINTS TO PROCESS                              M0042500
  992 CALL ERROR(22805,'REGION  ')                                      M0042600
C                                                                       M0042700
  999 RETURN                                                            M0042800
      END                                                               M0042900
**** SOURCE FILE : M0012349.V02   ***
*
      SUBROUTINE TLCONV                                                 M0000100
C                                                                       M0000200
C ROUTINE WILL SET AND CONVERT TOOLDATA OF THE CUTTER                   M0000300
C                                                                       M0000400
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000500
C                                                                       M0000600
C  CONTROL OF TEST-OUTPUT                                               M0000700
      COMMON/SSPRT/SSPRT,SSTEST                                         M0000800
      LOGICAL SSPRT,SSTEST                                              M0000900
C                                                                       M0001000
      INCLUDE 'GLFLGS.INC'                                              M0001800
C                                                                       M0001900
      INCLUDE 'FXCOR.INC'                                               M0002000
C                                                                       M0002100
C  COMMON FOR  >PLOTFT/GOLOFT<                                          M0003300
C                                                                       M0003400
C                                                                       M0003800
C  VALUES FOR  >PLOTFT/GOLOFT<                                          M0003900
      INTEGER IPLGO(26)                                                 M0004000
C                                                                       M0004100
C  USED CUTTER SEGMENT                                                  M0004200
      INTEGER JCSEG                                                     M0004300
C                                                                       M0004400
C  NUMBER OF VALID CUTTER SEGMENTS                                      M0004500
      INTEGER NCSEG                                                     M0004600
C                                                                       M0004700
C  CUTTER SEGMENT IN TLLDAT ARRAYS                                      M0004800
      INTEGER ICSEG(10)                                                 M0004900
C                                                                       M0005000
C  NATURE OF SEGMENT                                                    M0005100
      INTEGER NLIOCI(10)                                                M0005200
C                                                                       M0005300
C  COMPONENTS OF SEGMENT AND UNIT NORMAL POINTING INTO THE CUTTER       M0005400
      DOUBLE PRECISION COSAL(10)                                        M0005500
      DOUBLE PRECISION SINAL(10)                                        M0005600
C                                                                       M0005700
C  DISTANCE PARALLEL TO THE CUTTER AXIS                                 M0005800
      DOUBLE PRECISION CUTY(10)                                         M0005900
C                                                                       M0006000
C  DISTANCE TO THE CUTTER AXIS                                          M0006100
      DOUBLE PRECISION CUTX(10)                                         M0006200
C                                                                       M0006300
C  ELEMENT LENGTH                                                       M0006400
      DOUBLE PRECISION CUTL(10)                                         M0006500
C  VECTOR COMPONENTS OF THE TOOL AXIS VECTOR                            M0006510
      DOUBLE PRECISION VTA(3)                                           M0006520
C                                                                       M0006530
      COMMON/PLGOL/IPLGO,JCSEG,NCSEG,ICSEG,NLIOCI,                      M0006540
     *             COSAL,SINAL,                                         M0006550
     *             CUTY,CUTX,CUTL,VTA                                   M0006560
C                                                                       M0006570
      CHARACTER*12 BADMSG                                               M0006580
C                                                                       M0006600
C AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA M0006700
C                                                                       M0006800
C  THE FOLLOWING DATA ARE SET, IF CUTDAT(1).GE. 0.001:                  M0006900
      IF(CUTDAT(1).LT.1.D-3) GOTO 999                                   M0007000
      NCSEG=0                                                           M0007050
(uafhcx) 17% 