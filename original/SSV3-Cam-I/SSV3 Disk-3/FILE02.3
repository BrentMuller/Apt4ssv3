cat afile02.3
      DATA E(1153),E(1154),E(1155),E(1156)/'HE E','ND O','F TH','E DE'/ 00038400
      DATA E(1157),E(1158),E(1159),E(1160)/'FINI','TION','    ','MATR'/ 00038500
      DATA E(1161),E(1162),E(1163),E(1164)/'IX D','EFIN','ITIO','N EX'/ 00038600
      DATA E(1165),E(1166),E(1167),E(1168)/'PECT','ED  ','POIN','T DE'/ 00038700
      DATA E(1169),E(1170),E(1171),E(1172)/'FINI','TION',' EXP','ECTE'/ 00038800
      DATA E(1173),E(1174),E(1175),E(1176)/'D   ','VECT','OR D','EFIN'/ 00038900
      DATA E(1177),E(1178),E(1179),E(1180)/'ITIO','N EX','PECT','ED  '/ 00039000
      DATA E(1181),E(1182),E(1183),E(1184)/'SCAL','AR E','XPEC','TED '/ 00039100
      DATA E(1185),E(1186),E(1187),E(1188)/'POIN','T DE','FINI','TION'/ 00039200
      DATA E(1189),E(1190),E(1191),E(1192)/' NOT',' PER','MITT','ED I'/ 00039300
      DATA E(1193),E(1194),E(1195),E(1196)/'N TH','IS P','OSIT','ION '/ 00039400
      DATA E(1197),E(1198),E(1199),E(1200)/'VECT','OR D','EFIN','ITIO'/ 00039500
      DATA E(1201),E(1202),E(1203),E(1204)/'N NO','T PE','RMIT','TED '/ 00039600
      DATA E(1205),E(1206),E(1207),E(1208)/'IN T','HIS ','POSI','TION'/ 00039700
      DATA E(1209),E(1210),E(1211),E(1212)/'    ','SCAL','AR N','OT P'/ 00039800
      DATA E(1213),E(1214),E(1215),E(1216)/'ERMI','TTED',' IN ','THIS'/ 00039900
      DATA E(1217),E(1218),E(1219),E(1220)/' POS','ITIO','N   ','VARI'/ 00040000
      DATA E(1221),E(1222),E(1223),E(1224)/'OUS ','NUMB','ERS ','OF P'/ 00040100
      DATA E(1225),E(1226),E(1227),E(1228)/'OINT','S OR',' LES','S TH'/ 00040200
      DATA E(1229),E(1230),E(1231),E(1232)/'AN T','WO P','OINT','S IN'/ 00040300
      DATA E(1233),E(1234),E(1235),E(1236)/' THE',' SPL','INES','STK '/ 00040400
      DATA E(1237),E(1238),E(1239),E(1240)/'TABL','E FI','LLED','. SU'/ 00040500
      DATA E(1241),E(1242),E(1243),E(1244)/'RFAC','E UN','DEFI','NED '/ 00040600
      DATA E(1245),E(1246),E(1247),E(1248)/'TRIP','LE N','ESTE','D SU'/ 00040700
      DATA E(1249),E(1250),E(1251),E(1252)/'RFAC','E DE','FINI','TION'/ 00040800
      DATA E(1253),E(1254),E(1255),E(1256)/'    ','SSUR','F DE','FINI'/ 00040900
      DATA E(1257),E(1258),E(1259),E(1260)/'TION',' EXP','ECTE','D   '/ 00041000
      DATA E(1261),E(1262),E(1263),E(1264)/'SCUR','V DE','FINI','TION'/ 00041100
      DATA E(1265),E(1266),E(1267),E(1268)/' EXP','ECTE','D   ','SSUR'/ 00041200
      DATA E(1269),E(1270),E(1271),E(1272)/'F DE','FINI','TION',' NOT'/ 00041300
      DATA E(1273),E(1274),E(1275),E(1276)/' PER','MITT','ED I','N TH'/ 00041400
      DATA E(1277),E(1278),E(1279),E(1280)/'IS P','OSIT','ION ','SCUR'/ 00041500
      DATA E(1281),E(1282),E(1283),E(1284)/'V DE','FINI','TION',' NOT'/ 00041600
      DATA E(1285),E(1286),E(1287),E(1288)/' PER','MITT','ED I','N TH'/ 00041700
      DATA E(1289),E(1290),E(1291),E(1292)/'IS P','OSIT','ION ','SURF'/ 00041800
      DATA E(1293),E(1294),E(1295),E(1296)/'ACE ','DEFI','NITI','ON A'/ 00041900
      DATA E(1297),E(1298),E(1299),E(1300)/'ND I','TS S','IZE ','IS N'/ 00042000
      DATA E(1301),E(1302),E(1303),E(1304)/'OT T','O BE',' FOU','ND  '/ 00042100
      DATA E(1305),E(1306),E(1307),E(1308)/'FORM','AT U','NKNO','WN O'/ 00042200
      DATA E(1309),E(1310),E(1311),E(1312)/'R SO','ME P','ARAM','ETER'/ 00042300
      DATA E(1313),E(1314),E(1315),E(1316)/'S AR','E UN','DEFI','NED '/ 00042400
      DATA E(1317),E(1318),E(1319),E(1320)/'ILLE','GAL ','ARGU','MENT'/ 00042500
      DATA E(1321),E(1322),E(1323),E(1324)/' IN ','POST','PROC','ESSO'/ 00042600
      DATA E(1325),E(1326),E(1327),E(1328)/'R ST','ATEM','ENT ','ILLE'/ 00042700
      DATA E(1329),E(1330),E(1331),E(1332)/'GAL ','GODL','TA S','TATE'/ 00042800
      DATA E(1333),E(1334),E(1335),E(1336)/'MENT','    ','NO D','RIVE'/ 00042900
      DATA E(1337),E(1338),E(1339),E(1340)/' SUR','FACE',' NAM','ED A'/ 00043000
      DATA E(1341),E(1342),E(1343),E(1344)/'FTER',' GO/',', EN','TERI'/ 00043100
      DATA E(1345),E(1346),E(1347),E(1348)/'NG R','ESTA','RT  ','ITEM'/ 00043200
      DATA E(1349),E(1350),E(1351),E(1352)/' NOT',' FED','RAT,',' TO,'/ 00043300
      DATA E(1353),E(1354),E(1355),E(1356)/' ON,',' PAS','T OR',' SUR'/ 00043400
      DATA E(1357),E(1358),E(1359),E(1360)/'FACE',' FOU','ND A','FTER'/ 00043500
      DATA E(1361),E(1362),E(1363),E(1364)/' GO/','. EN','TERI','NG R'/ 00043600
      DATA E(1365),E(1366),E(1367),E(1368)/'ESTA','RT  ','ILLE','GAL '/ 00043700
      DATA E(1369),E(1370),E(1371),E(1372)/'PERM','ANEN','T ID','ENTI'/ 00043800
      DATA E(1373),E(1374),E(1375),E(1376)/'FIER',' FOL','LOWS',' GO/'/ 00043900
      DATA E(1377),E(1378),E(1379),E(1380)/'. EN','TERI','NG R','ESTA'/ 00044000
      DATA E(1381),E(1382),E(1383),E(1384)/'RT  ','A LO','GICA','LLY '/ 00044100
      DATA E(1385),E(1386),E(1387),E(1388)/'COMP','LETE',' GO/',' COM'/ 00044200
      DATA E(1389),E(1390),E(1391),E(1392)/'MAND',' WAS',' FOL','LOWE'/ 00044300
      DATA E(1393),E(1394),E(1395),E(1396)/'D BY',' OTH','ER D','ATA.'/ 00044400
      DATA E(1397),E(1398),E(1399),E(1400)/' SUR','PLUS',' CHE','CK S'/ 00044500
      DATA E(1401),E(1402),E(1403),E(1404)/'URFA','CES ','IGNO','RED '/ 00044600
      DATA E(1405),E(1406),E(1407),E(1408)/'MORE',' THA','N ON','E CH'/ 00044700
      DATA E(1409),E(1410),E(1411),E(1412)/'ECK ','SURF','ACE ','FOUN'/ 00044800
      DATA E(1413),E(1414),E(1415),E(1416)/'D AF','TER ','A GO',' COM'/ 00044900
      DATA E(1417),E(1418),E(1419),E(1420)/'MAND','. SU','RPLU','S CH'/ 00045000
      DATA E(1421),E(1422),E(1423),E(1424)/'ECK ','SURF','ACES',' IGN'/ 00045100
      DATA E(1425),E(1426),E(1427),E(1428)/'ORED','    ','ILLE','GAL '/ 00045200
      DATA E(1429),E(1430),E(1431),E(1432)/'LANG','UAGE',' USA','GE E'/ 00045300
      DATA E(1433),E(1434),E(1435),E(1436)/'NCOU','NTER','ED B','EFOR'/ 00045400
      DATA E(1437),E(1438),E(1439),E(1440)/'E DR','IVE ','SURF','ACE.'/ 00045500
      DATA E(1441),E(1442),E(1443),E(1444)/'ENTE','RING',' RES','TART'/ 00045600
      DATA E(1445),E(1446),E(1447),E(1448)/'    ','FIRS','T NO','T DR'/ 00045700
      DATA E(1449),E(1450),E(1451),E(1452)/'IVE ','SURF','ACE.',' DS '/ 00045800
      DATA E(1453),E(1454),E(1455),E(1456)/'IS A','SSUM','ED  ','STAT'/ 00045900
      DATA E(1457),E(1458),E(1459),E(1460)/'EMEN','T WI','TH W','RONG'/ 00046000
      DATA E(1461),E(1462),E(1463),E(1464)/' ARG','UMEN','TS: ','TOO '/ 00046100
      DATA E(1465),E(1466),E(1467),E(1468)/'LONG',' OR ','ILLE','GAL '/ 00046200
      DATA E(1469),E(1470),E(1471),E(1472)/'GEOM','ETRY','    ','PARA'/ 00046300
      DATA E(1473),E(1474),E(1475),E(1476)/'METE','R LI','ST T','OO L'/ 00046400
      DATA E(1477),E(1478),E(1479),E(1480)/'ONG ','ILLE','GAL ','ARGU'/ 00046500
      DATA E(1481),E(1482),E(1483),E(1484)/'MENT','    ','APPR','OPRI'/ 00046600
      DATA E(1485),E(1486),E(1487),E(1488)/'ATE ','SURF','ACE ','IS N'/ 00046700
      DATA E(1489),E(1490),E(1491),E(1492)/'OT N','AMED',' AFT','ER P'/ 00046800
      DATA E(1493),E(1494),E(1495),E(1496)/'SIS.','COMM','AND ','IGNO'/ 00046900
      DATA E(1497),E(1498),E(1499),E(1500)/'RED.','CONT','INUI','NG  '/ 00047000
      DATA E(1501),E(1502),E(1503),E(1504)/'INPR','OPER',' FOR','MAT '/ 00047100
      DATA E(1505),E(1506),E(1507),E(1508)/'FOR ','JUMP','TO. ','STAT'/ 00047200
      DATA E(1509),E(1510),E(1511),E(1512)/'EMEN','T IG','NORE','D   '/ 00047300
      DATA E(1513),E(1514),E(1515),E(1516)/'SYN ','OR R','ESER','V ST'/ 00047400
      DATA E(1517),E(1518),E(1519),E(1520)/'ATEM','ENT ','HAS ','NO A'/ 00047500
      DATA E(1521),E(1522),E(1523),E(1524)/'RGUM','ENTS',' OR ','AN O'/ 00047600
      DATA E(1525),E(1526),E(1527),E(1528)/'DD N','UMBE','R OF',' ARG'/ 00047700
      DATA E(1529),E(1530),E(1531),E(1532)/'UMEN','TS  ','SYN ','STAT'/ 00047800
      DATA E(1533),E(1534),E(1535),E(1536)/'EMEN','T HA','S A ','VALU'/ 00047900
      DATA E(1537),E(1538),E(1539),E(1540)/'E OR',' AN ','ILLE','GAL '/ 00048000
      DATA E(1541),E(1542),E(1543),E(1544)/'WORD','    ','NO D','RIVE'/ 00048100
      DATA E(1545),E(1546),E(1547),E(1548)/' SUR','FACE',' FOU','ND P'/ 00048200
      DATA E(1549),E(1550),E(1551),E(1552)/'RECE','DING',' OTH','ERWI'/ 00048300
      DATA E(1553),E(1554),E(1555),E(1556)/'SE A','CCEP','TABL','E FO'/ 00048400
      DATA E(1557),E(1558),E(1559),E(1560)/'RMAT','S. E','NTER','ING '/ 00048500
      DATA E(1561),E(1562),E(1563),E(1564)/'REST','ART ','ARGU','MENT'/ 00048600
      DATA E(1565),E(1566),E(1567),E(1568)/' MOD','E IS',' WRO','NG  '/ 00048700
      DATA E(1569),E(1570),E(1571),E(1572)/'AN A','CCEP','TABL','E CH'/ 00048800
      DATA E(1573),E(1574),E(1575),E(1576)/'ECK ','SURF','ACE ','IS N'/ 00048900
      DATA E(1577),E(1578),E(1579),E(1580)/'OT N','AMED','    ','IDEN'/ 00049000
      DATA E(1581),E(1582),E(1583),E(1584)/'TIFI','ER N','OT P','RECE'/ 00049100
      DATA E(1585),E(1586),E(1587),E(1588)/'DED ','BY A','CCEP','TABL'/ 00049200
      DATA E(1589),E(1590),E(1591),E(1592)/'E SU','RFAC','E. E','NTER'/ 00049300
      DATA E(1593),E(1594),E(1595),E(1596)/'ING ','REST','ART ','THE '/ 00049400
      DATA E(1597),E(1598),E(1599),E(1600)/'WORD',' INT','OF W','AS N'/ 00049500
      DATA E(1601),E(1602),E(1603),E(1604)/'OT P','RECE','DED ','BY A'/ 00049600
      DATA E(1605),E(1606),E(1607),E(1608)/' NUM','BER.','FIRS','T IN'/ 00049700
      DATA E(1609),E(1610),E(1611),E(1612)/'TERS','ECTI','ON A','SSUM'/ 00049800
      DATA E(1613),E(1614),E(1615),E(1616)/'ED  ','MACR','O VA','RIAB'/ 00049900
      DATA E(1617),E(1618),E(1619),E(1620)/'LE N','OT F','UNCT','ION '/ 00050000
      DATA E(1621),E(1622),E(1623),E(1624)/'TOO ','MANY',' DIM','ENSI'/ 00050100
      DATA E(1625),E(1626),E(1627),E(1628)/'ONED',' VAR','IABL','ES I'/ 00050200
      DATA E(1629),E(1630),E(1631),E(1632)/'N PA','RT P','ROGR','AM. '/ 00050300
      DATA E(1633),E(1634),E(1635),E(1636)/'RANG','E TA','BLE ','FILL'/ 00050400
      DATA E(1637),E(1638),E(1639),E(1640)/'ED  ','INCO','RREC','T FO'/ 00050500
      DATA E(1641),E(1642),E(1643),E(1644)/'RMAT',' FOR',' RES','ERV '/ 00050600
      DATA E(1645),E(1646),E(1647),E(1648)/'STAT','EMEN','T. M','UST '/ 00050700
      DATA E(1649),E(1650),E(1651),E(1652)/'BE S','YMBO','L,NU','MBER'/ 00050800
      DATA E(1653),E(1654),E(1655),E(1656)/'    ','NO A','RGUM','ENTS'/ 00050900
      DATA E(1657),E(1658),E(1659),E(1660)/' DES','IRED','. AR','GUME'/ 00051000
      DATA E(1661),E(1662),E(1663),E(1664)/'NTS ','IGNO','RED ','ARGU'/ 00051100
      DATA E(1665),E(1666),E(1667),E(1668)/'MENT',' FOL','LOWI','NG Z'/ 00051200
      DATA E(1669),E(1670),E(1671),E(1672)/'SURF','/ IS',' NOT',' A P'/ 00051300
      DATA E(1673),E(1674),E(1675),E(1676)/'LANE','    ','NO A','RGUM'/ 00051400
      DATA E(1677),E(1678),E(1679),E(1680)/'ENTS',' FOL','LOW ','PRIN'/ 00051500
      DATA E(1681),E(1682),E(1683),E(1684)/'T/,P','UNCH','/,CF','SAVE'/ 00051600
      DATA E(1685),E(1686),E(1687),E(1688)/'/,CO','NTRL','/ OR',' PPO'/ 00051700
      DATA E(1689),E(1690),E(1691),E(1692)/'PTN/','. ST','ATEM','ENT '/ 00051800
      DATA E(1693),E(1694),E(1695),E(1696)/'IGNO','RED ','INVA','LID '/ 00051900
      DATA E(1697),E(1698),E(1699),E(1700)/'ARGU','MENT',' FOL','LOWS'/ 00052000
      DATA E(1701),E(1702),E(1703),E(1704)/' PRI','NT/,',' PUN','CH/ '/ 00052100
      DATA E(1705),E(1706),E(1707),E(1708)/'OR C','FSAV','E/.A','RGUM'/ 00052200
      DATA E(1709),E(1710),E(1711),E(1712)/'ENT ','IGNO','RED ','INVA'/ 00052300
      DATA E(1713),E(1714),E(1715),E(1716)/'LID ','NUMB','ER O','F AR'/ 00052400
      DATA E(1717),E(1718),E(1719),E(1720)/'GUME','NTS ','IN C','ANON'/ 00052500
      DATA E(1721),E(1722),E(1723),E(1724)/' DEF','INIT','ION ','INVA'/ 00052600
      DATA E(1725),E(1726),E(1727),E(1728)/'LID ','ARGU','MENT',' IN '/ 00052700
      DATA E(1729),E(1730),E(1731),E(1732)/'CANO','N DE','FINI','TION'/ 00052800
      DATA E(1733),E(1734),E(1735),E(1736)/'    ','INVA','LID ','POCK'/ 00052900
      DATA E(1737),E(1738),E(1739),E(1740)/'ET F','ORMA','T   ','A SY'/ 00053000
      DATA E(1741),E(1742),E(1743),E(1744)/'NONY','M AR','GUME','NT P'/ 00053100
      DATA E(1745),E(1746),E(1747),E(1748)/'AIR ','CONT','AINS',' NO '/ 00053200
      DATA E(1749),E(1750),E(1751),E(1752)/'VARI','ABLE',' OR ','TWO '/ 00053300
      DATA E(1753),E(1754),E(1755),E(1756)/'VARI','ABLE','S   ','INPR'/ 00053400
      DATA E(1757),E(1758),E(1759),E(1760)/'OPER',' ARG','UMEN','T IN'/ 00053500
      DATA E(1761),E(1762),E(1763),E(1764)/' GOT','O/PA','TERN',' STA'/ 00053600
      DATA E(1765),E(1766),E(1767),E(1768)/'TEME','NT  ','BOTH',' OMI'/ 00053700
      DATA E(1769),E(1770),E(1771),E(1772)/'T AN','D RE','TAIN',' SPE'/ 00053800
      DATA E(1773),E(1774),E(1775),E(1776)/'CIFI','ED I','N GO','TO/P'/ 00053900
      DATA E(1777),E(1778),E(1779),E(1780)/'ATER','N ST','ATEM','ENT '/ 00054000
      DATA E(1781),E(1782),E(1783),E(1784)/'TOO ','MANY',' ARG','UMEN'/ 00054100
      DATA E(1785),E(1786),E(1787),E(1788)/'TS S','PECI','FIED',' IN '/ 00054200
      DATA E(1789),E(1790),E(1791),E(1792)/'GOTO','/PAT','ERN ','STAT'/ 00054300
      DATA E(1793),E(1794),E(1795),E(1796)/'EMEN','T. A','RGST','K TA'/ 00054400
      DATA E(1797),E(1798),E(1799),E(1800)/'BLE ','OVER','FLOW','    '/ 00054500
      DATA E(1801),E(1802),E(1803),E(1804)/'ILLE','GAL ','ARGU','MENT'/ 00054600
      DATA E(1805),E(1806),E(1807),E(1808)/' OR ','UNEV','EN N','UMBE'/ 00054700
      DATA E(1809),E(1810),E(1811),E(1812)/'R OF',' ARG','UMEN','TS I'/ 00054800
      DATA E(1813),E(1814),E(1815),E(1816)/'N PP','OPTN',' STA','TEME'/ 00054900
      DATA E(1817),E(1818),E(1819),E(1820)/'NT  ','TOO ','MANY',' ARG'/ 00055000
      DATA E(1821),E(1822),E(1823),E(1824)/'UMEN','TS I','N IN','CR L'/ 00055100
      DATA E(1825),E(1826),E(1827),E(1828)/'IST ','INVA','LID ','CONT'/ 00055200
      DATA E(1829),E(1830),E(1831),E(1832)/'ROL ','STAT','EMEN','T. A'/ 00055300
      DATA E(1833),E(1834),E(1835),E(1836)/'RGUM','ENT ','IGNO','RED '/ 00055400
      DATA E(1837),E(1838),E(1839),E(1840)/'DUPL','ICAT','E NA','ME O'/ 00055500
      DATA E(1841),E(1842),E(1843),E(1844)/'F DI','MENS','IONE','D VA'/ 00055600
      DATA E(1845),E(1846),E(1847),E(1848)/'RIAB','LES ','RESE','RV I'/ 00055700
      DATA E(1849),E(1850),E(1851),E(1852)/'NVAL','ID I','N MA','CRO '/ 00055800
      DATA E(1853),E(1854),E(1855),E(1856)/'PROG','RAM ','CLDA','T SE'/ 00055900
      DATA E(1857),E(1858),E(1859),E(1860)/'CTIO','N NE','STED',' OR '/ 00056000
      DATA E(1861),E(1862),E(1863),E(1864)/'STAT','EMEN','T IN',' WRO'/ 00056100
      DATA E(1865),E(1866),E(1867),E(1868)/'NG S','EQUE','NCE.','    '/ 00056200
      DATA E(1869),E(1870),E(1871),E(1872)/'INVA','LID ','ARGU','MENT'/ 00056300
      DATA E(1873),E(1874),E(1875),E(1876)/' IN ','OBTA','IN S','TATE'/ 00056400
      DATA E(1877),E(1878),E(1879),E(1880)/'MENT','    ','INCO','RREC'/ 00056500
      DATA E(1881),E(1882),E(1883),E(1884)/'T NU','MBER',' OF ','ARGU'/ 00056600
      DATA E(1885),E(1886),E(1887),E(1888)/'MENT','S OR',' INV','ALID'/ 00056700
      DATA E(1889),E(1890),E(1891),E(1892)/' ARG','UMEN','T   ','INVA'/ 00056800
      DATA E(1893),E(1894),E(1895),E(1896)/'LID ','INCL','USIV',' SUB'/ 00056900
      DATA E(1897),E(1898),E(1899),E(1900)/'SCRI','PT F','ORMA','T   '/ 00057000
      DATA E(1901),E(1902),E(1903),E(1904)/'A,B ','AND ','C IN',' INC'/ 00057100
      DATA E(1905),E(1906),E(1907),E(1908)/'LUSI','VE S','UBSC','RIPT'/ 00057200
      DATA E(1909),E(1910),E(1911),E(1912)/' FOR','MAT ','MUST',' BE '/ 00057300
      DATA E(1913),E(1914),E(1915),E(1916)/'EXPL','ICIT',' INT','EGER'/ 00057400
      DATA E(1917),E(1918),E(1919),E(1920)/'S   ','UNEV','EN N','UMBE'/ 00057500
      DATA E(1921),E(1922),E(1923),E(1924)/'R OF',' ARG','UMEN','TS  '/ 00057600
      DATA E(1925),E(1926),E(1927),E(1928)/'INVA','LID ','ARGU','MENT'/ 00057700
      DATA E(1929),E(1930),E(1931),E(1932)/' SHO','ULD ','BE O','N OR'/ 00057800
      DATA E(1933),E(1934),E(1935),E(1936)/' OFF','INVA','LID ','ARGU'/ 00057900
      DATA E(1937),E(1938),E(1939),E(1940)/'MENT',' SHO','ULD ','BE P'/ 00058000
      DATA E(1941),E(1942),E(1943),E(1944)/'S OR',' A S','SURF',' NAM'/ 00058100
      DATA E(1945),E(1946),E(1947),E(1948)/'E   ','THER','E IS',' NO '/ 00058200
      DATA E(1949),E(1950),E(1951),E(1952)/'ASSI','GNME','NT T','O AR'/ 00058300
      DATA E(1953),E(1954),E(1955),E(1956)/'GUME','NT: ','....','....'/ 00058400
      DATA E(1957),E(1958),E(1959),E(1960)/' IN ','MACR','O : ','....'/ 00058500
      DATA E(1961),E(1962),E(1963),E(1964)/'....','SYMB','OLIC',' NAM'/ 00058600
      DATA E(1965),E(1966),E(1967),E(1968)/'E TA','BLE ','OVER','FLOW'/ 00058700
      DATA E(1969),E(1970),E(1971),E(1972)/'. SY','MBOL',' IGN','ORED'/ 00058800
      DATA E(1973),E(1974),E(1975),E(1976)/'    ','TABL','E OV','ERFL'/ 00058900
      DATA E(1977),E(1978),E(1979),E(1980)/'OW F','OR N','UMER','ICAL'/ 00059000
      DATA E(1981),E(1982),E(1983),E(1984)/' MAC','RO A','SSIG','NMEN'/ 00059100
      DATA E(1985)/'TS. '/                                              00059200
      END                                                               00060000
**** SOURCE FILE : M0006690.W06   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE TSSMIL                                M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE TSSMIL                                        M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    ALARM           SUBROUTINE    PRO026           M0000800
C          SUBROUTINE    ARGCVT                                         M0000900
C          SUBROUTINE    BINBCD                                         M0001000
C          SUBROUTINE    CALLZZ                                         M0001100
C          SUBROUTINE    CONCAT                                         M0001200
C          INTEGER FCT.  NUMB                                           M0001300
C          SUBROUTINE    ONEARG                                         M0001400
C          SUBROUTINE    OPCODE                                         M0001500
C          SUBROUTINE    RLSLIN                                         M0001600
C          INTEGER FCT.  SEARCH                                         M0001700
C          SUBROUTINE    TWOARG                                         M0001800
C                                                                       M0001900
      SUBROUTINE TSSMIL                                                 M0002000
C                                                                       M0002100
      IMPLICIT INTEGER (A-Z)                                            M0002200
C                                                                       M0002300
C                                                                       M0002400
C        1.    NAME TABLE AND TABLE LIMITS                              M0002500
C                                                                       M0002600
      INCLUDE 'NAMETB.INC'                                              M0002710
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0002750
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0002850
C NAMMAX:      NAMTBL INDEX OF THE PART PROGRAM NAME SECTION            M0002900
C                                                                       M0003300
C        2.    STACK AND POINTER STORAGE                                M0003400
C                                                                       M0003500
      COMMON/STKLST/STKLST                                              M0003600
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      M0003700
C TOP:         POINTER TO LAST STACK ENTRY                              M0003800
      EQUIVALENCE (TOP,STKLST(1))                                       M0003900
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             M0004000
      EQUIVALENCE (ARGTOP,STKLST(2))                                    M0004100
C STACK:       WORKING STACK                                            M0004200
      EQUIVALENCE (STACK(1,1),STKLST(4))                                M0004300
C ARGSTK:      ARGUMENT STACK                                           M0004400
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               M0004500
C                                                                       M0004600
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0004700
C                                                                       M0004800
      COMMON/CODE/CODE                                                  M0004900
      DIMENSION CODE(150),NUMBER(2),TEMP(2),PERMID(2),VBL(2),IDENT(2),  M0005000
     *          CANON(2)                                                M0005050
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        M0005100
      EQUIVALENCE (NUMBER(1),CODE(27))                                  M0005200
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0005300
      EQUIVALENCE (TEMP(1),CODE(33))                                    M0005400
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        M0005500
      EQUIVALENCE (PERMID(1),CODE(39))                                  M0005600
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        M0005700
      EQUIVALENCE (VBL(1),CODE(61))                                     M0005800
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        M0005900
      EQUIVALENCE (IDENT(1),CODE(69))                                   M0006000
C CANON:       (1)=CODE CLASS 42000,(2)=NAMTBL INDEX OF 'CANON '        M0006010
      EQUIVALENCE (CANON(1),CODE(83))                                   M0006020
C                                                                       M0006100
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         M0006200
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    M0006300
      COMMON/TMP/TXXXX                                                  M0006400
      DIMENSION TXXXX(2,32)                                             M0006500
C                                                                       M0006600
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      M0006700
C                                                                       M0006800
      COMMON/BCDPTR/BCDPTR                                              M0006900
      DIMENSION BCDPTR(7)                                               M0007000
C DOTTAB:      NAMTBL POINTER TO ALPHAMERIC LITERAL '$$TAB'             M0007100
      EQUIVALENCE (DOTTAB,BCDPTR(7))                                    M0007200
C                                                                       M0007300
C        9.    NAME TABLE POINTERS TO NUMBERS                           M0007400
C                                                                       M0007500
      COMMON/NUMPTR/NUMPTR                                              M0007600
      DIMENSION NUMPTR(12)                                              M0007700
C ZEROPT:      NAMTBL POINTER TO '0.    '                               M0007800
      EQUIVALENCE (ZEROPT,NUMPTR(2))                                    M0007900
C ONEPT:       NAMTBL POINTER TO '1.    '                               M0008000
      EQUIVALENCE (ONEPT,NUMPTR(4))                                     M0008100
C                                                                       M0008200
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           M0008300
C                                                                       M0008400
      INCLUDE 'GMTY.INC'                                                M0008500
C GEOLOC:      GEOMETRIC ,PRODUCTION STARTING INDEX IN GEOMTB           M0008700
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  M0008900
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    M0009100
C                                                                       M0009300
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    M0009400
C                                                                       M0009500
      COMMON/CFSIZE/CFSIZE                                              M0009600
      DIMENSION CFSIZE(205),MAXSIZ(2)                                   M0009700
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                M0009800
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 M0009900
C                                                                       M0010000
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0010100
C                                                                       M0010200
      COMMON/IL/IL                                                      M0010300
      DIMENSION IL(21)                                                  M0010400
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              M0010500
      EQUIVALENCE (REPL,IL(17))                                         M0010600
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              M0010700
      EQUIVALENCE (MOVE,IL(19))                                         M0010800
C                                                                       M0010900
C       17.    MODE CODES                                               M0011000
C                                                                       M0011100
      COMMON/MODX/MODX                                                  M0011200
      DIMENSION MODX(32)                                                M0011300
C LINE:        MODE CODE ( 1) FOR LINE                                  M0011310
      EQUIVALENCE (LINE,MODX(1))                                        M0011320
C PLANE:       MODE CODE ( 2) FOR PLANE                                 M0011330
      EQUIVALENCE (PLANE,MODX(2))                                       M0011340
C POINT:       MODE CODE (19) FOR POINT                                 M0011400
      EQUIVALENCE (POINT,MODX(19))                                      M0011500
C REAL:        MODE CODE (21) FOR A SCALAR                              M0011600
      EQUIVALENCE (REAL,MODX(21))                                       M0011700
C SSURF:       MODE CODE (29) FOR SCULPTURED SURFACE                    M0011710
      EQUIVALENCE (SSURF,MODX(29))                                      M0011720
C                                                                       M0011800
C       27.    OPERAND MODIFIERS                                        M0011900
C                                                                       M0012000
      COMMON/OPMOD/OPMOD                                                M0012100
      DIMENSION OPMOD(6)                                                M0012200
C DLR:         CONTAINS OPERAND TYPE CODE 1                             M0012300
      EQUIVALENCE (DLR,OPMOD(2))                                        M0012400
C                                                                       M0012500
C       28.    OPERAND MODIFIERS                                        M0012600
C                                                                       M0012700
      COMMON/SUBLST/SUBLST                                              M0012800
      DIMENSION SUBLST(135),APTXXX(120)                                 M0012900
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            M0013000
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 M0013100
C                                                                       M0013200
C       29.    CLASS CODE MODULI                                        M0013300
C                                                                       M0013400
      COMMON/MODULI/MODULI                                              M0013500
      DIMENSION MODULI(2)                                               M0013600
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0013700
      EQUIVALENCE (MODULO,MODULI(1))                                    M0013800
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0013900
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0014000
C*                                                                      M0014100
      CHARACTER*6 DPS(2),SMIL(6)                                        M0014200
      CHARACTER IBUFF*15,BLANK*4                                        M0014210
      DIMENSION LOC(4),ARG(5)                                           M0014220
      DATA DPS,BLANK,OFFSET /'DS  ','PS  ','    ',25/                   M0014300
      DATA SMIL /'SCON  ','SMIL  ','GOMILL','GCLEAR','INTSEC','AVCTRL'/ M0014400
C**                                                                     M0014500
C     PREPARE MODES AND PERMANENT IDENTIFIERS OF THE ARGSTK ARGUMENTS   M0014600
C          AND MOVE THEM TO STACK(2,TOP+1) AND HIGHER ADDR.             M0014700
C                                                                       M0014800
      IF(ARGTOP.LT.1)GOTO 4000                                          M0014900
      TP=TOP+1                                                          M0015000
      STACK(2,TP)=-1                                                    M0015100
      DO 40 ERRPT=1,ARGTOP                                              M0015200
      NN=0                                                              M0015300
      J=ARGSTK(ERRPT)                                                   M0015400
      IF(J.GT.NAMMAX)GOTO 20                                            M0015500
      CLASS=NAMTBL(J)/MODULO*MODULO                                     M0015600
      MM=NAMTBL(J)-CLASS                                                M0015700
      IF(MM.GT.MODHLF)MM=MM-MODHLF                                      M0015800
      IF(CLASS.NE.PERMID(1).AND.CLASS.NE.CANON(1))GOTO 10               M0015900
      NN=50                                                             M0016000
      MM=MM+NN                                                          M0016100
      GOTO 30                                                           M0016200
   10 IF(CLASS.EQ.VBL(1).OR.CLASS.EQ.TEMP(1).OR.MM.EQ.OFFSET)GOTO 30    M0016300
      IF(CLASS.NE.NUMBER(1))GOTO 4030                                   M0016400
   20 MM=REAL                                                           M0016500
   30 TP=TP+1                                                           M0016600
      STACK(1,TP)=MM-NN                                                 M0016700
   40 STACK(2,TP)=PMIDTB(MM)                                            M0016800
C                                                                       M0016900
C                                                                       M0016901
C     BRANCH IF INTSEC STATEMENT OR DEFINE START OF SEARCHING           M0016902
C                                                                       M0016903
      SNAME=STACK(1,TOP-1)                                              M0016904
      DO 50 TYP=1,6                                                     M0016906
        IF(CNAMTB(STACK(1,TOP-1)).NE.SMIL(TYP))GOTO 50                  M0016908
        GOTO(  60,  60,  70,  65,2000,  72),TYP                         M0016910
   50 CONTINUE                                                          M0016912
      ERRPT=1-TOP                                                       M0016914
      GOTO 4060                                                         M0016916
C                                                                       M0016918
C                   START OF SCON/, SMIL/ PRODUCTIONS                   M0016919
   60 GL=GEOLOC(50)                                                     M0016920
      GOTO 75                                                           M0016922
C                   START OF GCLEAR/ PRODUCTIONS                        M0016923
   65 GL=GEOLOC(46)                                                     M0016924
      LPROD=1                                                           M0016926
      DO 66 I=1,4                                                       M0016930
      ARG(I)=1                                                          M0016932
   66 LOC(I)=0                                                          M0016934
      ARG(5)=1                                                          M0016936
      GOTO 76                                                           M0016938
C                  START OF GOMILL/ PRODUCTIONS                         M0016939
   70 GL=GEOLOC(47)                                                     M0016940
      GOTO 75                                                           M0016942
C                  START OF AVCTRL/ PRODUCTIONS                         M0016944
   72 GL=GEOLOC(45)                                                     M0016946
C                                                                       M0017000
C     SEARCH FOR THE PRODUCTION NUMBER AND BRANCH                       M0017100
C                                                                       M0017200
   75 LPROD=0                                                           M0017250
   76 KK=ARGTOP                                                         M0017300
      IEND=0                                                            M0017550
   80 ERRPT=KK                                                          M0017600
      TPT2=TP*2                                                         M0017610
      PROD=SEARCH(STACK,TPT2,GEOMTB(GL),ERRPT)                          M0017700
      IF(PROD.EQ.200)GOTO 4050                                          M0017800
      IF(LPROD.GT.0)GOTO 90                                             M0017900
      J=PROD/5+1                                                        M0018000
      IF(CNAMTB(STACK(1,TOP-1)).NE.SMIL(J))GOTO 4020                    M0018100
C                   PRODUCTION NUMBERS                                  M0018200
C             1    2    3    4    5    6    7    8    9   10            M0018300
   90 GOTO( 100, 200, 300,3000, 500, 600, 600,4050,4050,1000,           M0018400
C            11   12   13   14   15   16   17   18   19   20            M0018450
     *     1000,1200,1300,1400,1600,1600,1600,1600,1600,1700,           M0018500
C            21   22   23   24   25   26   27   28   29   30            M0018550
     *     1700,1700,1700,1650,1800,3000,2700,2800,2900,2950),PROD      M0018600
      GOTO 4050                                                         M0018650
C                                                                       M0018700
C     CONTROL OF SCON/INIT,DS,PS,FEED,....                              M0018800
C     NO CONTROL OF MULTIPLE DEFINITIONS                                M0018900
C                                                                       M0019000
  100 IF(KK.EQ.2)GOTO 3000                                              M0019100
      TP=TP-1                                                           M0019200
      KK=KK-1                                                           M0019300
      STACK(2,TP)=STACK(2,TP+1)                                         M0019400
      GOTO 80                                                           M0019500
C                                                                       M0019600
C     CONTROL OF OPTIONAL 'OFFSET' IN SCON/DS,......                    M0019700
C                                                                       M0019800
  200 MM=ARGTOP                                                         M0019900
      NN=1                                                              M0020000
      IF(ERRPT.LE.0)GOTO 610                                            M0020100
      IF(STACK(1,TOP+1+ERRPT).NE.OFFSET)GOTO 4030                       M0020200
      ERRPT=ERRPT-1                                                     M0020300
      GOTO 610                                                          M0020400
C                                                                       M0020500
C     CONTROL SCON/PS,....                                              M0020600
C                                                                       M0020700
  300 MM=ARGTOP                                                         M0020800
      NN=2                                                              M0020900
      IF(ERRPT.LE.0)GOTO 610                                            M0021000
      GOTO 510                                                          M0021100
C                                                                       M0021200
C     CONTROL SMIL/PATH,..  SMIL/ZIGZAG,... SMIL/PICKFD,....            M0021300
C                                                                       M0021400
  500 MM=ARGTOP-1                                                       M0021500
      NN=1                                                              M0021600
      IF(ERRPT.LE.0)GOTO 610                                            M0021700
C                                                                       M0021800
C     CONTROL OF OPTIONAL 'REAL'                                        M0021900
C                                                                       M0022000
  510 IF(STACK(1,TOP+1+ERRPT).NE.REAL)GOTO 4030                         M0022100
      ERRPT=ERRPT-1                                                     M0022200
      GOTO 610                                                          M0022300
C                                                                       M0022400
C     CONTROL SMIL/POSN,..                                              M0022500
C                                                                       M0022600
  600 MM=ARGTOP-1                                                       M0022700
      NN=1                                                              M0022800
C                                                                       M0022900
C     CONTROL OF 'PS' RSP. 'DS' ,BECAUSE BOTH ARE OF SAME MODE AND CLASSM0023000
C                                                                       M0023100
  610 IF(CNAMTB(ARGSTK(MM)).NE.DPS(NN))GOTO 4040                        M0023200
      GOTO 3000                                                         M0023300
C                                                                       M0023400
C     A P T  COMPATIBLE REGIONAL MILLING                                M0023500
C                                                                       M0023600
C     FIRST (STANDARD) PART OF MULTI-CUT SEQUENCE COMMAND               M0023700
C           PRODUCTION 13 MAY, 14 MUST FOLLOW                           M0023800
C                        - OR -                                         M0023900
C     START UP RESP. SINGLE CUT SEQUENCE COMMAND                        M0024000
C           PRODUCTION 12 SHOULD , 13 MAY FOLLOW                        M0024100
 1000 IF(LPROD.NE.0)GOTO 4070                                           M0024200
      IF(ERRPT.EQ.0)GOTO 3000                                           M0024300
 1010 TP=ERRPT+4                                                        M0024400
      KK=ERRPT                                                          M0024500
      LPROD=PROD                                                        M0024600
      GOTO 80                                                           M0024700
C                                                                       M0024800
C     START UP COMMAND COMPLETE                                         M0024900
 1200 IF(LPROD.NE.11)GOTO 4070                                          M0025000
 1210 IF(MOD(ARGTOP,2).EQ.0)GOTO 4050                                   M0025100
      GOTO 3000                                                         M0025200
C                                                                       M0025300
C     PARAMETERS FOR FOR SINGLE OR MULTI CUT SEQUENCE MILLING           M0025400
 1300 IF(LPROD.EQ.11)GOTO 3000                                          M0025500
      IF(LPROD.NE.10)GOTO 4070                                          M0025600
      GOTO 1010                                                         M0025700
C                                                                       M0025800
C     MULTI CUT SEQUENCE COMMAND COMPLETE                               M0025900
 1400 IF(LPROD.EQ.0)GOTO 3000                                           M0026000
      IF(LPROD.NE.10.AND.LPROD.NE.13)GOTO 4070                          M0026100
      GOTO 3000                                                         M0026200
C                                                                       M0026300
C     REGIONAL MILLING GCLEAR COMMAND                                   M0026302
C                                                                       M0026304
 1600 IEND=KK                                                           M0026306
      IF(KK.NE.ARGTOP)GOTO 3010                                         M0026308
 1610 IEND=0                                                            M0026310
      DO 1620 I=1,5                                                     M0026312
 1620 ARG(I)=0                                                          M0026314
      ARG(PROD-14)=1                                                    M0026316
      J=3                                                               M0026318
      GOTO 1850                                                         M0026320
C                                                                       M0026322
 1650 SNAME=ARGSTK(KK-1)                                                M0026324
 1700 NN=PROD-19                                                        M0026326
      IF(ARG(NN).NE.0)GOTO 4070                                         M0026328
      ARG(NN)=1                                                         M0026330
      J=2                                                               M0026332
      GOTO 1860                                                         M0026334
C                                                                       M0026336
 1800 IEND=KK                                                           M0026338
      IF(KK.NE.ARGTOP)GOTO 3010                                         M0026340
 1810 IEND=0                                                            M0026342
      DO 1820 I=1,5                                                     M0026344
 1820 ARG(I)=1                                                          M0026346
      J=2                                                               M0026348
C   K FOR START=3 , FOR THRU=6 , FOR AWAY=11 , FOR BACK=12              M0026350
 1850 K=MOD(STACK(1,TP),10)+3                                           M0026352
      K=K/3                                                             M0026354
      IF(LOC(K).NE.0)GOTO 4070                                          M0026356
      LOC(K)=1                                                          M0026358
 1860 IF(ERRPT.EQ.0)GOTO 3010                                           M0026360
      TP=TP-J                                                           M0026362
      KK=KK-J                                                           M0026364
      GOTO 80                                                           M0026366
C                                                                       M0026700
C     INTERSECTION OF PLANE AND SCULPTURED SURFACE                      M0026800
C                                                                       M0026900
 2000 K=1                                                               M0030360
      J=ARGSTK(K)                                                       M0030370
      IF(NAMTBL(J).EQ.CANON(1).OR.STACK(1,TOP+2).EQ.72)K=2              M0030380
      ERRPT=1                                                           M0030390
      IF(STACK(1,TP).EQ.LINE.OR.STACK(1,TP).EQ.PLANE)GOTO 2500          M0030400
      IF(ARGTOP.LE.K)GOTO 4060                                          M0030410
      J=TOP+K+1                                                         M0030420
      L=J+20                                                            M0030430
      ERRPT=K-1                                                         M0030440
      DO 2010 I=J,L                                                     M0030450
      ERRPT=ERRPT+1                                                     M0030460
      IF(STACK(1,I).NE.SSURF)GOTO 2020                                  M0030470
 2010 CONTINUE                                                          M0030480
      GOTO 4010                                                         M0030490
 2020 IF(STACK(1,I).NE.73)GOTO 4030                                     M0030500
      J=I+1                                                             M0030510
      L=TP                                                              M0030520
      IF(L.LT.J)GOTO 4060                                               M0030530
      GOTO 2520                                                         M0030540
C                                                                       M0030550
 2500 IF(STACK(1,TP-1).NE.73)GOTO 2510                                  M0030560
      ARGSTK(ARGTOP-1)=ARGSTK(ARGTOP)                                   M0030570
      ARGTOP=ARGTOP-1                                                   M0030580
      STACK(1,TP-1)=STACK(1,TP)                                         M0030590
      TP=TP-1                                                           M0030600
 2510 IF(ARGTOP.LE.K)GOTO 4060                                          M0030610
      ERRPT=ARGTOP-41                                                   M0030620
      IF(ARGTOP.GT.(K+40))GOTO 4010                                     M0030630
      J=TOP+K+1                                                         M0030640
      ERRPT=K-1                                                         M0030650
      L=TP-1                                                            M0030660
 2520 DO 2530 I=J,L                                                     M0030670
      ERRPT=ERRPT+1                                                     M0030680
      IF(STACK(1,I).NE.SSURF)GOTO 4030                                  M0030690
 2530 CONTINUE                                                          M0030700
      ERRPT=0                                                           M0030710
      GOTO 3010                                                         M0030720
C                                                                       M0031410
C.... AVOIDANCE CONTROL LANGUAGE                                        M0031411
C                                                                       M0031412
C.... AVCTRL/ON                                                         M0031413
C            OFF                                                        M0031414
 2700 SUB=STACK(1,TOP-1)                                                M0031415
      ERRPT=1-ARGTOP                                                    M0031416
      IF (ARGTOP.GT.1) GOTO 4060                                        M0031417
      CALL CALLZZ(SUB)                                                  M0031418
      CALL ARGCVT(ARGSTK(ARGTOP))                                       M0031419
      JNULL=NAME('NULL  ')                                              M0031420
      CALL ARGCVT(JNULL)                                                M0031421
      CALL ARGCVT(ZEROPT)                                               M0031422
      CALL ARGCVT(ZEROPT)                                               M0031423
      CALL ARGCVT(ZEROPT)                                               M0031424
      CALL ARGCVT(JNULL)                                                M0031425
      CALL ARGCVT(ZEROPT)                                               M0031426
      GOTO 3200                                                         M0031427
C                                                                       M0031430
C.... AVCTRL/CUTANG,CONST,GAMMA,RANGE,BLOW,BHIGH                        M0031431
C                                                                       M0031432
 2800 IF (LPROD.NE.0) GOTO 4070                                         M0031433
      SUB=STACK(1,TOP-1)                                                M0031434
      JNULL=NAME('NULL  ')                                              M0031435
      CALL CALLZZ(SUB)                                                  M0031436
      J=NAME('ON    ')                                                  M0031437
      CALL ARGCVT(J)                                                    M0031438
      CALL ARGCVT(ARGSTK(ARGTOP))                                       M0031439
      CALL ARGCVT(ARGSTK(ARGTOP-2))                                     M0031440
      CALL ARGCVT(ARGSTK(ARGTOP-4))                                     M0031441
      CALL ARGCVT(ARGSTK(ARGTOP-5))                                     M0031442
      IF (ERRPT.EQ.0) THEN                                              M0031443
        CALL ARGCVT(JNULL)                                              M0031444
        CALL ARGCVT(ZEROPT)                                             M0031445
        GOTO 3200                                                       M0031446
      ELSE                                                              M0031447
        TP=ERRPT+4                                                      M0031448
        KK=ERRPT                                                        M0031449
        LPROD=PROD                                                      M0031450
        GOTO 80                                                         M0031451
      ENDIF                                                             M0031452
C                                                                       M0031460
C.... AVCTRL/[CUTANG,....,] NORMPS                                      M0031461
C                           AXIS                                        M0031462
 2900 IF (LPROD.EQ.0) THEN                                              M0031463
        SUB=STACK(1,TOP-1)                                              M0031464
        JNULL=NAME('NULL  ')                                            M0031465
        CALL CALLZZ(SUB)                                                M0031466
        J=NAME('ON    ')                                                M0031467
        CALL ARGCVT(J)                                                  M0031468
        CALL ARGCVT(JNULL)                                              M0031469
        CALL ARGCVT(ZEROPT)                                             M0031470
        CALL ARGCVT(ZEROPT)                                             M0031471
        CALL ARGCVT(ZEROPT)                                             M0031472
        CALL ARGCVT(ARGSTK(ARGTOP))                                     M0031473
      ELSE IF (LPROD.EQ.28) THEN                                        M0031474
        CALL ARGCVT(ARGSTK(KK))                                         M0031475
      ELSE                                                              M0031476
        GOTO 4070                                                       M0031477
      ENDIF                                                             M0031478
      IF (ERRPT.EQ.0) THEN                                              M0031479
        CALL ARGCVT(ZEROPT)                                             M0031480
        GOTO 3200                                                       M0031481
      ELSE                                                              M0031482
        TP=ERRPT+4                                                      M0031483
        KK=ERRPT                                                        M0031484
        LPROD=PROD                                                      M0031485
        GOTO 80                                                         M0031486
      ENDIF                                                             M0031487
C                                                                       M0031490
C.... AVCTRL/[CUTANG,...,] NORMPS,LIMIT,DMAX                            M0031491
C                          AXIS                                         M0031492
 2950 IF (LPROD.NE.29) GOTO 4070                                        M0031493
      IF (ERRPT.GT.0) GOTO 4010                                         M0031494
      CALL ARGCVT(ARGSTK(1))                                            M0031495
      GOTO 3200                                                         M0031496
C                                                                       M0031500
C     GENERATE I.L. OUTPUT                                              M0031600
C                                                                       M0031700
 3000 IF(ERRPT.GT.0)GOTO 4010                                           M0031800
 3010 TP=ARGTOP+TOP+1                                                   M0031900
      INDEX=-3                                                          M0032000
 3020 MM=STACK(1,TP)                                                    M0032100
      NN=ARGSTK(ARGTOP)                                                 M0032200
      I=1                                                               M0032300
      IBUFF(8:15)=BLANK                                                 M0032510
      CALL BINBCD(MM,IBUFF(4:),NCH)                                     M0032600
      WRITE (IBUFF(1:3),'(I3)') NCH                                     M0032610
      CALL CONCAT(IBUFF,'.')                                            M0032700
      J=NUMB(IBUFF(4:15))+NAMMAX                                        M0032800
      CALL OPCODE(MOVE)                                                 M0032900
      CALL TWOARG(INDEX,DOTTAB)                                         M0033000
      CALL TWOARG(DLR,J)                                                M0033100
      CALL RLSLIN                                                       M0033200
      INDEX=INDEX-1                                                     M0033300
      IF (NN.GT.NAMMAX) THEN                                            M0033310
        I=TXXXX(1,MM)                                                   M0033320
      ELSE                                                              M0033330
        CLASS=NAMTBL(NN)/MODULO*MODULO                                  M0033340
        IF(CLASS.NE.PERMID(1).AND.CLASS.NE.CANON(1))I=TXXXX(1,MM)       M0033400
      ENDIF                                                             M0033410
      IF(I.EQ.12)I=1                                                    M0033500
      IF(I.GT.1)GOTO 3030                                               M0033600
      I=1                                                               M0033610
      CALL OPCODE(MOVE)                                                 M0033700
      GOTO 3040                                                         M0033800
 3030 CALL OPCODE(REPL)                                                 M0033900
      CALL ONEARG(I)                                                    M0034000
 3040 CALL TWOARG(INDEX,DOTTAB)                                         M0034100
      CALL ARGCVT(NN)                                                   M0034200
      CALL RLSLIN                                                       M0034300
      INDEX=INDEX-I                                                     M0034400
      ARGTOP=ARGTOP-1                                                   M0034500
      TP=TP-1                                                           M0034600
      IF(ARGTOP.GT.IEND) GOTO 3020                                      M0034700
      IBUFF(8:15)=BLANK                                                 M0034910
      CALL BINBCD(-INDEX,IBUFF(4:),NCH)                                 M0035000
      WRITE(IBUFF(1:3),'(I3)') NCH                                      M0035010
      CALL CONCAT(IBUFF,'.')                                            M0035100
      J=NUMB(IBUFF(4:15))+NAMMAX                                        M0035200
      CALL OPCODE(MOVE)                                                 M0035300
      CALL TWOARG(-2,DOTTAB)                                            M0035400
      CALL TWOARG(DLR,J)                                                M0035500
      CALL RLSLIN                                                       M0035600
      CALL CALLZZ(APTXXX(92))                                           M0035700
      CALL ARGCVT(STACK(1,TOP-1))                                       M0035800
      CALL ARGCVT(SNAME)                                                M0035850
C                                                                       M0035900
      NOWRDS=40+INDEX                                                   M0036000
      IF(NOWRDS .LE.MAXSIZ(2)) GOTO 3100                                M0036100
      IF(NOWRDS .GE.MAXSIZ(1)) GO TO 3090                               M0036200
C                                                                       M0036300
C     REPLACE MAXSIZ(2)                                                 M0036400
C                                                                       M0036500
      MAXSIZ(2)=NOWRDS                                                  M0036600
      GOTO 3100                                                         M0036700
C                                                                       M0036800
C     ADJUST BOTH MAXSIZ(1) AND (2)                                     M0036900
C                                                                       M0037000
 3090 MAXSIZ(2)=MAXSIZ(1)                                               M0037100
      MAXSIZ(1)=NOWRDS                                                  M0037200
C                                                                       M0037300
 3100 IF(IEND.EQ.0) GOTO 3200                                           M0037310
      CALL RLSLIN                                                       M0037320
      ARGTOP=KK                                                         M0037330
      TP=ARGTOP+TOP+1                                                   M0037340
      IF (PROD.EQ.25) GOTO 1810                                         M0037350
      GOTO 1610                                                         M0037360
 3200 RETURN                                                            M0037400
C                                                                       M0037500
 4000 ERRPT=1-TOP                                                       M0037600
 4010 CALL ALARM(2052,-ERRPT,8,'TSSMIL  ')                              M0037700
      GOTO 3100                                                         M0037800
 4020 ERRPT=1-TOP                                                       M0037900
 4030 CALL ALARM(2021,-ERRPT,8,'TSSMIL  ')                              M0038000
      GOTO 3100                                                         M0038100
 4040 ERRPT=MM                                                          M0038200
      GOTO 4060                                                         M0038300
 4050 IF(ERRPT.LE.0)ERRPT=1                                             M0038400
 4060 CALL ALARM(2001,-ERRPT,8,'TSSMIL  ')                              M0038500
      GOTO 3100                                                         M0038600
 4070 ERRPT=KK                                                          M0038700
      GOTO 4060                                                         M0038800
C                                                                       M0038900
      END                                                               M0039000
**** SOURCE FILE : M0006691.W03   ***
*
C                                                                       TWO00100
C              FORTRAN SUBROUTINE TWOARG                                TWO00200
C                                                                       TWO00300
C LINKAGE      SUBROUTINE TWOARG(I,J)                                   TWO00400
C                                                                       TWO00500
C          SUBSIDIARIES                  CALLED BY                      TWO00600
C          TYPE          ENTRY           TYPE          ENTRY            TWO00700
C          SUBROUTINE    ALARM           SUBROUTINE    ARGCVT           TWO00800
C                                        SUBROUTINE    ASNJPZ           TWO00900
C                                        SUBROUTINE    BOOLIF           TWO01000
C                                        SUBROUTINE    CALMCX           TWO01100
C                                        SUBROUTINE    GOLO             TWO01200
C                                        SUBROUTINE    GOPAT            TWO01300
C                                        SUBROUTINE    INPAT            TWO01400
C                                        SUBROUTINE    LARGES           TWO01500
C                                        SUBROUTINE    LCANON           TWO01600
C                                        SUBROUTINE    MOTION           TWO01700
C                                        SUBROUTINE    PRO020           TWO01800
C                                        SUBROUTINE    PRO021           TWO01900
C                                        SUBROUTINE    PRO026           TWO02000
C                                        SUBROUTINE    PRO027           TWO02100
C                                        SUBROUTINE    RECOG            TWO02200
C                                        SUBROUTINE    RECOGN           TWO02300
C                                        SUBROUTINE    RESRVZ           TWO02400
C                                        SUBROUTINE    SSDEF            TWO02500
C                                        SUBROUTINE    TSSMIL           TWO02600
C                                                                       TWO02700
      SUBROUTINE TWOARG(I,J)                                            TWO02800
C                                                                       TWO02900
      IMPLICIT INTEGER (A-Z)                                            TWO03000
C                                                                       TWO03010
C        1.    NAME TABLE AND TABLE LIMITS                              TWO03015
C                                                                       TWO03020
      INCLUDE 'NAMETB.INC'                                              TWO03030
C CNUMTB:      NUMBER TABLE                                             TWO03045
C                                                                       TWO03055
C                                                                       TWO03100
C       19.    INTERMEDIATE LANGUAGE TEXT                               TWO03200
C                                                                       TWO03300
      COMMON/ILTEXT/ILTEXT                                              TWO03400
      LOGICAL COMFIN                                                    TWO03500
      DIMENSION ILTEXT(94),TEXTIN(90)                                   TWO03600
C COMFIN:      TRUE IF I.L. OPERATION CODE GIVEN                        TWO03700
      EQUIVALENCE (COMFIN,ILTEXT(1))                                    TWO03800
C TPNTRX:      POINTER TO LAST TEXTIN ENTRY                             TWO03900
      EQUIVALENCE (TPNTRX,ILTEXT(3))                                    TWO04000
C TEXTIN:      STORAGE FOR CURRENTLY GENERATED I.L. COMMAND ARGUM.LIST  TWO04100
      EQUIVALENCE (TEXTIN(1),ILTEXT(5))                                 TWO04200
C                                                                       TWO04210
C       27.    OPERAND MODIFIERS                                        TWO04215
C                                                                       TWO04220
      COMMON/OPMOD/OPMOD                                                TWO04225
      DIMENSION OPMOD(8)                                                TWO04230
C HEXDLR:      CONTAINS OPERAND TYPE CODE 6                             TWO04235
      EQUIVALENCE (HEXDLR,OPMOD(7))                                     TWO04240
C SPTDLR:      CONTAINS OPERAND TYPE CODE 7                             TWO04245
      EQUIVALENCE (SPTDLR,OPMOD(8))                                     TWO04250
C                                                                       TWO04255
C       45.    NUMBER TABLE INDICES                                     TWO04260
C                                                                       TWO04265
      INCLUDE 'NUMBLK.INC'                                              TWO04270
C MNMBND:      LAST NAME TABLE ENTRY TO MACRO ASSIGNED NUMBER SECTION   TWO04280
C NMBRS:       QUANTITY OF NUMBERS IN THE CURRENT STATEMENT             TWO04290
C*                                                                      TWO04300
C ARGUMENTS    I         NORMALLY TYPE DESIGNATION OF                   TWO04400
C                        ARGUMENT J.  COULD BE A NAME                   TWO04500
C                        TABLE (NAMTBL) INDEX OF NUMBER.                TWO04600
C              J         NAME TABLE (NAMTBL) INDEX OF                   TWO04700
C**                      ARGUMENT.                                      TWO04800
      IF (COMFIN) GOTO 10                                               TWO04900
      IERROR=3                                                          TWO05000
      GO TO 90                                                          TWO05100
   10 IF (TPNTRX.LT.89) GOTO 20                                         TWO05200
      IERROR=2                                                          TWO05300
   90 CALL ALARM(IERROR,0,8,'TWOARG  ')                                 TWO05400
      GO TO 100                                                         TWO05500
   20 K=I                                                               TWO05510
      IF(J.LE.(MNMBND+NAMMAX))GOTO 30                                   TWO05520
C     HEXDLR: INDICATES NON FRACTIONAL REAL LITERAL                     TWO05522
C     SPTDLR: INDICATES FRACTIONAL REAL LITERAL                         TWO05524
      K=HEXDLR                                                          TWO05530
      IDP=INDEX(CNUMTB(J-NAMMAX),'.')                                   TWO05540
      IF (CNUMTB(J-NAMMAX)(IDP+1:).EQ.' ') GOTO 30                      TWO05550
      K=SPTDLR                                                          TWO05560
      NMBRS=NMBRS+1                                                     TWO05570
   30 TEXTIN(TPNTRX+1) = K                                              TWO05600
      TEXTIN(TPNTRX+2) = J                                              TWO05700
      TPNTRX = TPNTRX+2                                                 TWO05800
  100 RETURN                                                            TWO05900
       END                                                              TWO06000
**** SOURCE FILE : M0006692.V01   ***
*
C                                                                       VPD00100
C              FORTRAN SUBROUTINE VCTPRD                                VPD00200
C                                                                       VPD00300
C LINKAGE      SUBROUTINE  VCTPRD(JMP)                                  VPD00400
C                                                                       VPD00500
C          SUBSIDIARIES                  CALLED BY                      VPD00600
C          TYPE          ENTRY           TYPE          ENTRY            VPD00700
C          INTEGER FCT.  NAME            SUBROUTINE    RECOG            VPD00800
C          SUBROUTINE    SETCHR                                         VPD00900
C                                                                       VPD01000
      SUBROUTINE  VCTPRD(JMP)                                           VPD01100
C                                                                       VPD01200
      IMPLICIT INTEGER (A-Z)                                            VPD01300
C                                                                       VPD01400
C        1.    NAME TABLE AND TABLE LIMITS                              VPD01500
C                                                                       VPD01600
      COMMON/NAMETB/NAMETB                                              VPD01700
      DIMENSION NAMETB(3007),NAMTBL(3,999)                              VPD01800
C NAMTBL:      NAME TABLE OR DICTIONARY                                 VPD01900
      EQUIVALENCE (NAMTBL(1,1),NAMETB(11))                              VPD02000
C                                                                       VPD02100
C        2.    STACK AND POINTER STORAGE                                VPD02200
C                                                                       VPD02300
      COMMON/STKLST/STKLST                                              VPD02400
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      VPD02500
C TOP:         POINTER TO LAST STACK ENTRY                              VPD02600
      EQUIVALENCE (TOP,STKLST(1))                                       VPD02700
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             VPD02800
      EQUIVALENCE (ARGTOP,STKLST(2))                                    VPD02900
C STACK:       WORKING STACK                                            VPD03000
      EQUIVALENCE (STACK(1,1),STKLST(4))                                VPD03100
C ARGSTK:      ARGUMENT STACK                                           VPD03200
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               VPD03300
C                                                                       VPD03400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      VPD03500
C                                                                       VPD03600
      COMMON/CODE/CODE                                                  VPD03700
      DIMENSION CODE(150),SLASH(2),LPAREN(2),RPAREN(2),DOT(2),PERMID(2) VPD03800
C LPAREN:      (1)=CODE CLASS  2000,(2)=NAMTBL INDEX OF '(     '        VPD03900
      EQUIVALENCE (LPAREN(1),CODE(3))                                   VPD04000
C RPAREN:      (1)=CODE CLASS  3000,(2)=NAMTBL INDEX OF ')     '        VPD04100
      EQUIVALENCE (RPAREN(1),CODE(5))                                   VPD04200
C SLASH:       (1)=CODE CLASS  5000,(2)=NAMTBL INDEX OF '/     '        VPD04300
      EQUIVALENCE (SLASH(1),CODE(9))                                    VPD04400
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        VPD04500
      EQUIVALENCE (PERMID(1),CODE(39))                                  VPD04600
C DOT:         (1)=CODE CLASS 25000,(2)=NAMTBL INDEX OF 'DOT   '        VPD04700
      EQUIVALENCE (DOT(1),CODE(49))                                     VPD04800
C                                                                       VPD04900
C        4.    PRODUCTION TABLE                                         VPD05000
C                                                                       VPD05100
      COMMON/SRCTBL/SRCTBL                                              VPD05200
      DIMENSION SRCTBL(501),META(50)                                    VPD05300
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   VPD05400
      EQUIVALENCE (META(1),SRCTBL(3))                                   VPD05500
C                                                                       VPD05600
C        5.    PROGRAM CONTROL FLAGS                                    VPD05700
C                                                                       VPD05800
      COMMON/FLAGS/FLAGS                                                VPD05900
      LOGICAL ENDFLG                                                    VPD06000
      DIMENSION FLAGS(4)                                                VPD06100
C ENDFLG:      TRUE WHEN SOURCE STATEMENT TOTALLY IN STACK              VPD06200
      EQUIVALENCE (ENDFLG,FLAGS(1))                                     VPD06300
C                                                                       VPD06400
C        7.    STRING STORAGE AREA                                      VPD06500
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT   VPD06600
      COMMON/INPTR/CNT                                                  VPD06700
C                                                                       VPD06800
C       22.    MACRO PROCESSING VARIABLES                               VPD06900
C                                                                       VPD07000
      COMMON/MACXX1/MACXX1                                              VPD07100
      LOGICAL MACRED                                                    VPD07200
      DIMENSION MACXX1(71)                                              VPD07300
C MACRED:      SET TRUE TO INDICATE INPUT FROM MCBUFF TABLE             VPD07400
      EQUIVALENCE (MACRED,MACXX1(18))                                   VPD07500
C                                                                       VPD07600
C       29.    CLASS CODE MODULI                                        VPD07700
C                                                                       VPD07800
      COMMON/MODULI/MODULI                                              VPD07900
      DIMENSION MODULI(2)                                               VPD08000
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    VPD08100
      EQUIVALENCE (MODULO,MODULI(1))                                    VPD08200
C**                                                                     VPD08300
      DATA NMTB/0/                                                      VPD08400
C                                                                       VPD08500
      IF(JMP.LT.0)GOTO 10                                               VPD08600
      JMP=1                                                             VPD08700
      IF(NMTB.EQ.0)GOTO 50                                              VPD08800
      JMP=2                                                             VPD08900
      TOP=TOP+1                                                         VPD09000
      STACK(1,TOP)=NMTB                                                 VPD09100
      STACK(2,TOP)=META(NAMTBL(1,NMTB)/MODULO)                          VPD09200
      GOTO 40                                                           VPD09300
C                                                                       VPD09400
C     VECTOR AND SCALAR PRODUCT                                         VPD09500
C                                                                       VPD09600
   10 IF(NAMTBL(1,STACK(1,TOP-2)).EQ.DOT(1))GOTO 30                     VPD09700
C                                                                       VPD09800
      ARGTOP=2                                                          VPD09900
      ARGSTK(1)=STACK(1,TOP-1)                                          VPD10000
      I=NAME('$CROSS   ')                                               VPD10100
      IF(MODULO*(NAMTBL(1,I)/MODULO).EQ.PERMID(1))GOTO 20               VPD10200
      NAMTBL(1,I)=PERMID(1)+40                                          VPD10300
   20 ARGSTK(2)=I                                                       VPD10400
      STACK (1,TOP-1)=STACK(1,TOP-3)                                    VPD10500
      STACK (2,TOP-1)=STACK(2,TOP-3)                                    VPD10600
      CALL SETCHR(TOP-2,SLASH)                                          VPD10700
      STACK(1,TOP-3)=NAME('VECTOR  ')                                   VPD10800
      STACK(2,TOP-3)=META(NAMTBL(1,STACK(1,TOP-3))/MODULO)              VPD10900
C                                                                       VPD11000
      GOTO 40                                                           VPD11100
C                                                                       VPD11200
   30 ARGTOP=1                                                          VPD11300
      NMTB=STACK(1,TOP)                                                 VPD11400
      ARGSTK(1)=STACK(1,TOP-1)                                          VPD11500
      CALL SETCHR(TOP,RPAREN)                                           VPD11600
      STACK (1,TOP-1)=STACK(1,TOP-3)                                    VPD11700
      STACK (2,TOP-1)=STACK(2,TOP-3)                                    VPD11800
      CALL SETCHR(TOP-2,LPAREN)                                         VPD11900
      STACK(1,TOP-3)=NAME('DOTF    ')                                   VPD12000
      STACK(2,TOP-3)=META(NAMTBL(1,STACK(1,TOP-3))/MODULO)              VPD12100
      IF(MACRED)GOTO 50                                                 VPD12200
      ENDFLG=.FALSE.                                                    VPD12300
      CNT=CNT-1                                                         VPD12400
C                                                                       VPD12500
   40 NMTB=0                                                            VPD12600
   50 RETURN                                                            VPD12700
C                                                                       VPD12800
      END                                                               VPD12900
**** MODULE = ILEDITOR ****
**** SOURCE FILE : M0006626.W04   ***
*
C                                                                       CIL00100
C              FORTRAN SUBROUTINE CILOUT                                CIL00200
C                                                                       CIL00300
C LINKAGE      SUBROUTINE CILOUT(COMAND,COUNT,CODE)                     CIL00400
C                                                                       CIL00500
C          SUBSIDIARIES                  CALLED BY                      CIL00600
C          TYPE          ENTRY           TYPE          ENTRY            CIL00700
C          SUBROUTINE    HOLFRM           SUBROUTINE    ICMPRS          CIL00800
C          SUBROUTINE    CPRINT                                         CIL00900
C          SUBROUTINE    ICONV                                          CIL01000
C          SUBROUTINE    RLSBUF                                         CIL01100
C          SUBROUTINE    ABCDBN                                         CIL01110
C                                                                       CIL01200
      SUBROUTINE CILOUT(COMAND,COUNT,CODE)                              CIL01300
C                                                                       CIL01400
      IMPLICIT INTEGER (A-Z)                                            CIL01500
C                                                                       CIL01510
C        1.    NAME TABLE AND TABLE LIMITS                              CIL01520
C                                                                       CIL01530
      INCLUDE 'NAMETB.INC'                                              CIL01540
C                                                                       CIL01600
C       14.    I. L. LIST OPTION FLAGS                                  CIL01700
C                                                                       CIL01800
      COMMON/PRT/PRT                                                    CIL01900
      LOGICAL CILPRT                                                    CIL02000
      DIMENSION PRT(7)                                                  CIL02100
C CILPRT:      TRUE WHEN COMPRESSED I.L. PRINTING REQUESTED             CIL02200
      EQUIVALENCE (CILPRT,PRT(1))                                       CIL02300
C                                                                       CIL02400
C       20.    IO - ARRAY                                               CIL02500
C                                                                       CIL02600
      INCLUDE 'DARRAY.INC'                                              CIL02950
C                                                                       CIL03000
C       34.    COMMON BLOCK FOR INTERPRETIVE C.I.L. OUTPUT              CIL03100
C                                                                       CIL03200
      INCLUDE 'OUTBUF.INC'                                              CIL03300
C LABFLG:      INDICATES I.L. COMMAND IS LABEL (INTERPRETER)            CIL03700
C RSVFLG:      TRUE IF I.L. COMMAND IS A RESRV (INTERPRETER)            CIL03900
C IBUF:        NUMBER OF RECORDS IN BUFFER ARRAY                        CIL04100
C ILBUF:       NUMBER OF ITEMS IN THE LABBUF ARRAY (INTERPRETER)        CIL04300
C BUFFER:      TEMPORARY STORAGE FOR INTERPRETER OUTPUT (PAGES)         CIL04500
C LABBUF:      TEMPORARY STORAGE FOR LABEL,HOLDAT ENTRY AND RESRV I.L.  CIL04700
C                                                                       CIL04810
C       45.    NUMBER TABLE INDICES                                     CIL04820
C                                                                       CIL04830
      INCLUDE 'NUMBLK.INC'                                              CIL04840
C                                                                       CIL04841
C MNMBND:      LAST NAME TABLE ENTRY TO MACRO ASSIGNED NUMBER SECTION   CIL04842
C  NMBRS:      QUANTITY OF NUMBERS IN THE CURRENT STATEMENT             CIL04843
C*                                                                      CIL04900
      DIMENSION CODE(90)                                                CIL05000
C**                                                                     CIL05300
C...     IS THIS A HOLDAT STATEMENT                                     CIL05800
C                                                                       CIL05900
      IF( COMAND.EQ.21)GOTO 200                                         CIL06000
      IBF=COUNT                                                         CIL06010
      IF (COMAND.NE.9) IBF=COUNT+NMBRS                                  CIL06020
      GOTO 20                                                           CIL06030
C                                                                       CIL06040
C...     IS THIS A LABEL OR RESRV STATEMENT                             CIL06050
C                                                                       CIL06060
   1  IF ((LABFLG).OR.(RSVFLG)) GOTO 100                                CIL06070
C                                                                       CIL06100
C...     NO                                                             CIL06200
C...     CODE TO GO INTO BUFFER. TEST IF THERE IS ROOM                  CIL06300
C                                                                       CIL06400
      IF((IBUF+IBF+4).GT.256)CALL RLSBUF                                CIL06500
      BUFFER(IBUF+3) = COMAND                                           CIL06600
      BUFFER(IBUF+4) = IBF                                              CIL06700
      IBUF=IBUF+2                                                       CIL06800
      IF(COUNT.EQ.0) RETURN                                             CIL06900
      DO 10 I=1,COUNT                                                   CIL07000
      J=CODE(I)                                                         CIL07010
      IF (J.LE.NAMMAX) GOTO 5                                           CIL07020
      IF (CODE(I-1).NE.7) GOTO 5                                        CIL07030
      J=J-NAMMAX                                                        CIL07035
      CALL ABCDBN(CNUMTB(J),BUFFER(IBUF+3),1)                           CIL07040
      IBUF=IBUF+1                                                       CIL07060
      GOTO 10                                                           CIL07070
    5 BUFFER(IBUF+3)=J                                                  CIL07100
   10 IBUF=IBUF+1                                                       CIL07200
      IF (COMAND.NE.9)NMBRS=0                                           CIL07210
      RETURN                                                            CIL07220
C                                                                       CIL07300
C...     IS CILPRT MARKER SET                                           CIL07400
C                                                                       CIL07500
   20 IF(.NOT.CILPRT) GOTO 1                                            CIL07600
C                                                                       CIL07700
      CALL ICONV(COMAND,DARRAY,1,6)                                     CIL07800
      CALL ICONV(IBF,DARRAY,7,6)                                        CIL07900
      L=13                                                              CIL08000
      DO 1000 I=1,COUNT                                                 CIL08100
      IF (CODE(I).GT.NAMMAX) THEN                                       CIL08110
        IF (CODE(I-1).EQ.7) THEN                                        CIL08120
          CALL CFORM(CNUMTB(CODE(I)-NAMMAX),DARRAY,L+2,12)              CIL08130
          L=L+14                                                        CIL08140
        ELSE                                                            CIL08150
          CALL ICONV(CODE(I),DARRAY,L,6)                                CIL08160
          L=L+6                                                         CIL08170
        ENDIF                                                           CIL08180
      ELSE                                                              CIL08190
        CALL ICONV(CODE(I),DARRAY,L,6)                                  CIL08200
        L=L+6                                                           CIL08300
      ENDIF                                                             CIL08310
      IF(L.LE.106) GO TO 1000                                           CIL08400
      L=13                                                              CIL08500
      CALL CPRINT(DARRAY)                                               CIL08600
 1000 CONTINUE                                                          CIL08700
      CALL CPRINT(DARRAY)                                               CIL08800
      GOTO 1                                                            CIL08900
C                                                                       CIL09000
C...     LABEL OR RESRV STATEMENT.                                      CIL09100
C        CODE TO GO INTO LABBUF. TEST IF THERE IS ROOM                  CIL09200
C                                                                       CIL09300
  100 IF((ILBUF+COUNT+4).GT.254)CALL RLSBUF                             CIL09400
      LABBUF(ILBUF+3) = COMAND                                          CIL09500
      LABBUF(ILBUF+4) = COUNT                                           CIL09600
      ILBUF=ILBUF+2                                                     CIL09700
      DO 110 I=1,COUNT                                                  CIL09800
      LABBUF(ILBUF+3)=CODE(I)                                           CIL09900
  110 ILBUF=ILBUF+1                                                     CIL10000
      RETURN                                                            CIL10100
C                                                                       CIL10200
C...     HOLDAT STATEMENT                                               CIL10300
C                                                                       CIL10400
  200 LABFLG = .TRUE.                                                   CIL10500
      IF((ILBUF+2*COUNT).GT.256) CALL RLSBUF                            CIL10600
      LABFLG = .FALSE.                                                  CIL10700
      LABBUF(ILBUF+3)= COMAND                                           CIL10800
      LABBUF(ILBUF+5)=CODE(1)                                           CIL10900
      LABBUF(ILBUF+6)=CODE(2)                                           CIL11000
C                                                                       CIL11100
C                                                                       CIL11400
      LABBUF(ILBUF+4)=COUNT                                             CIL11500
      ILBUF=ILBUF+4                                                     CIL11600
      DO 210 I=3,COUNT                                                  CIL11700
      LABBUF(ILBUF+3)=CODE(I)                                           CIL11900
  210 ILBUF=ILBUF+1                                                     CIL12100
C                                                                       CIL12200
C...     IS CILPRT MARKER SET                                           CIL12300
C                                                                       CIL12400
      IF(.NOT.CILPRT)RETURN                                             CIL12500
C                                                                       CIL12600
      KOUNT = CODE(2)                                                   CIL12700
      CALL ICONV(COMAND,DARRAY,1,6)                                     CIL12800
      CALL ICONV(COUNT,DARRAY,7,6)                                      CIL12900
      CALL ICONV(CODE(1),DARRAY,13,6)                                   CIL13000
      CALL ICONV(CODE(2),DARRAY,19,6)                                   CIL13100
      L=3                                                               CIL13200
 1001 IF(KOUNT.LE.93) GO TO 1002                                        CIL13300
      CALL HOLFRM(CODE(L),DARRAY,27,92,NWD)                             CIL13400
      CALL CPRINT(DARRAY)                                               CIL13500
      KOUNT = KOUNT-92                                                  CIL13600
      L=L+23                                                            CIL13700
      GO TO 1001                                                        CIL13800
 1002 CALL HOLFRM (CODE(L),DARRAY,27,KOUNT,NWD)                         CIL13900
      CALL CPRINT(DARRAY)                                               CIL14000
      RETURN                                                            CIL14100
       END                                                              CIL14200
**** SOURCE FILE : M0006764.V01   ***
*
C                                                                       CPR00100
C              FORTRAN SUBROUTINE COMPRS                                CPR00200
C                                                                       CPR00300
C LINKAGE      SUBROUTINE COMPRS                                        CPR00400
C                                                                       CPR00500
C          SUBSIDIARIES                  CALLED BY                      CPR00600
C          TYPE          ENTRY           TYPE          ENTRY            CPR00700
C          SUBROUTINE    ACMPRS          SUBROUTINE    RLSLIN           CPR00800
C          SUBROUTINE    ICMPRS                                         CPR00900
C                                                                       CPR01000
      SUBROUTINE COMPRS                                                 CPR01100
C                                                                       CPR01200
      IMPLICIT INTEGER (A-Z)                                            CPR01300
C                                                                       CPR01400
C       14.    I. L. LIST OPTION FLAGS                                  CPR01500
C                                                                       CPR01600
      COMMON/PRT/PRT                                                    CPR01700
      LOGICAL INTERP,ASSEMB                                             CPR01800
      DIMENSION PRT(7)                                                  CPR01900
C INTERP:      NORMALLY TRUE,INDICATING INTERPRETIVE APPROACH DEFAULT   CPR02000
      EQUIVALENCE (INTERP,PRT(3))                                       CPR02100
C ASSEMB:      SET TRUE INDICATES ASSEMBLY APPROACH (CONTRL/ASMBLE)     CPR02200
      EQUIVALENCE (ASSEMB,PRT(4))                                       CPR02300
C*                                                                      CPR02400
      LOGICAL  PROSW                                                    CPR02500
      DATA     PROSW/.TRUE./                                            CPR02600
C**                                                                     CPR02700
      IF (PROSW) GO TO 100                                              CPR02800
C  10 IF(ASSEMB)CALL ACMPRS                                             CPR02900
C     IF(INTERP)CALL ICMPRS                                             CPR03000
   10 CALL ICMPRS                                                       CPR03100
      RETURN                                                            CPR03200
  100 PROSW=.FALSE.                                                     CPR03300
      CALL PROLOG                                                       CPR03400
      GO TO 10                                                          CPR03500
       END                                                              CPR03600
**** SOURCE FILE : M0006630.V01   ***
*
C                                                                       ELG00100
C              FORTRAN SUBROUTINE EPILOG                                ELG00200
C                                                                       ELG00300
C LINKAGE      SUBROUTINE EPILOG                                        ELG00400
C                                                                       ELG00500
C          SUBSIDIARIES                  CALLED BY                      ELG00600
C          TYPE          ENTRY           TYPE          ENTRY            ELG00700
C          SUBROUTINE    IEPLOG          SUBROUTINE    MACREC           ELG00800
C          SUBROUTINE    LIBOPC          SUBROUTINE    PRO026           ELG00900
C                                                                       ELG01000
      SUBROUTINE EPILOG                                                 ELG01100
C                                                                       ELG01200
      IMPLICIT INTEGER (A-Z)                                            ELG01300
C                                                                       ELG01400
C       14.    I. L. LIST OPTION FLAGS                                  ELG01500
C                                                                       ELG01600
      COMMON/PRT/PRT                                                    ELG01700
      LOGICAL INTERP,ASSEMB                                             ELG01800
      DIMENSION PRT(7)                                                  ELG01900
C INTERP:      NORMALLY TRUE,INDICATING INTERPRETIVE APPROACH DEFAULT   ELG02000
      EQUIVALENCE (INTERP,PRT(3))                                       ELG02100
C ASSEMB:      SET TRUE INDICATES ASSEMBLY APPROACH (CONTRL/ASMBLE)     ELG02200
      EQUIVALENCE (ASSEMB,PRT(4))                                       ELG02300
C                                                                       ELG02400
C       36.    SYSTEM MACRO AND SEGMENT READ VARIABLES                  ELG02500
C                                                                       ELG02600
      COMMON/MACSEG/MACSEG                                              ELG02700
      LOGICAL ALOPN                                                     ELG02800
      DIMENSION MACSEG(6)                                               ELG02900
C ALOPN:       TRUE AFTER MACRO OR PART PROGRAM SEGMENT LIBRARY OPENED  ELG03000
      EQUIVALENCE (ALOPN,MACSEG(1))                                     ELG03100
C**                                                                     ELG03200
C     IF(ASSEMB)CALL AEPLOG                                             ELG03300
      IF (INTERP) CALL IEPLOG                                           ELG03400
C...      TERMINATE TRANSLATION                                         ELG03500
      ASSEMB = .FALSE.                                                  ELG03600
      INTERP = .FALSE.                                                  ELG03700
      IF(ALOPN)CALL LIBOPC(2,IFLAG)                                     ELG03800
      RETURN                                                            ELG03900
       END                                                              ELG04000
**** SOURCE FILE : M0006637.W01   ***
*
C                                                                       ICP00100
C              FORTRAN SUBROUTINE ICMPRS                                ICP00200
C                                                                       ICP00300
C LINKAGE      SUBROUTINE ICMPRS                                        ICP00400
C                                                                       ICP00500
C          SUBSIDIARIES                  CALLED BY                      ICP00600
C          TYPE          ENTRY           TYPE          ENTRY            ICP00700
C          SUBROUTINE    CILOUT          SUBROUTINE    COMPRS           ICP00800
C          SUBROUTINE    ALARM           SUBROUTINE    IPRLOG           ICP00900
C          SUBROUTINE    HELP                                           ICP01000
C          SUBROUTINE    BINCHK                                         ICP01100
C          SUBROUTINE    RLSBUF                                         ICP01200
C                                                                       ICP01300
      SUBROUTINE ICMPRS                                                 ICP01400
C                                                                       ICP01500
      IMPLICIT INTEGER (A-Z)                                            ICP01600
C                                                                       ICP01700
C        1.    NAME TABLE AND TABLE LIMITS                              ICP01800
C                                                                       ICP01900
      INCLUDE 'NAMETB.INC'                                              ICP02010
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                ICP02050
C CNAMTB:      NAME TABLE OR DICTIONARY                                 ICP02150
C                                                                       ICP02400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      ICP02500
C                                                                       ICP02600
      COMMON/CODE/CODE                                                  ICP02700
      DIMENSION CODE(150),FCN(2),PROCED(2)                              ICP02800
C FCN:         (1)=CODE CLASS 18000,(2)=NAMTBL INDEX OF 'FCN   '        ICP02900
      EQUIVALENCE (FCN(1),CODE(35))                                     ICP03000
C PROCED:      (1)=CODE CLASS 19000,(2)=NAMTBL INDEX OF 'PROCED'        ICP03100
      EQUIVALENCE (PROCED(1),CODE(37))                                  ICP03200
C                                                                       ICP03210
C       17.    MODE CODES                                               ICP03220
C                                                                       ICP03230
      COMMON/MODX/MODX                                                  ICP03240
      DIMENSION MODX(32)                                                ICP03250
C REAL:        MODE CODE (21) FOR A SCALAR                              ICP03260
      EQUIVALENCE (REAL,MODX(21))                                       ICP03270
C BOOL:        MODE CODE (23) FOR BOOLEAN TYPE                          ICP03280
      EQUIVALENCE (BOOL,MODX(23))                                       ICP03290
C                                                                       ICP03300
C       19.    INTERMEDIATE LANGUAGE TEXT                               ICP03400
C                                                                       ICP03500
      COMMON/ILTEXT/ILTEXT                                              ICP03600
      DIMENSION ILTEXT(94),TEXTIN(90)                                   ICP03700
C TPNTRX:      POINTER TO LAST TEXTIN ENTRY                             ICP03800
      EQUIVALENCE (TPNTRX,ILTEXT(3))                                    ICP03900
C OPTEXT:      CONTAINS COMMAND CODE FOR CURRENT I.L. COMMAND           ICP04000
      EQUIVALENCE (OPTEXT,ILTEXT(4))                                    ICP04100
C TEXTIN:      STORAGE FOR CURRENTLY GENERATED I.L. COMMAND ARGUM.LIST  ICP04200
      EQUIVALENCE (TEXTIN(1),ILTEXT(5))                                 ICP04300
C                                                                       ICP04400
C       29.    CLASS CODE MODULI                                        ICP04500
C                                                                       ICP04600
      COMMON/MODULI/MODULI                                              ICP04700
      DIMENSION MODULI(2)                                               ICP04800
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    ICP04900
      EQUIVALENCE (MODULO,MODULI(1))                                    ICP05000
C                                                                       ICP05100
C       34.    COMMON BLOCK FOR INTERPRETIVE C.I.L. OUTPUT              ICP05200
C                                                                       ICP05300
      INCLUDE 'OUTBUF.INC'                                              ICP05400
C ICOM:        NUMBER OF WORDS OF BLANK COMMON REQUIRED BY LDA          ICP05800
C MACFLG:      TRUE WHEN MACRO PROCESSING IN EFFECT (INTERPRETER)       ICP06000
C LABFLG:      INDICATES I.L. COMMAND IS LABEL (INTERPRETER)            ICP06200
C RSVFLG:      TRUE IF I.L. COMMAND IS A RESRV (INTERPRETER)            ICP06400
C IBUF:        NUMBER OF RECORDS IN BUFFER ARRAY                        ICP06600
C PPPAGE:      PAGE NUMBER OF PART PROGRAMMING TEXT (INTERPRETER)       ICP06800
C MCPAGE:      NUMBER OF PAGES OF MACRO I.L. (INTERPRETER)              ICP07000
C IC:          NUMBER OF SCALARS IN BLOCK 1 OF CANONICAL FORMS          ICP07200
      INTEGER IC(4)                                                     ICP07210
      EQUIVALENCE (IC(1),ISC)                                           ICP07300
C*                                                                      ICP07400
      DIMENSION LABSAV(5)                                               ICP07500
      LOGICAL OPERCK,SEQFLG                                             ICP07700
      DATA BLKSIZ/128/                                                  ICP07750
      DATA OPERCK/.FALSE./,SEQFLG/.FALSE./                              ICP07800
C**                                                                     ICP07900
  100 IF(SEQFLG) GOTO 510                                               ICP08000
  120 GOTO (300,300,300,300,300,400,130,200,500,200,600,700,800,200,    ICP08100
     1      900,200,1000,1100,1200,200,1300),OPTEXT                     ICP08200
C                                                                       ICP08300
C...    ENTRY - NO OUTPUT                                               ICP08400
C                                                                       ICP08500
  130 RETURN                                                            ICP08600
C                                                                       ICP08700
C...     NO SPECIAL TREATMENT REQUIRED - OUTPUT USING CILOUT            ICP08800
C                                                                       ICP08900
  200 CALL CILOUT(OPTEXT,TPNTRX,TEXTIN)                                 ICP09000
      RETURN                                                            ICP09100
C                                                                       ICP09200
C...    LABEL - STORE I.L.                                              ICP09300
C                                                                       ICP09400
  400 LABSAV(1) = OPTEXT                                                ICP09500
      LABSAV(3) = TEXTIN(1)                                             ICP09600
C                                                                       ICP09700
C...     RELEASE I.L. BUFFER IF NECCESSARY                              ICP09800
C                                                                       ICP09900
      IF((IBUF+2).GT.254) CALL RLSBUF                                   ICP10000
      LABFLG = .TRUE.                                                   ICP10100
      IF (MACFLG) GOTO 410                                              ICP10200
      LABSAV(4)=PPPAGE+1                                                ICP10300
      GO TO 420                                                         ICP10400
C                                                                       ICP10500
C...     MACRO PROCESSING IN PROGRESS                                   ICP10600
C                                                                       ICP10700
  410 LABSAV(4) = -MCPAGE-1                                             ICP10800
  420 LABSAV(2) = 3                                                     ICP10900
      LABSAV(5)=IBUF+3                                                  ICP11000
      CALL CILOUT(LABSAV(1),LABSAV(2),LABSAV(3))                        ICP11100
      LABFLG = .FALSE.                                                  ICP11200
      CALL CILOUT(7,0,TEXTIN)                                           ICP11300
      RETURN                                                            ICP11400
C                                                                       ICP11500
C...     SEQNCE COMMAND - STORE I.L. AND SET SEQFLG                     ICP11600
C                                                                       ICP11700
  500 SEQNUM = TEXTIN(1)                                                ICP11800
      SEQFLG = .TRUE.                                                   ICP11900
      RETURN                                                            ICP12000
C                                                                       ICP12100
C...     RESRV COMMAND - INCREASE APPROPRIATE COUNT AND OUTPUT          ICP12200
C                                                                       ICP12300
  700 MODE=TEXTIN(2)                                                    ICP12400
      SIZ=TEXTIN(3)+1                                                   ICP12500
       N=TEXTIN(4)                                                      ICP12600
      IM=1                                                              ICP12700
      RSVFLG =.TRUE.                                                    ICP12800
C        MODE NON-SUBCRIPTED SCALAR                                     ICP12900
      IF(MODE.NE.REAL.AND.MODE.NE.BOOL.OR.N.NE.1) GOTO 701              ICP13000
      IM = 0                                                            ICP13100
      J = 1                                                             ICP13200
      GOTO 710                                                          ICP13300
C        MODE SUBSRIPTED SCALAR.                                        ICP13400
  701 IF((MODE.EQ.REAL).AND.(N.NE.1))J=2                                ICP13500
      IF((MODE.EQ.BOOL).AND.(N.NE.1))J=2                                ICP13510
C        MODE INTERNALLY GENERATED VARIABLE.                            ICP13600
      IF(MODE.NE.0) GOTO 705                                            ICP13700
      J = 4                                                             ICP13800
      SIZ = SIZ-1                                                       ICP13900
      IM = 0                                                            ICP14000
C        MODE BLANK COMMON.                                             ICP14100
 705  IF(MODE.LT.0) GOTO 760                                            ICP14200
C        MODE NON-SCALAR                                                ICP14300
      IF(MODE.GT.0.AND.MODE.NE.REAL.AND.MODE.NE.BOOL) J=3               ICP14400
C...     UP POINTER                                                     ICP14500
  710 JC=IC(J)+N*SIZ+IM                                                 ICP14600
C        WILL FORM FIT IN CURRENT BLOCK.                                ICP14700
      IF(IC(J)/BLKSIZ.EQ.JC/BLKSIZ) GOTO 720                            ICP14800
C        NO, SPLIT FORM IF INDEXED.                                     ICP14900
      LEFT=BLKSIZ-MOD(IC(J),BLKSIZ)                                     ICP15000
C        OBTAIN NO. OF ELEMENTS WHICH WILL FIT IN REST OF BLOCK         ICP15100
      M=(LEFT-1)/SIZ                                                    ICP15200
C        ENTIRE ARRAY CAN NOT FIT                                       ICP15300
      IF(M.EQ.N) M=M-1                                                  ICP15400
C        INCREASE POINTER, DECREASE  NO. OF ELEMENTS, ITERATE           ICP15500
      IC (J)=IC(J)+LEFT                                                 ICP15600
      N=N-M                                                             ICP15700
      GOTO 710                                                          ICP15800
  720 IC(J)=JC                                                          ICP15900
C                                                                       ICP16000
C...     OUTPUT IS TO EXFIL1                                            ICP16100
C                                                                       ICP16200
C.....   INTERNALLY GENERATED VARIABLES                                 ICP16300
  730 CALL CILOUT(OPTEXT,TPNTRX,TEXTIN)                                 ICP16400
      RSVFLG = .FALSE.                                                  ICP16500
      RETURN                                                            ICP16600
C                                                                       ICP16700
C....    BLANK COMMON                                                   ICP16800
C                                                                       ICP16900
  760 ICOM=ICOM+TEXTIN(3)                                               ICP17000
      GOTO 730                                                          ICP17100
C                                                                       ICP17200
C...     CALL COMMAND - FORM CORRECT PROCEDURE NUMBER                   ICP17300
C                                                                       ICP17400
 1100 ITEXT = TEXTIN(1)                                                 ICP17500
      GOTO 1110                                                         ICP17600
C                                                                       ICP17700
C...     CHECK ARGUMENT LIST FOR PROCEDURE INDICES                      ICP17800
C                                                                       ICP17900
 1120 OPERCK = .TRUE.                                                   ICP18000
      J = TPNTRX-1                                                      ICP18100
      DO 1130 I=2,J,2                                                   ICP18200
      IF (TEXTIN(I).NE.4) GOTO 1130                                     ICP18300
C                                                                       ICP18400
C...     THIS ARGUMENT IS A PROCEDURE INDEX                             ICP18500
C                                                                       ICP18600
      ITEXT = TEXTIN(I+1)                                               ICP18700
C                                                                       ICP18800
C...     FORM PROCEDURE NUMBER.                                         ICP18900
C...     ALL PROCEDURES HAVE A UNIQUE MODE, THEREFORE EACH PROCEDURE CANICP19000
C...     BE ASSIGNED A UNIQUE NUMBER.  THIS IS DONE IN ORDER THAT THE   ICP19100
C...     EXECUTION PHASE CAN CALL A PROCEDURE BY NUMBER.                ICP19200
C                                                                       ICP19300
 1110 PRONUM = NAMTBL(ITEXT)                                            ICP19400
      CALTYP = MODULO*(PRONUM/MODULO)                                   ICP19500
      PRONUM=PRONUM - CALTYP                                            ICP19600
C                                                                       ICP19700
C...     CALTYP IS THE CLASS OF THE PROCEDURE, AND SHOULD THEREFORE BE  ICP19800
C...     EITHER PROCED OR FCN                                           ICP19900
C                                                                       ICP20000
      IF ((CALTYP.NE.PROCED(1)).AND.(CALTYP.NE.FCN(1))) GOTO 9999       ICP20100
      IF(PRONUM.LT.500)GOTO 1125                                        ICP20200
      PRONUM = ITEXT + 1000                                             ICP20300
C...PRONUM IS NOW A POINTER TO THE PROCEDURE NUMBER                     ICP20400
C                                                                       ICP20500
C...     WAS THIS AN ARGUMENT                                           ICP20600
C                                                                       ICP20700
 1125 IF(.NOT.OPERCK) GOTO 1140                                         ICP20800
C                                                                       ICP20900
C...     YES. STORE PROCEDURE NUMBER AND CONTINUE LOOP                  ICP21000
C                                                                       ICP21100
      TEXTIN(I+1) = PRONUM                                              ICP21200
 1130 CONTINUE                                                          ICP21300
      OPERCK = .FALSE.                                                  ICP21400
      GOTO 1150                                                         ICP21500
C                                                                       ICP21600
C...     STORE PROCEDURE NUMBER AND START TO INSPECT ARGUMENT LIST      ICP21700
C                                                                       ICP21800
 1140 TEXTIN(1) = PRONUM                                                ICP21900
      IF (TPNTRX.GT.1) GOTO 1120                                        ICP22000
C                                                                       ICP22100
C...     OUTPUT I.L.                                                    ICP22200
C                                                                       ICP22300
C                                                                       ICP22400
C                                                                       ICP22500
C...     WAS THIS A CALL TO FINI. IF NOT RETURN                         ICP22600
C                                                                       ICP22700
 1160 IF(PRONUM.NE.18) GOTO 200                                         ICP22800
C                                                                       ICP22900
C...     CALL WAS TO FINI.                                              ICP23000
C...     FUTURE I.L. WILL BE MACRO TEXT.                                ICP23100
C                                                                       ICP23200
      CALL CILOUT(OPTEXT,TPNTRX,TEXTIN)                                 ICP23300
      CALL RLSBUF                                                       ICP23400
      MACFLG = .TRUE.                                                   ICP23500
      RETURN                                                            ICP23600
C                                                                       ICP23700
C...     LAST COMMAND WAS SEQUENCE, AND NOT OUTPUT.                     ICP23800
C...    IF THIS IS A LABEL COMMAND,OUTPUT THIS FIRST                    ICP23900
C                                                                       ICP24000
  510 IF(OPTEXT.EQ.6) GOTO 120                                          ICP24100
      CALL CILOUT(9,1,SEQNUM)                                           ICP24200
      SEQFLG=.FALSE.                                                    ICP24300
      GOTO 120                                                          ICP24400
C                                                                       ICP24500
C...     THE FOLLOWING CODE IS TO CHECK OPERANDS FOR THOSE WITH A       ICP24600
C...     MODIFIER OF 1, FOLLOWED BY AN INTEGER CONSTANT INDEX.          ICP24700
C...     THESE ARE TO BE CHANGED TO MODIFIER OF 5, FOLLOWED BY          ICP24800
C...     THE BINARY NUMBER ITSELF                                       ICP24900
C                                                                       ICP25000
C                                                                       ICP25100
C...     FADD,FSUB,FMPY,FDIV,FEXP                                       ICP25200
C                                                                       ICP25300
  300 CALL BINCHK(1)                                                    ICP25400
      CALL BINCHK(3)                                                    ICP25500
      CALL BINCHK(5)                                                    ICP25600
      GOTO 200                                                          ICP25700
C                                                                       ICP25800
C...     CONJMP                                                         ICP25900
C                                                                       ICP26000
  600 CALL BINCHK(1)                                                    ICP26100
      GOTO 200                                                          ICP26200
C                                                                       ICP26300
C...     CVTSUB                                                         ICP26400
C                                                                       ICP26500
  800 CALL BINCHK(5)                                                    ICP26600
      GOTO 200                                                          ICP26700
C                                                                       ICP26800
C...     ASNADD                                                         ICP26900
C                                                                       ICP27000
  900 GOTO  1120                                                        ICP27100
C                                                                       ICP27200
C                                                                       ICP27300
C...     REPL                                                           ICP27400
C                                                                       ICP27500
 1000 CALL BINCHK(4)                                                    ICP27600
      GOTO 200                                                          ICP27800
C                                                                       ICP27900
C...     CALL                                                           ICP28000
C                                                                       ICP28100
 1150 J = TPNTRX-1                                                      ICP28200
      DO 1170 I=2,J,2                                                   ICP28300
 1170 CALL BINCHK(I)                                                    ICP28400
      GOTO 1160                                                         ICP28500
C                                                                       ICP28600
C...     MOVE                                                           ICP28700
C                                                                       ICP28800
 1200 J = TPNTRX-1                                                      ICP28900
      DO 1210 I=3,J,2                                                   ICP29000
 1210 CALL BINCHK(I)                                                    ICP29100
      GOTO 200                                                          ICP29200
C                                                                       ICP29300
C...     HOLDAT STATEMENT                                               ICP29400
C                                                                       ICP29500
 1300 J = 4                                                             ICP29600
      SIZ = (TPNTRX+1)/2                                                ICP29700
      N = 1                                                             ICP29800
      IM=0                                                              ICP29900
      GOTO 710                                                          ICP30000
C                                                                       ICP30100
C...     SUPPOSED PROCEDURE DOES NOT HAVE CLASS PROCED OR FCN           ICP30200
C                                                                       ICP30300
 9999 CALL ALARM(38,0,8,'ICMPRS  ')                                     ICP30400
      CALL HELP                                                         ICP30500
      RETURN                                                            ICP30600
       END                                                              ICP30700
**** SOURCE FILE : M0006636.W02   ***
*
C                                                                       IEG00100
C              FORTRAN SUBROUTINE IEPLOG                                IEG00200
C                                                                       IEG00300
C LINKAGE      SUBROUTINE IEPLOG                                        IEG00400
C                                                                       IEG00500
C          SUBSIDIARIES                  CALLED BY                      IEG00600
C          TYPE          ENTRY           TYPE          ENTRY            IEG00700
C          SUBROUTINE    AWRITE          SUBROUTINE    EPILOG           IEG00800
C          SUBROUTINE    MCXTRN                                         IEG00900
C          SUBROUTINE    NTSHFT                                         IEG01000
C          SUBROUTINE    RLSBUF                                         IEG01100
C          SUBROUTINE    TAPOP                                          IEG01200
C                                                                       IEG01300
      SUBROUTINE IEPLOG                                                 IEG01400
C                                                                       IEG01500
      IMPLICIT INTEGER (A-Z)                                            IEG01600
C                                                                       IEG01700
C        1.    NAME TABLE AND TABLE LIMITS                              IEG01800
C                                                                       IEG01900
      INCLUDE 'NAMETB.INC'                                              IEG02010
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                IEG02050
C CNAMTB:      NAME TABLE OR DICTIONARY                                 IEG02150
C INAMST:      BEGIN GEOMETRIC DEFINITION ROUTINE NAME SECTION(NAMTBL)  IEG02200
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     IEG02400
C IFIXST:      NAMTBL INDEX OF BEGINNING OF FIXED POINT NUMBER SECTION  IEG02600
C IFIXND:      NAMTBL INDEX OF START OF FIXED POINT NUMBER SECTION      IEG02800
C NUMBST:      NAMTBL INDEX OF BEGINNING OF NUMBER SECTION              IEG03000
C NUMBND:      NAMTBL INDEX OF END OF NUMBER SECTION                    IEG03200
C                                                                       IEG03600
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    IEG03700
C                                                                       IEG03800
      COMMON/CFSIZE/CFSIZE                                              IEG03900
      DIMENSION CFSIZE(205),MAXSIZ(2)                                   IEG04000
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                IEG04100
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 IEG04200
C                                                                       IEG04300
C       14.    I. L. LIST OPTION FLAGS                                  IEG04400
C                                                                       IEG04500
      COMMON/PRT/PRT                                                    IEG04600
      LOGICAL CILPRT                                                    IEG04700
      DIMENSION PRT(7)                                                  IEG04800
C CILPRT:      TRUE WHEN COMPRESSED I.L. PRINTING REQUESTED             IEG04900
      EQUIVALENCE (CILPRT,PRT(1))                                       IEG05000
C                                                                       IEG05100
C       33.    SYMBOLIC FILE DEFINITIONS                                IEG05200
C                                                                       IEG05300
      INCLUDE 'SYMFIL.INC'                                              IEG05410
C MACTXT:      EXTERNAL FILE  OF MACRO TEXT                             IEG05600
C ELFIL1:      PACKING FACTOR FOR CREATING PAGES (INTERPRETER)          IEG05800
C ELFIL2:      PART PROGRAMMING TEXT GENERATED BY INTERPRETER           IEG06000
C ELFIL3:      MACRO TEXT GENERATED FOR INTERPRETER                     IEG06200
C ELFIL4:      MACRO TEXT GENERATED FOR INTERPRETER                     IEG06400
C                                                                       IEG06600
C       34.    COMMON BLOCK FOR INTERPRETIVE C.I.L. OUTPUT              IEG06700
C                                                                       IEG06800
      INCLUDE 'OUTBUF.INC'                                              IEG06910
C PAGPAK:      PACKING FACTOR FOR CREATING PAGES (INTERPRETER)          IEG07300
C MACFLG:      TRUE WHEN MACRO PROCESSING IN EFFECT (INTERPRETER)       IEG07500
C LABFLG:      INDICATES I.L. COMMAND IS LABEL (INTERPRETER)            IEG07700
C PPPAGE:      PAGE NUMBER OF PART PROGRAMMING TEXT (INTERPRETER)       IEG07900
C MCPAGE:      NUMBER OF PAGES OF MACRO I.L. (INTERPRETER)              IEG08100
      INTEGER BUF(23),JBUF(11),INUMB,INAME                              IEG08210
      LOGICAL LCILPR                                                    IEG08220
      EQUIVALENCE (BUF(1),PAGPAK)                                       IEG08230
C INUMB:       NUMBER OF ITEMS IN THE LABBUF ARRAY (INTERPRETER)        IEG08300
      EQUIVALENCE (INUMB,JBUF(1),BUF(13))                               IEG08400
C INAME:                                                                IEG08500
      EQUIVALENCE (INAME,JBUF(2))                                       IEG08600
C LCILPR:                                                               IEG08700
      EQUIVALENCE (LCILPR,JBUF(6))                                      IEG08800
C                                                                       IEG08900
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          IEG09000
C                                                                       IEG09100
      COMMON/NTBL/NTBL                                                  IEG09200
      DIMENSION NTBL(6)                                                 IEG09300
C NMOD:        NUMBER OF ENTRIES PERMITTED IN INTERNAL NUMBER TABLE     IEG09400
      EQUIVALENCE (NMOD,NTBL(1))                                        IEG09500
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE IEG09600
      EQUIVALENCE (NLAST,NTBL(4))                                       IEG09700
C NSTR:        NUMBER OF FIRST MACTXT RECORD AVAILABLE FOR NUMBER TABLE IEG09800
      EQUIVALENCE (NSTR,NTBL(5))                                        IEG09900
C                                                                       IEG09905
C       45.    NUMBER TABLE INDICES                                     IEG09910
C                                                                       IEG09915
      INCLUDE 'NUMBLK.INC'                                              IEG09920
C MNMBND:      LAST NAME TABLE ENTRY TO MACRO ASSIGNED NUMBER SECTION   IEG09930
C*                                                                      IEG10000
C**                                                                     IEG10200
C...     CLEAR BUFFERS AND REWIND FILES 2 AND 3                         IEG10300
C                                                                       IEG10400
      IF (.NOT.MACFLG) GOTO 1                                           IEG10500
      CALL RLSBUF                                                       IEG10600
      CALL TAPOP (ELFIL3,-2)                                            IEG10700
    1 LABFLG = .TRUE.                                                   IEG10800
      CALL RLSBUF                                                       IEG10900
      CALL TAPOP(ELFIL2,-2)                                             IEG11000
      CALL TAPOP(ELFIL1,-2)                                             IEG11100
C                                                                       IEG11200
C...       ALL USEFUL ITEMS IN THE NAMTBL ARE STORED IN BUFFER          IEG11300
C...       TOGETHER WITH ALL RELEVANT PARAMETERS                        IEG11400
C                                                                       IEG11500
      INAME = NAMMAX - INAMST + 1                                       IEG11600
      INUMB = MNMBND-IFIXST+1                                           IEG11700
      JBUF(3)=PPPAGE                                                    IEG12900
      JBUF(4)=MCPAGE                                                    IEG13000
      JBUF(5)=INAMST                                                    IEG13100
      LCILPR=CILPRT                                                     IEG13200
      JBUF(7)=NUMBST                                                    IEG13300
      JBUF(8)=NLAST                                                     IEG13400
      JBUF(9)=NSTR                                                      IEG13500
      JBUF(10)=MAXSIZ(1)                                                IEG13600
      JBUF(11)=MAXSIZ(2)                                                IEG13700
      IREC=0                                                            IEG13800
      CALL AWRITE(ELFIL4,IREC,BUF,23,IRET)                              IEG13900
C                                                                       IEG14000
C...     WRITE NAME TABLE                                               IEG14100
      IREC=0                                                            IEG14200
C...  4TH ARGUMENT OF CHWRIT IS NUMBER OF BYTES                         IEG14210
      I = INAME*6                                                       IEG14400
      CALL CHWRIT(ELFIL4,IREC,CNAMTB(INAMST),I,IRET)                    IEG14500
C...  4TH ARGUMENT OF CHWRIT IS NUMBER OF BYTES                         IEG14610
      I = INUMB*12                                                      IEG14700
      IREC=0                                                            IEG14800
      CALL CHWRIT(ELFIL4,IREC,CNUMTB(IFIXST),  I  ,IRET)                IEG14900
C                                                                       IEG16400
C...     ALL TABLES AND PARAMETERS NOW WRITTEN.  REWIND FILES 4 AND 9.  IEG16500
C                                                                       IEG16600
      CALL TAPOP(ELFIL4,-2)                                             IEG16700
      CALL TAPOP(MACTXT,-3)                                             IEG16800
      RETURN                                                            IEG16900
       END                                                              IEG17000
**** SOURCE FILE : M0006642.V03   ***
*
C                                                                       IPG00100
C              FORTRAN SUBROUTINE IPRLOG                                IPG00200
C                                                                       IPG00300
C LINKAGE      SUBROUTINE IPRLOG                                        IPG00400
C                                                                       IPG00500
C          SUBSIDIARIES                  CALLED BY                      IPG00600
C          TYPE          ENTRY           TYPE          ENTRY            IPG00700
C          SUBROUTINE    ICMPRS          SUBROUTINE    PROLOG           IPG00800
C          INTEGER FCT.  NAME                                           IPG00900
C                                                                       IPG01000
      SUBROUTINE IPRLOG                                                 IPG01100
C                                                                       IPG01200
      IMPLICIT INTEGER (A-Z)                                            IPG01300
C                                                                       IPG01400
C       19.    INTERMEDIATE LANGUAGE TEXT                               IPG01500
C                                                                       IPG01600
      COMMON/ILTEXT/ILTEXT                                              IPG01700
      DIMENSION ILTEXT(94),TEXTIN(90)                                   IPG01800
C TPNTRX:      POINTER TO LAST TEXTIN ENTRY                             IPG01900
      EQUIVALENCE (TPNTRX,ILTEXT(3))                                    IPG02000
C OPTEXT:      CONTAINS COMMAND CODE FOR CURRENT I.L. COMMAND           IPG02100
      EQUIVALENCE (OPTEXT,ILTEXT(4))                                    IPG02200
C TEXTIN:      STORAGE FOR CURRENTLY GENERATED I.L. COMMAND ARGUM.LIST  IPG02300
      EQUIVALENCE (TEXTIN(1),ILTEXT(5))                                 IPG02400
C**                                                                     IPG02500
      CHARACTER*6 S21TS1                                                IPG02600
      DATA S21TS1/'$21T$1'/                                             IPG02610
C                                                                       IPG02700
      CALL ICMPRS                                                       IPG02800
      OPTEXT = 12                                                       IPG02900
      TPNTRX=4                                                          IPG03000
      TEXTIN(1)=NAME(S21TS1)                                            IPG03100
      TEXTIN(2) =21                                                     IPG03200
      TEXTIN(3)= 1                                                      IPG03300
      TEXTIN(4)= 1                                                      IPG03400
      RETURN                                                            IPG03500
      END                                                               IPG03600
**** SOURCE FILE : M0006664.V01   ***
*
C                                                                       PLG00100
C              FORTRAN SUBROUTINE PROLOG                                PLG00200
C                                                                       PLG00300
C LINKAGE      SUBROUTINE PROLOG                                        PLG00400
C                                                                       PLG00500
C          SUBSIDIARIES                  CALLED BY                      PLG00600
C          TYPE          ENTRY           TYPE          ENTRY            PLG00700
C          SUBROUTINE    IPRLOG          SUBROUTINE    COMPRS           PLG00800
C                                                                       PLG00900
      SUBROUTINE PROLOG                                                 PLG01000
C                                                                       PLG01100
      IMPLICIT INTEGER (A-Z)                                            PLG01200
C                                                                       PLG01300
C       14.    I. L. LIST OPTION FLAGS                                  PLG01400
C                                                                       PLG01500
      COMMON/PRT/PRT                                                    PLG01600
      LOGICAL INTERP                                                    PLG01700
      DIMENSION PRT(7)                                                  PLG01800
C INTERP:      NORMALLY TRUE,INDICATING INTERPRETIVE APPROACH DEFAULT   PLG01900
      EQUIVALENCE (INTERP,PRT(3))                                       PLG02000
C**                                                                     PLG02100
C     IF(ASSEMB)CALL APRLOG                                             PLG02200
      IF(INTERP)CALL IPRLOG                                             PLG02300
      RETURN                                                            PLG02400
       END                                                              PLG02500
**** SOURCE FILE : M0006681.V05   ***
*
C                                                                       RLB00100
C              FORTRAN SUBROUTINE RLSBUF                                RLB00200
C                                                                       RLB00300
C LINKAGE      SUBROUTINE RLSBUF                                        RLB00400
C                                                                       RLB00500
C          SUBSIDIARIES                  CALLED BY                      RLB00600
C          TYPE          ENTRY           TYPE          ENTRY            RLB00700
C          SUBROUTINE    AWRITE          SUBROUTINE    CILOUT           RLB00800
C                                        SUBROUTINE    ICMPRS           RLB00900
C                                        SUBROUTINE    IEPLOG           RLB01000
C                                                                       RLB01100
      SUBROUTINE RLSBUF                                                 RLB01200
C                                                                       RLB01300
      IMPLICIT INTEGER (A-Z)                                            RLB01400
C                                                                       RLB01500
C       33.    SYMBOLIC FILE DEFINITIONS                                RLB01600
C                                                                       RLB01700
      INCLUDE 'SYMFIL.INC'                                              RLB01810
C ELFIL1:          INTERMEDIATE LANGUAGE FILE                           RLB02000
C ELFIL2:          PART PROGRAMMING TEXT GENERATED BY INTERPRETER       RLB02200
C ELFIL3:          MACRO TEXT GENERATED FOR INTERPRETER                 RLB02400
C                                                                       RLB02600
C       34.    COMMON BLOCK FOR INTERPRETIVE C.I.L. OUTPUT              RLB02700
C                                                                       RLB02800
      INCLUDE 'OUTBUF.INC'                                              RLB02910
C MACFLG:      TRUE WHEN MACRO PROCESSING IN EFFECT (INTERPRETER)       RLB03300
C LABFLG:      INDICATES I.L. COMMAND IS LABEL (INTERPRETER)            RLB03500
C RSVFLG:      TRUE IF I.L. COMMAND IS A RESRV (INTERPRETER)            RLB03700
C LPAGE:       NUMBER OF PAGES OF ENTRY,HOLDAT,LABEL AND RESRV COMMANDS RLB03900
C IBUF:        NUMBER OF RECORDS IN BUFFER ARRAY                        RLB04100
C ILBUF:       NUMBER OF ITEMS IN THE LABBUF ARRAY (INTERPRETER)        RLB04300
C PPPAGE:      PAGE NUMBER OF PART PROGRAMMING TEXT (INTERPRETER)       RLB04500
C MCPAGE:      NUMBER OF PAGES OF MACRO I.L. (INTERPRETER)              RLB04700
C BUFFER:      TEMPORARY STORAGE FOR INTERPRETER OUTPUT (PAGES)         RLB04900
C LABBUF:      TEMPORARY STORAGE FOR LABEL,HOLDAT ENTRY AND RESRV I.L.  RLB05100
C*                                                                      RLB05300
      INTEGER ZERO                                                      RLB05400
      DATA ZERO/0/                                                      RLB05410
C**                                                                     RLB05500
C...     TEST WHETHER THIS IS LABEL AND RESRV CODE                      RLB05600
C                                                                       RLB05700
      IF ((LABFLG).OR.(RSVFLG)) GOTO 100                                RLB05800
C                                                                       RLB05900
C                                                                       RLB06000
      IF(IBUF.EQ.0) RETURN                                              RLB06100
C                                                                       RLB06200
C...     NO. IS IT MACRO CODE                                           RLB06300
C                                                                       RLB06400
      IF (MACFLG) GOTO 300                                              RLB06500
C                                                                       RLB06600
C...     NO. THIS IS PART-PROGRAM CODE AND IS WRITTEN TO FILE 2         RLB06700
C...     FORM MARKER WORD, AND UPDATE PAGE COUNT                        RLB06800
C                                                                       RLB06900
  200 PPPAGE = PPPAGE+1                                                 RLB07000
      N=0                                                               RLB07100
      BUFFER(1) = PPPAGE                                                RLB07200
      BUFFER(2) = IBUF                                                  RLB07300
      CALL AWRITE(ELFIL2,N,BUFFER,256,IRET)                             RLB07400
C                                                                       RLB07500
C...     RESET BUFFER POINTER AND RETURN                                RLB07600
C                                                                       RLB07700
  210 IBUF = 0                                                          RLB07800
      RETURN                                                            RLB07900
C                                                                       RLB08000
C...     MACRO CODE IS WRITTEN TO FILE 3                                RLB08100
C...     FORM MARKER WORD, AND UPDATE PAGE COUNT                        RLB08200
C                                                                       RLB08300
  300 MCPAGE = MCPAGE+1                                                 RLB08400
      N=0                                                               RLB08500
      BUFFER(1) = -MCPAGE                                               RLB08600
      BUFFER(2) = IBUF                                                  RLB08700
      CALL AWRITE(ELFIL3,N,BUFFER,256,IRET)                             RLB08800
      GOTO 210                                                          RLB08900
C                                                                       RLB09000
C...     LABEL AND RESRV CODE IS WRITTEN TO FILE 1                      RLB09100
C...     ITS PAGES HAVE ZERO PAGE NUMBERS                               RLB09200
C                                                                       RLB09300
  100 LPAGE = LPAGE+1                                                   RLB09400
      N=0                                                               RLB09500
      LABBUF(1) = ZERO                                                  RLB09600
      LABBUF(2) = ILBUF                                                 RLB09700
      CALL AWRITE(ELFIL1,N,LABBUF,256,IRET)                             RLB09800
C                                                                       RLB09900
C...     RESET BUFFER POINTER AND RETURN                                RLB10000
C                                                                       RLB10100
      ILBUF = 0                                                         RLB10200
      RETURN                                                            RLB10300
       END                                                              RLB10400
**** MODULE = XECUTION ****
**** SOURCE FILE : M0000746.V03   ***
*
C                                                                       ADV00001
C.....FORTRAN ROUTINE              ..ADV..     HL GRAY 3/68         *ID*ADV00002
      SUBROUTINE ADV                                                    ADV00010
C                                                                       ADV00020
C FORTRAN SUBROUTINE ADV --- ADVANCE LOCATION COUNTER                   ADV00030
C                                                                       ADV00040
C PURPOSE      'ADV'    ADVANCES THE INTERPRETER PSEUDOLOCATION         ADV00050
C              COUNTER, 'ILC' BY ONE INTERMEDIATE LANGUAGE INSTRUCTION. ADV00060
C              OTHER DEPENDENT VARIABLES ARE SET TO CORRESPONDING       ADV00070
C              VALUES.                                                  ADV00080
C                                                                       ADV00090
C LINKAGE      CALL ADV                                                 ADV00100
C                                                                       ADV00110
C ARGUMENTS    THROUGH COMMON                                           ADV00120
C                                                                       ADV00130
C NOTES        THIS ROUTINE IS QUITE SIMILAR TO 'SET'   .  THE MAIN     ADV00140
C              DIFFERENCE IS THAT 'ADV'    DOES NOT EXAMINE VARIABLES   ADV00150
C              DEPENDING ON THE PSEUDOLOCATION COUNTER UNTIL A PAGE     ADV00160
C              BREAK OCCURS.                                            ADV00170
C                                                                       ADV00180
C METHOD       THE PSEUDOLOCATION COUNTER IS ADVANCED BY THE LENGTH     ADV00190
C              OF THE INSTRUCTION JUST PROCESSED.  IF THE PAGE BREAK    ADV00200
C              OCCURS, SUITABLE RESETTING OCCURS.                       ADV00210
C                                                                       ADV00220
C--------------------------------------------------------------CDE PAK  ADV00230
C                                                                       ADV00240
C                                                                       ADV00250
C                                                                       ADV00260
C UNLABELED COMMON                                                      ADV00270
C                                                                       ADV00280
C                                                                       ADV00290
      INCLUDE 'BLANKCOM.INC'                                            ADV00372
      INCLUDE 'INTRPEQ.INC'                                             ADV00374
C                                                                       ADV00380
C                                                                       ADV00390
C                                                                       ADV00400
C WORK--COMMON CONTAINING WORKING VARIABLES                             ADV00410
C                                                                       ADV00420
C                                                                       ADV00430
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   ADV00440
      INTEGER       PGC,      PGCN,     ILC,      IXC                   ADV00450
C                                                                       ADV00460
C                                                                       ADV00470
C                                                                       ADV00480
C                                                                       ADV00490
C---------------------------------------------------------------------  ADV00500
C                                                                       ADV00510
      INTEGER K                                                         ADV00520
      EXTERNAL PAGE                                                     ADV00530
      INTEGER  PAGE                                                     ADV00540
C                                                                       ADV00550
C                                                                       ADV00560
C                                                                       ADV00570
C        ADVANCE INDEX                                                  ADV00580
C                                                                       ADV00590
      K=PP(ILC+1)+2                                                     ADV00600
      IXC = IXC + K                                                     ADV00610
C                                                                       ADV00620
C        TEST--HAS PAGE BREAK OCCURRED                                  ADV00630
C                                                                       ADV00640
      IF ( IXC .GT. PGCN) GO TO 50                                      ADV00650
C                                                                       ADV00660
C        NO.  UPDATE LOCATION COUNTER, THEN RETURN                      ADV00670
C                                                                       ADV00680
      ILC = ILC + K                                                     ADV00690
C                                                                       ADV00700
C                                                                       ADV00710
      RETURN                                                            ADV00720
C                                                                       ADV00730
C                                                                       ADV00740
C        ADVANCE LOCATION COUNTER TO BEGINING OF NEW PAGE               ADV00750
C                                                                       ADV00760
 50   IF(PGC.LT.0)GOTO 60                                               ADV00770
      ILC = PAGE(PGC+1)                                                 ADV00780
C                                                                       ADV00790
C        UPDATE PAGE NUMBER                                             ADV00800
      PGC = PGC + 1                                                     ADV00810
      GO TO 70                                                          ADV00820
C                                                                       ADV00830
 60   ILC = PAGE(PGC-1)                                                 ADV00840
C                                                                       ADV00850
C        UPDATE PAGE NUMBER                                             ADV00860
      PGC = PGC -1                                                      ADV00870
C                                                                       ADV00880
C        EXTRAC NUMBER OF WORDS ON THIS PAGE                            ADV00890
 70   PGCN = PP(ILC+1)+2                                                ADV00900
C                                                                       ADV00910
C                                                                       ADV00920
C        SET LOCATION COUNTER TO FIRST INSTRUCTION                      ADV00930
C                                                                       ADV00940
      ILC = ILC + 2                                                     ADV00950
C                                                                       ADV00960
C        RESET INDEX                                                    ADV00970
C                                                                       ADV00980
      IXC = 3                                                           ADV00990
C                                                                       ADV01000
      RETURN                                                            ADV01010
      END                                                               ADV01020
**** SOURCE FILE : M0000882.V04   ***
*
C.....FORTRAN BLOCK DATA ROUTINE  ...DATA    8/68                 HG    DAT00001
C.....FORTRAN ROUTINE              ..DATA..    HL GRAY 3/68         *ID*DAT00002
      BLOCK DATA DAT0                                                   DAT00010
C                                                                       DAT00020
C                                                                       DAT00030
C                                                                       DAT00040
C                                                                       DAT00050
C ABBREVIATIONS AND TERMS                                               DAT00060
C                                                                       DAT00070
C                                                                       DAT00080
C                                                                       DAT00090
C                                                                       DAT00100
C     THE FOLLOWING ABBREVIATIONS AND TERMS ARE USED THROUGHOUT THE     DAT00110
C     CODING OF THE INTERPRETER.  IN GENERAL, TERMS ARE FORMED BY       DAT00120
C     CONCATENATING ROOT WORDS.  FOR EXAMPLE                            DAT00130
C                                                                       DAT00140
C              NT        FOR NAME TABLE                                 DAT00150
C              P         FOR POINTER                                    DAT00160
C                                                                       DAT00170
C     FORM                                                              DAT00180
C                                                                       DAT00190
C              NTP       NAME TABLE POINTER                             DAT00200
C                                                                       DAT00210
C     AND ARE PRESENTED IN THIS GLOSSARY AS                             DAT00220
C                                                                       DAT00230
C              NT.P                                                     DAT00240
C                                                                       DAT00250
C     WHERE THE PERIODS INDICATE THE CONCATENATION AS A MEMORY AID.     DAT00260
C                                                                       DAT00270
C                                                                       DAT00280
C                                                                       DAT00290
C                                                                       DAT00300
C TERM         DEFINITION                                          TYPE DAT00310
C                                                                       DAT00320
C                                                                       DAT00330
C A            ARRAY                                             MIXED  DAT00340
C                                                                       DAT00345
C AVT          ACTUAL VS VIRTUAL ADDRESS TABLE                          DAT00350
C                                                                       DAT00355
C B            BEGINNING (USUALLY OF AN ARRAY)                     I    DAT00360
C                                                                       DAT00370
C C            CURRENT                                                  DAT00380
C                                                                       DAT00390
C CF           CANONICAL FORM                                      D    DAT00400
C                                                                       DAT00410
C CF.B         CANONICAL FORM TABLE BEGINNING                      I    DAT00420
C                                                                       DAT00430
C CF.E         CANONICAL FORM TABLE END                            I    DAT00440
C                                                                       DAT00450
C CF.N         CANONICAL FORM TABLE LENGTH                         I    DAT00460
C                                                                       DAT00470
C CF.P         CANONICAL FORM TABLE POINTER                        I    DAT00480
C                                                                       DAT00483
C CILPRT       PRINT COMPRESSED I.L. FLAG                               DAT00486
C                                                                       DAT00490
C COM          STORAGE (BLANK COMMON)                              D    DAT00500
C                                                                       DAT00510
C COM.B        STORAGE BEGINNING                                   I    DAT00520
C                                                                       DAT00530
C COM.E        STORAGE END                                         I    DAT00540
C                                                                       DAT00550
C COM.N        TOTAL LENGTH OF COMMON                                   DAT00560
C                                                                       DAT00570
C COM.P        STORAGE POINTER                                     I    DAT00580
C                                                                       DAT00590
C COM.S        SIZE OF ASSIGNED STORAGE FOR COMMON                      DAT00600
C                                                                       DAT00610
C CM           STORAGE (BLANK COMMON) SAME AS COM)                 I    DAT00620
C                                                                       DAT00630
C E            END (USUALLY OF AN ARRAY)                           I    DAT00640
C                                                                       DAT00650
C FP           FLOATING POINT NUMBER TABLE                         D    DAT00660
C                                                                       DAT00670
C FP.B         FLOATING POINT TABLE BEGINNING                      I    DAT00680
C                                                                       DAT00690
C FP.E         FLOATING POINT TABLE END                            I    DAT00700
C                                                                       DAT00710
C FP.N         FLOATING POINT TABLE LENGTH                         I    DAT00720
C                                                                       DAT00730
C FP.P         FLOATING POINT TABLE POINTER                        I    DAT00740
C                                                                       DAT00750
C IA           INTERNAL ARRARY                                     D    DAT00760
C                                                                       DAT00770
C IA.B         INTERNAL ARRAY BEGINNING                            I    DAT00780
C                                                                       DAT00790
C IA.P         INTERNAL ARRAY POINTER                              I    DAT00800
C                                                                       DAT00810
C IL           INTERMEDIATE LANGUAGE INSTRUCTION.  AN N-TUPLE      I    DAT00820
C              WHOSE FORM IS SHOWN UNDER STRUCTURE.                     DAT00830
C                                                                       DAT00840
C IL.C         POSITION OF CURRENT INTERMEDIATE LANGUAGE           I    DAT00850
C              INSTRUCTION RELATIVE TO PART PROGRAM BEGINNING           DAT00860
C                                                                       DAT00870
C IX           INDEX.  POINTER RELATIVE TO BEGINNING OF PAGE.      I    DAT00880
C              FIRST WORD OF PAGE HAS ZERO INDEX.                       DAT00890
C                                                                       DAT00900
C IX.C         POSITION OF CURRENT INTERMEDIATE LANGUAGE           I    DAT00910
C              INSTRUCTION RELATIVE TO BEGINNING OF CURRENT PAGE        DAT00920
C                                                                       DAT00930
C K.           INTRODUCES A CONSTANT                                    DAT00940
C                                                                       DAT00942
C K.CB.N       EXTERNAL CANNON BLOCK LENGTH                             DAT00944
C                                                                       DAT00950
C K.COM.F      LENGTH OF FIXED PORTION OF COMMON                        DAT00960
C                                                                       DAT00970
C K.COM.T      LENGTH OF TEMPORARY PORTION OF COMMON                    DAT00975
C                                                                       DAT00976
C K.IL.N       CONSTANT WHICH ADDED TO NUMBER OF PARAMETERS IN     I    DAT00980
C              ANY INTERMEDIATE LANGUAGE INSTRUCTION GIVES LENGTH       DAT00990
C              OF THAT INSTRUCTION IN WORDS.                            DAT01000
C                                                                       DAT01010
C K.IL.P       POSITION RELATIVE TO BEGINNING OF INSTRUCTION  OF   I    DAT01020
C              THE WORD CONTAINING NUMBER OF PARAMETERS IN THE          DAT01030
C              INSTRUCTION.                                             DAT01040
C                                                                       DAT01050
C K.IL.1       POSTION RELATIVE TO BEGINNING OF PAGE OF FIRST           DAT01060
C              INSTRUCTION.                                             DAT01070
C                                                                       DAT01080
C K.NT.P       CORRECTION TO NAME TABLE POINTER TO EFFECT               DAT01090
C              PART PROGRAM CORRESPONDENCE                              DAT01100
C                                                                       DAT01110
C K.MT.ST      MACRO TEXT FITS IN MEMORY                           L    DAT01120
C                                                                       DAT01130
C K.PG.LN      PAGE TO LINE PACKING FACTOR                         I    DAT01140
C                                                                       DAT01150
C K.PG.N       PAGE LENGTH                                         I    DAT01160
C K.PK.M       PACKING FACTOR FOR MODE                             I    DAT01170
C                                                                       DAT01180
C K.PK.S       PACKING FACTOR FOR SIZE                             I    DAT01190
C                                                                       DAT01200
C                                                                       DAT01210
C K.PP.ST      PART PROGRAM FITS IN MEMORY (INCLUDING MACRO TEXT)  L    DAT01220
C                                                                       DAT01240
C                                                                       DAT01250
C LN           LINE = (PAGE,INDEX)ING FACTOR) + INDEX              I    DAT01260
C                                                                       DAT01270
C LN.A         LINE ARRAY.  CONTAINS LINE NUMBERS FOR              I    DAT01280
C                                                                       DAT01290
C LN.C         CURRENT LINE NUMBER   GC*KPGLN + IXC)               I    DAT01300
C                                                                       DAT01310
C MT           MACRO TEXT (A PORTION OF THE PART PROGRAM)          H    DAT01320
C                                                                       DAT01330
C MT.B         MACRO TEXT BEGINNING                                I    DAT01340
C                                                                       DAT01350
C MT.E         MACRO TEXT END                                      I    DAT01360
C                                                                       DAT01370
C MT.N         MACRO TEXT LENGTH                                   I    DAT01380
C                                                                       DAT01390
C N            LENGTH (USUALLY OF AN ARRAY)                        I    DAT01400
C                                                                       DAT01410
C NB           NAME TABLE (SAME AS NT)                             D    DAT01420
C                                                                       DAT01425
C NBLK         NUMBER OF BLOCKS OF CANNON ALLOWED                       DAT01430
C                                                                       DAT01435
C NS           NONSCALAR ARRAY                                     D    DAT01440
C                                                                       DAT01450
C NS.B         NONSCALAR ARRAY BEGINNING                           I    DAT01460
C                                                                       DAT01470
C NS.P         NONSCALAR ARRAY POINTER                             I    DAT01480
C                                                                       DAT01490
C NT           NAME TABLE                                          I    DAT01500
C                                                                       DAT01510
C NT.B         NAME TABLE BEGINNING                                I    DAT01520
C                                                                       DAT01530
C NT.E         NAME TABLE END                                      I    DAT01540
C                                                                       DAT01550
C NT.N         NAME TABLE LENGTH                                   I    DAT01560
C                                                                       DAT01570
C NT.P         NAME TABLE POINTER                                  I    DAT01580
C                                                                       DAT01590
C OD           OPERAND.  AN ORDERED PAIR, (TYPE, VALUE).           I    DAT01600
C                                                                       DAT01610
C OP           OPCODE (PORTION OF INTERMEDIATE LANGUAGE                 DAT01620
C              INSTRUCTION)                                             DAT01630
C                                                                       DAT01640
C P            POINTER (USUALLY TO AN ELEMENT IN AN ARRAY          I    DAT01650
C                                                                       DAT01660
C PG           PAGE OF TEXT--POSITIVE FOR PART PROGRAM, NEGATIVE   I    DAT01670
C              FOR MACRO TEXT                                           DAT01680
C                                                                       DAT01690
C PG.C         CURRENT PAGE NUMBER                                 I    DAT01700
C                                                                       DAT01710
C PG.C.N       NUMBER OF WORDS ON CURRENT PAGE                     I    DAT01720
C                                                                       DAT01730
C PP           PART PROGRAM (INCLUDING MACRO TEXT)                 H    DAT01740
C                                                                       DAT01750
C PP.B         PART PROGRAM BEGINNING                              I    DAT01760
C                                                                       DAT01770
C PP.E         PART PROGRAM END                                    I    DAT01780
C                                                                       DAT01790
C PP.N         PART PROGRAM LENGTH                                 I    DAT01800
C                                                                       DAT01810
C RT.P         RETURN POINTER.  POINTS TO RETURN LINE IN MACRO     I    DAT01820
C              CALL/RETURN ARRAY, LN.A.                                 DAT01830
C                                                                       DAT01840
C SA           SCALAR ARRAY                                        D    DAT01850
C                                                                       DAT01860
C SA.B         SCALAR ARRAY TABLE BEGINNING                        I    DAT01870
C                                                                       DAT01880
C SA.E         SCALAR ARRAY TABLE END                              I    DAT01890
C                                                                       DAT01900
C SA.N         SCALAR ARRAY TABLE LENGTH                           I    DAT01910
C                                                                       DAT01920
C SA.P         SCALAR ARRAY TABLE POINTER                          I    DAT01930
C                                                                       DAT01940
C SC           SCALAR                                              R    DAT01950
C                                                                       DAT01960
C SC.B         SCALAR TABLE BEGINNING                              I    DAT01970
C                                                                       DAT01980
C SC.E         SCALAR TABLE END                                    I    DAT01990
C                                                                       DAT02000
C SC.N         SCALAR TABLE LENGTH                                 I    DAT02010
C                                                                       DAT02020
C SC.P         SCALAR TABLE POINTER                                I    DAT02030
C                                                                       DAT02040
C                                                                       DAT02050
C                                                                       DAT02060
C                                                                       DAT02070
C                                                                       DAT02080
C MASTER COMMON DECK                                                    DAT02090
C--------------------------------------------------------------CDE PAK  DAT02100
C                                                                       DAT02110
C                                                                       DAT02120
C                                                                       DAT02130
C UNLABELED COMMON                                                      DAT02140
C                                                                       DAT02150
C                                                                       DAT02160
      INCLUDE 'BLANKCOM.INC'                                            DAT02242
      INCLUDE 'INTRPEQ.INC'                                             DAT02244
C NAME TABLE                                                            DAT02246
      INCLUDE 'NAMETB.INC'                                              DAT02248
C                                                                       DAT02250
C                                                                       DAT02260
C                                                                       DAT02270
C STOR--COMMON CONTAINING STORAGE PARAMETERS                            DAT02280
C                                                                       DAT02290
C                                                                       DAT02300
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     DAT02310
      INTEGER       NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     DAT02320
C                                                                       DAT02322
C   ADDITIONAL STOR PARAMETERS USED FOR NUMBER TABLE DIRECT ACCESS      DAT02324
C                                                                       DAT02326
      COMMON/STOR/  NRECRD,  NTPARM                                     DAT02328
      DIMENSION     NRECRD(10), NTPARM(10)                              DAT02330
      EQUIVALENCE   (NTPARM(1),NUMST), (NTPARM(2),NUMOD ),              DAT02332
     .              (NTPARM(3),NDAFLG), (NTPARM(4),NRECST),             DAT02334
     .              (NTPARM(5),IPAGE )                                  DAT02335
C                                                                       DAT02336
C WORK--COMMON CONTAINING WORKING VARIABLES                             DAT02340
C                                                                       DAT02350
C                                                                       DAT02360
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   DAT02370
      INTEGER       PGC,      PGCN,     ILC,      IXC                   DAT02380
C                                                                       DAT02390
      COMMON/WORK/  SCP,      SAP,      NSP,      IAP,   CFP,   COMP    DAT02400
      INTEGER       SCP,      SAP,      NSP,      IAP,   CFP,   COMP    DAT02410
C                                                                       DAT02420
      COMMON/WORK/     NTP,   LNA,    RTP                               DAT02430
C  THIS LOCATION IS USED TO PASS FUNCTION RESULTS FROM XCALL            DAT02432
      COMMON/WORK/AC                                                    DAT02434
C   THIS ARRAY USED BY THE ROUTINES INCAN AND XCANON                    DAT02436
      COMMON/WORK/AVT,IWRIT                                             DAT02438
      INTEGER  FPP,    NTP,    LNA,    RTP                              DAT02440
      INTEGER                            AVT                            DAT02445
      EQUIVALENCE  (FPP,   NTP)                                         DAT02450
      DIMENSION                LNA(2,20),      AVT(32)                  DAT02460
      INTEGER       AC                                                  DAT02466
C                                                                       DAT02470
C                                                                       DAT02480
C CONST--COMMON CONTAINING CONSTANTS                                    DAT02490
C                                                                       DAT02500
C                                                                       DAT02510
      COMMON/CONST/KCOMT,KCOMF,CILPRT,KCBN                              DAT02520
      LOGICAL CILPRT                                                    DAT02525
C                                                                       DAT02530
C                                                                       DAT02560
C                                                                       DAT02570
C                                                                       DAT02580
C---------------------------------------------------------------------  DAT02590
      DATA          PGC,   PGCN,   ILC,   IXC   / 0, 0, 0, 0/           DAT02630
      DATA          NTB/0/,RTP/0/,COMN/5000/,AVT/32*0/,IWRIT/0/         DAT02640
      DATA          KCOMF/40/,KCOMT/16/,KCBN/128/                       DAT02650
      DATA          NRECRD,NTPARM /10*0, 10*0/                          DAT02652
       END                                                              DAT02670
**** SOURCE FILE : DELALL00.ORG   ***
*
      SUBROUTINE DELALL                                                 00000100
C                                                                       00000200
C....DUMMY ROUTINE - DELALL NOT NEEDED IF DYNAMIC LOADING NOT AVAILABLE 00000300
C                                                                       00000400
      RETURN                                                            00000500
      END                                                               00000600
**** SOURCE FILE : M0001665.V04   ***
*
C                                                                       EXEC0001
C....FORTRAN SUBROUTINE  ...EXEC...       5/69                   HG     EXEC0002
C                                                                       EXEC0010
      SUBROUTINE EXEC                                                   EXEC0020
C                                                                       EXEC0030
C                                                                       EXEC0040
C...THIS IS THE MAIN ROUTINE FOR THE EXECUTION COMPLEX.                 EXEC0050
C                                                                       EXEC0060
C                                                                       EXEC0070
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR                        EXEC0080
C                                                                       EXEC0090
      INCLUDE 'SUPER.INC'                                               EXEC0144
C                                                                       EXEC0150
      INTEGER  ONE                                                      EXEC0192
      DATA  ONE/1/                                                      EXEC0194
C                                                                       EXEC0196
C...     SET UP INITIAL SEQUENCE NUMBER                                 EXEC0260
      CALL SEQ(ONE)                                                     EXEC0270
C                                                                       EXEC0280
C... CALL THE MAIN ROUTINE FOR THE INTERPRETIVE APPROACH.               EXEC0290
      CALL IMAIN                                                        EXEC0300
C                                                                       EXEC0310
C... INDICATE NORMAL ENDING.                                            EXEC0320
      ABEND = .FALSE.                                                   EXEC0330
C                                                                       EXEC0340
C... FREEMAIN OF SECUDARY LOADED MODULS,IF NESSESARY                    EXEC0393
      CALL DELALL                                                       EXEC0397
      RETURN                                                            EXEC0400
      END                                                               EXEC0410
**** SOURCE FILE : M0000717.W02   ***
*
C.....FORTRAN SUBROUTINE  ....GET            8/68                 HG    GET00001
C.....FORTRAN FUNCTION             ..GET..     HL GRAY 3/68         *ID*GET00002
      DOUBLE PRECISION FUNCTION   GET(OD)                               GET00010
C                                                                       GET00020
C FORTRAN FUNCTION 'GET(OD)'--GET ARGUMENT FROM OPERAND, OD             GET00030
C                                                                       GET00040
C PURPOSE      TO GET THE VALUE OF AN ARGUMENT GIVEN THE                GET00050
C              INTERMEDIATE LANGUAGE OPERAND POINTER, OD.               GET00060
C                                                                       GET00070
C LINKAGE      GET(OD)                                                  GET00080
C                                                                       GET00090
C              WHERE                                                    GET00100
C              OD IS THE POINTER TO THE OPERAND IN THE PART             GET00110
C                 PROGRAM                                               GET00120
C                                                                       GET00130
C METHOD       THE OPERAND IS EVALUATED ACCORDING TO TYPE               GET00140
C              (SEE INTRODUCTORY DOCUMENTATION).  THE VALUE             GET00150
C              OF THE ARGUMENT IS THEN TAKEN FROM THE APPRO-            GET00160
C              PRIATE LOCATION.                                         GET00170
C                                                                       GET00180
C              TYPE     VALUE                                           GET00190
C               0        INDEX TO NAME TABLE WHICH CONTAINS POINTER     GET00200
C                        TO STORED VARIABLE                             GET00210
C               1        INDEX TO FLOATING POINT NUMBER TABLE           GET00220
C               2        INDEX TO ALPHANUMERIC CONSTANTS                GET00230
C               3        INDEX TO NAME TABLE(POINTS TO VARIABLE)        GET00240
C               4        PROCEDURE NUMBER                               GET00250
C               5        INTEGER                                        GET00260
C               6        UNFRACTIONAL NUMBER (I4-FORMAT)                GET00261
C               7        FRACTIONAL NUMBER   (R8-FORMAT)                GET00262
C              -N        INDEX TO NAME TABLE WHICH CONTAINS POINTER     GET00270
C                        TO BASE ADDRESS.  EFFECTIVE ADDRESS IS--       GET00280
C                                                                       GET00290
C                           BA + N-1                                    GET00300
C                                                                       GET00310
C                        AND ALWAYS REFERS TO INTERNAL ARRAYS           GET00320
C                                                                       GET00330
C--------------------------------------------------------------CDE PAK  GET00340
C                                                                       GET00350
C                                                                       GET00360
C                                                                       GET00370
C UNLABELED COMMON                                                      GET00380
C                                                                       GET00390
C                                                                       GET00400
      INCLUDE 'BLANKCOM.INC'                                            GET00482
      INCLUDE 'INTRPEQ.INC'                                             GET00484
C                                                                       GET00490
C                                                                       GET00500
C                                                                       GET00510
C STOR--COMMON CONTAINING STORAGE PARAMETERS                            GET00520
C                                                                       GET00530
C                                                                       GET00540
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     GET00550
      INTEGER       NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     GET00560
C                                                                       GET00562
C   ADDITIONAL STOR PARAMETERS USED FOR NUMBER TABLE DIRECT ACCESS      GET00564
C                                                                       GET00566
      COMMON/STOR/  NRECRD,  NTPARM                                     GET00568
      DIMENSION     NRECRD(10), NTPARM(10)                              GET00570
      EQUIVALENCE   (NTPARM(1),NUMBST), (NTPARM(2),NUMOD ),             GET00572
     .              (NTPARM(3),NDAFLG), (NTPARM(4),NRECST),             GET00574
     .              (NTPARM(5),IPAGE )                                  GET00575
C                                                                       GET00576
C WORK--COMMON CONTAINING WORKING VARIABLES                             GET00580
C                                                                       GET00590
C                                                                       GET00600
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   GET00610
      INTEGER       PGC,      PGCN,     ILC,      IXC                   GET00620
C                                                                       GET00630
      COMMON/WORK/  SCP,      SAP,      NSP,      IAP,   CFP,   COMP    GET00640
      INTEGER       SCP,      SAP,      NSP,      IAP,   CFP,   COMP    GET00650
C                                                                       GET00660
      COMMON/WORK/         NTP,   LNA,   RTP                            GET00670
      INTEGER  FPP,    NTP,    LNA,    RTP                              GET00680
      EQUIVALENCE  (FPP,   NTP)                                         GET00690
      DIMENSION                   LNA(2,20)                             GET00700
C                                                                       GET00710
C                                                                       GET00720
C CONST--COMMON CONTAINING CONSTANTS                                    GET00730
C                                                                       GET00740
C                                                                       GET00750
      COMMON/CONST/KCOMT,KCOMF                                          GET00760
C                                                                       GET00770
      INCLUDE 'TOTAL.INC'                                               GET00774
      INCLUDE 'LDEF.INC'                                                GET00784
C                                                                       GET00790
      COMMON/ILD/ILD                                                    GET00795
C                                                                       GET00800
C---------------------------------------------------------------------  GET00810
C                                                                       GET00820
C                                                                       GET00830
C                                                                       GET00840
      EXTERNAL XCANON                                                   GET00845
      INTEGER   XCANON,OD,K,L                                           GET00850
      DATA ISPECL /319951634/                                           GET00851
C                                                                       GET00860
C                                                                       GET00870
C        EXTRACT TYPE AND ADD ONE FOR 'GO TO' (L)                       GET00880
C                                                                       GET00890
      J = ILC + ILD + OD                                                GET00900
      L = PP(J) + 1                                                     GET00910
C                                                                       GET00920
C        EXTRACT VALUE OF OPERAND (K)                                   GET00930
C                                                                       GET00940
      K = PP(J+1)                                                       GET00950
C                                                                       GET00960
C        GET OPERAND ACCORDING TO TYPE                                  GET00970
C                                                                       GET00980
      IF (L .LE. 0) GO TO 70                                            GET00990
C                                                                       GET01000
C             0   1   2   3   4   5   6   7  TYPE                       GET01010
C                                                                       GET01020
      GO TO (10, 20, 30, 10, 50, 60, 60, 80),L                          GET01030
C                                                                       GET01040
C                                                                       GET01050
C                                                                       GET01060
C                                                                       GET01070
C                                                                       GET01080
C        TYPE 0.,3.                                                     GET01090
C                                                                       GET01100
C        GET NAME TABLE POINTER                                         GET01110
C                                                                       GET01120
   10 CONTINUE                                                          GET01130
      NTP=NTB+K                                                         GET01135
      K=NT(1,NTP)                                                       GET01140
C---     SPECIAL LOGIC FOR INDIRECT ADRS AND NUMBER REFERENCE           GET01145
      IF(L.NE.4) GO TO 11                                               GET01150
      IF(NT(2,NTP).NE.ISPECL) GO TO 11                                  GET01160
C---     INVOKE NUMBER TABLE PAGE AN ADDRESS REASSIGNMENT, IF NECESSARY GET01165
      IF(NDAFLG.NE.0) CALL XNUMBR(K)                                    GET01170
      COMP=FPB+K                                                        GET01175
      GET=FP(COMP)                                                      GET01180
      RETURN                                                            GET01185
C---     NORMAL PATH FOR FETCHING CAN FORM OR NUMBER                    GET01190
   11 CONTINUE                                                          GET01195
      COMP=K                                                            GET01200
      GO TO 100                                                         GET01205
C                                                                       GET01210
C                                                                       GET01220
C                                                                       GET01230
C                                                                       GET01240
C        TYPE 1.                                                        GET01250
C                                                                       GET01260
C        COMPUTE FLOATING TABLE POINTER, EXTRACT VARIABLE AND EXIT      GET01270
C                                                                       GET01280
   20 IF (NDAFLG .NE. 0) CALL XNUMBR(K)                                 GET01290
      COMP=FPB+K                                                        GET01294
      GET = FP(COMP)                                                    GET01300
      RETURN                                                            GET01310
C                                                                       GET01320
C                                                                       GET01330
C                                                                       GET01340
C                                                                       GET01350
C        TYPE 2.                                                        GET01360
C                                                                       GET01370
C        COMPUTE NAME TABLE POINTER, EXTRACT VARIABLE AND EXIT          GET01380
C                                                                       GET01390
 30   COMP = NTB + K                                                    GET01400
      GET = NB(COMP)                                                    GET01410
      RETURN                                                            GET01420
C                                                                       GET01430
C                                                                       GET01440
C                                                                       GET01450
C                                                                       GET01460
C        TYPE 4.                                                        GET01470
C                                                                       GET01480
C                                                                       GET01490
C                                                                       GET01500
 50   COMP = K                                                          GET01510
      GET = 0.0                                                         GET01520
      RETURN                                                            GET01530
C                                                                       GET01540
C                                                                       GET01550
C                                                                       GET01560
C                                                                       GET01570
C        TYPE 5 AND TYPE 6.                                             GET01580
C                                                                       GET01590
 60   COMP = KCOMT                                                      GET01600
      COM(COMP) = K                                                     GET01610
      GET = COM(COMP)                                                   GET01620
      RETURN                                                            GET01630
C                                                                       GET01631
C        TYPE 7.                                                        GET01632
C     RECEIVE FRACTIONAL NUMBER FROM INPUT FILE                         GET01633
C                                                                       GET01634
 80   COMP = KCOMT                                                      GET01635
      CM(1,COMP)=PP(J+1)                                                GET01636
      CM(2,COMP)=PP(J+2)                                                GET01637
      ILD = ILD+1                                                       GET01638
      GET = COM(COMP)                                                   GET01639
      RETURN                                                            GET01640
C                                                                       GET01650
C                                                                       GET01660
C                                                                       GET01670
C        TYPE (-N)                                                      GET01680
C                                                                       GET01690
C                                                                       GET01700
C        COMPUTE EFFECTIVE ADDRESS = BASE ADDRESS + INDEX,              GET01710
C        STORE ARGUMENT AND EXIT                                        GET01720
 70   NTP = NTB + K                                                     GET01730
      COMP = NT(1,NTP) - L                                              GET01740
  100 I=COMP                                                            GET01750
      IF(CANFLG) I = XCANON(I)                                          GET01760
      GET = COM(I)                                                      GET01770
C                                                                       GET01775
  110 RETURN                                                            GET01780
      END                                                               GET01790
**** SOURCE FILE : M0000743.V01   ***
*
C.....FORTRAN ROUTINE          ..AIMAIN..      6/69       HLG       *ID*IMAIN000
      SUBROUTINE IMAIN                                                  IMAIN010
C                                                                       IMAIN020
C PURPOSE      THIS IS THE MAIN ROUTINE FOR THE INTERPRETIVE APPROACH.  IMAIN040
C NOTE THE MAIN ROUTINE FOR THE ASSEMBLY APPROACH                       IMAIN043
C WILL BE CALLED AMAIN, WHEN IMPLEMENTED, & WHICH ROUTINE               IMAIN044
C IS USED DEPENDS ON THE APPROACH  REQUESTED BY THE PART PROGRAM.       IMAIN046
C                                                                       IMAIN050
C CALLED BY    THE ROUTINE MAIN                                         IMAIN060
C                                                                       IMAIN070
C                                                                       IMAIN080
C...  INITALIZE STORAGE                                                 IMAIN090
      CALL INIT                                                         IMAIN100
C                                                                       IMAIN110
C...  GO TO INTERPRETER                                                 IMAIN120
      CALL INTRP                                                        IMAIN130
C                                                                       IMAIN140
      RETURN                                                            IMAIN150
      END                                                               IMAIN160
**** SOURCE FILE : M0001190.V14   ***
*
C.....FORTRAN ROUTINE              ..INIT..    HL GRAY 3/68, 8/68       00000100
      SUBROUTINE  INIT                                                  00000200
C--------------------------------------------------------------CDE PAK  00000300
C UNLABELED COMMON                                                      00000400
C                                                                       00000500
      INCLUDE 'BLANKCOM.INC'                                            00001620
      INCLUDE 'INTRPEQ.INC'                                             00001640
C NAME TABLE                                                            00001660
      INCLUDE 'NAMETB.INC'                                              00001680
C SYSTEM DEPENDENT PARAMETERS                                           00001690
      INCLUDE 'SDP.INC'                                                 00001695
C                                                                       00001700
C STOR--COMMON CONTAINING STORAGE PARAMETERS                            00001800
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     00001900
      INTEGER       NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     00002000
C                                                                       00002100
C   ADDITIONAL STOR PARAMETERS USED FOR NUMBER TABLE DIRECT ACCESS      00002200
C                                                                       00002300
      COMMON/STOR/  NRECRD,  NTPARM                                     00002400
      DIMENSION     NRECRD(10), NTPARM(10)                              00002500
      EQUIVALENCE   (NTPARM(1),NUMST), (NTPARM(2),NUMOD ),              00002600
     X              (NTPARM(3),NDAFLG), (NTPARM(4),NRECST),             00002700
     X              (NTPARM(5),IPAGE )                                  00002800
C                                                                       00002900
C WORK--COMMON CONTAINING WORKING VARIABLES                             00003000
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   00003100
      INTEGER       PGC,      PGCN,     ILC,      IXC                   00003200
C                                                                       00003300
      COMMON/WORK/  SCP,      SAP,      NSP,      IAP,   CFP,   COMP    00003400
      INTEGER       SCP,      SAP,      NSP,      IAP,   CFP,   COMP    00003500
C CONST--COMMON CONTAINING CONSTANTS                                    00003600
C                                                                       00003700
      COMMON/CONST/KCOMT,KCOMF,CILPRT,KCBN                              00003800
      LOGICAL CILPRT                                                    00003900
C                                                                       00004000
      INCLUDE 'TOTAL.INC'                                               00004010
      INCLUDE 'LDEF.INC'                                                00004020
C               SYSTEM I/O FILE NAMES                                   00004300
      INCLUDE 'SYMFIL.INC'                                              00004550
C                                                                       00004600
      DIMENSION IN(23)                                                  00004700
      EQUIVALENCE (IN(2),SCN),(IN(3),SAN),(IN(4),NSN)                   00004800
     1           ,(IN(5),IAN),(IN(6),COMS),(IN(12),LPG)                 00004900
     2           ,(IN(13),FPN),(IN(14),NTN),(IN(15),PPPG)               00005000
     3           ,(IN(16),MTPG),(IN(18),LOGCAL)                         00005100
     4           ,(IN(22),MAXSZ1),(IN(23),MAXSZ2)                       00005200
      LOGICAL LOGCAL                                                    00005300
C                                                                       00005600
      INCLUDE 'DARRAY.INC'                                              00005850
C                                                                       00005900
C---     MAXLDA CONTAINS THE MAXIMUM SPACE AVAILABLE FOR LDA'S          00006000
      COMMON/MAXLDA/MAXLDA                                              00006100
C---------------------------------------------------------------------  00006200
C                                                                       00006300
      INTEGER  SCN,SAN,NSN,LPG,PPPG,MTPG,IAN,FPN,NTN,COMS,K             00006400
      DOUBLE PRECISION ZERO                                             00006510
      CHARACTER*8 BLANK                                                 00006520
      INTEGER BCDF                                                      00006540
      DATA ZERO/0.D0/,KPGN/256/,BLANK/'        '/                       00006800
C                                                                       00006900
C---     COMN REFLECTS THE TOTAL SPACE AVAILABLE IN BLANK COMMON (COM)  00007000
C---     IF DIMENSION OF COM IS CHANGED, THEN VALUE OF COMN IS CHANGED  00007100
C---     HERE AUTOMATICALLY                                             00007200
      COMN=COMSIZ                                                       00007300
      IRISK=1                                                           00007400
C---      IF IRISK IS 1, THEN SYSTEM WILL NOT TERMINATE FOR             00007500
C---      LACK OF SPACE BUT WILL PROCEED AT RISK                        00007600
C     ---------                                                         00007700
      COM(1) = ZERO                                                     00007800
      NR=0                                                              00007900
      CALL AREAD (ELFIL4,NR,IN,23,IR)                                   00008000
      CILPRT = LOGCAL                                                   00008100
      NUMST = IN(19)                                                    00008200
      NDAFLG = IN(20)                                                   00008300
      NRECST = IN(21)                                                   00008400
C                                                                       00008500
C---     PRELIMINARY CALCULATION TO SET ASIDE SPACE FOR LARGE DDATA     00008600
C---     FIXED ALLOCATIONS ARE MADE FOR ARELEM PART,DRIVE AND           00008700
C---     AND CHECK SURFACES,TEMPORARY MATRIX, NAME TABLE                00008800
C---     AND NUMBER TABLE                                               00008900
      NCFB=KCOMF+NTN+KCOMT+FPN                                          00009000
C---     MINIMUM SPACE FOR CANON DATA AND PART PROGRAM DATA             00009100
      MCANPG=SCN+SAN+NSN+IAN                                            00009200
      KK1=9*KCBN                                                        00009300
      KK2=(KPGN/4)*4+1                                                  00009400
      IF(MCANPG.GT.KK1) MCANPG=KK1+KK2                                  00009500
      IF(MCANPG.LE.KK1) MCANPG=MCANPG+KK2                               00009600
C                                                                       00009700
C---      FIRST ATTEMPT, SPACE FOR THE LARGEST PLUS NEXT LARGEST        00009800
C---      ALLOCATE SPACE (COMS) FOR LARGE DATA ARRAYS                   00009900
      COMS=MAXSZ1+MAXSZ2+90                                             00010000
      ISURP=COMN-COMS-MCANPG-NCFB                                       00010100
      IF(ISURP.LT.0) GO TO 5                                            00010200
      COMS=COMS+ISURP/2                                                 00010240
      GO TO 6                                                           00010260
    5 CONTINUE                                                          00010280
C---      TRY SPACE FOR ONLY ONE LDA IN MEMORY                          00010300
      COMS=COMS-MAXSZ2                                                  00010400
      ISURP=ISURP+MAXSZ2                                                00010500
C---      QUIT NOW IF THERE IS NOT SPACE FOR EVEN ONE LDA.              00010600
      IF(ISURP.LT.0.AND.IRISK.EQ.0) GO TO 80                            00010700
C------ALTERNATE CODE TO CONTINUE AT RISK                               00010800
      COMS=COMN-MCANPG-NCFB                                             00010900
      IF(COMS.LT.0) GO TO 80                                            00011000
      CALL CFORM(' PREDICTED LDA SIZE TOO LARGE, PROCEED AT RISK',      00011100
     X  DARRAY,1,46)                                                    00011200
      CALL CPRINT(DARRAY)                                               00011300
      CALL BAD(1,0,'COMN',COMN)                                         00011400
      CALL BAD(1,0,'COMS',COMS)                                         00011500
      CALL BAD(1,0,'MXS1',MAXSZ1)                                       00011600
      CALL BAD(-1,0,'MXS2',MAXSZ2)                                      00011700
C---      NOW COMS IS THE TOTAL SPACE FOR LARGE DATA.                   00011800
    6 CONTINUE                                                          00011900
      MAXLDA=COMS                                                       00012000
      J0 = IN(17)                                                       00012100
      JN = NTN                                                          00012200
      NR=0                                                              00012300
C---     READ IN THE NAME TABLE ENTRIES                                 00012400
      CALL CHREAD (ELFIL4,NR,CNAMTB(J0),JN,IR)                          00012500
C                                                                       00012510
C... LOAD BCD EQUIVALENT OF CNAMTB ENTRIES IN NT                        00012520
C                                                                       00012530
      J1=KCOMF+KCOMT+COMS+1                                             00012540
      J2=J0+NTN-1                                                       00012545
      DO 8 J=J0,J2                                                      00012550
        NT(1,J1)=BCDF(CNAMTB(J)(1:IWRD))                                00012560
        NT(2,J1)=BCDF(CNAMTB(J)(IWRD+1:)//BLANK)                        00012570
        J1=J1+1                                                         00012580
   8  CONTINUE                                                          00012590
C                                                                       00012600
C---     PRINT OUT THE COMPLETE NAME TABLE IF COMPRESSED PRINT IS ON    00012700
      IF(.NOT.CILPRT) GO TO 50                                          00012800
      CALL CFORM('0 LIST OF ALPHANUMERIC NAME TABLE ENTRIES',           00012900
     X    DARRAY,1,41)                                                  00013000
      CALL CPRINT(DARRAY)                                               00013100
      KLL=IN(17)-1                                                      00013200
      JCOL=2                                                            00013300
      JTOP=J0+NTN-1                                                     00013400
      DO 60 LL=J0,JTOP                                                  00013500
      KLL=KLL+1                                                         00013600
      IF(CNAMTB(LL).EQ.BLANK) GO TO 60                                  00013700
      CALL ICONV(KLL,DARRAY,JCOL,4)                                     00013800
      JCOL=JCOL+5                                                       00013900
      CALL CFORM(CNAMTB(LL),DARRAY,JCOL,6)                              00014000
      JCOL=JCOL+9                                                       00014100
      IF(JCOL+14.LE.120) GO TO 60                                       00014200
      CALL CPRINT(DARRAY)                                               00014300
      JCOL=2                                                            00014400
   60 CONTINUE                                                          00014500
      CALL CPRINT(DARRAY)                                               00014600
   50 CONTINUE                                                          00014700
C                                                                       00014800
      K0 = J1                                                           00014900
      J0 = J1 - NTN                                                     00014910
C                                                                       00015000
C        IF NDAFLG IS NOT ZERO THEN DIRECT ACCESS IS USED TO STORE      00015100
C        NUMBER TABLE VALUES. ONLY FIXED NUMBERS ARE PASSED ON ELFIL4.  00015200
      IF (NDAFLG .EQ. 0) GO TO 1003                                     00015300
      NUMOD = FPN-NUMST                                                 00015400
      KN=(FPN-NUMOD)                                                    00015500
      GO TO 1004                                                        00015600
C                                                                       00015700
 1003 KN=FPN                                                            00015800
 1004 NR = 0                                                            00015900
      IF(J0+NTN+KN.GT.COMN) GO TO 80                                    00016000
      CALL FREAD(ELFIL4,NR,FP(K0),KN,IR,3)                              00016010
      CALL TAPOP (ELFIL4,-1)                                            00016100
C                                                                       00016200
      NTB = J0-IN(17)                                                   00016300
      FPB = NTB                                                         00016400
      COMP = KCOMF + 1                                                  00016500
      SCP = K0 + FPN                                                    00016600
      CFB = SCP                                                         00016700
      SAP= SCP+ SCN                                                     00016800
      NSP = SAP+ SAN                                                    00016900
      IAP = NSP + NSN                                                   00017000
      PPB = (IAP + IAN)*2 - 1                                           00017300
      KCOMT = KCOMF + COMS + 1                                          00017400
C                                                                       00017500
      IF(.NOT.CILPRT) GOTO 90                                           00017600
C PRINT  INTERPRETER PARAMETERS                                         00017700
      CALL CFORM('1   EXECUTION PHASE ',DARRAY,1,20)                    00017800
      CALL CPRINT (DARRAY)                                              00017900
      CALL CFORM('ENTR=INIT TABLES',DARRAY,4,16)                        00018010
      CALL CPRINT(DARRAY)                                               00018020
      CALL BAD(-23,0,'IN  ',IN)                                         00018100
      CALL BAD(1,0,'KCMF',KCOMF)                                        00018200
      CALL BAD(1,0,'COMS',COMS)                                         00018300
      CALL BAD(1,0,'MXS1',MAXSZ1)                                       00018400
      CALL BAD(1,0,'MXS2',MAXSZ2)                                       00018500
      CALL BAD(-1,0,'KCMT',KCOMT)                                       00018600
      CALL BAD(1,0,'NTN ',NTN)                                          00018700
      CALL BAD(1,0,'FPN ',FPN)                                          00018800
      CALL BAD(1,0,'KCBN',KCBN)                                         00018900
      CALL BAD(1,0,'KPGN',KPGN)                                         00019000
      CALL BAD(-1,0,'COMN',COMN)                                        00019100
C        CAN ALL CANNONICAL FORMS PLUS 4 PAGES OF I.L. FIT IN CORE      00019200
   90 IF((PPB+4*KPGN-1).LE.2*COMN) GOTO 20                              00019500
C        NO, STORE CANNONICAL FORMS ON EXTERNAL FILE.                   00019600
      CANFLG = .TRUE.                                                   00019700
C        AT LEAST 9 BLOCKS OF CANNON & 4 PAGES OF I.L. MUST FIT IN CORE 00019800
      I = COMN-CFB-9*KCBN-4*KPGN/2+1                                    00019900
      IF(I.GE.0) GOTO 10                                                00020000
C                                                                       00020100
C---     TERMINATE EXECUTION PHASE FOR LACK OF SPACE                    00020200
   80 CONTINUE                                                          00020300
      CALL CFORM('029002 LARGEST CANONICAL FORM IS TOO LARGE',          00020400
     1      DARRAY,1,42)                                                00020500
      CALL CPRINT(DARRAY)                                               00020600
      CALL CFORM('0TABLE SIZES FROM TRANSLATOR',DARRAY,1,28)            00020700
      CALL CPRINT(DARRAY)                                               00020800
      CALL BAD(23,0,'IN  ',IN)                                          00020900
      CALL BAD(-1,0,' ',0)                                              00021000
C                                                                       00021100
      KKMIN=NCFB+MCANPG+MAXSZ1+40                                       00021200
      KKREC=KKMIN+MAXSZ2                                                00021300
      CALL CFORM('0SPACE NOW ALLOCATED ',DARRAY,1,21)                   00021400
      CALL ICONV(COMN,DARRAY,25,5)                                      00021500
      CALL CPRINT(DARRAY)                                               00021600
      CALL CFORM('0MIN SPACE RQD',DARRAY,1,14)                          00021700
      CALL ICONV(KKMIN,DARRAY,22,5)                                     00021800
      CALL CFORM('RECOMMENDED SPACE IS',DARRAY,35,20)                   00021900
      CALL ICONV(KKREC,DARRAY,57,5)                                     00022000
      CALL CPRINT(DARRAY)                                               00022100
C                                                                       00022200
      CALL HELP                                                         00022300
C                                                                       00022400
C        DIVIDE SPACE LEFT - A BLOCK OF CANNON FOR EACH PAGE OF I.L.    00022500
   10 NBLK = I/(KCBN+KPGN/2)+9                                          00022800
C        ADJUST POINTERS                                                00022900
      PPB = (CFB+NBLK*KCBN)*2-1                                         00023000
C        DETERMINE NUMBER OF ADDITIONAL WORDS REQUIRED FOR EACH TYPE OF 00023100
C        CANNONICAL FORM.                                               00023200
      ISCN = (SCN/KCBN+1)*2                                             00023300
      ISAN = (SAN/KCBN+1)*2                                             00023400
      INSN = (NSN/KCBN+1)*11                                            00023500
      SAP = SCP+((SCN+ISCN)/KCBN+1)*KCBN                                00023600
      NSP = SAP+((SAN+ISAN)/KCBN+1)*KCBN                                00023700
      IAP = NSP+((NSN+INSN)/KCBN+1)*KCBN                                00023800
C                                                                       00023900
      IF(.NOT.CILPRT) GOTO 20                                           00024000
      CALL CFORM(' XCANON IN EFFECT ',DARRAY,1,17)                      00024100
      CALL CPRINT(DARRAY)                                               00024200
   20 RETURN                                                            00024300
      END                                                               00024400
**** SOURCE FILE : M0004105.W03   ***
*
C.....FORTRAN SUBROUTINE  ....INTRP          8/68                 HG    INT00001
C.....FORTRAN ROUTINE              ..INTRP..   HL GRAY 3/68         *ID*INT00002
      SUBROUTINE INTRP                                                  INT00010
C FORTRAN SUBROUTINE 'INTRP', THE MAIN INTERPRETER                      INT00020
C                                                                       INT00030
C PURPOSE      THIS ROUTINE EXECUTES APT INTERMEDIATE LANGUAGE          INT00040
C              INSTRUCTIONS ONE-BY-ONE.                                 INT00050
C                                                                       INT00060
C LINKAGE      CALL INTRP                                               INT00070
C                                                                       INT00080
C ARGUMENTS    THROUGH COMMON                                           INT00090
C                                                                       INT00100
C SUBSIDIARIES 'ADV'     ADVANCE LOCATION COUNTER                       INT00110
C              'SET'     SET LOCATION COUNTER                           INT00120
C              'LIB'     CALL LIBRARY ROUTINE                           INT00130
C               GET      OBTAIN AN OPERAND OR OPERAND ADDRESS           INT00140
C               RESRV    RESERVE STORAGE ROUTINE                        INT00150
C               PUT      STORE OPERAND                                  INT00160
C               SEQ      SEQUENCE ROUTINE                               INT00170
C               APT295   EXPONENTIATION ROUTINE                         INT00180
C                                                                       INT00190
C                                                                       INT00200
C METHOD       THE INTERMEDIATE LANGUAGE OPCODE IS EXTRACTED (L300).    INT00210
C              A BRANCH THEN OCCURS TO A SMALL SUBSECTION WHICH         INT00220
C              EXECUTES THE INSTRUCTION.                                INT00230
C                                                                       INT00240
C              IF THE INSTRUCTION DOES NOT CONTAIN A JUMP, THE RETURN   INT00250
C              CAUSES THE PSEUDOLOCATION COUNTER TO ADVANCE ONE         INT00260
C              INSTRUCTION (L200), THEN EXTRACTION OCCURS               INT00270
C                                                                       INT00280
C              IF THE INSTRUCTION CONTAINS A JUMP, THE PSEUDOLOCATION   INT00290
C              COUNTER IS RESET TO THE DESTINATION INSTRUCTION AND THE  INT00300
C              RETURN IS TO THE EXTRACTION PROCESS.                     INT00310
C                                                                       INT00320
C--------------------------------------------------------------CDE PAK  INT00330
C                                                                       INT00340
C                                                                       INT00350
C                                                                       INT00360
C                                                                       INT00370
C UNLABELED COMMON                                                      INT00380
C                                                                       INT00390
C                                                                       INT00400
      INCLUDE 'BLANKCOM.INC'                                            INT00482
      INCLUDE 'INTRPEQ.INC'                                             INT00484
C                                                                       INT00490
C                                                                       INT00500
C                                                                       INT00510
C STOR--COMMON CONTAINING STORAGE PARAMETERS                            INT00520
C                                                                       INT00530
C                                                                       INT00540
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN,  CFB            INT00550
      INTEGER       NTB,      FPB,      PPB,      COMN,  CFB            INT00560
C                                                                       INT00570
C                                                                       INT00580
C WORK--COMMON CONTAINING WORKING VARIABLES                             INT00590
C                                                                       INT00600
C                                                                       INT00610
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   INT00620
      INTEGER       PGC,      PGCN,     ILC,      IXC                   INT00630
C                                                                       INT00640
      COMMON/WORK/  SCP,      SAP,      NSP,      IAP,   CFP,   COMP    INT00650
      INTEGER       SCP,      SAP,      NSP,      IAP,   CFP,   COMP    INT00660
C                                                                       INT00670
      COMMON/WORK/         NTP,   LNA,   RTP                            INT00680
      INTEGER  FPP,    NTP,    LNA,    RTP                              INT00690
      EQUIVALENCE  (FPP,   NTP)                                         INT00700
      DIMENSION                   LNA(2,20)                             INT00710
C                                                                       INT00712
C                                                                       INT00720
C                                                                       INT00730
C CONST--COMMON CONTAINING CONSTANTS                                    INT00740
C                                                                       INT00750
C                                                                       INT00760
      COMMON/CONST/KCOMT,KCOMF,CILPRT,KCBN                              INT00770
      LOGICAL CILPRT                                                    INT00775
C                                                                       INT00780
C                                                                       INT00810
      INCLUDE 'DARRAY.INC'                                              INT00812
C                                                                       INT00816
C                                                                       INT00819
      COMMON/ILD/ILD                                                    INT00820
C                                                                       INT00821
      INCLUDE 'TOTAL.INC'                                               INT00824
      INCLUDE 'LDEF.INC'                                                INT00826
C                                                                       INT00828
C---------------------------------------------------------------------  INT00830
      INTEGER       XCANON                                              INT00840
      EXTERNAL  GET,XCANON                                              INT00850
      INTEGER  OP,LN,COMP1,I,J,K,NTP1,NTP2,KOUNT,TT,X4                  INT00860
      DIMENSION LN(2),TT(2),X4(2)                                       INT00870
      DOUBLE PRECISION XTEMP,A,B,C,GET,X8                               INT00880
      EQUIVALENCE (XTEMP,TT(1)),(X8,X4(1))                              INT00900
      DOUBLE PRECISION XL                                               INT00902
      DIMENSION LL(2)                                                   INT00904
      EQUIVALENCE (LL(1),XL)                                            INT00906
      LOGICAL CKDEF                                                     INT00910
      DATA LL(2)/0/                                                     INT00911
      DATA ISPECL /319951634/                                           INT00912
C                                                                       INT00920
C                                                                       INT00930
C                                                                       INT00940
C        ADVANCE PSEUDOLOCATION COUNTER                                 INT00950
C                                                                       INT00960
  200 CALL ADV                                                          INT00970
C                                                                       INT00980
C        EXTRACT OPCODE FROM INSTRUCTION AND EXECUTE IT.                INT00990
  300 OP = PP(ILC)                                                      INT01000
      J=PP(ILC+1)+ILC+1                                                 INT01010
      IF(.NOT.CILPRT) GO TO 2                                           INT01015
C  PRINT COMPRESSED I.L.                                                INT01017
      JC = J                                                            INT01018
      CALL CFORM('PAG',DARRAY,2,3)                                      INT01019
      CALL ICONV(PGC,DARRAY,5,4)                                        INT01020
      CALL CFORM('(    ),LOC(      )',DARRAY,9,18)                      INT01021
      CALL ICONV(IXC,DARRAY,10,4)                                       INT01022
      CALL ICONV(ILC,DARRAY,20,6)                                       INT01023
      IF(OP.EQ.21) JC = ILC+3                                           INT01024
      I=ILC                                                             INT01025
 8999 L=29                                                              INT01026
 9000 K=PP(I)                                                           INT01027
      CALL ICONV(K,DARRAY,L,5)                                          INT01028
      L=L+6                                                             INT01029
      IF (K.NE.7.OR.I.LT.ILC+2) GO TO 99                                INT01030
C            1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19    INT01031
      GOTO (98,98,98,98,98,99,99,99,99,99,98,99,98,99,98,99,98,98,98,   INT01032
     +      99,99),OP                                                   INT01033
   98 IF (PP(I-1).EQ.5.OR.PP(I-1).EQ.6)GOTO 99                          INT01034
      X4(1)=PP(I+1)                                                     INT01035
      X4(2)=PP(I+2)                                                     INT01036
      CALL FCONV(X8,DARRAY,L,12,5)                                      INT01037
      I=I+2                                                             INT01038
      L=L+13                                                            INT01039
   99 IF(I.EQ.JC) GO TO 9002                                            INT01040
      I=I+1                                                             INT01041
      IF(L.LT.101) GO TO 9000                                           INT01042
      CALL CPRINT(DARRAY)                                               INT01043
      GO TO 8999                                                        INT01044
 9002 CALL CPRINT(DARRAY)                                               INT01045
      IF(OP.NE.21) GO TO 2                                              INT01046
 9003 L=K                                                               INT01048
      IF(K.GT.92) L=92                                                  INT01049
      CALL HOLFRM(PP(I+1),DARRAY,25,L,NW)                               INT01050
      CALL CPRINT(DARRAY)                                               INT01051
      IF(K.LE.92)  GO TO 2                                              INT01052
      I=I+NW                                                            INT01053
      K=K-92                                                            INT01054
      GO TO 9003                                                        INT01055
    2 IF(OP.LT.1.OR.OP.GT.21) GO TO 9020                                INT01056
      ILD=0                                                             INT01057
C                                                                       INT01058
C OPCODE     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21      INT01059
C                                                                       INT01060
      GO TO (1,1,1,1,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21),OP  INT01070
C            . . . . . . . . .  .  .  .  .  .  .  .  .  .  .  .  .      INT01080
C            . . . . . . . . .  .  .  .  .  .  .  .  .  .  .  .  .      INT01090
C            . . . . FEXP. . .  RETMC .  .  .  ASNADD.  .  .  VBLJMP    INT01100
C            . . . FDIV. . . SEQNCE.  .  .  CALMC .  .  .  MOVE  .      INT01110
C            . . FMPY  . . JUMP    .  .  CVTSUB   .  .  CALL     .      INT01120
C            . FSUB    . ENTRY     .  RESRV       .  REPL        .      INT01130
C            FADD      LABEL       CONJMP         ASNJMP         HOLDAT INT01140
C                                                                       INT01150
C                                                                       INT01160
C                                                                       INT01170
C                                                                       INT01180
C                                                                       INT01190
C                                                                       INT01200
C        PROCESS ARITHMETIC OPCODES                                     INT01210
C                                                                       INT01220
C                                                                       INT01230
C        GET ARGUMENTS FROM OPERANDS                                    INT01240
C                                                                       INT01250
 1    A = GET(4)                                                        INT01260
      B = GET(6)                                                        INT01270
C                                                                       INT01280
C        BRANCH TO CALCULATE  C = (A) OPERATION (B)                     INT01290
C                                                                       INT01300
C        OPCODE +     -     *     /    **                               INT01310
      GO TO (1001, 1002, 1003, 1004, 1005), OP                          INT01320
C                                                                       INT01330
C        ADDITION                                                       INT01340
C                                                                       INT01350
 1001 C = A+B                                                           INT01360
      GO TO 1006                                                        INT01370
C                                                                       INT01380
C        SUBTRACTION                                                    INT01390
C                                                                       INT01400
 1002 C = A-B                                                           INT01410
      GO TO 1006                                                        INT01420
C                                                                       INT01430
C        MULTIPLICATION                                                 INT01440
C                                                                       INT01450
 1003 C = A*B                                                           INT01460
      GO TO 1006                                                        INT01470
C                                                                       INT01480
C        DIVISION                                                       INT01490
C                                                                       INT01500
 1004 C = A/B                                                           INT01510
      GO TO 1006                                                        INT01520
C                                                                       INT01530
C        EXPONENTIATION                                                 INT01540
C                                                                       INT01550
 1005 CALL  APT295(C,A,B)                                               INT01560
      GO TO 1006                                                        INT01570
C                                                                       INT01580
C        STORE RESULT IN FIRST OPERAND AND RETURN                       INT01590
C                                                                       INT01600
 1006 CALL PUT(C,2)                                                     INT01610
C                                                                       INT01620
      GO TO 200                                                         INT01630
C                                                                       INT01640
C                                                                       INT01650
C                                                                       INT01660
C                                                                       INT01670
C       PROCESS LABEL INSTRUCTIONS                                      INT01680
C        PROCESS LABEL AND ENTRY INSTRUCTIONS                           INT01690
C                                                                       INT01730
C                                                                       INT01740
C        COMPUTE NAME TABLE POINTER, ENTER LINE, AND RETURN             INT01750
C                                                                       INT01760
 6    NTP = NTB + PP(ILC + 2)                                           INT01770
      NT(1,NTP) = PP(ILC + 3)                                           INT01780
      NT(2,NTP) = PP(ILC + 4)                                           INT01790
      GO TO 200                                                         INT01800
C                                                                       INT01810
C                                                                       INT01820
C       PROCESS ENTRY INSTRUCTION (THIS ALSO USED AS A NOOP INSTRUCTION)INT01825
C                                                                       INT01830
C                                                                       INT01840
    7 GO TO 200                                                         INT01842
C                                                                       INT01844
C                                                                       INT01846
C        PROCESS JUMP INSTRUCTION                                       INT01850
C                                                                       INT01860
C                                                                       INT01870
C        GET INDEX OF LABEL                                             INT01880
C                                                                       INT01890
 8    NTP1 = PP(ILC+2)                                                  INT01900
C                                                                       INT01910
C                                                                       INT01920
C        COMPUTE NAME TABLE POINTER--ALSO ENTRY FROM CONJMP INSTRUCTION INT01930
C                                                                       INT01940
 8001 NTP = NTP1 + NTB                                                  INT01950
C                                                                       INT01960
C        EXTRACT LINE                                                   INT01970
      LN(1) = NT(1,NTP)                                                 INT01980
      LN(2) = NT(2,NTP)                                                 INT01990
C                                                                       INT02000
C        RESET LOCATION COUNTER                                         INT02010
C                                                                       INT02020
      CALL SET(LN)                                                      INT02030
C                                                                       INT02040
C        AND RETURN                                                     INT02050
      GO TO 300                                                         INT02060
C                                                                       INT02070
C                                                                       INT02080
C                                                                       INT02090
C                                                                       INT02100
C        PROCESS SEQUENCE INSTRUCTION                                   INT02110
C                                                                       INT02120
C                                                                       INT02130
 9    CALL SEQ(PP(ILC +2))                                              INT02140
      ISCHRO=0                                                          INT02145
      GO TO 200                                                         INT02150
C                                                                       INT02160
C                                                                       INT02170
C                                                                       INT02180
C                                                                       INT02190
C        PROCESS RETMAC INSTRUCTION                                     INT02200
C                                                                       INT02210
C        SET LOCATION COUNTER TO TOP OF MACRO STACK                     INT02220
C                                                                       INT02230
 10   CALL SET(LNA(1,RTP))                                              INT02240
C                                                                       INT02250
C        POP UP MACRO STACK                                             INT02260
      RTP = RTP-1                                                       INT02270
C                                                                       INT02280
C        ADVANCE LOCATION COUNTER                                       INT02290
      GO TO 200                                                         INT02300
C                                                                       INT02310
C                                                                       INT02320
C                                                                       INT02330
C        PROCESS CONJUMP INSTRUCTION                                    INT02340
C                                                                       INT02350
C                                                                       INT02360
C        GET VALUE OF OPERAND                                           INT02370
C                                                                       INT02380
 11   A = GET(2)                                                        INT02390
C                                                                       INT02400
C        TEST VALUE AND GO TO JUMP WITH PROPER POINTER                  INT02410
C                                                                       INT02420
C              )0     =0     >0                                         INT02430
      IF (DABS(A) .LT.  1.0D-12) GO TO 11002                            INT02435
      IF (A) 11001, 11002, 11003                                        INT02440
C                                                                       INT02450
11001 NTP1 = PP(ILC + ILD + 4)                                          INT02460
      GO TO 8001                                                        INT02470
C                                                                       INT02480
11002 NTP1 = PP(ILC + ILD + 5)                                          INT02490
      GO TO 8001                                                        INT02500
C                                                                       INT02510
11003 NTP1 = PP(ILC + ILD + 6)                                          INT02520
      GO TO 8001                                                        INT02530
C                                                                       INT02540
C                                                                       INT02550
C                                                                       INT02560
C                                                                       INT02570
C        PROCESS RESRV INSTRUCTION                                      INT02580
C                                                                       INT02590
C        ALL RESRS INSTRUCTIONS EXECUTED DURING INITIALIZATION          INT02600
C                                                                       INT02610
12    CALL RESRV                                                        INT02620
      GO TO 200                                                         INT02630
C                                                                       INT02640
C                                                                       INT02650
C                                                                       INT02660
C                                                                       INT02670
C        PROCESS CVTSUB                                                 INT02680
C                                                                       INT02690
C                                                                       INT02700
C        GET SUBSCRIPT                                                  INT02710
C        FIND LOCATION OF X(I)                                          INT02715
 13    I  = GET(6)                                                      INT02720
      NTP = NTB + PP(ILC+5)                                             INT02722
      KSIZE = PP(ILC+8)+1                                               INT02725
      LOCX1=NT(1,NTP) - CFB                                             INT02726
      LOCXI=LOCX1-(I  -1)*KSIZE                                         INT02728
      IF(.NOT.CANFLG) GOTO 1310                                         INT02729
C        IS X(I) IN FIRST BLOCK OF X ARRAY                              INT02730
      IF(LOCX1  /KCBN.EQ. LOCXI  /KCBN) GOTO 1310                       INT02733
C        NO,FIND NO. OF ELEMENTS OF X IN FIRST BLOCK                    INT02736
      NF = MOD(LOCX1,KCBN)/KSIZE+1                                      INT02740
C        FIND NO. OF  FULL BLOCKS OF X ELEMENTS                         INT02743
      NBK= (I-NF)/((KCBN-1)/KSIZE)                                      INT02746
C        FIND NO. OF ELEMENTS OF X IN MIDDLE BLOCKS                     INT02750
      NM =          NBK          *((KCBN-1)/KSIZE)                      INT02753
C        FIND  NO. OF ELEMENTS OF X IN LAST BLOCK                       INT02756
      NL =  I   - NF - NM                                               INT02760
      LOCXI=LOCX1-(NF+NL-1)*KSIZE-NBK*KCBN-1                            INT02763
      IF(NL.EQ.0)LOCXI=LOCXI+MOD(KCBN-1,KSIZE)+1                        INT02767
C                                                                       INT02770
C        STORE ADDRESS                                                  INT02780
 1310 NTP = NTB + PP(ILC+3)                                             INT02790
      NT(1,NTP) = LOCXI + CFB                                           INT02800
C                                                                       INT02802
C  CHECK IF INDEX IS IN RANGE.                                          INT02804
      IF(LOCXI+CFB.GT.IAP) GOTO 9010                                    INT02810
      IX = LOCXI+CFB                                                    INT02812
      IF(CANFLG)IX= XCANON(IX)                                          INT02814
      IF(KSIZE.EQ.2) GOTO 1320                                          INT02815
      CALL UNPACK(COM(IX),IM,IS,IX)                                     INT02816
      IF(IX.EQ.0) IX=1                                                  INT02817
 1330 IF(IX.NE.I) GOTO 9010                                             INT02818
      GO TO 200                                                         INT02820
 1320 IX = COM(IX+1)                                                    INT02822
      GOTO 1330                                                         INT02824
C                                                                       INT02830
C                                                                       INT02840
C                                                                       INT02850
C     PROCESS CALMC INSTRUCTION                                         INT02860
C                                                                       INT02870
C        PUSH DOWN MACRO STACK                                          INT02880
C                                                                       INT02890
14    RTP = RTP + 1                                                     INT02900
C                                                                       INT02910
C        SAVE LINE(PAGE AND INDEX  OF THIS INSTRUCTION                  INT02920
C                                                                       INT02930
      LNA(1,RTP) = PGC                                                  INT02940
      LNA(2,RTP) = IXC                                                  INT02950
C                                                                       INT02960
C        RESET LOCATION COUNTER TO MACRO ADDRESS                        INT02970
C                                                                       INT02980
      NTP = PP(ILC + 2) + NTB                                           INT02990
      CALL SET(NT(1,NTP))                                               INT03000
      GO TO 300                                                         INT03010
C                                                                       INT03020
C                                                                       INT03030
C        PROCESS ASNADD INSTRUCTION                                     INT03040
C                                                                       INT03050
C        GET COM POINTER OF OPERAND                                     INT03060
   15 CONTINUE                                                          INT03070
      KZTEMP=PP(ILC+3)                                                  INT03077
      IF(KZTEMP.NE.1) GO TO 1510                                        INT03080
C---     SPECIAL ACTION FOR NUMBER ASSIGNMENT IN PAGING ENVIRONMENT     INT03085
      NTP=NTB+PP(ILC+2)                                                 INT03086
      NT(1,NTP)=PP(ILC+4)                                               INT03090
      NT(2,NTP)=ISPECL                                                  INT03095
      GO TO 200                                                         INT03100
 1510 CONTINUE                                                          INT03105
      XTEMP=GET(3)                                                      INT03110
      NTP=NTB+PP(ILC+2)                                                 INT03111
      NT(1,NTP)=COMP                                                    INT03115
      NT(2,NTP)=0                                                       INT03120
      GO TO 200                                                         INT03125
C                                                                       INT03150
C                                                                       INT03160
C        PROCESS ASNJMP INSTRUCTION                                     INT03170
C                                                                       INT03180
C        COMPUTE THE TWO NAME TABLE POINTERS, TRANSFER DATA AND EXIT    INT03190
C                                                                       INT03200
16    NTP1 = NTB + PP(ILC + 2)                                          INT03210
      NTP2 = NTB + PP(ILC + 3)                                          INT03220
      NB(NTP1) = NB(NTP2)                                               INT03230
      GO TO 200                                                         INT03240
C                                                                       INT03250
C                                                                       INT03260
C        PROCESS REPL INSTRUCTION                                       INT03270
C                                                                       INT03280
C        GET COM POINTER OF OPERAND                                     INT03290
 17   XTEMP = GET(3)                                                    INT03300
      COMP1 = COMP                                                      INT03310
C                                                                       INT03320
C        GET COM POINTER OF RESULTANT                                   INT03330
      XTEMP = GET(5)                                                    INT03340
      IF(.NOT.CANFLG) GOTO 1705                                         INT03342
      COMP1 = XCANON(COMP1)                                             INT03344
      COMP = XCANON(COMP)                                               INT03346
C  ABFANGEN BEI FEHLERHAFTEM EINGABEELEMENT                             INT03348
 1705 LLLL=PP(ILC+5)                                                    INT03349
      IF(LLLL.GT.0.AND.LLLL.NE.3)GOTO 1709                              INT03350
      LLL=0                                                             INT03352
      IF(LLLL.LT.0) LLL=1+LLLL                                          INT03354
      IF(.NOT.CKDEF(COM(COMP+LLL))) GOTO 1709                           INT03356
      GOTO 1708                                                         INT03358
C        REPLACE ELEMENTS                                               INT03360
 1709 KOUNT = PP(ILC + 2)                                               INT03370
      DO 1710 I=1,KOUNT                                                 INT03380
      COM(COMP1) = COM(COMP)                                            INT03390
      COMP = COMP + 1                                                   INT03400
 1710 COMP1= COMP1+ 1                                                   INT03410
C                                                                       INT03420
      GO TO 200                                                         INT03430
C                                                                       INT03440
C                                                                       INT03450
C        PROCESS CALL INSTRUCTION                                       INT03460
C                                                                       INT03470
 18   IF(ISCHRO.NE.0) GOTO 181                                          INT03475
      CALL LIB                                                          INT03480
 181  IF(PP(ILC+2).EQ.18) RETURN                                        INT03485
      GO TO 200                                                         INT03490
C                                                                       INT03500
C                                                                       INT03510
C        PROCESS MOVE INSTRUCTION                                       INT03520
C                                                                       INT03530
C        GET COM POINTER OF OPERAND                                     INT03540
 19   XTEMP = GET(2)                                                    INT03550
      COMP1 = COMP                                                      INT03560
      IF(CANFLG) COMP1 = XCANON(COMP1)                                  INT03565
C                                                                       INT03570
C        MOVE ELEMENTS                                                  INT03580
      KOUNT = PP(ILC+1)                                                 INT03590
      DO 1910 I=4,KOUNT,2                                               INT03600
      K=ILC+ILD+I                                                       INT03601
      IF (K.GE.J)GOTO 200                                               INT03602
      COM(COMP1) = GET(I)                                               INT03605
      LLLL=PP(K)                                                        INT03607
      IF(LLLL.GT.0.AND.LLLL.NE.3) GOTO 1910                             INT03610
      LLL=0                                                             INT03611
      IF(LLLL.LT.0) LLL=1+LLLL                                          INT03612
      COMP=COMP+LLL                                                     INT03613
      IF(CANFLG) COMP=XCANON(COMP)                                      INT03614
      IF(.NOT.CKDEF(COM(COMP))) GOTO 1910                               INT03615
      COMP1=COMP                                                        INT03616
      GOTO 1708                                                         INT03617
 1910 COMP1 =COMP1 + 1                                                  INT03620
C                                                                       INT03630
      GO TO 200                                                         INT03640
C                                                                       INT03650
C                                                                       INT03660
C        PROCESS VBLJMP INSTRUCTION                                     INT03670
C                                                                       INT03680
C        OBTAIN INDEX TO JUMP                                           INT03690
C.... USING MODIFIED IL FOR INDEX WHICH IS NOT SYSTEM DEPENDENT         INT03710
   20 XTEMP=GET(2)                                                      INT03720
      KOUNT=INT(XTEMP)                                                  INT03725
C                                                                       INT03730
C        IF INDEX NOT IN RANGE,CONTINUE                                 INT03740
      IF(KOUNT.GE.(PP(ILC+1)-1).OR.KOUNT.LE.0) GO TO 200                INT03750
C                                                                       INT03760
C        GO TO LABEL INDICATED BY INDEX                                 INT03770
      KOUNT = KOUNT + ILC + 3                                           INT03780
      NTP1 = PP(KOUNT)                                                  INT03790
      GO TO 8001                                                        INT03800
C                                                                       INT03810
C                                                                       INT03820
C        PROCESS HOLDAT INSTRUCTION                                     INT03830
C                                                                       INT03840
C        THE FOLLOWING CODE IS IMPLIMENTATION DEPENDENT             *ID*INT03850
C        ALL HOLDAT INSTRUCTIONS EXECUTED DURING INITIALIZATION         INT03860
C                                                                       INT03870
C        STORE NUMBER OF WORDS OF BCD DATA                              INT03880
 21   TT(1) = PP(ILC+1)                                                 INT03890
C                                                                       INT03900
C        STORE NUMBER OF CHARACTERS                                     INT03910
      TT(2) = PP(ILC+3)                                                 INT03920
C                                                                       INT03930
      L=IAP                                                             INT03940
C                                                                       INT03990
C        STORE CHARACTERS                                               INT04000
      K=PP(ILC+3)/8                                                     INT04009
      IF (PP(ILC+3).GT.K*8) K=K+1                                       INT04010
      IF(.NOT.CANFLG) GOTO 2105                                         INT04011
C        WILL STORAGE REQUIREMENTS EXCEED BLOCK LENGTH                  INT04012
      IF((L-CFB+K)/KCBN.EQ.(L-CFB)/KCBN) GOTO 2102                      INT04013
C        YES,INDICATE NO. OF WORDS TO BE SKIPPED.                       INT04014
      J= XCANON(L)                                                      INT04015
      LL(1)=KCBN-MOD((L-CFB),KCBN)                                      INT04016
      IA(J)=XL                                                          INT04017
C        SKIP TO NEXT BLOCK OF STORAGE                                  INT04019
      L=((L-CFB+K)/KCBN)*KCBN+CFB                                       INT04020
      IAP=L                                                             INT04021
 2102 L=XCANON(L)                                                       INT04022
 2105 IA(L)=XTEMP                                                       INT04023
      DO 2110 I = 1,K                                                   INT04024
      L=L+1                                                             INT04030
      J = ILC + 2*(I+1)                                                 INT04040
C                                                                       INT04050
C        OBTAIN CHARACTERS ONE INTEGER WORD FULL AT A TIME              INT04060
      TT(1) = PP(J)                                                     INT04070
      TT(2) = PP(J+1)                                                   INT04080
      IA(L)=XTEMP                                                       INT04085
C                                                                       INT04110
C        STORE CHARACTERS EIGHT AT A TIME                               INT04120
 2110               CONTINUE                                            INT04130
C        STORE POINTER                                                  INT04132
      NTP = NTB+PP(ILC+2)                                               INT04134
      NT(1,NTP) = IAP                                                   INT04136
      IAP = IAP + K + 1                                                 INT04138
C                                                                       INT04140
      GO TO 200                                                         INT04150
C                                                                       INT04160
C                                                                       INT04165
 9010 CALL RECORD (SQNC)                                                INT04170
      CALL CFORM('029003 INDEX OUT OF RANGE. ISN=',DARRAY,1,31)         INT04174
      CALL ICONV (SQNC,DARRAY,32,4)                                     INT04175
      CALL CFORM (' INDEX=',DARRAY,36,7)                                INT04180
      CALL ICONV (I,DARRAY,41,5)                                        INT04190
      CALL CPRINT(DARRAY)                                               INT04200
      CALL HELP                                                         INT04205
 9020 CALL RECORD(SQNC)                                                 INT04210
      CALL CFORM('029004 SYSTEM ERR-ILLEGAL I.L. INSTRUCTION. ISN= '  , INT04211
     X    DARRAY,1,49)                                                  INT04215
      CALL ICONV (SQNC,DARRAY,51,4)                                     INT04220
      CALL CPRINT(DARRAY)                                               INT04230
      CALL HELP                                                         INT04240
      RETURN                                                            INT04245
C  AUSGABE DER FEHLERHAFTEN GEOMETRIE-NAMEN                             INT04250
 1708 ISCHRO=1                                                          INT04260
      IF(COMP1.GE.SCP) GOTO 1720                                        INT04270
C  NAME EINES SKALARELEMENTES                                           INT04280
      ISIZE=1                                                           INT04290
      ISUB=0                                                            INT04300
      GOTO 1750                                                         INT04310
 1720 IF(COMP1.GE.SAP) GOTO 1730                                        INT04320
C  NAME EINES INDIZIERTEN SKALARELEMENTES                               INT04330
      ISIZE=2                                                           INT04340
      ISUB=COM(COMP1+1)                                                 INT04350
      ISIZE1=ISUB*2                                                     INT04360
      GOTO 1750                                                         INT04370
C  NAME EINES GEOMETRIEELEMENTES                                        INT04380
 1730 CALL UNPACK(COM(COMP1),MODE,ISIZE,ISUB)                           INT04390
      IF(ISUB.GE.1) ISIZE1=ISUB*ISIZE+ISUB-1                            INT04440
 1750 CALL CFORM(' WRONG INPUT ELEMENT        :',DARRAY,1,29)           INT04450
      IF(ISUB.GE.1) GOTO 1706                                           INT04460
C  NICHT INDIZIERTE VARIABLE                                            INT04470
      CALL HOLFRM(COM(COMP1+ISIZE),DARRAY,30,8,NWD)                     INT04480
      GOTO 1707                                                         INT04490
C  INDIZIERTE VARIABLE                                                  INT04500
 1706 CALL HOLFRM(COM(COMP1+ISIZE1),DARRAY,30,8,NWD)                    INT04510
      CALL CFORM('(      )',DARRAY,38,8)                                INT04520
      CALL ICONV(ISUB,DARRAY,40,4)                                      INT04530
 1707 CALL CPRINT(DARRAY)                                               INT04540
      GOTO 200                                                          INT04550
      END                                                               INT04560
**** SOURCE FILE : M0002658.W03   ***
*
C.....FORTRAN SUBROUTINE  ....LIB            8/68                 HG    LIB00001
C.....FORTRAN ROUTINE              ..LIB..     HL GRAY 3/68         *ID*LIB00002
      SUBROUTINE  LIB                                                   LIB00010
C--------------------------------------------------------------CDE PAK  LIB00020
C                                                                       LIB00030
C                                                                       LIB00040
C                                                                       LIB00050
C UNLABELED COMMON                                                      LIB00060
C                                                                       LIB00070
C                                                                       LIB00080
      INCLUDE 'BLANKCOM.INC'                                            LIB00162
      INCLUDE 'INTRPEQ.INC'                                             LIB00164
C                                                                       LIB00170
C                                                                       LIB00180
C                                                                       LIB00190
C STOR--COMMON CONTAINING STORAGE PARAMETERS                            LIB00200
C                                                                       LIB00210
C                                                                       LIB00220
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     LIB00230
      INTEGER       NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     LIB00240
C                                                                       LIB00242
C   ADDITIONAL STOR PARAMETERS USED FOR NUMBER TABLE DIRECT ACCESS      LIB00244
C                                                                       LIB00246
      COMMON/STOR/  NRECRD,  NTPARM                                     LIB00248
      DIMENSION     NRECRD(10), NTPARM(10)                              LIB00250
      EQUIVALENCE   (NTPARM(1),NUMBST), (NTPARM(2),NUMOD ),             LIB00252
     .              (NTPARM(3),NDAFLG), (NTPARM(4),NRECST),             LIB00254
     .              (NTPARM(5),IPAGE )                                  LIB00255
C                                                                       LIB00256
C                                                                       LIB00260
C WORK--COMMON CONTAINING WORKING VARIABLES                             LIB00270
C                                                                       LIB00280
C                                                                       LIB00290
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   LIB00300
      INTEGER       PGC,      PGCN,     ILC,      IXC                   LIB00310
C                                                                       LIB00320
      COMMON/WORK/  SCP,      SAP,      NSP,      IAP,   CFP,   COMP    LIB00330
      INTEGER       SCP,      SAP,      NSP,      IAP,   CFP,   COMP    LIB00340
C                                                                       LIB00350
      COMMON/WORK/         NTP,   LNA,   RTP                            LIB00360
      INTEGER  FPP,    NTP,    LNA,    RTP                              LIB00370
      EQUIVALENCE  (FPP,   NTP)                                         LIB00380
      DIMENSION                   LNA(2,20)                             LIB00390
C                                                                       LIB00400
      COMMON/WORK/XXX( 1),AVT,IWRIT                                     LIB00402
      INTEGER                            AVT                            LIB00404
      DIMENSION                                AVT(32)                  LIB00406
C                                                                       LIB00410
C CONST--COMMON CONTAINING CONSTANTS                                    LIB00420
C                                                                       LIB00430
C                                                                       LIB00440
      COMMON/CONST/KTEMPB,KCOMF                                         LIB00450
C                                                                       LIB00460
      INCLUDE 'TOTAL.INC'                                               LIB00464
      INCLUDE 'LDEF.INC'                                                LIB00466
      INCLUDE 'DARRAY.INC'                                              LIB00468
C                                                                       LIB00480
      COMMON/SQNC/SQNO                                                  LIB00484
      INTEGER SQNO                                                      LIB00486
C                                                                       LIB00488
C---------------------------------------------------------------------  LIB00490
      EXTERNAL XCANON                                                   LIB00495
      INTEGER PTABLE,N,I,J,K,TERM,XCANON                                LIB00500
      DIMENSION PTABLE(50)                                              LIB00510
      DATA TERM/-999/,ISPECL/319951634/                                 LIB00520
C                                                                       LIB00530
      N=PP(ILC+1)                                                       LIB00550
      K=1                                                               LIB00560
      KK=IWRIT                                                          LIB00565
      JTEMP=KTEMPB                                                      LIB00570
C                                                                       LIB00580
C.....ENTER MODE OF SUBROUTINE TO BE CALLED,INTO PARM. TABLE            LIB00590
      IF(PP(ILC+2).LT.1000) GOTO 80                                     LIB00592
      NTP = PP(ILC+2)-1000+NTB                                          LIB00596
      PTABLE(1)=-NT(1,NTP)                                              LIB00598
      GOTO 90                                                           LIB00599
 80   PTABLE(1)=-PP(ILC+2)                                              LIB00600
C                                                                       LIB00610
C.....IF NO PARAMETERS, TERMINATE.                                      LIB00620
 90   IF(N.EQ.1) GOTO 20                                                LIB00630
C                                                                       LIB00640
C                                                                       LIB00650
C.....GENERATE INDEX TO COM FOR EACH PARAMETER.  PARAMETERS CONSIST OF  LIB00660
C     TWO PARTS(TYPE AND A POINTER).                                    LIB00670
      N=ILC+N+1                                                         LIB00680
      III=ILC+3                                                         LIB00690
      I=III                                                             LIB00695
      DO 10 M=III,N,2                                                   LIB00700
      J=PP(I)+1                                                         LIB00710
C                                                                       LIB00720
C.....CHECK PARM. TYPE.                                                 LIB00730
      IF(J.LE.0)GOTO 160                                                LIB00740
      GOTO (100,110,120,130,140,150,180,190),J                          LIB00750
C                                                                       LIB00760
C.....  TYPE 0,3  NAME TABLE HOLDS INDEX TO COM FOR PARAMETER           LIB00770
  130 CONTINUE                                                          LIB00771
      NTP=NTB+PP(I+1)                                                   LIB00772
      IF(NT(2,NTP).NE.ISPECL) GO TO 131                                 LIB00773
C---    INDIRECT REFERENCE IS TO A LITERAL NUMBER, MODIFY               LIB00774
C---    NUMBER TABLE INDEX BY PAGING IF NECESSARY                       LIB00775
      KZTEMP=NT(1,NTP)                                                  LIB00776
      IF(NDAFLG.NE.0) CALL XNUMBR(KZTEMP)                               LIB00777
      COMP=FPB+KZTEMP                                                   LIB00778
      GO TO 165                                                         LIB00779
  131 CONTINUE                                                          LIB00780
      COMP=NT(1,NTP)                                                    LIB00781
      GO TO 165                                                         LIB00782
  100 CONTINUE                                                          LIB00783
      NTP=NTB+PP(I+1)                                                   LIB00784
      COMP=NT(1,NTP)                                                    LIB00790
      GOTO 165                                                          LIB00800
C                                                                       LIB00810
C.....TYPE 1 - FLOATING POINT NUMBERS STORED IN NUMBER TABLE            LIB00820
C.....STORE EACH VALUE IN TEMPORARY UNTIL THIS CALL IS COMPLETED        LIB00821
  110 IPNTR=PP(I+1)                                                     LIB00824
      IF (NDAFLG .NE. 0) CALL XNUMBR(IPNTR)                             LIB00826
      IPNTR=NTB+IPNTR                                                   LIB00827
      COM(JTEMP)=COM(IPNTR)                                             LIB00828
      GO TO 155                                                         LIB00830
C.....TYPE 2 - NAMETABLE HAS ACTUAL VALUE. CALCULATE INDEX TO COM.      LIB00832
  120 COMP=NTB+PP(I+1)                                                  LIB00840
      GOTO 170                                                          LIB00850
C                                                                       LIB00860
C.....TYPE 4 PARM. IS THE MODE NO. OF A ROUTINE                         LIB00870
  140 COMP= -PP(I+1)                                                    LIB00880
      GOTO 170                                                          LIB00890
C                                                                       LIB00900
C.....TYPE 5, PARM IS AN INTEGER LITERAL.                               LIB00910
  150 CM(1,JTEMP)=PP(I+1)                                               LIB00920
  155 COMP=JTEMP                                                        LIB00930
      JTEMP=JTEMP+1                                                     LIB00940
      IF (JTEMP .LE. 16+KTEMPB)GO TO 170                                LIB00945
      GO TO 25                                                          LIB00946
C                                                                       LIB00950
C.....TYPE 6, PARM IS AN UNFRACTIONAL NUMBER                            LIB00951
  180 COM(JTEMP)=PP(I+1)                                                LIB00952
      GOTO 155                                                          LIB00953
C                                                                       LIB00954
C.....TYPE 7, PARM IS A FRACTIONAL NUMBER                               LIB00955
  190 CM(1,JTEMP) = PP(I+1)                                             LIB00956
      CM(2,JTEMP) = PP(I+2)                                             LIB00957
      I=I+1                                                             LIB00958
      GOTO 155                                                          LIB00959
C                                                                       LIB00960
C.....NAMETABLE CONTAINS INDEX TO INTERNAL ARRAY.  J POINTS TO ELEMENT  LIB00970
C     OF THAT ARRAY                                                     LIB00980
  160 NTP=NTB+PP(I+1)                                                   LIB00990
      COMP=NT(1,NTP)-J                                                  LIB01000
  165 IF(CANFLG) COMP=XCANON(COMP)                                      LIB01005
  170 K=K+1                                                             LIB01010
C                                                                       LIB01020
C.....FILL PARAMETER TABLE.                                             LIB01030
      PTABLE(K)=COMP                                                    LIB01040
      I=I+2                                                             LIB01045
   10 CONTINUE                                                          LIB01050
C                                                                       LIB01060
C                                                                       LIB01070
C        ARE MORE BLOCKS OF CANNON REQUIRED THAN SPACE ALLOWS           LIB01072
   20 IF(IWRIT-KK.LT.NBLK.OR..NOT.CANFLG) GOTO 30                       LIB01074
   25 CALL CFORM('029006 SYSTEM ERR-ILLEGAL I.L. CALL. ISN= ',          LIB01076
     C  DARRAY,1,41)                                                    LIB01077
      CALL ICONV(SQNO,DARRAY,42,4)                                      LIB01079
      CALL CPRINT(DARRAY)                                               LIB01080
      CALL HELP                                                         LIB01081
C..... TERMINATE PARM.  TABLE                                           LIB01082
   30 PTABLE(K+1)=TERM                                                  LIB01090
C                                                                       LIB01100
C.....CALL ROUTINE WHICH CHANGES INDICES TO ADDRESSES AND PREFORMS THE  LIB01110
C     ACTUAL CALL TO SUBROUTINE INDICATED BY THE I.L..                  LIB01120
      CALL XCALL(PTABLE)                                                LIB01130
      RETURN                                                            LIB01140
      END                                                               LIB01150
**** SOURCE FILE : M0004101.V11   ***
*
C                                                                       PAGE0001
C.....IMPLEMENTATION DEPENDENT FUNCTION     .....PAGE...    8/68     HG PAGE0002
C.....FORTRAN FUNCTION              ..PAGE..     HG   6/68              PAGE0020
C                                                                       PAGE0040
      INTEGER FUNCTION PAGE(M)                                          PAGE0060
C                                                                       PAGE0080
C                                                                       PAGE0100
C PG.C1        LOAD POINT OF CURRENT PAGE                               PAGE0120
C PG.P         LOAD POINT FOR LAST PAGE LOADED                          PAGE0140
C PG.L         LAST PAGE TO BE LOADED. =0 DURING LOADING OF LABEL,RESERVPAGE0160
C              TEXT                                                     PAGE0180
C PAG          TABLE GIVING LOCATION OF A PAGE.  IF PAGE NOT            PAGE0200
C              IN CORE,TABLE ENTRY = 0.                                 PAGE0220
C I.PG.P       PAGE INITIAL LOAD POINT                                  PAGE0240
C N            NUMBER OF REQUIRED PAGE                                  PAGE0260
C I            = 1 FOR PART PROGRAM TEXT,=2 FOR MACRO TEXT              PAGE0280
C                                                                       PAGE0300
C                                                                       PAGE0320
C                                                                       PAGE0340
      INCLUDE 'BLANKCOM.INC'                                            PAGE0412
      INCLUDE 'INTRPEQ.INC'                                             PAGE0414
C                                                                       PAGE0416
      COMMON/STOR/ NTB, FPB, PPB, COMN                                  PAGE0420
      INTEGER      NTB, FPB, PPB, COMN                                  PAGE0440
      COMMON/WORK/ PGC                                                  PAGE0460
      INTEGER      PGC                                                  PAGE0480
C                                                                       PAGE0500
C...            SYSTEM I/O FILE NAMES                                   PAGE0520
C                                                                       PAGE0540
      INCLUDE 'SYMFIL.INC'                                              PAGE0565
C                                                                       PAGE0566
      INCLUDE 'DARRAY.INC'                                              PAGE0567
C                                                                       PAGE0740
      INTEGER N,PGL,I,PGP,ELFIL,JN,IPGP,PGC1                            PAGE0760
      INTEGER   PAG                                                     PAGE0761
      INTEGER DIAG                                                      PAGE0770
      DIMENSION PAG(600,2),PGL(2),ELFIL(2)                              PAGE0780
      LOGICAL PAGFLG                                                    PAGE0800
      EQUIVALENCE (ELFIL2,ELFIL(1))                                     PAGE0820
C                                                                       PAGE0824
      SAVE PGP,PGC1,PAG,PGL                                             PAGE0826
C                                                                       PAGE0830
      DATA PGP/2000000/,PGC1/0/,PAG/1200*0/,PGL/2*0/                    PAGE0840
C                                                                       PAGE0860
C                                                                       PAGE0880
      N = M                                                             PAGE0890
C CHECK IF N WITHIN LIMITS                                              PAGE0900
      IF(IABS(N).GT.600)GOTO 9998                                       PAGE0920
C                                                                       PAGE0940
C SET PAGE TYPE INDICATOR I.                                            PAGE0960
      I=1                                                               PAGE0980
      IF(N)110,9998,120                                                 PAGE1000
  110 N=-N                                                              PAGE1020
      I=2                                                               PAGE1040
C                                                                       PAGE1060
C IS PAGE IN CORE                                                       PAGE1080
  120 IF(PAG(N,I).NE.0)GOTO 140                                         PAGE1100
C                                                                       PAGE1120
C NO                                                                    PAGE1140
C IS PAGE TO BE LOADED LABEL,RESERV TEXT                                PAGE1160
      IF(PGL(1).NE.0)GOTO 200                                           PAGE1180
C                                                                       PAGE1200
C YES                                                                   PAGE1220
C LOAD LABEL,RESERV TEXT                                                PAGE1240
      JN=0                                                              PAGE1260
      CALL AREAD(ELFIL1,JN,PP(PPB),256,IR)                              PAGE1280
      IF(IR.EQ.1) GO TO 400                                             PAGE1300
C INDICATE BEGINNING OF PAGE                                            PAGE1320
      PAGE=PPB                                                          PAGE1340
C                                                                       PAGE1360
C KEEP CURRENT PAGE NUMBER AT 0                                         PAGE1380
      PGC=-1                                                            PAGE1400
      RETURN                                                            PAGE1420
C                                                                       PAGE1440
C                                                                       PAGE1460
C NO.  MACRO OR PART PROGRAM TEXT                                       PAGE1480
C BEGIN CYCLIC SEARCH                                                   PAGE1500
  200 PAGFLG=.TRUE.                                                     PAGE1520
C                                                                       PAGE1540
C HOLD STARTING POINT                                                   PAGE1560
      IPGP=PGP                                                          PAGE1580
C                                                                       PAGE1600
C OBTAIN NEW LOAD POINT                                                 PAGE1620
  210 PGP=PGP+256                                                       PAGE1640
C                                                                       PAGE1660
C WILL PAGE BE OUTSIDE LIMITS OF STORAGE                                PAGE1680
      IF(PGP+255.LE.COMN*2)GOTO 220                                     PAGE1700
C                                                                       PAGE1720
C YES                                                                   PAGE1740
C RETURN POINTER TO INITIAL LOAD POINT                                  PAGE1760
      PGP=PPB                                                           PAGE1780
C                                                                       PAGE1800
C HAS COMPLETE CYCLE BEEN MADE                                          PAGE1820
  220 IF(IPGP.NE.PGP)GOTO 230                                           PAGE1840
C                                                                       PAGE1860
C YES,A MACRO TEXT PAGE MAY NOW BE SCRATCHED                            PAGE1880
      PAGFLG=.FALSE.                                                    PAGE1900
      GOTO 210                                                          PAGE1920
C                                                                       PAGE1940
C NO,CYCLE NOT COMPLETE                                                 PAGE1960
C IS LOAD POINT AT CURRENT PAGE                                         PAGE1980
C IF YES, CONTINUE SEARCH, CURRENT PAGE IS NOT TO BE SCRATCHED          PAGE2000
  230 IF(PGP.EQ.PGC1)GOTO 210                                           PAGE2020
C                                                                       PAGE2040
C NO                                                                    PAGE2060
C CAN MACRO TEXT BE SCRATCHED                                           PAGE2080
      IF(.NOT.PAGFLG)GOTO 300                                           PAGE2100
C                                                                       PAGE2120
C NO,IS PAGE MACRO TEXT.  IF YES CONTINUE SEARCH.                       PAGE2140
      IF(PP(PGP).LT.0)GOTO 210                                          PAGE2160
C                                                                       PAGE2180
C PAGE CAN BE SCRATCHED                                                 PAGE2200
C  REMOVE REFERENCE TO DELETED PAGE                                     PAGE2202
  300 K = 1                                                             PAGE2204
      J = PP(PGP)                                                       PAGE2206
      IF(J.EQ.0) GOTO 306                                               PAGE2208
      IF(J.GT.0) GOTO 303                                               PAGE2210
      J = - J                                                           PAGE2212
      K = 2                                                             PAGE2214
  303 PAG(J,K) = 0                                                      PAGE2216
C                                                                       PAGE2540
C NEXT                                                                  PAGE2560
C LOAD DESIRED PAGE                                                     PAGE2580
  306 CALL AREAD(ELFIL(I),N,PP(PGP),256,IR)                             PAGE2600
      IF(IR.EQ.1) GO TO 9998                                            PAGE2620
C                                                                       PAGE2640
C SAVE NUMBER OF LAST PAGE TO BE LOADED                                 PAGE2660
  130 PGL(I)=N                                                          PAGE2680
C                                                                       PAGE2700
C SET POINTER TO PAGE                                                   PAGE2720
C---    STORE A COMPACT VERSION OF THE PAGE LOCATION IN PAG             PAGE2740
      PAG(N,I)=(PGP-1)/2                                                PAGE2741
C                                                                       PAGE2760
C INDICATE STARTING LOCATION OF PAGE                                    PAGE2780
C---    RETRIEVE THE CURRENT PAGE LOCATION                              PAGE2800
  140 PAGE=PAG(N,I)*2+1                                                 PAGE2801
C                                                                       PAGE2820
C SAVE CURRENT PAGE LOAD POINT                                          PAGE2840
      PGC1=PAGE                                                         PAGE2860
      RETURN                                                            PAGE2880
C                                                                       PAGE2900
C ERROR TOO MANY PAGES-N TOO LARGE.                                     PAGE2920
 9998 CALL CFORM('029001 TOO MANY STATEMENTS IN THIS PART PROGRAM ',    PAGE2940
     C DARRAY,1,47)                                                     PAGE2950
      CALL CPRINT (DARRAY)                                              PAGE2960
      CALL  HELP                                                        PAGE2980
      RETURN                                                            PAGE3000
C                                                                       PAGE3020
C CLEAR PAGE AREA                                                       PAGE3040
  400 PGP=PPB                                                           PAGE3060
  410 PP(PGP) = 0                                                       PAGE3080
      PGP = PGP + 256                                                   PAGE4000
      IF(PGP.GE.COMN*2) GOTO 200                                        PAGE4020
      GOTO 410                                                          PAGE4040
      END                                                               PAGE4060
**** SOURCE FILE : M0000952.V04   ***
*
C.....FORTRAN SUBROUTINE  ....PUT            8/68                 HG    PUT00001
C.....FORTRAN FUNCTION             ..PUT..     HL GRAY 3/68         *ID*PUT00002
      SUBROUTINE PUT (ARG, OD)                                          PUT00010
C                                                                       PUT00020
C FORTRAN SUBROUTINE 'PUT (ARG, OD)'--PUT ARGUMENT INTO OPERAND         PUT00030
C                                                                       PUT00040
C PURPOSE      TO PUT THE VALUE OF AN ARGUMENT INTO THE PART PROGRAM    PUT00050
C              OPERAND, OD                                              PUT00060
C                                                                       PUT00070
C LINKAGE      CALL PUT(ARG, OD)                                        PUT00080
C                                                                       PUT00090
C ARGUMENTS    ARG    IS THE VALUE TO BE STORED                         PUT00100
C              OD     IS THE ORDINAL NUMBER OF THE OPERAND              PUT00110
C                                                                       PUT00120
C METHOD       THE OPERAND CONSISTS OF THE ORDERED PAIR (TYPE, VALUE)   PUT00130
C              WHERE--                                                  PUT00140
C                                                                       PUT00150
C              TYPE     VALUE                                           PUT00160
C               0        INDEX TO NAME TABLE WHICH CONTAINS POINTER     PUT00170
C                        TO STORAGE FOR VARIABLE                        PUT00180
C               1,2      ERROR CONDITION                                PUT00190
C               3        INDEX TO NAME TABLE                            PUT00200
C              -N        INDEX TO NAME TABLE WHICH CONTAINS BASE ADDR.  PUT00210
C                                                                       PUT00220
C--------------------------------------------------------------CDE PAK  PUT00230
C                                                                       PUT00240
C                                                                       PUT00250
C                                                                       PUT00260
C UNLABELED COMMON                                                      PUT00270
C                                                                       PUT00280
C                                                                       PUT00290
      INCLUDE 'BLANKCOM.INC'                                            PUT00372
      INCLUDE 'INTRPEQ.INC'                                             PUT00374
C                                                                       PUT00380
C                                                                       PUT00390
C                                                                       PUT00400
C STOR--COMMON CONTAINING STORAGE PARAMETERS                            PUT00410
C                                                                       PUT00420
C                                                                       PUT00430
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN                  PUT00440
      INTEGER       NTB,      FPB,      PPB,      COMN                  PUT00450
C                                                                       PUT00460
C                                                                       PUT00470
C WORK--COMMON CONTAINING WORKING VARIABLES                             PUT00480
C                                                                       PUT00490
C                                                                       PUT00500
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   PUT00510
      INTEGER       PGC,      PGCN,     ILC,      IXC                   PUT00520
C                                                                       PUT00522
      COMMON/WORK/  SCP,      SAP,      NSP,      IAP,    CFP,    COMP  PUT00524
      INTEGER       SCP,      SAP,      NSP,      IAP,    CFP,    COMP  PUT00526
C                                                                       PUT00530
      COMMON/WORK/         NTP,   LNA,   RTP                            PUT00540
      INTEGER  FPP,    NTP,    LNA,    RTP                              PUT00550
      EQUIVALENCE  (FPP,   NTP)                                         PUT00560
      DIMENSION                   LNA(2,20)                             PUT00570
C                                                                       PUT00580
      INCLUDE 'TOTAL.INC'                                               PUT00584
      INCLUDE 'LDEF.INC'                                                PUT00586
C                                                                       PUT00600
C                                                                       PUT00610
C---------------------------------------------------------------------  PUT00620
C                                                                       PUT00630
      INTEGER OD,K,L,XCANON                                             PUT00640
      DOUBLE PRECISION ARG                                              PUT00650
      EXTERNAL XCANON                                                   PUT00655
C                                                                       PUT00660
C        EXTRACT TYPE AND ADD ONE FOR 'GO TO' (L)                       PUT00670
C                                                                       PUT00680
      K=ILC + OD                                                        PUT00690
      L = PP(K) + 1                                                     PUT00700
C                                                                       PUT00710
C        EXTRACT VALUE OF OPERAND (K)                                   PUT00720
C                                                                       PUT00730
      K = PP(K+1)                                                       PUT00740
C                                                                       PUT00750
C        PUT OPERAND ACCORDING TO TYPE                                  PUT00760
C                                                                       PUT00770
      IF (L .LE. 0) GO TO 50                                            PUT00780
C                                                                       PUT00790
C                                                                       PUT00860
C        COMPUTE NAME TABLE POINTER, STORE ARG AND EXIT                 PUT00870
C                                                                       PUT00880
 10   NTP = NTB + K                                                     PUT00890
      K = NT(1,NTP)                                                     PUT00900
      IF(CANFLG) K=XCANON(K)                                            PUT00905
      CF(K) = ARG                                                       PUT00910
      RETURN                                                            PUT00920
C                                                                       PUT00930
C                                                                       PUT00940
C        TYPE -N                                                        PUT00950
C                                                                       PUT00960
C        COMPUTE EFFECTIVE ADDRESS = BASE ADDRESS + INDEX,              PUT00970
C        STORE ARGUMENT AND EXIT                                        PUT00980
C                                                                       PUT00990
 50   NTP = NTB + K                                                     PUT01000
      K = NT(1,NTP) - L                                                 PUT01010
      IF(CANFLG) K=XCANON(K)                                            PUT01015
      IA(K) = ARG                                                       PUT01020
      RETURN                                                            PUT01030
C                                                                       PUT01040
      END                                                               PUT01090
**** SOURCE FILE : M0000959.W01   ***
*
C.....FORTRAN SUBROUTINE  ....RESRV          8/68                 HG    RES00001
C.....FORTRAN ROUTINE              ..RESRV..   HL GRAY 3/68         *ID*RES00002
      SUBROUTINE RESRV                                                  RES00010
C                                                                       RES00020
C FORTRAN SUBROUTINE 'RESRV'--PROCESS INTERMEDIATE LANGUAGE RESRV       RES00030
C              INSTRUCTION                                              RES00040
C                                                                       RES00050
C PURPOSE      TO ESTABLISH STORAGE FOR CANONICAL FORMS AND BLANK COMMONRES00060
C              TO PLACE POINTERS IN NAME TABLE                          RES00070
C                                                                       RES00080
C LINKAGE      CALL RESRV                                               RES00090
C                                                                       RES00100
C ARGUMENTS    THROUGH COMMON                                           RES00110
C                                                                       RES00120
C METHOD       ALL ELEMENTS ARE STORED IN THE CANONICAL FORMS ARRAY   ORRES00130
C              BLANK COMMON.  SEPERATE POINTERS ARE MAINTAINED FOR---   RES00140
C                                                                       RES00150
C                   SCALARS                                             RES00160
C                   SCALAR ARRAYS                                       RES00170
C                   NONSCALARS                                          RES00180
C                   INTERNAL ARRAYS                                     RES00190
C                   BLANK COMMON                                        RES00200
C                                                                       RES00210
C              MODE AND NUMBER ARE EXAMINED TO DETERMINE WHICH          RES00220
C              TYPE OF PROCESSING IS REQUIRED.                          RES00230
C                                                                       RES00240
C--------------------------------------------------------------CDE PAK  RES00250
C                                                                       RES00260
C                                                                       RES00270
C                                                                       RES00280
C UNLABELED COMMON                                                      RES00290
C                                                                       RES00300
C                                                                       RES00310
      INCLUDE 'BLANKCOM.INC'                                            RES00392
      INCLUDE 'INTRPEQ.INC'                                             RES00394
C                                                                       RES00400
C                                                                       RES00410
C                                                                       RES00420
C STOR--COMMON CONTAINING STORAGE PARAMETERS                            RES00430
C                                                                       RES00440
C                                                                       RES00450
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN,      CFB        RES00460
      INTEGER       NTB,      FPB,      PPB,      COMN,      CFB        RES00470
C                                                                       RES00480
C                                                                       RES00490
C WORK--COMMON CONTAINING WORKING VARIABLES                             RES00500
C                                                                       RES00510
C                                                                       RES00520
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   RES00530
      INTEGER       PGC,      PGCN,     ILC,      IXC                   RES00540
C                                                                       RES00550
      COMMON/WORK/  SCP,      SAP,      NSP,      IAP,   CFP,   COMP    RES00560
      INTEGER       SCP,      SAP,      NSP,      IAP,   CFP,   COMP    RES00570
C                                                                       RES00580
      COMMON/WORK/         NTP,   LNA,   RTP                            RES00590
      INTEGER  FPP,    NTP,    LNA,    RTP                              RES00600
      EQUIVALENCE  (FPP,   NTP)                                         RES00610
      DIMENSION                   LNA(2,20)                             RES00620
C                                                                       RES00630
C                                                                       RES00640
C CONST--COMMON CONTAINING CONSTANTS                                    RES00650
C                                                                       RES00660
      COMMON/CONST/KCOMT,KCOMF,CILPRT,KCBN                              RES00670
C                                                                       RES00680
C                                                                       RES00690
      INCLUDE 'TOTAL.INC'                                               RES00693
      INCLUDE 'LDEF.INC'                                                RES00695
C                                                                       RES00696
C                                                                       RES00698
C---------------------------------------------------------------------  RES00700
C                                                                       RES00710
      EXTERNAL XCANON,BCDF                                              RES00715
      INTEGER  K,M,N,MODE,P,SIZ,R,P1,P0,R1,R0,XCANON,RR,BCDF            RES00720
      DIMENSION  P(4),R(4),RR(2)                                        RES00725
      DOUBLE PRECISION  NDEX,RR1                                        RES00730
      EQUIVALENCE  (P(1),SCP),(RR(1),RR1)                               RES00735
      DATA R/4*128/,RR/2*0/                                             RES00745
C                                                                       RES00750
C                                                                       RES00760
      N=PP(ILC+5)                                                       RES00770
C                                                                       RES00780
      SIZ=PP(ILC+4)+1                                                   RES00790
      MODE=PP(ILC+3)                                                    RES00800
      MD=MODE                                                           RES00802
      IF (MODE.EQ.23)MODE=21                                            RES00804
      NTP=NTB+PP(ILC+2)                                                 RES00810
C        IF MODE IS ZERO, PROCESS AS AN INTERNAL ARRAY                  RES00820
      IF(MODE.NE.0) GOTO 5                                              RES00830
      M = 4                                                             RES00840
      SIZ = SIZ-1                                                       RES00850
C        IF MODE .GT. 0 AND .NE. 21, PROCESS AS NON-SCALAR              RES00860
    5 IF(MODE.GT.0 .AND. MODE.NE.21) M=3                                RES00870
C        IF MODE .LT. 0, PROCESS AS BLANK COMMON                        RES00880
      IF(MODE.LT.0) GOTO 50                                             RES00890
C        IF MODE IS 21, PROCESS AS A NON- OR SUB- SCRIPTED SCALAR       RES00900
      IF(MODE.EQ.21 .AND. N.GT.1) M=2                                   RES00910
      IF(MODE.NE.21.OR.N.NE.1)GOTO  7                                   RES00915
      M=1                                                               RES00920
      SIZ=SIZ-1                                                         RES00925
C        CALCULATE INDEX AND REMAINING SPACE IN BLOCK(R0).              RES00930
    7 NDEX = (MD*100+SIZ-1)*10000                                       RES00940
      IF(N.EQ.1)NDEX=NDEX-1.0                                           RES00945
      R0 = R(M)                                                         RES00950
      R1 = 0                                                            RES00960
C  OBTAIN CURRENT VERTUAL(P0) AND ACTUAL(P1) POINTERS TO BLOCK M.       RES00965
      P0 = P(M)                                                         RES00970
      P1 = P0                                                           RES00980
      IF(.NOT.CANFLG) GOTO 30                                           RES00990
   10 P0 = P0 + R1                                                      RES00995
C        WILL CANNONICAL FORM FIT IN BLOCK                              RES01000
      IF((R0-SIZ*N) .GE. (2-M/4)) GOTO 25                               RES01010
C        NO,SPLIT IF INDEXED                                            RES01020
C        HOW MANY ELEMENTS OF ARRAY FIT                                 RES01030
      K = (R0-1)/SIZ                                                    RES01040
C        ENTIRE CANNONICAL FORM CAN NOT FIT                             RES01050
      IF(K.EQ.N ) K = K-1                                               RES01060
C        IF NO ELEMENTS FIT, BEGIN NEW BLOCK                            RES01070
      IF(K.NE.0) GOTO 15                                                RES01080
      P0 = P0+R0                                                        RES01090
      R0 = KCBN                                                         RES01100
      GOTO 10                                                           RES01110
C        DETERMINE SPACE NOT OCCUPIED                                   RES01120
   15 R1 = R0-K*SIZ-1                                                   RES01130
C        DETERMINE REMAINING SPACE WHICH CAN BE OCCUPPIED               RES01140
      R0 = R0-R1                                                        RES01150
      P1 = XCANON(P0)                                                   RES01155
C        FLAG SPACE THAT IS NOT OCCUPIED                                RES01160
   20 RR(1) = R1                                                        RES01170
      RR(2) = (P0-CFB)/KCBN+1+BCDF('BK')                                RES01175
      CF(P1) = RR1                                                      RES01180
C        ADVANCE POINTER                                                RES01190
      P0 = P0+R1                                                        RES01200
   25 P1 = XCANON(P0)                                                   RES01210
C        INITIALIZE CANNONICAL FORM                                     RES01220
   30 GOTO (31,32,33,34), M                                             RES01230
C        NON-SUBSCRIPTED SCALAR                                         RES01240
   31 CALL TRASH(CF(P1))                                                RES01250
      GOTO 34                                                           RES01260
C        SUBSCRIPTED SCALAR                                             RES01270
   32 CALL TRASH(CF(P1))                                                RES01280
      CF(P1+1)= N                                                       RES01290
      GOTO 34                                                           RES01300
C        NON-SCALAR                                                     RES01310
   33 CF(P1) = NDEX+N                                                   RES01320
      CALL TRASH(CF(P1+1))                                              RES01330
C        INTERNAL ARRAY REQUIRES NO INITIALIZATION                      RES01340
   34 P1 = P1+SIZ                                                       RES01350
      P0 = P0+SIZ                                                       RES01355
      R0 = R0-SIZ                                                       RES01360
      N = N-1                                                           RES01370
C        IF NOT ENOUGH SPACE OR NO MORE FORMS OR NOT                    RES01380
C        ENOUGH SPACE FOR LAST FORM, START NEW BLOCK                    RES01390
      IF(CANFLG)GO TO 38                                                RES01395
      IF(N.GE.1)GO TO 30                                                RES01400
      GO TO 40                                                          RES01405
   38 IF((R0-SIZ.GE.1).AND.(N.GT.1))GO TO 30                            RES01410
      IF((R0-SIZ.GE.2-M/4).AND.(N.EQ.1)) GOTO 30                        RES01415
C        SAVE SPACE COUNT, INDICATE NEW BLOCK                           RES01420
      R1 = R0                                                           RES01430
      R0 = KCBN                                                         RES01440
      RR(1) = R1                                                        RES01442
      RR(2) = (P0-CFB)/KCBN+1+BCDF('BK')                                RES01445
      CF(P1) = RR1                                                      RES01448
C        STILL MORE FORMS                                               RES01450
      IF(N.GE.1) GOTO 10                                                RES01460
C        NO, STORE NAME IF REQUIRED                                     RES01470
   40 GO TO (41,41,41,42), M                                            RES01480
   41 CF(P1) = NB(NTP)                                                  RES01490
      P1=P1+1                                                           RES01500
      P0   = P0+1                                                       RES01510
      R1   = R1-1                                                       RES01520
C                                                                       RES01530
   42 IF(.NOT.CANFLG)GOTO 43                                            RES01533
      RR(1) = R1                                                        RES01535
      RR(2)=(P0-CFB)/KCBN+1+BCDF('BK')                                  RES01537
      CF(P1) = RR1                                                      RES01540
   43 P(M) = P0                                                         RES01550
      R(M) = R1                                                         RES01560
C         STORE POINTER TO FORM(S)                                      RES01570
      IF(M.LE.2)SIZ=SIZ+1                                               RES01575
   45 NT(1,NTP) = P0  -SIZ                                              RES01580
      RETURN                                                            RES01590
C                                                                       RES01950
C        BLANK COMMON                                                   RES01960
C                                                                       RES01970
 50   NTP = NTB + PP(ILC+2)                                             RES01980
      NT(1,NTP) = COMP                                                  RES01990
      COMP = COMP + PP(ILC +5)                                          RES02000
      RETURN                                                            RES02010
      END                                                               RES02020
**** SOURCE FILE : SAVEAC.V01   ***
*
      SUBROUTINE SAVEAC(AC)                                             00000100
C                                                                       00000200
C   PURPOSE: SYSTEM INDEPENDENT ROUTINE TO SAVE VALUE REFERENCED BY .AC.00000300
C                                                                       00000400
      INTEGER AC,XCANON                                                 00000500
C                                                                       00000600
      INCLUDE 'BLANKCOM.INC'                                            00000700
      INCLUDE 'INTRPEQ.INC'                                             00000800
      INCLUDE 'LDEF.INC'                                                00000850
C                                                                       00000900
      COMMON/STOR/NTB,FPB,PPB,COMN,CFB                                  00001000
      INTEGER NTB,FPB,PPB,COMN,CFB                                      00001100
C                                                                       00001200
C    .AC. IS IN FIXED LOCATION OF NAMTBL                                00001300
C                                                                       00001400
      NTP=NTB+166                                                       00001500
C                                                                       00001600
      J=NT(1,NTP)                                                       00001700
      IF (CANFLG)J=XCANON(J)                                            00001800
C                                                                       00001900
      COM(J)=DBLE(AC)                                                   00002000
C                                                                       00002100
      RETURN                                                            00002200
      END                                                               00002300
                                                                        00002400
**** SOURCE FILE : M0000962.V03   ***
*
C.....IMPLEMENTATION DEPENDENT SUBROUTINE ...SEQ           8/68      HG SEQ00001
C.....FORTRAN ROUTINE              ..SEQ..     HL GRAY 3/68         *ID*SEQ00002
      SUBROUTINE  SEQ (N)                                               SEQ00010
C        THIS ROUTINE EXISTS ONLY BECAUSE     SQNC MAY ONLY APPEAR IN   SEQ00020
C        A PROGRAM COMPILED IN EBCDIC.                                  SEQ00030
      COMMON/SQNC/SQNC                                                  SEQ00040
      INTEGER  SQNC                                                     SEQ00045
      INTEGER N                                                         SEQ00050
      SQNC = N                                                          SEQ00060
      RETURN                                                            SEQ00070
      END                                                               SEQ00080
**** SOURCE FILE : M0000732.V07   ***
*
C                                                                       SET00001
C.....FORTRAN ROUTINE              ..SET..     HL GRAY 3/68         *ID*SET00002
      SUBROUTINE  SET(LN)                                               SET00010
C                                                                       SET00020
C FORTRAN SUBROUTINE 'SET(LN)'  -- SET LOCATION COUNTER TO LINE         SET00030
C                                                                       SET00040
C PURPOSE      'SET'    SETS THE INTERPRETER PSEUDOLOCATION  COUNTER,   SET00050
C              'ILC' AND OTHER DEPENDENT VARIABLES TO THE VALUES        SET00060
C              CORRESPONDING TO THE INPUT LINE.                         SET00070
C                                                                       SET00080
C LINKAGE      CALL SET(LN)                                             SET00090
C                                                                       SET00100
C              WHERE                                                    SET00110
C              LN IS ANY LINE                                           SET00120
C                                                                       SET00130
C--------------------------------------------------------------CDE PAK  SET00140
C                                                                       SET00150
C                                                                       SET00160
C                                                                       SET00170
C UNLABELED COMMON                                                      SET00180
C                                                                       SET00190
C                                                                       SET00200
       INCLUDE 'BLANKCOM.INC'                                           SET00282
       INCLUDE 'INTRPEQ.INC'                                            SET00284
C                                                                       SET00290
C                                                                       SET00300
C                                                                       SET00310
C                                                                       SET00320
C WORK--COMMON CONTAINING WORKING VARIABLES                             SET00330
C                                                                       SET00340
C                                                                       SET00350
      COMMON/WORK/  PGC,      PGCN,     ILC,      IXC                   SET00360
      INTEGER       PGC,      PGCN,     ILC,      IXC                   SET00370
C                                                                       SET00380
C                                                                       SET00390
C                                                                       SET00400
C---------------------------------------------------------------------  SET00410
C                                                                       SET00414
      INTEGER SQNC                                                      SET00415
C                                                                       SET00420
      INCLUDE 'DARRAY.INC'                                              SET00421
C                                                                       SET00424
C         LN IS ANY LINE(PAGE AND INDEX)                                SET00430
      INTEGER LN                                                        SET00440
      DIMENSION LN(2)                                                   SET00450
C                                                                       SET00460
      EXTERNAL PAGE                                                     SET00470
      INTEGER  PAGE                                                     SET00480
      LN1=IABS(LN(1))                                                   SET00481
      IF((LN1.GT.0.AND.LN1.LE.400).AND.(LN(2).GT.0.AND.                 SET00482
     1 LN(2).LE.256)) GOTO 100                                          SET00483
      CALL RECORD(SQNC)                                                 SET00484
      CALL CFORM('029007 UNDEFINED LABEL REFERENCED. ISN=',DARRAY,1,39) SET00485
      CALL ICONV(SQNC,DARRAY,40,4)                                      SET00486
      CALL CPRINT(DARRAY)                                               SET00487
      CALL HELP                                                         SET00488
C                                                                       SET00490
C        SET LOCATION COUNTER TO BEGINNING OF PAGE                      SET00500
C                                                                       SET00510
  100 ILC = PAGE(LN(1))                                                 SET00520
C                                                                       SET00530
C        SET NEW PAGE NUMBER AND INDEX                                  SET00540
C                                                                       SET00550
      PGC = LN(1)                                                       SET00560
C                                                                       SET00570
      IXC = LN(2)                                                       SET00580
C                                                                       SET00590
C                                                                       SET00600
C        SET NUMBER OF WORDS ON CURRENT PAGE                            SET00610
C                                                                       SET00620
      PGCN = PP(ILC+1)+2                                                SET00630
C                                                                       SET00640
C        ADVANCE LOCATION COUNTER TO INSTRUCTION                        SET00650
C                                                                       SET00660
      ILC = ILC + IXC -1                                                SET00670
      RETURN                                                            SET00680
      END                                                               SET00690
**** SOURCE FILE : UNASGN00.ORG   ***
*
      SUBROUTINE UNASGN                                                 00000100
*                                                                       00000200
*     CALL ABNEND TO TERMINATE PROCESSING                               00000300
*                                                                       00000400
      CALL ABNEND                                                       00000500
      RETURN                                                            00000600
      END                                                               00000700
**** SOURCE FILE : XCALL000.V06   ***
*
      SUBROUTINE XCALL(IP)                                              00000100
*                                                                       00000200
*  *  XCALL  *   VAX11 FORTRAN VERSION  17.3.82  E.MCLELLAN             00000300
*                                                                       00000400
*  PURPOSE    TO CONVERT THE PARAMETER LIST GENERATED BY 'LIB'          00000500
*             TO ACTUAL ADDRESSES IN UNLABELLED COMMON AND TO           00000600
*             PERFORM THE NECESSARY SUBROUTINE CALL                     00000700
*  CALLING SEQUENCE                                                     00000800
*             CALL XCALL(IP)                                            00000900
*  ARGUMENTS                                                            00001000
*             IP   PARAMETER LIST                                       00001100
*                                                                       00001200
C                                                                       00001300
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00001400
C                                                                       00001500
C   UNLABELED COMMON                                                    00001600
C                                                                       00001700
      INCLUDE 'BLANKCOM.INC'                                            00001800
      INCLUDE 'INTRPEQ.INC'                                             00001900
C                                                                       00002000
      DIMENSION IP(50)                                                  00002100
      INTEGER TERM,AC,APT201                                            00002200
      DATA TERM/-999/                                                   00002300
C                                                                       00002400
C                                                                       00002500
C   SUBROUTINE MODE                                                     00002600
C                                                                       00002700
      MODE=-IP(1)                                                       00002800
C                                                                       00002900
C   BRANCH ACCORDING TO SUBROUTINE MODE                                 00003000
C                                                                       00003100
      GOTO (  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,00003200
     1       16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,00003300
     2       31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,00003400
     3       46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,00003500
     4       61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,00003600
     5       76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,00003700
     6       91, 92, 93, 94, 95, 96, 97, 98, 99,100,101,102,103,104,105,00003800
     7      106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,00003900
     8      121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,00004000
     9      136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,00004100
     A      151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,00004200
     B      166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,00004300
     C      181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,00004400
     D      196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,00004500
     E      211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,00004600
     F      226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,00004700
     G      241,242,243,244,245,246,247,248,249),MODE                   00004800
      CALL ABNEND                                                       00004900
      RETURN                                                            00005000
C                                                                       00005100
    1 CALL TLLFT                                                        00005200
      RETURN                                                            00005300
    2 CALL TLRGT                                                        00005400
      RETURN                                                            00005500
    3 CALL TLON                                                         00005600
      RETURN                                                            00005700
    4 CALL TLONPS                                                       00005800
      RETURN                                                            00005900
    5 CALL TLOFPS                                                       00006000
      RETURN                                                            00006100
    6 CALL MULTAX(COM(IP(2)))                                           00006200
      RETURN                                                            00006300
    7 CALL NOPS                                                         00006400
      RETURN                                                            00006500
    8 CALL AUTOPS                                                       00006600
      RETURN                                                            00006700
    9 CALL CUT                                                          00006800
      RETURN                                                            00006900
   10 CALL DNTCUT                                                       00007000
      RETURN                                                            00007100
   11 CALL NDTEST                                                       00007200
      RETURN                                                            00007300
   12 CALL COMP3D                                                       00007400
      RETURN                                                            00007500
   13 CALL GOUGCK(COM(IP(2)))                                           00007600
      RETURN                                                            00007700
   14 CALL UNASGN                                                       00007800
      RETURN                                                            00007900
   15 CALL UNASGN                                                       00008000
      RETURN                                                            00008100
   16 CALL UNASGN                                                       00008200
      RETURN                                                            00008300
   17 CALL REFSYS(COM(IP(2)))                                           00008400
      RETURN                                                            00008500
   18 CALL FINI                                                         00008600
      RETURN                                                            00008700
   19 CALL UNASGN                                                       00008800
      RETURN                                                            00008900
   20 CALL UNASGN                                                       00009000
      RETURN                                                            00009100
   21 CALL UNASGN                                                       00009200
      RETURN                                                            00009300
   22 CALL DYNDMP(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00009400
      RETURN                                                            00009500
   23 CALL ZSURF(COM(IP(2)))                                            00009600
      RETURN                                                            00009700
   24 CALL UNASGN                                                       00009800
      RETURN                                                            00009900
   25 CALL GO(COM(IP(2)),COM(IP(3)))                                    00010000
      RETURN                                                            00010100
   26 CALL GODLTA(COM(IP(2)),COM(IP(3)))                                00010200
      RETURN                                                            00010300
   27 CALL TOLER(CM(1,IP(2)),COM(IP(3)))                                00010400
      RETURN                                                            00010500
   28 CALL INTOL(CM(1,IP(2)),COM(IP(3)))                                00010600
      RETURN                                                            00010700
   29 CALL OUTTOL(CM(1,IP(2)),COM(IP(3)))                               00010800
      RETURN                                                            00010900
   30 CALL CUTTER(CM(1,IP(2)),COM(IP(3)))                               00011000
      RETURN                                                            00011100
   31 CALL MAXDP(COM(IP(2)),COM(IP(3)))                                 00011200
      RETURN                                                            00011300
   32 CALL NUMPTS(COM(IP(2)))                                           00011400
      RETURN                                                            00011500
   33 CALL THICK(CM(1,IP(2)),COM(IP(3)))                                00011600
      RETURN                                                            00011700
   34 CALL UNASGN                                                       00011800
      RETURN                                                            00011900
   35 CALL GOTO (COM(IP(2)))                                            00012000
      RETURN                                                            00012100
   36 CALL FROM(COM(IP(2)))                                             00012200
      RETURN                                                            00012300
   37 CALL INDIRV(COM(IP(2)),COM(IP(3)))                                00012400
      RETURN                                                            00012500
   38 CALL SRFVCT(COM(IP(2)),COM(IP(3)))                                00012600
      RETURN                                                            00012700
   39 CALL TLAXIS(CM(1,IP(2)),CM(1,IP(3)),COM(IP(4)))                   00012800
      RETURN                                                            00012900
   40 CALL INDIRP(COM(IP(2)),COM(IP(3)))                                00013000
      RETURN                                                            00013100
   41 CALL PSIS(COM(IP(2)),COM(IP(3)))                                  00013200
      RETURN                                                            00013300
   42 CALL PRINT(CM(1,IP(2)),COM(IP(3)),CM(1,IP(4)))                    00013400
      RETURN                                                            00013500
   43 CALL UNASGN                                                       00013600
      RETURN                                                            00013700
   44 CALL UNASGN                                                       00013800
      RETURN                                                            00013900
   45 CALL UNASGN                                                       00014000
      RETURN                                                            00014100
   46 CALL UNASGN                                                       00014200
      RETURN                                                            00014300
   47 CALL UNASGN                                                       00014400
      RETURN                                                            00014500
   48 CALL POCKET (COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),         00014600
     1             COM(IP(6)),COM(IP(7)),COM(IP(8)),COM(IP(9)),         00014700
     2             COM(IP(10)),COM(IP(11)))                             00014800
      RETURN                                                            00014900
   49 CALL UNASGN                                                       00015000
      RETURN                                                            00015100
   50 CALL PUNCH(COM(IP(2)),COM(IP(3)),COM(IP(4)))                      00015200
      RETURN                                                            00015300
   51 CALL UNASGN                                                       00015400
      RETURN                                                            00015500
   52 CALL UNASGN                                                       00015600
      RETURN                                                            00015700
   53 CALL UNASGN                                                       00015800
      RETURN                                                            00015900
   54 CALL UNASGN                                                       00016000
      RETURN                                                            00016100
   55 CALL UNASGN                                                       00016200
      RETURN                                                            00016300
   56 CALL UNASGN                                                       00016400
      RETURN                                                            00016500
   57 CALL LDARD(CM(1,IP(2)),COM(IP(3)),CM(1,IP(4)))                    00016600
      RETURN                                                            00016700
   58 CALL UNITS(CM(1,IP(2)))                                           00016800
      RETURN                                                            00016900
   59 CALL UNASGN                                                       00017000
      RETURN                                                            00017100
   60 CALL UNASGN                                                       00017200
      RETURN                                                            00017300
   61 CALL UNASGN                                                       00017400
      RETURN                                                            00017500
   62 CALL UNASGN                                                       00017600
      RETURN                                                            00017700
   63 CALL CLDAT(CM(1,IP(2)),CM(1,IP(3)),CM(1,IP(4)),CM(1,IP(5)))       00017800
      RETURN                                                            00017900
   64 CALL CHKSRF(COM(IP(2)),COM(IP(3)))                                00018000
      RETURN                                                            00018100
   65 CALL AVCTRL(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00018200
     +            COM(IP(6)),COM(IP(7)),COM(IP(8)))                     00018210
      RETURN                                                            00018300
   66 CALL REGION(COM(IP(2)),COM(IP(3)))                                00018400
      RETURN                                                            00018500
   67 CALL UNASGN                                                       00018600
      RETURN                                                            00018700
   68 CALL UNASGN                                                       00018800
      RETURN                                                            00018900
   69 CALL UNASGN                                                       00019000
      RETURN                                                            00019100
   70 CALL UNASGN                                                       00019200
      RETURN                                                            00019300
   71 CALL UNASGN                                                       00019400
      RETURN                                                            00019500
   72 CALL UNASGN                                                       00019600
      RETURN                                                            00019700
   73 CALL UNASGN                                                       00019800
      RETURN                                                            00019900
   74 CALL UNASGN                                                       00020000
      RETURN                                                            00020100
   75 CALL UNASGN                                                       00020200
      RETURN                                                            00020300
   76 CALL UNASGN                                                       00020400
      RETURN                                                            00020500
   77 CALL UNASGN                                                       00020600
      RETURN                                                            00020700
   78 CALL UNASGN                                                       00020800
      RETURN                                                            00020900
   79 CALL UNASGN                                                       00021000
      RETURN                                                            00021100
   80 CALL UNASGN                                                       00021200
      RETURN                                                            00021300
   81 CALL UNASGN                                                       00021400
      RETURN                                                            00021500
   82 CALL UNASGN                                                       00021600
      RETURN                                                            00021700
   83 CALL UNASGN                                                       00021800
      RETURN                                                            00021900
   84 CALL UNASGN                                                       00022000
      RETURN                                                            00022100
   85 CALL UNASGN                                                       00022200
      RETURN                                                            00022300
   86 CALL UNASGN                                                       00022400
      RETURN                                                            00022500
   87 CALL UNASGN                                                       00022600
      RETURN                                                            00022700
   88 CALL UNASGN                                                       00022800
      RETURN                                                            00022900
   89 CALL UNASGN                                                       00023000
      RETURN                                                            00023100
   90 CALL UNASGN                                                       00023200
      RETURN                                                            00023300
   91 CALL UNASGN                                                       00023400
      RETURN                                                            00023500
   92 CALL UNASGN                                                       00023600
      RETURN                                                            00023700
   93 CALL UNASGN                                                       00023800
      RETURN                                                            00023900
   94 CALL UNASGN                                                       00024000
      RETURN                                                            00024100
   95 CALL UNASGN                                                       00024200
      RETURN                                                            00024300
   96 CALL UNASGN                                                       00024400
      RETURN                                                            00024500
   97 CALL UNASGN                                                       00024600
      RETURN                                                            00024700
   98 CALL UNASGN                                                       00024800
      RETURN                                                            00024900
   99 CALL UNASGN                                                       00025000
      RETURN                                                            00025100
  100 CALL UNDEF(COM(IP(2)))                                            00025200
      RETURN                                                            00025300
  101 CALL APT001(COM(IP(2)))                                           00025400
      RETURN                                                            00025500
  102 CALL APT003(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00025600
      RETURN                                                            00025700
  103 CALL APT004(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),COM(IP(5)))     00025800
      RETURN                                                            00025900
  104 CALL APT005(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),COM(IP(5)))     00026000
      RETURN                                                            00026100
  105 CALL APT006(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00026200
      RETURN                                                            00026300
  106 CALL APT007(COM(IP(2)),COM(IP(3)))                                00026400
      RETURN                                                            00026500
  107 CALL APT008(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),COM(IP(5)))     00026600
      RETURN                                                            00026700
  108 CALL APT009(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00026800
      RETURN                                                            00026900
  109 CALL APT010(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),COM(IP(5)))     00027000
      RETURN                                                            00027100
  110 CALL APT011(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00027200
      RETURN                                                            00027300
  111 CALL APT012(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00027400
     1            COM(IP(6)))                                           00027500
      RETURN                                                            00027600
  112 CALL APT014(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00027700
      RETURN                                                            00027800
  113 CALL APT015(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)))     00027900
      RETURN                                                            00028000
  114 CALL APT016(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),INT(COM(IP(5))),00028100
     1            COM(IP(6)))                                           00028200
      RETURN                                                            00028300
  115 CALL APT017(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)))     00028400
      RETURN                                                            00028500
  116 CALL APT018(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00028600
      RETURN                                                            00028700
  117 CALL APT019(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00028800
      RETURN                                                            00028900
  118 CALL APT020(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)))     00029000
      RETURN                                                            00029100
  119 CALL APT021(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),INT(COM(IP(5))),00029200
     1            COM(IP(6)))                                           00029300
      RETURN                                                            00029400
  120 CALL APT022(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)),     00029500
     1            COM(IP(6)))                                           00029600
      RETURN                                                            00029700
  121 CALL APT023(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00029800
      RETURN                                                            00029900
  122 CALL APT024(INT(COM(IP(2))))                                      00030000
      RETURN                                                            00030100
  123 CALL APT025(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00030200
      RETURN                                                            00030300
  124 CALL APT026(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00030400
      RETURN                                                            00030500
  125 CALL APT027(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00030600
      RETURN                                                            00030700
  126 CALL APT028(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)))     00030800
      RETURN                                                            00030900
  127 CALL APT029(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)),     00031000
     1            COM(IP(6)))                                           00031100
      RETURN                                                            00031200
  128 CALL APT030(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),INT(COM(IP(5))),00031300
     1            COM(IP(6)),COM(IP(7)))                                00031400
      RETURN                                                            00031500
  129 CALL APT031(COM(IP(2)),INT(COM(IP(3))),INT(COM(IP(4))),COM(IP(5)),00031600
     1            INT(COM(IP(6))),COM(IP(7)),COM(IP(8)))                00031700
      RETURN                                                            00031800
  130 CALL APT032(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),INT(COM(IP(5))),00031900
     1            INT(COM(IP(6))),COM(IP(7)),COM(IP(8)))                00032000
      RETURN                                                            00032100
  131 CALL APT033(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00032200
     1            COM(IP(6)),COM(IP(7)),COM(IP(8)),COM(IP(9)),          00032300
     2            (CM(1,IP(10))),COM(IP(11)))                           00032400
      RETURN                                                            00032500
  132 CALL APT035(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00032600
      RETURN                                                            00032700
  133 CALL APT036(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))))                00032800
      RETURN                                                            00032900
  134 CALL APT037(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00033000
      RETURN                                                            00033100
  135 CALL APT038(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00033200
      RETURN                                                            00033300
  136 CALL APT039(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00033400
      RETURN                                                            00033500
  137 CALL APT040(COM(IP(2)),COM(IP(3)))                                00033600
      RETURN                                                            00033700
  138 CALL APT044(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00033800
     1            COM(IP(6)))                                           00033900
      RETURN                                                            00034000
  139 CALL APT045(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00034100
      RETURN                                                            00034200
  140 CALL APT046(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00034300
      RETURN                                                            00034400
  141 CALL APT047(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)))     00034500
      RETURN                                                            00034600
  142 CALL APT048(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00034700
      RETURN                                                            00034800
  143 CALL APT049(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00034900
      RETURN                                                            00035000
  144 CALL APT050(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00035100
      RETURN                                                            00035200
  145 CALL APT051(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00035300
      RETURN                                                            00035400
  146 CALL APT052(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00035500
      RETURN                                                            00035600
  147 CALL APT053(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00035700
     1            COM(IP(6)))                                           00035800
      RETURN                                                            00035900
  148 CALL APT054(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00036000
     1            COM(IP(6)),COM(IP(7)))                                00036100
      RETURN                                                            00036200
  149 CALL APT055(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00036300
      RETURN                                                            00036400
  150 CALL APT056(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00036500
      RETURN                                                            00036600
  151 CALL APT057(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00036700
     1            COM(IP(6)))                                           00036800
      RETURN                                                            00036900
  152 CALL APT058(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00037000
     1            COM(IP(6)))                                           00037100
      RETURN                                                            00037200
  153 CALL APT060(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00037300
     1            COM(IP(6)),COM(IP(7)),COM(IP(8)))                     00037400
      RETURN                                                            00037500
  154 CALL APT061(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00037600
     1            COM(IP(6)),COM(IP(6)),INT(COM(IP(8))))                00037700
      RETURN                                                            00037800
  155 CALL APT062(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)),          00037900
     1            COM(IP(6)),COM(IP(7)),COM(IP(8)),COM(IP(9)),          00038000
     2            COM(IP(10)),COM(IP(11)),COM(IP(12)))                  00038100
      RETURN                                                            00038200
  156 CALL APT063(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00038300
      RETURN                                                            00038400
  157 CALL APT064(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)))                00038500
      RETURN                                                            00038600
  158 CALL APT065(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00038700
      RETURN                                                            00038800
  159 CALL APT066(COM(IP(2)),COM(IP(3)),COM(IP(4)),INT(COM(IP(5))))     00038900
      RETURN                                                            00039000
  160 CALL APT067(COM(IP(2)),COM(IP(3)))                                00039100
      RETURN                                                            00039200
  161 CALL APT068(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00039300
      RETURN                                                            00039400
  162 CALL APT073(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00039500
      RETURN                                                            00039600
  163 CALL APT075(COM(IP(2)),COM(IP(3)))                                00039700
      RETURN                                                            00039800
  164 CALL APT077(COM(IP(2)),INT(COM(IP(3))))                           00039900
      RETURN                                                            00040000
  165 CALL APT078(COM(IP(2)),INT(COM(IP(3))))                           00040100
      RETURN                                                            00040200
  166 CALL APT079(COM(IP(2)),INT(COM(IP(3))))                           00040300
      RETURN                                                            00040400
  167 CALL APT081(COM(IP(2)),INT(COM(IP(3))))                           00040500
      RETURN                                                            00040600
  168 CALL APT083(COM(IP(2)),INT(COM(IP(3))))                           00040700
      RETURN                                                            00040800
  169 CALL APT085                                                       00040900
      RETURN                                                            00041000
  170 CALL APT087(COM(IP(2)),COM(IP(3)))                                00041100
      RETURN                                                            00041200
  171 CALL APT088(COM(IP(2)),INT(COM(IP(3))),CM(1,IP(4)),               00041300
     1            INT(COM(IP(5))),INT(COM(IP(6))),INT(COM(IP(7))),      00041400
     2            COM(IP(8)))                                           00041410
      RETURN                                                            00041500
  172 CALL APT090(CM(1,IP(2)),COM(IP(3)),CM(1,IP(4)),COM(IP(5)),        00041600
     1            COM(IP(6)),COM(IP(7)),COM(IP(8)),COM(IP(9)))          00041700
      RETURN                                                            00041800
  173 CALL UNASGN                                                       00041900
      RETURN                                                            00042000
  174 CALL UNASGN                                                       00042100
      RETURN                                                            00042200
  175 CALL APT094(INT(COM(IP(2))),COM(IP(3)),COM(IP(4)))                00042300
      RETURN                                                            00042400
  176 CALL APT100(INT(COM(IP(2))),COM(IP(3)))                           00042500
      RETURN                                                            00042600
  177 CALL APT200(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00042700
      RETURN                                                            00042800
  178 AC = APT201(COM(IP(2)),COM(IP(3)))                                00042900
      CALL SAVEAC(AC)                                                   00042910
      RETURN                                                            00043000
  179 CALL APT298(INT(COM(IP(2))),COM(IP(3)),COM(IP(4)))                00043100
      RETURN                                                            00043200
  180 CALL APT299(CM(1,IP(2)),CM(1,IP(3)),CM(1,IP(4)),CM(1,IP(5)))      00043300
      RETURN                                                            00043400
  181 CALL ABSF(COM(IP(2)),COM(IP(3)))                                  00043500
      RETURN                                                            00043600
  182 CALL ATANF(COM(IP(2)),COM(IP(3)))                                 00043700
      RETURN                                                            00043800
  183 CALL UNASGN                                                       00043900
      RETURN                                                            00044000
  184 CALL COSF(COM(IP(2)),COM(IP(3)))                                  00044100
      RETURN                                                            00044200
  185 CALL NULL                                                         00044300
      RETURN                                                            00044400
  186 CALL DOTF(COM(IP(2)),COM(IP(3)),COM(IP(4)))                       00044500
      RETURN                                                            00044600
  187 CALL EXPF(COM(IP(2)),COM(IP(3)))                                  00044700
      RETURN                                                            00044800
  188 CALL UNASGN                                                       00044900
      RETURN                                                            00045000
  189 CALL LNTHF(COM(IP(2)),COM(IP(3)))                                 00045100
      RETURN                                                            00045200
  190 CALL LOGF(COM(IP(2)),COM(IP(3)))                                  00045300
      RETURN                                                            00045400
  191 CALL SINF(COM(IP(2)),COM(IP(3)))                                  00045500
      RETURN                                                            00045600
  192 CALL SQRTF(COM(IP(2)),COM(IP(3)))                                 00045700
      RETURN                                                            00045800
  193 CALL APT041(COM(IP(2)),COM(IP(3)),COM(IP(4)),INT(COM(IP(5))))     00045900
      RETURN                                                            00046000
  194 CALL APT042(COM(IP(2)),COM(IP(3)),COM(IP(4)),INT(COM(IP(5))))     00046100
      RETURN                                                            00046200
  195 CALL APT043(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00046300
      RETURN                                                            00046400
  196 CALL APT295(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00046500
      RETURN                                                            00046600
  197 CALL ANGLF(COM(IP(2)),COM(IP(3)),COM(IP(4)))                      00046700
      RETURN                                                            00046800
  198 CALL APT069(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00046900
      RETURN                                                            00047000
  199 CALL APT070(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)),     00047100
     1            COM(IP(6)))                                           00047200
      RETURN                                                            00047300
  200 CALL APT071(COM(IP(2)),COM(IP(3)))                                00047400
      RETURN                                                            00047500
  201 CALL APT072(COM(IP(2)),INT(COM(IP(3))),INT(COM(IP(4))),           00047600
     1            INT(COM(IP(5))))                                      00047610
      RETURN                                                            00047700
  202 CALL DEFEXT(COM(IP(2)))                                           00047800
      RETURN                                                            00047900
  203 CALL APT074(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),COM(IP(5)),     00048000
     1            COM(IP(6)),COM(IP(7)),COM(IP(8)))                     00048100
      RETURN                                                            00048200
  204 CALL APT034(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),COM(IP(5)),     00048300
     1            INT(COM(IP(6))),COM(IP(7)),COM(IP(8)))                00048400
      RETURN                                                            00048500
  205 CALL APT296                                                       00048600
      RETURN                                                            00048700
  206 CALL APT297                                                       00048800
      RETURN                                                            00048900
C  207 CALL APT101(COM(IP(2)),COM(IP(3)),COM(IP(4)),INT(COM(IP(5))),    00049000
C    1            COM(IP(6)),COM(IP(7)),COM(IP(8)),COM(IP(9)),          00049100
C     2            COM(IP(10)),COM(IP(11)),COM(IP(12)))                 00049200
  207 CALL UNASGN                                                       00049250
      RETURN                                                            00049300
  208 CALL GOTOPN(COM(IP(2)),INT(COM(IP(3))),INT(COM(IP(4))),           00049400
     1            INT(COM(IP(5))),INT(COM(IP(6))),COM(IP(7)),COM(IP(8)))00049500
      RETURN                                                            00049600
  209 CALL APT105(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),INT(COM(IP(5))),00049700
     1            COM(IP(6)))                                           00049750
      RETURN                                                            00049800
  210 IF (IP(4).EQ.TERM) THEN                                           00049900
        CALL NUMF1(COM(IP(2)),COM(IP(3)))                               00050000
      ELSE                                                              00050100
        CALL NUMF2(COM(IP(2)),COM(IP(3)),COM(IP(4)))                    00050200
      END IF                                                            00050300
      RETURN                                                            00050400
  211 CALL APT106(COM(IP(2)),COM(IP(3)),COM(IP(4)))                     00050500
      RETURN                                                            00050600
  212 CALL TRANSF(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))),INT(COM(IP(5))),00050700
     1            INT(COM(IP(6))))                                      00050800
      RETURN                                                            00050900
  213 CALL APT104(COM(IP(2)))                                           00051000
      RETURN                                                            00051100
  214 CALL APT102(COM(IP(2)),COM(IP(3)),COM(IP(4)),INT(COM(IP(5))))     00051200
      RETURN                                                            00051300
  215 CALL APT103(COM(IP(2)),COM(IP(3)),INT(COM(IP(4))))                00051400
      RETURN                                                            00051500
  216 CALL APT107(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00051600
      RETURN                                                            00051700
  217 CALL APT013(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),INT(COM(IP(5))),00051800
     1            COM(IP(6)),INT(COM(IP(7))),COM(IP(8)))                00051900
      RETURN                                                            00052000
  218 CALL APT108(COM(IP(2)),COM(IP(3)),COM(IP(4)),COM(IP(5)))          00052100
      RETURN                                                            00052200
  219 CALL APT109(COM(IP(2)),INT(COM(IP(3))),COM(IP(4)),COM(IP(5)),     00052300
     1            COM(IP(6)),COM(IP(7)),COM(IP(8)),COM(IP(9)))          00052400
      RETURN                                                            00052500
  220 CALL DISTF(COM(IP(2)),COM(IP(3)),COM(IP(4)))                      00052600
      RETURN                                                            00052700
  221 CALL LOG10F(COM(IP(2)),COM(IP(3)))                                00052800
      RETURN                                                            00052900
  222 CALL TANF(COM(IP(2)),COM(IP(3)))                                  00053000
      RETURN                                                            00053100
  223 CALL ATANF(COM(IP(2)),COM(IP(3)),COM(IP(4)))                      00053200
      RETURN                                                            00053300
  224 CALL COTANF(COM(IP(2)),COM(IP(3)))                                00053400
      RETURN                                                            00053500
  225 CALL ARSINF(COM(IP(2)),COM(IP(3)))                                00053600
      RETURN                                                            00053700
  226 CALL ARCOSF(COM(IP(2)),COM(IP(3)))                                00053800
      RETURN                                                            00053900
  227 CALL SINB(COM(IP(2)),COM(IP(3)))                                  00054000
      RETURN                                                            00054100
  228 CALL COSB(COM(IP(2)),COM(IP(3)))                                  00054200
      RETURN                                                            00054300
  229 CALL TANB(COM(IP(2)),COM(IP(3)))                                  00054400
      RETURN                                                            00054500
  230 CALL COTANB(COM(IP(2)),COM(IP(3)))                                00054600
      RETURN                                                            00054700
  231 CALL ARSINB(COM(IP(2)),COM(IP(3)))                                00054800
      RETURN                                                            00054900
  232 CALL ARCOSB(COM(IP(2)),COM(IP(3)))                                00055000
      RETURN                                                            00055100
  233 CALL ATANB(COM(IP(2)),COM(IP(3)))                                 00055200
      RETURN                                                            00055300
  234 CALL ATAN2B(COM(IP(2)),COM(IP(3)))                                00055400
      RETURN                                                            00055500
  235 CALL SINHF(COM(IP(2)),COM(IP(3)))                                 00055600
      RETURN                                                            00055700
  236 CALL COSHF(COM(IP(2)),COM(IP(3)))                                 00055800
      RETURN                                                            00055900
  237 CALL TANHF(COM(IP(2)),COM(IP(3)))                                 00056000
      RETURN                                                            00056100
  238 CALL MINF(IP)                                                     00056200
      RETURN                                                            00056300
  239 CALL MAXF(IP)                                                     00056400
      RETURN                                                            00056500
  240 CALL MODF(COM(IP(2)),COM(IP(3)),COM(IP(4)))                       00056600
      RETURN                                                            00056700
  241 CALL INTF(COM(IP(2)),COM(IP(3)))                                  00056800
      RETURN                                                            00056900
  242 CALL SIGNF(COM(IP(2)),COM(IP(3)),COM(IP(4)))                      00057000
      RETURN                                                            00057100
  243 CALL SPATF(COM(IP(2)),COM(IP(3)),COM(IP(4)))                      00057200
      RETURN                                                            00057300
  244 CALL ANGLB(COM(IP(2)),COM(IP(3)),COM(IP(4)))                      00057400
      RETURN                                                            00057500
  245 IF (IP(4).EQ.TERM) THEN                                           00057600
        CALL PARMF1(COM(IP(2)),COM(IP(3)))                              00057700
      ELSE                                                              00057800
        CALL PARMF2(COM(IP(2)),COM(IP(3)),COM(IP(4)))                   00057900
      END IF                                                            00058000
      RETURN                                                            00058100
  246 CALL CANF(COM(IP(2)),COM(IP(3)),COM(IP(4)))                       00058200
      RETURN                                                            00058300
  247 CALL APT110(COM(IP(2)),COM(IP(3)))                                00058400
      RETURN                                                            00058500
  248 CALL LOGIF(COM(IP(2)),CM(1,IP(3)),COM(IP(4)),COM(IP(5)))          00058600
      RETURN                                                            00058700
  249 CALL CLDATF(COM(IP(2)),COM(IP(3)),CM(1,IP(4)),COM(IP(5)))         00058800
      RETURN                                                            00058900
      END                                                               00059000
**** SOURCE FILE : M0002657.V09   ***
*
C---    IMPLEMENTATION DEPENDENT ROUTINES XCANON & INCAN                00000100
C                                                                       00000110
C                                                                       00000200
      INTEGER FUNCTION XCANON(V)                                        00000300
C                                                                       00000400
C---    PURPOSE IS TO PROVIDE ACCESS TO CANON FILE ON DISK              00000500
C---   INPUT V = VIRTUAL ADDRESS OF A CANONICAL FORM                    00000600
C      OUTPUT XCANON = ACTUAL ADDRESS OF A CANONICAL FORM               00000700
C---   (A CANONICAL FORM PAGE IS BROUGHT IN IF NECESSARY)               00000800
C                                                                       00001010
      INCLUDE 'BLANKCOM.INC'                                            00001020
      INCLUDE 'INTRPEQ.INC'                                             00001030
C                                                                       00001040
      COMMON/STOR/ NTB, FPB, PPB, COMN, CFB                             00001100
      INTEGER      NTB, FPB, PPB, COMN, CFB                             00001200
      COMMON/CONST/ KCOMT, KCOMF, CILPRT, KCBN                          00001300
      LOGICAL CILPRT                                                    00001400
      INCLUDE 'DARRAY.INC'                                              00001610
      COMMON /WORK/ IIIIII(53), IPAGE, IWRIT                            00001700
      INTEGER IPAGE(32)                                                 00001800
      INTEGER V                                                         00001900
      INCLUDE 'SYMFIL.INC'                                              00002010
C                                                                       00002300
C---      NFOR REPRESENT FORWARD POINTERS SHOWING PROGRESSIVELY         00002400
C---      OLDER PAGES.   NFOR(1) IS NOT A CORE SLOT POINTER, BUT        00002500
C---      AN INITIALIZING LOCATION FOR THE LIST POINTERS.               00002600
C---      NBACK REPRESENTS BACKWARD POINTERS TO PROGESSIVELY            00002700
C---      MORE RECENTLY USED CORE SLOTS                                 00002800
C---      IPAGE GIVES THE CURRENT PAGE LOADED INTO A CORE SLOT          00002900
C---      INCOR GIVES THE SLOT IN CORE NOW OCCUPIED BY EACH PAGE        00003000
C---      LOCREC GIVES THE RECORD LOCATION OF EACH PAGE ON EXTERNAL FILE00003100
C                                                                       00003200
      INTEGER INCOR(256),LOCREC(256),NFOR(33),NBACK(33)                 00003300
C                                                                       00003500
C---      MAXPAG IS THE MAXIMUM NUMBER OF PAGES IN CORE NOW             00003600
C---      MAXCOR IS THE ABSOLUTE MAXIMUM NUMBER OF PAGES IN CORE        00003700
C---      MAXFIL IS THE MAXIMUM NUMBER OF PAGES ALLOWED ON EXTERNAL FILE00003800
C---      NPGCNT IS THE MAXIMUM PAGE ENCOUNTERED TO DATE                00003900
      INTEGER NZERO                                                     00004100
C                                                                       00004312
      DATA INCOR/256*0/,LOCREC/256*0/,NFOR/33*0/,NBACK/33*0/            00004320
      DATA MAXPAG/0/,MAXCOR/32/,MAXFIL/256/,NPGCNT/0/                   00004330
      DATA NZERO/0/                                                     00004340
      DATA NAVAIL/2/                                                    00004350
C                                                                       00004400
C     CALL BAD(-1,-6,'ENTR','XCANON')                                   00004500
      IF(V-CFB.GE.0) GO TO 10                                           00004600
C---     THE REFERENCED CANON FORM IS BELOW THE CANON AREA.             00004700
      XCANON=V                                                          00004800
      GO TO 999                                                         00004900
C                                                                       00005000
   10 CONTINUE                                                          00005100
      IF(MAXPAG.NE.0) GO TO 50                                          00005200
C---     INITIAL CALL, SET UP                                           00005300
      LENPAG=2*KCBN                                                     00005400
C---     LENPAG IS THE LENGTH OF A CANON PAGE IN SINGLE PRECISION WORDS 00005500
C---     MAXPAG IS THE MAXIMUM NUMBER OF PAGES THAT FIT IN CORE         00005600
      MAXPAG=((PPB+3)/4-CFB)/KCBN                                       00005700
      MAXPAG=MIN0(MAXCOR,MAXPAG)                                        00005800
C---     SET UP THE INITIAL DOUBLY LINKED LIST POINTERS                 00005900
      NFOR(1)=1                                                         00006000
      NBACK(1)=1                                                        00006100
      DO 20 L=1,MAXCOR                                                  00006200
   20 IPAGE(L)=0                                                        00006300
C     CALL BAD(1,0,'PPB ',PPB)                                          00006400
C     CALL BAD(1,0,'CFB ',CFB)                                          00006500
C     CALL BAD(-1,0,'MXPG',MAXPAG)                                      00006600
C                                                                       00006700
C---     NORMAL CONTINUING POINT OF CALCULATION                         00006800
   50 CONTINUE                                                          00006900
C---     COMPUTE THE IDEAL PAGE NUMBER AND INCREMENT INTO PAGE          00007000
      IVPAGE=(V-CFB)/KCBN+1                                             00007100
C     CALL BAD(1,0,'V   ',V)                                            00007200
C     CALL BAD(-1,0,'IVPG',IVPAGE)                                      00007300
      IF(IVPAGE.LT.MAXFIL+1) GO TO 60                                   00007400
C---     PAGE EXCEEDS THE ABSOLUTE MAXIMUM FOR EXTERNAL PAGES           00007500
      CALL CFORM('0 TOO MANY PAGES OF CANONICAL DATA IN XCANON',        00007600
     X     DARRAY,1,44)                                                 00007700
      GO TO 995                                                         00007800
C                                                                       00007900
   60 CONTINUE                                                          00008000
C---     IF PAGE IS NOW IN CORE, SKIP LOAD/UNLOAD LOGIC                 00008100
      IF(INCOR(IVPAGE).GT.NZERO) GO TO 400                              00008200
C---     THE PAGE IS NOT NOW IN CORE - LOAD IT IF NECESSARY             00008300
      IF(NAVAIL.LT.MAXPAG+2) GO TO 100                                  00008400
C---     ALL AVAILABLE CORE SLOTS ARE IN USE.  THE OLDEST               00008500
C---     PAGE(LEAST RECENTLY USED) SHOULD FIRST BE REMOVED.             00008600
      NXSLOT=NBACK(1)-1                                                 00008700
C---     PAGE NUMBER OF THIS OLDEST PAGE                                00008800
      IP=IPAGE(NXSLOT)                                                  00008900
C---     LOCATION OF THIS OLD PAGE IN CORE                              00009000
      LOC=CFB+(INCOR(IP)-1)*KCBN                                        00009100
C---     SET FLAGS FOR WRITING AT END OF FILE                           00009200
C     CALL BAD(1,0,'WRIT',IP)                                           00009300
C     CALL BAD(-1,0,'SLOT',NXSLOT)                                      00009400
      NR=0                                                              00009500
      IR=0                                                              00009600
C---      NOW WRITE PAGE OUT TO XCAN FILE                               00009700
      LNPG=LENPAG                                                       00009800
      CALL AWRITE(XCAN,NR,CF(LOC),LNPG,IR)                              00009900
C***     TERMINATE IF AN ERROR OCCURRED.                                00010000
      IF(IR.NE.0) GO TO 997                                             00010100
C---      INCREMENT WRITE COUNT  *** IWRIT USED IN LIB ***              00010200
      IWRIT = IWRIT + 1                                                 00010300
C                                                                       00010400
C---     UPDATE THE STATUS OF PAGE IP                                   00010500
      IPAGE(NXSLOT)=IVPAGE                                              00010600
      INCOR(IVPAGE)=INCOR(IP)                                           00010700
      INCOR(IP)=-INCOR(IP)                                              00010800
      LOCREC(IP)=NR                                                     00010900
      GO TO 200                                                         00011000
C                                                                       00011100
  100 CONTINUE                                                          00011200
C---     A SLOT IS STILL OPEN IN CORE, SO NO PAGE NEED BE REMOVED       00011300
      NXSLOT=NAVAIL-1                                                   00011400
      NAVAIL=NAVAIL+1                                                   00011500
C---     EXPAND THE LIST LINKAGES.                                      00011600
      NN=NBACK(1)                                                       00011700
      NFOR(NN)=NXSLOT+1                                                 00011800
      NBACK(1)=NXSLOT+1                                                 00011900
      NFOR(NXSLOT+1)=1                                                  00012000
      NBACK(NXSLOT+1)=NN                                                00012100
      INCOR(IVPAGE)=NXSLOT                                              00012200
  200 CONTINUE                                                          00012300
C                                                                       00012400
C---      NEXT CHECK WHETHER THE SOUGHT-AFTER PAGE HAS BEEN WRITTEN     00012500
C---      TO THE DISK FILE EARLIER.                                     00012600
      IF(LOCREC(IVPAGE).EQ.NZERO) GO TO 300                             00012700
C---      SINCE THAT PAGE IS ON DISK, IT SHOULD BE RETRIEVED.           00012800
C---      SELECT THE DISK RECORD NUMBER                                 00012900
      NR=LOCREC(IVPAGE)                                                 00013000
C---      SELECT LOCATION INTO WHICH DATA IS READ                       00013100
      LOC=CFB+(INCOR(IVPAGE)-1)*KCBN                                    00013200
C     CALL BAD(1,0,'READ',IVPAGE)                                       00013300
C     CALL BAD(-1,0,'SLOT',NXSLOT)                                      00013400
      IR=0                                                              00013500
C---      FETCH THE DATA FROM DISK INTO CORE                            00013600
      LNPG=LENPAG                                                       00013700
      CALL AREAD(XCAN,NR,CF(LOC),LNPG,IR)                               00013800
C***      BRANCH IF READ CAUSED AND ERROR                               00013900
      IF(IR.NE.0) GO TO 998                                             00014000
C                                                                       00014100
  300 CONTINUE                                                          00014200
      IPAGE(NXSLOT)=IVPAGE                                              00014300
C                                                                       00014400
  400 CONTINUE                                                          00014500
C---     DESIRED PAGE IS NOW IN CORE                                    00014600
      IN1=INCOR(IVPAGE)+1                                               00014700
      NN=NFOR(1)                                                        00014800
      IF(IN1.EQ.NN.OR.NAVAIL.EQ.2) GO TO 500                            00014900
C---      DESIRED PAGE IS NOT NOW THE MOST RECENTLY USED                00015000
C---      ALTER THE LINKED LIST SO THAT IT IS THE MOST RECENT           00015100
C---      FIRST REMOVE IN1 FROM THE LINKED LIST TEMPORARILY             00015200
      NFSAVE=NFOR(IN1)                                                  00015300
      NBSAVE=NBACK(IN1)                                                 00015400
      NFOR(NBSAVE)=NFSAVE                                               00015500
      NBACK(NFSAVE)=NBSAVE                                              00015600
C---      NOW RESET IN1 INTO THE TOP OF THE USAGE HISTORY LIST          00015700
      NOWTOP=NFOR(1)                                                    00015800
      NFOR(1)=IN1                                                       00015900
      NFOR(IN1)=NOWTOP                                                  00016000
      NBACK(NOWTOP)=IN1                                                 00016100
      NBACK(IN1)=1                                                      00016200
C                                                                       00016300
  500 CONTINUE                                                          00016400
C---      COMPUTE THE ACTUAL ADDRESS OF THIS CANON FORM                 00016500
      XCANON=CFB+(INCOR(IVPAGE)-1)*KCBN+MOD(V-CFB,KCBN)                 00016600
      GO TO 999                                                         00016700
C                                                                       00016800
C                                                                       00016900
  997 CONTINUE                                                          00017800
      CALL CFORM(' CANON PAGE WRITE ERROR IN XCANON',                   00017900
     X     DARRAY,1,33)                                                 00018000
      GO TO 996                                                         00018100
  998 CONTINUE                                                          00018200
      CALL CFORM(' CANON PAGE READ ERROR IN XCANON ',                   00018300
     X     DARRAY,1,33)                                                 00018400
  996 CONTINUE                                                          00018500
      CALL ICONV(IR,DARRAY,35,8)                                        00018600
  995 CONTINUE                                                          00018700
      CALL CPRINT(DARRAY)                                               00018800
      CALL BAD(1,0,'V   ',V)                                            00018900
      CALL BAD(1,0,'IVPG',IVPAGE)                                       00019000
      CALL BAD(1,0,'LENP',LENPAG)                                       00019100
      CALL BAD(1,0,'LNPG',LNPG)                                         00019200
      CALL BAD(1,0,'MXPG',MAXPAG)                                       00019300
      CALL BAD(1,0,'NR  ',NR)                                           00019400
      CALL BAD(1,0,'NAVL',NAVAIL)                                       00019500
      CALL BAD(1,0,'NSLT',NXSLOT)                                       00019600
      CALL BAD(-1,0,'NPCN',NPGCNT)                                      00019700
C                                                                       00019800
C     NPGCNT=MAX0(IVPAGE,NPGCNT)                                        00019900
C     CALL SBAD(-MAXPAG,0,'IPAG',IPAGE)                                 00020000
C     NN=MAXPAG+1                                                       00020100
C     CALL SBAD(-NN,0,'NFOR',NFOR)                                      00020200
C     CALL SBAD(-NN,0,'NBAC',NBACK)                                     00020300
C     CALL SBAD(-NPGCNT,0,'LOCR',LOCREC)                                00020400
C     CALL SBAD(-NPGCNT,0,'INCO',INCOR)                                 00020500
      CALL HELP                                                         00020600
  999 CONTINUE                                                          00020700
C                                                                       00020800
C     NPGCNT=MAX0(IVPAGE,NPGCNT)                                        00020900
C     CALL SBAD(-MAXPAG,0,'IPAG',IPAGE)                                 00021000
C     NN=MAXPAG+1                                                       00021100
C     CALL SBAD(-NN,0,'NFOR',NFOR)                                      00021200
C     CALL SBAD(-NN,0,'NBAC',NBACK)                                     00021300
C     CALL SBAD(-NPGCNT,0,'LOCR',LOCREC)                                00021400
C     CALL SBAD(-NPGCNT,0,'INCO',INCOR)                                 00021500
      RETURN                                                            00021600
C     END                                                               00021700
C     SUBROUTINE SBAD(N1,N2,N3,N4)                                      00021800
C     DIMENSION N4(1),NN(100)                                           00021900
C     INTEGER N4                                                        00022000
C     N=IABS(N1)                                                        00022100
C     N=MIN0(N,100)                                                     00022200
C     DO 10 I=1,N                                                       00022300
C     NN(I)=N4(I)                                                       00022400
C  10 CONTINUE                                                          00022500
C     IF(N1.LT.0) N=-N                                                  00022600
C     CALL BAD(N,0,N3,NN)                                               00022700
C     RETURN                                                            00022800
      END                                                               00022900
C                                                                       00022910
C                                                                       00022920
C                                                                       00022930
C                                                                       00022940
C---    IMPLEMENTATION DEPENDENT ROUTINE                                00030100
C                                                                       00030200
      SUBROUTINE INCAN(AV)                                              00030310
C                                                                       00030400
C                                                                       00031010
      COMMON/STOR/ NTB, FPB, PPB, COMN, CFB                             00031100
      INTEGER      NTB, FPB, PPB, COMN, CFB                             00031200
      COMMON/CONST/ KCOMT, KCOMF, CILPRT, KCBN                          00031300
      LOGICAL CILPRT                                                    00031400
      COMMON /WORK/ IIIIII(53), IPAGE, IWRIT                            00031700
      INTEGER IPAGE(32)                                                 00031800
C                                                                       00032300
C---      NFOR REPRESENT FORWARD POINTERS SHOWING PROGRESSIVELY         00032400
C---      OLDER PAGES.   NFOR(1) IS NOT A CORE SLOT POINTER, BUT        00032500
C---      AN INITIALIZING LOCATION FOR THE LIST POINTERS.               00032600
C---      NBACK REPRESENTS BACKWARD POINTERS TO PROGESSIVELY            00032700
C---      MORE RECENTLY USED CORE SLOTS                                 00032800
C---      IPAGE GIVES THE CURRENT PAGE LOADED INTO A CORE SLOT          00032900
C---      INCOR GIVES THE SLOT IN CORE NOW OCCUPIED BY EACH PAGE        00033000
C---      LOCREC GIVES THE RECORD LOCATION OF EACH PAGE ON EXTERNAL FILE00033100
C                                                                       00033200
      INTEGER INCOR(256),LOCREC(256),NFOR(33),NBACK(33)                 00033300
C                                                                       00033500
C---      MAXPAG IS THE MAXIMUM NUMBER OF PAGES IN CORE NOW             00033600
C---      MAXCOR IS THE ABSOLUTE MAXIMUM NUMBER OF PAGES IN CORE        00033700
C---      MAXFIL IS THE MAXIMUM NUMBER OF PAGES ALLOWED ON EXTERNAL FILE00033800
C---      NPGCNT IS THE MAXIMUM PAGE ENCOUNTERED TO DATE                00033900
      INTEGER AV                                                        00034310
C                                                                       00034318
      DATA INCOR/256*0/,LOCREC/256*0/,NFOR/33*0/,NBACK/33*0/            00034320
      DATA MAXPAG/0/,MAXCOR/32/,MAXFIL/256/,NPGCNT/0/                   00034330
C                                                                       00034400
C                                                                       00046800
C                                                                       00046900
C---      ROUTINE TO CALCULATE A VIRTUAL ADDRESS GIVEN                  00047200
C---      A CURRENT ACTUAL ADDRESS.                                     00047300
      IP=(AV-CFB)/KCBN+1                                                00047400
      AV=CFB+(IPAGE(IP)-1)*KCBN+MOD(AV-CFB,KCBN)                        00047500
C                                                                       00050800
C     NPGCNT=MAX0(IVPAGE,NPGCNT)                                        00050900
C     CALL SBAD(-MAXPAG,0,'IPAG',IPAGE)                                 00051000
C     NN=MAXPAG+1                                                       00051100
C     CALL SBAD(-NN,0,'NFOR',NFOR)                                      00051200
C     CALL SBAD(-NN,0,'NBAC',NBACK)                                     00051300
C     CALL SBAD(-NPGCNT,0,'LOCR',LOCREC)                                00051400
C     CALL SBAD(-NPGCNT,0,'INCO',INCOR)                                 00051500
      RETURN                                                            00051600
C     END                                                               00051700
C     SUBROUTINE SBAD(N1,N2,N3,N4)                                      00051800
C     DIMENSION N4(1),NN(100)                                           00051900
C     INTEGER N4                                                        00052000
C     N=IABS(N1)                                                        00052100
C     N=MIN0(N,100)                                                     00052200
C     DO 10 I=1,N                                                       00052300
C     NN(I)=N4(I)                                                       00052400
C  10 CONTINUE                                                          00052500
C     IF(N1.LT.0) N=-N                                                  00052600
C     CALL BAD(N,0,N3,NN)                                               00052700
C     RETURN                                                            00052800
      END                                                               00052900
**** SOURCE FILE : M0000989.V05   ***
*
C                                                                       XNUM0001
C-------- FORTRAN SUBROUTINE... XNUMBR           R.COLLINS  4/16/70     XNUM0002
C                                                                       XNUM0020
      SUBROUTINE  XNUMBR(IPNTR)                                         XNUM0040
C                                                                       XNUM0060
C                                                                       XNUM0080
C-----PURPOSE.......TO PROVIDE ACCESS TO THE NUMBER TABLE VALUES WHEN   XNUM0100
C                   PASSED ON DIRECT ACCESS FILE FROM THE TRANSLATOR    XNUM0120
C                                                                       XNUM0140
C-----ARGUMENTS.....IPNTR - VIRTUAL POINTER TO NUMBER TABLE VALUE -     XNUM0160
C                   CHANGED TO ACTUAL POINTER TO VALUE UPON EXIT        XNUM0180
C                                                                       XNUM0200
C-----CALLED BY.....GET, LIB                                            XNUM0220
C                                                                       XNUM0240
C-----SUBSIDIARIES..NONE                                                XNUM0260
C                                                                       XNUM0280
C-----DIAGNOSTICS...NONE                                                XNUM0300
C                                                                       XNUM0320
C                                                                       XNUM0340
C                                                                       XNUM0360
C--------**** COMMON AREAS NEEDED FOR THIS ROUTINE ****                 XNUM0380
C                                                                       XNUM0400
C--------UNLABELED COMMON - COM                                         XNUM0420
C                                                                       XNUM0440
      INCLUDE 'BLANKCOM.INC'                                            XNUM0602
      INCLUDE 'INTRPEQ.INC'                                             XNUM0604
C                                                                       XNUM0620
C                                                                       XNUM0640
C STOR--COMMON CONTAINING STORAGE PARAMETERS                            XNUM0660
C                                                                       XNUM0680
      COMMON/STOR/  NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     XNUM0700
      INTEGER       NTB,      FPB,      PPB,      COMN,  CFB,  NBLK     XNUM0720
C                                                                       XNUM0740
C   ADDITIONAL STOR PARAMETERS USED FOR NUMBER TABLE DIRECT ACCESS      XNUM0760
C                                                                       XNUM0780
      COMMON/STOR/  NRECRD,  NTPARM                                     XNUM0800
      DIMENSION     NRECRD(10), NTPARM(10)                              XNUM0820
      EQUIVALENCE   (NTPARM(1),NUMBST), (NTPARM(2),NUMOD ),             XNUM0840
     .              (NTPARM(3),NDAFLG), (NTPARM(4),NRECST),             XNUM0860
     .              (NTPARM(5),IPAGE )                                  XNUM0880
C                                                                       XNUM0900
C                                                                       XNUM0920
C...  20. SYSTEM I/O FILE NAMES                                         XNUM0940
C                                                                       XNUM0960
      INCLUDE 'SYMFIL.INC'                                              XNUM0990
C                                                                       XNUM1280
C  ------------------------------------------------------------------   XNUM1300
C                                                                       XNUM1320
C--------CALCULATE VIRTUAL PAGE POINTER AND ACTUAL NUMBER TABLE         XNUM1340
C--------POINTER USING CURRENT VIRTUAL NUMBER TABLE POINTER             XNUM1360
C                                                                       XNUM1380
      IF(IPNTR.LT.NUMBST) GO TO 999                                     XNUM1390
      IPMOD=(IPNTR-NUMBST)/NUMOD + 1                                    XNUM1400
      IPNTR=IPNTR-(IPMOD-1)*NUMOD                                       XNUM1420
C                                                                       XNUM1440
C--------IF NEW PAGE IS CURRENTLY IN COMMON AREA - RETURN               XNUM1460
      IF (IPMOD .EQ. IPAGE) GO TO 999                                   XNUM1480
C                                                                       XNUM1500
C                                                                       XNUM2000
      JREC = IPMOD*2-1                                                  XNUM2010
      NSTRT = NTB + NUMBST                                              XNUM2020
      L=NUMOD/2                                                         XNUM2025
      CALL FREAD (XNUM,JREC,FP(NSTRT),L,IR)                             XNUM2030
      NSTRT = NSTRT + L                                                 XNUM2040
      JREC = JREC + 1                                                   XNUM2050
      CALL FREAD(XNUM,JREC,FP(NSTRT),L,IR)                              XNUM2060
C                                                                       XNUM2540
C--------SET CURRENT PAGE POINTER AND RETURN                            XNUM2560
      IPAGE=IPMOD                                                       XNUM2580
  999 RETURN                                                            XNUM2600
      END                                                               XNUM2620
**** MODULE = APTGEOM ****
**** SOURCE FILE : M0000752.V03   ***
*
C.....FORTRAN SUBROUTINE  ....APT001         8/68                 SR    A0010080
C                                                                       A0010090
C LINKAGE      CALL APT001 (RESULT)                                     A0010100
C                                                                       A0010110
C ARGUMENT     RESULT  ARRAY CONTAINING THE X AND Y CO-                 A0010120
C              ORDINATES OF THE INPUT POINT.                            A0010130
C                                                                       A0010140
C SUBSIDIARIES TYPE                ENTRY                                A0010150
C              SUBROUTINE          DEFEXT                               A0010160
C              SUBROUTINE          APT081                               A0010170
C                                                                       A0010180
      SUBROUTINE APT001(RESULT)                                         A0010190
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A0010200
      DIMENSION RESULT(3)                                               A0010210
C                                                                       A0010220
C                                                                       A0010230
C                                                                       A0010240
      INCLUDE 'TOTAL.INC'                                               A0010371
      INCLUDE 'DEF.INC'                                                 A0010480
      INCLUDE 'DSHAR3.INC'                                              A0010570
      INCLUDE 'ZNUMBR.INC'                                              A0010678
      INCLUDE 'LDEF.INC'                                                A0010723
      INCLUDE 'IDEF.INC'                                                A0010804
      INCLUDE 'ISHR16.INC'                                              A0010867
      INCLUDE 'KNUMBR.INC'                                              A0011029
C                                                                       A0011080
C                                                                       A0011090
      IF(UNFLAG)GO TO 40                                                A0011095
C                                                                       A0011100
      RESULT(3)=Z0                                                      A0011110
C                                                                       A0011120
C...     TEST FOR ZSURF                                                 A0011130
C                                                                       A0011140
      IF (ZFLAG) GO TO 30                                               A0011150
C                                                                       A0011160
C...     TEST FOR REFSYS                                                A0011170
C                                                                       A0011180
      I=K1                                                              A0011190
      IF (REFFLG) I=K2                                                  A0011200
      IF (REF(I,3).EQ.Z0) GO TO 10                                      A0011210
      RESULT(3)=(REF(I,4)-REF(I,1)*RESULT(1)-REF(I,2)*RESULT(2))/       A0011220
     1          REF(I,3)                                                A0011230
C                                                                       A0011240
C...     CONVERT TO BASE SYSTEM                                         A0011250
C                                                                       A0011260
   30 CALL TRANSF(P,RESULT,K2,K3,KM1)                                   A0011270
   40 CALL DEFEXT(RESULT)                                               A0011280
C                                                                       A0011281
      RETURN                                                            A0011290
   10 CONTINUE                                                          A0011295
      UNFLAG=.TRUE.                                                     A0011300
      GO TO 40                                                          A0011310
       END                                                              A0011320
**** SOURCE FILE : M0000753.V03   ***
*
C                                                                       A0030001
C.....FORTRAN SUBROUTINE             APT003...              3/1/68   GK A0030002
C                                                                       A0030010
C              FORTRAN SUBROUTINE APT003                                A0030020
C                                                                       A0030030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT                A0030040
C              DEFINED AS THE INTERSECTION OF TWO LINES BY              A0030050
C              THE FOLLOWING APT STATEMENT                              A0030060
C              RESULT = POINT/INTOF, LINE1, LINE2                       A0030070
C                                                                       A0030080
C                                                                       A0030090
C LINKAGE      CALL APT003  (RESULT, LINE1, LINE2)                      A0030100
C                                                                       A0030110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0030120
C                      OF THE RESULTING POINT.                          A0030130
C              LINE1   ARRAY CONTAINING THE CANONICAL FORM              A0030140
C                      OF ONE INPUT LINE.                               A0030150
C              LINE2   ARRAY CONTAINING THE CANONICAL FORM              A0030160
C                      OF THE OTHER INPUT LINE.                         A0030170
C                                                                       A0030180
C SUBSIDIARIES TYPE                ENTRY                                A0030190
C              SUBROUTINE          APT001                               A0030200
C              SUBROUTINE          APT077                               A0030210
C              SUBROUTINE          DEFEXT                               A0030220
C              REAL FUNCTION       ABS                                  A0030230
C                                                                       A0030240
      SUBROUTINE APT003 (RESULT,LINE1,LINE2)                            A0030250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0030260
      DIMENSION RESULT(3),LINE1(4),LINE2(4)                             A0030270
      DOUBLE PRECISION LINE1,LINE2                                      A0030280
C                                                                       A0030290
C                                                                       A0030300
C                                                                       A0030320
      INCLUDE 'TOTAL.INC'                                               A0030451
      INCLUDE 'DEF.INC'                                                 A0030549
      INCLUDE 'DSHAR3.INC'                                              A0030629
      INCLUDE 'ZNUMBR.INC'                                              A0030725
      INCLUDE 'IDEF.INC'                                                A0030797
      INCLUDE 'ISHR16.INC'                                              A0030853
      INCLUDE 'KNUMBR.INC'                                              A0030997
C                                                                       A0031080
      DIMENSION PLL(4,3)                                                A0031090
C                                                                       A0031100
C...     TRANSFORM CANONICAL FORM TO LOCAL SYSTEM                       A0031110
C                                                                       A0031120
      CALL APT077(LINE1,  2)                                            A0031130
      DO 10 I=1,4                                                       A0031140
   10 PLL(I,1)=L(I)                                                     A0031150
      CALL APT077(LINE2,  3)                                            A0031160
      DO 11 I=1,4                                                       A0031170
   11 PLL(I,2)=L(I)                                                     A0031180
      PLL(1,3)=Z0                                                       A0031190
      PLL(2,3)=Z0                                                       A0031200
      PLL(3,3)=Z1                                                       A0031210
      PLL(4,3)=Z0                                                       A0031220
C                                                                       A0031260
C....   COMPUTE SIMULTANEOUS SOLUTION OF 3 PLANE EQUATIONS              A0031270
C                                                                       A0031280
      CALL APT075 (RESULT,PLL)                                          A0031290
      IF(IERROR.EQ.K52) GO TO 20                                        A0031300
      CALL APT001(RESULT)                                               A0031310
      GO TO 30                                                          A0031320
   20 IERROR=K4                                                         A0031330
      CALL DEFEXT(RESULT)                                               A0031340
   30 RETURN                                                            A0031350
      END                                                               A0031360
**** SOURCE FILE : M0002787.V03   ***
*
C                                                                       A0040001
C.... FORTRAN SUBROUTINE              APT004               4/17/68      A0040002
C                                                                       A0040010
C              FORTRAN SUBROUTINE APT004                                A0040020
C                                                                       A0040030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT                A0040040
C              DEFINED AS THE INTERSECTION OF A LINE AND A              A0040050
C              CIRCLE BY THE FOLLOWING APT STATEMENT                    A0040060
C              RESULT = POINT/****, INTOF, LINE1, CIRC1                 A0040070
C                 **** = XLARGE, YLARGE, XSMALL, OR YSMALL              A0040080
C                                                                       A0040090
C LINKAGE      CALL APT004 (RESULT, M, LINE1, CIRC1)                    A0040100
C                                                                       A0040110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0040120
C                      OF THE RESULTING POINT                           A0040130
C              M       INTEGER EQUIVALENT OF THE MODIFIER               A0040140
C                      1 = XLARGE 2 = YLARGE                            A0040150
C                      4 = XSMALL 5 = YSMALL                            A0040160
C              LINE1   ARRAY CONTAINING THE CANONICAL FORM OF           A0040170
C                      THE INPUT LINE                                   A0040180
C              CIRC1   ARRAY CONTAINING THE CANONICAL FORM OF           A0040190
C                      THE INPUT CIRCLE                                 A0040200
C                                                                       A0040210
C SUBSIDIARIES TYPE                ENTRY                                A0040220
C              SUBROUTINE          APT077                               A0040230
C              SUBROUTINE          APT083                               A0040240
C              SUBROUTINE          DEFEXT                               A0040250
C              SUBROUTINE          ERROR                                A0040260
C              SUBROUTINE          APT001                               A0040270
C              REAL FUNCTION       ABS                                  A0040280
C              REAL FUNCTION       SQRT                                 A0040290
C              REAL FUNCTION       SIGN                                 A0040300
C                                                                       A0040310
      SUBROUTINE APT004 (RESULT,MN,LINE1,CIRC1)                         A0040320
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0040330
      DIMENSION RESULT(3),LINE1(4),CIRC1(7)                             A0040340
      DOUBLE PRECISION LINE1                                            A0040360
C                                                                       A0040370
C                                                                       A0040380
C                                                                       A0040390
      INCLUDE 'TOTAL.INC'                                               A0040521
      INCLUDE 'DEF.INC'                                                 A0040630
      INCLUDE 'DSHAR3.INC'                                              A0040720
      INCLUDE 'ZNUMBR.INC'                                              A0040828
      INCLUDE 'LDEF.INC'                                                A0040873
      INCLUDE 'IDEF.INC'                                                A0040954
      INCLUDE 'ISHR16.INC'                                              A0041017
      INCLUDE 'KNUMBR.INC'                                              A0041179
C                                                                       A0041230
C                                                                       A0041240
C                                                                       A0041250
C...     TRANSFORM CANONICAL FORMS AND CHECK INPUT VALIDITY             A0041260
C                                                                       A0041270
      CALL APT077 (LINE1,K5)                                            A0041280
      CALL APT083 (CIRC1,K7)                                            A0041290
      M = MN                                                            A0041300
C                                                                       A0041310
C...     COMPUTE DISTANCE FROM CENTER TO LINE AND TEST FOR INTERSECTION A0041320
C                                                                       A0041330
      S1  =L(4)-L(1)*C(1)-L(2)*C(2)                                     A0041340
      IF (DABS(DABS(S1)-C(7)).LE.Z1EM5) GO TO 270                       A0041350
      IF ((DABS(S1)-C(7)).GT.Z1EM5) GO TO 330                           A0041360
C                                                                       A0041370
C...     COMPUTE CHORD LENGTH AND CHECK MODIFIER FOR VALIDITY           A0041380
C                                                                       A0041390
      S2 = DSQRT(C(7)**2-S1**2)                                         A0041400
      GO TO (140,170,170,140,170),M                                     A0041410
  140 IF (L(2)) 400,150,410                                             A0041420
  150 CALL ERROR(K8,'APT004  ')                                         A0041430
      IF ((M.EQ.K2).OR.(M.EQ.K3).OR.(M.EQ.K5)) GO TO 330                A0041435
  170 IF (L(1)) 410,180,400                                             A0041440
  180 CALL ERROR(K9,'APT004  ')                                         A0041450
      IF ((M.EQ.K1).OR.(M.EQ.K4)) GO TO 330                             A0041455
      GO TO 140                                                         A0041460
C                                                                       A0041470
C...     S(1)=RADIUS,MAKE CHORD LENGTH 0                                A0041480
C                                                                       A0041490
  270 S2  =Z0                                                           A0041500
      S1 = DSIGN(C(7),S1)                                               A0041510
      GO TO 430                                                         A0041520
C                                                                       A0041530
C...     LINE AND CIRCLE DO NOT INTERSECT                               A0041540
C                                                                       A0041550
  330 IERROR=K6                                                         A0041560
      UNFLAG=.TRUE.                                                     A0041570
  300 CALL DEFEXT(RESULT)                                               A0041580
      GO TO 9999                                                        A0041590
C                                                                       A0041600
C...     COMPUTE X AND Y, STORE IN RESULT AND CALL APT001 TO GET Z      A0041610
C                                                                       A0041620
  400 IF (M.GT.K3) GO TO 430                                            A0041630
  420 S2=-S2                                                            A0041640
      GO TO 430                                                         A0041650
  410 IF (M.GT.K3) GO TO 420                                            A0041660
  430 RESULT(1)=C(1)+ S1 *L(1)+ S2 *L(2)                                A0041670
      RESULT(2)=C(2)+S1*L(2)-S2*L(1)                                    A0041680
      CALL APT001(RESULT)                                               A0041690
 9999 CONTINUE                                                          A0041691
       RETURN                                                           A0041700
       END                                                              A0041710
**** SOURCE FILE : M0000755.V03   ***
*
C                                                                       A0050001
C.....FORTRAN SUBROUTINE             APT005...              3/1/68   GK A0050002
C                                                                       A0050010
C              FORTRAN SUBROUTINE APT005                                A0050020
C                                                                       A0050030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT                A0050040
C              DEFINED AS THE INTERSECTION OF TWO CIRCLES               A0050050
C              BY THE FOLLOWING APT STATEMENT                           A0050060
C              RESULT = POINT/****, INTOF, CIRC1, CIRC2                 A0050070
C                 **** = XLARGE, YLARGE, XSMALL, YSMALL                 A0050080
C                                                                       A0050090
C LINKAGE      CALL APT005 (RESULT, M, CIRC1, CIRC2)                    A0050100
C                                                                       A0050110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0050120
C                      OF THE RESULTING POINT                           A0050130
C              M       INTEGER EQUIVALENT OF THE MODIFIER               A0050140
C                      1 = XLARGE                                       A0050150
C                      2 = YLARGE                                       A0050160
C                      4 = XSMALL                                       A0050170
C                      5 = YSMALL                                       A0050180
C              CIRC1   ARRAY CONTAINING THE CANONICAL FORM              A0050190
C                      OF ONE INPUT CIRCLE                              A0050200
C              CIRC2   ARRAY CONTAINING THE CANONICAL FORM OF THE       A0050210
C                      OTHER INPUT CIRCLE                               A0050220
C                                                                       A0050230
C SUBSIDIARIES TYPE                ENTRY                                A0050240
C              SUBROUTINE          APT083                               A0050250
C              SUBROUTINE          APT044                               A0050260
C              SUBROUTINE          APT004                               A0050270
C                                                                       A0050280
      SUBROUTINE APT005 (RESULT,MN,CIRC1,CIRC2)                         A0050290
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0050300
      DIMENSION RESULT(3),CIRC1(7),CIRC2(7)                             A0050310
C                                                                       A0050320
C                                                                       A0050330
C                                                                       A0050340
      INCLUDE 'TOTAL.INC'                                               A0050481
      INCLUDE 'DEF.INC'                                                 A0050569
      INCLUDE 'DSHAR3.INC'                                              A0050649
      INCLUDE 'ZNUMBR.INC'                                              A0050745
      INCLUDE 'ISHR16.INC'                                              A0050801
      INCLUDE 'KNUMBR.INC'                                              A0050945
C                                                                       A0051000
      DIMENSION RSAVE(4)                                                A0051010
C                                                                       A0051020
C...     TRANSFORM CANONICAL FORMS AND CHECK INPUT VALIDITY             A0051030
C                                                                       A0051040
      CALL APT083(CIRC1,K12)                                            A0051050
      DO 10 I=1,7                                                       A0051060
   10 SC(I)=C(I)                                                        A0051070
      CALL APT083(CIRC2,K13)                                            A0051080
C                                                                       A0051090
C...     GET CANONICAL FORM OF LINE (APT044) AND THEN POINT (APT004)    A0051100
C                                                                       A0051110
      SC(8) =Z2*(C(1) -SC(1))                                           A0051120
      SC(9) = Z2* (C(2) -SC(2))                                         A0051130
      SC(10) =SC(7)**2 -C(7)**2 +C(1)**2-SC(1)**2 +C(2)**2-SC(2)**2     A0051140
      DO 20 I=1,4                                                       A0051142
   20 RSAVE(I)=R(I+3)                                                   A0051145
      CALL APT044 (C1(2),SC(8),SC(9),Z0,SC(10))                         A0051150
      DO 30 I=1,4                                                       A0051152
   30 R(I+3)=RSAVE(I)                                                   A0051155
      CALL APT004 (RESULT,MN,C1(2),CIRC1)                               A0051160
       RETURN                                                           A0051170
       END                                                              A0051180
**** SOURCE FILE : M0000756.V02   ***
*
C.....FORTRAN SUBROUTINE             APT006...              3/1/68   GK A0060000
C                                                                       A0060010
C              FORTRAN SUBROUTINE APT006                                A0060020
C                                                                       A0060030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT ON             A0060040
C              THE CIRCUMFERENCE OF A CIRCLE, DEFINED SUCH              A0060050
C              THAT A VECTOR FROM THE CENTER OF THE CIRCLE TO           A0060060
C              THE POINT MAKES A SPECIFIED ANGLE WITH THE               A0060070
C              POSITIVE X AXIS, BY THE FOLLOWING APT STATEMENT          A0060080
C              RESULT = POINT/CIRC1, ATANGL, A                          A0060090
C                                                                       A0060100
C LINKAGE      CALL APT006 (RESULT, CIRC1, A)                           A0060110
C                                                                       A0060120
C ARGUMENT     RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0060130
C                      RESULTING POINT                                  A0060140
C              CIRC1   ARRAY CONTAINING THE CANONICAL FORM OF           A0060150
C                      THE INPUT CIRCLE                                 A0060160
C              A       REAL VARIABLE CONTAINING THE SIZE OF             A0060170
C                      THE ANGLE IN DEGREES                             A0060180
C                                                                       A0060190
C SUBSIDIARIES TYPE                ENTRY                                A0060200
C              SUBROUTINE          APT083                               A0060210
C              SUBROUTINE          APT001                               A0060220
C                                                                       A0060230
      SUBROUTINE APT006 (RESULT,CIRC1,ANG)                              A0060240
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0060250
      DIMENSION RESULT(3),CIRC1(7)                                      A0060260
C                                                                       A0060270
C                                                                       A0060280
C                                                                       A0060290
      INCLUDE 'TOTAL.INC'                                               A0060431
      INCLUDE 'DEF.INC'                                                 A0060519
      INCLUDE 'DSHAR3.INC'                                              A0060599
      INCLUDE 'ZNUMBR.INC'                                              A0060695
      INCLUDE 'ISHR16.INC'                                              A0060751
      INCLUDE 'KNUMBR.INC'                                              A0060895
C                                                                       A0060950
C                                                                       A0060960
C                                                                       A0060970
C...     TRANSFORM CANONICAL FORM AND CHECK INPUT VALIDITY              A0060980
C                                                                       A0060990
      CALL APT083(CIRC1,K7)                                             A0061000
      SC(1) =ANG *DEGRAD                                                A0061010
      SC(2)=DSIN(SC(1))                                                 A0061020
      SC(1)=DCOS(SC(1))                                                 A0061030
      DO 10 I =1,2                                                      A0061040
   10 RESULT(I) =C(I) +C(7)*SC(I)                                       A0061050
      CALL APT001(RESULT)                                               A0061060
       RETURN                                                           A0061070
       END                                                              A0061080
**** SOURCE FILE : M0000757.V02   ***
*
C.....FORTRAN SUBROUTINE             APT007...              3/1/68   GK A0070000
C                                                                       A0070010
C              FORTRAN SUBROUTINE APT007                                A0070020
C                                                                       A0070030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT                A0070040
C              DEFINED AS THE CENTER OF A CIRCLE BY THE                 A0070050
C              FOLLOWING APT STATEMENT                                  A0070060
C              RESULT = POINT/CENTER, CIRC1                             A0070070
C                                                                       A0070080
C LINKAGE      CALL APT007 (RESULT, CIRC1)                              A0070090
C                                                                       A0070100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0070110
C                      RESULTING POINT                                  A0070120
C              CIRC1   ARRAY CONTAINING THE CANONICAL FORM              A0070130
C                      OF THE INPUT CIRCLE                              A0070140
C                                                                       A0070150
C SUBSIDIARIES TYPE                ENTRY                                A0070160
C              SUBROUTINE          APT083                               A0070170
C              SUBROUTINE          APT001                               A0070180
C                                                                       A0070190
      SUBROUTINE APT007 (RESULT,CIRC1)                                  A0070200
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0070210
      DIMENSION RESULT(3),CIRC1(7)                                      A0070220
C                                                                       A0070230
C                                                                       A0070240
C                                                                       A0070250
      INCLUDE 'TOTAL.INC'                                               A0070391
      INCLUDE 'DEF.INC'                                                 A0070479
      INCLUDE 'DSHAR3.INC'                                              A0070559
      INCLUDE 'ISHR16.INC'                                              A0070615
      INCLUDE 'KNUMBR.INC'                                              A0070759
C                                                                       A0070810
C                                                                       A0070820
C                                                                       A0070830
C...     TRANSFORM CANONICAL FORM AND CHECK INPUT VALIDITY              A0070840
C                                                                       A0070850
      CALL APT083 (CIRC1,K7)                                            A0070860
C                                                                       A0070870
C...     SET X AND Y                                                    A0070880
C                                                                       A0070890
      RESULT(1)=C(1)                                                    A0070900
      RESULT(2)=C(2)                                                    A0070910
C                                                                       A0070920
C...     GET Z COORDINATE                                               A0070930
C                                                                       A0070940
      CALL APT001 (RESULT)                                              A0070950
       RETURN                                                           A0070960
       END                                                              A0070970
**** SOURCE FILE : M0002791.V03   ***
*
C.....FORTRAN SUBROUTINE  ....APT008         8/68                    SR A0080001
C.....FORTRAN SUBROUTINE             APT008...              3/1/68   GK A0080002
C                                                                       A0080010
C              FORTRAN SUBROUTINE APT008                                A0080020
C                                                                       A0080030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT                A0080040
C              DEFINED AS THE INTERSECTION OF A LINE AND A              A0080050
C              CONIC BY THE FOLLOWING APT STATEMENT                     A0080060
C              RESULT = POINT/****, INTOF, LINE1, G1                    A0080070
C              **** = XLARGE, YLARGE, XSMALL OR YSMALL                  A0080080
C                                                                       A0080090
C LINKAGE      CALL APT008 (RESULT, M, LINE1, G1)                       A0080100
C                                                                       A0080110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0080120
C                      RESULTING POINT                                  A0080130
C              M       INTEGER EQUIVALENT OF THE MODIFIER;              A0080140
C                      1 = XLARGE                                       A0080150
C                      2 = YLARGE                                       A0080160
C                      4 = XSMALL                                       A0080170
C                      5 = YSMALL                                       A0080180
C              LINE1   ARRAY CONTAINING THE CANONICAL FORM OF THE       A0080190
C                      INPUT LINE                                       A0080200
C              G1      ARRAY CONTAINING THE CANONICAL FORM OF THE       A0080210
C                      INPUT CONIC.                                     A0080220
C                                                                       A0080230
C SUBSIDIARIES TYPE                ENTRY                                A0080240
C              SUBROUTINE          APT077                               A0080250
C              SUBROUTINE          APT079                               A0080260
C              SUBROUTINE          DEFEXT                               A0080270
C              SUBROUTINE          ERROR                                A0080280
C              SUBROUTINE          APT001                               A0080290
C              REAL FUNCTION       ABS                                  A0080300
C              REAL FUNCTION       SQRT                                 A0080310
C                                                                       A0080320
      SUBROUTINE APT008 (RESULT,MN,LINE1,G1)                            A0080330
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0080340
      DIMENSION RESULT(3),LINE1(4),G1(10)                               A0080350
      DOUBLE PRECISION LINE1                                            A0080360
C                                                                       A0080370
C                                                                       A0080380
C                                                                       A0080390
C                                                                       A0080400
      INCLUDE 'TOTAL.INC'                                               A0080541
      INCLUDE 'DEF.INC'                                                 A0080640
      INCLUDE 'DSHAR3.INC'                                              A0080730
      INCLUDE 'ZNUMBR.INC'                                              A0080838
      INCLUDE 'LDEF.INC'                                                A0080883
      INCLUDE 'IDEF.INC'                                                A0080964
      INCLUDE 'KNUMBR.INC'                                              A0081189
C                                                                       A0081190
      EQUIVALENCE(S1,SC(1)),(S2,SC(2)),(S3,SC(3)),(S4,SC(4)),(S5,SC(5)),A0081240
     1(S6,SC(6)),(S7,SC(7)),(S8,SC(8))                                  A0081250
C                                                                       A0081260
C...     TRANSFORM CANONICAL FORMS AND CHECK INPUT VALIDITY             A0081270
C                                                                       A0081280
      M = MN                                                            A0081290
      CALL APT077 (LINE1,K5)                                            A0081300
      CALL APT079 (G1,0)                                                A0081310
      IF ((DABS(G(3)).GT.Z1EM5).OR.(DABS(G(5)).GT.Z1EM5).OR.            A0081320
     1    (DABS(G(6)).GT.Z1EM5).OR.(DABS(G(10)).GT.Z1EM5)) GO TO 60     A0081330
C                                                                       A0081340
C...     DETERMINE A POINT ON THE LINE                                  A0081350
C                                                                       A0081360
      S1  =L(4)*L(1)                                                    A0081370
      S2  =L(4)*L(2)                                                    A0081380
C                                                                       A0081390
C...     DETERMINE COEFFICIENTS S(3),S(4),S(5) OF QUADRATIC FORMULA     A0081400
C                                                                       A0081410
      S3  =G(1)*L(2)*L(2)+G(2)*L(1)*L(1)-Z2*G(7)*L(2)*L(1)              A0081420
      S4  =G(1)*S1  *L(2)-G(2)*L(1)*S2  -G(7)*L(1)*S1                   A0081430
     1      +G(7)*L(2)*S2  +G(8)*L(2)-G(9)*L(1)                         A0081440
      S5  =G(1)*S1  *S1  +G(2)*S2  *S2  +G(4)                           A0081450
     1       +Z2*(G(7)*S1  *S2  +G(8)*S1  +G(9)*S2  )                   A0081460
C                                                                       A0081470
C...     DETERMINE THE RADICAL OF THE QUADRATIC FORMULA                 A0081480
C                                                                       A0081490
      S6=S4*S4-S3*S5                                                    A0081500
      IF (S6  .LT.-Z1EM5) GO TO 70                                      A0081510
      IF (DABS(Z1EM5-DABS(S6)).LT.Z1EM5) S6=Z0                          A0081520
      S6=DSQRT(S6)                                                      A0081530
      IF (DABS(S3).LT.Z1EM7) GO TO 80                                   A0081540
C                                                                       A0081550
C...     DETERMINE THE TWO ROOTS OF THE QUADRATIC FORMULA               A0081560
C                                                                       A0081570
      S7=(-S4+S6)/S3                                                    A0081580
      S8=(-S4-S6)/S3                                                    A0081590
C                                                                       A0081600
C...     SELECT THE CORRECT ROOT DEPENDING ON M                         A0081610
C                                                                       A0081620
      GO TO (10,20,20,10,20),M                                          A0081630
   10 IF(L(2)/S3) 140,30,100                                            A0081640
   20 IF(L(1)/S3) 100,40,140                                            A0081650
C                                                                       A0081660
C...     VERTICAL LINE WITH XLARGE OR XSMALL                            A0081670
C                                                                       A0081680
   30 CALL ERROR (K8,'APT008  ')                                        A0081690
      GO TO 20                                                          A0081700
C                                                                       A0081710
C...     HORIZONTAL LINE WITH YLARGE OR YSMALL                          A0081720
C                                                                       A0081730
   40 CALL ERROR (K9,'APT008  ')                                        A0081740
      GO TO 10                                                          A0081750
C                                                                       A0081760
C...     INPUT SURFACE UNDEFINED                                        A0081770
C                                                                       A0081780
   50 UNFLAG=.TRUE.                                                     A0081790
   55 CALL DEFEXT (RESULT)                                              A0081800
      GO TO 500                                                         A0081810
C                                                                       A0081820
C...     CONIC SURFACE CONTAINS VALUES FOR Z COORDINATE                 A0081830
C                                                                       A0081840
   60 IERROR=K16                                                        A0081850
      GO TO 50                                                          A0081860
C                                                                       A0081870
C...     LINE AND CONIC DO NOT INTERSECT                                A0081880
C                                                                       A0081890
   70 IERROR=K15                                                        A0081900
      GO TO 50                                                          A0081910
C                                                                       A0081920
C...     S(3)=0 - QUAD IS X=-S(5)/S(4)  S(4) LT S(5)*Z1EM7-NO INTERSEC. A0081930
C                                                                       A0081940
   80 IF (DABS(S4).LT.(Z1EM7*S5)) GO TO 70                              A0081950
      S7=-S5/S4                                                         A0081960
      GO TO 110                                                         A0081970
C                                                                       A0081980
C...     DETERMINE LARGE OR SMALL                                       A0081990
C                                                                       A0082000
  100 IF (M-K3) 110,110,130                                             A0082010
  110 RESULT(1)=S1  +L(2)*S7                                            A0082020
      RESULT(2)=S2  -L(1)*S7                                            A0082030
  120 CALL APT001 (RESULT)                                              A0082040
      GO TO 500                                                         A0082050
  130 RESULT(1)=S1  +L(2)*S8                                            A0082060
      RESULT(2)=S2  -L(1)*S8                                            A0082070
      GOTO 120                                                          A0082080
  140 IF (M-K3) 130,130,110                                             A0082090
  500 CONTINUE                                                          A0082100
      RETURN                                                            A0082101
       END                                                              A0082110
**** SOURCE FILE : M0000759.V03   ***
*
C.....FORTRAN SUBROUTINE             APT009...              3/1/68   GK A0090000
C              FORTRAN SUBROUTINE APT009                                A0090010
C                                                                       A0090020
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT                A0090030
C              DEFINED AS THE INTERSECTION OF THREE PLANES BY           A0090040
C              THE FOLLOWING APT STATEMENT                              A0090050
C              RESULT = POINT/INTOF,PLANE1,PLANE2,PLANE3                A0090060
C                                                                       A0090070
C LINKAGE      CALL APT009 (RESULT,PL1,PL2,PL3)                         A0090080
C                                                                       A0090090
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0090100
C                      RESULTING POINT                                  A0090110
C              PL1     ARRAY CONTAINING THE CANONICAL FORM OF THE       A0090120
C                      FIRST INPUT PLANE                                A0090130
C              PL2     ARRAY CONTAINING THE CANONICAL FORM OF THE       A0090140
C                      SECOND INPUT PLANE                               A0090150
C              PL3     ARRAY CONTAINING THE CANONICAL FORM OF THE       A0090160
C                      THIRD INPUT PLANE                                A0090170
C                                                                       A0090180
C SUBSIDIARIES TYPE                ENTRY                                A0090190
C              SUBROUTINE          APT075                               A0090200
C              SUBROUTINE          DEFEXT                               A0090210
C              LOGICAL FUNCTION    CKDEF                                A0090220
C                                                                       A0090230
      SUBROUTINE APT009 (RESULT,PL1,PL2,PL3)                            A0090240
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0090250
      DIMENSION RESULT(3),PL1(4),PL2(4),PL3(4),PT(4,3)                  A0090260
      LOGICAL CKDEF                                                     A0090280
C                                                                       A0090290
C                                                                       A0090300
C                                                                       A0090310
      INCLUDE 'TOTAL.INC'                                               A0090451
      INCLUDE 'DEF.INC'                                                 A0090539
      INCLUDE 'DSHAR3.INC'                                              A0090619
      INCLUDE 'ZNUMBR.INC'                                              A0090715
      INCLUDE 'IDEF.INC'                                                A0090787
      INCLUDE 'ISHR16.INC'                                              A0090843
      INCLUDE 'KNUMBR.INC'                                              A0090987
C                                                                       A0091070
      EQUIVALENCE (PT(1,1),P(1))                                        A0091080
C                                                                       A0091090
C...     MOVE CANONICAL FORMS TO ONE ARRAY AND CHECK VALIDITY           A0091100
C                                                                       A0091110
      DO 20 I=1,4                                                       A0091120
      PT(I,1)=PL1(I)                                                    A0091130
      PT(I,2)=PL2(I)                                                    A0091140
      PT(I,3)=PL3(I)                                                    A0091150
      GO TO (10,10,10,20),I                                             A0091160
   10 IF (CKDEF(PT(1,I))) IERROR=K18                                    A0091170
   20 CONTINUE                                                          A0091180
C                                                                       A0091190
C...     COMPUTE SIMULTANEOUS SOLUTION OF 3 PLANE EQUATIONS             A0091200
C                                                                       A0091210
      CALL APT075 (R,PT)                                                A0091220
   30 CALL DEFEXT (RESULT)                                              A0091230
       RETURN                                                           A0091240
       END                                                              A0091250
**** SOURCE FILE : M0000760.V03   ***
*
C.....FORTRAN SUBROUTINE  ....APT010         8/68                    AR A0100001
C.....FORTRAN SUBROUTINE             APT010...              3/1/68   GK A0100002
C                                                                       A0100010
C              FORTRAN SUBROUTINE APT010                                A0100020
C                                                                       A0100030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT                A0100040
C              DEFINED IN A COORDINATE PLANE BY A POLAR COOR-           A0100050
C              DINATE AND THE RADIUS VALUE BY THE FOLLOWING             A0100060
C              APT STATEMENT                                            A0100070
C              RESULT = POINT/RTHETA, ****, VAL                         A0100080
C                       **** = XYPLAN, YZPLAN, OR ZXPLAN                A0100090
C              OR TO DETERMINE A VECTOR IN A COORDINATE PLANE           A0100100
C              DEFINED BY ITS LENGTH AND AN ANGLE BY THE                A0100110
C              FOLLOWING APT STATEMENT                                  A0100120
C              RESULT = VECTOR/LENGTH, VAL, ATANGL, THETA, ****         A0100130
C                       **** = XYPLAN, YZPLAN OR ZXPLAN                 A0100140
C                                                                       A0100150
C LINKAGE      CALL APT010 (RESULT, M, VAL, THETA)                      A0100160
C                                                                       A0100170
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0100180
C                      THE RESULTING POINT OR VECTOR                    A0100190
C              M       INTEGER EQUIVALENT OF THE MODIFIER               A0100200
C                      1 = XYPLAN, 2 = YZPLAN, 3 = ZXPLAN               A0100210
C              VAL     REAL VARIABLE CONTAINING THE VALUE               A0100220
C                      OF THE POLAR COORDINATE RADIUS OR LENGTH         A0100230
C                      OF THE VECTOR                                    A0100240
C              THETA   REAL VARIABLE CONTAINING THE VALUE               A0100250
C                      OF THE POLAR COORDINATE ANGLE IN DEGREES         A0100260
C                      OR ANGLE OF THE VECTOR IN DEGREES                A0100270
C                                                                       A0100280
C SUBSIDIARIES TYPE                ENTRY                                A0100290
C              SUBROUTINE          APT081                               A0100300
C              SUBROUTINE          DEFEXT                               A0100310
C              REMAINDERING FUNCTION MOD                                A0100320
C                                                                       A0100330
      SUBROUTINE APT010 (RESULT,MN,VAL,THETA)                           A0100340
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0100350
      DIMENSION RESULT(3)                                               A0100360
C                                                                       A0100380
C                                                                       A0100390
C                                                                       A0100400
      INCLUDE 'TOTAL.INC'                                               A0100541
      INCLUDE 'DEF.INC'                                                 A0100629
      INCLUDE 'DSHAR3.INC'                                              A0100709
      INCLUDE 'ZNUMBR.INC'                                              A0100805
      INCLUDE 'ISHR16.INC'                                              A0100861
      INCLUDE 'KNUMBR.INC'                                              A0101005
C                                                                       A0101060
      EQUIVALENCE (S1,SC(1))                                            A0101070
C                                                                       A0101080
C...     CONVERT THETA TO RADIANS                                       A0101090
C                                                                       A0101100
      S1  =THETA*DEGRAD                                                 A0101110
      R(MN) = VAL*DCOS(S1)                                              A0101120
      M=1+MOD(MN,K3)                                                    A0101130
      R(M) = VAL*DSIN(S1)                                               A0101140
      M=1+MOD(M,K3)                                                     A0101150
      R(M)=Z0                                                           A0101160
C                                                                       A0101170
C...     CONVERT TO BASE SYSTEM IF NECESSARY                            A0101180
C                                                                       A0101190
      CALL UNPACK(RESULT,I,J,K)                                         A0101192
C...    CHECK FOR POINT OR VECTOR                                       A0101194
      IF(I.EQ.20) GO TO 10                                              A0101196
      CALL APT081(R,KM1)                                                A0101198
      GO TO 20                                                          A0101200
   10 CALL APT078(R,KM1)                                                A0101205
   20 CALL DEFEXT(RESULT)                                               A0101210
       RETURN                                                           A0101220
       END                                                              A0101230
**** SOURCE FILE : M0000693.V06   ***
*
C.....FORTRAN SUBROUTINE  ....APT011         8/68                    RN A0110001
C                                                                       A0110002
C                                                                       A0110010
C              FORTRAN SUBROUTINE APT011                                A0110020
C                                                                       A0110030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A POINT DEFINED        A0110040
C              AS THE INTERSECTION CLOSEST TO A GIVEN POINT OF          A0110050
C              A TABCYL AND A LINE BY THE FOLLOWING APT                 A0110060
C              STATEMENT                                                A0110070
C                RESULT = POINT/INTOF, LIN, TAB, PT                     A0110080
C                                                                       A0110090
C LINKAGE      CALL APT011 (RESULT, LIN, TAB, PT)                       A0110100
C                                                                       A0110110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0110120
C                      THE RESULTING LINE                               A0110130
C              LIN     ARRAY CONTAINING THE CANONICAL FORM OF           A0110140
C                      THE INPUT LINE                                   A0110150
C              TAB     ARRAY CONTAINING THE CANONICAL FORM OF           A0110160
C                      THE INPUT TABCYL                                 A0110170
C              PT      ARRAY CONTAINING THE CANONICAL FORM OF           A0110180
C                      THE INPUT POINT                                  A0110190
C                                                                       A0110200
C SUBSIDIARIES TYPE                ENTRY                                A0110210
C              SUBROUTINE          APT001                               A0110220
C              SUBROUTINE          APT092                               A0110230
C              SUBROUTINE          APT093                               A0110240
C              LOGICAL FUNCTION    CKDEF                                A0110250
C              SUBROUTINE          DDTABC                               A0110260
C              LOGICAL FUNCTION    LINDEF                               A0110270
C              SUBROUTINE          SCHTB                                A0110280
C                                                                       A0110290
      SUBROUTINE APT011 (RESULT,LIN,TAB,PT)                             A0110300
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0110305
      DOUBLE PRECISION  LIN,TAB,RADI,PT,RESULT                          A0110310
      DIMENSION RESULT(3),LIN(4),TAB(2),PT(3)                           A0110320
      LOGICAL CKDEF,LINDEF                                              A0110350
C                                                                       A0110354
      INCLUDE 'BLANKCOM.INC'                                            A0110355
C                                                                       A0110360
C                                                                       A0110370
C                                                                       A0110380
C                                                                       A0110390
      INCLUDE 'TOTAL.INC'                                               A0110531
      INCLUDE 'DEF.INC'                                                 A0110630
      INCLUDE 'DSHAR3.INC'                                              A0110720
      INCLUDE 'SV.INC'                                                  A0111053
      INCLUDE 'ZNUMBR.INC'                                              A0111161
      INCLUDE 'LDEF.INC'                                                A0111206
      INCLUDE 'ISV.INC'                                                 A0111377
      INCLUDE 'IDEF.INC'                                                A0111458
      INCLUDE 'IFXCOR.INC'                                              A0111638
      INCLUDE 'ISHR16.INC'                                              A0111701
      INCLUDE 'KNUMBR.INC'                                              A0111863
C                                                                       A0111900
C                                                                       A0111910
C                                                                       A0111920
C                                                                       A0111930
C                                                                       A0111940
C...     TRANSFER ARRAYS, CHECK INPUT                                   A0111950
C                                                                       A0111960
      IABCL=0                                                           A0111962
      IF(SUBFLG) IABCL=1                                                A0111963
      DO 10 I=1,2                                                       A0111970
      P(I)=PT(I)                                                        A0111980
      L(I)=LIN(I)                                                       A0111990
   10 V(I)=TAB(I)                                                       A0112000
      L(3)=LIN(3)                                                       A0112010
      L(4)=LIN(4)                                                       A0112020
      UNFLAG=LINDEF(L,K5).OR.CKDEF(P).OR.CKDEF(V)                       A0112030
      IF (UNFLAG) RETURN                                                A0112040
C                                                                       A0112050
C... RETRIEVE TABCYL EXTERNAL CANONICAL FORM. STORE CANON INDEX IN J11. A0112060
C                                                                       A0112070
      CALL APT094(3,TAB(1),J11)                                         A0112080
      IF (CKDEF(TAB(1)))  GO TO 99                                      A0112090
C                                                                       A0112140
C...     FIND PART OF TABCYL CLOSEST TO INPUT POINT P, USING SCHTB      A0112150
C                                                                       A0112160
      CALL SCHTB(CANON(J11-1))                                          A0112170
C                                                                       A0112180
C...     CONSIDER TABCYL AS A CHECK SURFACE, LINE AS TOOL NORMAL,       A0112190
C...     DESIRED POINT AS SURFACE POINT -USE DDTABC TO FIND SP          A0112200
      M11=IS                                                            A0112210
      IS =ICS                                                           A0112220
      DO 30 I=1,3                                                       A0112230
      SC(I)  =TN(I,ICS)                                                 A0112250
      SC(I+3)=TP(I,ICS)                                                 A0112260
   30 TP(I,ICS)  =L(I)*L(4)                                             A0112270
      TN(1,ICS)  =L(2)                                                  A0112280
      TN(2,ICS)=-L(1)                                                   A0112290
      TN(3,ICS)=Z0                                                      A0112300
      L11=IOP(ICS)                                                      A0112310
      IOP(ICS) = 0                                                      A0112320
      SUBFLG =.TRUE.                                                    A0112330
      CALL DDTABC(CANON(J11-1))                                         A0112340
      IF(IER.NE.K0) IERROR = 72                                         A0112350
      RESULT(1)=SP(1,ICS)                                               A0112360
      RESULT(2)=SP(2,ICS)                                               A0112370
C                                                                       A0112380
C...     GET THIRD COORDINATE                                           A0112390
C                                                                       A0112400
      IF(IABCL.EQ.1) GO TO 88                                           A0112401
      CALL APT001 (RESULT)                                              A0112410
   88 CONTINUE                                                          A0112411
      IER = 0                                                           A0112420
      IS =M11                                                           A0112430
      IOP(ICS)=L11                                                      A0112440
      DO 40 I=1,3                                                       A0112450
      TN(I,ICS) =SC(I)                                                  A0112470
   40 TP(I,ICS) =SC(I+3)                                                A0112480
      SUBFLG =.FALSE.                                                   A0112490
   99 CONTINUE                                                          A0112491
      RETURN                                                            A0112500
       END                                                              A0112510
**** SOURCE FILE : M0000762.V02   ***
*
C.....FORTRAN SUBROUTINE             APT012...              3/1/68   GK A0120000
C                                                                       A0120010
C              FORTRAN SUBROUTINE APT012                                A0120020
C                                                                       A0120030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0120040
C              AS PASSING THROUGH TWO POINTS BY ONE OF THE              A0120050
C              FOLLOWING APT STATEMENTS                                 A0120060
C                  RESULT = LINE/X1, Y1, Z1, X2, Y2, Z2                 A0120070
C              OR  RESULT = LINE/X1, Y1, X2, Y2                         A0120080
C                                                                       A0120090
C LINKAGE      CALL APT012 (RESULT, X1, Y1, X2, Y2)                     A0120100
C                                                                       A0120110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN CANONICAL FORM OF               A0120120
C                      RESULTING LINE                                   A0120130
C              X1      X COORDINATE OF THE FIRST INPUT POINT            A0120140
C              Y1      Y COORDINATE OF THE FIRST INPUT POINT            A0120150
C              X2      X COORDINATE OF THE SECOND INPUT POINT           A0120160
C              Y2      Y COORDINATE OF THE SECOND INPUT POINT           A0120170
C                                                                       A0120180
C SUBSIDIARIES TYPE                ENTRY                                A0120190
C              SUBROUTINE          APT077                               A0120200
C              SUBROUTINE          DEFEXT                               A0120210
C              SUBROUTINE          VNORM                                A0120220
C              LOGICAL FUNCTION    ZVECT                                A0120230
C                                                                       A0120240
      SUBROUTINE APT012 (RESULT,X1,Y1,X2,Y2)                            A0120250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0120260
      DIMENSION RESULT(4)                                               A0120270
      LOGICAL ZVECT                                                     A0120280
C                                                                       A0120290
C                                                                       A0120300
C                                                                       A0120310
      INCLUDE 'TOTAL.INC'                                               A0120451
      INCLUDE 'DEF.INC'                                                 A0120539
      INCLUDE 'DSHAR3.INC'                                              A0120619
      INCLUDE 'ZNUMBR.INC'                                              A0120715
      INCLUDE 'IDEF.INC'                                                A0120787
      INCLUDE 'ISHR16.INC'                                              A0120843
      INCLUDE 'KNUMBR.INC'                                              A0120987
C                                                                       A0121070
C                                                                       A0121080
C                                                                       A0121090
C...     SET UP VECTOR                                                  A0121100
C                                                                       A0121110
      V(1)=Y1-Y2                                                        A0121120
      V(2)=X2-X1                                                        A0121130
      V(3)=Z0                                                           A0121140
C                                                                       A0121150
C...     CHECK POINTS TOO CLOSE (ALL VECTOR COMPONENTS LT .000001)      A0121160
C                                                                       A0121170
      IF (.NOT.ZVECT(V)) IERROR=K19                                     A0121180
C                                                                       A0121190
C...     NORMALIZE VECTOR                                               A0121200
C                                                                       A0121210
      CALL VNORM(V,V)                                                   A0121220
C                                                                       A0121230
C...     COMPUTE RESULT(4) AND TRANSFORM IF NECESSARY  (APT077)         A0121240
C                                                                       A0121250
      V(4)=V(1)*X1+V(2)*Y1                                              A0121260
      CALL APT077 (V,KM1)                                               A0121270
   10 CALL DEFEXT (RESULT)                                              A0121280
       RETURN                                                           A0121290
       END                                                              A0121300
**** SOURCE FILE : M0000694.V03   ***
*
C                                                                       A0130010
C     FORTRAN SUBROUTINE APT013                                         A0130020
C  PURPOSE     TO GENERATE THE CANONICAL FORM OF A CIRCLE OR A CYLNDER  A0130030
C              DEFINED AS TANGENT TO EACH OF THREE GIVEN LINES          A0130040
C              BY THE FOLLOWING APT STATEMENT.                          A0130050
C              RESULT=CYLNDR/**,L1,**,L2,**,L3                          A0130060
C                **=XLARGE,YLARGE,ZLARGE,XSMALL,YSMALL,ZSMALL           A0130070
C                CYLNDR CAN BE REPLACED BY CIRCLE                       A0130080
C  LINKAGE     CALL APT013 (RESULT,M1,L1,M2,L2,M3,L3)                   A0130090
C  ARGUMENTS   RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0130100
C                      THE RESULTING CYLNDR OR CIRCLE.                  A0130110
C              M1-M3   INTEGER EQUIVALENT OF THE MODIFIER               A0130120
C                      1=XLARGE  2=YLARGE  3=ZLARGE                     A0130130
C                      4=XSMALL  5=YSMALL  6=ZSMALL                     A0130140
C              L1-L3   ARRAY CONTAINING THE CANONICAL FORM OF THE       A0130150
C                      PLANE OR LINE.                                   A0130160
C  SUBSIDIARIES    TYPE      ENTRY                                      A0130170
C                SUBROUTINE  APT077                                     A0130180
C                SUBROUTINE  DOTF                                       A0130190
C                SUBROUTINE  CROSSV                                     A0130200
C                SUBROUTINE  APT075                                     A0130210
C                SUBROUTINE  APT047                                     A0130220
C                SUBROUTINE  DEFEXT                                     A0130230
      SUBROUTINE APT013(RESULT,M1,L1,M2,L2,M3,L3)                       A0130240
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           A0130250
C                                                                       A0130260
C                                                                       A0130270
C                                                                       A0130280
      INCLUDE 'TOTAL.INC'                                               A0130391
C...  ALL REFERENCES TO VARIABLE A HAVE BEEN CHANGED TO AZ,             A0130488
C...  BECAUSE A OCCURS IN DEF.INC.                                      A0130489
      INCLUDE 'DEF.INC'                                                 A0130491
      INCLUDE 'DSHAR3.INC'                                              A0130551
      INCLUDE 'IDEF.INC'                                                A0130559
C                                                                       A0130560
C                                                                       A0130580
      DIMENSION RESULT(7),L1(4),L2(4),L3(4),SL(4,3),TL(4,3),MS(3)       A0130600
      DIMENSION MT(3),TTL(4,3),PT1(3,2),PT2(3,2),MTT(3)                 A0130610
      DOUBLE PRECISION L1,L2,L3                                         A0130620
C...  TRANSFORM FROM BASE TO LOCAL                                      A0130630
      CALL APT077(L1,0)                                                 A0130640
      DO 10 I=1,4                                                       A0130650
   10 SL(I,1) = L(I)                                                    A0130660
      MS(1) = M1                                                        A0130670
C                                                                       A0130680
       CALL APT077(L2,0)                                                A0130690
      DO 11 I=1,4                                                       A0130700
   11 SL(I,2)=L(I)                                                      A0130710
      MS(2)=M2                                                          A0130720
C                                                                       A0130730
      CALL APT077(L3,0)                                                 A0130740
      DO 12 I=1,4                                                       A0130750
   12 SL(I,3) = L(I)                                                    A0130760
      MS(3)=M3                                                          A0130770
C...  GET TWO UNPARALLEL PLANE                                          A0130780
      DO 13 J=1,3                                                       A0130790
      I=J+1                                                             A0130800
      IF(J.EQ.3) I=1                                                    A0130810
      CALL DOTF(DOT,SL(1,J),SL(1,I))                                    A0130820
      MT(J)=0                                                           A0130830
      IF(DABS(DOT).LT.0.9999) MT(J)=1                                   A0130840
   13 CONTINUE                                                          A0130850
      IF(MT(1)+MT(2)+MT(3).LE.1) GO TO 98                               A0130860
      IF(MT(1).EQ.0) GO TO 14                                           A0130870
      I=1                                                               A0130880
      J=2                                                               A0130890
      IF(MT(2).EQ.0) J=3                                                A0130900
      GO TO 15                                                          A0130910
   14 I=2                                                               A0130920
      J=3                                                               A0130930
   15 JJ=J+1                                                            A0130940
      IF(J.EQ.3) JJ=1                                                   A0130950
      DO 16 K=1,4                                                       A0130960
      TL(K,1)=SL(K,I)                                                   A0130970
      TL(K,2)=SL(K,I+1)                                                 A0130980
      TTL(K,1)=SL(K,J)                                                  A0130990
   16 TTL(K,2)=SL(K,JJ)                                                 A0131000
      MT(1)=MS(I)                                                       A0131010
      MT(2)=MS(I+1)                                                     A0131020
      MTT(1)=MS(J)                                                      A0131030
      MTT(2)=MS(JJ)                                                     A0131040
      TL(4,3) = 0.0                                                     A0131050
      CALL CROSS(TL(1,1),TL(1,2),TL(1,3))                               A0131060
      CALL VNORM(TL(1,3),TL(1,3))                                       A0131061
      DO 17 K=1,4                                                       A0131070
   17 TTL(K,3)=TL(K,3)                                                  A0131080
C...  CHECK PERPENDICULARITY                                            A0131090
      DO 18 J=1,3                                                       A0131100
      CALL DOTF (DOT,SL(1,J),TL(1,3))                                   A0131110
      IF(DABS(DOT).GT.0.000001) GO TO 98                                A0131120
   18 CONTINUE                                                          A0131130
C..   GET INTERSECTION POINT                                            A0131140
      CALL APT075 (PT1(1,1),TL(1,1))                                    A0131150
      CALL APT075(PT1(1,2),TTL(1,1))                                    A0131160
C...  OFFSET THE PLANE                                                  A0131170
      DO 19 I=1,2                                                       A0131180
      DO 191 J=1,4                                                      A0131190
  191 L(J)=TL(J,I)                                                      A0131200
      MN=MT(I)                                                          A0131210
      ASSIGN 192 TO IRTN                                                A0131220
      GO TO 70                                                          A0131230
  192 DO 193 J=1,4                                                      A0131240
  193 TL(J,I)=L(J)                                                      A0131250
      DO 194 J=1,4                                                      A0131260
  194 L(J)=TTL(J,I)                                                     A0131270
      MN=MTT(I)                                                         A0131280
      ASSIGN 195 TO IRTN                                                A0131290
      GO TO 70                                                          A0131300
  195 DO 196 J=1,4                                                      A0131310
  196 TTL(J,I)=L(J)                                                     A0131320
   19 CONTINUE                                                          A0131330
C...  GET INTERSECTION POINT                                            A0131340
      CALL APT075 (PT2(1,1),TL(1,1))                                    A0131350
      CALL APT075(PT2(1,2),TTL(1,1))                                    A0131360
C...  GET PLANE THRU TWO POINTS                                         A0131370
      DO 21 J=1,2                                                       A0131380
      DO 20 I=1,3                                                       A0131390
   20 TL(I,J)=PT2(I,J)-PT1(I,J)                                         A0131400
      CALL CROSS(TL(1,3),TL(1,J),TL(1,J))                               A0131410
      CALL VNORM(TL(1,J),TL(1,J))                                       A0131411
   21 CALL DOTF(TL(4,J),TL(1,J),PT1(1,J))                               A0131420
C...  GET INTERSECTION OF TWO PLANES                                    A0131430
      CALL APT075 (R(1),TL(1,1))                                        A0131440
C--- CII UPDATE TO CHECK FOR INCONSISTENCY  NIU-APR/75                  A0131441
      DO 200 M=1,3                                                      A0131442
      CALL DOTF(AZ,R,SL(1,M))                                           A0131443
      N=MS(M)                                                           A0131444
      IF(N.GT.3) N=N-3                                                  A0131445
      IF((SL(4,M)-AZ)*SL(N,M)*(MS(M)-3.5).LT.0.D0) GO TO 98             A0131446
  200 CONTINUE                                                          A0131447
      CALL VNORM(TL(1,3),TL(1,3))                                       A0131449
      R(4)=TL(1,3)                                                      A0131450
      R(5)=TL(2,3)                                                      A0131460
      R(6)=TL(3,3)                                                      A0131470
      R(7) = SL(4,1)-SL(1,1)*R(1)-SL(2,1)*R(2)-SL(3,1)*R(3)             A0131480
      R(7) = DABS(R(7))                                                 A0131490
      GO TO 99                                                          A0131500
   98 IERROR = 43                                                       A0131510
   99 CALL DEFEXT(RESULT)                                               A0131520
      RETURN                                                            A0131530
C.... GET PARALLEL PLANE.                                               A0131540
   70 JI=MOD(MN-1,3)                                                    A0131550
      DUMMY1=MN                                                         A0131560
      S1=L(JI+1)*(3.5D0-DUMMY1)                                         A0131570
      IF(S1.NE.0.0D0) GO TO 80                                          A0131580
      IERROR=59                                                         A0131590
      GO TO 99                                                          A0131600
   80 L(4)=L(4)+DSIGN(0.5D0,S1)                                         A0131610
      GOTO IRTN,(192,195)                                               A0131620
      E N D                                                             A0131630
**** SOURCE FILE : M0000764.V02   ***
*
C.....FORTRAN SUBROUTINE             APT014...              3/1/68   GK A0140000
C                                                                       A0140010
C              FORTRAN SUBROUTINE APT014                                A0140020
C                                                                       A0140030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE                 A0140040
C              DEFINED AS PASSING THROUGH TWO SYMBOLIC POINTS           A0140050
C              BY THE FOLLOWING APT STATEMENT                           A0140060
C                   RESULT = LINE/P1, P2                                A0140070
C                                                                       A0140080
C LINKAGE      CALL APT014 (RESULT, P1, P2)                             A0140090
C                                                                       A0140100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN CANONICAL FORM OF THE           A0140110
C                      RESULTING LINE                                   A0140120
C              P1      ARRAY CONTAINING CANONICAL FORM OF THE           A0140130
C                      FIRST INPUT POINT                                A0140140
C              P2      ARRAY CONTAINING CANONICAL FORM OF THE           A0140150
C                      SECOND INPUT POINT                               A0140160
C                                                                       A0140170
C SUBSIDIARIES TYPE                ENTRY                                A0140180
C              SUBROUTINE          APT081                               A0140190
C              SUBROUTINE          APT012                               A0140200
C                                                                       A0140210
      SUBROUTINE APT014 (RESULT,P1,P2)                                  A0140220
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0140230
      DIMENSION RESULT(4),P1(3),P2(3)                                   A0140240
C                                                                       A0140250
C                                                                       A0140260
C                                                                       A0140270
      INCLUDE 'TOTAL.INC'                                               A0140411
      INCLUDE 'DEF.INC'                                                 A0140510
      INCLUDE 'DSHAR3.INC'                                              A0140600
      INCLUDE 'ISHR16.INC'                                              A0140663
C                                                                       A0140680
C                                                                       A0140690
C                                                                       A0140700
C...     CHECK INPUT VALIDITY AND TRANSFORM CANONICAL FORMS             A0140710
C                                                                       A0140720
      CALL APT081 (P1,0)                                                A0140730
      SC(1) = P(1)                                                      A0140740
      SC(2) = P(2)                                                      A0140750
      CALL APT081 (P2,0)                                                A0140760
C                                                                       A0140770
C...     LINE THRU TWO POINTS FROM APT012                               A0140780
C                                                                       A0140790
      CALL APT012(RESULT,SC(1),SC(2),P(1),P(2))                         A0140800
       RETURN                                                           A0140810
       END                                                              A0140820
**** SOURCE FILE : M0000765.V02   ***
*
C.....FORTRAN SUBROUTINE             APT015...              3/1/68   GK A0150000
C                                                                       A0150010
C              FORTRAN SUBROUTINE APT015                                A0150020
C                                                                       A0150030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0150040
C              AS TANGENT TO A CIRCLE AND PASSING THROUGH A             A0150050
C              GIVEN POINT BY THE FOLLOWING APT STATEMENT               A0150060
C              RESULT = LINE/POINT1, ****, TANTO, CIRC1,                A0150070
C                       **** = RIGHT OR LEFT                            A0150080
C                                                                       A0150090
C LINKAGE      CALL APT015 (RESULT, PNT, N, CIRC1)                      A0150100
C                                                                       A0150110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0150120
C                      OF THE RESULTING LINE                            A0150130
C              PNT     ARRAY CONTAINING THE CANONICAL FORM              A0150140
C                      OF THE INPUT POINT                               A0150150
C              N       INTEGER EQUIVALENT OF THE MODIFIER               A0150160
C                      1 = RIGHT     2 = LEFT                           A0150170
C              CIRC1   ARRAY CONTAINING THE CANONICAL FORM OF           A0150180
C                      THE INPUT CIRCLE                                 A0150190
C                                                                       A0150200
C SUBSIDIARIES TYPE                ENTRY                                A0150210
C              SUBROUTINE          APT016                               A0150220
C              SUBROUTINE          APT081                               A0150230
C              SUBROUTINE          APT083                               A0150240
C                                                                       A0150250
      SUBROUTINE APT015 (RESULT, PNT, MN, CIRC1)                        A0150260
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0150270
      DIMENSION RESULT(4), PNT(3), CIRC1(7)                             A0150280
C                                                                       A0150290
      INCLUDE 'TOTAL.INC'                                               A0150431
      INCLUDE 'DEF.INC'                                                 A0150519
      INCLUDE 'DSHAR3.INC'                                              A0150599
      INCLUDE 'ISHR16.INC'                                              A0150655
      INCLUDE 'KNUMBR.INC'                                              A0150799
C                                                                       A0150840
C                                                                       A0150850
C...       TRANSFORM CANONICAL FORM TO LOCAL COORDINATE SYSTEM          A0150860
C                                                                       A0150870
      CALL APT081 (PNT,0)                                               A0150880
C                                                                       A0150890
C                                                                       A0150900
C...       MAKE THE POINT A ZERO RADIUS VERTICAL CYLINDER               A0150910
C                                                                       A0150920
      DO 10 I=3,7                                                       A0150930
   10 P(I) = R(I)                                                       A0150940
C                                                                       A0150950
C                                                                       A0150960
C...       TRANSFORM TO BASE SYSTEM AND CALL APT016 TO GET LINE         A0150970
C                                                                       A0150980
      CALL APT083 (P,KM1)                                               A0150990
      CALL APT016 (RESULT, MN, R, MN, CIRC1)                            A0151000
       RETURN                                                           A0151010
       END                                                              A0151020
**** SOURCE FILE : M0004296.V02   ***
*
C.....FORTRAN SUBROUTINE             APT016...              3/1/68   GK A0160000
C                                                                       A0160010
C              FORTRAN SUBROUTINE APT016                                A0160020
C                                                                       A0160030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0160040
C              AS TANGENT TO TWO CIRCLES BY THE FOLLOWING APT           A0160050
C              STATEMENT                                                A0160060
C              RESULT = LINE/****, TANTO, CIRC1, ****, TANTO,           A0160070
C                       CIRC2                                           A0160080
C                **** = LEFT OR RIGHT                                   A0160090
C                                                                       A0160100
C LINKAGE      CALL APT016 (RESULT, M, CIRC1, N, CIRC2)                 A0160110
C                                                                       A0160120
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0160130
C                      THE RESULTING LINE                               A0160140
C              M       INTEGER EQUIVALENT OF THE FIRST MODIFIER         A0160150
C                             1 = RIGHT        2 = LEFT                 A0160160
C              CIRC1   ARRAY CONTAINING THE CANONICAL FORM OF           A0160170
C                      THE FIRST CIRCLE                                 A0160180
C              N       INTEGER EQUIVALENT OF THE SECOND MODIFIER        A0160190
C                             1 = RIGHT       2 = LEFT                  A0160200
C              CIRC2   ARRAY CONTAINING THE CANONICAL FORM OF           A0160210
C                      THE SECOND CIRCLE                                A0160220
C                                                                       A0160230
C SUBSIDIARIES TYPE                ENTRY                                A0160240
C              SUBROUTINE          APT077                               A0160250
C              SUBROUTINE          APT083                               A0160260
C              REAL FUNCTION       ABS                                  A0160270
C              SUBROUTINE          DEFEXT                               A0160280
C              REAL FUNCTION       SQRT                                 A0160290
C                                                                       A0160300
      SUBROUTINE APT016 (RESULT,MN, CIRC1,NM, CIRC2)                    A0160310
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0160320
      DIMENSION RESULT(4),CIRC1(7),CIRC2(7)                             A0160330
C                                                                       A0160340
C                                                                       A0160350
C                                                                       A0160360
      INCLUDE 'TOTAL.INC'                                               A0160501
      INCLUDE 'DEF.INC'                                                 A0160589
      INCLUDE 'DSHAR3.INC'                                              A0160669
      INCLUDE 'ZNUMBR.INC'                                              A0160765
      INCLUDE 'IDEF.INC'                                                A0160837
      INCLUDE 'ISHR16.INC'                                              A0160893
      INCLUDE 'KNUMBR.INC'                                              A0161037
C                                                                       A0161120
      EQUIVALENCE (S1,SC(1)),(S2,SC(2)),(S3,SC(3)),(S4,SC(4)),(S5,SC(5))A0161130
C                                                                       A0161140
C...     TRANSFORM CANONICAL FORMS AND CHECK INPUT VALIDITY             A0161150
C                                                                       A0161160
      CALL APT083 (CIRC1,21)                                            A0161170
      DO 10 I=1,7                                                       A0161180
   10 SC(I+5) = C(I)                                                    A0161190
      CALL APT083 (CIRC2,22)                                            A0161200
C                                                                       A0161210
C...     CALCULATE DISTANCE BETWEEN CENTERS CHECK FOR CONCENTRIC,       A0161220
C...        INTERSECTING CIRCLES OR CENTERS TOO CLOSE.                  A0161230
C                                                                       A0161240
      S1=DSQRT((C(1)-SC(6))**2+(C(2)-SC(7))**2)                         A0161250
      IF (S1.LE.Z1EM5) IERROR=K23                                       A0161260
      IF (IERROR.NE. 0) GO TO 30                                        A0161265
      IF(DABS(SC(12)-C(7))-S1.GT.Z1EM5) IERROR = K24                    A0161270
      IF (IERROR.NE. 0) GO TO 30                                        A0161275
      IF ((S1 -(SC(12) +C(7))).GE.Z1EM5) GO TO 20                       A0161280
      IF (NM.NE.MN) IERROR = K25                                        A0161290
   20 IF (IERROR.NE. 0) GO TO 30                                        A0161300
C...     CALCULATE SIN(ALPHA) AND COS(ALPHA)                            A0161310
C                                                                       A0161320
      S2 =   (C(2)-SC(7))/S1                                            A0161330
      S3 =   (C(1)-SC(6))/S1                                            A0161340
      IF (MN.EQ.NM)SC(12) = -SC(12)                                     A0161350
C                                                                       A0161360
C...     CALCULATE SIN(GAMMA) AND COS(GAMMA)                            A0161370
C                                                                       A0161380
      S4 = (C(7) +SC(12)) /S1                                           A0161390
      S5=DSQRT(Z1-S4*S4)                                                A0161400
      IF (NM.EQ.K1) S5 = -S5                                            A0161410
C                                                                       A0161420
C...     SET UP CANONICAL FORM IN P AND TRANSFORM TO BASE COORDINATES   A0161430
C                                                                       A0161440
      P(1)=S4*S3+S5*S2                                                  A0161450
      P(2)=S4*S2-S5*S3                                                  A0161460
      P(3)=Z0                                                           A0161470
      CALL VNORM (P,P)                                                  A0161475
      P(4)=P(1)*C(1)+P(2)*C(2)-C(7)                                     A0161480
      CALL APT077 (P,KM1)                                               A0161490
   30 CALL DEFEXT (RESULT)                                              A0161500
       RETURN                                                           A0161510
       END                                                              A0161520
**** SOURCE FILE : M0000767.V02   ***
*
C.....FORTRAN SUBROUTINE              APT017               4/17/68      A0170000
C                                                                       A0170010
C              FORTRAN SUBROUTINE APT017                                A0170020
C                                                                       A0170030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0170040
C              AS PASSING THROUGH A POINT AND HAVING A SPECI-           A0170050
C              FIED SLOPE OR FORMING A SPECIFIED ANGLE WITH THE         A0170060
C              X-AXIS BY ONE OF THE FOLLOWING APT STATEMENTS            A0170070
C              RESULT = LINE/PNT, ATANGL, ALPHA                         A0170080
C              RESULT = LINE/PNT, SLOPE, ALPHA                          A0170090
C                                                                       A0170100
C LINKAGE      CALL APT017 (RESULT, PNT, M, ALPHA)                      A0170110
C                                                                       A0170120
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0170130
C                      RESULTING LINE                                   A0170140
C              PNT     ARRAY CONTAINING THE CANONICAL FORM OF THE       A0170150
C                      INPUT POINT                                      A0170160
C              M       INTEGER EQUIVALENT OF THE MODIFIER               A0170170
C                      1 = ATANGL 2 = SLOPE                             A0170180
C              ALPHA   REAL VARIABLE CONTAINING THE VALUE OF            A0170190
C                      THE ANGLE (DEGREES) OR SLOPE.                    A0170200
C                                                                       A0170210
C SUBSIDIARIES TYPE                ENTRY                                A0170220
C              SUBROUTINE          APT077                               A0170230
C              SUBROUTINE          APT022                               A0170240
C              REAL FUNCTION       ATAN                                 A0170250
C                                                                       A0170260
      SUBROUTINE APT017 (RESULT,PNT,MN,ALPHA)                           A0170270
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0170280
      DIMENSION RESULT(4),PNT(3)                                        A0170290
C                                                                       A0170300
C                                                                       A0170310
C                                                                       A0170320
      INCLUDE 'TOTAL.INC'                                               A0170461
      INCLUDE 'DEF.INC'                                                 A0170549
      INCLUDE 'DSHAR3.INC'                                              A0170629
      INCLUDE 'ZNUMBR.INC'                                              A0170725
      INCLUDE 'ISHR16.INC'                                              A0170781
      INCLUDE 'KNUMBR.INC'                                              A0170925
C                                                                       A0170980
C                                                                       A0170990
C                                                                       A0171000
C...     IF SLOPE, SOLVE FOR ANGLE                                      A0171010
C                                                                       A0171020
      IF (MN.EQ.K1)GO TO 10                                             A0171030
      ALPHA=DATAN(ALPHA)/DEGRAD                                         A0171040
C                                                                       A0171050
C...     TRANSFORM LOCAL X-AXIS (0,1,0,0) TO BASE SYSTEM                A0171060
C                                                                       A0171070
   10 CALL APT077 (R(5),KM1)                                            A0171080
      CALL APT022 (RESULT,PNT,K1,ALPHA,R)                               A0171090
      RETURN                                                            A0171100
       END                                                              A0171110
**** SOURCE FILE : M0000768.V03   ***
*
C                                                                       A0180001
C.....FORTRAN SUBROUTINE             APT018...              3/1/68   GK A0180002
C                                                                       A0180010
C              FORTRAN SUBROUTINE APT018                                A0180020
C                                                                       A0180030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0180040
C              AS PASSING A GIVEN POINT AND PARALLEL TO A GIVEN         A0180050
C              LINE BY THE FOLLOWING APT STATEMENT                      A0180060
C              RESULT = LINE/PNT, PARLEL, LN                            A0180070
C                                                                       A0180080
C LINKAGE      CALL APT018 (RESULT, PNT, LN)                            A0180090
C                                                                       A0180100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0180110
C                      RESULTING LINE                                   A0180120
C              PNT     ARRAY CONTAINING THE CANONICAL FORM OF THE       A0180130
C                      INPUT POINT                                      A0180140
C              LN      ARRAY CONTAINING THE CANONICAL FORM OF THE       A0180150
C                      INPUT LINE                                       A0180160
C                                                                       A0180170
C SUBSIDIARIES TYPE                ENTRY                                A0180180
C              SUBROUTINE          APT046                               A0180190
C              SUBROUTINE          APT077                               A0180200
C                                                                       A0180210
      SUBROUTINE APT018 (RESULT,PNT,LN)                                 A0180220
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0180230
      DIMENSION RESULT(4),PNT(3),LN(4)                                  A0180240
      DOUBLE PRECISION LN                                               A0180250
C                                                                       A0180260
C                                                                       A0180270
      INCLUDE 'TOTAL.INC'                                               A0180401
      INCLUDE 'ISHR16.INC'                                              A0180453
      INCLUDE 'KNUMBR.INC'                                              A0180579
C                                                                       A0180610
C                                                                       A0180620
C                                                                       A0180630
C...     CHECK VALIDITY OF LN IN LOCAL SYSTEM                           A0180640
C                                                                       A0180650
      CALL APT077(LN, 92)                                               A0180660
C                                                                       A0180670
C...     SOLVE FOR PLANE PARLEL TO LN-PLANE  (APT046)                   A0180680
C                                                                       A0180690
      CALL APT046 (RESULT,PNT,LN)                                       A0180700
      RETURN                                                            A0180710
       END                                                              A0180720
**** SOURCE FILE : M0000769.V02   ***
*
C.....FORTRAN SUBROUTINE              APT019                3/6/68      A0190000
C                                                                       A0190010
C              FORTRAN SUBROUTINE APT019                                A0190020
C                                                                       A0190030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0190040
C              AS PASSING THROUGH A POINT AND PERPENDICULAR TO          A0190050
C              A GIVEN LINE BY THE FOLLOWING APT STATEMENT              A0190060
C              RESULT = LINE/PNT, PERPTO, LN                            A0190070
C                                                                       A0190080
C LINKAGE      CALL APT019 (RESULT, PNT, LN)                            A0190090
C                                                                       A0190100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0190110
C                      THE RESULTING LINE                               A0190120
C              PNT     ARRAY CONTAINING THE CANONICAL FORM OF           A0190130
C                      THE INPUT POINT                                  A0190140
C              LN      ARRAY CONTAINING THE CANONICAL FORM OF           A0190150
C                      THE INPUT LINE                                   A0190160
C                                                                       A0190170
C SUBSIDIARIES TYPE                ENTRY                                A0190180
C              SUBROUTINE          APT022                               A0190190
C                                                                       A0190200
      SUBROUTINE APT019(RESULT,PNT,LN)                                  A0190210
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0190220
      DIMENSION RESULT(4),PNT(3),LN(4)                                  A0190230
      DOUBLE PRECISION LN                                               A0190240
C                                                                       A0190250
C                                                                       A0190260
C                                                                       A0190270
      INCLUDE 'TOTAL.INC'                                               A0190401
      INCLUDE 'ZNUMBR.INC'                                              A0190488
      INCLUDE 'ISHR16.INC'                                              A0190537
C                                                                       A0190560
C                                                                       A0190570
C                                                                       A0190580
C...     USE APT022 TO FIND LINE THRU PNT, AT 90 DEGREES WITH LN        A0190590
C                                                                       A0190600
      CALL APT022 (RESULT,PNT,1,Z90,LN)                                 A0190610
      RETURN                                                            A0190620
       END                                                              A0190630
**** SOURCE FILE : M0000770.V03   ***
*
C                                                                       A0200001
C.....FORTRAN SUBROUTINE             APT020...              3/1/68   GK A0200002
C                                                                       A0200010
C              FORTRAN SUBROUTINE APT020                                A0200020
C                                                                       A0200030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0200040
C              AS PARALLEL TO, AND AT A GIVEN DISTANCE FROM A           A0200050
C              GIVEN LINE BY THE FOLLOWING APT STATEMENT                A0200060
C              RESULT = LINE/PARLEL, LN, ****, DT                       A0200070
C                   **** = XLARGE, YLARGE, XSMALL, YSMALL               A0200080
C                                                                       A0200090
C LINKAGE      CALL APT020 (RESULT, LN, M, DT)                          A0200100
C                                                                       A0200110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0200120
C                      RESULTING LINE                                   A0200130
C              LN      ARRAY CONTAINING THE CANONICAL FORM OF THE       A0200140
C                      INPUT LINE                                       A0200150
C              M       INTEGER EQUIVALENT OF THE MODIFIER               A0200160
C                      1 = XLARGE                                       A0200170
C                      2 = YLARGE                                       A0200180
C                      4 = XSMALL                                       A0200190
C                      5 = YSMALL                                       A0200200
C              DT      REAL VARIABLE CONTAINING THE DISTANCE            A0200210
C                      BETWEEN THE LINES                                A0200220
C                                                                       A0200230
C SUBSIDIARIES TYPE                ENTRY                                A0200240
C              SUBROUTINE          APT047                               A0200250
C              SUBROUTINE          APT077                               A0200260
C                                                                       A0200270
      SUBROUTINE APT020 (RESULT,LN,MN,DT)                               A0200280
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0200290
      DIMENSION RESULT(4),LN(4)                                         A0200300
      DOUBLE PRECISION LN                                               A0200310
C                                                                       A0200320
C                                                                       A0200330
C                                                                       A0200340
      INCLUDE 'TOTAL.INC'                                               A0200471
      INCLUDE 'ISHR16.INC'                                              A0200523
      INCLUDE 'KNUMBR.INC'                                              A0200649
C                                                                       A0200680
C                                                                       A0200690
C                                                                       A0200700
C...     CHECK VALIDITY OF LN IN LOCAL SYSTEM                           A0200710
C                                                                       A0200720
      CALL APT077 (LN, 92)                                              A0200730
C                                                                       A0200740
C...     SOLVE FOR PLANE PARLEL TO LN, DISTANCE DT - APT047 (BASE SYS)  A0200750
C                                                                       A0200760
      CALL APT047(RESULT,LN,MN,DT)                                      A0200770
      RETURN                                                            A0200780
       END                                                              A0200790
**** SOURCE FILE : M0000771.V02   ***
*
C.....FORTRAN SUBROUTINE              APT021               3/26/68      A0210000
C                                                                       A0210010
C              FORTRAN SUBROUTINE APT021                                A0210020
C                                                                       A0210030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0210040
C              AS HAVING A GIVEN SLOPE (OR FORMING A GIVEN ANGLE WITH   A0210050
C              THE POSITIVE XAXIS) AND A GIVEN X OR Y - INTERCEPT       A0210055
C              BY THE FOLLOWING APT STATEMENTS                          A0210060
C              RESULT = LINE/MN,PSI,INTERC,IAX,YIN                      A0210070
C                                                                       A0210072
C LINKAGE      CALL APT021 (RESULT,MN,PSI,IAX,YIN)                      A0210075
C                                                                       A0210077
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0210080
C                      RESULTING LINE                                   A0210090
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0210100
C                      1 = ATANGL  2 = SLOPE                            A0210105
C              PSI     REAL VARIABLE CONTAINING THE VALUE OF THE        A0210110
C                      ANGLE (IN DEGREES) OR SLOPE                      A0210115
C              IAX     INTEGER EQUIVALENT OF THE AXIS                   A0210120
C                      1 = XAXIS  2 = YAXIS                             A0210122
C              YIN     REAL VARIABLE CONTAINING THE VALUE OF THE        A0210125
C                      X OR Y - INTERCEPT                               A0210127
C                                                                       A0210130
C SUBSIDIARIES TYPE                ENTRY                                A0210140
C              SUBROUTINE          APT012                               A0210150
C              REAL FUNCTION       TAN                                  A0210155
C                                                                       A0210160
      SUBROUTINE APT021 (RESULT,MN,PSI,IAX,YIN)                         A0210170
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0210180
      DIMENSION RESULT(4)                                               A0210190
C                                                                       A0210200
C                                                                       A0210210
C                                                                       A0210220
C                                                                       A0210230
      INCLUDE 'TOTAL.INC'                                               A0210361
      INCLUDE 'ZNUMBR.INC'                                              A0210448
      INCLUDE 'ISHR16.INC'                                              A0210497
C                                                                       A0210520
C                                                                       A0210530
C                                                                       A0210540
C...     USE APT012 TO FIND LINE THRU TWO POINTS                        A0210550
C                                                                       A0210554
C                                                                       A0210560
      PS = PSI                                                          A0210561
      IF (MN.EQ.2) GO TO 10                                             A0210562
      PS = PS*DEGRAD                                                    A0210563
      PS = DTAN(PS)                                                     A0210564
   10 IF (IAX.EQ.2) GO TO 20                                            A0210565
      CALL APT012 (RESULT,YIN,Z0,YIN+Z1/PS,Z1)                          A0210566
      GO TO 30                                                          A0210567
   20 CALL APT012 (RESULT,Z0,YIN,Z1,PS+YIN)                             A0210570
   30 CONTINUE                                                          A0210571
      RETURN                                                            A0210580
       END                                                              A0210590
**** SOURCE FILE : M0000772.V03   ***
*
C                                                                       A0220001
C.....FORTRAN SUBROUTINE              APT022                3/5/68      A0220002
C                                                                       A0220010
C              FORTRAN SUBROUTINE APT022                                A0220020
C                                                                       A0220030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0220040
C              AS PASSING THROUGH A GIVEN POINT AND FORMING A           A0220050
C              SPECIFIED ANGLE OR SLOPE WITH A GIVEN LINE BY THE        A0220060
C              FOLLOWING APT STATEMENTS                                 A0220070
C              RESULT = LINE/PN, ATANGL, PSI, LIN                       A0220080
C              RESULT = LINE/PN, SLOPE, PSI, LIN                        A0220085
C                                                                       A0220090
C LINKAGE      CALL APT022 (RESULT,PN,MN,PSI,LIN)                       A0220100
C                                                                       A0220110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0220120
C                      RESULTING LINE                                   A0220130
C              PN      ARRAY CONTAINING THE CANONICAL FORM OF THE       A0220140
C                      INPUT POINT                                      A0220150
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0220151
C                      1 = ATANGL  2 = SLOPE                            A0220152
C              PSI     REAL VARIABLE CONTAINING THE VALUE OF            A0220160
C                      THE ANGLE (IN DEGREES) OR SLOPE                  A0220170
C              LIN     ARRAY CONTAINING THE CANONICAL FORM OF THE       A0220180
C                      INPUT LINE                                       A0220190
C                                                                       A0220200
C SUBSIDIARIES TYPE                ENTRY                                A0220210
C              SUBROUTINE          APT077                               A0220220
C              SUBROUTINE          APT081                               A0220230
C              SUBROUTINE          DEFEXT                               A0220240
C              SUBROUTINE          VNORM                                A0220250
C              REAL FUNCTION       SIN                                  A0220260
C              REAL FUNCTION       COS                                  A0220270
C              REAL FUNCTION       ATAN                                 A0220271
C                                                                       A0220280
      SUBROUTINE APT022 (RESULT,PN,MN,PSI,LIN)                          A0220290
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0220300
      DIMENSION RESULT(4),PN(3),LIN(4)                                  A0220310
      DOUBLE PRECISION LIN                                              A0220320
C                                                                       A0220330
C                                                                       A0220340
C                                                                       A0220350
      INCLUDE 'TOTAL.INC'                                               A0220491
      INCLUDE 'DEF.INC'                                                 A0220579
      INCLUDE 'DSHAR3.INC'                                              A0220659
      INCLUDE 'ZNUMBR.INC'                                              A0220755
      INCLUDE 'ISHR16.INC'                                              A0220811
      INCLUDE 'KNUMBR.INC'                                              A0220955
C                                                                       A0221010
      EQUIVALENCE (S1,SC(1)),(S2,SC(2)),(S3,SC(3))                      A0221020
C                                                                       A0221030
C...     TRANSFORM PN, LIN, CHECK VALIDITY                              A0221040
C                                                                       A0221050
      CALL APT081(PN,0)                                                 A0221060
      CALL APT077(LIN,K26)                                              A0221070
      IF (MN.EQ.K1) GO TO 10                                            A0221071
      S1 = DATAN(PSI)                                                   A0221072
      GO TO 20                                                          A0221073
   10 S1 = PSI*DEGRAD                                                   A0221080
   20 S2 = DSIN(S1)                                                     A0221090
      S3 = DCOS(S1)                                                     A0221100
C                                                                       A0221110
C...     CALCULATE UNIT NORMAL R(1),R(2)                                A0221120
C                                                                       A0221130
      R(1)=L(1)* S3 -L(2)*S2                                            A0221140
      R(2)=L(1)* S2 +L(2)*S3                                            A0221150
      R(3)=0.0                                                          A0221155
      CALL VNORM(R,R)                                                   A0221160
C                                                                       A0221170
      R(4)=P(1)*R(1)+P(2)*R(2)                                          A0221180
      CALL APT077(R,KM1)                                                A0221190
      CALL DEFEXT (RESULT)                                              A0221200
      RETURN                                                            A0221210
       END                                                              A0221220
**** SOURCE FILE : M0000773.V03   ***
*
C                                                                       A0230001
C.....FORTRAN SUBROUTINE             APT023...              3/1/68   GK A0230002
C                                                                       A0230010
C              FORTRAN SUBROUTINE APT023                                A0230020
C                                                                       A0230030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE DEFINED         A0230040
C              AS THE INTERSECTION OF TWO PLANES BY THE FOLLOWING       A0230050
C              APT STATEMENT                                            A0230060
C              RESULT = LINE/INTOF, PL1, PL2                            A0230070
C                                                                       A0230080
C LINKAGE      CALL APT023 (RESULT, PL1, PL2)                           A0230090
C                                                                       A0230100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0230110
C                      THE RESULTING LINE                               A0230120
C              PL1     ARRAY CONTAINING THE CANONICAL FORM OF           A0230130
C                      THE FIRST INPUT PLANE                            A0230140
C              PL2     ARRAY CONTAINING THE CANONICAL FORM OF           A0230150
C                      THE SECOND INPUT PLANE                           A0230160
C                                                                       A0230170
C SUBSIDIARIES TYPE                ENTRY                                A0230180
C              SUBROUTINE          APT077                               A0230190
C              SUBROUTINE          DEFEXT                               A0230200
C              REAL FUNCTION       SQRT                                 A0230210
C                                                                       A0230220
      SUBROUTINE APT023 (RESULT,PL1,PL2)                                A0230230
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0230240
      DIMENSION RESULT(4),PL1(4),PL2(4)                                 A0230250
C                                                                       A0230260
C                                                                       A0230270
C                                                                       A0230280
C                                                                       A0230290
      INCLUDE 'TOTAL.INC'                                               A0230431
      INCLUDE 'DEF.INC'                                                 A0230519
      INCLUDE 'DSHAR3.INC'                                              A0230599
      INCLUDE 'ZNUMBR.INC'                                              A0230695
      INCLUDE 'IDEF.INC'                                                A0230767
      INCLUDE 'ISHR16.INC'                                              A0230823
      INCLUDE 'KNUMBR.INC'                                              A0230967
C                                                                       A0231050
      EQUIVALENCE (S1,SC(1)),(S2,SC(2)),(S3,SC(3)),(S4,SC(4))           A0231060
C                                                                       A0231070
C...     TRANSFORM PL1,PL2,CHECK VALIDITY                               A0231080
C                                                                       A0231090
      CALL APT077(PL1,0)                                                A0231100
      DO 10 I= 1,4                                                      A0231110
   10 SC(I+4) =L(I)                                                     A0231120
      CALL APT077(PL2,0)                                                A0231130
C                                                                       A0231140
C...     SOLVE FOR VERTICAL PLANE AT INTERSECTION OF PL1,PL2            A0231150
C                                                                       A0231160
      S1 =  SC(5)*L(3)-L(1)*SC(7)                                       A0231170
      S2 =  SC(6)*L(3)-L(2)*SC(7)                                       A0231180
      S3 =  SC(8)*L(3)-L(4)*SC(7)                                       A0231190
      S4 = DSQRT(S1*S1+S2*S2)                                           A0231200
C                                                                       A0231210
C...     TEST FOR PARALLEL PLANES - LINE UNDEFINED                      A0231220
C                                                                       A0231230
      IF (S4  .LT.Z1EM5) GO TO 30                                       A0231240
      R(1)= S1/S4                                                       A0231250
      R(2)= S2/S4                                                       A0231260
      R(4)= S3/S4                                                       A0231270
      CALL APT077 (R,KM1)                                               A0231280
   20 CALL DEFEXT (RESULT)                                              A0231290
      RETURN                                                            A0231300
   30 IERROR =K27                                                       A0231310
      GO TO 20                                                          A0231320
       END                                                              A0231330
**** SOURCE FILE : M0000775.V04   ***
*
C                                                                       A0250001
C.....FORTRAN SUBROUTINE             APT025...              3/1/68   GK A0250002
C                                                                       A0250010
C              FORTRAN SUBROUTINE APT025                                A0250020
C                                                                       A0250030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE DEFINED       A0250040
C              WITH THE CENTER AT A GIVEN POINT AND TANGENT TO A        A0250050
C              GIVEN LINE BY THE FOLLOWING APT STATEMENT                A0250060
C              RESULT = CIRCLE/CENTER, PNT, TANTO, LN                   A0250070
C                                                                       A0250080
C LINKAGE      CALL APT025 (RESULT, PNT, LN)                            A0250090
C                                                                       A0250100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0250110
C                                                                       A0250120
C                      THE RESULTING CIRCLE                             A0250130
C              PNT     ARRAY CONTAINING THE CANONICAL FORM OF           A0250140
C                      THE INPUT POINT                                  A0250150
C              LN      ARRAY CONTAINING THE CANONICAL FORM OF           A0250160
C                      THE INPUT LINE                                   A0250170
C                                                                       A0250180
C SUBSIDIARIES TYPE                ENTRY                                A0250190
C              SUBROUTINE          APT077                               A0250200
C              SUBROUTINE          APT081                               A0250210
C              SUBROUTINE          APT083                               A0250220
C              REAL FUNCTION       ABS                                  A0250230
C              SUBROUTINE          DEFEXT                               A0250240
C                                                                       A0250250
      SUBROUTINE APT025 (RESULT,PNT,LN)                                 A0250260
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0250270
      DIMENSION RESULT(7),PNT(3),LN(4)                                  A0250280
      DOUBLE PRECISION LN                                               A0250290
C                                                                       A0250300
C                                                                       A0250310
C                                                                       A0250320
      INCLUDE 'TOTAL.INC'                                               A0250461
      INCLUDE 'DEF.INC'                                                 A0250549
      INCLUDE 'DSHAR3.INC'                                              A0250629
      INCLUDE 'ISHR16.INC'                                              A0250685
      INCLUDE 'KNUMBR.INC'                                              A0250829
C                                                                       A0250880
C                                                                       A0250890
C                                                                       A0250900
C...     TRANSFORM PNT,LN, CHECK FOR VALIDITY                           A0250910
C                                                                       A0250920
      CALL APT077 (LN,28)                                               A0250930
      CALL APT081 (PNT,0)                                               A0250940
C                                                                       A0250950
C...     DEFINE VERTICAL CYLINDER WITH CENTER PNT,RADIUS DIST TO LN     A0250960
C                                                                       A0250970
      R(1)=P(1)                                                         A0250980
      R(2)=P(2)                                                         A0250990
      R(7)=DABS(L(4)-L(1)*R(1)-L(2)*R(2))                               A0251000
      CALL APT083(R,KM1)                                                A0251010
   20 CALL DEFEXT (RESULT)                                              A0251020
      RETURN                                                            A0251030
       END                                                              A0251040
**** SOURCE FILE : M0000776.V02   ***
*
C.....FORTRAN SUBROUTINE             APT026...              3/1/68   GK A0260000
C                                                                       A0260010
C              FORTRAN SUBROUTINE APT026                                A0260020
C                                                                       A0260030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE DEFINED       A0260040
C              AS HAVING ITS CENTER AT A GIVEN POINT AND PASSING        A0260050
C              THROUGH A GIVEN POINT BY THE FOLLOWING APT STATEMENT     A0260060
C              RESULT = CIRCLE/CENTER, PNT1, PNT2                       A0260070
C                                                                       A0260080
C LINKAGE      CALL APT026 (RESULT, PNT1, PNT2)                         A0260090
C                                                                       A0260100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0260110
C                      THE RESULTING CIRCLE                             A0260120
C              PNT1    ARRAY CONTAINING THE CANONICAL FORM OF           A0260130
C                      THE FIRST INPUT POINT (CENTER)                   A0260140
C              PNT2    ARRAY CONTAINING THE CANONICAL FORM OF           A0260150
C                      THE SECOND INPUT POINT (ON CIRCUMFERENCE)        A0260160
C                                                                       A0260170
C SUBSIDIARIES TYPE                ENTRY                                A0260180
C              SUBROUTINE          APT081                               A0260190
C              SUBROUTINE          APT083                               A0260200
C              SUBROUTINE          DEFEXT                               A0260210
C              REAL FUNCTION       SQRT                                 A0260220
C                                                                       A0260230
      SUBROUTINE APT026(RESULT,PNT1,PNT2)                               A0260240
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0260250
      DIMENSION RESULT(7),PNT1(3),PNT2(3)                               A0260260
C                                                                       A0260270
C                                                                       A0260280
C                                                                       A0260290
      INCLUDE 'TOTAL.INC'                                               A0260431
      INCLUDE 'DEF.INC'                                                 A0260519
      INCLUDE 'DSHAR3.INC'                                              A0260599
      INCLUDE 'ISHR16.INC'                                              A0260655
      INCLUDE 'KNUMBR.INC'                                              A0260799
C                                                                       A0260850
C                                                                       A0260860
C                                                                       A0260870
C...     TRANSFORM COORDINATES, CHECK VALIDITY                          A0260880
C                                                                       A0260890
      CALL APT081(PNT1,0)                                               A0260900
      R(1) = P(1)                                                       A0260910
      R(2) = P(2)                                                       A0260920
      CALL APT081(PNT2,0)                                               A0260930
C                                                                       A0260940
C...     RADIUS,R(7),OF CIRCLE IS DISTANCE BETWEEN PNT1 AND PNT2        A0260950
C                                                                       A0260960
      R(7) = DSQRT((R(1)-P(1))**2+(R(2)-P(2))**2)                       A0260970
      CALL APT083 (R,KM1)                                               A0260980
      CALL DEFEXT (RESULT)                                              A0260990
      RETURN                                                            A0261000
       END                                                              A0261010
**** SOURCE FILE : M0002795.V03   ***
*
C                                                                       A0270001
C.....FORTRAN SUBROUTINE             APT027...              3/1/68   GK A0270002
C                                                                       A0270010
C              FORTRAN SUBROUTINE APT027                                A0270020
C                                                                       A0270030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE DEFINED       A0270040
C              AS PASSING THROUGH THREE GIVEN POINTS BY THE             A0270050
C              FOLLOWING APT STATEMENT                                  A0270060
C              RESULT = CIRCLE/PN1, PN2, PN3                            A0270070
C                                                                       A0270080
C LINKAGE      CALL APT027 (RESULT, PN1, PN2, PN3)                      A0270090
C                                                                       A0270100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0270110
C                      THE RESULTING CIRCLE                             A0270120
C              PN1     ARRAY CONTAINING THE CANONICAL FORM OF           A0270130
C                      THE FIRST INPUT POINT                            A0270140
C              PN2     ARRAY CONTAINING THE CANONICAL FORM OF           A0270150
C                      THE SECOND INPUT POINT                           A0270160
C              PN3     ARRAY CONTAINING THE CANONICAL FORM OF           A0270170
C                      THE THIRD INPUT POINT                            A0270180
C                                                                       A0270190
C SUBSIDIARIES TYPE                ENTRY                                A0270200
C              SUBROUTINE          APT075                               A0270210
C              SUBROUTINE          APT081                               A0270220
C              SUBROUTINE          APT083                               A0270230
C              SUBROUTINE          DEFEXT                               A0270240
C              SUBROUTINE          ERROR                                A0270250
C              REAL FUNCTION       SQRT                                 A0270260
C                                                                       A0270270
      SUBROUTINE APT027(RESULT,PN1,PN2,PN3)                             A0270280
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0270290
      DIMENSION RESULT(7),PN1(3),PN2(3),PN3(3)                          A0270300
C                                                                       A0270310
C                                                                       A0270320
C                                                                       A0270330
      INCLUDE 'TOTAL.INC'                                               A0270461
      INCLUDE 'DEF.INC'                                                 A0270549
      INCLUDE 'DSHAR3.INC'                                              A0270629
      INCLUDE 'ZNUMBR.INC'                                              A0270725
      INCLUDE 'IDEF.INC'                                                A0270797
      INCLUDE 'ISHR16.INC'                                              A0270853
      INCLUDE 'KNUMBR.INC'                                              A0270997
C                                                                       A0271080
C                                                                       A0271090
      DATA ZLIT1/4.D0/                                                  A0271100
C                                                                       A0271110
C...     TRANSFORM COORDINATES, FORM P ARRAY, CHECK VALIDITY            A0271120
C...     WARNING IF POINTS NOT IN HORIZONTAL PLANE                      A0271130
      CALL APT081 (PN3,0 )                                              A0271140
      DO 10 I=1,3                                                       A0271150
   10 P(I+8) =P(I)                                                      A0271160
      CALL APT081 (PN2,0)                                               A0271170
      DO 20 I=1,3                                                       A0271180
   20 P(I+4) =P(I)                                                      A0271190
      CALL APT081 (PN1,0)                                               A0271200
      IF (P(3).NE.P(7).OR. P(3).NE.P(11)) CALL ERROR(K30,'APT027  ')    A0271210
C                                                                       A0271220
C                                                                       A0271230
C...     SOLVE 3 SIMULTANEOUS EQUATIONS FOR COEFFICIENTS OF CIRCLE EQ.  A0271240
   30 DO 40 I=1,9,4                                                     A0271250
      P(I+3)=P(I)**2+P(I+1)**2                                          A0271260
   40 P(I+2)=Z1                                                         A0271270
      CALL APT075 (R,P)                                                 A0271290
      IF (IERROR.NE. 0) IERROR=K29                                      A0271300
   50 R(7)=DSQRT(R(1)**2+R(2)**2+ZLIT1*R(3))/Z2                         A0271320
      DO 60 I=1,2                                                       A0271330
      R(I)=R(I)/Z2                                                      A0271340
   60 R(I+2)=Z0                                                         A0271350
      R(5) = Z0                                                         A0271360
      R(6) = Z1                                                         A0271370
      CALL APT083(R,KM1)                                                A0271380
      CALL DEFEXT (RESULT)                                              A0271390
      RETURN                                                            A0271400
       END                                                              A0271410
**** SOURCE FILE : M0000778.V03   ***
*
C                                                                       A0280001
C.....FORTRAN SUBROUTINE             APT028...              3/1/68   GK A0280002
C                                                                       A0280010
C              FORTRAN SUBROUTINE APT028                                A0280020
C                                                                       A0280030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE DEFINED       A0280040
C              AS HAVING ITS CENTER AT A GIVEN POINT AND TANGENT        A0280050
C              TO A GIVEN CIRCLE BY THE FOLLOWING APT STATEMENT         A0280060
C              RESULT = CIRCLE/CENTER, PN, ****, TANTO, CIR             A0280070
C                **** = LARGE OR SMALL                                  A0280080
C                                                                       A0280090
C LINKAGE      CALL APT028 (RESULT, PN, M, CIR)                         A0280100
C                                                                       A0280110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0280120
C                      THE RESULTING CIRCLE                             A0280130
C              PN      ARRAY CONTAINING THE CANONICAL FORM OF           A0280140
C                      THE INPUT POINT                                  A0280150
C              M       INTEGER EQUIVALENT OF THE MODIFIER               A0280160
C                             1 = LARGE         2 = SMALL               A0280170
C              CIR     ARRAY CONTAINING THE CANONICAL FORM OF           A0280180
C                      THE INPUT CIRCLE                                 A0280190
C                                                                       A0280200
C SUBSIDIARIES TYPE                ENTRY                                A0280210
C              SUBROUTINE          APT081                               A0280220
C              SUBROUTINE          APT083                               A0280230
C              REAL FUNCTION       ABS                                  A0280240
C              SUBROUTINE          DEFEXT                               A0280250
C              REAL FUNCTION       SQRT                                 A0280260
C                                                                       A0280270
      SUBROUTINE APT028 (RESULT,PN,MN,CIR)                              A0280280
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0280290
      DIMENSION RESULT(7),PN(3),CIR(7)                                  A0280300
C                                                                       A0280310
C                                                                       A0280320
C                                                                       A0280330
      INCLUDE 'TOTAL.INC'                                               A0280471
      INCLUDE 'DEF.INC'                                                 A0280559
      INCLUDE 'DSHAR3.INC'                                              A0280639
      INCLUDE 'ZNUMBR.INC'                                              A0280735
      INCLUDE 'ISHR16.INC'                                              A0280791
      INCLUDE 'KNUMBR.INC'                                              A0280935
C                                                                       A0280990
      EQUIVALENCE (S1,SC(1)),(S2,SC(2))                                 A0281000
C                                                                       A0281010
C                                                                       A0281020
C...     TRANSFORM PN,CIR, CHECK VALIDITY                               A0281030
C                                                                       A0281040
      CALL APT081(PN,0)                                                 A0281050
      CALL APT083(CIR,K31)                                              A0281060
C                                                                       A0281070
C...     DESIRED CIRCLE. RADIUS IS THAT OF GIVEN CIRCLE+-DIST.BETWEEN   A0281080
C        CENTERS                                                        A0281090
      R(1)=P(1)                                                         A0281100
      R(2)=P(2)                                                         A0281110
      S1=DSQRT((R(1)-C(1))**2+(R(2)-C(2))**2)                           A0281120
      S2=MN                                                             A0281130
      R(7)=DABS(C(7)+(Z3-Z2*S2)*S1)                                     A0281140
      CALL APT083 (R,KM1)                                               A0281150
      CALL DEFEXT (RESULT)                                              A0281160
      RETURN                                                            A0281170
       END                                                              A0281180
**** SOURCE FILE : M0000779.V03   ***
*
C                                                                       A0290001
C.....FORTRAN SUBROUTINE             APT029...              3/1/68   GK A0290002
C                                                                       A0290010
C              FORTRAN SUBROUTINE APT029                                A0290020
C                                                                       A0290030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE DEFINED       A0290040
C              AS TANGENT TO A GIVEN LINE, PASSING THROUGH A            A0290050
C              GIVEN POINT AND HAVING A GIVEN RADIUS BY THE             A0290060
C              FOLLOWING APT STATEMENT                                  A0290070
C              RESULT = CIRCLE/TANTO, LN, ****, PN, RADIUS, R           A0290080
C                **** = XLARGE, YLARGE, XSMALL, YSMALL                  A0290090
C                                                                       A0290100
C LINKAGE      CALL APT029 (RESULT, LN, MN, PN, RAD)                    A0290110
C                                                                       A0290120
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0290130
C                      THE RESULTING CIRCLE                             A0290140
C              LN      ARRAY CONTAINING THE CANONICAL FORM OF           A0290150
C                      THE INPUT LINE                                   A0290160
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0290170
C                             1 = XLARGE       2 = YLARGE               A0290180
C                             4 = XSMALL       5 = YSMALL               A0290190
C              PN      ARRAY CONTAINING THE CANONICAL FORM OF           A0290200
C                      THE INPUT POINT                                  A0290210
C              RAD     REAL VARIABLE CONTAINING THE VALUE OF            A0290220
C                      THE DESIRED RADIUS                               A0290230
C                                                                       A0290240
C SUBSIDIARIES TYPE                ENTRY                                A0290250
C              SUBROUTINE          APT004                               A0290260
C              SUBROUTINE          APT020                               A0290270
C              SUBROUTINE          APT078                               A0290280
C              REAL FUNCTION       ABS                                  A0290290
C              LOGICAL FUNCTION    CKDEF                                A0290300
C              REAL FUNCTION       SIGN                                 A0290310
C                                                                       A0290320
      SUBROUTINE APT029 (RESULT,LN,MN, PN,RAD)                          A0290330
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0290340
      DIMENSION RESULT(7),LN(4),PN(3)                                   A0290350
      DOUBLE PRECISION LN                                               A0290360
      LOGICAL CKDEF                                                     A0290370
C                                                                       A0290380
C                                                                       A0290390
C                                                                       A0290400
      INCLUDE 'TOTAL.INC'                                               A0290541
      INCLUDE 'DEF.INC'                                                 A0290640
      INCLUDE 'DSHAR3.INC'                                              A0290730
      INCLUDE 'ZNUMBR.INC'                                              A0290838
      INCLUDE 'LDEF.INC'                                                A0290883
      INCLUDE 'ISHR16.INC'                                              A0290946
      INCLUDE 'KNUMBR.INC'                                              A0291108
C                                                                       A0291140
      EQUIVALENCE(S1,SC(1))                                             A0291150
C                                                                       A0291160
C                                                                       A0291170
C...     TEST VALIDITY OF PN                                            A0291180
C                                                                       A0291190
      UNFLAG=CKDEF(PN)                                                  A0291200
C                                                                       A0291210
C...     DEFINE CIRCLE C1 WITH CENTER PN, LINE LN1 PARLEL TO LN         A0291220
      CALL APT078(R(4),KM1)                                             A0291230
      C1(8)=RAD                                                         A0291240
      LN1(5)=LN(4)                                                      A0291250
      S1=-LN1(5)                                                        A0291260
      DO 10 I=1,3                                                       A0291270
      C1(I+1)=PN(I)                                                     A0291280
      C1(I+4)=R(I)                                                      A0291290
      LN1(I+1)=LN(I)                                                    A0291300
   10 S1=S1+LN1(I+1)*C1(I+1)                                            A0291310
C                                                                       A0291320
C...     TEST FOR PN ON LINE LN                                         A0291330
C                                                                       A0291340
      IF (DABS(S1).LE.Z1EM5) GO TO 40                                   A0291350
      LN1(5)=LN1(5)+DSIGN(C1(8),S1)                                     A0291360
C                                                                       A0291370
C...     CENTER OF DESIRED CIRCLE IS INTERSECTION OF LN1 AND C1         A0291380
C                                                                       A0291390
   20 DO 50 I=4,7                                                       A0291395
   50 R(I)=C1(I+1)                                                      A0291400
      CALL APT004(RESULT,MN,LN1(2),C1(2))                               A0291405
      DO 30 I=4,7                                                       A0291410
   30 RESULT(I)=C1(I+1)                                                 A0291420
      RETURN                                                            A0291430
   40 CALL APT020(LN1(2),LN1(2),MN, RAD)                                A0291440
      GO TO 20                                                          A0291450
       END                                                              A0291460
**** SOURCE FILE : M0000780.V03   ***
*
C                                                                       A0300001
C.....FORTRAN SUBROUTINE             APT030...              3/1/68   GK A0300002
C                                                                       A0300010
C              FORTRAN SUBROUTINE APT030                                A0300020
C                                                                       A0300030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE DEFINED       A0300040
C              AS TANGENT TO EACH OF TWO GIVEN LINES AND HAVING         A0300050
C              A GIVEN RADIUS BY THE FOLLOWING APT STATEMENT            A0300060
C              RESULT = CIRCLE/****, LI, ****, L2, RADIUS, RAD          A0300070
C                **** = XLARGE, YLARGE, XSMALL, YSMALL                  A0300080
C                                                                       A0300090
C LINKAGE      CALL APT030 (RESULT, M1, L1, M2, L2, RAD)                A0300100
C                                                                       A0300110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0300120
C                      THE RESULTING CIRCLE                             A0300130
C              M1      INTEGER EQUIVALENT OF THE FIRST MODIFIER         A0300140
C                             1 = XLARGE       2 = YLARGE               A0300150
C                             4 = XSMALL       5 = YSMALL               A0300160
C              L1      ARRAY CONTAINING THE CANONICAL FORM OF           A0300170
C                      THE FIRST INPUT LINE                             A0300180
C              M2      INTEGER EQUIVALENT OF THE SECOND MODIFIER        A0300190
C                             1 = XLARGE       2 = YLARGE               A0300200
C                             4 = XSMALL       5 = YSMALL               A0300210
C              L2      ARRAY CONTAINING THE CANONICAL FORM OF           A0300220
C                      THE SECOND INPUT LINE                            A0300230
C              RAD     REAL VARIABLE CONTAINING THE VALUE OF THE        A0300240
C                      DESIRED RADIUS                                   A0300250
C                                                                       A0300260
C SUBSIDIARIES TYPE                ENTRY                                A0300270
C              SUBROUTINE          APT003                               A0300280
C              SUBROUTINE          APT020                               A0300290
C              SUBROUTINE          APT078                               A0300300
C                                                                       A0300310
      SUBROUTINE APT030 (RESULT,M1,L1,M2,L2,RAD)                        A0300320
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A0300330
      DIMENSION RESULT(7),L1(4),L2(4)                                   A0300340
      DOUBLE PRECISION L1,L2                                            A0300350
C                                                                       A0300360
C                                                                       A0300370
C                                                                       A0300380
      INCLUDE 'TOTAL.INC'                                               A0300521
      INCLUDE 'DEF.INC'                                                 A0300609
      INCLUDE 'DSHAR3.INC'                                              A0300689
      INCLUDE 'ZNUMBR.INC'                                              A0300785
      INCLUDE 'ISHR16.INC'                                              A0300841
      INCLUDE 'KNUMBR.INC'                                              A0300985
C                                                                       A0301040
C                                                                       A0301050
C                                                                       A0301060
C                                                                       A0301070
C...     DEFINE C1 WITH AXIS OF DESIRED CYLINDER                        A0301080
C                                                                       A0301090
      CALL APT078 (R(4),KM1)                                            A0301100
      DO 10 I=1,3                                                       A0301110
      C1(I+1)=R(I)                                                      A0301120
   10 R(I)=Z0                                                           A0301130
      C1(5)=RAD                                                         A0301140
C...     DEFINE LINES PARALLEL TO L1,L2 AT DISTANCE RAD                 A0301150
C                                                                       A0301160
      CALL APT020 (LN1(2),L1,M1,C1(5))                                  A0301170
      DO 30 I=2,5                                                       A0301180
   30 SC(I+11)=LN1(I)                                                   A0301190
      CALL APT020 (LN1(2),L2,M2,C1(5))                                  A0301200
C                                                                       A0301210
C...     SOLVE FOR INTERSECTION OF LN1 AND SC(13) -GIVES CIRCLE CENTER  A0301220
C                                                                       A0301230
      DO 50 I=4,7                                                       A0301232
   50 R(I)=C1(I-2)                                                      A0301235
      CALL APT003 (RESULT,SC(13),LN1(2))                                A0301240
      DO 20 I=4,7                                                       A0301250
   20 RESULT(I)=C1(I-2)                                                 A0301260
      RETURN                                                            A0301270
       END                                                              A0301280
**** SOURCE FILE : M0000781.V03   ***
*
C                                                                       A0310001
C.....FORTRAN SUBROUTINE             APT031...              3/1/68   GK A0310002
C                                                                       A0310010
C              FORTRAN SUBROUTINE APT031                                A0310020
C                                                                       A0310030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE DEFINED       A0310040
C              AS TANGENT TO EACH OF TWO GIVEN CIRCLES AND HAVING       A0310050
C              A GIVEN RADIUS BY THE APT STATEMENT                      A0310060
C              RESULT = CIRCLE/*****, ***, CIR1, ***, CIR2, RADIUS,     A0310070
C                       RAD                                             A0310080
C               ***** = XLARGE, YLARGE, XSMALL, OR YSMALL               A0310090
C                 *** = IN OR OUT                                       A0310100
C                                                                       A0310110
C LINKAGE      CALL APT031 (RESULT, M1, M2, CIR1, M3, CIR2, RAD)        A0310120
C                                                                       A0310130
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0310140
C                      THE RESULTING CIRCLE                             A0310150
C              M1      INTEGER EQUIVALENT OF THE FIRST MODIFIER         A0310160
C                             1 = XLARGE       2 = YLARGE               A0310170
C                             4 = XSMALL       5 = YSMALL               A0310180
C              M2      INTEGER EQUIVALENT OF THE SECOND MODIFIER        A0310190
C                             1 = IN           2 = OUT                  A0310200
C              CIR1    ARRAY CONTAINING THE CANONICAL FORM OF           A0310210
C                      THE FIRST INPUT CIRCLE                           A0310220
C              M3      INTEGER EQUIVALENT OF THE THIRD MODIFIER         A0310230
C                             1 = IN           2 = OUT                  A0310240
C              CIR2    ARRAY CONTAINING THE CANONICAL FORM OF           A0310250
C                      THE SECOND INPUT CIRCLE                          A0310260
C              RAD     REAL VARIABLE CONTAINING THE VALUE OF THE        A0310270
C                      DESIRED RADIUS                                   A0310280
C                                                                       A0310290
C SUBSIDIARIES TYPE                ENTRY                                A0310300
C              SUBROUTINE          APT005                               A0310310
C              SUBROUTINE          APT078                               A0310320
C              REAL FUNCTION       ABS                                  A0310330
C                                                                       A0310340
      SUBROUTINE APT031 (RESULT,M1,M2,CIR1,M3,CIR2,RAD)                 A0310350
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0310360
      DIMENSION RESULT(7),CIR1(7),CIR2(7)                               A0310370
C                                                                       A0310380
C                                                                       A0310390
C                                                                       A0310400
      INCLUDE 'TOTAL.INC'                                               A0310541
      INCLUDE 'DEF.INC'                                                 A0310629
      INCLUDE 'DSHAR3.INC'                                              A0310709
      INCLUDE 'ZNUMBR.INC'                                              A0310805
      INCLUDE 'ISHR16.INC'                                              A0310861
      INCLUDE 'KNUMBR.INC'                                              A0311005
C                                                                       A0311060
      DIMENSION CARG(7)                                                 A0311070
C                                                                       A0311080
C...     ESTABLISH CIRCLE C31 WITH RADIUS RAD                           A0311090
C                                                                       A0311100
      CALL APT078(R(4),KM1)                                             A0311110
      DO 10 I=1,3                                                       A0311120
   10 SC(I +10) =R(I)                                                   A0311130
      SC(14)=RAD                                                        A0311140
      DO 20 I=1,7                                                       A0311150
      SC(I) = CIR1(I)                                                   A0311160
   20 P(I) = CIR2(I)                                                    A0311170
      DUMMY1 = M2                                                       A0311180
      DUMMY2 = M3                                                       A0311190
      SC(7) = DABS(SC(7)+(Z2*DUMMY1-Z3)*SC(14))                         A0311200
      P(7)= DABS(P(7)+(Z2*DUMMY2-Z3)*SC(14))                            A0311210
C                                                                       A0311220
C...     CENTER OF DESIRED CIRCLE - INTERSECTION OF CI31 AND CR31       A0311230
C                                                                       A0311240
      DO 50 I=4,7                                                       A0311242
   50 R(I)=SC(I+7)                                                      A0311245
      DO 40 I=1,7                                                       A0311248
   40 CARG(I)=SC(I)                                                     A0311250
      CALL APT005(RESULT,M1,CARG,P)                                     A0311255
      DO 30 I=4,7                                                       A0311260
   30 RESULT(I)= SC(I+7)                                                A0311270
      RETURN                                                            A0311280
       END                                                              A0311290
**** SOURCE FILE : M0000782.V03   ***
*
C                                                                       A0320001
C.....FORTRAN SUBROUTINE             APT032...              3/1/68   GK A0320002
C                                                                       A0320010
C              FORTRAN SUBROUTINE APT032                                A0320020
C                                                                       A0320030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE DEFINED       A0320040
C              AS TANGENT TO A GIVEN LINE AND A GIVEN CIRCLE AND        A0320050
C              HAVING A GIVEN RADIUS BY THE FOLLOWING APT STATEMENT     A0320060
C              RESULT = CIRCLE/ *****, LN, *****, ***, CIR, RADIUS,     A0320070
C                       RAD                                             A0320080
C               ***** = XLARGE, YLARGE, XSMALL, YSMALL                  A0320090
C                 *** = IN OR OUT                                       A0320100
C                                                                       A0320110
C LINKAGE      CALL APT032 (RESULT, M1, LN, M2, M3, CIR, RAD)           A0320120
C                                                                       A0320130
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0320140
C                      RESULTING CIRCLE                                 A0320150
C              M1      INTEGER EQUIVALENT OF THE FIRST MODIFIER         A0320160
C                             1 = XLARGE       2 = YLARGE               A0320170
C                             4 = XSMALL       5 = YSMALL               A0320180
C              LN      ARRAY CONTAINING THE CANONICAL FORM OF           A0320190
C                      THE INPUT LINE                                   A0320200
C              M2      INTEGER EQUIVALENT OF THE SECOND MODIFIER        A0320210
C                             1 = XLARGE       2 = YLARGE               A0320220
C                             4 = XSMALL       5 = YSMALL               A0320230
C              M3      INTEGER EQUIVALENT OF THIRD MODIFIER             A0320240
C                             1 = IN           2 = OUT                  A0320250
C              CIR     ARRAY CONTAINING THE CANONICAL FORM OF           A0320260
C                      THE INPUT CIRCLE                                 A0320270
C              RAD     REAL VARIABLE CONTAINING THE VALUE OF THE        A0320280
C                      DESIRED RADIUS                                   A0320290
C                                                                       A0320300
C SUBSIDIARIES TYPE                ENTRY                                A0320310
C              SUBROUTINE          APT004                               A0320320
C              SUBROUTINE          APT020                               A0320330
C              SUBROUTINE          APT078                               A0320340
C              REAL FUNCTION       ABS                                  A0320350
C                                                                       A0320360
      SUBROUTINE APT032 (RESULT,M1,LN,M2,M3,CIR,RAD)                    A0320370
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0320380
      DIMENSION RESULT(7),LN(4),CIR(7)                                  A0320390
      DOUBLE PRECISION LN                                               A0320400
C                                                                       A0320410
C                                                                       A0320420
C                                                                       A0320430
      INCLUDE 'TOTAL.INC'                                               A0320571
      INCLUDE 'DEF.INC'                                                 A0320659
      INCLUDE 'DSHAR3.INC'                                              A0320739
      INCLUDE 'ZNUMBR.INC'                                              A0320835
      INCLUDE 'ISHR16.INC'                                              A0320891
      INCLUDE 'KNUMBR.INC'                                              A0321035
C                                                                       A0321090
C                                                                       A0321100
C                                                                       A0321110
C...     FORM VERTICAL CYLINDER WITH RADIUS RAD, TRANSFORM TO BASE SYS. A0321120
C                                                                       A0321130
      CALL APT078(R(4),KM1)                                             A0321140
      DO 10 I=1,3                                                       A0321150
   10 SC(I+10) = R(I)                                                   A0321160
      SC(14)=RAD                                                        A0321170
C                                                                       A0321180
C...     DEFINE LN1 PARALLEL TO LN, RAD AWAY                            A0321190
C                                                                       A0321200
      CALL APT020(LN1(2),LN,M1,SC(14))                                  A0321210
C                                                                       A0321220
C...     MODIFY RADIUS OF CIR BY RAD, SOLVE FOR INTERS.OF LN1 AND CIR   A0321230
C                                                                       A0321240
      DO 15 I=1,7                                                       A0321241
   15 C1(I+1)=CIR(I)                                                    A0321242
      DUMMY1 = M3                                                       A0321250
      C1(8)=DABS(C1(8)+(Z2*DUMMY1-Z3)*SC(14))                           A0321260
      DO 50 I=4,7                                                       A0321262
   50 R(I)=SC(I+7)                                                      A0321265
      CALL APT004(RESULT,M2,LN1(2),C1(2))                               A0321270
      DO 20 I=4,7                                                       A0321280
   20 RESULT(I)= SC(I+7)                                                A0321290
      RETURN                                                            A0321300
       END                                                              A0321310
**** SOURCE FILE : M0002799.V04   ***
*
C.....FORTRAN SUBROUTINE  ....APT033         8/68                 PH    A0330001
C.....FORTRAN SUBROUTINE             APT033...              3/1/68   GK A0330002
C                                                                       A0330010
C              FORTRAN SUBROUTINE APT033                                A0330020
C                                                                       A0330030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A RULED SURFACE        A0330040
C              DEFINED BY EITHER OF THE APT STATEMENTS                  A0330050
C              RLDSRF/S1,P1,P2,P3 OR V1,S2,P4,P5,P6, OR V2              A0330060
C              RLDSRF/S1,P1,P2,P3 OR V1,P7                              A0330070
C                IN THESE STATEMENTS S REFERS TO A SURFACE,P TO A POINT A0330080
C              AND V TO A VECTOR                                        A0330090
C                                                                       A0330100
C LINKAGE      CALL APT033(ARG1,ARG2,.....,ARG8,IARG9,IARG10)           A0330110
C                                                                       A0330120
C ARGUMENTS    THE FIRST EIGHT ARGUMENT CONTAIN RULED SURFACE PARAMETERSA0330130
C              THE NINTH ARG CONTAINS A 5 OR 8 TO DISTINGUISH AMOUNG    A0330140
C              THE STATEMENT TYPES. THE LAST ARG HAS THE ADD. OF THE    A0330150
C              RULED SURFACE CANONICAL FORM                             A0330160
C                                                                       A0330170
C CALLS        UNPACK,APT094,ERROR,CROSS,VNORM,DOTF                     A0330180
C                                                                       A0330190
C                                                                       A0330200
      SUBROUTINE APT033(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,IARG9,  A0330210
     1                  IARG10)                                         A0330220
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A0330221
      DOUBLE PRECISION IARG10                                           A0330222
      DOUBLE PRECISION LCANON                                           A0330223
      DIMENSION ARG1(*),ARG2(3),ARG3(3),ARG4(3),ARG5(*),ARG6(3),ARG7(3),A0330230
     1          ARG8(3),IARG10(2)                                       A0330240
C                                                                       A0330254
      INCLUDE 'BLANKCOM.INC'                                            A0330255
C                                                                       A0330256
      DIMENSION LCANON(COMSIZ),TEMP(10),PT1(3),PT2(3),DELCHD(3),        A0330260
     1          DELVEC(3)                                               A0330270
      EQUIVALENCE (CANON(1),LCANON(1))                                  A0330280
C                                                                       A0330290
C     INITIALIZE                                                        A0330300
      LENS1 = 0                                                         A0330310
      LENS2 = 0                                                         A0330320
      NPTS = 0                                                          A0330330
      DO 10 I=42,82                                                     A0330340
   10 LCANON(I) = 0                                                     A0330350
      LCANON(43) = IARG9                                                A0330360
      LCANON(44) = 43                                                   A0330370
      IF (IARG9.EQ.5) GO TO 20                                          A0330380
      NPTS = 6                                                          A0330390
      GO TO 30                                                          A0330400
   20 NPTS = 4                                                          A0330410
   30 CALL UNPACK (ARG1,MODE,ISIZE,SUBS)                                A0330420
      LCANON(83) = MODE                                                 A0330430
C                                                                       A0330440
C     IS SI A TABCYL                                                    A0330450
C                                                                       A0330460
      IF((MODE.EQ.11).OR.(MODE.EQ.22)) GO TO 50                         A0330470
      LENS1 = ISIZE                                                     A0330480
      DO 40 I = 1,LENS1                                                 A0330490
   40 CANON(I+83) = ARG1(I)                                             A0330500
      GO TO 60                                                          A0330510
   50 LENS1 = ARG1(2)                                                   A0330520
      CALL APT094(2,ARG1,CANON(84))                                     A0330530
C                                                                       A0330540
C     FULL INDEX TO FLAG SURFACE BEING FILLED IN CANON                  A0330550
C                                                                       A0330560
 60   K = LENS1 + 44                                                    A0330570
      LCANON(45) = K                                                    A0330580
      LCANON(46) = K+4                                                  A0330590
      LCANON(47) = K+8                                                  A0330600
      LCANON(48) = K+12                                                 A0330610
      K = K +40                                                         A0330620
      LCANON(K) = 1                                                     A0330630
      LCANON(K+4) = 1                                                   A0330640
      TEMP(1) = 0.                                                      A0330650
C                                                                       A0330660
C     PROCESS P1 AND P2                                                 A0330670
C                                                                       A0330680
      DO 70 I = 1,3                                                     A0330690
      L = K + I                                                         A0330700
      CANON(L) = ARG2(I)                                                A0330710
      PT1(I) = ARG2(I)                                                  A0330720
      CANON(L+4) = ARG3(I)                                              A0330730
      PT2(I) = ARG3(I)                                                  A0330740
      DELCHD(I) = PT2(I) - PT1(I)                                       A0330750
   70 TEMP(1) = TEMP(1) + DELCHD(I)*DELCHD(I)                           A0330760
C                                                                       A0330770
C     IF P2-P1 LESS THAN .01 TAKE ERROR OUTLET                          A0330780
C                                                                       A0330790
      IF (TEMP(1).GT..0001) GO TO 80                                    A0330800
      CALL ERROR (87,'APT033  ')                                        A0330810
      CALL APT094 (4,IARG10,CANON(41))                                  A0330820
      GO TO 999                                                         A0330830
C                                                                       A0330840
   80 CALL UNPACK (ARG4,MODE,ISIZE,SUBS)                                A0330850
      LCANON(LENS1+92) = MODE                                           A0330860
C                                                                       A0330870
C     IF P3 RATHER THAN V1 CONVERT TO VECTOR                            A0330880
C                                                                       A0330890
      IF (MODE.EQ.20) GO TO 100                                         A0330900
      DO 90 I = 1,3                                                     A0330910
   90 DELVEC(I) = ARG4(I) - PT1(I)                                      A0330920
      CALL CROSS (DELVEC,DELCHD,DELVEC)                                 A0330930
      CALL CROSS (DELCHD,DELVEC,DELVEC)                                 A0330940
      GO TO 120                                                         A0330950
  100 DO 110 I = 1,3                                                    A0330960
  110 DELVEC(I) = ARG4(I)                                               A0330970
 120  CALL VNORM (DELCHD,DELCHD)                                        A0330980
      CALL VNORM (DELVEC,DELVEC)                                        A0330990
C                                                                       A0331000
C     VECTOR AND CHORD CANNOT BE PARALLEL                               A0331010
C                                                                       A0331020
      CALL CROSS (DELVEC,DELCHD,TEMP)                                   A0331030
      TEMP(1)=TEMP(1)**2+TEMP(2)**2+TEMP(3)**2                          A0331040
      IF (TEMP(1).GT..01) GO TO 130                                     A0331050
      CALL ERROR (88,'APT033  ')                                        A0331060
      CALL APT094 (4,IARG10,CANON(41))                                  A0331070
      RETURN                                                            A0331080
 130  K = LENS1 + 92                                                    A0331090
      DO 140 I = 1,3                                                    A0331100
      L = K + I                                                         A0331110
      CANON(L) = DELVEC(I)                                              A0331120
      IF (IARG9.NE.5) GO TO 140                                         A0331130
      CANON(L+4) = ARG5(I)                                              A0331140
  140 CONTINUE                                                          A0331150
      IF (IARG9.NE.5) GO TO145                                          A0331160
      LCANON(K) = 1                                                     A0331170
      LCANON(K+4)=1.                                                    A0331175
      GOTO 250                                                          A0331180
C                                                                       A0331190
C     PROCESS S2                                                        A0331200
C                                                                       A0331210
  145 CALL UNPACK (ARG5,MODE,ISIZE,SUBS)                                A0331220
      K = LENS1 + 96                                                    A0331230
      IF ((MODE.EQ.11).OR.(MODE.EQ.22)) GO TO 160                       A0331240
      LENS2 = ISIZE                                                     A0331250
      DO 150 I = 1,LENS2                                                A0331260
      L = K + I                                                         A0331270
  150 CANON(L) = ARG5(I)                                                A0331280
      GO TO 165                                                         A0331290
  160 LENS2 = ARG5(2)                                                   A0331300
      CALL APT094(2,ARG5,CANON(K+1))                                    A0331310
 165  L=K+LENS2+1                                                       A0331320
      I = L - 40                                                        A0331330
      LCANON(49) = I                                                    A0331340
      LCANON(50) = I + 4                                                A0331350
      LCANON(51) = I + 8                                                A0331360
      LCANON(K) = MODE                                                  A0331370
      LCANON(L) = 1                                                     A0331380
      LCANON(L+4) = 1                                                   A0331390
      TEMP(1) = 0.                                                      A0331400
      K = L                                                             A0331410
      DO 170 I = 1,3                                                    A0331420
      L = K + I                                                         A0331430
      CANON(L) = ARG6(I)                                                A0331440
      PT1(I) = ARG6(I)                                                  A0331450
      CANON(L+4) = ARG7(I)                                              A0331460
      PT2(I) = ARG7(I)                                                  A0331470
      DELCHD(I) = PT2(I) - PT1(I)                                       A0331480
  170 TEMP(1) = TEMP(1) + DELCHD(I)*DELCHD(I)                           A0331490
      IF (TEMP(1).GT..0001) GO TO 180                                   A0331500
      CALL ERROR (87,'APT033  ')                                        A0331510
      CALL APT094 (4,IARG10,CANON(41))                                  A0331520
      GO TO 999                                                         A0331530
  180 CALL UNPACK (ARG8,MODE,ISIZE,SUBS)                                A0331540
      N = LENS1+LENS2+105                                               A0331550
      LCANON(N) = MODE                                                  A0331560
      IF (MODE.EQ.20) GO TO 200                                         A0331570
      DO 190 I = 1,3                                                    A0331580
  190 DELVEC(I) = ARG8(I) - PT1(I)                                      A0331590
      CALL CROSS (DELVEC,DELCHD,DELVEC)                                 A0331600
      CALL CROSS (DELCHD,DELVEC,DELVEC)                                 A0331610
      GO TO 220                                                         A0331620
  200 DO 210 I = 1,3                                                    A0331630
  210 DELVEC(I) = ARG8(I)                                               A0331640
  220 CALL VNORM (DELCHD,DELCHD)                                        A0331650
      CALL VNORM (DELVEC,DELVEC)                                        A0331660
      CALL CROSS (DELVEC,DELCHD,TEMP)                                   A0331670
      TEMP(1)=TEMP(1)**2+TEMP(2)**2+TEMP(3)**2                          A0331680
      IF (TEMP(1).GT..01) GO TO 230                                     A0331690
      CALL ERROR (88,'APT033  ')                                        A0331700
      CALL APT094 (4,IARG10,CANON(41))                                  A0331710
      GO TO 999                                                         A0331720
 230  K = 105 +LENS1+LENS2                                              A0331730
      DO 240 I = 1,3                                                    A0331740
      L = K + I                                                         A0331750
  240 CANON(L) = DELVEC(I)                                              A0331760
      IF (IARG9.EQ.5) GO TO 250                                         A0331770
      N = 2                                                             A0331780
      GO TO 260                                                         A0331790
  250 N = 1                                                             A0331800
 260  LSIZE = LENS1+LENS2+N+4*NPTS+42                                   A0331810
      LCANON(42) = LSIZE                                                A0331820
      IARG10(2) = LSIZE                                                 A0331830
      CALL APT094 (1,IARG10,CANON(41))                                  A0331840
  999 CONTINUE                                                          A0331841
      RETURN                                                            A0331850
      END                                                               A0331860
**** SOURCE FILE : M0000784.V06   ***
*
C                                                                       A0340001
C                                                                       A0340002
C              FORTRAN SUBROUTINE APT034                                A0340010
C                                                                       A0340020
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE,OF A          A0340030
C              GIVEN RADIUS, TANGENT TO A LINE AND A TABULATED          A0340040
C              CYLINDER IN THE XYPLANE.                                 A0340050
C                                                                       A0340060
C              A CIRCLE IS DEFINED BY THE FOLLOWING STATEMENT           A0340070
C                RESULT = CIRCLE/ TANTO,LIN,****,TAB,****, $            A0340080
C                                 PT,RADIUS,RADI                        A0340090
C                **** = XLARGE, YLARGE, XSMALL, YSMALL                  A0340100
C                                                                       A0340110
C LINKAGE      CALL APT034 (RESULT, LIN, M1, TAB, M2, PT, RADI)         A0340120
C                                                                       A0340130
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0340140
C                      THE RESULTING CIRCLE                             A0340150
C              LIN     ARRAY CONTAINING THE CANONICAL FORM OF           A0340160
C                      THE INPUT LINE                                   A0340170
C              M1      INTEGER EQUIVALENT OF THE FIRST MODIFIER         A0340180
C                             1 = XLARGE       2 = YLARGE               A0340190
C                             4 = XSMALL       5 = YSMALL               A0340200
C              TAB     ARRAY CONTAINING THE CANONICAL FORM OF           A0340210
C                      THE INPUT TABCYL                                 A0340220
C              M2      INTEGER EQUIVALENT OF THE SECOND MODIFIER        A0340230
C                             1 = XLARGE       2 = YLARGE               A0340240
C                             4 = XSMALL       5 = YSMALL               A0340250
C              PT      ARRAY CONTAINING THE CANONICAL FORM OF           A0340260
C                      THE INPUT POINT                                  A0340270
C                                                                       A0340280
C                                                                       A0340460
      SUBROUTINE APT034 (RESULT,LIN,M1,TAB,M2,PT,RADI)                  A0340470
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0340480
      DOUBLE PRECISION  LIN,TAB,RADI,PT,RESULT                          A0340490
      DIMENSION RESULT(7),LIN(4),TAB(2),PT(3)                           A0340500
C                                                                       A0340514
      INCLUDE 'BLANKCOM.INC'                                            A0340515
C                                                                       A0340516
      DIMENSION D(COMSIZ),VMOD(4,2),XN(11),YN(11),XINTRS(11),           A0340520
     1 YINTRS(11),VECNRL(11)                                            A0340530
      DIMENSION DD(5)                                                   A0340540
      EQUIVALENCE (CANON(1),D(1))                                       A0340550
      LOGICAL CKDEF,LINDEF                                              A0340560
C                                                                       A0340570
      INCLUDE 'TOTAL.INC'                                               A0340671
      INCLUDE 'DEF.INC'                                                 A0340792
      INCLUDE 'DSHAR3.INC'                                              A0340891
      INCLUDE 'ZNUMBR.INC'                                              A0341008
      INCLUDE 'LDEF.INC'                                                A0341044
      INCLUDE 'IDEF.INC'                                                A0341051
      INCLUDE 'ISHR16.INC'                                              A0341116
      INCLUDE 'KNUMBR.INC'                                              A0341269
C                                                                       A0341277
      EQUIVALENCE(UNIT,UINT)                                            A0341278
C                                                                       A0341300
      SMAL(Q)=DSIGN(DMAX1(DABS(Q),Z1EM9),Q)                             A0341310
      DO 777 I=1,2                                                      A0341330
      P(I)=PT(I)                                                        A0341340
      L(I)=LIN(I)                                                       A0341350
  777 V(I)=TAB(I)                                                       A0341360
      L(3)=LIN(3)                                                       A0341370
      L(4)=LIN(4)                                                       A0341380
      UNFLAG=LINDEF(L,K5).OR.CKDEF(P).OR.CKDEF(V)                       A0341390
      IF(UNFLAG) GO TO 9998                                             A0341400
C                                                                       A0341410
C...  RETRIEVE TABCYL EXTERNAL CANONICAL FORM. STORE CANON INDEX IN J11.A0341420
C                                                                       A0341430
      CALL APT094(3,TAB(1),J11)                                         A0341440
      J11=J11-2                                                         A0341450
C                                                                       A0341460
C                                                                       A0341470
C                                                                       A0341480
C                                                                       A0341490
C                                                                       A0341500
C                                                                       A0341510
C                                                                       A0341520
C                                                                       A0341530
C                                                                       A0341540
C                                                                       A0341550
C.....INITIALIZE                                                        A0341560
C                                                                       A0341570
      IERROR=0                                                          A0341580
      TOLER=0.000025                                                    A0341590
C                                                                       A0341600
C...   INUM=1 IF RADIUS PARALLEL LINE INTERSECTS TABCYL,                A0341610
C           2 IF DIA. + TOL. PARALLEL LINE INTERSECTS,                  A0341620
C           3 IF LINE + TOL. INTERSECTS                                 A0341630
C                                                                       A0341640
      INUM=0                                                            A0341650
C                                                                       A0341660
C...   IBACFG=0 IF DIRECTION OF SEARCH IS FWD,1 IF BACKWARD             A0341670
C                                                                       A0341680
      IBACFG=0                                                          A0341690
C                                                                       A0341700
C...   ICOUNT IS COUNTER ON TABCYL INTERVALS SEARCHED                   A0341710
C                                                                       A0341720
      ICOUNT=1                                                          A0341730
      KCHECK=0                                                          A0341740
      IONTST=0                                                          A0341750
      ITBPNT=0                                                          A0341760
      VMOD(1,1)=1.0                                                     A0341770
      VMOD(2,1)=-1.0                                                    A0341780
      VMOD(3,1)=0.0                                                     A0341790
      VMOD(4,1)=0.0                                                     A0341800
      VMOD(1,2)=0.0                                                     A0341810
      VMOD(2,2)=0.0                                                     A0341820
      VMOD(3,2)=1.0                                                     A0341830
      VMOD(4,2)=-1.0                                                    A0341840
C                                                                       A0341850
C.....CHECK FOR NEGATIVE P IN LINE CANONICAL FORM.  LX+MY+NZ=P          A0341860
C                                                                       A0341870
      IF(L(4).GE.Z0) GO TO 921                                          A0341880
      L(4)=-L(4)                                                        A0341890
      L(2)=-L(2)                                                        A0341900
      L(3)=-L(3)                                                        A0341910
      L(1)=-L(1)                                                        A0341920
  921 ILOUT=0                                                           A0341930
      LOUT=0                                                            A0341940
      NT=(D(J11+12)-Z1)*7.0+18.1                                        A0341950
      NTZ=NT-2                                                          A0341960
      RAD=RADI                                                          A0341970
      RADSQR=RAD*RAD                                                    A0341980
      EPSILN=Z2*Z1EM5*RAD                                               A0341990
      DELTA=Z1EM5/RAD                                                   A0342000
      DIAMT=Z2*RAD+TOLER                                                A0342010
      ITRY=0                                                            A0342020
      CALL SCHTB(D(J11+1))                                              A0342030
      IHU=D(J11+13)+0.1+J11                                             A0342040
      IHUT=IHU                                                          A0342050
      ITL=NT-4+J11                                                      A0342060
      ITFR=J11+14                                                       A0342070
      D6SAVE=L(4)                                                       A0342080
C                                                                       A0342090
C.....EXAMINE MOD 1 AND SET A LINE PARALLEL TO THE GIVEN LINE, ON       A0342100
C.....WHICH THE CENTER OF THE TANGENT CIRCLE WILL LIE.                  A0342110
C                                                                       A0342120
      IF(M1.EQ.1) IMOD=1                                                A0342130
      IF(M1.EQ.2) IMOD=3                                                A0342140
      IF(M1.EQ.4) IMOD=2                                                A0342150
      IF(M1.EQ.5) IMOD=4                                                A0342160
      XTEST=L(1)*VMOD(IMOD,1)+L(2)*VMOD(IMOD,2)                         A0342170
      IF(DABS(XTEST).GT.Z1EM7) GO TO 12                                 A0342180
C                                                                       A0342190
C.....IF MODIFIER 1 IS IN ERROR                                         A0342200
C                                                                       A0342210
   10 IERROR=77                                                         A0342220
      GO TO 9999                                                        A0342230
   12 IF(XTEST) 13,10,14                                                A0342240
   13 L(4)=DABS(L(4))-DABS(RAD)                                         A0342250
      SAVD6=L(4)                                                        A0342260
      GO TO 102                                                         A0342270
   14 L(4)=DABS(L(4))+DABS(RAD)                                         A0342280
      SAVD6=L(4)                                                        A0342290
  102 D3SAVE=L(1)                                                       A0342300
      INUM=1                                                            A0342310
   15 CONTINUE                                                          A0342320
C                                                                       A0342330
C.....IHUINT = INDEX LOCATING INTERVAL IN WHICH INTERSECTION            A0342340
C.....ACTUALLY OCCURS                                                   A0342350
C                                                                       A0342360
      IHUINT=0                                                          A0342370
C                                                                       A0342380
C.....UNIT = X COORD. IN LOCAL SYSTEM OF INTERSECTION POINT             A0342390
C.....OF PARALLEL LINE AND TABCYL                                       A0342400
C                                                                       A0342410
      UNIT=Z0                                                           A0342420
   41 IHU=IHUT                                                          A0342430
      L(1)=D3SAVE                                                       A0342440
      XAA=D(IHU+7)-D(IHU)                                               A0342450
      YAA=D(IHU+8)-D(IHU+1)                                             A0342460
      IZ=K1                                                             A0342470
      RA=-DATAN(YAA/SMAL(XAA))                                          A0342480
      IF(XAA) 1000,1001,1001                                            A0342490
 1000 RA=RA+PI                                                          A0342500
 1001 CALL TRANRO(XAA,YAA,XBB,YBB,RA,IZ)                                A0342510
C                                                                       A0342520
C.....TABCYL MODIFIER ACCEPTANCE CRITERION                              A0342530
C                                                                       A0342540
      IF(M2.NE.1) GO TO 17                                              A0342550
      DPVALU=Z1                                                         A0342560
      GO TO 504                                                         A0342570
   17 IF(M2.NE.4) GO TO 19                                              A0342580
      DPVALU=-Z1                                                        A0342590
  504 XAXIS=Z1                                                          A0342600
      YAXIS=Z0                                                          A0342610
      GO TO 22                                                          A0342620
   19 IF(M2.NE.2) GO TO 21                                              A0342630
      DPVALU=Z1                                                         A0342640
      GO TO 505                                                         A0342650
   21 IF(M2.NE.5) GO TO 10                                              A0342660
      DPVALU=-Z1                                                        A0342670
  505 XAXIS=Z0                                                          A0342680
      YAXIS=Z1                                                          A0342690
   22 CONTINUE                                                          A0342700
   31 CALL CHKRET(IHU,RAD,INTRCT,D,L)                                   A0342710
      IF(INTRCT) 42,42,400                                              A0342720
  400 DIS=-(L(1)*D(IHU)+L(2)*D(IHU+1)-SAVD6)                            A0342730
      CALL TRANRO(L(1),L(2),XF,YF,RA,IZ)                                A0342740
      X1PLIN=XF*DIS                                                     A0342750
      Y1PLIN=YF*DIS                                                     A0342760
C                                                                       A0342770
C.....CHECK FOR VERTICAL PARALLEL LINE IN LOCAL SYSTEM                  A0342780
C                                                                       A0342790
      IF(DABS(YF).GT.Z1EM7) GO TO 501                                   A0342800
  500 SLPLIN =9.0D+7                                                    A0342810
      GO TO 502                                                         A0342820
  501 SLPLIN =-XF/YF                                                    A0342830
  502 BPLIN=Y1PLIN-SLPLIN*X1PLIN                                        A0342840
      KOUNT=1                                                           A0342850
      KCHECK=0                                                          A0342860
C                                                                       A0342870
C.....DIVISION OF TABCYL INTERVAL INTO 10 EQUAL PARTS.                  A0342880
C                                                                       A0342890
   64 IF(IBACFG.EQ.0) GO TO 105                                         A0342900
      XSTART=XBB                                                        A0342910
      XLENTH=-XBB                                                       A0342920
      GO TO 107                                                         A0342930
  105 XSTART=Z0                                                         A0342940
      XLENTH=XBB                                                        A0342950
  107 KOUNT=2                                                           A0342960
      GO TO 67                                                          A0342970
  866 ISAVE=I-1                                                         A0342980
C                                                                       A0342990
C.....SUBDIVISION OF LIKELY DIVISION.                                   A0343000
C                                                                       A0343010
   65 IF(KOUNT-2) 64,103,103                                            A0343020
  103 IF(KOUNT-12) 66,66,42                                             A0343030
   66 XLENTH=DABS(XN(ISAVE+1)-XN(ISAVE))                                A0343040
  633 XSTART=XN(ISAVE)                                                  A0343050
      IF(IBACFG.EQ.0) GO TO 111                                         A0343060
  109 XLENTH=-XLENTH                                                    A0343070
  111 KOUNT=KOUNT+1                                                     A0343080
   67 DELTX=XLENTH/Z10                                                  A0343090
C                                                                       A0343100
C.....IF LENGTH OF NORMAL VECTOR FROM TABCYL TO PLINE IS LESS THAN      A0343110
C.....RADSQR MORE=0,WHEN ONE IS FOUND GREATER THAN RADSQR MORE=2        A0343120
C                                                                       A0343130
  671 MORE=0                                                            A0343140
C                                                                       A0343150
C.... INDEX OF FIRST VECTOR IN PROPER DIRECTION                         A0343160
C                                                                       A0343170
      IFIRST=-1                                                         A0343180
C.... INDEX OF LAST VECTOR IN PROPER DIRECTION                          A0343190
      ILAST=-4                                                          A0343200
C                                                                       A0343210
C.... LESS=5 UNTIL NORMAL VECTOR IS FOUND LESS THAN,THEN LESS=1         A0343220
C                                                                       A0343230
      LESS=5                                                            A0343240
      ILESS=0                                                           A0343250
      IMORE=0                                                           A0343260
      DO 84 I=1,11                                                      A0343270
      XI=I-1                                                            A0343280
      XN(I)=XSTART+XI*DELTX                                             A0343290
      YN(I)=D(IHU+2)*XN(I)**3+D(IHU+3)*XN(I)**2-(D(IHU+2)*D(IHU+4)+     A0343300
     C D(IHU+3))*(D(IHU+4)*XN(I))                                       A0343310
      SLOPE= Z3*D(IHU+2)*XN(I)**2+Z2*D(IHU+3)*XN(I)-(D(IHU+2)*D(IHU+4)+ A0343320
     C D(IHU+3))*D(IHU+4)                                               A0343330
      IF(DABS(SLOPE).GE.Z1EM7) GO TO 69                                 A0343340
      SLPNOR=-DSIGN(9.0D+7,SLOPE)                                       A0343350
      IF(DABS(SLPLIN).GE.9.0D7) GO TO 79                                A0343360
      XINTRS(I)=XN(I)                                                   A0343370
      YINTRS(I)=SLPLIN*(XINTRS(I))+BPLIN                                A0343380
      GO TO 25                                                          A0343390
C                                                                       A0343400
C.....SLOPE OF NORMAL AT EACH POINT IS SLPNOR                           A0343410
C                                                                       A0343420
   69 SLPNOR=-Z1/SLOPE                                                  A0343430
   70 BNLIN=YN(I)-SLPNOR*XN(I)                                          A0343440
C                                                                       A0343450
C.....INTERSECTION OF PLINE AND NORMAL TO TABCYL AT EACH TABCYL         A0343460
C.....DIVISION POINT.                                                   A0343470
      XINTRS(I)=((BNLIN-BPLIN)/(SLPLIN-SLPNOR))                         A0343480
C...                                                                    A0343490
      YINTRS(I)= SLPLIN*XINTRS(I)+BPLIN                                 A0343500
   25 VECNRX=XINTRS(I)-XN(I)                                            A0343510
      VECNRY=YINTRS(I)-YN(I)                                            A0343520
      CC=IZ                                                             A0343530
      AXISXV=XAXIS*DCOS(RA)-CC*YAXIS*DSIN(RA)                           A0343540
      AXISYV= CC*XAXIS*DSIN(RA)+YAXIS*DCOS(RA)                          A0343550
C                                                                       A0343560
C.....CHECK TO SEE IF TABCYL MODIFIER IS ACCEPTABLE FOR THIS NORMAL     A0343570
C                                                                       A0343580
      DOTP=VECNRX*AXISXV+VECNRY*AXISYV                                  A0343590
      IF((DPVALU*DOTP).LE.Z1EM5) GO TO 79                               A0343600
C                                                                       A0343610
C.....LENGTH OF NORMAL VECTOR FROM TABCYL POINT TO PLINE                A0343620
C                                                                       A0343630
   80 VECNRL(I)=VECNRX**2+VECNRY**2                                     A0343640
      IF(IFIRST) 183,183,184                                            A0343650
  183 IFIRST=I                                                          A0343660
  184 ILAST=I                                                           A0343670
C                                                                       A0343680
C.....HAVE WE FOUND LOCATION OF CIRCLE CENTER                           A0343690
C                                                                       A0343700
      IF(DABS(VECNRL(I)-RADSQR)-EPSILN)83,83,82                         A0343710
   82 IF(VECNRL(I)-RADSQR) 85,83,86                                     A0343720
   85 LESS=1                                                            A0343730
      ILESS=I                                                           A0343740
      GO TO 876                                                         A0343750
   86 MORE=2                                                            A0343760
      IMORE=I                                                           A0343770
C                                                                       A0343780
C.....DO WE HAVE ONE VECTOR GREATER AND ONE SMALLER THAN RADSQR         A0343790
C                                                                       A0343800
  876 IF(MORE.LE.LESS) GO TO 84                                         A0343810
C                                                                       A0343820
C.....YES-ARE THEY ADJACENT                                             A0343830
C                                                                       A0343840
  890 IF(IABS(ILESS-IMORE)-K1) 878,878,84                               A0343850
C                                                                       A0343860
C.....YES-HAVE SUBDIVISIONS BECOME SMALL ENOUGH TO ASSUME               A0343870
C.....PERPENDICULARITY                                                  A0343880
C                                                                       A0343890
  878 IF(DABS(XN(1)-XN(2))-Z1EM7) 5500,5500,866                         A0343900
   79 VECNRL(I)=-1.0                                                    A0343910
   84 CONTINUE                                                          A0343920
C                                                                       A0343930
C.....UTILIZE TABPNT SUBROUTINE TO FIND THE INTERSECTION OF THE PARALLELA0343940
C.....LINE AND THE TABCYL.                                              A0343950
      IF(ITBPNT.NE.0) GO TO 867                                         A0343960
C..                                                                     A0343970
C..   DD(1),DD(2) ARE UV CORDINATE OF INTERSECTION                      A0343980
C..   DD(3)       SUBSCRIPT OF D LOCATION AT WHICH THE DATA BEGINS      A0343990
C..               FOR THE TABCYL INTERVAL IN WHICH THE INTERSECTION     A0344000
C..               POINT WAS FOUND                                       A0344010
C                                                                       A0344020
C                                                                       A0344030
C                                                                       A0344040
C                                                                       A0344050
C                                                                       A0344060
      J111=J11                                                          A0344070
      SUBFLG =.TRUE.                                                    A0344080
      CALL APT011(DD,L,TAB,PT)                                          A0344090
      J11=J111                                                          A0344100
C                                                                       A0344110
      ITBPNT=1                                                          A0344120
      IF(IERROR) 621,600,621                                            A0344130
  600 IHUINT=D(J11+13)+0.1+J11                                          A0344140
      XXAA=D(IHUINT+7)-D(IHUINT)                                        A0344150
      YYAA=D(IHUINT+8)-D(IHUINT+1)                                      A0344160
      IIZZ=K1                                                           A0344170
      RRA=-DATAN(YYAA/SMAL(XXAA))                                       A0344180
      IF(XXAA.LT.Z0) RRA=RRA+PI                                         A0344190
      CALL TRANRO(DD(1),DD(2),UINT,UINT2,RRA,IIZZ)                      A0344200
      IERROR=0                                                          A0344210
      SAUINT=UINT                                                       A0344220
      SAVXBB=DSQRT((D(IHUINT+7)-D(IHUINT))**2+(D(IHUINT+8)-D(IHUINT+1)) A0344230
     C  **2)                                                            A0344240
C                                                                       A0344250
C.....IS THIS INTERVAL WITHIN ONE ON EITHER SIDE OF                     A0344260
C.....INTERVAL OF INTERSECTION                                          A0344270
C                                                                       A0344280
  867 IF(IABS(IHU-IHUINT)-7) 800,800,621                                A0344290
C                                                                       A0344300
C.... IT IS WITHIN ONE-IS IT BEFORE,IN,OR AFTER THE INTERSECTION        A0344310
C.... INTERVAL                                                          A0344320
C                                                                       A0344330
  800 IF(IHU-IHUINT) 809,801,802                                        A0344340
  809 IF(DABS(SAUINT)-Z1EM6) 803,803,621                                A0344350
  803 UINT=XBB                                                          A0344360
      GO TO 602                                                         A0344370
  801 UINT=SAUINT                                                       A0344380
      GO TO 602                                                         A0344390
  802 IF(DABS(SAUINT-SAVXBB)-Z1EM6) 806,806,621                         A0344400
  806 UNIT=Z0                                                           A0344410
  602 CSLOPE=Z3*D(IHU+2)*UINT**2+Z2*D(IHU+3)*UNIT-(D(IHU+2)*D(IHU+4)+   A0344420
     C D(IHU+3))*D(IHU+4)                                               A0344430
C                                                                       A0344440
C.....TEST FOR LINE PERPENDICULAR TO TABCYL                             A0344450
C                                                                       A0344460
      IF(DABS(SLPLIN)-0.000015) 6073,6073,6071                          A0344470
 6071 IF(DABS(CSLOPE)-0.000015) 6075,6072,6072                          A0344480
 6075 IF(DABS(SLPLIN)-99000.) 6073,6070,6070                            A0344490
 6072 COSTHA=((SLPLIN*CSLOPE)+Z1)/(DABS(SLPLIN*CSLOPE))                 A0344500
      IF(DABS(COSTHA)-DMIN1(Z1EM3,DELTA)) 6070,6070,6073                A0344510
C                                                                       A0344520
C.....LINE NOT PERPENDICULAR TO TABCYL                                  A0344530
C                                                                       A0344540
 6073 IF(KCHECK-1) 6074,603,6074                                        A0344550
 6074 IF(KOUNT-12) 180,180,42                                           A0344560
 6070 IF(DABS(L(2))-Z1EM7) 651,651,650                                  A0344570
  651 XCOMP=Z0                                                          A0344580
      YCOMP=RAD                                                         A0344590
      CLOPE=9999999.                                                    A0344600
      GO TO 652                                                         A0344610
  650 CLOPE=-L(1)/L(2)                                                  A0344620
      XCOMP=DSQRT(RADSQR/(Z1+CLOPE**2))                                 A0344630
      YCOMP=DABS(CLOPE*XCOMP)                                           A0344640
  652 IZ=-K1                                                            A0344650
      XAA=D(IHU+7)-D(IHU)                                               A0344660
      YAA=D(IHU+8)-D(IHU+1)                                             A0344670
      RA=-DATAN(YAA/SMAL(XAA))                                          A0344680
      IF(XAA) 1002,1003,1003                                            A0344690
 1002 RA=RA+PI                                                          A0344700
 1003 CALL TRANRO(DD(1),DD(2),PX,PY,RA,IZ)                              A0344710
      IF(M2-2) 608,609,610                                              A0344720
  608 RESULT(1)=D(IHU)+PX+XCOMP                                         A0344730
      RESULT(2)=D(IHU+1)+PY+DSIGN(YCOMP,CLOPE)                          A0344740
      GO TO 613                                                         A0344750
  609 RESULT(1)=D(IHU)+PX-XCOMP                                         A0344760
      RESULT(2)=D(IHU+1)+PY-DSIGN(YCOMP,CLOPE)                          A0344770
      GO TO 613                                                         A0344780
  610 IF(M2.EQ.5) GO TO 612                                             A0344790
      RESULT(1)=D(IHU)+PX+DSIGN(XCOMP,CLOPE)                            A0344800
      RESULT(2)=D(IHU+1)+PY+YCOMP                                       A0344810
      GO TO 613                                                         A0344820
  612 RESULT(1)=D(IHU)+PX-DSIGN(XCOMP,CLOPE)                            A0344830
      RESULT(2)=D(IHU+1)+PY-YCOMP                                       A0344840
      GO TO 613                                                         A0344850
C                                                                       A0344860
C....                                                                   A0344870
C.... THIS SECTION IS FOR THE CASE WHERE THE RADIUS OF CURVATURE OF THE A0344880
C.... TABCYL IS SMALL,AND THE NORMALS FROM POINTS VERY CLOSE TOGETHER   A0344890
C.... ON THE TABCYL HIT THE STRAIGHT LINE UPON WHICH THE CIRCLE CENTER  A0344900
C.... IS TO LIE AT POINTS THAT ARE A SIGNIFICANT DISTANCE APART.        A0344910
C                                                                       A0344920
 5500 IF(DABS(XN(1)-DD(1))-Z1EM7) 6070,6070,5501                        A0344930
 5501 XP = (XN(I) + SLPLIN*(YN(I)-BPLIN))/(SLPLIN**2+Z1)                A0344940
      YP = (SLPLIN*(XN(I)+SLPLIN*YN(I))+BPLIN)/(SLPLIN**2+Z1)           A0344950
      DISP = ((XN(I)-XP)**2+(YN(I)-YP)**2)                              A0344960
      DMOVE = RADSQR-DIST                                               A0344970
      XMOVE = DSQRT(DMOVE/(Z1+SLPLIN**2))                               A0344980
      YMOVE = DABS(SLPLIN*XMOVE)                                        A0344990
      IF(IMORE.GT.ILESS) GO TO 5503                                     A0345000
      XLONG=XINTRS(I-1)                                                 A0345010
      YLONG=YINTRS(I-1)                                                 A0345020
      GO TO 5505                                                        A0345030
 5503 XLONG=XINTRS(I)                                                   A0345040
      YLONG=YINTRS(I)                                                   A0345050
 5505 IF(XLONG.GT.XP) GO TO 27                                          A0345060
      XINTRS(I)=XP-XMOVE                                                A0345070
      GO TO 28                                                          A0345080
   27 XINTRS(I)=XP+XMOVE                                                A0345090
   28 IF(YLONG.GT.YP) GO TO 30                                          A0345100
      YINTRS(I)=YP-YMOVE                                                A0345110
      GO TO 83                                                          A0345120
   30 YINTRS(I)=YP+YMOVE                                                A0345130
      GO TO 83                                                          A0345140
C                                                                       A0345150
C.....CHECK FOR A HUMP OR VALLEY WHERE THE SUCCESSIVE VECTOR LENGTHS    A0345160
C.....CHANGE FROM INCREASING TO DECREASING OR VICE VERSA                A0345170
C                                                                       A0345180
  621 INCRES=0                                                          A0345190
      IDECRS=0                                                          A0345200
      IERROR=0                                                          A0345210
  199 DO 630 I=1,11                                                     A0345220
      IF(I-9) 622,622,42                                                A0345230
  622 IF(VECNRL(I)) 630,625,625                                         A0345240
  625 IF(VECNRL(I+1)) 630,6251,6251                                     A0345250
 6251 IF(VECNRL(I+2)) 630,6252,6252                                     A0345260
 6252 IF(VECNRL(I+1)-VECNRL(I)) 626,630,627                             A0345270
  626 IDECRS=1                                                          A0345280
      GO TO 6271                                                        A0345290
  627 INCRES=1                                                          A0345300
 6271 IF(VECNRL(I+2)-VECNRL(I+1)) 628,630,629                           A0345310
  628 IDECRS=1                                                          A0345320
      GO TO 6291                                                        A0345330
  629 INCRES=1                                                          A0345340
 6291 IF(INCRES-IDECRS) 630,631,630                                     A0345350
  630 CONTINUE                                                          A0345360
      GO TO 42                                                          A0345370
  631 IF(KOUNT-12) 632,632,42                                           A0345380
  632 IF(KOUNT-12) 634,196,196                                          A0345390
  634 XLENTH=DABS(XN(I+2)-XN(I))                                        A0345400
      ISAVE=I                                                           A0345410
      GO TO 633                                                         A0345420
C                                                                       A0345430
C.....SUBDIVIDED BETWEEN ADJACENT GOOD AND BAD VECTORS                  A0345440
C                                                                       A0345450
  180 IF(IFIRST) 603,603,186                                            A0345460
  186 IF(VECNRL(IFIRST)-VECNRL(ILAST)) 181,193,185                      A0345470
  182 IF(IFIRST-1) 196,196,187                                          A0345480
  187 IF(IFIRST-11) 188,196,196                                         A0345490
  188 I=IFIRST-1                                                        A0345500
      GO TO 632                                                         A0345510
  185 IF(LESS-1) 189,182,189                                            A0345520
  189 IF(ILAST-11) 190,196,196                                          A0345530
  190 I=ILAST-1                                                         A0345540
      GO TO 632                                                         A0345550
  181 IF(LESS-1) 182,189,182                                            A0345560
  193 IF(IFIRST-1) 191,191,194                                          A0345570
  194 IF(ILAST-11) 188,192,192                                          A0345580
  191 I=2                                                               A0345590
  195 IF(KOUNT-12) 866,196,196                                          A0345600
  196 IF(KCHECK-1) 197,42,42                                            A0345610
  197 KCHECK=1                                                          A0345620
      KOUNT=1                                                           A0345630
      GO TO 64                                                          A0345640
  192 I=11                                                              A0345650
      GO TO 195                                                         A0345660
  618 IF(KOUNT-12) 619,619,42                                           A0345670
C                                                                       A0345680
C.....SUBDIVIDE AROUND THE INTERSECTION OF PARALLEL LINE AND TABCYL     A0345690
C                                                                       A0345700
  619 IF(I-2) 720,720,721                                               A0345710
  720 ISAVE=I-1                                                         A0345720
  724 XLENTH=DABS(XN(ISAVE+2)-XN(ISAVE))                                A0345730
      GO TO 633                                                         A0345740
  721 ISAVE=I-2                                                         A0345750
      IF(I-11) 722,724,724                                              A0345760
  722 XLENTH=DABS(XN(ISAVE+3)-XN(ISAVE))                                A0345770
      GO TO 633                                                         A0345780
  603 DO 605 I=2,11                                                     A0345790
      IF(IBACFG) 604,604,606                                            A0345800
  604 IF(UNIT-Z1EM6-XN(I)) 618,618,605                                  A0345810
  606 IF(UNIT+Z1EM6-XN(I)) 605,618,618                                  A0345820
  605 CONTINUE                                                          A0345830
C                                                                       A0345840
C.....SET-UP RE-TRY IN ANOTHER INTERVAL UNTIL 3 INTERVALS ON EACH SIDE  A0345850
C.....OF THE ESTIMATED INTERVAL HAVE BEEN TRIED----A TOTAL OF 7         A0345860
C.....INTERVALS.(EXTENSION INTERVALS ARE INCLUDED)                      A0345870
C                                                                       A0345880
   42 IF(ICOUNT-7) 422,43,43                                            A0345890
  422 IZ=-K1                                                            A0345900
      XAA=D(IHU+7)-D(IHU)                                               A0345910
      YAA=D(IHU+8)-D(IHU+1)                                             A0345920
      RA=-DATAN(YAA/SMAL(XAA))                                          A0345930
      IF(XAA) 1004,330,330                                              A0345940
 1004 RA=RA+PI                                                          A0345950
  330 IF(MOD(ICOUNT,2)) 301,300,301                                     A0345960
  300 IHU=IHU+7*ICOUNT                                                  A0345970
      IBACFG=0                                                          A0345980
      ICOUNT=ICOUNT+1                                                   A0345990
      IF(IHU-ITL) 72,340,340                                            A0346000
  301 IHU=IHU-7*ICOUNT                                                  A0346010
      IBACFG=1                                                          A0346020
      ICOUNT=ICOUNT+1                                                   A0346030
      IF(IHU-ITFR) 350,350,72                                           A0346040
  340 LOUT=1                                                            A0346050
      GO TO 330                                                         A0346060
  350 ILOUT=1                                                           A0346070
      IF(LOUT-ILOUT) 330,43,330                                         A0346080
   43 IERROR=77                                                         A0346090
      GO TO 9999                                                        A0346100
   72 IZ=1                                                              A0346110
      XAA=D(IHU+7)-D(IHU)                                               A0346120
      YAA=D(IHU+8)-D(IHU+1)                                             A0346130
      RA=-DATAN(YAA/SMAL(XAA))                                          A0346140
      IF(XAA) 1005,1006,1006                                            A0346150
 1005 RA=RA+PI                                                          A0346160
 1006 CALL TRANRO(XAA,YAA,XBB,YBB,RA,IZ)                                A0346170
      GO TO 31                                                          A0346180
   83 X11=XINTRS(I)                                                     A0346190
      Y11=YINTRS(I)                                                     A0346200
C                                                                       A0346210
C.....CENTER FOUND, PUT IT BACK INTO ORIGINAL COORDINATE SYSTEM AND PUT A0346220
C.....CANONICAL FORM OF CIRCLE IN DEFANS BLOCK.                         A0346230
C                                                                       A0346240
   50 IZ=-1                                                             A0346250
      XAA=D(IHU+7)-D(IHU)                                               A0346260
      YAA=D(IHU+8)-D(IHU+1)                                             A0346270
      RA=-DATAN(YAA/SMAL(XAA))                                          A0346280
      IF(XAA) 1007,1008,1008                                            A0346290
 1007 RA=RA+PI                                                          A0346300
 1008 CALL TRANRO(X11,Y11,XA,YA,RA,IZ)                                  A0346310
      R(1)=D(IHU)+XA                                                    A0346320
      R(2)=D(IHU+1)+YA                                                  A0346330
  613 R(7)=RAD                                                          A0346340
      CALL APT083(R,KM1)                                                A0346350
 9999 CALL DEFEXT(RESULT)                                               A0346360
   51 CONTINUE                                                          A0346370
      RETURN                                                            A0346380
 9998 IERROR=79                                                         A0346390
      GO TO 9999                                                        A0346400
       END                                                              A0346410
**** SOURCE FILE : M0000785.V02   ***
*
C     FORTRAN SUBROUTINE               APT035    4/69      SR           A0350000
C                                                                       A0350010
C              FORTRAN SUBROUTINE APT035                                A0350020
C                                                                       A0350030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A VECTOR DEFINED       A0350040
C              FROM ONE VECTOR (OR POINT) TO ANOTHER OR AS THE          A0350050
C              DIFFERENCE OF TWO VECTORS BY THE FOLLOWING APT           A0350060
C              STATEMENTS                                               A0350070
C              RESULT = VECTOR/PN1, PN2                                 A0350080
C              RESULT = VECTOR/PN2, MINUS, PN1                          A0350090
C                                                                       A0350100
C LINKAGE      CALL APT035 (RESULT, PN1, PN2)                           A0350110
C                                                                       A0350120
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0350130
C                      THE RESULTING VECTOR                             A0350140
C              PN1     ARRAY CONTAINING THE CANONICAL FORM OF           A0350150
C                      THE FIRST INPUT POINT OR VECTOR                  A0350160
C              PN2     ARRAY CONTAINING THE CANONICAL FORM OF           A0350170
C                      THE SECOND INPUT POINT OR VECTOR                 A0350180
C                                                                       A0350190
C SUBSIDIARIES TYPE                ENTRY                                A0350200
C              LOGICAL FUNCTION    CKDEF                                A0350210
C              SUBROUTINE          DEFEXT                               A0350220
C                                                                       A0350230
      SUBROUTINE APT035 (RESULT,PN1,PN2)                                A0350240
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0350250
      DIMENSION RESULT(3),PN1(3),PN2(3)                                 A0350260
      LOGICAL CKDEF                                                     A0350270
C                                                                       A0350280
C                                                                       A0350290
C                                                                       A0350300
      INCLUDE 'TOTAL.INC'                                               A0350441
      INCLUDE 'DEF.INC'                                                 A0350551
      INCLUDE 'DSHAR3.INC'                                              A0350651
      INCLUDE 'LDEF.INC'                                                A0350701
      INCLUDE 'ISHR16.INC'                                              A0350771
C                                                                       A0350790
C                                                                       A0350800
C                                                                       A0350810
C...     CHECK VALIDITY OF PN1,PN2                                      A0350820
C                                                                       A0350830
      UNFLAG=CKDEF(PN1).OR.CKDEF(PN2)                                   A0350840
      DO 10 I=1,3                                                       A0350850
   10 R(I)=PN2(I)-PN1(I)                                                A0350860
      CALL DEFEXT(RESULT)                                               A0350870
      RETURN                                                            A0350880
       END                                                              A0350890
**** SOURCE FILE : M0000786.V03   ***
*
C                                                                       A0360001
C.....FORTRAN SUBROUTINE              APT036                12/67       A0360002
C                                                                       A0360010
C              FORTRAN SUBROUTINE APT036                                A0360020
C                                                                       A0360030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A VECTOR DEFINED       A0360040
C              AS PERPENDICULAR TO A GIVEN PLANE BY THE FOLLOWING       A0360050
C              APT STATEMENT                                            A0360060
C              RESULT = VECTOR/PERPTO, PLN, ****                        A0360070
C                **** = POSX, POSY, POSZ, NEGX, NEGY, OR NEGZ           A0360080
C                                                                       A0360090
C LINKAGE      CALL APT036 (RESULT, PLN, MN)                            A0360100
C                                                                       A0360110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0360120
C                      THE RESULTING VECTOR                             A0360130
C              PLN     ARRAY CONTAINING THE CANONICAL FORM OF           A0360140
C                      THE INPUT PLANE                                  A0360150
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0360160
C                      1 = POSX  2 = POSY  3 = POSZ                     A0360170
C                      4 = NEGX  5 = NEGY  6 = NEGZ                     A0360180
C                                                                       A0360190
C SUBSIDIARIES TYPE                ENTRY                                A0360200
C              SUBROUTINE          APT077                               A0360210
C              SUBROUTINE          APT078                               A0360220
C              SUBROUTINE          DEFEXT                               A0360230
C              REMAINDERING FUNCTION MOD                                A0360240
C              REAL FUNCTION       SIGN                                 A0360250
C              REAL FUNCTION       FLOAT                                A0360260
C                                                                       A0360270
      SUBROUTINE APT036 (RESULT,PLN,MN)                                 A0360280
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0360290
      DIMENSION RESULT(3),PLN(4)                                        A0360300
      EQUIVALENCE (S1,SC(1))                                            A0360310
C                                                                       A0360320
C                                                                       A0360330
C                                                                       A0360340
      INCLUDE 'TOTAL.INC'                                               A0360481
      INCLUDE 'DEF.INC'                                                 A0360569
      INCLUDE 'DSHAR3.INC'                                              A0360649
      INCLUDE 'ZNUMBR.INC'                                              A0360745
      INCLUDE 'ISHR16.INC'                                              A0360801
      INCLUDE 'KNUMBR.INC'                                              A0360945
C                                                                       A0361000
C                                                                       A0361010
      DATA ZLIT1/3.5D0/                                                 A0361020
C                                                                       A0361030
C...     TRANFORM CANONICAL FORM, CHECK VALIDITY                        A0361040
C                                                                       A0361050
      CALL APT077(PLN,0)                                                A0361060
      I = K1+ MOD(MN -K1,K3)                                            A0361070
      DUMMY1 = MN                                                       A0361080
      S1 = DSIGN(Z1,L(I)*(ZLIT1-DUMMY1))                                A0361090
C                                                                       A0361100
C...     IF NORMAL TO PLN HAS WRONG ORIENTATION,REVERSE DIRECTION       A0361110
C                                                                       A0361120
      DO 10 J=1,3                                                       A0361130
   10 L(J)=S1*L(J)                                                      A0361140
      CALL APT078(L,KM1)                                                A0361150
      CALL DEFEXT(RESULT)                                               A0361160
      RETURN                                                            A0361170
       END                                                              A0361180
**** SOURCE FILE : M0000787.V02   ***
*
C.....FORTRAN SUBROUTINE             APT037...              3/1/68   GK A0370000
C                                                                       A0370010
C              FORTRAN SUBROUTINE APT037                                A0370020
C                                                                       A0370030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A VECTOR DEFINED       A0370040
C              AS A GIVEN SCALAR TIMES A GIVEN VECTOR OR POINT          A0370050
C              BY THE FOLLOWING APT STATEMENT                           A0370060
C              RESULT  VECTOR/SCA, TIMES, VEC                           A0370070
C                                                                       A0370080
C LINKAGE      CALL APT037 (RESULT, SCA, VEC)                           A0370090
C                                                                       A0370100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0370110
C                      THE RESULTING VECTOR                             A0370120
C              SCA     REAL VARIABLE CONTAINING THE VALUE OF            A0370130
C                      THE SCALAR                                       A0370140
C              VEC     ARRAY CONTAINING THE CANONICAL FORM OF           A0370150
C                      THE INPUT VECTOR OR POINT                        A0370160
C                                                                       A0370170
C SUBSIDIARIES TYPE                ENTRY                                A0370180
C              LOGICAL FUNCTION    CKDEF                                A0370190
C              SUBROUTINE          DEFEXT                               A0370200
C                                                                       A0370210
      SUBROUTINE APT037 (RESULT,SCA,VEC)                                A0370220
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0370230
      DIMENSION RESULT(3),VEC(3)                                        A0370240
      LOGICAL CKDEF                                                     A0370250
C                                                                       A0370260
C                                                                       A0370270
C                                                                       A0370280
      INCLUDE 'TOTAL.INC'                                               A0370421
      INCLUDE 'DEF.INC'                                                 A0370531
      INCLUDE 'DSHAR3.INC'                                              A0370631
      INCLUDE 'LDEF.INC'                                                A0370681
      INCLUDE 'ISHR16.INC'                                              A0370751
C                                                                       A0370770
C                                                                       A0370780
      UNFLAG=CKDEF(VEC)                                                 A0370790
      DO 10 I=1,3                                                       A0370800
   10 R(I)=SCA*VEC(I)                                                   A0370810
      CALL DEFEXT(RESULT)                                               A0370820
      RETURN                                                            A0370830
       END                                                              A0370840
**** SOURCE FILE : M0000788.V02   ***
*
C.....FORTRAN SUBROUTINE             APT038...              3/1/68   GK A0380000
C                                                                       A0380010
C              FORTRAN SUBROUTINE APT038                                A0380020
C                                                                       A0380030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A VECTOR DEFINED       A0380040
C              AS THE CROSS PRODUCT OF TWO VECTORS BY THE FOLLOWING     A0380050
C              APT STATEMENT                                            A0380060
C              RESULT = VECTOR/VEC1, CROSS, VEC2                        A0380070
C                                                                       A0380080
C LINKAGE      CALL APT038 (RESULT, VEC1, VEC2)                         A0380090
C                                                                       A0380100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0380110
C                      THE RESULTING VECTOR                             A0380120
C              VEC1    ARRAY CONTAINING THE CANONICAL FORM OF           A0380130
C                      THE FIRST INPUT VECTOR                           A0380140
C              VEC2    ARRAY CONTAINING THE CANONICAL FORM OF           A0380150
C                      THE SECOND INPUT VECTOR                          A0380160
C                                                                       A0380170
C SUBSIDIARIES TYPE                ENTRY                                A0380180
C              LOGICAL FUNCTION    CKDEF                                A0380190
C              SUBROUTINE          DEFEXT                               A0380200
C              REMAINDERING FUNCTION MOD                                A0380210
C                                                                       A0380220
      SUBROUTINE APT038 (RESULT,VEC1,VEC2)                              A0380230
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0380240
      DIMENSION RESULT(3),VEC1(3),VEC2(3)                               A0380250
      LOGICAL CKDEF                                                     A0380260
C                                                                       A0380270
C                                                                       A0380280
C                                                                       A0380290
      INCLUDE 'TOTAL.INC'                                               A0380431
      INCLUDE 'DEF.INC'                                                 A0380530
      INCLUDE 'DSHAR3.INC'                                              A0380620
      INCLUDE 'LDEF.INC'                                                A0380665
      INCLUDE 'ISHR16.INC'                                              A0380728
      INCLUDE 'KNUMBR.INC'                                              A0380890
C                                                                       A0380930
C                                                                       A0380940
C                                                                       A0380950
C                                                                       A0380960
      DO 10 I=1,3                                                       A0380970
      SC(I)=VEC1(I)                                                     A0380980
   10 SC(I+3) =VEC2(I)                                                  A0380990
      UNFLAG =CKDEF(SC).OR.CKDEF(SC(4))                                 A0381000
      DO 20 K=1,3                                                       A0381010
      I=MOD(K,K3)+K1                                                    A0381020
      J=MOD(I,K3)+K1                                                    A0381030
   20 R(K) =SC(I)*SC(J+3) -SC(J)*SC(I+3)                                A0381040
      CALL DEFEXT(RESULT)                                               A0381050
      RETURN                                                            A0381060
       END                                                              A0381070
**** SOURCE FILE : M0000789.V02   ***
*
C.....FORTRAN SUBROUTINE             APT039...              3/1/68   GK A0390000
C                                                                       A0390010
C              FORTRAN SUBROUTINE APT039                                A0390020
C                                                                       A0390030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A VECTOR               A0390040
C              DEFINED AS THE SUM OF TWO GIVEN VECTORS BY               A0390050
C              THE APT FOLLOWING STATEMENTS                             A0390060
C              RESULT = VECTOR/VEC1, PLUS, VEC2                         A0390070
C                                                                       A0390080
C LINKAGE      CALL APT039 (RESULT, VEC1, VEC2)                         A0390090
C                                                                       A0390100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0390110
C                      OF THE RESULTING VECTOR                          A0390120
C              VEC1    ARRAY CONTAINING THE CANONICAL FORM              A0390130
C                      OF THE FIRST INPUT VECTOR                        A0390140
C              VEC2    ARRAY CONTAINING THE CANONICAL FORM              A0390150
C                      OF THE SECOND INPUT VECTOR                       A0390160
C                                                                       A0390170
C SUBSIDIARIES TYPE                ENTRY                                A0390180
C              SUBROUTINE          DEFEXT                               A0390190
C              LOGICAL FUNCTION    CKDEF                                A0390200
C                                                                       A0390210
      SUBROUTINE APT039 (RESULT,VEC1,VEC2)                              A0390220
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0390230
      DIMENSION RESULT(3),VEC1(3),VEC2(3)                               A0390240
      LOGICAL CKDEF                                                     A0390250
C                                                                       A0390260
C                                                                       A0390270
C                                                                       A0390280
      INCLUDE 'TOTAL.INC'                                               A0390421
      INCLUDE 'DEF.INC'                                                 A0390531
      INCLUDE 'DSHAR3.INC'                                              A0390631
      INCLUDE 'LDEF.INC'                                                A0390681
      INCLUDE 'ISHR16.INC'                                              A0390751
C                                                                       A0390770
C                                                                       A0390780
C                                                                       A0390790
      UNFLAG=CKDEF(VEC1).OR.CKDEF(VEC2)                                 A0390800
C                                                                       A0390810
C...     RESULTANT VECTOR IS SUM OF COMPONENTS OF VEC1,VEC2             A0390820
C                                                                       A0390830
      DO 10 I=1,3                                                       A0390840
   10 R(I)=VEC1(I)+VEC2(I)                                              A0390850
      CALL DEFEXT(RESULT)                                               A0390860
      RETURN                                                            A0390870
       END                                                              A0390880
**** SOURCE FILE : M0000790.V03   ***
*
C.....FORTRAN SUBROUTINE  ....APT040         8/68                    RN A0400001
C.....FORTRAN SUBROUTINE             APT040...              3/1/68   GK A0400003
C                                      6/69      RW                     A0400005
C                                                                       A0400010
C              FORTRAN SUBROUTINE APT040                                A0400020
C                                                                       A0400030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A VECTOR               A0400040
C              DEFINED AS THE NORMALIZATION OF A GIVEN VECTOR           A0400050
C              BY THE FOLLOWING APT STATEMENT                           A0400060
C              RESULT = VECTOR/UNIT, VC                                 A0400070
C                                                                       A0400080
C LINKAGE      CALL APT040 (RESULT, VC)                                 A0400090
C                                                                       A0400100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0400110
C                      OF THE RESULTING VECTOR                          A0400120
C              VC      ARRAY CONTAINING THE CANONICAL FORM              A0400130
C                      OF THE INPUT VECTOR                              A0400140
C                                                                       A0400150
C SUBSIDIARIES TYPE                ENTRY                                A0400160
C              LOGICAL FUNCTION    CKDEF                                A0400170
C              SUBROUTINE          UNDEF                                A0400180
C              SUBROUTINE          VNORM                                A0400190
C                                                                       A0400200
      SUBROUTINE APT040 (RESULT,VC)                                     A0400210
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A0400211
C                                                                       A0400212
      INCLUDE 'TOTAL.INC'                                               A0400213
      INCLUDE 'LDEF.INC'                                                A0400215
C                                                                       A0400224
      LOGICAL CKDEF                                                     A0400230
      DIMENSION RESULT(3),VC(3)                                         A0400235
C                                                                       A0400240
C                                                                       A0400250
C                                                                       A0400260
      IF (CKDEF(VC)) GO TO 10                                           A0400270
      CALL VNORM(VC,RESULT)                                             A0400280
      IF (PRNTON) GO TO 20                                              A0400285
      RETURN                                                            A0400290
   10 CALL UNDEF(RESULT)                                                A0400300
      RETURN                                                            A0400310
C...  IF PRINTON WANT TO PRINT ONLY IF CALLED BY PART PROGRAM.          A0400320
   20 CALL UNPACK(RESULT,MODE,IDUMMY,IDUMMY)                            A0400330
      IF (MODE .EQ. 20) CALL PRINT(3,RESULT,1)                          A0400340
      RETURN                                                            A0400350
      END                                                               A0400360
**** SOURCE FILE : M0000791.V03   ***
*
C                                                                       A0410001
C.... FORTRAN SUBROUTINE              APT041               4/17/68      A0410002
C                                                                       A0410030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A VECTOR DEFINED       A0410040
C              AS PARALLEL TO THE INTERSECTION OF TWO GIVEN PLANES      A0410050
C              BY THE FOLLOWING APT STATEMENT                           A0410060
C              VEC = VECTOR/PARLEL,INTOF,PL1,PL2,***                    A0410070
C              *** = POSX,POSY,POSZ,NEGX,NEGY,NEGZ                      A0410080
C                                                                       A0410090
C LINKAGE      CALL APT041 (RESULT,PL1,PL2,MN)                          A0410100
C                                                                       A0410110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0410120
C                      OF THE RESULTING VECTOR                          A0410130
C              PL1     ARRAY CONTAINING THE CANONICAL FORM              A0410140
C                      OF THE FIRST INPUT PLANE                         A0410150
C              PL2     ARRAY CONTAINING THE CANONICAL FORM              A0410160
C                      OF THE SECOND INPUT PLANE                        A0410170
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0410180
C                      1 = POSX  2 = POSY  3 = POSZ                     A0410190
C                      4 = NEGX  5 = NEGY  6 = NEGZ                     A0410200
C                                                                       A0410210
C SUBSIDIARIES TYPE                ENTRY                                A0410220
C              SUBROUTINE          APT077                               A0410230
C              SUBROUTINE          APT078                               A0410240
C              SUBROUTINE          CROSS                                A0410250
C              SUBROUTINE          DEFEXT                               A0410260
C              SUBROUTINE          VNORM                                A0410270
C              REMAINDERING FUNCTION  MOD                               A0410280
C              REAL FUNCTION       SIGN                                 A0410290
C              REAL FUNCTION       FLOAT                                A0410300
C                                                                       A0410310
      SUBROUTINE APT041 (RESULT,PL1,PL2,MN)                             A0410320
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A0410325
      DIMENSION RESULT(3), PL1(4), PL2(4)                               A0410330
C                                                                       A0410340
C                                                                       A0410350
C                                                                       A0410360
      INCLUDE 'TOTAL.INC'                                               A0410501
      INCLUDE 'DEF.INC'                                                 A0410589
      INCLUDE 'DSHAR3.INC'                                              A0410669
      INCLUDE 'ZNUMBR.INC'                                              A0410765
      INCLUDE 'ISHR16.INC'                                              A0410821
      INCLUDE 'KNUMBR.INC'                                              A0410965
C                                                                       A0411020
C                                                                       A0411030
C                                                                       A0411040
C...     TRANSFORM CANONICAL FORMS AND CHECK VALIDITY                   A0411050
C                                                                       A0411060
      CALL APT077 (PL1,K0)                                              A0411070
      DO 10 J = 1,4                                                     A0411080
   10 SC(J) = L(J)                                                      A0411090
      CALL APT077 (PL2,K0)                                              A0411100
C                                                                       A0411110
C...     DETERMINE VECTOR PARALLEL TO INTERSECTION OF THE TWO PLANES    A0411120
C                                                                       A0411130
      CALL CROSS (SC,L,L)                                               A0411140
      CALL VNORM (L,L)                                                  A0411150
C                                                                       A0411160
C...     IF VECTOR HAS WRONG ORIENTATION, REVERSE DIRECTION             A0411170
C                                                                       A0411180
      I = K1+MOD(MN-K1,K3)                                              A0411190
      DUMMY1 = MN                                                       A0411195
      SC(4) = DSIGN(Z1,L(I)*(3.5D0-DUMMY1))                             A0411200
      DO 20 J = 1,3                                                     A0411210
   20 L(J) = SC(4)*L(J)                                                 A0411220
C                                                                       A0411230
      CALL APT078 (L,KM1)                                               A0411240
      CALL DEFEXT (RESULT)                                              A0411250
      RETURN                                                            A0411260
       END                                                              A0411270
**** SOURCE FILE : M0000792.V03   ***
*
C.....FORTRAN SUBROUTINE ....APT042              8/68                SR A0420001
C.... FORTRAN SUBROUTINE              APT042               5/6/68       A0420002
C                                                                       A0420010
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A VECTOR WHICH         A0420020
C              MAKES A GIVEN ANGLE WITH A GIVEN LINE DEFINED BY         A0420030
C              THE FOLLOWING APT STATEMENT                              A0420040
C              VEC = VECTOR/ATANGL,VAL,LN,***                           A0420050
C              *** = POSX,POSY,NEGX,NEGY                                A0420060
C                                                                       A0420070
C LINKAGE      CALL APT042(RESULT,VAL,LN,MN)                            A0420080
C                                                                       A0420090
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0420100
C                      OF THE RESULTING VECTOR                          A0420110
C              VAL     MEASURE (IN DEGREES) OF THE GIVEN ANGLE          A0420120
C              LN      ARRAY CONTAINING THE CANONICAL FORM              A0420130
C                      OF THE GIVEN LINE                                A0420140
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0420150
C                      1 = POSX  2 = POSY  4 = NEGX  5 = NEGY           A0420160
C                                                                       A0420170
C SUBSIDIARIES TYPE                ENTRY                                A0420180
C              SUBROUTINE          APT077                               A0420190
C              SUBROUTINE          APT078                               A0420200
C              SUBROUTINE          DEFEXT                               A0420210
C              REAL FUNCTION       DSIGN                                A0420220
C              REAL FUNCTION       DCOS                                 A0420230
C                                                                       A0420260
      SUBROUTINE APT042(RESULT,VAL,LN,MN)                               A0420270
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A0420280
      DIMENSION RESULT(3),LN(4)                                         A0420290
      DOUBLE PRECISION LN                                               A0420300
C                                                                       A0420310
C                                                                       A0420320
      INCLUDE 'TOTAL.INC'                                               A0420461
      INCLUDE 'DEF.INC'                                                 A0420549
      INCLUDE 'DSHAR3.INC'                                              A0420629
      INCLUDE 'ZNUMBR.INC'                                              A0420725
      INCLUDE 'ISHR16.INC'                                              A0420781
      INCLUDE 'KNUMBR.INC'                                              A0420925
C                                                                       A0420980
C                                                                       A0420990
C...     TRANSFORM CANONICAL FORM AND CHECK VALIDITY                    A0421000
C                                                                       A0421010
      CALL APT077(LN,K0)                                                A0421020
C                                                                       A0421030
      VA=VAL*DEGRAD                                                     A0421040
      SINA=DSIN(VA)                                                     A0421050
      COSA=DCOS(VA)                                                     A0421060
C                                                                       A0421070
C...     DETERMINE REQUIRED VECTOR                                      A0421080
      V(1)=L(1)*SINA+L(2)*COSA                                          A0421090
      V(2)=L(2)*SINA-L(1)*COSA                                          A0421100
C                                                                       A0421110
C...     IF VECTOR HAS WRONG ORIENTATION, REVERSE DIRECTION             A0421120
C                                                                       A0421130
      IF(((MN.EQ.K1).AND.(V(1).GE.Z0)).OR.((MN.EQ.K2).AND.(V(2).GE.Z0)).A0421140
     1OR.((MN.EQ.K4).AND.(V(1).LT.Z0)).OR.((MN.EQ.K5).AND.(V(2).LT.Z0)))A0421150
     2GO TO 10                                                          A0421160
      V(1)=-V(1)                                                        A0421170
      V(2)=-V(2)                                                        A0421180
   10 V(3)=Z0                                                           A0421190
C                                                                       A0421200
      CALL APT078(V,KM1)                                                A0421210
      CALL DEFEXT(RESULT)                                               A0421220
      RETURN                                                            A0421230
       END                                                              A0421240
**** SOURCE FILE : M0000793.V02   ***
*
C.... FORTRAN SUBROUTINE              APT043               4/17/68      A0430000
C                                                                       A0430030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A PLANE DEFINED        A0430040
C              AS CONTAINING A GIVEN POINT AND PERPENDICULAR TO TWO     A0430050
C              GIVEN INTERSECTING PLANES BY THE FOLLOWING APT           A0430060
C              STATEMENT                                                A0430070
C              PLN = PLANE/PN,PERPTO,PL1,PL2                            A0430080
C                                                                       A0430090
C LINKAGE      CALL APT043 (RESULT,PN,PL1,PL2)                          A0430100
C                                                                       A0430110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0430120
C                      OF THE RESULTING PLANE                           A0430130
C              PN      ARRAY CONTAINING THE CANONICAL FORM OF THE       A0430140
C                      INPUT POINT                                      A0430150
C              PL1     ARRAY CONTAINING THE CANONICAL FORM OF THE       A0430160
C                      FIRST INPUT PLANE                                A0430170
C              PL2     ARRAY CONTAINING THE CANONICAL FORM OF THE       A0430180
C                      SECOND INPUT PLANE                               A0430190
C                                                                       A0430200
C SUBSIDIARIES TYPE                ENTRY                                A0430210
C              SUBROUTINE          CROSS                                A0430220
C              SUBROUTINE          DEFEXT                               A0430230
C              SUBROUTINE          VNORM                                A0430240
C              LOGICAL FUNCTION    CKDEF                                A0430250
C                                                                       A0430260
      SUBROUTINE APT043 (RESULT,PN,PL1,PL2)                             A0430270
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A0430275
      DIMENSION RESULT(4),PN(3),PL1(4),PL2(4)                           A0430280
      LOGICAL CKDEF                                                     A0430290
C                                                                       A0430300
C                                                                       A0430310
C                                                                       A0430320
      INCLUDE 'TOTAL.INC'                                               A0430461
      INCLUDE 'DEF.INC'                                                 A0430538
      INCLUDE 'DSHAR3.INC'                                              A0430608
      INCLUDE 'LDEF.INC'                                                A0430643
      INCLUDE 'ISHR16.INC'                                              A0430692
C                                                                       A0430730
C                                                                       A0430740
C                                                                       A0430750
      UNFLAG = CKDEF(PN).OR.CKDEF(PL1).OR.CKDEF(PL2)                    A0430760
C                                                                       A0430770
C...     DETERMINE UNIT NORMAL VECTOR                                   A0430780
C                                                                       A0430790
      CALL CROSS (PL1,PL2,R)                                            A0430800
      CALL VNORM (R,R)                                                  A0430810
C                                                                       A0430820
C...     COMPUTE NORMAL DISTANCE TO DESIRED PLANE                       A0430830
C                                                                       A0430840
      DO 10 I=1,3                                                       A0430850
   10 R(4) = R(4)+R(I)*PN(I)                                            A0430860
      CALL DEFEXT(RESULT)                                               A0430870
      RETURN                                                            A0430880
       END                                                              A0430890
**** SOURCE FILE : M0000794.V02   ***
*
C.....FORTRAN SUBROUTINE             APT044...              6/10/68 EAN A0440000
C                                                                       A0440010
C              FORTRAN SUBROUTINE APT044                                A0440020
C                                                                       A0440030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A PLANE                A0440040
C              FROM THE COEFFICIENTS OF ITS EQUATION BY THE             A0440050
C              FOLLOWING APT STATEMENT                                  A0440060
C              RESULT = PLANE/A, B, C, D                                A0440070
C                                                                       A0440080
C LINKAGE      CALL APT044 (RESULT, AN, BN, CN, DN)                     A0440090
C                                                                       A0440100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0440110
C                      OF THE RESULTING PLANE                           A0440120
C              AN      REAL VARIABLE CONTAINING THE VALUE               A0440130
C                      OF COEFFICIENT OF X                              A0440140
C              BN      REAL VARIABLE CONTAINING THE VALUE               A0440150
C                      OF COEFFICIENT OF Y                              A0440160
C              CN      REAL VARIABLE CONTAINING THE VALUE               A0440170
C                      OF COEFFICIENT OF Z                              A0440180
C              DN      REAL VARIABLE CONTAINING THE VALUE               A0440190
C                      OF CONSTANT TERM                                 A0440200
C                                                                       A0440210
C SUBSIDIARIES TYPE                ENTRY                                A0440220
C              SUBROUTINE          APT077                               A0440230
C              SUBROUTINE          DEFEXT                               A0440240
C              REAL FUNCTION       SQRT                                 A0440250
C                                                                       A0440260
      SUBROUTINE APT044 (RESULT,AN,BN,CN,DN)                            A0440270
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0440280
      DIMENSION RESULT(4)                                               A0440290
C                                                                       A0440300
C                                                                       A0440310
C                                                                       A0440320
      INCLUDE 'TOTAL.INC'                                               A0440431
      INCLUDE 'DEF.INC'                                                 A0440519
      INCLUDE 'DSHAR3.INC'                                              A0440599
      INCLUDE 'ZNUMBR.INC'                                              A0440695
      INCLUDE 'IDEF.INC'                                                A0440767
      INCLUDE 'ISHR16.INC'                                              A0440823
      INCLUDE 'KNUMBR.INC'                                              A0440967
C                                                                       A0441050
C                                                                       A0441070
C                                                                       A0441080
      S1 = AN**2 +BN**2 +CN**2                                          A0441090
      IF (S1.LE.Z1EM5) GO TO 20                                         A0441100
      S1=DSQRT(S1)                                                      A0441110
      R(1)=AN /S1                                                       A0441120
      R(2)=BN /S1                                                       A0441130
      R(3)=CN/S1                                                        A0441140
      R(4)=DN /S1                                                       A0441150
      CALL APT077(R,KM1)                                                A0441160
   10 CALL DEFEXT (RESULT)                                              A0441170
      RETURN                                                            A0441180
   20 IERROR=K44                                                        A0441185
      GO TO 10                                                          A0441186
       END                                                              A0441190
**** SOURCE FILE : M0000795.V03   ***
*
C.....FORTRAN SUBROUTINE             APT045...              3/1/68   GK A0450000
C                                                                       A0450001
C                                                6/70      RW           A0450005
C                                                                       A0450010
C              FORTRAN SUBROUTINE APT045                                A0450020
C                                                                       A0450030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A PLANE                A0450040
C              DEFINED AS PASSING THROUGH THREE POINTS BY THE           A0450050
C              FOLLOWING APT STATEMENT                                  A0450060
C              RESULT = PLANE/PN1, PN2, PN3                             A0450070
C                                                                       A0450080
C LINKAGE      CALL APT045 (RESULT, PN1, PN2, PN3)                      A0450090
C                                                                       A0450100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0450110
C                      OF THE RESULTING PLANE                           A0450120
C              PN1     ARRAY CONTAINING THE CANONICAL FORM              A0450130
C                      OF THE FIRST INPUT POINT                         A0450140
C              PN2     ARRAY CONTAINING THE CANONICAL FORM              A0450150
C                      OF THE SECOND INPUT POINT                        A0450160
C              PN3     ARRAY CONTAINING THE CANONICAL FORM              A0450170
C                      OF THE THIRD INPUT POINT                         A0450180
C                                                                       A0450190
C SUBSIDIARIES TYPE                ENTRY                                A0450200
C              SUBROUTINE          APT073                               A0450210
C              LOGICAL FUNCTION    CKDEF                                A0450220
C                                                                       A0450230
      SUBROUTINE APT045 (RESULT,PN1,PN2,PN3)                            A0450240
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0450250
      DIMENSION RESULT(4),PN1(3),PN2(3),PN3(3)                          A0450260
      LOGICAL CKDEF                                                     A0450270
C                                                                       A0450280
C                                                                       A0450290
C                                                                       A0450300
      INCLUDE 'TOTAL.INC'                                               A0450441
      INCLUDE 'DEF.INC'                                                 A0450551
      INCLUDE 'DSHAR3.INC'                                              A0450651
      INCLUDE 'LDEF.INC'                                                A0450659
      INCLUDE 'IDEF.INC'                                                A0450696
C                                                                       A0450697
C                                                                       A0450700
      INCLUDE 'ISHR16.INC'                                              A0450771
C                                                                       A0450790
C                                                                       A0450800
C                                                                       A0450810
      UNFLAG=CKDEF(PN2).OR.CKDEF(PN3)                                   A0450820
C                                                                       A0450830
C...     VECTORS FROM PN1 TO PN2 AND PN3                                A0450840
C                                                                       A0450850
      DO 10 I=1,3                                                       A0450860
      SC(I) =PN1(I) -PN2(I)                                             A0450870
   10 SC(I+3) =PN1(I) -PN3(I)                                           A0450880
C                                                                       A0450890
C...     USE APT073 TO FIND PLANE CONTAINING VECTORS AND PN1            A0450900
C                                                                       A0450910
      CALL APT073 (RESULT,SC,SC(4),PN1)                                 A0450920
      IF (UNFLAG .OR. IERROR .NE. 0) CALL DEFEXT(RESULT)                A0450922
      IF(PRNTON) CALL PRINT(3,RESULT,1)                                 A0450925
      RETURN                                                            A0450930
       END                                                              A0450940
**** SOURCE FILE : M0000796.V02   ***
*
C.....FORTRAN SUBROUTINE              APT046               3/26/68      A0460000
C                                                                       A0460010
C              FORTRAN SUBROUTINE APT046                                A0460020
C                                                                       A0460030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A PLANE                A0460040
C              DEFINED AS PARALLEL TO A GIVEN PLANE AND                 A0460050
C              PASSING THROUGH A GIVEN POINT BY THE APT                 A0460060
C              STATEMENT                                                A0460070
C              RESULT = PLANE/PN, PARLEL, PL                            A0460080
C                                                                       A0460090
C LINKAGE      CALL APT046 (RESULT, PN, PL)                             A0460100
C                                                                       A0460110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0460120
C                      OF THE RESULTING PLANE                           A0460130
C              PN      ARRAY CONTAINING THE CANONICAL FORM              A0460140
C                      OF THE INPUT POINT                               A0460150
C              PL      ARRAY CONTAINING THE CANONICAL FORM              A0460160
C                      OF THE INPUT PLANE                               A0460170
C                                                                       A0460180
C SUBSIDIARIES TYPE                ENTRY                                A0460190
C              LOGICAL FUNCTION    CKDEF                                A0460200
C              SUBROUTINE          DEFEXT                               A0460210
C                                                                       A0460220
      SUBROUTINE APT046 (RESULT,PN,PL)                                  A0460230
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0460240
      DIMENSION RESULT(4),PN(3),PL(4)                                   A0460250
      LOGICAL CKDEF                                                     A0460260
C                                                                       A0460270
C                                                                       A0460280
C                                                                       A0460290
      INCLUDE 'TOTAL.INC'                                               A0460431
      INCLUDE 'DEF.INC'                                                 A0460541
      INCLUDE 'DSHAR3.INC'                                              A0460641
      INCLUDE 'LDEF.INC'                                                A0460691
      INCLUDE 'IDEF.INC'                                                A0460781
      INCLUDE 'ISHR16.INC'                                              A0460851
C                                                                       A0460880
C                                                                       A0460890
C                                                                       A0460900
      UNFLAG = CKDEF(PN).OR.CKDEF(PL)                                   A0460910
C                                                                       A0460920
C...     COMPUTE NORMAL DISTANCE TO DESIRED PLANE                       A0460930
C                                                                       A0460940
      CALL VNORM (PL(1),R(1))                                           A0460950
      DO 10 I=1,3                                                       A0460960
   10 R(4)=R(4)+R(I)*PN(I)                                              A0460970
      CALL DEFEXT(RESULT)                                               A0460980
      RETURN                                                            A0460990
       END                                                              A0461000
**** SOURCE FILE : M0000797.V03   ***
*
C                                                                       A0470001
C.....FORTRAN SUBROUTINE             APT047...              6/10/68 EAN A0470002
C                                                                       A0470010
C              FORTRAN SUBROUTINE APT047                                A0470020
C                                                                       A0470030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A PLANE DEFINED        A0470040
C              AS PARALLEL TO A GIVEN PLANE AND OFFSET A GIVEN          A0470050
C              DISTANCE BY THE FOLLOWING APT STATEMENT                  A0470060
C              RESULT = PLANE/PARLEL, P1, ****, D,                      A0470070
C                **** = XLARGE, YLARGE, ZLARGE, XSMALL, YSMALL,         A0470080
C                       OR ZSMALL                                       A0470090
C                                                                       A0470100
C LINKAGE      CALL APT047 (RESULT, PL, MN, D)                          A0470110
C                                                                       A0470120
C ARGUMENT     RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0470130
C                      OF THE RESULTING PLANE                           A0470140
C              PL      ARRAY CONTAINING THE CANONICAL FORM OF           A0470150
C                      THE INPUT PLANE                                  A0470160
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0470170
C                      1 = XLARGE, 2 = YLARGE, 3 = ZLARGE,              A0470180
C                      4 = XSMALL, 5 = YSMALL, 6 = XSMALL               A0470190
C              D       REAL VARIABLE CONTAINING THE VALUE OF            A0470200
C                      OFFSET DISTANCE                                  A0470210
C                                                                       A0470220
C SUBSIDIARIES TYPE                ENTRY                                A0470230
C              SUBROUTINE          APT077                               A0470240
C              SUBROUTINE          DEFEXT                               A0470250
C              REAL FUNCTION       FLOAT                                A0470260
C              REMAINDERING FUNCTION MOD                                A0470270
C              REAL FUNCTION       SIGN                                 A0470280
C              LOGICAL FUNCTION    XVECT                                A0470290
C                                                                       A0470300
      SUBROUTINE APT047 (RESULT,PL,MN,D)                                A0470310
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0470320
      DIMENSION RESULT(4), PL(4)                                        A0470330
      LOGICAL ZVECT                                                     A0470340
C                                                                       A0470350
C                                                                       A0470360
C                                                                       A0470370
      INCLUDE 'TOTAL.INC'                                               A0470511
      INCLUDE 'DEF.INC'                                                 A0470610
      INCLUDE 'DSHAR3.INC'                                              A0470700
      INCLUDE 'ZNUMBR.INC'                                              A0470808
      INCLUDE 'LDEF.INC'                                                A0470853
      INCLUDE 'IDEF.INC'                                                A0470934
      INCLUDE 'ISHR16.INC'                                              A0470997
      INCLUDE 'KNUMBR.INC'                                              A0471159
C                                                                       A0471210
C                                                                       A0471220
      EQUIVALENCE (S1,SC(1))                                            A0471230
C                                                                       A0471240
C...     TRANSFORM CANONICAL FORM TO LOCAL COORDINATE SYSTEM            A0471250
C                                                                       A0471260
      DATA ZLIT1,K59/3.5D0,59/                                          A0471270
      CALL APT077(PL,0)                                                 A0471280
      IF (UNFLAG) GO TO 50                                              A0471285
      UNFLAG =.NOT.ZVECT(L)                                             A0471290
C                                                                       A0471300
C...     CHECK WHICH SIDE NEW PLANE IS ON                               A0471310
C                                                                       A0471320
      I= MOD(MN -K1,K3)                                                 A0471330
      DO 20 K=1,3                                                       A0471340
      DUMMY1 = MN                                                       A0471350
      S1 = L(I+1)*(ZLIT1-DUMMY1)                                        A0471360
      IF (S1.NE.Z0) GO TO 30                                            A0471370
C                                                                       A0471380
C...     UNABLE TO DISTINGUISH PLANE, TRY NEXT DIMENSION                A0471390
C                                                                       A0471400
      I =MOD(I+K1,K3)                                                   A0471410
   20 IERROR = K59                                                      A0471420
C                                                                       A0471430
C...     FORM DESIRED PLANE                                             A0471440
C                                                                       A0471450
   30 L(4)=L(4)+D*DSIGN(1.0D0,S1)                                       A0471460
      CALL APT077 (L,KM1)                                               A0471470
   40 CALL DEFEXT (RESULT)                                              A0471480
      RETURN                                                            A0471490
   50 IERROR=K1                                                         A0471495
      GO TO 40                                                          A0471496
       END                                                              A0471500
**** SOURCE FILE : M0000798.V03   ***
*
C                                                                       A0480001
C.....FORTRAN SUBROUTINE             APT048...              3/1/68   GK A0480002
C                                                                       A0480010
C              FORTRAN SUBROUTINE APT048                                A0480020
C                                                                       A0480030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A PLANE                A0480040
C              DEFINED AS PERPENDICULAR TO A GIVEN PLANE                A0480050
C              AND PASSING THROUGH TWO GIVEN POINTS BY THE              A0480060
C              FOLLOWING APT STATEMENT                                  A0480070
C              RESULT = PLANE/PERPTO, PL, PN1, PN2                      A0480080
C                                                                       A0480090
C LINKAGE      CALL APT048 (RESULT, PL, PN1, PN2)                       A0480100
C                                                                       A0480110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0480120
C                      OF THE RESULTING PLANE                           A0480130
C              PL      ARRAY CONTAINING THE CANONICAL FORM              A0480140
C                      OF THE INPUT PLANE                               A0480150
C              PN1     ARRAY CONTAINING THE CANONICAL FORM              A0480160
C                      OF THE FIRST INPUT POINT                         A0480170
C              PN2     ARRAY CONTAINING THE CANONICAL FORM              A0480180
C                      OF THE SECOND INPUT POINT                        A0480190
C                                                                       A0480200
C SUBSIDIARIES TYPE                ENTRY                                A0480210
C              SUBROUTINE          APT035                               A0480220
C              SUBROUTINE          APT073                               A0480230
C                                                                       A0480240
      SUBROUTINE APT048 (RESULT,PL,PN1,PN2)                             A0480250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0480260
      DIMENSION RESULT(4),PL(4),PN1(3),PN2(3)                           A0480270
C                                                                       A0480280
      INCLUDE 'TOTAL.INC'                                               A0480311
      INCLUDE 'DEF.INC'                                                 A0480454
      INCLUDE 'DSHAR3.INC'                                              A0480576
      INCLUDE 'LDEF.INC'                                                A0480584
      INCLUDE 'ISHR16.INC'                                              A0480675
C                                                                       A0480710
C                                                                       A0480720
C                                                                       A0480730
C                                                                       A0480740
C...     DEFINE A VECTOR IN THE DESIRED PLANE                           A0480750
C                                                                       A0480760
      CALL APT035 (LN1(2),PN2,PN1)                                      A0480770
C                                                                       A0480780
C...     DEFINE THE PLANE CONTAINING A POINT, THE DEFINED VECTOR, AND A A0480790
C...     NORMAL VECTOR TO THE ORIGINAL PLANE                            A0480800
C                                                                       A0480810
      CALL APT073 (RESULT,PL,LN1(2),PN1)                                A0480820
      IF (PRNTON) CALL PRINT(3,RESULT,1)                                A0480825
      RETURN                                                            A0480830
       END                                                              A0480840
**** SOURCE FILE : M0000799.V02   ***
*
C.....FORTRAN SUBROUTINE             APT049...              3/1/68   GK A0490000
C                                                                       A0490010
C              FORTRAN SUBROUTINE APT049                                A0490020
C                                                                       A0490030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CIRCLE               A0490040
C              DEFINED WITH A GIVEN POINT AS ITS CENTER AND             A0490050
C              HAVING A GIVEN RADIUS BY THE FOLLOWING APT               A0490060
C              STATEMENT                                                A0490070
C              RESULT = CIRCLE/CENTER, CNT, RADIUS, RAD                 A0490080
C                                                                       A0490090
C LINKAGE      CALL APT049 (RESULT, CNT, RAD)                           A0490100
C                                                                       A0490110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0490120
C                      OF THE RESULTING CIRCLE                          A0490130
C              CNT     ARRAY CONTAINING THE CANONICAL FORM              A0490140
C                      OF THE INPUT POINT                               A0490150
C              RAD     REAL VARIABLE CONTAINING THE VALUE               A0490160
C                      OF THE DESIRED RADIUS                            A0490170
C                                                                       A0490180
C SUBSIDIARIES TYPE                ENTRY                                A0490190
C              SUBROUTINE          APT078                               A0490200
C              SUBROUTINE          DEFEXT                               A0490210
C                                                                       A0490220
      SUBROUTINE APT049 (RESULT,CNT,RAD)                                A0490230
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0490240
      DIMENSION RESULT(7),CNT(3)                                        A0490250
C                                                                       A0490260
C                                                                       A0490270
C                                                                       A0490280
      INCLUDE 'TOTAL.INC'                                               A0490421
      INCLUDE 'DEF.INC'                                                 A0490509
      INCLUDE 'DSHAR3.INC'                                              A0490589
      INCLUDE 'ISHR16.INC'                                              A0490645
      INCLUDE 'KNUMBR.INC'                                              A0490789
C                                                                       A0490850
C                                                                       A0490860
C                                                                       A0490870
C...     CONVERT AXIS TO BASE SYSTEM,SET CENTER AND RADIUS              A0490880
C                                                                       A0490890
      CALL APT078(R(4),KM1)                                             A0490900
      DO 10 I=1,3                                                       A0490910
      R(I+3)=R(I)                                                       A0490920
   10 R(I)=CNT(I)                                                       A0490930
      R(7)=RAD                                                          A0490940
      CALL DEFEXT(RESULT)                                               A0490950
      RETURN                                                            A0490960
       END                                                              A0490970
**** SOURCE FILE : M0000800.V02   ***
*
C.....FORTRAN SUBROUTINE             APT050...              3/1/68   GK A0500000
C                                                                       A0500010
C              FORTRAN SUBROUTINE APT050                                A0500020
C                                                                       A0500030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A SPHERE               A0500040
C              DEFINED AS HAVING A GIVEN CENTER POINT AND               A0500050
C              A GIVEN RADIUS BY THE FOLLOWING APT STATEMENT            A0500060
C              RESULT = SPHERE/CENTER, PN, RADIUS, R                    A0500070
C                                                                       A0500080
C LINKAGE      CALL APT050 (RESULT, PN, RAD)                            A0500090
C                                                                       A0500100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0500110
C                      OF THE RESULTING SPHERE                          A0500120
C              PN      ARRAY CONTAINING THE CANONICAL FORM              A0500130
C                      OF THE INPUT POINT                               A0500140
C              RAD     REAL VARIABLE CONTAINING THE VALUE               A0500150
C                      OF THE DESIRED RADIUS                            A0500160
C                                                                       A0500170
C SUBSIDIARIES TYPE                ENTRY                                A0500180
C              LOGICAL FUNCTION    CKDEF                                A0500190
C              SUBROUTINE          DEFEXT                               A0500200
C              SUBROUTINE          UNDEF                                A0500210
C                                                                       A0500220
      SUBROUTINE APT050 (RESULT,PN,RAD)                                 A0500230
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0500240
      DIMENSION RESULT(4),PN(3)                                         A0500250
      LOGICAL CKDEF                                                     A0500260
C                                                                       A0500270
C                                                                       A0500280
C                                                                       A0500290
      INCLUDE 'TOTAL.INC'                                               A0500431
      INCLUDE 'DEF.INC'                                                 A0500541
      INCLUDE 'DSHAR3.INC'                                              A0500641
      INCLUDE 'LDEF.INC'                                                A0500691
      INCLUDE 'ISHR16.INC'                                              A0500761
C                                                                       A0500780
C                                                                       A0500790
C                                                                       A0500800
      UNFLAG=CKDEF(PN)                                                  A0500810
      DO 10 I=1,3                                                       A0500820
   10 R(I)=PN(I)                                                        A0500830
      R(4)=RAD                                                          A0500840
      CALL DEFEXT(RESULT)                                               A0500850
      RETURN                                                            A0500860
       END                                                              A0500870
**** SOURCE FILE : M0000801.V02   ***
*
C.....FORTRAN SUBROUTINE             APT051...              3/1/68   GK A0510000
C                                                                       A0510010
C              FORTRAN SUBROUTINE APT051                                A0510020
C                                                                       A0510030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A SPHERE               A0510040
C              DEFINED AS HAVING ITS CENTER AT A GIVEN POINT            A0510050
C              AND PASSING THROUGH A GIVEN POINT BY THE                 A0510060
C              FOLLOWING APT STATEMENT                                  A0510070
C              RESULT = SPHERE/CENTER, PN1, PN2                         A0510080
C                                                                       A0510090
C LINKAGE      CALL APT051 (RESULT, PN1, PN2)                           A0510100
C                                                                       A0510110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN CANONICAL FORM OF THE           A0510120
C                      RESULTING SPHERE                                 A0510130
C              PN1     ARRAY CONTAINING CANONICAL FORM OF THE           A0510140
C                      INPUT POINT (CENTER)                             A0510150
C              PN2     ARRAY CONTAINING CANONICAL FORM OF THE           A0510160
C                      INPUT POINT (ON SPHERE)                          A0510170
C                                                                       A0510180
C SUBSIDIARIES TYPE                ENTRY                                A0510190
C              LOGICAL FUNCTION    CKDEF                                A0510200
C              SUBROUTINE          DEFEXT                               A0510210
C              REAL FUNCTION       SQRT                                 A0510220
C                                                                       A0510230
      SUBROUTINE APT051 (RESULT,PN1,PN2)                                A0510240
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0510250
      DIMENSION RESULT(4),PN1(3),PN2(3)                                 A0510260
      LOGICAL CKDEF                                                     A0510270
C                                                                       A0510280
C                                                                       A0510290
C                                                                       A0510300
      INCLUDE 'TOTAL.INC'                                               A0510441
      INCLUDE 'DEF.INC'                                                 A0510551
      INCLUDE 'DSHAR3.INC'                                              A0510651
      INCLUDE 'LDEF.INC'                                                A0510701
      INCLUDE 'ISHR16.INC'                                              A0510771
C                                                                       A0510790
C                                                                       A0510800
C                                                                       A0510810
C...     COMPUTE RADIUS OF RESULT, MOVE PN1 TO CENTER                   A0510820
C                                                                       A0510830
      DO 10 I=1,3                                                       A0510840
      R(I)=PN1(I)                                                       A0510850
   10 R(4)=R(4)+(R(I)-PN2(I))**2                                        A0510860
      UNFLAG=CKDEF(R).OR.CKDEF(PN2)                                     A0510870
C                                                                       A0510880
      R(4)=DSQRT(R(4))                                                  A0510890
      CALL DEFEXT(RESULT)                                               A0510900
      RETURN                                                            A0510910
       END                                                              A0510920
**** SOURCE FILE : M0000802.V02   ***
*
C.....FORTRAN SUBROUTINE             APT052...              3/1/68   GK A0520000
C                                                                       A0520010
C              FORTRAN SUBROUTINE APT052                                A0520020
C                                                                       A0520030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A SPHERE               A0520040
C              DEFINED AS HAVING ITS CENTER AT A GIVEN POINT            A0520050
C              AND TANGENT TO A GIVEN PLANE BY THE FOLLOWING            A0520060
C              APT STATEMENT                                            A0520070
C              RESULT = SPHERE/CENTER, PN, TANTO, PL                    A0520080
C                                                                       A0520090
C LINKAGE      CALL APT052 (RESULT, PN, PL)                             A0520100
C                                                                       A0520110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0520120
C                      OF THE RESULTING SPHERE                          A0520130
C              PN      ARRAY CONTAINING THE CANONICAL FORM              A0520140
C                      OF THE INPUT POINT                               A0520150
C              PL      ARRAY CONTAINING THE CANONICAL FORM              A0520160
C                      OF THE INPUT PLANE                               A0520170
C                                                                       A0520180
C SUBSIDIARIES TYPE                ENTRY                                A0520190
C              REAL FUNCTION       ABS                                  A0520200
C              LOGICAL FUNCTION    CKDEF                                A0520210
C              SUBROUTINE          DEFEXT                               A0520220
C                                                                       A0520230
      SUBROUTINE APT052 (RESULT,PN,PL)                                  A0520240
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0520250
      DIMENSION RESULT(4),PN(3),PL(4)                                   A0520260
      LOGICAL CKDEF                                                     A0520270
C                                                                       A0520280
C                                                                       A0520290
C                                                                       A0520300
      INCLUDE 'TOTAL.INC'                                               A0520441
      INCLUDE 'DEF.INC'                                                 A0520551
      INCLUDE 'DSHAR3.INC'                                              A0520651
      INCLUDE 'LDEF.INC'                                                A0520701
      INCLUDE 'ISHR16.INC'                                              A0520771
C                                                                       A0520790
C                                                                       A0520800
C                                                                       A0520810
C...     COMPUTE RADIUS OF RESULT, MOVE PN TO CENTER                    A0520820
C                                                                       A0520830
      DO 10 I=1,3                                                       A0520850
      R(I)=PN(I)                                                        A0520860
   10 R(4)=R(4)+R(I)*PL(I)                                              A0520870
      R(4)=DABS(R(4)-PL(4))                                             A0520880
      UNFLAG=CKDEF(R).OR.CKDEF(PL)                                      A0520890
      CALL DEFEXT(RESULT)                                               A0520900
      RETURN                                                            A0520910
       END                                                              A0520920
**** SOURCE FILE : M0000803.V03   ***
*
C                                                                       A0530001
C.....FORTRAN SUBROUTINE             APT053...              3/1/68   GK A0530002
C                                                                       A0530010
C              FORTRAN SUBROUTINE APT053                                A0530020
C                                                                       A0530030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A SPHERE               A0530040
C              DEFINED AS PASSING THROUGH FOUR GIVEN POINTS             A0530050
C              BY THE FOLLOWING APT STATEMENT                           A0530060
C              RESULT = SPHERE/PT1, PT2, PT3, PT4                       A0530070
C                                                                       A0530080
C LINKAGE      CALL APT053 (RESULT, PT1, PT2, PT3, PT4)                 A0530090
C                                                                       A0530100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0530110
C                      OF THE RESULTING SPHERE                          A0530120
C              PT1     ARRAY CONTAINING THE CANONICAL FORM              A0530130
C                      OF THE FIRST INPUT POINT                         A0530140
C              PT2     ARRAY CONTAINING THE CANONICAL FORM              A0530150
C                      OF THE SECOND INPUT POINT                        A0530160
C              PT3     ARRAY CONTAINING THE CANONICAL FORM              A0530170
C                      OF THE THIRD INPUT POINT                         A0530180
C              PT4     ARRAY CONTAINING THE CANONICAL FORM              A0530190
C                      OF THE FOURTH INPUT POINT                        A0530200
C                                                                       A0530210
C SUBSIDIARIES TYPE                ENTRY                                A0530220
C              SUBROUTINE          APT075                               A0530230
C              LOGICAL FUNCTION    CKDEF                                A0530240
C              SUBROUTINE          DEFEXT                               A0530250
C              REAL FUNCTION       SQRT                                 A0530260
C                                                                       A0530270
      SUBROUTINE APT053 (RESULT,PT1,PT2,PT3,PT4)                        A0530280
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0530290
      DIMENSION RESULT(4),PT1(3),PT2(3),PT3(3),PT4(3),ST(3,3),PT(4,3)   A0530300
      LOGICAL CKDEF                                                     A0530310
C                                                                       A0530320
C                                                                       A0530330
C                                                                       A0530340
      INCLUDE 'TOTAL.INC'                                               A0530481
      INCLUDE 'DEF.INC'                                                 A0530580
      INCLUDE 'DSHAR3.INC'                                              A0530670
      INCLUDE 'ZNUMBR.INC'                                              A0530778
      INCLUDE 'LDEF.INC'                                                A0530823
      INCLUDE 'IDEF.INC'                                                A0530904
      INCLUDE 'ISHR16.INC'                                              A0530967
      INCLUDE 'KNUMBR.INC'                                              A0531129
C                                                                       A0531180
      EQUIVALENCE (ST(1,1),SC(1)),(PT(1,1),P(1))                        A0531190
C                                                                       A0531200
      DATA K57/57/                                                      A0531210
C...     MOVE INPUTS TO SCRATCH STORAGE, CHECK INPUT                    A0531220
C                                                                       A0531230
      UNFLAG=CKDEF(PT4)                                                 A0531240
      DO 10 I=1,3                                                       A0531250
      ST(1,I) =PT1(I)                                                   A0531260
      ST(2,I) =PT2(I)                                                   A0531270
      ST(3,I) =PT3(I)                                                   A0531280
   10 UNFLAG =UNFLAG.OR.CKDEF(ST(I,1))                                  A0531290
C                                                                       A0531300
C...     FORM EQUATION COEFFICIENTS                                     A0531310
C                                                                       A0531320
      DO 30 I=1,3                                                       A0531330
      PT (4,I)=Z0                                                       A0531340
C                                                                       A0531350
      DO 20 J=1,3                                                       A0531360
      PT(I,J) =ST(J,I) -PT4(I)                                          A0531370
   20 PT(4,I) =PT(4,I) +ST(I,J)**2 -PT4(J)**2                           A0531380
   30 R(4)=R(4)+PT4(I)**2                                               A0531390
C                                                                       A0531400
C...     SOLVE FOR SPHERE EQUATION COEFFS.                              A0531410
C                                                                       A0531420
      CALL APT075(R,PT)                                                 A0531430
C                                                                       A0531440
C...     CHECK FOR COPLANAR POINTS                                      A0531450
C                                                                       A0531460
      IF (IERROR.GE. K1) IERROR = K57                                   A0531470
C                                                                       A0531480
C...     COMPUTE RADIUS TERM                                            A0531490
C                                                                       A0531500
      DO 40 I=1,3                                                       A0531510
      R(I)=R(I)/Z2                                                      A0531520
   40 R(4) =R(4) +R(I)*(R(I) -Z2*PT4(I))                                A0531530
      R(4)=DSQRT(R(4))                                                  A0531540
      CALL DEFEXT(RESULT)                                               A0531550
      RETURN                                                            A0531560
       END                                                              A0531570
**** SOURCE FILE : M0000804.V02   ***
*
C.....FORTRAN SUBROUTINE             APT054...              3/1/68   GK A0540000
C                                                                       A0540010
C              FORTRAN SUBROUTINE APT054                                A0540020
C                                                                       A0540030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CYLINDER             A0540040
C              DEFINED AS HAVING A GIVEN POINT ON ITS AXIS,             A0540050
C              THREE GIVEN COMPONENTS OF ITS AXIS VECTOR, AND           A0540060
C              A GIVEN RADIUS, BY THE FOLLOWING APT STATEMENT           A0540070
C              RESULT = CYLNDR/PN, AX, AY, AZ, R                        A0540080
C                                                                       A0540090
C LINKAGE      CALL APT054 (RESULT, PN, AX, AY, AZ, RAD)                A0540100
C                                                                       A0540110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0540120
C                      OF THE RESULTING CYLINDER                        A0540130
C              PN      ARRAY CONTAINING THE CANONICAL FORM              A0540140
C                      OF THE INPUT POINT                               A0540150
C              AX      REAL VARIABLE CONTAINING THE VALUE               A0540160
C                      OF X COMPONENT OF THE AXIS VECTOR                A0540170
C              AY      REAL VARIABLE CONTAINING THE VALUE               A0540180
C                      OF Y COMPONENT OF THE AXIS VECTOR                A0540190
C              AZ      REAL VARIABLE CONTAINING THE VALUE               A0540200
C                      OF Z COMPONENT OF THE AXIS VECTOR                A0540210
C              RAD     REAL VARIABLE CONTAINING THE VALUE               A0540220
C                      OF THE DESIRED RADIUS                            A0540230
C                                                                       A0540240
C SUBSIDIARIES TYPE                ENTRY                                A0540250
C              SUBROUTINE          APT055                               A0540260
C              SUBROUTINE          APT081                               A0540270
C                                                                       A0540280
      SUBROUTINE APT054(RESULT,PN,AX,AY,AZ,RAD)                         A0540290
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0540300
      DIMENSION RESULT(7),PN(3)                                         A0540310
C                                                                       A0540320
C                                                                       A0540330
C                                                                       A0540340
      INCLUDE 'TOTAL.INC'                                               A0540481
      INCLUDE 'DEF.INC'                                                 A0540569
      INCLUDE 'DSHAR3.INC'                                              A0540649
      INCLUDE 'ISHR16.INC'                                              A0540705
      INCLUDE 'KNUMBR.INC'                                              A0540849
C                                                                       A0540900
C                                                                       A0540910
C                                                                       A0540920
      R(1)=AX                                                           A0540930
      R(2)=AY                                                           A0540940
      R(3)=AZ                                                           A0540950
      CALL APT081(R,KM1)                                                A0540960
      CALL APT055(RESULT,PN,R,RAD)                                      A0540970
      RETURN                                                            A0540980
      END                                                               A0540990
**** SOURCE FILE : M0000805.V02   ***
*
C.....FORTRAN SUBROUTINE             APT055...              3/1/68   GK A0550000
C                                                                       A0550010
C              FORTRAN SUBROUTINE APT055                                A0550020
C                                                                       A0550030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CYLINDER             A0550040
C              DEFINED AS HAVING A GIVEN POINT ON ITS AXIS,             A0550050
C              A GIVEN AXIS VECTOR AND A GIVEN RADIUS, BY               A0550060
C              THE FOLLOWING APT STATEMENT                              A0550070
C              RESULT = CYLNDR/PN, VE, R                                A0550080
C                                                                       A0550090
C LINKAGE      CALL APT055 (RESULT, PN, VE, RAD)                        A0550100
C                                                                       A0550110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0550120
C                      OF THE RESULTING CYLINDER                        A0550130
C              PN      ARRAY CONTAINING THE CANONICAL FORM              A0550140
C                      OF THE INPUT POINT                               A0550150
C              VE      ARRAY CONTAINING THE CANONICAL FORM              A0550160
C                      OF THE INPUT VECTOR                              A0550170
C              RAD     REAL VARIABLE CONTAINING THE VALUE               A0550180
C                      OF THE DESIRED RADIUS                            A0550190
C                                                                       A0550200
C SUBSIDIARIES TYPE                ENTRY                                A0550210
C              SUBROUTINE          APT040                               A0550220
C              LOGICAL FUNCTION    CKDEF                                A0550230
C              SUBROUTINE          DEFEXT                               A0550240
C              LOGICAL FUNCTION    ZVECT                                A0550250
C                                                                       A0550260
      SUBROUTINE APT055 (RESULT,PN,VE,RAD)                              A0550270
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0550280
      DIMENSION RESULT(7),PN(3),VE(3)                                   A0550290
      LOGICAL CKDEF,ZVECT                                               A0550300
C                                                                       A0550310
C                                                                       A0550320
C                                                                       A0550330
      INCLUDE 'TOTAL.INC'                                               A0550471
      INCLUDE 'DEF.INC'                                                 A0550570
      INCLUDE 'DSHAR3.INC'                                              A0550660
      INCLUDE 'LDEF.INC'                                                A0550705
      INCLUDE 'IDEF.INC'                                                A0550786
      INCLUDE 'ISHR16.INC'                                              A0550849
      INCLUDE 'KNUMBR.INC'                                              A0551011
C                                                                       A0551070
C                                                                       A0551080
      DATA K58/58/                                                      A0551090
C                                                                       A0551100
C...     CHECK INPUT, MOVE ARGUMENTS                                    A0551110
C                                                                       A0551120
      DO 10 I=1,3                                                       A0551130
      R(I+3)=VE(I)                                                      A0551140
   10 R(I)=PN(I)                                                        A0551150
      UNFLAG=CKDEF(R)                                                   A0551160
C                                                                       A0551170
C...     CHECK FOR ZERO VECTOR, NORMALIZE                               A0551180
C                                                                       A0551190
      IF (.NOT. ZVECT(R(4))) IERROR = K58                               A0551200
      CALL APT040(R(4),R(4))                                            A0551210
      R(7)=RAD                                                          A0551220
      CALL DEFEXT (RESULT)                                              A0551230
      RETURN                                                            A0551240
       END                                                              A0551250
**** SOURCE FILE : M0000806.V02   ***
*
C.....FORTRAN SUBROUTINE             APT056...              3/1/68   GK A0560000
C                                                                       A0560010
C              FORTRAN SUBROUTINE APT056                                A0560020
C                                                                       A0560030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CONE                 A0560040
C              DEFINED AS HAVING A GIVEN VERTEX POINT, A                A0560050
C              GIVEN AXIS VECTOR, AND A GIVEN VALUE OF ITS              A0560060
C              HALF ANGLE BY THE FOLLOWING APT STATEMENT                A0560070
C              RESULT = CONE/PN, VE, BETA                               A0560080
C                                                                       A0560090
C LINKAGE      CALL APT056 (RESULT, PN, VE, BETA)                       A0560100
C                                                                       A0560110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0560120
C                      OF THE RESULTING CONE                            A0560130
C              PN      ARRAY CONTAINING THE CANONICAL FORM              A0560140
C                      OF THE INPUT POINT                               A0560150
C              VE      ARRAY CONTAINING THE CANONICAL FORM              A0560160
C                      OF THE INPUT VECTOR                              A0560170
C              BETA    REAL VARIABLE CONTAINING THE VALUE               A0560180
C                      OF THE DESIRED HALF ANGLE (DEGREES)              A0560190
C                                                                       A0560200
C SUBSIDIARIES TYPE                ENTRY                                A0560210
C              SUBROUTINE          APT040                               A0560220
C              LOGICAL FUNCTION    CKDEF                                A0560230
C              REAL FUNCTION       COS                                  A0560240
C              SUBROUTINE          DEFEXT                               A0560250
C              SUBROUTINE          ERROR                                A0560260
C              LOGICAL FUNCTION    ZVECT                                A0560270
C                                                                       A0560280
      SUBROUTINE APT056 (RESULT,PN,VE,BETA)                             A0560290
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0560300
      DIMENSION RESULT(7),PN(3),VE(3)                                   A0560310
      LOGICAL CKDEF,ZVECT                                               A0560320
C                                                                       A0560330
C                                                                       A0560340
C                                                                       A0560350
      INCLUDE 'TOTAL.INC'                                               A0560491
      INCLUDE 'DEF.INC'                                                 A0560590
      INCLUDE 'DSHAR3.INC'                                              A0560680
      INCLUDE 'ZNUMBR.INC'                                              A0560788
      INCLUDE 'LDEF.INC'                                                A0560833
      INCLUDE 'IDEF.INC'                                                A0560914
      INCLUDE 'ISHR16.INC'                                              A0560977
      INCLUDE 'KNUMBR.INC'                                              A0561139
C                                                                       A0561190
C                                                                       A0561200
C                                                                       A0561210
C...     CHECK INPUT VALIDITY, STORE ARGUMENTS                          A0561220
C                                                                       A0561230
      DO 10 I=1,3                                                       A0561240
      R(I)=PN(I)                                                        A0561250
   10 R(I+3)=VE(I)                                                      A0561260
      UNFLAG=CKDEF(R)                                                   A0561270
C                                                                       A0561280
C...     CHECK HALF-ANGLE .LE. 90 DEGREES, VECTOR NON-ZERO              A0561290
C                                                                       A0561300
      IF (BETA.GT.Z90 ) IERROR=K48                                      A0561310
      IF (.NOT.ZVECT(R(4))) IERROR=K47                                  A0561320
C                                                                       A0561330
C...     NORMALIZE VECTOR, TAKE COSINE OF BETA                          A0561340
C                                                                       A0561350
      CALL APT040(R(4),R(4))                                            A0561360
      R(7)=DCOS(BETA*DEGRAD)                                            A0561370
      CALL DEFEXT(RESULT)                                               A0561380
      RETURN                                                            A0561390
       END                                                              A0561400
**** SOURCE FILE : M0000807.V02   ***
*
C.....FORTRAN SUBROUTINE             APT057...              3/1/68   GK A0570000
C                                                                       A0570010
C              FORTRAN SUBROUTINE APT057                                A0570020
C                                                                       A0570030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF AN ELLIPSE DE-         A0570040
C              FINED AS HAVING A GIVEN CENTER POINT, GIVEN LENGTHS      A0570050
C              OF SEMI-MAJOR AND SEMI-MINOR AXES, AND A GIVEN           A0570060
C              ANGLE BETWEEN THE MAJOR AXIS AND THE X AXIS BY           A0570070
C              THE FOLLOWING APT STATEMENT                              A0570080
C              RESULT = ELLIPS/CENTER, PN, MA, MI, BETA                 A0570090
C                                                                       A0570100
C LINKAGE      CALL APT057 (RESULT, PN, MA, MI, BETA)                   A0570110
C                                                                       A0570120
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0570130
C                      THE RESULTING ELLIPSE                            A0570140
C              PN      ARRAY CONTAINING THE CANONICAL FORM OF           A0570150
C                      THE INPUT POINT                                  A0570160
C              MA      REAL VARIABLE CONTAINING THE LENGTH OF           A0570170
C                      THE SEMI-MAJOR AXIS                              A0570180
C              MI      REAL VARIABLE CONTAINING THE LENGTH OF           A0570190
C                      THE SEMI-MINOR AXIS                              A0570200
C              BETA    REAL VARIABLE CONTAINING THE VALUE OF            A0570210
C                      THE ANGLE BETWEEN THE MAJOR AXIS AND             A0570220
C                      THE X AXIS (DEGREES)                             A0570230
C                                                                       A0570240
C SUBSIDIARIES TYPE                ENTRY                                A0570250
C              SUBROUTINE          APT059                               A0570260
C                                                                       A0570270
      SUBROUTINE APT057 (RESULT,PN,MA,MI,BETA)                          A0570280
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0570290
      DIMENSION RESULT(10),PN(3)                                        A0570300
      DOUBLE PRECISION MA,MI                                            A0570310
C                                                                       A0570320
C                                                                       A0570330
      INCLUDE 'TOTAL.INC'                                               A0570451
      INCLUDE 'ZNUMBR.INC'                                              A0570516
C                                                                       A0570540
C                                                                       A0570550
C                                                                       A0570560
      CALL APT059(RESULT,PN,MA,MI,BETA,Z1)                              A0570570
      RETURN                                                            A0570580
       END                                                              A0570590
**** SOURCE FILE : M0000808.V02   ***
*
C.....FORTRAN SUBROUTINE             APT058...              3/1/68   GK A0580000
C                                                                       A0580010
C              FORTRAN SUBROUTINE APT058                                A0580020
C                                                                       A0580030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A HYPERBOLA            A0580040
C              DEFINED AS HAVING A GIVEN CENTER POINT, GIVEN            A0580050
C              LENGTHS OF SEMI-TRANSVERSE AND SEMI-CONJUGATE            A0580060
C              AXIS, AND A GIVEN ANGLE BETWEEN THE TRANSVERSE           A0580070
C              AXIS AND THE X AXIS BY THE FOLLOWING APT STATEMENT       A0580080
C              RESULT = HYPERB/CENTER, PN, STA, SCA, BETA               A0580090
C                                                                       A0580100
C LINKAGE      CALL APT058 (RESULT, PN, STA, SCA, BETA)                 A0580110
C                                                                       A0580120
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0580130
C                      THE RESULTING HYPERBOLA                          A0580140
C              PN      ARRAY CONTAINING THE CANONICAL FORM OF           A0580150
C                      THE INPUT POINT                                  A0580160
C              STA     REAL VARIABLE CONTAINING THE LENGTH              A0580170
C                      OF SEMI-TRANSVERSE AXIS                          A0580180
C              SCA     REAL VARIABLE CONTAINING THE LENGTH OF           A0580190
C                      THE SEMI-CONJUGATE AXIS                          A0580200
C              BETA    REAL VARIABLE CONTAINING THE ANGLE               A0580210
C                      BETWEEN THE TRANSVERSE AXIS AND THE              A0580220
C                      X AXIS (DEGREES)                                 A0580230
C                                                                       A0580240
C SUBSIDIARIES TYPE                ENTRY                                A0580250
C              SUBROUTINE          APT059                               A0580260
C                                                                       A0580270
      SUBROUTINE APT058 (RESULT,PN,STA,SCA,BETA)                        A0580280
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0580290
      DIMENSION RESULT(10),PN(3)                                        A0580300
C                                                                       A0580310
C                                                                       A0580320
C                                                                       A0580330
      INCLUDE 'TOTAL.INC'                                               A0580461
      INCLUDE 'ZNUMBR.INC'                                              A0580526
C                                                                       A0580550
C                                                                       A0580560
C                                                                       A0580570
      CALL APT059(RESULT,PN,STA,SCA,BETA,ZM1)                           A0580580
      RETURN                                                            A0580590
       END                                                              A0580600
**** SOURCE FILE : M0002234.V05   ***
*
C                                                                       A0590001
C.....FORTRAN SUBROUTINE             APT059...              3/1/68   GK A0590002
C                                                                       A0590010
C              FORTRAN SUBROUTINE APT059                                A0590020
C                                                                       A0590030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF AN ELLIPSE OR          A0590040
C              HYPERBOLA, GIVEN THE CENTER, ROTATION ANGLE,             A0590050
C              AND MAJOR AND MINOR AXIS.                                A0590060
C                                                                       A0590070
C LINKAGE      CALL APT059 (RESULT, PN, MA, MI, BETA, SGN)              A0590080
C                                                                       A0590090
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0590100
C                      THE SECOND DEGREE EQUATION                       A0590110
C              PN      ARRAY CONTAINING THE CANONICAL FORM OF           A0590120
C                      THE CENTER POINT                                 A0590130
C              MA      REAL VARIABLE CONTAINING THE LENGTH OF           A0590140
C                      THE SEMI-MAJOR AXIS                              A0590150
C              MI      REAL VARIABLE CONTAINING THE LENGTH              A0590160
C                      OF THE SEMI-MINOR AXIS                           A0590170
C              BETA    REAL VARIABLE CONTAINING THE VALUE OF            A0590180
C                      THE ANGLE BETWEEN THE MAJOR AXIS AND THE         A0590190
C                      X-AXIS                                           A0590200
C              SGN     REAL VARIABLE CONTAINING THE SURFACE             A0590210
C                      INDICATOR                                        A0590220
C                           1 = ELLIPSE;   -1 = HYPERBOLA               A0590230
C                                                                       A0590240
C SUBSIDIARIES TYPE                ENTRY                                A0590250
C              SUBROUTINE          APT079                               A0590260
C              SUBROUTINE          APT081                               A0590270
C              SUBROUTINE          DEFEXT                               A0590280
C              REAL FUNCTION       COS                                  A0590290
C              REAL FUNCTION       SIN                                  A0590300
C                                                                       A0590310
      SUBROUTINE APT059 (RESULT,PN,MA,MI,BETA,SGN)                      A0590320
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0590330
      DIMENSION RESULT(10),PN(3)                                        A0590340
      DOUBLE PRECISION MA,MI                                            A0590350
C                                                                       A0590360
C                                                                       A0590370
C                                                                       A0590380
      INCLUDE 'TOTAL.INC'                                               A0590521
      INCLUDE 'DEF.INC'                                                 A0590609
      INCLUDE 'DSHAR3.INC'                                              A0590689
      INCLUDE 'ZNUMBR.INC'                                              A0590785
      INCLUDE 'ISHR16.INC'                                              A0590841
      INCLUDE 'KNUMBR.INC'                                              A0590985
C                                                                       A0591040
      EQUIVALENCE (S1,SC(1)),(S2,SC(2)),(S3,SC(3)),(S4,SC(4)),          A0591050
     1            (S5,SC(5)),(S6,SC(6)),(S7,SC(7))                      A0591060
C                                                                       A0591070
C                                                                       A0591080
C...     TRANSFORM POINT TO LOCAL SYSTEM, CHECK VALIDITY                A0591090
C                                                                       A0591100
      CALL APT081(PN,K0)                                                A0591110
      IF(MA.GT.MI) GO TO 10                                             A0591112
      CALL ERROR(40,'APT059  ')                                         A0591113
      SWOP=MA                                                           A0591114
      MA=MI                                                             A0591115
      MI=SWOP                                                           A0591116
      BETA=BETA+90                                                      A0591117
   10 S1=BETA*DEGRAD                                                    A0591120
      S2=DSIN(S1)                                                       A0591130
      S3=DCOS(S1)                                                       A0591140
      S4=S2**2                                                          A0591150
      S5=S3**2                                                          A0591160
      S6=SGN*MA**2                                                      A0591170
      S7=MI**2                                                          A0591180
      R(1)=S7*S5+S6*S4                                                  A0591190
      R(2)=S7*S4+S6*S5                                                  A0591200
      R(4)=S7*(P(1)*S3+P(2)*S2)**2                                      A0591210
     1     +S6*(P(1)*S2-P(2)*S3)**2-S7*MA**2                            A0591220
      R(6)=Z0                                                           A0591230
      R(7)=S2*S3*(S7-S6)                                                A0591240
      R(8)=-P(2)*R(7)-P(1)*R(1)                                         A0591250
      R(9)=-P(1)*R(7)-P(2)*R(2)                                         A0591260
      CALL APT079(R,KM1)                                                A0591270
      CALL DEFEXT(RESULT)                                               A0591280
      RETURN                                                            A0591290
       END                                                              A0591300
**** SOURCE FILE : M0000810.V02   ***
*
C.....FORTRAN SUBROUTINE             APT060...              3/1/68   GK A0600000
C                                                                       A0600010
C              FORTRAN SUBROUTINE APT060                                A0600020
C                                                                       A0600030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A GENERAL CONIC        A0600040
C              IN THE XY PLANE DEFINED BY THE COEFFICIENTS OF           A0600050
C              THE TERMS OF THE GENERAL EQUATION AX2 + BXY +            A0600060
C              CY2 + DX + EY + F = O BY THE APT STATEMENT               A0600070
C              RESULT = GCONIC/A,B,C,D,E,F                              A0600080
C                                                                       A0600090
C LINKAGE      CALL APT060 (RESULT, AN, BN, CN, DN, EN, FN)             A0600100
C                                                                       A0600110
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0600120
C                      OF THE RESULTING CONIC                           A0600130
C              AN      COEFFICIENT OF THE X2 TERM                       A0600140
C              BN      COEFFICIENT OF THE XY TERM                       A0600150
C              CN      COEFFICIENT OF THE Y2 TERM                       A0600160
C              DN      COEFFICIENT OF THE X TERM                        A0600170
C              EN      COEFFICIENT OF THE Y TERM                        A0600180
C              FN      CONSTANT TERM                                    A0600190
C                                                                       A0600200
C SUBSIDIARIES TYPE                ENTRY                                A0600210
C              SUBROUTINE          APT079                               A0600220
C              SUBROUTINE          DEFEXT                               A0600230
C                                                                       A0600240
      SUBROUTINE APT060(RESULT,AN,BN,CN,DN,EN,FN)                       A0600250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0600260
      DIMENSION RESULT(10)                                              A0600270
C                                                                       A0600280
C                                                                       A0600290
C                                                                       A0600300
      INCLUDE 'TOTAL.INC'                                               A0600441
      INCLUDE 'DEF.INC'                                                 A0600529
      INCLUDE 'DSHAR3.INC'                                              A0600609
      INCLUDE 'ZNUMBR.INC'                                              A0600705
      INCLUDE 'ISHR16.INC'                                              A0600761
      INCLUDE 'KNUMBR.INC'                                              A0600905
C                                                                       A0600960
      R(1)=AN                                                           A0600970
      R(2)=CN                                                           A0600980
      R(4)=FN                                                           A0600990
      R(6)=Z0                                                           A0601000
      R(7)=BN/Z2                                                        A0601010
      R(8)=DN/Z2                                                        A0601020
      R(9)=EN/Z2                                                        A0601030
      CALL APT079(R,KM1)                                                A0601040
      CALL DEFEXT(RESULT)                                               A0601050
      RETURN                                                            A0601060
       END                                                              A0601070
**** SOURCE FILE : M0000811.V03   ***
*
C                                                                       A0610001
C.....FORTRAN SUBROUTINE             APT061...              3/1/68   GK A0610002
C                                                                       A0610010
C              FORTRAN SUBROUTINE APT061                                A0610020
C                                                                       A0610030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A GENERAL              A0610040
C              CONIC IN THE XY PLANE BY THE COEFFICIENTS OF             A0610050
C              THE EXPRESSION OF ONE VARIABLE AS A FUNCTION OF          A0610060
C              THE OTHER                                                A0610070
C                Y = PX + Q + RX2 + SX + T OR                           A0610080
C                X = PY + Q + RY2 + SY + T                              A0610090
C              BY THE APT STATEMENTS                                    A0610100
C                   RESULT = GCONIC/P,Q,RA,S,T OR                       A0610110
C                   RESULT = GCONIC/P,Q,RA,S,T, FUNOFY                  A0610120
C                            RESPECTIVELY.                              A0610130
C                                                                       A0610140
C LINKAGE      CALL APT061 (RESULT, PM,Q,RA,SM,TM,MN,)                  A0610150
C                                                                       A0610160
C ARGUMENTS    RESULTS ARRAY TO CONTAIN THE CANONICAL FORM              A0610170
C                      OF THE RESULTING CONIC                           A0610180
C              PM      COEFFICIENT IN APPROPRIATE EQUATION              A0610190
C                      ABOVE                                            A0610200
C              Q       COEFFICIENT IN APPROPRIATE EQUATION              A0610210
C                      ABOVE                                            A0610220
C              RA      COEFFICIENT IN APPROPRIATE EQUATION              A0610230
C                      ABOVE                                            A0610240
C              SM      COEFFICIENT IN APPROPRIATE EQUATION              A0610250
C                      ABOVE                                            A0610260
C              TM      COEFFICIENT IN APPROPRIATE EQUATION              A0610270
C                      ABOVE                                            A0610280
C              MN      INTEGER EQUIVALENT OF MODIFIER                   A0610290
C                      1 IF NOT FUNOFY; 2 IF FUNOFY                     A0610300
C                                                                       A0610310
C SUBSIDIARIES TYPE                ENTRY                                A0610320
C              SUBROUTINE          APT079                               A0610330
C              SUBROUTINE          DEFEXT                               A0610340
C                                                                       A0610350
      SUBROUTINE APT061 (RESULT,PM,Q,RA,SM,TM,MN)                       A0610360
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0610370
      DIMENSION RESULT(10)                                              A0610380
C                                                                       A0610390
C                                                                       A0610400
C                                                                       A0610410
C                                                                       A0610420
      INCLUDE 'TOTAL.INC'                                               A0610561
      INCLUDE 'DEF.INC'                                                 A0610649
      INCLUDE 'DSHAR3.INC'                                              A0610729
      INCLUDE 'ZNUMBR.INC'                                              A0610825
      INCLUDE 'ISHR16.INC'                                              A0610881
      INCLUDE 'KNUMBR.INC'                                              A0611025
C                                                                       A0611080
      EQUIVALENCE (S1,SC(1)),(S2,SC(2))                                 A0611090
C                                                                       A0611100
C                                                                       A0611110
      S1=PM                                                             A0611120
      S2=Q                                                              A0611130
      I=MN                                                              A0611140
      J=K3-I                                                            A0611150
      R(I) = S1**2-RA                                                   A0611160
      R(I+7) = S1*S2-SM/Z2                                              A0611170
      R(J)=Z1                                                           A0611180
      R(J+7)=-S2                                                        A0611190
      R(4)=S2**2-TM                                                     A0611200
      R(6)=Z0                                                           A0611210
      R(7)=-S1                                                          A0611220
      CALL APT079(R,KM1)                                                A0611230
      CALL DEFEXT(RESULT)                                               A0611240
      RETURN                                                            A0611250
       END                                                              A0611260
**** SOURCE FILE : M0000812.V02   ***
*
C.....FORTRAN SUBROUTINE             APT062...              3/1/68   GK A0620000
C                                                                       A0620010
C              FORTRAN SUBROUTINE APT062                                A0620020
C                                                                       A0620030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A QUADRIC              A0620040
C              SURFACE DEFINED BY THE COEFFICIENTS OF THE               A0620050
C              GENERAL EQUATION AX2+BY2+CZ2+D+FYZ+GXZ+HXY               A0620060
C              +PX+QY+RZ = O                                            A0620070
C              BY THE FOLLOWING APT STATEMENT                           A0620080
C                RESULT = QADRIC/A,B,C,F,G,H,P,Q,R,D                    A0620090
C                                                                       A0620100
C LINKAGE      CALL APT062 (RESULT, AN,BN,C2,F,GN,H,PN,Q,RA,D)          A0620110
C                                                                       A0620120
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0620130
C                      THE RESULTING QUADRIC                            A0620140
C              AN      COEFFICIENT OF THE X2 TERM                       A0620150
C              BN      COEFFICIENT OF THE Y2 TERM                       A0620160
C              C2      COEFFICIENT OF THE Z2 TERM                       A0620170
C              F       COEFFICIENT OF THE YZ TERM                       A0620180
C              GN      COEFFICIENT OF THE XZ TERM                       A0620190
C              H       COEFFICIENT OF THE XY TERM                       A0620200
C              PN      COEFFICIENT OF THE X TERM                        A0620210
C              Q       COEFFICIENT OF THE Y TERM                        A0620220
C              RA      COEFFICIENT OF THE Z TERM                        A0620230
C              D       CONSTANT TERM                                    A0620240
C                                                                       A0620250
C SUBSIDIARIES TYPE                ENTRY                                A0620260
C              SUBROUTINE          APT079                               A0620270
C              SUBROUTINE          DEFEXT                               A0620280
C                                                                       A0620290
      SUBROUTINE APT062 (RESULT,AN,BN,C2,F,GN,H,PN,Q,RA,D)              A0620300
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0620310
      DIMENSION RESULT(10)                                              A0620320
C                                                                       A0620330
C                                                                       A0620340
C                                                                       A0620350
      INCLUDE 'TOTAL.INC'                                               A0620491
      INCLUDE 'DEF.INC'                                                 A0620579
      INCLUDE 'DSHAR3.INC'                                              A0620659
      INCLUDE 'ZNUMBR.INC'                                              A0620755
      INCLUDE 'ISHR16.INC'                                              A0620811
      INCLUDE 'KNUMBR.INC'                                              A0620955
C                                                                       A0621010
C                                                                       A0621020
C                                                                       A0621030
      R(1)=AN                                                           A0621040
      R(2)=BN                                                           A0621050
      R(3)=C2                                                           A0621060
      R(4)=D                                                            A0621070
      R(5)=F/Z2                                                         A0621080
      R(6)=GN/Z2                                                        A0621090
      R(7)=H/Z2                                                         A0621100
      R(8)=PN/Z2                                                        A0621110
      R(9)=Q/Z2                                                         A0621120
      R(10)=RA/Z2                                                       A0621130
C                                                                       A0621140
C...     CONVERT FORM TO BASE SYSTEM                                    A0621150
C                                                                       A0621160
      CALL APT079(R,KM1)                                                A0621170
C                                                                       A0621180
C...     MOVE TO RESULT                                                 A0621190
C                                                                       A0621200
      CALL DEFEXT(RESULT)                                               A0621210
      RETURN                                                            A0621220
       END                                                              A0621230
**** SOURCE FILE : M0000813.V02   ***
*
C.....FORTRAN SUBROUTINE             APT063...              3/1/68   GK A0630000
C                                                                       A0630010
C              FORTRAN SUBROUTINE APT063                                A0630020
C                                                                       A0630030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A TRANSLATION          A0630040
C              MATRIX FROM THE FOLLOWING APT STATEMENT                  A0630050
C              RESULT = MATRIX/TRANSL, D1, D2, D3                       A0630060
C                                                                       A0630070
C LINKAGE      CALL APT063 (RESULT, D1, D2, D3)                         A0630080
C                                                                       A0630090
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0630100
C                      THE RESULTING MATRIX                             A0630110
C              D1      REAL VARIABLE CONTAINING THE AMOUNT OF           A0630120
C                      TRANSLATION IN THE X DIRECTION                   A0630130
C              D2      REAL VARIABLE CONTAINING THE AMOUNT OF           A0630140
C                      TRANSLATION IN THE Y DIRECTION                   A0630150
C              D3      REAL VARIABLE CONTAINING THE AMOUNT OF           A0630160
C                      TRANSLATION IN THE Z DIRECTION                   A0630170
C                                                                       A0630180
C SUBSIDIARIES NONE                                                     A0630190
C                                                                       A0630200
      SUBROUTINE APT063 (RESULT,D1,D2,D3)                               A0630210
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0630220
      DIMENSION RESULT(12)                                              A0630230
C                                                                       A0630240
C                                                                       A0630250
C                                                                       A0630260
      INCLUDE 'TOTAL.INC'                                               A0630401
      INCLUDE 'DEF.INC'                                                 A0630489
      INCLUDE 'DSHAR3.INC'                                              A0630569
      INCLUDE 'ZNUMBR.INC'                                              A0630665
      INCLUDE 'ISHR16.INC'                                              A0630721
C                                                                       A0630770
C                                                                       A0630780
C                                                                       A0630790
C...     ROTATION MATRIX IS IDENTITY MATRIX                             A0630800
C                                                                       A0630810
      RESULT(1) = Z1                                                    A0630820
      DO 10 I =2,10                                                     A0630830
   10 RESULT(I) =R(I)                                                   A0630840
      RESULT(11) =Z1                                                    A0630850
C                                                                       A0630860
C...     ADD TRANSLATION PART OF MATRIX                                 A0630870
C                                                                       A0630880
      RESULT(4) = D1                                                    A0630890
      RESULT(8) = D2                                                    A0630900
      RESULT(12) = D3                                                   A0630910
      RETURN                                                            A0630920
       END                                                              A0630930
**** SOURCE FILE : M0000814.V03   ***
*
C.....FORTRAN SUBROUTINE  ....APT064         8/68                    RN A0640001
C.....FORTRAN SUBROUTINE             APT064...              3/1/68   GK A0640002
C                                                                       A0640010
C              FORTRAN SUBROUTINE APT064                                A0640020
C                                                                       A0640030
C PURPOSE      TO GENERATE A ROTATION MATRIX WITHIN A COORDINATE        A0640040
C              PLANE FROM THE FOLLOWING APT STATEMENT                   A0640050
C              RESULT = MATRIX/****, BETA                               A0640060
C                **** = XYROT, YZROT, OR ZXROT                          A0640070
C                                                                       A0640080
C LINKAGE      CALL APT064 (RESULT, MN, BETA)                           A0640090
C                                                                       A0640100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0640110
C                      THE RESULTING MATRIX                             A0640120
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0640130
C                      1 = XYROT     2 = YZROT    3 = ZXROT             A0640140
C              BETA    REAL VARIABLE CONTAING THE VALUE OF              A0640150
C                      ROTATION ANGLE                                   A0640160
C                                                                       A0640170
C SUBSIDIARIES TYPE                ENTRY                                A0640180
C              REAL FUNCTION       COS                                  A0640190
C              REAL FUNCTION       SIN                                  A0640200
C              REAL FUNCTION       MOD                                  A0640210
C                                                                       A0640220
      SUBROUTINE APT064 (RESULT,MN,BETA)                                A0640230
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0640240
      DIMENSION RESULT(4,3)                                             A0640250
C                                                                       A0640260
C                                                                       A0640270
C                                                                       A0640280
      INCLUDE 'TOTAL.INC'                                               A0640421
      INCLUDE 'DEF.INC'                                                 A0640509
      INCLUDE 'DSHAR3.INC'                                              A0640589
      INCLUDE 'ZNUMBR.INC'                                              A0640685
      INCLUDE 'ISHR16.INC'                                              A0640741
      INCLUDE 'KNUMBR.INC'                                              A0640885
C                                                                       A0640940
      EQUIVALENCE (S1,SC(1)),  (S2,SC(2))                               A0640950
C                                                                       A0640960
C                                                                       A0640970
      S1=BETA*DEGRAD                                                    A0640980
      S2=DCOS(S1)                                                       A0640990
      S1=DSIN(S1)                                                       A0641000
      IF (DABS(S2) .LT. Z1EM9) S2=Z0                                    A0641001
      IF (DABS(S1) .LT. Z1EM9) S1=Z0                                    A0641002
      DO 10 I=1,4                                                       A0641010
      DO 10 K=1,3                                                       A0641020
   10 RESULT(I,K) = Z0                                                  A0641030
C                                                                       A0641040
C...     FORM ROTATION MATRIX                                           A0641050
C                                                                       A0641060
      J=MN                                                              A0641070
      K=MOD(J,K3)+K1                                                    A0641080
      I=MOD(K,K3)+K1                                                    A0641090
      RESULT(J,J) = S2                                                  A0641100
      RESULT(K,K) = S2                                                  A0641110
      RESULT(J,K) = S1                                                  A0641120
      RESULT(K,J) = -S1                                                 A0641130
      RESULT(I,I) = Z1                                                  A0641140
      RETURN                                                            A0641150
       END                                                              A0641160
**** SOURCE FILE : M0000815.V02   ***
*
C.....FORTRAN SUBROUTINE             APT065...              3/1/68   GK A0650000
C                                                                       A0650010
C              FORTRAN SUBROUTINE APT065                                A0650020
C                                                                       A0650030
C PURPOSE      TO GENERATE A MATRIX DEFINED AS A POINT AND TWO          A0650040
C              VECTORS BY THE FOLLOWING APT STATEMENT                   A0650050
C              RESULT = MATRIX/PT,V1,V2                                 A0650055
C                                                                       A0650060
C LINKAGE      CALL APT065 (RESULT, PT, V1, V2)                         A0650065
C                                                                       A0650070
C ARGUMENTS    RESULT ARRAY TO CONTAIN THE CANONICAL FORM OF            A0650075
C                     THE RESULTING MATRIX                              A0650080
C              PT     ARRAY CONTAINING THE CANONICAL FORM OF            A0650085
C                     THE INPUT POINT                                   A0650090
C              V1     ARRAY CONTAINING THE CANONICAL FORM OF            A0650095
C                     THE FIRST INPUT VECTOR                            A0650100
C              V2     ARRAY CONTAINING THE CANONICAL FORM OF            A0650105
C                     THE SECOND INPUT VECTOR                           A0650110
C                                                                       A0650115
C SUBSIDIARIES TYPE               ENTRY                                 A0650120
C              SUBROUTINE         CROSS                                 A0650125
C              SUBROUTINE         DOTF                                  A0650130
C              SUBROUTINE         VNORM                                 A0650135
C              LOGICAL FUNCTION   ZVECT                                 A0650140
C              LOGICAL FUNCTION   CKDEF                                 A0650145
C                                                                       A0650150
      SUBROUTINE APT065 (RESULT,PT,V1,V2)                               A0650155
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0650160
      DIMENSION RESULT(12),PT(3),V1(3),V2(3)                            A0650165
C                                                                       A0650170
C                                                                       A0650175
C                                                                       A0650180
      INCLUDE 'TOTAL.INC'                                               A0650236
      LOGICAL CKDEF                                                     A0650240
      INCLUDE 'DEF.INC'                                                 A0650284
      INCLUDE 'DSHAR3.INC'                                              A0650314
      INCLUDE 'LDEF.INC'                                                A0650329
      INCLUDE 'ISHR16.INC'                                              A0650350
      INCLUDE 'KNUMBR.INC'                                              A0650404
C                                                                       A0650460
      UNFLAG=CKDEF(PT).OR.CKDEF(V1).OR.CKDEF(V2)                        A0650465
C                                                                       A0650470
C...     CALCULATE A VECTOR DEFINING Z,Y,X-AXIS                         A0650475
C                                                                       A0650480
      CALL CROSS(V1,V2,T1(9))                                           A0650485
C                                                                       A0650490
      CALL CROSS (T1(9),V1,T1(5))                                       A0650495
      DO 10 J=1,3                                                       A0650500
   10 T1(J)=V1(J)                                                       A0650505
C                                                                       A0650510
C...  CALCULATE DISTANCES FROM ORIGIN TO YZPLANE,ZXPLANE,AND XYPLANE    A0650515
C                                                                       A0650520
      DO 20 J=1,9,4                                                     A0650525
      CALL VNORM(T1(J),T1(J))                                           A0650530
      CALL DOTF(T1(J+3),T1(J),PT)                                       A0650535
   20 T1(J+3)=-T1(J+3)                                                  A0650540
C                                                                       A0650545
C...     INVERSE MATRIX                                                 A0650550
C                                                                       A0650555
      CALL APT067(RESULT,T1)                                            A0650560
      RETURN                                                            A0650565
      END                                                               A0650570
**** SOURCE FILE : M0000816.V02   ***
*
C...  FORTRAN SUBROUTINE               APT066                           A0660000
C                                                                       A0660010
C              FORTRAN SUBROUTINE APT066                                A0660020
C                                                                       A0660030
C PURPOSE      TO GENERATE A MATRIX DEFINED AS THE PRODUCT OF           A0660040
C              TWO MATRICES BY THE FOLLOWING APT STATEMENT              A0660050
C              RESULT = MATRIX/M1, M2                                   A0660060
C                                                                       A0660070
C LINKAGE      CALL APT066(RESULT,M1,M2,MN)                             A0660080
C                                                                       A0660090
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM              A0660100
C                      OF THE RESULTING MATRIX                          A0660110
C              M1      ARRAY CONTAINING THE CANONICAL FORM OF           A0660120
C                      THE FIRST INPUT MATRIX                           A0660130
C              M2      ARRAY CONTAINING THE CANONICAL FORM OF           A0660140
C                      THE SECOND INPUT MATRIX                          A0660150
C              MN      INTEGER SET TO ONE IF APT III ORDER OF           A0660160
C                      MULTIPLICATION FOR THIS CASE IS OPPOSITE TO      A0660170
C                      APT IV ORDER                                     A0660180
C                                                                       A0660190
      SUBROUTINE APT066(RESULT,M1,M2,MN)                                A0660200
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0660210
      DIMENSION RESULT(12),M1(12),M2(12)                                A0660220
      DOUBLE PRECISION M1                                               A0660230
      DOUBLE PRECISION M2                                               A0660240
C                                                                       A0660250
      INCLUDE 'TOTAL.INC'                                               A0660391
      INCLUDE 'DEF.INC'                                                 A0660479
      INCLUDE 'DSHAR3.INC'                                              A0660485
      INCLUDE 'LDEF.INC'                                                A0660559
      INCLUDE 'ISHR16.INC'                                              A0660615
      INCLUDE 'KNUMBR.INC'                                              A0660757
C                                                                       A0660758
      LOGICAL SWITCH                                                    A0660810
C                                                                       A0660820
C        CHECK FOR APT III ORDER OF MATRIX MULTIPLICATION               A0660822
C                                                                       A0660824
      SWITCH=.FALSE.                                                    A0660826
      IF(ALTMLT .AND. (MN.EQ.1))SWITCH=.TRUE.                           A0660828
C                                                                       A0660830
C...     MAKE MATRIX SQUARE,TRANSFER                                    A0660840
C                                                                       A0660850
      DO 10 I=1,3                                                       A0660860
C                                                                       A0660861
      L11=4*(I-1)                                                       A0660870
      DO 10 J=1,4                                                       A0660880
      J11=L11+J                                                         A0660890
      IF(SWITCH)GO TO 5                                                 A0660895
      RESULT(J11)=M2(L11+1)*M1(J)+M2(L11+2)*M1(J+4)+M2(L11+3)*M1(J+8)   A0660900
      IF(J.EQ.4) RESULT(J11)=RESULT(J11)+M2(L11+4)                      A0660910
      GO TO 10                                                          A0660912
    5 RESULT(J11)=M1(L11+1)*M2(J)+M1(L11+2)*M2(J+4)+M1(L11+3)*M2(J+8)   A0660914
      IF(J.EQ.4)RESULT(J11)=RESULT(J11)+M1(L11+4)                       A0660916
   10 CONTINUE                                                          A0660920
      RETURN                                                            A0660960
       END                                                              A0660970
**** SOURCE FILE : M0000817.V03   ***
*
C                                                                       A0670001
C.....FORTRAN SUBROUTINE             APT067...              3/1/68   GK A0670002
C                                                                       A0670010
C              FORTRAN SUBROUTINE APT067                                A0670020
C                                                                       A0670030
C PURPOSE      TO GENERATE A MATRIX DEFINED AS THE INVERSE OF           A0670040
C              A GIVEN MATRIX OF ROTATION AND/OR TRANSLATION BY         A0670050
C              THE FOLLOWING APT STATEMENT                              A0670060
C              RESULT = MATRIX/INVERS, MX                               A0670070
C                                                                       A0670080
C LINKAGE      CALL APT067 (RESULT, MX)                                 A0670090
C                                                                       A0670100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0670110
C                      THE RESULTING MATRIX                             A0670120
C              MX      ARRAY CONTAINING THE CANONICAL FORM OF           A0670130
C                      THE INPUT MATRIX                                 A0670140
C                                                                       A0670150
C SUBSIDIARIES NONE                                                     A0670160
C                                                                       A0670170
      SUBROUTINE APT067 (RESULT,MX)                                     A0670180
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0670190
      DIMENSION RESULT(4,3),ST(4,3),MX(4,3)                             A0670200
      DOUBLE PRECISION MX                                               A0670210
C                                                                       A0670220
C                                                                       A0670230
C                                                                       A0670240
      INCLUDE 'TOTAL.INC'                                               A0670381
      INCLUDE 'DEF.INC'                                                 A0670469
      INCLUDE 'DSHAR3.INC'                                              A0670549
      INCLUDE 'ZNUMBR.INC'                                              A0670645
      INCLUDE 'ISHR16.INC'                                              A0670701
C                                                                       A0670750
C                                                                       A0670760
      EQUIVALENCE (ST(1,1),SC(1))                                       A0670770
C                                                                       A0670780
      DO 10 I=1,3                                                       A0670790
      ST(4,I) = Z0                                                      A0670800
      DO 10 J=1,3                                                       A0670810
      ST(J,I) = MX(I,J)                                                 A0670820
   10 ST(4,I) = ST(4,I) -ST(J,I) *MX(4,J)                               A0670830
      DO 20 I=1,4                                                       A0670840
      DO 20 J=1,3                                                       A0670850
   20 RESULT(I,J)=ST(I,J)                                               A0670860
      RETURN                                                            A0670870
       END                                                              A0670880
**** SOURCE FILE : M0000818.V03   ***
*
C                                                                       A0680001
C.....FORTRAN SUBROUTINE             APT068...              3/1/68   GK A0680002
C                                                                       A0680010
C              FORTRAN SUBROUTINE APT068                                A0680020
C                                                                       A0680030
C PURPOSE      TO GENERATE A MATRIX DEFINED AS THREE PLANES BY          A0680040
C              THE FOLLOWING APT STATEMENT                              A0680050
C              RESULT = MATRIX/PL1, PL2, PL3                            A0680060
C                                                                       A0680070
C LINKAGE      CALL APT068 (RESULT, PL1, PL2, PL3)                      A0680080
C                                                                       A0680090
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0680100
C                      THE RESULTING MATRIX                             A0680110
C              PL1     ARRAY CONTAINING THE CANONICAL FORM OF           A0680120
C                      THE FIRST INPUT PLANE                            A0680130
C              PL2     ARRAY CONTAINING THE CANONICAL FORM OF           A0680140
C                      THE SECOND INPUT PLANE                           A0680150
C              PL3     ARRAY CONTAINING THE CANONICAL FORM OF           A0680160
C                      THE THIRD INPUT PLANE                            A0680170
C                                                                       A0680180
C SUBSIDIARIES TYPE                ENTRY                                A0680190
C              LOGICAL FUNCTION    CKDEF                                A0680200
C                                                                       A0680210
      SUBROUTINE APT068 (RESULT,PL1,PL2,PL3)                            A0680220
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0680230
      DIMENSION RESULT(12),PL1(4),PL2(4),PL3(4)                         A0680240
      LOGICAL CKDEF                                                     A0680250
C                                                                       A0680260
C                                                                       A0680270
C                                                                       A0680280
      INCLUDE 'TOTAL.INC'                                               A0680421
      INCLUDE 'DEF.INC'                                                 A0680521
      INCLUDE 'LDEF.INC'                                                A0680571
      INCLUDE 'IDEF.INC'                                                A0680661
C                                                                       A0680662
      DIMENSION  T(12)                                                  A0680670
C                                                                       A0680690
C                                                                       A0680700
C                                                                       A0680710
C                                                                       A0680720
      DO 10 I=1,4                                                       A0680730
      T(I)=PL1(I)                                                       A0680740
      T(I+4)=PL2(I)                                                     A0680750
   10 T(I+8)=PL3(I)                                                     A0680760
      T(4)=-T(4)                                                        A0680761
      T(8)=-T(8)                                                        A0680762
      T(12)=-T(12)                                                      A0680763
      UNFLAG=CKDEF(R).OR.CKDEF(R(5)).OR.CKDEF(R(9))                     A0680770
      CALL APT067(RESULT,T)                                             A0680780
C                                                                       A0680790
      RETURN                                                            A0680800
       END                                                              A0680810
**** SOURCE FILE : M0000819.V03   ***
*
C.....FORTRAN SUBROUTINE  ....APT069         8/68                    RN A0690001
C.....FORTRAN SUBROUTINE              APT069                            A0690002
C                                                                       A0690010
C              FORTRAN SUBROUTINE APT069                                A0690020
C                                                                       A0690030
C PURPOSE      TO GENERATE A MATRIX OF ROTATION ABOUT                   A0690040
C              A POINT AND VECTOR BY THE FOLLOWING APT STATEMENT        A0690050
C              RESULT = MATRIX/ PT1,VEC1, ANGLE                         A0690060
C                                                                       A0690070
C LINKAGE      CALL APT069 (RESULT,PT,VT1,BETA)                         A0690080
C                                                                       A0690090
C ARGUMENTS   RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF            A0690100
C                      THE RESULTING MATRIX                             A0690110
C              PT      ARRAY CONTAINING THE CANONICAL FORM OF           A0690120
C                      INPUT POINT                                      A0690130
C              VT1     ARRAY CONTAINING THE CANONICAL FORM OF           A0690140
C                      INPUT VECTOR                                     A0690150
C              BETA    REAL VARIABLE CONTAINING THE VALUE OF            A0690160
C                      ROTATION ANGLE (DEGREES)                         A0690170
C                                                                       A0690180
C SUBSIDIARIES TYPE                ENTRY                                A0690190
C              SUBROUTINE          VNORM                                A0690200
C              LOGICAL FUNCTION    CKDEF                                A0690210
C              SUBROUTINE          DOTF                                 A0690220
C              REAL    FUNCTION    DCOS                                 A0690230
C              REAL    FUNCTION    DSIN                                 A0690240
C                                                                       A0690250
      SUBROUTINE APT069(RESULT,PT,VT1,BETA)                             A0690260
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0690270
      DIMENSION  RESULT(12),PT(3),VT1(3)                                A0690280
C                                                                       A0690290
C                                                                       A0690300
C                                                                       A0690310
      INCLUDE 'TOTAL.INC'                                               A0690421
      LOGICAL CKDEF                                                     A0690430
      INCLUDE 'DEF.INC'                                                 A0690550
      INCLUDE 'DSHAR3.INC'                                              A0690640
      INCLUDE 'ZNUMBR.INC'                                              A0690748
      INCLUDE 'LDEF.INC'                                                A0690793
      INCLUDE 'ISHR16.INC'                                              A0690856
      INCLUDE 'KNUMBR.INC'                                              A0691018
C                                                                       A0691050
      EQUIVALENCE (SC(1),ALP,D1),(SC(2),COSA),(SC(3),SINA),(SC(4),OMC)  A0691060
      UNFLAG=CKDEF(PT).OR.CKDEF(VT1)                                    A0691070
      CALL VNORM(VT1,V)                                                 A0691080
      ALP=BETA*DEGRAD                                                   A0691090
      COSA=DCOS(ALP)                                                    A0691100
      SINA=DSIN(ALP)                                                    A0691110
      IF (DABS(COSA) .LT. Z1EM9) COSA=Z0                                A0691111
      IF (DABS(SINA) .LT. Z1EM9) SINA=Z0                                A0691112
      OMC =Z1-COSA                                                      A0691120
      RESULT( 1)=COSA                                                   A0691130
      RESULT( 2)=-V(3)*SINA                                             A0691140
      RESULT( 3)=V(2)*SINA                                              A0691150
      RESULT( 5)=V(3)*SINA                                              A0691160
      RESULT( 6)=COSA                                                   A0691170
      RESULT( 7)=-V(1)*SINA                                             A0691180
      RESULT( 9)=-V(2)*SINA                                             A0691190
      RESULT(10)=V(1)*SINA                                              A0691200
      RESULT(11)=COSA                                                   A0691210
      DO 10 J=1,3                                                       A0691220
      D1=V(J)                                                           A0691230
      RESULT(J)=V(1)*OMC*D1+RESULT(J)                                   A0691240
      RESULT(J+4)=V(2)*OMC*D1+RESULT(J+4)                               A0691250
   10 RESULT(J+8)=V(3)*OMC*D1+RESULT(J+8)                               A0691260
      J=0                                                               A0691270
      DO 20 I=1,3                                                       A0691280
      CALL DOTF(RESULT(J+4),RESULT(J+1),PT(1))                          A0691290
      RESULT(J+4)=PT(I)-RESULT(J+4)                                     A0691300
   20 J=J+4                                                             A0691310
      RETURN                                                            A0691320
      END                                                               A0691330
**** SOURCE FILE : M0002232.V06   ***
*
C                                                                       A0700001
C.....FORTRAN SUBROUTINE  ....APT070         8/68                 HG,RN A0700002
C                                                                       A0700010
C              FORTRAN SUBROUTINE APT070                                A0700020
C                                                                       A0700030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A LINE THRU            A0700040
C              A POINT AND TANGENT OR NORMAL TO A TABCYL IN             A0700050
C              THE XY PLANE DEFINED BY THE FOLLOWING APT                A0700060
C              STATEMENT                                                A0700070
C                RESULT = LINE/PT,TANTO,TAB,PT2                         A0700080
C                RESULT = LINE/PT,PERPTO,TAB,PT2                        A0700090
C                                                                       A0700100
C LINKAGE      CALL APT070 (RESULT,PT,MM,TAB,PT2)                       A0700110
C                                                                       A0700120
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0700130
C                      THE RESULTING LINE                               A0700140
C              PT      ARRAY CONTAINING THE CANONICAL FORM OF           A0700150
C                      THE INPUT POINT                                  A0700160
C              MM      INTEGER EQUIVALENT OF THE MODIFIER               A0700170
C                          1=TANTO    2=PERPTO                          A0700180
C              TAB     ARRAY CONTAINING THE CANONICAL FORM OF           A0700190
C                      THE INPUT TABCYL                                 A0700200
C              PT2     ARRAY CONTAINING THE CANONICAL FORM OF           A0700210
C                      THE INPUT POINT                                  A0700220
C                                                                       A0700230
C SUBSIDIARIES TYPE                ENTRY                                A0700240
C              SUBROUTINE          TRANRO                               A0700250
C              SUBROUTINE          POLYR                                A0700260
C              SUBROUTINE          APT094                               A0700270
C              LOGICAL FUNCTION    CKDEF                                A0700280
C              SUBROUTINE          SCHTB                                A0700290
C                                                                       A0700300
C                                                                       A0700310
C                                                                       A0700320
      SUBROUTINE APT070(RESULT,PT,MM,TAB,PT2)                           A0700330
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0700340
      DIMENSION RESULT(4),PT(3),TAB(2),PT2(3)                           A0700350
      INCLUDE 'BLANKCOM.INC'                                            A0700365
      DIMENSION D(COMSIZ),INE(3),AA(22)                                 A0700370
      LOGICAL CKDEF                                                     A0700380
C                                                                       A0700384
C...  VARIABLES XA,YA,RA,XB,YB,XC,YC,XD,YD,TOL,EQU2,SLOP,R1,RY,BORSLP,  A0700385
C...  X11,Y11,EQ1,EQ2 & DELTA WERE ALL EQUIVALENCED TO SUCCESSIVE       A0700386
C...  ELEMENTS OF SC.  AS THEIR USEAGE SEEMED TO BE LOCAL, THE          A0700387
C...  EQUIVALENCE HAS BEEN REMOVED.                                     A0700388
C                                                                       A0700389
      EQUIVALENCE(CANON(1),D(1))                                        A0700440
      DOUBLE PRECISION Q                                                A0700450
C                                                                       A0700470
C                                                                       A0700480
      INCLUDE 'TOTAL.INC'                                               A0700591
      INCLUDE 'DEF.INC'                                                 A0700720
      INCLUDE 'DSHAR3.INC'                                              A0700810
      INCLUDE 'ZNUMBR.INC'                                              A0700918
      INCLUDE 'LDEF.INC'                                                A0700954
      INCLUDE 'IDEF.INC'                                                A0700975
      INCLUDE 'ISHR16.INC'                                              A0701026
      INCLUDE 'KNUMBR.INC'                                              A0701033
C                                                                       A0701187
      SMAL(Q)=DSIGN(DMAX1(DABS(Q),Z1EM9),Q)                             A0701188
      CUBIC(X)=((AA(1)*X+AA(2))*X+AA(3))*X+AA(4)                        A0701220
C                                                                       A0701230
      DO 10 I=1,2                                                       A0701250
      P(I)=PT2(I)                                                       A0701260
      V(I)=PT(I)                                                        A0701270
   10 C(I)=TAB(I)                                                       A0701280
      UNFLAG = CKDEF(P).OR.CKDEF(V).OR.CKDEF(C)                         A0701290
      IF (UNFLAG) GO TO 9998                                            A0701300
C                                                                       A0701310
C... RETRIEVE TABCYL EXTERNAL CANONICAL FORM. STORE CANON INDEX IN J11. A0701320
C                                                                       A0701330
      CALL APT094(3,TAB(1),J11)                                         A0701340
      IF(CKDEF(TAB(1))) GO TO 9998                                      A0701350
C                                                                       A0701360
C...  FIND PART OF TABCYL CLOSEST TO INPUT P,USING SCHTB                A0701370
C                                                                       A0701380
      CALL SCHTB(CANON(J11-1))                                          A0701390
      IHU=CANON(J11+11)+Z1EM2                                           A0701400
      ITRY=K0                                                           A0701410
      NT=(CANON(J11+10)-Z1)*7.0+21.1                                    A0701420
      J11=J11-1                                                         A0701430
      IHU=IHU+J11-K1                                                    A0701440
      GO TO 2                                                           A0701450
C.....TRANSLATE AND ROTATE INTO COORDINATE SYSTEM OF THE SELECTED       A0701460
C.....TABCYL INTERBAL                                                   A0701470
C                                                                       A0701480
   12 IF(ITRY-7) 2,13,13                                                A0701490
    2 XA=D(IHU+7)-D(IHU)                                                A0701500
      IHUT=IHU                                                          A0701510
      IF(MM.NE.1) GO TO 412                                             A0701520
  411 ITE=J11+NT-16                                                     A0701530
      IZT=J11+13                                                        A0701540
      GO TO 413                                                         A0701550
C.....EXTENSION INTERVALS ARE INCLUDED IN THE NORMAL LINE SEARCH.       A0701560
  412 ITE=J11+NT-9                                                      A0701570
      IZT=J11+6                                                         A0701580
  413 IZ=1                                                              A0701590
      YA=D(IHU+8)-D(IHU+1)                                              A0701600
      RA=-DATAN(YA/SMAL(XA))                                            A0701610
      IF(XA)1000,1001,1001                                              A0701620
 1000 RA=RA+PI                                                          A0701630
 1001 CALL TRANRO(XA,YA,XB,YB,RA,IZ)                                    A0701640
      XC=V(1)-D(IHU)                                                    A0701650
      YC=V(2)-D(IHU+1)                                                  A0701660
      CALL TRANRO(XC,YC,XD,YD,RA,IZ)                                    A0701670
C                                                                       A0701680
C.... TEST TO SEE IF GIVEN POINT IS ON OR OFF TABCYL                    A0701690
C                                                                       A0701700
      TOL=Z1EM5                                                         A0701710
      IF(XB+TOL-XD) 206,71,71                                           A0701720
   71 IF(XD+TOL) 206,72,72                                              A0701730
   72 EQU2=D(IHU+2)*(XD**3)+D(IHU+3)*(XD**2)-(D(IHU+2)*D(IHU+4)+D(IHU+3)A0701740
     C)*(D(IHU+4)*XD)                                                   A0701750
      IF(DABS(YD-EQU2)-TOL) 70,70,206                                   A0701760
  206 IF(MM.NE.1) GO TO 207                                             A0701770
      GO TO 73                                                          A0701780
   70 SLOP=Z3 *D(IHU+2)*XD**2+Z2*D(IHU+3)*XD-(D(IHU+2)*D(IHU+4)+D(IHU+3)A0701790
C---    CORRECTION FOR LINE/PT,PERPTO,TAB,REF                           A0701800
     1 )*D(IHU+4)                                                       A0701801
      IF(MM.EQ.2) GO TO 200                                             A0701810
  290 IF(SLOP) 291,76,291                                               A0701820
  291 IF(DABS(SLOP)-Z1) 76,74,74                                        A0701830
   74 R1=XD-Z1/SLOP                                                     A0701840
      RY=YD-Z1                                                          A0701850
      GO TO 79                                                          A0701860
   76 R1=XD-Z1                                                          A0701870
      RY=YD-SLOP                                                        A0701880
      GO TO 79                                                          A0701890
  200 IF(DABS(SLOP)-Z1EM6) 201,202,202                                  A0701900
  201 IF(SLOP) 203,204,204                                              A0701910
  203 BORSLP=9999999.                                                   A0701920
      GO TO 205                                                         A0701930
  204 BORSLP=-9999999.                                                  A0701940
      GO TO 205                                                         A0701950
  202 BORSLP=-1.0/SLOP                                                  A0701960
  205 SLOP=BORSLP                                                       A0701970
      GO TO 290                                                         A0701980
C                                                                       A0701990
C.....CALCULATE COEFFICIENTS OF THE CUBIC EQUATION AND SOLVE FOR        A0702000
C     THE POINTS OF TANGENCY                                            A0702010
C                                                                       A0702020
   73 AA(1)=Z2*D(IHU+2)                                                 A0702030
      IF(DABS(AA(1))-1.0D-14) 1236,1237,1237                            A0702040
 1236 AA(1)=DSIGN(1.0D-14,AA(1))                                        A0702050
 1237 AA(2)=D(IHU+3)-Z3*D(IHU+2)*XD                                     A0702060
      AA(3)=-Z2*D(IHU+3)*XD                                             A0702070
      AA(4)=YD+(D(IHU+2)*D(IHU+4)+D(IHU+3))*(D(IHU+4)*XD)               A0702080
      DO 16 I=1,22                                                      A0702090
   16 T(I)=Z0                                                           A0702100
      IFALL=K0                                                          A0702110
      II=K3                                                             A0702120
      NN=K7                                                             A0702130
      GO TO 500                                                         A0702140
  540    CONTINUE                                                       A0702150
C                                                                       A0702160
C.....TEST FOR ERRORS                                                   A0702170
C                                                                       A0702180
   21 IF(IFALL.EQ.K0) GO TO 3                                           A0702190
      IERROR=75                                                         A0702200
      GO TO 9999                                                        A0702210
C                                                                       A0702220
C.....ROOTS FOUND OK, TEST THEIR POSITIONS WITH RESPECT TO THE          A0702230
C.....BOUNDARY POINTS OF THE INTERVAL                                   A0702240
C                                                                       A0702250
    3 IT=-1                                                             A0702260
      LUCK=K0                                                           A0702270
      DO 24 I=1,3                                                       A0702280
      INE(I)=K0                                                         A0702290
      IT=IT+K2                                                          A0702300
      IF(T(IT+1)) 24,30,24                                              A0702310
   30 IF(T(IT)+Z1EM6) 24,24,25                                          A0702320
   25 IF(T(IT)*(XB-T(IT))) 24,26,26                                     A0702330
   26 LUCK=LUCK+K1                                                      A0702340
      INE(I)=IT                                                         A0702350
   24 CONTINUE                                                          A0702360
      IF(LUCK-1) 27,28,4                                                A0702370
C                                                                       A0702380
C.....MULTIPLE TANGENCY POINTS IN THE INTERVAL                          A0702390
C                                                                       A0702400
    4 XA = D(IHU+7)-D(IHU)                                              A0702430
      YA=D(IHU+8)-D(IHU+1)                                              A0702440
      RA=-DATAN(YA/SMAL(XA))                                            A0702450
      IF(XA) 1002,1003,1003                                             A0702460
 1002 RA=RA+PI                                                          A0702470
 1003 IT=-1                                                             A0702480
      IZ=-1                                                             A0702490
      DO 301 I=1,3                                                      A0702500
      IT=IT+K2                                                          A0702510
      IF(INE(I)) 299,301,299                                            A0702520
  299 R1=T(IT)                                                          A0702530
      RY=D(IHU+2)*(R1**3)+D(IHU+3)*(R1**2)-(D(IHU+2)*D(IHU+4)+D(IHU+3)) A0702540
     C *(D(IHU+4)*R1)                                                   A0702550
      CALL TRANRO (R1,RY,XA,YA,RA,IZ)                                   A0702560
      R1=XA+D(IHU)                                                      A0702570
      RY=YA+D(IHU+1)                                                    A0702580
  301 CONTINUE                                                          A0702600
      IERROR=73                                                         A0702620
      GO TO 9999                                                        A0702630
C                                                                       A0702640
C.....TEST FOR NORMAL LINE WHEN GIVEN POINT                             A0702650
C     IS NOT A POINT ON THE TABCYL                                      A0702660
C     CALCULATE COEFFICIENTS FOR A FIFTH-ORDER EQUATION                 A0702670
C     WHICH DEFINES A POINT ON THE TABCYL INTERVAL (CUBIC EQUATION)     A0702680
C     WHERE THE NORMAL TO THE INTERVAL PASSES THRU THE GIVEN POINT.     A0702690
C                                                                       A0702700
  207 T1(1)=Z3*(D(IHU+2)**2)                                            A0702710
      T1(2)=Z5*D(IHU+2)*D(IHU+3)                                        A0702720
      T1(3)=4.0*D(IHU+2)*(ZM1*(D(IHU+2)*D(IHU+4)+D(IHU+3))*D(IHU+4))    A0702730
     C +Z2*(D(IHU+3)**2)                                                A0702740
      T1(4)=Z3*D(IHU+3)*(-(D(IHU+2)*D(IHU+4)+D(IHU+3))*D(IHU+4))        A0702750
     C -Z3*D(IHU+2)*YD                                                  A0702760
      T1(5)=(-(D(IHU+2)*D(IHU+4)+D(IHU+3))*D(IHU+4))**2                 A0702770
     C -Z2*D(IHU+3)*YD+Z1                                               A0702780
      T1(6)=XD-YD*(D(IHU+2)*D(IHU+4)+D(IHU+3))*D(IHU+4)                 A0702790
      T1(7)=Z5*T1(1)                                                    A0702800
      T1(8)=4.0*T1(2)                                                   A0702810
      T1(9)=Z3*T1(3)                                                    A0702820
      T1(10)=Z2*T1(4)                                                   A0702830
      T1(11)=T1(5)                                                      A0702840
C.....(X11,Y11) IS THE END POINT OF THE INTERVAL BEING                  A0702850
C.....CONSIDERED THAT IS NEAREST TO THE SPECIFIED POINT.                A0702860
      CALL TRANRO (D(NT),D(NT+1),X11,Y11,RA,IZ)                         A0702870
      IF(X11) 40,44,41                                                  A0702880
   40 X11=Z0                                                            A0702890
      GO TO 44                                                          A0702900
   41 IF(X11-Z5EM1*XB) 40,44,43                                         A0702910
   43 X11=XB                                                            A0702920
C.....NEWTONS METHOD IS USED TO SOLVE THE FIFTH ORDER                   A0702930
C     EQUATION. X11 IS THE INITIAL ESTIMATE OF THE ROOT.                A0702940
   44 DO 45 J=1,200                                                     A0702950
      EQ1=((((T1(1)*X11+T1(2))*X11+T1(3))*X11+T1(4))*X11+T1(5))*X11     A0702960
     C     -T1(6)                                                       A0702970
      EQ2=(((T1(7)*X11+T1(8))*X11+T1(9))*X11+T1(10))*X11+T1(11)         A0702980
      IF(Z1) 46,461,461                                                 A0702990
  461 CONTINUE                                                          A0703000
      DELTA=-EQ1/EQ2                                                    A0703010
      IF(DABS(DELTA)-3.0D-6) 47,46,46                                   A0703020
   46 X11=X11+DELTA                                                     A0703030
   45 CONTINUE                                                          A0703040
      GO TO 27                                                          A0703050
   47 IF(X11+Z5EM6) 27,112,112                                          A0703060
  112 IF((XB+Z5EM6)-X11) 27,113,113                                     A0703070
  113 Y11= (D(IHU+2)*X11+D(IHU+3))*X11*X11-(D(IHU+2)*D(IHU+4)+D(IHU+3)) A0703080
     C    *(D(IHU+4)*X11)                                               A0703090
      R1=X11                                                            A0703100
      RY=Y11                                                            A0703110
      GO TO 79                                                          A0703120
C                                                                       A0703130
C.....TANGENCY POINT NOT FOUND OR NOT IN INTERVAL,                      A0703140
C     SET UP FOR RE-TRY UNTIL 3 INTERVALS ON EACH SIDE OF THE INITIAL   A0703150
C     INTERVAL HAVE BEEN TRIED------A TOTAL OF 7 INTERVALS.             A0703160
C.....  (EXTENSION INTERVALS ARE INCLUDED FOR NORMAL LINE ONLY)         A0703170
C                                                                       A0703180
   27 ITRY=ITRY+1                                                       A0703190
      GO TO (29,900,904,905,906,907,13),ITRY                            A0703200
   29 IHU=IHU+7                                                         A0703210
  902 IF(IHU-ITE) 12,27,27                                              A0703220
  900 IHU=IHU-14                                                        A0703230
  903 IF(IHU-IZT) 27,27,12                                              A0703240
  904 IHU=IHU+21                                                        A0703250
      GO TO 902                                                         A0703260
  905 IHU=IHU-28                                                        A0703270
      GO TO 903                                                         A0703280
  906 IHU=IHU+35                                                        A0703290
      GO TO 902                                                         A0703300
  907 IHU=IHU-42                                                        A0703310
      GO TO 903                                                         A0703320
   13 IF(MM.NE.1) GO TO 408                                             A0703330
      IERROR=74                                                         A0703340
      GO TO 9999                                                        A0703350
  408 IERROR=74                                                         A0703360
      GO TO 9999                                                        A0703370
C                                                                       A0703380
C.....TANGENCY POINT FOUND, CALCULATE SECOND COORDINATE AND TRANSFORM   A0703390
C     THE POINT BACK TO THE XY-PLANE                                    A0703400
C                                                                       A0703410
   28 DO 32 I=1,3                                                       A0703420
      IF(INE(I).NE.0) GO TO 33                                          A0703430
   32 CONTINUE                                                          A0703440
   33 INZ=INE(I)                                                        A0703450
      R1=T(INZ)                                                         A0703460
    9 RY=(D(IHU+2)*R1+D(IHU+3))*R1**2                                   A0703470
     C   -(D(IHU+2)*D(IHU+4)+D(IHU+3))*(D(IHU+4)*R1)                    A0703480
   79 IZ=-1                                                             A0703490
      XA=D(IHU+7)-D(IHU)                                                A0703500
      YA=D(IHU+8)-D(IHU+1)                                              A0703510
      RA=-DATAN(YA/SMAL(XA))                                            A0703520
      IF(XA) 1004,1005,1005                                             A0703530
 1004 RA=RA+PI                                                          A0703540
 1005 CALL TRANRO(R1,RY,XA,YA,RA,IZ)                                    A0703550
      G(1)=D(IHU)+XA                                                    A0703560
      G(2)=D(IHU+1)+YA                                                  A0703570
      G(3)=Z0                                                           A0703580
C                                                                       A0703590
C.....CALCULATE CANONICAL FORM OF A LINE THRU TWO POINTS IN             A0703600
C     THE XY-PLANE                                                      A0703610
C                                                                       A0703620
      V(3)=Z0                                                           A0703630
      CALL APT014 (RESULT,V(1),G(1))                                    A0703640
  163 CONTINUE                                                          A0703650
      RETURN                                                            A0703660
 9998 IERROR=76                                                         A0703670
 9999 CALL DEFEXT(RESULT)                                               A0703680
      GO TO 163                                                         A0703690
  500 A1=Z3*AA(1)                                                       A0703700
      B1=Z2*AA(2)                                                       A0703710
      CC=AA(3)                                                          A0703720
      SQROOT=D(IHU+4)                                                   A0703730
      SQ=B1**2-4.0*A1*CC                                                A0703740
      IF(DABS(SQ).GE.Z1EM7) GO TO 501                                   A0703750
      KX=K2                                                             A0703760
      T(2)=-B1/(Z2*A1)                                                  A0703770
      GO TO 504                                                         A0703780
  501 IF(SQ) 502,502,503                                                A0703790
  502 KX=K0                                                             A0703800
      GO TO 504                                                         A0703810
  503 KX=K3                                                             A0703820
      SQ=-B1-DSIGN(DSQRT(SQ),B1)                                        A0703830
      IF(SQ.LE.Z0) GO TO 502                                            A0703840
      T(2)=Z2*CC/SQ                                                     A0703850
      IF(SQ.LE.Z0) GO TO 502                                            A0703860
      T(3)=SQ/(Z2*A1)                                                   A0703870
      GO TO 521                                                         A0703880
  504 T(1)=Z5EM1*SQROOT                                                 A0703890
      GO TO 510                                                         A0703900
  521 DO 505 JJ=1,2                                                     A0703910
  505 T1(JJ)=CUBIC(T(JJ+1))                                             A0703920
      IF(T1(1)*T1(2)) 506,507,507                                       A0703930
  506 T(1)=(T(2)+T(3))*Z5EM1                                            A0703940
      GO TO 510                                                         A0703950
  507 IF(DABS(T1(1))-DABS(T1(2))) 508,509,509                           A0703960
  508 T(1)=Z12EM1*T(3)-0.2*T(2)                                         A0703970
      GO TO 510                                                         A0703980
  509 T(1)=Z12EM1*T(2)-0.2*T(3)                                         A0703990
  510 T(1)=DMIN1(DMAX1(T(1),Z0),SQROOT)                                 A0704000
      T1(1)=Z3*AA(1)                                                    A0704010
      T1(2)=Z2*AA(2)                                                    A0704020
      T1(3)=AA(3)                                                       A0704030
      DO 520 MX=1,100                                                   A0704040
      T1(4)=(T1(1)*T(1)+T1(2))*T(1)+T1(3)                               A0704050
      IF(DABS(T1(4))-1.0D-20) 511,512,512                               A0704060
  511 T(1)=T(1)+Z1EM6                                                   A0704070
      GO TO 520                                                         A0704080
  512 T1(4)=CUBIC(T(1))/T1(4)                                           A0704090
      IF(DABS(T1(4)).LT.Z1EM6*DABS(T(1))) GO TO 530                     A0704100
      T(1)=T(1)-T1(4)                                                   A0704110
  520 CONTINUE                                                          A0704120
      IFALL=1                                                           A0704130
  530 T(2)=Z0                                                           A0704140
      A1=AA(1)                                                          A0704150
      B1=AA(1)*T(1)+AA(2)                                               A0704160
      CC=B1*T(1)+AA(3)                                                  A0704170
      SQ=B1**2-4.0*A1*CC                                                A0704180
      IF(DABS(SQ).GE.Z1EM7) GO TO 531                                   A0704190
      T(3)=-B1/(Z2*A1)                                                  A0704200
      T(4)=Z0                                                           A0704210
      T(6)=Z1                                                           A0704220
      GO TO 539                                                         A0704230
  531 IF(SQ) 532,532,533                                                A0704240
  532 T(4)=Z1                                                           A0704250
      T(6)=Z1                                                           A0704260
      GO TO 539                                                         A0704270
  533 SQ=-B1-DSIGN(DSQRT(SQ),B1)                                        A0704280
      IF(SQ.LE.Z0) GO TO 532                                            A0704290
      T(3)=Z2*CC/SQ                                                     A0704300
      IF(SQ.LE.Z0) GO TO 532                                            A0704310
      T(5)=SQ/(Z2*A1)                                                   A0704320
      T(4)=Z0                                                           A0704330
      T(6)=Z0                                                           A0704340
  539 CONTINUE                                                          A0704350
      GO TO 540                                                         A0704360
      END                                                               A0704370
**** SOURCE FILE : M0003393.V02   ***
*
C.....FORTRAN SUBROUTINE              APT071                            A0710000
C                                                                       A0710010
C              FORTRAN SUBROUTINE APT071                                A0710020
C                                                                       A0710030
C PURPOSE      TO GENERATE A MATRIX FOR MIRRORING OF                    A0710040
C              A PLANE (LINE) BY THE FOLLOWING APT STATEMENT            A0710050
C              RESULT = MATRIX/ MIRROR,PLN                              A0710060
C              RESULT = MATRIX/ MIRROR,LN                               A0710070
C                                                                       A0710080
C LINKAGE      CALL APT071 (RESULT,PLN)                                 A0710090
C                                                                       A0710100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0710110
C                      THE RESULTING MATRIX                             A0710120
C              PLN     ARRAY CONTAINING THE CANONICAL FORM OF           A0710130
C                      INPUT ARRAY                                      A0710140
C                                                                       A0710150
C SUBSIDIARY  TYPE                ENTRY                                 A0710160
C             LOGICAL FUNCTION    CKDEF                                 A0710170
C                                                                       A0710180
      SUBROUTINE APT071 ( RESULT,PLN )                                  A0710190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0710200
      DIMENSION RESULT(4,3),PLN(4)                                      A0710210
C                                                                       A0710220
C                                                                       A0710230
      INCLUDE 'TOTAL.INC'                                               A0710341
      INCLUDE 'LDEF.INC'                                                A0710342
C                                                                       A0710343
      LOGICAL CKDEF                                                     A0710345
C                                                                       A0710350
C                                                                       A0710830
      IF ( CKDEF(PLN) ) GOTO 99                                         A0710840
      PLN(4)=-PLN(4)                                                    A0710850
      SCC=PLN(1)**2+PLN(2)**2+PLN(3)**2                                 A0710860
      DO 10 I=1,3                                                       A0710870
      DO 10 J=1,4                                                       A0710880
      RESULT(J,I)=-2.D0*PLN(I)*PLN(J)/SCC                               A0710890
      IF(I.EQ.J) RESULT(J,I)=RESULT(J,I)+1.D0                           A0710900
   10 CONTINUE                                                          A0710910
      PLN(4)=-PLN(4)                                                    A0710920
      IF ( PRNTON ) CALL PRINT(3,RESULT,1)                              A0710925
      RETURN                                                            A0710930
   99 CALL ERROR ( 1 ,'APT071  ')                                       A0710933
      CALL UNDEF ( RESULT )                                             A0710935
      RETURN                                                            A0710937
      END                                                               A0710940
**** SOURCE FILE : M0000822.V02   ***
*
C.....FORTRAN SUBROUTINE              APT072                            A0720000
C                                                                       A0720010
C              FORTRAN SUBROUTINE APT072                                A0720020
C                                                                       A0720030
C PURPOSE      TO GENERATE A MATRIX FOR MIRRORING BY THE                A0720040
C              FOLLOWING APT STATEMENT                                  A0720050
C              RESULT = MATRIX/ MIRROR, **, ** , **                     A0720060
C                **   = XYPLAN, YZPLAN, OR ZXPLAN                       A0720070
C                                                                       A0720080
C LINKAGE      CALL APT072 (RESULT,MN1,MN2,MN3)                         A0720090
C                                                                       A0720100
C ARGUMENT    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF            A0720110
C                      THE RESULTING MATRIX                             A0720120
C              MN1,MN2,MN3                                              A0720130
C                      INTEGER EQUIVALENT OF THE MODIFIER               A0720140
C                      0 = NOT INDICATED                                A0720150
C                      1 = XYPLAN 2 = YZPLAN 3 = ZXPLAN                 A0720160
C                                                                       A0720170
C SUBSIDIARY NONE                                                       A0720180
C                                                                       A0720190
      SUBROUTINE APT072 (RESULT,MN1,MN2,MN3)                            A0720200
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0720210
      DIMENSION RESULT(12)                                              A0720220
      DIMENSION MN(3)                                                   A0720230
C                                                                       A0720240
C                                                                       A0720250
C                                                                       A0720260
      INCLUDE 'TOTAL.INC'                                               A0720401
      INCLUDE 'DEF.INC'                                                 A0720489
      INCLUDE 'DSHAR3.INC'                                              A0720569
      INCLUDE 'ZNUMBR.INC'                                              A0720665
      INCLUDE 'ISHR16.INC'                                              A0720721
      INCLUDE 'KNUMBR.INC'                                              A0720865
C                                                                       A0720930
      MN(1)=MN1                                                         A0720940
      MN(2)=MN2                                                         A0720950
      MN(3)=MN3                                                         A0720960
C                                                                       A0720970
C     INITIALIZE MATRIX VALUES                                          A0720980
      RESULT(1) = Z1                                                    A0720990
      RESULT(12)=Z0                                                     A0720995
      DO 10 I=2,10                                                      A0721000
   10 RESULT(I) = R(I)                                                  A0721010
      RESULT(11)= Z1                                                    A0721020
C                                                                       A0721030
C      TEST MODIFIER CODE                                               A0721040
C                                                                       A0721050
      DO 20 I=1,3                                                       A0721060
      IF(MN(I).EQ.1) RESULT(11)=-Z1                                     A0721070
      IF(MN(I).EQ.2) RESULT(1 )=-Z1                                     A0721080
      IF(MN(I).EQ.3) RESULT(6 )=-Z1                                     A0721090
   20 CONTINUE                                                          A0721100
      RETURN                                                            A0721110
      END                                                               A0721120
**** SOURCE FILE : M0000823.V02   ***
*
C.....FORTRAN SUBROUTINE             APT073...              3/1/68   GK A0730000
C                                                6/70      RW           A0730010
C              FORTRAN SUBROUTINE APT073                                A0730020
C                                                                       A0730030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A PLANE DEFINED        A0730040
C              AS CONTAINING TWO NON-PARALLEL VECTORS AND A POINT.      A0730050
C                                                                       A0730060
C LINKAGE      CALL APT073 (RESULT, VT1, VT2, PT)                       A0730070
C                                                                       A0730080
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0730090
C                      THE RESULTING PLANE                              A0730100
C              VT1     ARRAY CONTAINING THE CANONICAL FORM OF           A0730110
C                      THE FIRST INPUT VECTOR                           A0730120
C              VT2     ARRAY CONTAINING THE CANONICAL FORM OF           A0730130
C                      THE SECOND INPUT VECTOR                          A0730140
C              PT      ARRAY CONTAINING THE CANONICAL FORM OF           A0730150
C                      THE INPUT POINT                                  A0730160
C                                                                       A0730170
C SUBSIDIARIES TYPE                ENTRY                                A0730180
C              SUBROUTINE          CKDEF                                A0730190
C              SUBROUTINE          CROSS                                A0730200
C              SUBROUTINE          DOTF                                 A0730210
C              LOGICAL FUNCTION    VNORM                                A0730220
C              LOGICAL FUNCTION    ZVECT                                A0730230
C                                                                       A0730240
      SUBROUTINE APT073 (RESULT,VT1,VT2,PT)                             A0730250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0730260
      DIMENSION RESULT(4),VT1(3),VT2(3),PT(3)                           A0730270
      LOGICAL CKDEF,ZVECT                                               A0730280
C                                                                       A0730290
C                                                                       A0730300
C                                                                       A0730310
      INCLUDE 'TOTAL.INC'                                               A0730451
      INCLUDE 'DEF.INC'                                                 A0730550
      INCLUDE 'DSHAR3.INC'                                              A0730640
      INCLUDE 'LDEF.INC'                                                A0730685
      INCLUDE 'IDEF.INC'                                                A0730766
      INCLUDE 'ISHR16.INC'                                              A0730829
      INCLUDE 'KNUMBR.INC'                                              A0730991
C                                                                       A0731050
C                                                                       A0731060
C                                                                       A0731070
      UNFLAG = UNFLAG .OR. CKDEF(PT)                                    A0731080
C                                                                       A0731090
C...     CALCULATE VECTOR PERPENDICULAR TO VT1, VT2                     A0731100
C                                                                       A0731110
      CALL CROSS(VT1,VT2,V)                                             A0731120
      IF (.NOT.ZVECT(V)) IERROR=K51                                     A0731130
      CALL VNORM(V,RESULT)                                              A0731140
C                                                                       A0731150
C...     DISTANCE TO PLANE IS DOT PRODUCT OF PT VECTOR AND UNIT NORMAL  A0731160
C                                                                       A0731170
      CALL DOTF(RESULT(4),RESULT,PT)                                    A0731180
      RETURN                                                            A0731190
       END                                                              A0731200
**** SOURCE FILE : M0002803.V03   ***
*
C                                                                       A0740001
C.....FORTRAN SUBROUTINE           APT074        2/69      SR           A0740002
C                                                                       A0740010
C              FORTRAN SUBROUTINE APT074                                A0740020
C                                                                       A0740030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A CONIC                A0740040
C              DEFINED BY ONE OF THE FOLLOWING APT STATEMENTS           A0740050
C              RESULT = LCONIC/5PT,P1,P2,P3,P4,P5                       A0740060
C              RESULT = LCONIC/5PT,X1,Y1,X2,Y2,X3,Y3,X4,Y4,X5,Y5        A0740070
C              RESULT = LCONIC/4PT1SL,P1,S1,P2,P3,P4                    A0740080
C              RESULT = LCONIC/4PT1SL,X1,Y1,S1,X2,Y2,X3,Y3,X4,Y4        A0740090
C              RESULT = LCONIC/3PT2SL,P1,S1,P2,S2,P3                    A0740100
C              RESULT = LCONIC/3PT2SL,X1,Y1,S1,X2,Y2,S2,X3,Y3           A0740110
C                                                                       A0740120
C LINKAGE      CALL APT074(RESULT,MN,PP1,PP2,PP3,PP4,PP5)               A0740130
C                                                                       A0740140
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A0740150
C                      RESULTING CONIC                                  A0740160
C              MN      INTEGER EQUIVALENT OF THE MODIFIER               A0740170
C                      5PT = 1   4PT1SL = 2   3PT2SL = 3                A0740180
C              PP1     ARRAY CONTAINING THE CANONICAL FORM OF AN        A0740190
C                      INPUT POINT                                      A0740200
C              PP2     ARRAY CONTAINING THE CANONICAL FORM OF AN        A0740210
C                      CANONICAL FORM OF AN INPUT POINT                 A0740220
C              PP3     ARRAY CONTAINING THE CANONICAL FORM OF AN        A0740230
C                      INPUT POINT                                      A0740240
C              PP4     ARRAY CONTAINING THE CANONICAL FORM OF AN        A0740250
C                      CANONICAL FORM OF AN INPUT POINT                 A0740260
C              PP5     ARRAY CONTAINING THE CANONICAL FORM OF AN        A0740270
C                      INPUT POINT                                      A0740280
C                                                                       A0740290
C SUBSIDIARIES TYPE                ENTRY                                A0740300
C              SUBROUTINE          APT079                               A0740310
C              SUBROUTINE          DEFEXT                               A0740330
C              SUBROUTINE          ERROR                                A0740340
C              SUBROUTINE          TRANSF                               A0740345
C              REAL FUNCTION       DABS                                 A0740350
C              REAL FUNCTION       DSQRT                                A0740360
C                                                                       A0740370
      SUBROUTINE APT074(RESULT,MN,PP1,PP2,PP3,PP4,PP5)                  A0740380
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A0740390
      DIMENSION RESULT(10),P1(3),P2(3),P3(3),P4(3),P5(3),               A0740400
     /          PP1(3),PP2(3),PP3(3),PP4(3),PP5(3),                     A0740410
     /          SR(2),S(4),AA(4),BB(4),CC(4)                            A0740420
C                                                                       A0740430
C                                                                       A0740440
      INCLUDE 'TOTAL.INC'                                               A0740551
      INCLUDE 'DEF.INC'                                                 A0740653
      INCLUDE 'DSHAR3.INC'                                              A0740741
      INCLUDE 'ZNUMBR.INC'                                              A0740755
      INCLUDE 'LDEF.INC'                                                A0740843
      INCLUDE 'IDEF.INC'                                                A0740917
      INCLUDE 'KNUMBR.INC'                                              A0741061
C                                                                       A0741120
      DO 700 I=1,4                                                      A0741210
      GO TO (100,200,300,400),I                                         A0741220
  100 CALL TRANSF(P1,PP1,K2,K3,K0)                                      A0741230
      IF(UNFLAG)GO TO 910                                               A0741235
      CALL TRANSF(P3,PP3,K2,K3,K0)                                      A0741240
      IF(UNFLAG)GO TO 910                                               A0741245
      CALL TRANSF(P5,PP5,K2,K3,K0)                                      A0741250
      IF(UNFLAG)GO TO 910                                               A0741255
      IF(MN.NE.K1)GO TO 110                                             A0741260
      CALL TRANSF(P2,PP2,K2,K3,K0)                                      A0741270
      IF(UNFLAG)GO TO 910                                               A0741275
      SR(1) = P2(2)-P1(2)                                               A0741280
      SR(2) = P2(1)-P1(1)                                               A0741290
      GO TO 500                                                         A0741300
C                                                                       A0741310
C        4PT1SL OR 3PT2SL FORMAT                                        A0741320
C        OBTAIN FIRST SLOPE FROM P2(1), SET P2 = P1                     A0741330
C                                                                       A0741340
  110 S(I)=PP2(1)                                                       A0741350
      P2(1) = P1(1)                                                     A0741360
      P2(2) = P1(2)                                                     A0741370
      GO TO 600                                                         A0741380
  200 IF(MN.EQ.K3)GO TO 210                                             A0741390
      CALL TRANSF(P4,PP4,K2,K3,K0)                                      A0741395
      IF(UNFLAG)GO TO 910                                               A0741396
      SR(1) = P5(2)-P4(2)                                               A0741400
      SR(2) = P5(1)-P4(1)                                               A0741410
      GO TO 500                                                         A0741420
C                                                                       A0741430
C        3PT2SL FORMAT                                                  A0741440
C        OBTAIN SECOND SLOPE FROM P4(1), SET P4 = P5                    A0741450
C                                                                       A0741460
  210 S(I)=PP4(1)                                                       A0741470
      DO 220 J=1,2                                                      A0741480
      P4(J)=P3(J)                                                       A0741490
      P3(J)=P5(J)                                                       A0741500
  220 P5(J)=P4(J)                                                       A0741510
      GO TO 600                                                         A0741520
  300 SR(1) = P4(2)-P1(2)                                               A0741530
      SR(2) = P4(1)-P1(1)                                               A0741540
      GO TO 500                                                         A0741550
  400 SR(1) = P5(2)-P2(2)                                               A0741560
      SR(2) = P5(1)-P2(1)                                               A0741570
C        COMPUTE THE I TH SLOPE, S(I)                                   A0741590
C                                                                       A0741600
  500 IF((SR(1).EQ.Z0).AND.(SR(2).EQ.Z0)) GO TO 900                     A0741610
      IF(DABS(SR(1)).GT.DABS(SR(2))*Z1E6) GO TO 510                     A0741620
      S(I) = SR(1)/SR(2)                                                A0741630
      GO TO 600                                                         A0741640
  510 S(I) = (SR(1)/DABS(SR(1)))*Z1E6                                   A0741650
C                                                                       A0741660
C        COMPUTE COEFFICIENTS AA(I), BB(I), CC(I), OF THE EQUATION      A0741670
C        OF THE I TH LINE                                               A0741680
C                                                                       A0741690
  600 DIV = Z1                                                          A0741700
      IF(DABS(S(I)).GT.Z1) DIV =  DSQRT(S(I)**2+Z1)                     A0741710
      AA(I) = S(I)/DIV                                                  A0741720
      BB(I) = ZM1/DIV                                                   A0741730
      IF(DABS(BB(I)).LT.Z1EM6) BB(I)=Z0                                 A0741740
  620 IF((I.EQ.K2).OR.(I.EQ.K4))GO TO 630                               A0741750
      CC(I) = -AA(I)*P1(1)-BB(I)*P1(2)                                  A0741760
      GO TO 700                                                         A0741770
  630 CC(I) = -AA(I)*P5(1)-BB(I)*P5(2)                                  A0741780
  700 CONTINUE                                                          A0741790
C                                                                       A0741800
C        COMPUTE COEFFICIENTS OF THE QUADRIC EQUATION                   A0741810
C                                                                       A0741820
      SR(1) = (AA(3)*P3(1)+BB(3)*P3(2)+CC(3))                           A0741830
     /       *(AA(4)*P3(1)+BB(4)*P3(2)+CC(4))                           A0741840
      SR(2) =-(AA(1)*P3(1)+BB(1)*P3(2)+CC(1))                           A0741850
     /       *(AA(2)*P3(1)+BB(2)*P3(2)+CC(2))                           A0741860
      R(1) = SR(1)*AA(1)*AA(2)+SR(2)*AA(3)*AA(4)                        A0741870
      R(2) = SR(1)*BB(1)*BB(2)+SR(2)*BB(3)*BB(4)                        A0741880
      R(3) = Z0                                                         A0741890
      R(4) = SR(1)*CC(1)*CC(2)+SR(2)*CC(3)*CC(4)                        A0741900
      R(5) = Z0                                                         A0741910
      R(6) = Z0                                                         A0741920
      R(7) = Z5EM1*(SR(1)*(BB(1)*AA(2)+AA(1)*BB(2))+                    A0741930
     /              SR(2)*(BB(3)*AA(4)+AA(3)*BB(4)))                    A0741940
      R(8) = Z5EM1*(SR(1)*(CC(1)*AA(2)+AA(1)*CC(2))+                    A0741950
     /              SR(2)*(CC(3)*AA(4)+AA(3)*CC(4)))                    A0741960
      R(9) = Z5EM1*(SR(1)*(CC(1)*BB(2)+BB(1)*CC(2))+                    A0741970
     /              SR(2)*(CC(3)*BB(4)+BB(3)*CC(4)))                    A0741980
      R(10)= Z0                                                         A0741990
      DET = R(1)*R(2)*R(4)-R(2)*R(8)**2-R(4)*R(7)**2                    A0742000
     /     -R(1)*R(9)**2+2*R(7)*R(8)*R(9)                               A0742010
C                                                                       A0742020
C        PRINT WARNING IF THIS IS A DEGENERATE CONIC                    A0742030
C                                                                       A0742040
      IF(DABS(DET).LT.Z1EM9) CALL ERROR(71,'APT074  ')                  A0742050
      IF((DABS(DET/DMAX1(R(1),R(2),R(4),R(7),R(8),R(9))).LT.Z1EM9).AND. A0742060
     / (DABS(DET).GE.Z1EM9)) CALL ERROR(71,'APT074  ')                  A0742070
C                                                                       A0742080
C        TRANSFORM TO BASE SYSTEM AND STORE ANSWER IN RESULT            A0742090
C                                                                       A0742100
      CALL APT079(R,KM1)                                                A0742110
  800 CALL DEFEXT(RESULT)                                               A0742120
      RETURN                                                            A0742130
C                                                                       A0742140
C        ERROR - TWO INPUT POINTS COINCIDE                              A0742150
C                                                                       A0742160
  900 IERROR = 70                                                       A0742170
      GO TO 800                                                         A0742180
C                                                                       A0742181
C        ERROR - INPUT POINT IS UNDEFINED                               A0742182
C                                                                       A0742183
  910 IERROR =69                                                        A0742184
      GO TO 800                                                         A0742185
      END                                                               A0742190
**** SOURCE FILE : M0002722.V08   ***
*
C.....FORTRAN SUBROUTINE  ....APT088         8/68                 HG,RN A0880001
C.....FORTRAN SUBROUTINE             APT088...              3/1/68   GK A0880002
C                      VECTOR USED IN THE XYZ CASE TO GENERATE A        A0880010
C                      CANTED TABCYL PARALLEL TO VV                     A0880020
C              JJ      INTEGER TRANSFORMATION INDICATOR                 A0880030
C                      1 = TRANSFORMATION MATRIX DESIRED                A0880040
C                      0 = NO TRANSFORMATION                            A0880050
C              DD      ARRAY CONTAINING THE CANONICAL FORM OF THE       A0880060
C                      TRANSFORMATION MATRIX                            A0880070
C                                                                       A0880080
C SUBSIDIARIES TYPE                ENTRY                                A0880090
C              SUBROUTINE          APT040                               A0880100
C              SUBROUTINE          APT087                               A0880110
C              SUBROUTINE          APT094                               A0880120
C              REAL FUNCTION       ATAN                                 A0880130
C              REAL FUNCTION       ATAN2                                A0880140
C              LOGICAL FUNCTION    CKDEF                                A0880150
C              REAL FUNCTION       COS                                  A0880160
C              SUBROUTINE          DOTF                                 A0880170
C              SUBROUTINE          ERROR                                A0880180
C              REAL FUNCTION       MINO                                 A0880190
C              REAL FUNCTION       SIN                                  A0880200
C              REAL FUNCTION       SQRT                                 A0880210
C              SUBROUTINE          TABTAP                               A0880220
C              LOGICAL FUNCTION    ZVECT                                A0880230
C                                                                       A0880240
      SUBROUTINE APT088(A,MM,NN,KK,LL,JJ,DOTTAB)                        A0880250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0880260
      DIMENSION DOTTAB(*)                                               A0880261
C                                                                       A0880273
      INCLUDE 'BLANKCOM.INC'                                            A0880274
      DOUBLE PRECISION TAB(SSIZ)                                        A0880275
      EQUIVALENCE(COM(41),TAB(1))                                       A0880276
C                                                                       A0880277
      LOGICAL CKDEF,ZVECT                                               A0880280
      DIMENSION A(2),VV(3),DD(12),ROTM(9),TABLE(8),IHOL(3),IPR(103)     A0880290
C                                                                       A0880300
C                                                                       A0880310
C                                                                       A0880320
C                                                                       A0880330
      INCLUDE 'TOTAL.INC'                                               A0880441
      INCLUDE 'DSHAR6.INC'                                              A0880591
      INCLUDE 'ZNUMBR.INC'                                              A0880687
      INCLUDE 'LDEF.INC'                                                A0880719
      INCLUDE 'ISHR17.INC'                                              A0880791
      INCLUDE 'KNUMBR.INC'                                              A0880927
C                                                                       A0880934
C                                                                       A0880960
      EQUIVALENCE  (TAB(2),ROTM(1))                                     A0880970
C                                                                       A0881030
      INTEGER FORM1,FORM2,FORM3,FORM4,FORM5,FORM6,FORM7,FORM8,FORM9     A0881040
C                                                                       A0881050
      DIMENSION FORM1(28),FORM2(23),FORM3(30),FORM4(7),FORM5(1),FORM6(4)A0881060
     1,         FORM7(4),FORM8(5),FORM9(25)                             A0881070
C                                                                       A0881080
      EQUIVALENCE  (TEMP,SL2SQ,A1,GA,PHI,U), (TEM(1),DY1,A2,R,AL,CEN1,  A0881090
     1SQ),(TEM(2),DY2,B1,TA,S1,CEN2,CENTER),(TEM(3),SL1SQ,B2,GA1,       A0881100
     2TB,T1,CURVRG),(DX1,DCMAX,D1,CMIN),(X2,SE2,CURTI1,X),(Y2,DELTA,    A0881110
     3CURTI2,Y,CMAX)                                                    A0881120
C        ARITHMETIC STATEMENT FUNCTIONS                                 A0881170
      DOUBLE PRECISION DY1,DY2                                          A0881180
      DOUBLE PRECISION A1,B1,A2,B2,SL1,SL2                              A0881185
      DATA K21,K14,ZLIT1 /21,14,.707D0/                                 A0881187
      SMAL(Z1)=DSIGN(DMAX1(DABS(Z1),Z1EM9),Z1)                          A0881190
      SLOP(Z1,Z2)=(Z1*DY2+Z2*DY1)/SMAL(Z1*DX2+Z2*DX1)                   A0881200
      TAN(Z1)=DSIN(Z1)/SMAL(DCOS(Z1))                                   A0881220
      CRVA(Z1,Z2,Z3)=-(4.*TAN(Z1)+2.*TAN(Z2))*DABS(DCOS(Z1))**3/Z3      A0881230
      CURV(SL1,SL2) = CRVA(A2,B2,SL2)+CRVA(B1,A1,SL1)                   A0881240
C        INITIALIZATION AND DIAGNOSTICS                                 A0881250
      UNFLAG=.FALSE.                                                    A0881259
      N = NN                                                            A0881260
      I=K7*N+K21                                                        A0881270
      DO 99 I1=1,I                                                      A0881271
   99 TAB(I1)=DOTTAB(I1)                                                A0881272
C        TEST SLOPE OR NORMAL AT FIRST POINT                            A0881280
      K=KK                                                              A0881290
      B=TAB(1)                                                          A0881300
      IF (K.LT.K2)GO TO 100                                             A0881310
      B=TAN((B-Z90 )*DEGRAD)                                            A0881320
      K=K1                                                              A0881330
C        TEST SLOPE OR NORMAL AT SECOND POINT                           A0881340
  100 L=LL                                                              A0881350
      C=TAB(2)                                                          A0881360
      IF(L.LT.K2) GO TO 110                                             A0881370
      C=TAN((C-Z90)*DEGRAD)                                             A0881380
      L=K1                                                              A0881390
C        TEST TRANSFORMATION MATRIX                                     A0881400
  110 J=JJ                                                              A0881410
      IF (J.EQ.K1)GO TO 130                                             A0881420
      DO 120 I1=2,12                                                    A0881430
  120 D(I1)=Z0                                                          A0881440
      D(1)=Z1                                                           A0881450
      D(6)=Z1                                                           A0881460
      D(11)=Z1                                                          A0881470
      GO TO 150                                                         A0881480
  130 DO 140 I1=1,12                                                    A0881490
  140 D(I1)=TAB(I1+5)                                                   A0881500
  150 IF(.NOT.CKDEF(D)) GO TO 160                                       A0881510
      UNFLAG = .TRUE.                                                   A0881520
      CALL ERROR(14,'APT088  ')                                         A0881530
C        SET NUMBER OF POINT COORDINATES. IF XYZ, TEST AXIS VECTOR AND  A0881540
C        OMISSION OF SLOPES                                             A0881550
  160 M=MM                                                              A0881560
      INC=K2                                                            A0881570
      IF (M.LT.K6)GO TO 180                                             A0881580
      INC=K3                                                            A0881590
      KKKKK=I                                                           A0881599
      CALL APT040(V,TAB(3))                                             A0881600
      I=KKKKK                                                           A0881601
      IF (ZVECT(V)) GO TO 170                                           A0881610
      UNFLAG = .TRUE.                                                   A0881620
      CALL ERROR(K32,'APT088  ')                                        A0881630
  170 IF (K+L.EQ. 0) GO TO 180                                          A0881640
      UNFLAG = .TRUE.                                                   A0881650
      CALL ERROR(35,'APT088  ')                                         A0881660
C        TEST WHETHER POINTS DEFINED                                    A0881670
  180 LIM =N*INC                                                        A0881680
      DO 190 I1 =1,LIM,INC                                              A0881690
      IF(CKDEF(TAB(I1+17))) GO TO 200                                   A0881700
  190 CONTINUE                                                          A0881710
      GO TO 210                                                         A0881720
  200 UNFLAG = .TRUE.                                                   A0881730
      CALL ERROR(K33,'APT088  ')                                        A0881740
C        TEST FOR IDENTICAL CONSECUTIVE POINTS                          A0881750
  210 NM1=INC+1                                                         A0881760
      DO 230 I1=NM1,LIM,INC                                             A0881765
      KP=I1+INC-K1                                                      A0881770
      DO 220 J1=I1,KP                                                   A0881780
      L1=J1-INC+17                                                      A0881790
      IF (TAB(J1+17).NE.TAB(L1)) GO TO 230                              A0881800
  220 CONTINUE                                                          A0881810
      CALL ERROR(K34,'APT088  ')                                        A0881820
      GO TO 240                                                         A0881830
  230 CONTINUE                                                          A0881840
      IF ( .NOT. UNFLAG) GO TO 250                                      A0881850
  240 CALL APT094(4,A(1),TAB(1))                                        A0881860
      RETURN                                                            A0881870
C        MOVE POINTS AND INITIALIZE FIRST PORTION OF CANONICAL FORM     A0881880
  250 DO 260 I1= 1,LIM                                                  A0881890
      J1=LIM+K18-I1                                                     A0881900
      KP= I+K1-I1                                                       A0881910
  260 TAB(KP)=TAB(J1)                                                   A0881920
      TAB(1) =I                                                         A0881930
      TAB(11)=N+K2                                                      A0881940
      TAB(12)=K14                                                       A0881950
C        DEFINE ROTATION MATRIX                                         A0881960
      IF (M.LT.K6)GO TO 280                                             A0881970
      DO 270 I1=1,3                                                     A0881980
  270 CALL DOTF (ROTM(I1+6),V,D(4*I1-3))                                A0881990
      I=KKKKK                                                           A0881991
      GO TO 300                                                         A0882000
  280 DO 290 I1=1,3                                                     A0882010
  290 ROTM(I1+6)=Z0                                                     A0882020
      KP=MIN0(M,K3)                                                     A0882030
      ROTM(KP+6)=Z1                                                     A0882040
  300 KP=K0                                                             A0882050
      D1=ZM1                                                            A0882060
      IF (DABS(ROTM(9)).LE.ZLIT1) GO TO 310                             A0882070
      KP=KM1                                                            A0882080
      D1=Z1                                                             A0882090
  310 ROTM(KP+6)=D1*DSQRT(Z1-ROTM(KP+9)**2)                             A0882100
      KKKKK=1                                                           A0882101
      TEMP =    ROTM(KP+9)/ROTM(KP+6)                                   A0882110
      KKKKK=2                                                           A0882111
      ROTM(4)=-TEMP*ROTM(7)                                             A0882120
      ROTM(KP+3)=Z0                                                     A0882130
      TEM(1)=D1/ROTM(KP+6)                                              A0882140
      KP=-KP                                                            A0882150
C---    CORRECTION TO ROTATION MATRIX FOR SOME TABCYLS                  A0882160
      ROTM(KP+5)=D1*TEMP*ROTM(KP+8)*KM1**KP                             A0882161
      ROTM(KP+2)=-ROTM(7)*TEM(1)                                        A0882170
      ROTM(1)=ROTM(KP+8)*TEM(1)                                         A0882180
C        MOVE POINTS TO PROPER PLACE IN CANONICAL FORM                  A0882190
      KP=I+K1-LIM                                                       A0882200
      L1=K19                                                            A0882210
      DO 330 I1=1,N                                                     A0882220
      DO 320 J1=1,INC                                                   A0882230
      L1=L1+K1                                                          A0882240
      TAB(L1)=TAB(KP)                                                   A0882250
  320 KP=KP+K1                                                          A0882260
      DO 330 J1=INC,6                                                   A0882270
      L1=L1+K1                                                          A0882280
  330 TAB(L1)=Z0                                                        A0882290
C        ZERO BALANCE OF CANONICAL FORM                                 A0882300
      DO 340 I1=13,19                                                   A0882310
  340 TAB(I1)=Z0                                                        A0882320
      TAB(I-1)=Z0                                                       A0882330
      TAB(I)=Z0                                                         A0882340
C        TRANSFORM AND ROTATE POINTS, USING D MATRIX                    A0882350
      I1=0                                                              A0882360
  350 I1=I1+K7                                                          A0882370
      GO TO (390,390,390,380,375,360),M                                 A0882380
C        XYZ CASE                                                       A0882390
  360 DO 370 J1=1,3                                                     A0882400
      CALL DOTF(TEM(J1),D(4*J1-3),TAB(I1+13))                           A0882410
  370 TEM(J1)=TEM(J1)+D(4*J1)                                           A0882420
      CALL DOTF (TAB(I1+13),ROTM,TEM)                                   A0882430
      CALL DOTF (TAB(I1+14),ROTM(4),TEM)                                A0882440
      TAB(I1+15)=Z0                                                     A0882450
      GO TO 410                                                         A0882460
C        RTHETA AND THETAR CASES-FIRST TRANSFORM TO RECTANGULAR         A0882470
C        THETAR CASE                                                    A0882472
  375 TEM(3)=TAB(I1+14)                                                 A0882474
      TAB(I1+14)=TAB(I1+13)                                             A0882476
      TAB(I1+13)=TEM(3)                                                 A0882478
  380 TEM(1)=TAB(I1+13)                                                 A0882480
      TEM(2)=TAB(I1+14)*DEGRAD                                          A0882490
      TAB(I1+13)=TEM(1)*DCOS(TEM(2))                                    A0882500
      TAB(I1+14)=TEM(1)*DSIN(TEM(2))                                    A0882510
C        NOX, NOY, NOZ, RTHETA,AND THETAR CASES- TRANSFORM COORDINATES  A0882520
  390 X2=TAB(I1+13)                                                     A0882530
      Y2=TAB(I1+14)                                                     A0882540
      D1=Z1                                                             A0882550
      GO TO 460                                                         A0882560
C        STORE ONLY DESIRED COORDINATES                                 A0882570
  400 TAB (I1+13)=TEM(1)                                                A0882580
      TAB (I1+14)=-TEM(3)                                               A0882590
  410 IF (I1.LT.7*N) GO TO 350                                          A0882600
C        TRANSFORM AND ROTATE SLOPES- CONSIDER AS POINTS.               A0882610
      IF (K.EQ.0 )GO TO 450                                             A0882620
      I1=0                                                              A0882630
  420 Y2=B                                                              A0882640
  430 CONTINUE                                                          A0882650
      D1=Z0                                                             A0882660
      X2=Z1                                                             A0882670
      GO TO 460                                                         A0882680
  440 B = -TEM(3)/SMAL(TEM(1))                                          A0882690
  450 IF (L.EQ.0 )GO TO 490                                             A0882700
      I1=K1                                                             A0882710
      Y2=C                                                              A0882720
      GO TO 430                                                         A0882730
C        POINT ROTATION ROUTINE                                         A0882740
  460 KP=MIN0(M,K3)                                                     A0882750
      L1=MOD(KP,K3)                                                     A0882760
      KP=MOD(KP+1,K3)                                                   A0882770
      DO 470 J1=1,3                                                     A0882780
      TEM(J1)=X2*D(L1+1)+Y2*D(KP+1)+D1*D(4*J1)                          A0882790
      KP=KP+K4                                                          A0882800
  470 L1=L1+K4                                                          A0882810
C        SAVE ONLY DESIRED COORDINATES                                  A0882820
      IF (M.EQ.K1)TEM(1) =-TEM(2)                                       A0882830
      IF(M.GT.K2) TEM(3)=-TEM(2)                                        A0882840
      IF (I1-K1)440,480,400                                             A0882850
C        ROTATE SECOND SLOPE                                            A0882860
  480 C= -TEM(3)/SMAL(TEM(1))                                           A0882870
C        COMPUTE SEGMENT LENGTHS, SLOPES, AND SLOPE OF AVERAGE          A0882880
  490 NM1=K7*(N-K1)                                                     A0882890
      DO 500 I1=7,NM1,7                                                 A0882900
      DX2=(TAB(I1+20)-TAB(I1+13))                                       A0882910
      DY2=TAB(I1+21)-TAB(I1+14)                                         A0882920
      SL2SQ=DX2**2+DY2**2                                               A0882930
      TAB(I1+17)=DSQRT(SL2SQ)                                           A0882940
      TAB(I1+16)=DATAN2(DY2,DX2)                                        A0882950
C        CALCULATE SLOPE OF CIRCLE THRU P(N-1),P(N),P(N+1)              A0882960
      IF (I1.NE.K7) TAB(I1+15)=DATAN(SLOP (SL1SQ,SL2SQ) )               A0882970
      DX1=DX2                                                           A0882980
      DY1=DY2                                                           A0882990
  500 SL1SQ=SL2SQ                                                       A0883000
C        CALCULATION OF ANGLES AND CURVATURE DIFFERENCES                A0883010
      B1=TAB(29)-TAB(23)                                                A0883020
      IF (K.EQ.0 )GO TO 510                                             A0883030
      TAB(22)=DATAN(B)                                                  A0883040
      A1=TAB(22)-TAB(23)                                                A0883050
      GO TO 520                                                         A0883060
  510 A1=      PI-B1                                                    A0883070
      TAB(22)=TAB(23)-B1                                                A0883080
      IF(NM1.LT.21) GO TO 531                                           A0883085
  520 DO 530 I1=21,NM1,7                                                A0883090
      A2=TAB(I1+8)-TAB(I1+9)                                            A0883100
      B2=TAB(I1+15)-TAB(I1+9)                                           A0883110
      TAB(I1+11)=CURV(TAB(I1+3),TAB(I1+10))                             A0883120
      A1=A2                                                             A0883130
  530 B1=B2                                                             A0883140
C        CALCULATE TERMINAL SLOPE AND EXTERIOR ANGLE                    A0883150
  531 A2=TAB(I-13)-TAB(I-12)                                            A0883160
      IF (L.EQ.0 )GO TO 540                                             A0883170
      TAB(I-6)=DATAN(C)                                                 A0883180
      B2=TAB(I-6)-TAB(I-12)                                             A0883190
      GO TO 550                                                         A0883200
  540 B2= PI-A2                                                         A0883210
      TAB(I-6) = TAB(I-12)+B2                                           A0883220
  550 TAB(I-10)= CURV(TAB(I-18),TAB(I-11))                              A0883230
      CALL APT089 (A)                                                   A0883240
      RETURN                                                            A0883250
      END                                                               A0883260
**** SOURCE FILE : M0002233.V12   ***
*
C.....FORTRAN SUBROUTINE  ....APT089         8/68                 HG,RN A0890001
C.....FORTRAN SUBROUTINE             APT089...              3/1/68   GK A0890002
C          PART 2 OF APT088                                             A0890010
C              FORTRAN SUBROUTINE APT089                                A0890020
C                                                                       A0890030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A TABULATED            A0890040
C              CYLINDER DEFINED BY THE POINTS THROUGH WHICH IT          A0890050
C              MUST PASS BY THE FOLLOWING APT STATEMENT                 A0890060
C                TABCYL/*, V, TRFORM, MI, P1, **, K1, P2,               A0890070
C                   P3, ..., PN, ***, KN                                A0890080
C                * = NOX, NOY, NOZ, XYZ, RTHETA, OR THETAR              A0890090
C                ** = SLOPE OR NORMAL                                   A0890100
C                 *** = SLOPE OR NORMAL                                 A0890110
C                                                                       A0890120
C LINKAGE      CALL APT089 (A)                                          A0890130
C                                                                       A0890140
C                                                                       A0890150
C ARGUMENTS    A       ARRAY CONTAINING THE INFORMATION NECESSARY       A0890160
C                      TO PLACE THE TABCYL CANONICAL FORM ON TAPE       A0890170
C                      AND LATER RETRIEVE IT FROM TAPE                  A0890180
C                                                                       A0890440
C SUBSIDIARIES TYPE                ENTRY                                A0890450
C              SUBROUTINE          APT040                               A0890460
C              SUBROUTINE          APT087                               A0890470
C              SUBROUTINE          APT094                               A0890480
C              REAL FUNCTION       ATAN                                 A0890490
C              REAL FUNCTION       ATAN2                                A0890500
C              LOGICAL FUNCTION    CKDEF                                A0890510
C              REAL FUNCTION       COS                                  A0890520
C              SUBROUTINE          DOTF                                 A0890530
C              SUBROUTINE          ERROR                                A0890540
C              REAL FUNCTION       MINO                                 A0890550
C              REAL FUNCTION       SIN                                  A0890560
C              REAL FUNCTION       SQRT                                 A0890570
C              SUBROUTINE          TABTAP                               A0890580
C              LOGICAL FUNCTION    ZVECT                                A0890590
C                                                                       A0890600
C        ADDITIONS FOR PRINT /TABPRT,ON OR OFF                          A0890601
C        TABPRT FLAG IS CHECKED  EACH TIME BEFORE PRINTING              A0890602
C        FLAG IS SET IN PRINT ROUTINE AND INITIALIZED IN APT227         A0890603
      SUBROUTINE APT089(A)                                              A0890610
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0890620
C                                                                       A0890633
      INCLUDE 'BLANKCOM.INC'                                            A0890635
C                                                                       A0890637
      LOGICAL CKDEF,ZVECT                                               A0890640
      DOUBLE PRECISION TAB(SSIZ)                                        A0890644
      EQUIVALENCE (COM(41),TAB(1))                                      A0890646
      DIMENSION A(2),VV(3),DD(12),ROTM(9),TABLE(8)                      A0890650
      INCLUDE 'DARRAY.INC'                                              A0890653
      DOUBLE PRECISION DY1,DY2                                          A0890656
      DOUBLE PRECISION A1,B1,A2,B2,SL1,SL2                              A0890658
C                                                                       A0890660
C                                                                       A0890670
C                                                                       A0890680
C                                                                       A0890690
      INCLUDE 'TOTAL.INC'                                               A0890801
      INCLUDE 'DSHAR6.INC'                                              A0890951
      INCLUDE 'ZNUMBR.INC'                                              A0891047
      INCLUDE 'LDEF.INC'                                                A0891053
      INCLUDE 'ISHR17.INC'                                              A0891151
      INCLUDE 'KNUMBR.INC'                                              A0891295
      INCLUDE 'XUNITS.INC'                                              A0891299
C                                                                       A0891360
C                                                                       A0891370
      EQUIVALENCE (TAB(2),ROTM(1))                                      A0891390
C                                                                       A0891410
      CHARACTER FORM1*112,FORM2*92,FORM3*120,FORM4*28                   A0891414
      CHARACTER FORM5*4,FORM7*16,FORM9*100                              A0891416
C                                                                       A0891440
      DATA FORM1/                                                       A0891450
     1' NUM        THETA        RADIUS         X-CORD         Y-CORD    A0891451
     2      SEG LENGTH       SEG ANGLE      EXT ANGLE'/                 A0891452
      DATA FORM2/                                                       A0891460
     1' NUM     SLOPE        NORMAL      ALPHA   TANGENT A   TANGENT B  A0891461
     2   CURVA    DELTA CURV     '/                                     A0891462
      DATA FORM3/                                                       A0891470
     1'    CURVATURE    .+........................+.....................A0891471
     2...+........................+........................+.'/         A0891472
      DATA FORM4/' EXTENSION INTERSECTION U=  '/                        A0891480
      DATA FORM5/' V= '/                                                A0891485
      DATA FORM7/' ROTATION MATRIX'/                                    A0891490
      DATA FORM9/                                                       A0891500
     1'0      U              V              A             B            LA0891501
     2ENGTH         MAX           MIN    '/                             A0891502
      DATA TABLE/0.05D0,.1D0,.2D0,.5D0,1.D0,2.D0,5.D0,10.D0/            A0891546
      DATA ZLIT2,ZLIT3,ZLIT4,ZLIT6                                      A0891547
     C    /1.D10,50.D0,52.5001D0,5.D-5/                                 A0891548
C        ARITHMETIC STATEMENT FUNCTIONS                                 A0891549
      SMAL(Z1)=DSIGN(DMAX1(DABS(Z1),Z1EM9),Z1)                          A0891550
      SLOP(Z1)=(DY2+DY1*Z1)/SMAL(DX2+DX1*Z1)                            A0891560
      TAN(Z1)=DSIN(Z1)/SMAL(DCOS(Z1))                                   A0891580
      CRVA(Z1,Z2,Z3)=-(4.*TAN(Z1)+2.*TAN(Z2))*DABS(DCOS(Z1))**3/Z3      A0891590
      CURV(SL1,SL2) = CRVA(A2,B2,SL2)+CRVA(B1,A1,SL1)                   A0891600
      L1=0                                                              A0891620
  560 DCMAX =Z0                                                         A0891630
      DO 570 I1=14,NM1,7                                                A0891640
      IF (DABS(TAB(I1+18)).LT.DCMAX) GO TO 570                          A0891650
      DCMAX = DABS(TAB(I1+18))                                          A0891660
      J1=I1                                                             A0891670
  570 CONTINUE                                                          A0891680
C        MINIMIZE MAXIMUM CURVATURE, USING NEWTON'S METHOD              A0891690
      IF (DCMAX.LE.Z1EM3.OR.L1.GE.K4*I) GO TO 640                       A0891700
      A1= TAB(J1+8)-TAB(J1+9)                                           A0891710
      A2= TAB(J1+15)-TAB(J1+16)                                         A0891720
      B2= TAB(J1+22)-TAB(J1+16)                                         A0891730
      DCP= -4.*(TAB(J1+10)+TAB(J1+17))/TAB(J1+10)/TAB(J1+17)            A0891740
C        OBTAIN NEW APPROXIMATION FOR SLOPE AT P(J1), NEW CURVATURE     A0891750
      DO 580 I1=1,4                                                     A0891760
      A2=DATAN(TAN(A2)-TAB(J1+18)/DCP)                                  A0891770
      TAB(J1+15)= A2+ TAB(J1+16)                                        A0891780
      B1 =TAB(J1+15)-TAB(J1+9)                                          A0891790
      TAB(J1+18) =CURV(TAB(J1+10),TAB(J1+17))                           A0891800
      IF (DABS(TAB(J1+18)).LE.Z1EM3) GO TO 590                          A0891810
  580 CONTINUE                                                          A0891820
C        CHANGE IN A2 - CHANGE IN CURVATURE AT P(J1-1), P(J1+1)         A0891830
C        AT START OR END OF TABCYL, REFLECT ANGLE                       A0891840
  590 X2=A2                                                             A0891850
      Y2=B2                                                             A0891860
      L1=L1+K1                                                          A0891870
      IF (J1+K-K15)620,630,600                                          A0891880
  600 IF(J1+L-NM1) 610,601,630                                          A0891890
  601 B2=PI-A2                                                          A0891900
      TAB(I-6)=TAB(I-12)+B2                                             A0891910
      TAB(I-10)= CURV(TAB(I-18),TAB(I-11))                              A0891920
  610 A2= A1                                                            A0891930
      B2= B1                                                            A0891940
      A1= TAB(J1+1)-TAB(J1+2)                                           A0891950
      B1= TAB(J1+8)-TAB(J1+2)                                           A0891960
      TAB(J1+11) = CURV(TAB(J1+3),TAB(J1+10))                           A0891970
      GO TO 630                                                         A0891980
  620 A1= PI-B1                                                         A0891990
      TAB(22)=TAB(23)+A1                                                A0892000
      TAB(32)=CURV(TAB(24),TAB(31))                                     A0892010
  630 IF (J1.EQ.NM1) GO TO 560                                          A0892020
      A1= X2                                                            A0892030
      B1= Y2                                                            A0892040
      A2= TAB(J1+22)-TAB(J1+23)                                         A0892050
      B2= TAB(J1+29)-TAB(J1+23)                                         A0892060
      TAB(J1+25) =CURV(TAB(J1+17),TAB(J1+24))                           A0892070
      GO TO 560                                                         A0892080
C        SAVE END SLOPES AND WRITE OUT DATA                             A0892090
  640 IF(L.NE.0) GO TO 642                                              A0892095
      A1=TAB(I-20)-TAB(I-19)                                            A0892097
      B1=TAB(I-13)-TAB(I-19)                                            A0892098
      A2=TAB(I-13) - TAB(I-12)                                          A0892100
      B2=PI-A2                                                          A0892101
      TAB(I-6)=TAB(I-12)+B2                                             A0892102
      TAB(I-10)=CURV(TAB(I-18),TAB(I-11))                               A0892103
  642 SB=TAN(TAB(22))                                                   A0892104
      SE2= TAN(TAB(I-6))                                                A0892110
C        CHECK TABPRT FLAG                                              A0892131
      IF(TABPRT) GO TO 643                                              A0892132
C...     CALL PRINT TO OUTPUT ISN AND TABCYL IDENTIFICATION INFORMATION A0892133
      CALL PRINT(15,A,1)                                                A0892136
C                                                                       A0892138
      CALL CFORM(FORM1,DARRAY,1,112)                                    A0892140
      CALL CPRINT(DARRAY)                                               A0892150
  643 DO 672 I1=1,N                                                     A0892160
      J1=K7*I1                                                          A0892170
      CALL APT087(TEM,TAB(J1+13))                                       A0892180
      TAB(J1+19)=TEM(2)                                                 A0892190
C        CHECK TABPRT FLAG                                              A0892194
      IF(TABPRT) GO TO 672                                              A0892195
C        GA IS SEGMENT ANGLE, XA EXTERIOR ANGLE                         A0892200
      GA1 =GA                                                           A0892210
      IF (I1.EQ.N) GO TO 650                                            A0892220
      GA=TAB(J1+16)/DEGRAD                                              A0892230
      IF (I1.EQ.K1)GO TO 660                                            A0892240
      XA= GA -GA1                                                       A0892250
      IF(DABS(XA).GT.Z2*Z90) XA=XA-DSIGN(360.0D0,XA)                    A0892260
      GO TO 670                                                         A0892270
C        NO SEGMENT ANGLE FOR LAST POINT                                A0892280
  650 GA=Z0                                                             A0892290
  660 XA=Z0                                                             A0892300
  670 CALL ICONV(I1,DARRAY,1,4)                                         A0892310
      CALL FCONV(TEM(2),DARRAY,5,15,4)                                  A0892314
      CALL FCONV(TEM(1),DARRAY,20,15,6)                                 A0892316
      CALL FCONV(TAB(J1+13),DARRAY,35,15,6)                             A0892318
      CALL FCONV(TAB(J1+14),DARRAY,50,15,6)                             A0892320
      CALL FCONV(TAB(J1+17),DARRAY,65,15,6)                             A0892322
      CALL FCONV(GA,DARRAY,80,15,4)                                     A0892324
      CALL FCONV(XA,DARRAY,95,15,4)                                     A0892326
      CALL CPRINT(DARRAY)                                               A0892330
  672 CONTINUE                                                          A0892335
C        WRITE MATCHED CURVATURES                                       A0892340
C        CHECK TABPRT FLAG                                              A0892364
      IF(TABPRT) GO TO 674                                              A0892365
      CALL CFORM('0',DARRAY,1,1)                                        A0892370
      CALL CFORM(FORM2,DARRAY,2,92)                                     A0892375
      CALL CPRINT(DARRAY)                                               A0892380
  674 CMIN=ZLIT2                                                        A0892390
      CMAX=-ZLIT2                                                       A0892400
      DO 690 I1=1,N                                                     A0892410
      J1=K7*I1                                                          A0892420
      IF (I1.EQ.N) GO TO 675                                            A0892425
      TA = TAB(J1+15)-TAB(J1+16)                                        A0892430
      TB = TAB(J1+22)-TAB(J1+16)                                        A0892440
      TEM(2)=CRVA(TA,TB,TAB(J1+17))                                     A0892445
      GO TO 680                                                         A0892450
  675 TA=Z0                                                             A0892460
      TB = Z0                                                           A0892470
      TAB(25) =Z0                                                       A0892480
      TEM(2)=0.0                                                        A0892490
  680 TA=TAN(TA)                                                        A0892500
      TB=TAN(TB)                                                        A0892510
      TAB(J1+15) = TAN(TAB(J1+15))                                      A0892520
      PHI=DATAN(ZM1/SMAL(TAB(J1+15)))/DEGRAD                            A0892530
      AL = PHI -TAB(J1+19)                                              A0892540
      TAB(J1+19)=TEM(2)                                                 A0892545
C        CHECK TABPRT FLAG                                              A0892547
      IF(TABPRT) GO TO 685                                              A0892548
      CALL ICONV(I1,DARRAY,1,4)                                         A0892550
      CALL FCONV(TAB(J1+15),DARRAY,5,12,5)                              A0892552
      CALL FCONV(PHI,DARRAY,17,12,4)                                    A0892554
      CALL FCONV(AL,DARRAY,29,12,4)                                     A0892556
      CALL FCONV(TA,DARRAY,41,12,7)                                     A0892558
      CALL FCONV(TB,DARRAY,53,12,7)                                     A0892560
      CALL FCONV(TAB(J1+19),DARRAY,65,10,4)                             A0892562
      CALL FCONV(TAB(J1+18),DARRAY,75,13,4)                             A0892564
      CALL CPRINT(DARRAY)                                               A0892570
C        PLOT CURVATURES                                                A0892580
  685 TAB(J1+15)=TA                                                     A0892581
      TAB(J1+16)=TB                                                     A0892582
      CMIN=DMIN1(CMIN,TAB(J1+19))                                       A0892590
  690 CMAX=DMAX1(CMAX,TAB(J1+19))                                       A0892600
      CEN2=(CMAX-CMIN)/Z2                                               A0892610
      DO 700 J1=1,7                                                     A0892620
      I1=J1                                                             A0892630
      IF (CEN2.LE.TABLE(J1)) GO TO 710                                  A0892640
  700 CONTINUE                                                          A0892650
      I1=8                                                              A0892660
  710 CURVRG= TABLE(I1)                                                 A0892670
      CEN1=50.0/CURVRG                                                  A0892680
      CENTER= CEN2+CMIN                                                 A0892690
      IDUMY=CENTER*CEN1+DSIGN(Z5EM1,CENTER)                             A0892700
      CENTER=IDUMY                                                      A0892710
      CENTER=CENTER/CEN1                                                A0892715
      CURTI1 =CENTER -CURVRG                                            A0892720
      CURTI2=CENTER-Z5EM1*CURVRG                                        A0892730
      TEMP=CENTER+Z5EM1*CURVRG                                          A0892740
      TEM(1) =CENTER + CURVRG                                           A0892750
C        CHECK TABPRT FLAG                                              A0892754
      IF(TABPRT) GO TO 732                                              A0892755
      CALL CFORM('0',DARRAY,1,1)                                        A0892760
      CALL FCONV(CURTI1,DARRAY,17,7,4)                                  A0892762
      CALL FCONV(CURTI2,DARRAY,42,7,4)                                  A0892764
      CALL FCONV(CENTER,DARRAY,67,7,4)                                  A0892766
      CALL FCONV(TEMP,DARRAY,92,7,4)                                    A0892768
      CALL FCONV(TEM(1),DARRAY,113,7,4)                                 A0892770
      CALL CPRINT(DARRAY)                                               A0892772
C                                                                       A0892800
      CALL CFORM(FORM3,DARRAY,1,119)                                    A0892810
      CALL CPRINT(DARRAY)                                               A0892820
      KP=K7*N                                                           A0892830
      DO 730 I1=7,KP,7                                                  A0892840
      CALL CFORM('.',DARRAY,18,1)                                       A0892870
      CALL CFORM('.',DARRAY,119,1)                                      A0892880
      J1=ZLIT4-ZLIT3*CENTER/CURVRG                                      A0892890
      J1=MIN0(MAX0(J1,2),102)+17                                        A0892900
      CALL CFORM('.',DARRAY,J1,1)                                       A0892910
      J1=ZLIT3*(TAB(I1+19)-CENTER)/CURVRG+ZLIT4                         A0892920
      J1=MIN0(MAX0(J1,2),102)+17                                        A0892930
      CALL CFORM('*',DARRAY,J1,1)                                       A0892940
      L1=I1/7                                                           A0892945
      CALL ICONV(L1,DARRAY,1,3)                                         A0892950
      CALL FCONV(TAB(I1+19),DARRAY,4,12,6)                              A0892960
  730 CALL CPRINT(DARRAY)                                               A0892970
      CALL CFORM(FORM3(17:),DARRAY,17,103)                              A0892972
      CALL CPRINT(DARRAY)                                               A0892974
C        FIT CUBICS TO GIVEN SLOPES - TRANSLATE AND ROTATE TO ELIMINATE A0892980
C        CONSTANT TERM                                                  A0892990
  732 DO 771  I1=7,NM1,7                                                A0893000
      TLENGT=TAB(I1+17)                                                 A0893005
      S1=TAB(I1+15)                                                     A0893050
      T1=TAB(I1+16)                                                     A0893060
C        COMPUTE COEFFICIENTS OF CUBIC, STORE IN TAB ARRAY              A0893070
      TAB(I1+15) =(T1+S1)/TAB(I1+17)**2                                 A0893080
      TAB(I1+16)= (-Z2*S1-T1)/TAB(I1+17)                                A0893090
      TAB(I1+17) =S1                                                    A0893100
C        COMPUTE MAXIMUM AND MINIMUM VALUES ON EACH CURVE               A0893110
      IF (DABS(TAB(I1+15)).GT.Z1EM7) GO TO 750                          A0893120
      TAB(I1+19)= Z0                                                    A0893130
      TAB(I1+15)= Z0                                                    A0893140
      IF(DABS(TAB(I1+16)).GT.Z1EM7) GO TO 740                           A0893150
C        EQUATION IS LINEAR - MUST BE  Y = 0                            A0893160
      TAB(I1+16)= Z0                                                    A0893170
      TAB(I1+17)= Z0                                                    A0893180
      TAB(I1+18)= Z0                                                    A0893190
      GO TO 770                                                         A0893200
C        EQUATION IS QUADRATIC - EXTREMUM AT  -C/2B                     A0893210
  740 TAB(I1+18)= -TAB(I1+17)**2/(4.*TAB(I1+16))                        A0893220
      GO TO 760                                                         A0893230
C        EQUATION IS CUBIC - SOLVE FOR FIRST DERIVATIVE ZERO            A0893240
  750 TEMP =TAB(I1+16)**2                                               A0893250
      TEM1=3.*TAB(I1+15)*S1                                             A0893260
      TEM3=(TEMP-TEM1)*DSQRT(TEMP-TEM1)*2.0                             A0893270
      TEM2=TAB(I1+16)*(2.*TEMP-3.*TEM1)                                 A0893280
      TEM4=TEM2+DSIGN(TEM3,TEM2)                                        A0893290
      TEM3=S1**2*(1.3333333*TEM1-TEMP)                                  A0893300
      TEMP=TEM4/((TAB(I1+15)**2)*27.)                                   A0893310
      IF(Z1) 760,760,755                                                A0893311
  755 CONTINUE                                                          A0893312
      TEM1=TEM3/TEM4                                                    A0893320
      TAB(I1+18)=TEMP                                                   A0893322
      TAB(I1+19)=TEM1                                                   A0893324
C        TEST FOR MAX GREATER THAN MIN                                  A0893330
  760 IF(TAB(I1+18).GE.TAB(I1+19)) GO TO 769                            A0893340
      TEMP =TAB(I1+18)                                                  A0893350
      TAB(I1+18)=TAB(I1+19)                                             A0893360
      TAB(I1+19)=TEMP                                                   A0893370
C        MAX OR MIN MUST BE WITHIN INTERVAL                             A0893380
  769 IF(S1.LE.Z0.AND.T1.GE.Z0) TAB(I1+18)=Z0                           A0893390
      IF (S1.GE.Z0.AND.T1.LE.Z0) TAB(I1+19)  =Z0                        A0893400
  770 TAB(I1+18)=TAB(I1+18)/TLENGT                                      A0893410
      TAB(I1+19)=TAB(I1+19)/TLENGT                                      A0893412
      TAB(I1+17)=TLENGT                                                 A0893413
  771 CONTINUE                                                          A0893414
C        COMPUTE EXTENSION INTERVALS                                    A0893420
C        EXTENSION EQUIVALENT TO  10 INCH. REGARDLESS OF UNITS          A0893422
      DST = TABEXT                                                      A0893425
      DELTA = DST/DSQRT(Z1+SB**2)                                       A0893430
      IF ((TAB(21)-TAB(28))*SB+TAB(20)-TAB(27).LT.Z0) DELTA= -DELTA     A0893440
      TAB(13)=TAB(20)+ DELTA                                            A0893450
      TAB(14)=TAB(21)+ DELTA*SB                                         A0893460
      DELTA = DST/DSQRT(Z1+SE2**2)                                      A0893470
      IF ((TAB(I-7)-TAB(I-14))*SE2+TAB(I-8)-TAB(I-15).LT.Z0)DELTA=-DELTAA0893480
      TAB(I-1)= TAB(I-8)+DELTA                                          A0893490
      TAB(I) = TAB(I-7)+DELTA*SE2                                       A0893500
      DO 780 I1=15,19                                                   A0893510
      TAB(I1) =Z0                                                       A0893520
      J1=K7*N +I1                                                       A0893530
  780 TAB(J1)=Z0                                                        A0893540
C        REDUCE EXTENSION IF NECESSARY                                  A0893550
      IF (DABS(SB-SE2).LT.ZLIT6) GO TO 790                              A0893560
      X =(TAB(I-7)-TAB(14)+SB*TAB(13)-SE2*TAB(I-8))/(SB-SE2)            A0893570
      A1=X-TAB(13)                                                      A0893580
      B1=SB*A1                                                          A0893590
      IF ( A1**2+B1**2.GT.DST**2 ) GO TO 790                            A0893600
      Y= B1+TAB(14)                                                     A0893610
      IF ( (X-TAB(I-8))**2+(Y-TAB(I-7))**2.GT.DST**2 ) GO TO 790        A0893620
      IF ((X-TAB(20))*(TAB(27)-TAB(20))                                 A0893630
     1  + (Y-TAB(21))*(TAB(28)-TAB(21)).GT.Z0) GO TO 790                A0893640
      IF ((X-TAB(I-8))*(TAB(I-15)-TAB(I-8))                             A0893650
     1  + (Y-TAB(I-7))*(TAB(I-14)-TAB(I-7)).GT.Z0) GO TO 790            A0893660
      TAB(13) =X-Z1EM2*(X-TAB(20))                                      A0893670
      TAB(14) =Y-Z1EM2*(Y-TAB(21))                                      A0893680
      TAB(I-1)=X-Z1EM2*(X-TAB(I-8))                                     A0893690
      TAB(I)= Y -Z1EM2*(Y-TAB(I-7))                                     A0893700
      CALL CFORM(FORM4,DARRAY,1,26)                                     A0893730
      CALL FCONV(X,DARRAY,27,15,8)                                      A0893732
      CALL CFORM(FORM5,DARRAY,46,3)                                     A0893734
      CALL FCONV(Y,DARRAY,49,15,8)                                      A0893736
      CALL CPRINT(DARRAY)                                               A0893740
  790 TAB(17)=DSQRT((TAB(20)-TAB(13))**2+(TAB(21)-TAB(14))**2)          A0893741
      TAB(I-4)=DSQRT((TAB(I)-TAB(I-7))**2+(TAB(I-1)-TAB(I-8))**2)       A0893742
C        CHECK TABPRT FLAG                                              A0893794
      IF(TABPRT) GO TO 796                                              A0893795
      CALL CFORM(FORM7,DARRAY,1,16)                                     A0893800
      CALL CPRINT(DARRAY)                                               A0893805
      L=1                                                               A0893810
      DO 791 I1=2,10                                                    A0893815
      CALL FCONV(TAB(I1),DARRAY,L,13,6)                                 A0893820
  791 L=L+13                                                            A0893825
      CALL CPRINT(DARRAY)                                               A0893830
      CALL CFORM(FORM9,DARRAY,1,100)                                    A0893835
      CALL CPRINT(DARRAY)                                               A0893836
      DO 9095 I1=13,I,7                                                 A0893840
      L=1                                                               A0893841
      DO 9096 J1=1,7                                                    A0893842
      L1=I1+J1-1                                                        A0893843
      IF(L1.GT.I) GO TO 9094                                            A0893845
      CALL FCONV(TAB(L1),DARRAY,L,15,8)                                 A0893846
 9096 L=L+15                                                            A0893847
 9094 CALL CPRINT(DARRAY)                                               A0893848
 9095 CONTINUE                                                          A0893850
  796 A(2)=TAB(1)                                                       A0893880
      CALL APT094(1,A(1),TAB(1))                                        A0893881
      RETURN                                                            A0893890
       END                                                              A0893900
**** SOURCE FILE : M0002774.V05   ***
*
C                                                                       A0900001
C...  FORTRAN SUBROUTINE               APT090    3/69      SR           A0900002
C                                                                       A0900010
C              FORTRAN SUBROUTINE APT090                                A0900020
C                                                                       A0900030
C PURPOSE      TO GENERATE THE EXTERNAL CANONICAL FORM FOR A SURFACE    A0900040
C              DEFINED AS A PATERN  AND WRITE IT ON PERIPHERAL STORAGE  A0900050
C                                                                       A0900060
C LINKAGE      CALL APT090(MM,RESULT,KLL,ARG1,ARG2,ARG3,ARG4,ARG5)      A0900070
C                                                                       A0900080
C ARGUMENTS    MM      BCANON INDEX OF ARRAY IN WHICH GENERATED         A0900090
C                      EXTERNAL CANONICAL FORM IS TO BE STORED          A0900100
C              RESULT  ARRAY CONTAINING THE INTERNAL CANONICAL FORM OF  A0900110
C                      THE SURFACE                                      A0900120
C              KLL     PATERN  SUBTYPE CODE AND DEFINITION FORMAT       A0900130
C                      INDICATOR, K = SUBTYPE CODE, LL = DEFINITION     A0900140
C                      FORMAT NUMBER                                    A0900150
C                      K=1,LINEAR,   =2,CIRCULAR,  =3,GRID,             A0900160
C                       =4,RANDOM,   =5,PERIPHERAL                      A0900170
C              ARG1    ONE-TO-ONE REPRESENTATION IN E.L. EQUIVALENT     A0900180
C              THROUGH OF PATERN DEFINITION STATEMENT AS SPECIFIED BY   A0900190
C              ARG5    PART PROGRAM EXCEPT FOR RANDOM PATERN WHERE      A0900200
C                      ARG1 = NUMBER OF POINTS AND/OR PATERNS SPECIFIED A0900210
C                      IN DEFINITION STATEMENT                          A0900220
C                                                                       A0900230
C SUBSIDIARIES TYPE                ENTRY                                A0900240
C                                                                       A0900250
C              SUBROUTINE          APT094                               A0900260
C              LOGICAL FUNCTION    CKDEF                                A0900270
C              SUBROUTINE          ERROR                                A0900280
C              SUBROUTINE          UNDEF                                A0900290
C              SUBROUTINE          VNORM                                A0900300
C                                                                       A0900310
      SUBROUTINE APT090 (MM, RESULT, KLL, ARG1, ARG2, ARG3, ARG4, ARG5) A0900320
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               A0900330
C                                                                       A0900344
      INCLUDE 'BLANKCOM.INC'                                            A0900345
C                                                                       A0900346
      DIMENSION ARG1(7),ARG2(3),ARG4(50),ARG5(50),BARG(110),DIRVEC(3),  A0900370
     1           RESULT(2)                                              A0900380
      LOGICAL  CKDEF                                                    A0900400
C                                                                       A0900410
      INCLUDE 'TOTAL.INC'                                               A0900521
      INCLUDE 'DEF.INC'                                                 A0900523
      INCLUDE 'LDEF.INC'                                                A0900541
      INCLUDE 'FXCOR.INC'                                               A0900621
      INCLUDE 'IFXCOR.INC'                                              A0900661
      INCLUDE 'ZNUMBR.INC'                                              A0900751
      INCLUDE 'KNUMBR.INC'                                              A0900793
C                                                                       A0900794
      CHARACTER*8 AT,C,PAT,TEST                                         A0900796
C                                                                       A0900798
      DATA  AT, C/'AT      ','CLW     '/                                A0900870
      DATA PAT/'ZPATRN  '/                                              A0900880
      DATA D360 / 360.D0/                                               A0900885
C                                                                       A0900890
C     BRANCH ON PATERN SUBTYPE CODE                                     A0900900
      K=KLL/100                                                         A0900910
      GO TO (100,200,300,400,300),K                                     A0900920
C                                                                       A0900930
C     LINEAR PATERN , STORE SUBTYPE CODE                                A0900940
  100 BCANON(MM+1)=Z1                                                   A0900950
C                                                                       A0900960
C     C.F. EXISTS FOR STARTING POINT                                    A0900970
      IF (CKDEF(ARG1)) GO TO 1300                                       A0900980
C     YES, STORE COORDS. OF STARTING POINT                              A0900990
      DO 101 I = 1,3                                                    A0901000
      LL = MM + 3 + I                                                   A0901005
  101 BCANON(LL) = ARG1(I)                                              A0901010
C     BRANCH ON DEFINITION FORMAT NUMBER                                A0901020
      K=KLL-100                                                         A0901030
      GO TO (105, 110, 125), K                                          A0901040
C     DEFN. BY STARTING,ENDING AND NO. OF PTS.,C.F. EXISTS FOR END PT.  A0901050
  105 IF (CKDEF(ARG2)) GO TO 1300                                       A0901060
C     YES, COMPUTE DIFFERENCE VECTOR,NORMALIZE AND STORE                A0901070
      DO 106  I = 1,3                                                   A0901080
  106 DIRVEC(I) = ARG2(I) - ARG1(I)                                     A0901090
      CALL VNORM (DIRVEC ,DIRVEC)                                       A0901100
      GO TO 112                                                         A0901110
C     DEFN. BY POINT, VECTOR AND NO. OF PTS.,C.F. EXISTS FOR VECTOR     A0901120
  110 IF (CKDEF(ARG2)) GO TO 1300                                       A0901130
      CALL VNORM (ARG2 ,DIRVEC)                                         A0901140
  112 IF (IER) 116,116,114                                              A0901150
  114 CALL ERROR (65,'APT090  ')                                        A0901160
      GO TO 1300                                                        A0901170
  116 DO 117  I = 1,3                                                   A0901180
      LL = MM+6+I                                                       A0901185
  117 BCANON(LL) = DIRVEC(I)                                            A0901190
      IF (ARG3)    118,118,120                                          A0901200
  118 CALL ERROR (66,'APT090  ')                                        A0901210
      GO TO 1300                                                        A0901220
C     STORE NO.OF POINTS IN PATERN                                      A0901230
  120 BCANON(MM+3)=ARG3                                                 A0901240
C     COMPUTE INCREMENTAL SPACING AND SET UP INCR LIST                  A0901250
C                                                                       A0901260
      SINC=VTEM/(ARG3-Z1)                                               A0901270
      IF(K.EQ.K2)SINC=VTEM                                              A0901275
      NINC=BCANON(MM+3)+Z1EM5-Z1                                        A0901280
      DO 122  I = 1,NINC                                                A0901300
      LL=MM+9+I                                                         A0901305
  122 BCANON(LL) = SINC                                                 A0901310
C     SAVE FINAL BCANON INDEX                                           A0901320
      NECF = LL                                                         A0901330
C     SIZE OF E.C.F.= FINAL BCANON INDEX MINUS INITIAL BCANON INDEX     A0901340
C     STORE IN E.C.F. AND I.C.F.                                        A0901350
      SIZE=NECF-MM                                                      A0901360
      BCANON(MM+2)=SIZE                                                 A0901370
      RESULT(2)=SIZE+Z1                                                 A0901380
      GO TO 1200                                                        A0901390
C     DEFN. BY POINT, VECTOR AND INCR. LIST, C.F. EXISTS FOR VECTOR     A0901400
  125 IF (CKDEF(ARG2)) GO TO 1300                                       A0901410
      CALL VNORM (ARG2, DIRVEC)                                         A0901420
  127 IF (IER)  130,130,128                                             A0901430
  128 CALL ERROR(65,'APT090  ')                                         A0901440
      GO TO 1300                                                        A0901450
C     STORE COMPONENTS OF NORMALIZED VECTOR AND PROCESS INCR LIST DATA  A0901460
  130 DO 132  I = 1,3                                                   A0901470
      LL = MM+6+I                                                       A0901475
  132 BCANON(LL) = DIRVEC(I)                                            A0901480
C                                                                       A0901490
C     INITIALIZE BCANON INDEX FOR STORAGE OF INCREMENTS                 A0901500
      J = MM + K10                                                      A0901510
      GO TO 1010                                                        A0901520
C     RETURN FROM INCR LIST PROCESSING                                  A0901530
C     COMPUTE AND STORE SIZE OF E.C.F. AND NO. OF PTS.                  A0901540
  135 SIZE=NECF-MM                                                      A0901550
      BCANON(MM+2)=SIZE                                                 A0901560
      RESULT(2)=SIZE+Z1                                                 A0901570
      BCANON(MM+3)=SIZE-8.                                              A0901580
      GO TO 1200                                                        A0901590
C     CIRCULAR PATERN, STORE SUBTYPE CODE                               A0901600
  200 BCANON(MM+1)=Z2                                                   A0901610
C     C.F. EXISTS FOR SPECIFIED CIRCLE                                  A0901620
      IF (CKDEF(ARG1)) GO TO 1300                                       A0901630
C     YES, STORE COORDS. OF CIRCLE CENTER AND CIRCLE RADIUS             A0901640
      DO 202  I = 1,3                                                   A0901660
      LL= MM+3+I                                                        A0901665
  202 BCANON(LL) = ARG1(I)                                              A0901670
      IF(ZFLAG)GO TO 201                                                A0901672
      BCANON(MM+6)=Z0                                                   A0901674
      IF(REF(1,3).EQ.Z0)GO TO 201                                       A0901676
      BCANON(MM+6)=(REF(1,4)-REF(1,1)*BCANON(MM+4)-REF(1,2)*            A0901678
     /   BCANON(MM+5))/REF(1,3)                                         A0901680
  201 BCANON(MM+7)=ARG1(7)                                              A0901682
C                                                                       A0901690
C     STORE STARTING ANGLE - IF GREATER THAN 360, REDUCE MOD 360,       A0901700
C     IF NEGATIVE, CHANGE TO POSITIVE                                   A0901710
C                                                                       A0901720
      BCANON(MM+8) = ARG2(1)                                            A0901740
      IF(DABS(BCANON(MM+8)).LT.D360)GO TO 206                           A0901750
  204 BCANON(MM+8)=DMOD(BCANON(MM+8),D360)                              A0901760
  206 IF (BCANON(MM+8)) 208,210,210                                     A0901770
  208 BCANON(MM+8)=BCANON(MM+8)+D360                                    A0901780
C                                                                       A0901790
C     BRANCH ON DEFN FORMAT NUMBER                                      A0901800
  210 K=KLL-200                                                         A0901810
      GO TO (215 ,250),K                                                A0901820
C                                                                       A0901830
C     DEFN BY STARTING AND ENDING ANGLES AND NUMBER OF PTS.             A0901840
C     STORE DIRECTION OF GENERATION,  +1.0 FOR CCLW, -1.0 FOR CLW       A0901850
C                                                                       A0901860
  215 CALL HOLFRM(ARG4(1),TEST,1,8,NWD)                                 A0901865
      IF (TEST .EQ. C) GO TO 217                                        A0901870
C     ASSUME CCLW                                                       A0901880
      BCANON(MM+9)=Z1                                                   A0901890
      GO TO 218                                                         A0901900
  217 BCANON(MM+9)=ZM1                                                  A0901910
C                                                                       A0901920
C     USE   SPECIFIED ENDING ANGLE AS EQUIV. POSITIVE ANGLE, MOD 360    A0901930
  218 ENANG = ARG3                                                      A0901940
      IF(DABS(ENANG).LT.D360)GO TO 222                                  A0901950
  220 ENANG=DMOD(ENANG,D360)                                            A0901960
  222 IF (ENANG) 224,226,226                                            A0901970
  224 ENANG=ENANG+D360                                                  A0901980
C                                                                       A0901990
C     ADJUST COMPUTED DIFFERENCE BETWEEN ENDING AND STARTING ANGLES     A0902000
C     TO BE COMPATIBLE WITH SPECIFIED DIRECTION OF GENERATION           A0902010
C                                                                       A0902020
  226 DIFF = ENANG - BCANON(MM+8)                                       A0902030
      IF (DIFF) 228,232,234                                             A0902040
  228 IF(BCANON(MM+9).EQ.Z1)GO TO 236                                   A0902050
  230 DIFF=DABS(DIFF)                                                   A0902060
      GO TO 238                                                         A0902070
  232 DIFF=D360                                                         A0902080
      GO TO 238                                                         A0902090
  234 IF(BCANON(MM+9).EQ.Z1)GO TO 238                                   A0902100
  236 DIFF=D360-DABS(DIFF)                                              A0902110
C                                                                       A0902120
  238 IF (ARG5(1)) 240,242,242                                          A0902130
  240 CALL ERROR (66,'APT090  ')                                        A0902140
      GO TO 1300                                                        A0902150
C     STORE NUMBER OF PTS. IN PATERN                                    A0902160
  242 BCANON(MM+3)=ARG5(1)                                              A0902170
C                                                                       A0902180
C     COMPUTE INCREMENTAL SPACING AND SET UP INCR LIST                  A0902190
C                                                                       A0902200
      SINC=DIFF/(ARG5(1)-Z1)                                            A0902210
      NINC=BCANON(MM+3)+Z1EM5-Z1                                        A0902220
      DO 244 I = 1,NINC                                                 A0902240
      LL = MM+9+I                                                       A0902245
  244 BCANON(LL) = SINC                                                 A0902250
C     SAVE FINAL BCANON INDEX                                           A0902260
      NECF = LL                                                         A0902270
C     SIZE OF E.C.F. = FINAL INDEX MINUS INITIAL INDEX                  A0902280
C     STORE IN E.C.F. AND I.C.F.                                        A0902290
      SIZE=NECF-MM                                                      A0902300
      BCANON(MM+2)=SIZE                                                 A0902310
      RESULT(2)=SIZE+Z1                                                 A0902320
      GO TO 1200                                                        A0902330
C                                                                       A0902340
C     DEFN BY STARTING ANGLE AND INCREMENT LIST                         A0902350
C     STORE DIRECTION OF GENERATION, +1.0 FOR CCLW, -1.0 FOR CLW        A0902360
C                                                                       A0902370
  250 CALL HOLFRM(ARG3,TEST,1,8,NWD)                                    A0902375
      IF (TEST .EQ. C) GO TO 252                                        A0902380
C     ASSUME CCLW                                                       A0902390
      BCANON(MM+9)=Z1                                                   A0902400
      GO TO 254                                                         A0902410
  252 BCANON(MM+9)=ZM1                                                  A0902420
C     INITIALIZE BCANON INDEX FOR STORAGE OF INCREMENTS                 A0902430
  254 J= MM + K10                                                       A0902440
      GO TO 1020                                                        A0902450
C                                                                       A0902460
C     RETURN FROM INCR LIST PROCESSING                                  A0902470
C     COMPUTE AND STORE SIZE OF E.C.F. AND NO. OF PTS.                  A0902480
  255 SIZE=NECF-MM                                                      A0902490
      BCANON(MM+2)=SIZE                                                 A0902500
      RESULT(2)=SIZE+Z1                                                 A0902510
      BCANON(MM+3)=SIZE-8.                                              A0902520
      GO TO 1200                                                        A0902530
C     GRID OR PERIPHERAL PATERN STORE RELATED SUBTYPE CODE              A0902540
  300 BCANON(MM+1)=Z3                                                   A0902550
      IF(K.EQ.K5)BCANON(MM+1)=Z5                                        A0902555
C                                                                       A0902560
C     C.F. EXISTS FOR FIRST PATERN                                      A0902570
  302 IF (CKDEF(ARG1)) GO TO 1300                                       A0902580
C     YES, RETRIEVE E.C.F. AND STORE IN BCANON                          A0902590
C                                                                       A0902600
      CALL APT094(2, ARG1, BCANON(MM+3))                                A0902610
C     RETRIEVAL O.K.                                                    A0902620
      IF (CKDEF(ARG1)) GO TO 1300                                       A0902630
C                                                                       A0902640
C     YES - PATERN IS LINEAR                                            A0902650
      IF(BCANON(MM+4).EQ.Z1)GO TO 306                                   A0902660
  304 CALL ERROR(67,'APT090  ')                                         A0902670
      GO TO 1300                                                        A0902680
C     COMPUTE BCANON INDEX FOR STORAGE OF SECOND PATERN,INITIAL VALUE=M A0902690
  306 ICVT=BCANON(MM+6)+Z1EM5                                           A0902700
      M=MM+ICVT+K12                                                     A0902705
C     BRANCH ON DEFINITION FORMAT INDICATOR                             A0902710
      I=KLL-(K*100)                                                     A0902720
      GO TO (310,320,340), I                                            A0902730
C     DEFINITION BY TWO LINEAR PATERNS, C.F. EXISTS FOR SECOND PATERN   A0902740
  310 IF (CKDEF(ARG2)) GO TO 1300                                       A0902750
C     YES - RETRIEVE AND STORE IN BCANON                                A0902760
      SAVE=BCANON(M-1)                                                  A0902765
      CALL APT094(2,ARG2,BCANON(M-1))                                   A0902770
      BCANON(M-1)=SAVE                                                  A0902775
      IF (CKDEF(ARG2)) GO TO 1300                                       A0902780
C     IS THIS PATERN LINEAR                                             A0902790
      IF(BCANON(M).EQ.Z1)GO TO 314                                      A0902800
  312 CALL ERROR(67,'APT090  ')                                         A0902810
      GO TO 1300                                                        A0902820
C     YES, TRANSLATE ORIGIN OF SECOND PATERN TO THAT OF FIRST PATERN    A0902830
  314 DO 316  I = 1,3                                                   A0902840
      JJ = M+2+I                                                        A0902845
      LL = MM+6+I                                                       A0902846
  316 BCANON(JJ) = BCANON(LL)                                           A0902850
C                                                                       A0902860
C     COMPUTE AND STORE E.C.F. SIZE                                     A0902870
      SIZE=BCANON(MM+6)+BCANON(M+2)+19.                                 A0902880
      BCANON(MM+2)=SIZE                                                 A0902890
      RESULT(2)=SIZE+Z1                                                 A0902900
      GO TO 357                                                         A0902910
C     DEFINITION BY PATERN,VECTOR, AND NO. OF ROWS OR COLUMNS           A0902920
  320 IF (CKDEF(ARG2)) GO TO 1300                                       A0902930
      CALL VNORM (ARG2 , DIRVEC)                                        A0902940
      IF (IER) 324, 324, 322                                            A0902950
  322 CALL ERROR(65,'APT090  ')                                         A0902960
      GO TO 1300                                                        A0902970
C     SET SUBTYPE CODE = 1 FOR SECOND PATERN AND SET ORIGIN SAME AS     A0902980
C     THAT OF FIRST PATERN, STORE COMPONENTS OF NORMALIZED VECTOR       A0902990
  324 BCANON(M)=Z1                                                      A0903000
      DO 326  I = 1,3                                                   A0903010
      JJ = M+2+I                                                        A0903015
      LL = MM+6+I                                                       A0903016
  326 BCANON(JJ) = BCANON(LL)                                           A0903020
      DO 328  I = 1,3                                                   A0903030
      JJ = M+5+I                                                        A0903035
  328 BCANON(JJ) = DIRVEC(I)                                            A0903040
      IF (ARG3) 330,330,332                                             A0903050
  330 CALL ERROR(63,'APT090  ')                                         A0903060
      GO TO 1300                                                        A0903070
C     STORE NO. OF PTS. IN PATERN                                       A0903080
  332 BCANON(M+2)=ARG3                                                  A0903090
C        COMPUTE AND STORE ECF SIZE FOR SECOND PATERN                   A0903095
      BCANON(M+1)=BCANON(M+2)+8.                                        A0903096
C     COMPUTE INCREMENTAL SPACING AND SET UP INCR LIST                  A0903100
      SINC=VTEM                                                         A0903110
      NINC=BCANON(M+2)+Z1EM5-Z1                                         A0903120
      DO 334  I = 1,NINC                                                A0903130
      JJ = M+8+I                                                        A0903135
  334 BCANON(JJ) = SINC                                                 A0903140
C     SAVE FINAL BCANON INDEX                                           A0903150
      NECF = JJ                                                         A0903160
C     COMPUTE AND STORE E.C.F. SIZE                                     A0903170
      SIZE=NECF-MM                                                      A0903180
      BCANON(MM+2)=SIZE                                                 A0903190
      RESULT(2)=SIZE+Z1                                                 A0903200
      GO TO 357                                                         A0903210
C     DEFN. BY PATERN, VECTOR, AND INCR LIST                            A0903220
  340 IF (CKDEF(ARG2)) GO TO 1300                                       A0903230
      CALL VNORM (ARG2,DIRVEC)                                          A0903240
      IF (IER) 344,344,342                                              A0903250
  342 CALL ERROR(65,'APT090  ')                                         A0903260
      GO TO 1300                                                        A0903270
C     STORE FOR SECOND PATERN - SUBTYPE CODE,COORDS. OF ORIGIN AND      A0903280
C     COMPONENTS OF NORMALIZED VECTOR                                   A0903290
  344 BCANON(M)=Z1                                                      A0903300
      DO 346 I = 1,3                                                    A0903310
      JJ = M+2+I                                                        A0903315
      LL = MM+6+I                                                       A0903316
  346 BCANON(JJ) = BCANON(LL)                                           A0903320
      DO 348 I = 1,3                                                    A0903330
      JJ = M+5+I                                                        A0903335
  348 BCANON(JJ) = DIRVEC(I)                                            A0903340
C     INITIALIZE BCANON INDEX FOR STORAGE OF INCREMENTS                 A0903350
      J = M + 9                                                         A0903360
      GO TO 1010                                                        A0903370
C     RETURN FROM INCR LIST PROCESSING - COMPUTE AND STORE NO. OF PTS.  A0903380
C     AND SIZE OF SECOND PATERN                                         A0903390
  355 SIZE=NECF-MM                                                      A0903400
      BCANON(M+2)=SIZE-BCANON(MM+6)-19.                                 A0903410
      BCANON(M+1)=BCANON(M+2)+8.                                        A0903420
C     STORE SIZE OF E.C.F.                                              A0903430
      BCANON(MM+2)=SIZE                                                 A0903440
      RESULT(2)=SIZE+Z1                                                 A0903450
C     COMPUTE NO. OF PTS.IN PATERN BEING DEFINED BASED ON               A0903460
C     PATERN SUBTYPE                                                    A0903470
  357 IF(BCANON(MM+1).EQ.Z5)GO TO 359                                   A0903480
C     PATERN IS GRID                                                    A0903490
      BCANON(MM+3)=BCANON(MM+6)*BCANON(M+2)                             A0903500
      GO TO 1200                                                        A0903510
C                                                                       A0903520
C     PATERN IS PERIPHERAL                                              A0903530
  359 BCANON(MM+3)=Z2*(BCANON(MM+6)+BCANON(M+2))-4.                     A0903540
      GO TO 1200                                                        A0903550
C                                                                       A0903560
C     RANDOM PATERN, STORE SUBTYPE CODE                                 A0903570
C                                                                       A0903580
  400 BCANON(MM+1)=4.0                                                  A0903590
C        CHECK FOR DEFINITION OF REQUIRED POINTS AND PATTERNS           A0903592
      IF(BCANON(MM).LT.0.0)GO TO 1300                                   A0903594
C     INITIALIZE COUNTER FOR NUMBER OF PTS. IN RANDOM PATERN            A0903600
      PNTCNT=Z0                                                         A0903610
C     INITIALIZE POINTER TO FIRST ELEMENT OF POINT OR PATERN DATA       A0903620
C     BEING PROCESSED - THIS POINTER WILL BE ADVANCED IN SCANNING       A0903630
C     THE RANDOM PATERN E.C.F. WHICH HAS BEEN STORED IN BCANON          A0903640
      J = MM + K4                                                       A0903650
C                                                                       A0903660
C     INITIALIZE DATA SET COUNTER                                       A0903670
      I = K1                                                            A0903680
C                                                                       A0903690
C     ARG1 IS NUMBER OF DATA SETS, THAT IS, NUMBER OF PTS. AND/OR       A0903700
C     PATERNS SPECIFIED IN RANDOM PATERN DEFN STATEMENT                 A0903710
      ILIM = ARG1(1)                                                    A0903720
C     IS DATA FOR POINT OR PATERN                                       A0903730
C                                                                       A0903740
  405 CALL HOLFRM(BCANON(J),TEST,1,8,NWD)                               A0903745
      IF(TEST.EQ.PAT)GO TO 415                                          A0903750
C        INCREMENT POINT COUNTER AND ADVANCE J TO NEXT DATA SET         A0903760
      PNTCNT=PNTCNT+K1                                                  A0903820
      J = J + K4                                                        A0903830
      GO TO 420                                                         A0903840
C     UPDATE POINT COUNTER AND ADVANCE J TO NEXT DATA SET               A0903910
  415 PNTCNT=PNTCNT+BCANON(J+3)                                         A0903920
      ICVT=BCANON(J+2)+Z1EM5                                            A0903925
      J=J+ICVT+K1                                                       A0903930
C                                                                       A0903940
C     HAVE ALL DATA SETS BEEN PROCESSED                                 A0903950
  420 IF (I .EQ. ILIM) GO TO 425                                        A0903960
      I = I + K1                                                        A0903970
      GO TO 405                                                         A0903980
C                                                                       A0903990
C     COMPUTE AND STORE E.C.F. SIZE AND NUMBER OF PTS. IN PATERN        A0904000
  425 SIZE=J-K1-MM                                                      A0904010
      BCANON(MM+2)=SIZE                                                 A0904020
      RESULT(2)=SIZE+Z1                                                 A0904030
      BCANON(MM+3)=PNTCNT                                               A0904040
      GO TO 1200                                                        A0904050
C     TRANSFER INCREMENT LIST TO LOCAL WORKING STORAGE                  A0904060
C     NDLIST IS INDEX FOR END OF INCREMENT LIST DATA                    A0904070
C                                                                       A0904080
C     SET UP FOR LINEAR,GRID,OR PERIPHERAL                              A0904090
 1010 BARG(1) = ARG4(1)                                                 A0904100
      NDLIST = BARG(1)                                                  A0904110
      NDLIST = NDLIST+K1                                                A0904115
      DO 1011 I = 2,NDLIST                                              A0904120
 1011 BARG(I) = ARG4(I)                                                 A0904130
      GO TO 1099                                                        A0904140
C                                                                       A0904150
C     SET UP FOR CIRCULAR                                               A0904160
 1020 BARG(1) = ARG5(1)                                                 A0904170
      NDLIST = BARG(1)                                                  A0904180
      NDLIST = NDLIST+K1                                                A0904185
      DO 1021 I = 2,NDLIST                                              A0904190
 1021 BARG(I) = ARG5(I)                                                 A0904200
C                                                                       A0904210
C     BEGIN PROCESSING INCR. LIST DATA - LOGIC ASSUMES MIN(NDLIST) = 3  A0904220
C                                                                       A0904230
 1099 I = 2                                                             A0904240
 1100 IF (BARG(I)) 1160,1160,1101                                       A0904250
 1101 I = I+1                                                           A0904260
      IF (I - NDLIST) 1105,1145,1145                                    A0904270
 1105 CALL HOLFRM(BARG(I),TEST,1,8,NWD)                                 A0904275
      IF (TEST.NE.AT)GO TO 1135                                         A0904280
C                                                                       A0904290
 1110 I = I+1                                                           A0904300
      IF (BARG(I)) 1160,1160,1115                                       A0904310
C                                                                       A0904320
C     INCR. LIST DATA OF FORM - N AT I                                  A0904330
C                                                                       A0904340
 1115 NINC = BARG(I-2)                                                  A0904350
      MMM = J+ NINC - 1                                                 A0904355
      LL = J - 1                                                        A0904356
      DO 1120 JJ = J, MMM                                               A0904360
      LL = LL + 1                                                       A0904365
 1120 BCANON(JJ) = BARG(I)                                              A0904370
      J = LL                                                            A0904375
C     IS THAT ALL                                                       A0904380
      IF (I - NDLIST) 1130,1125,1125                                    A0904390
C     YES - INCR LIST PROCESSING IS DONE, SAVE FINAL BCANON INDEX       A0904400
 1125 NECF = J                                                          A0904410
      GO TO 1150                                                        A0904420
C     NO - CONTINUE LIST PROCESSING                                     A0904430
 1130 I = I+1                                                           A0904440
      J = J+1                                                           A0904450
C                                                                       A0904460
C     END INCR LIST PROCESSING NOW                                      A0904470
      IF (I - NDLIST) 1100,1131,1131                                    A0904480
 1131 IF (BARG(I)) 1160,1160,1132                                       A0904490
 1132 BCANON(J) = BARG(I)                                               A0904500
      NECF = J                                                          A0904510
      GO TO 1150                                                        A0904520
C     INCR LIST DATA OF FORM NUMBER,NUMBER,NUMBER OR NUMBER,NUMBER,AT   A0904530
C                                                                       A0904540
 1135 IF (BARG(I)) 1160,1160,1140                                       A0904550
 1140 BCANON(J) = BARG(I-1)                                             A0904560
      J = J+1                                                           A0904570
      GO TO 1101                                                        A0904580
C                                                                       A0904590
C     END PROCESSING OF INCR LIST DATA OF FORM NUMBER,NUMBER            A0904600
C     SAVE FINAL BCANON INDEX                                           A0904610
 1145 BCANON(J) = BARG(I-1)                                             A0904620
      BCANON(J+1) = BARG(I)                                             A0904630
      NECF = J+1                                                        A0904640
C     COMPLETE  E.C.F. BASED ON KLL CODE                                A0904650
 1150 K=KLL/100                                                         A0904660
      GO TO (135, 255,355,1300,355),K                                   A0904670
 1160 CALL ERROR(64,'APT090  ')                                         A0904680
      GO TO 1300                                                        A0904690
C                                                                       A0904700
C     WRITE E.C.F. ONTO PERIPHERAL STORAGE                              A0904710
C                                                                       A0904720
 1200 CALL APT094(1,RESULT,BCANON(MM))                                  A0904730
      GO TO 1310                                                        A0904740
 1300 CALL UNDEF (RESULT)                                               A0904750
 1310 CONTINUE                                                          A0904760
      RETURN                                                            A0904770
      END                                                               A0904780
**** SOURCE FILE : M0001150.V06   ***
*
      SUBROUTINE APT102(BOUNDN,SURFN,HSMOD,M)                           00000100
C                                                                       00000200
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000300
C                                                                       00000400
      INCLUDE 'TOTAL.INC'                                               00001501
      INCLUDE 'LDEF.INC'                                                00002301
C                                                                       00002400
C                                                                       00002600
      INCLUDE 'BLANKCOM.INC'                                            00002710
C                                                                       00002720
      COMMON/SSBOND/SBOND0,SBOND,MMODE,ICON,PTS,JAG                     00002800
      DIMENSION BOUNDN(1),SURFN(1),X(1),HSMOD(3),COEF(10)               00002900
      DIMENSION SBOND(9),RESULT(10),PTS(20)                             00003000
      DIMENSION RESUL0(2)                                               00003010
      EQUIVALENCE (RESUL0(2),RESULT(1))                                 00003020
      EQUIVALENCE (TTEST,IA)                                            00003300
     1    ,(COEF(1),A),(COEF(2),B),(COEF(3),C),(COEF(4),F),(COEF(5),G), 00003400
     2     (COEF(6),H),(COEF(7),P),(COEF(8),Q),(COEF(9),R),(COEF(10),D) 00003500
      LOGICAL IEFLG,ERR86,ERR85,ERRFLG,CKDEF                            00003600
      CHARACTER*8 TEST,XPOSX,XPOSY,XNEGX,XNEGY,XIN,XOUT,XSEG            00003610
C                                                                       00003700
C                                                                   *CD*00003800
      DATA XPOSX/'POSX    '/,XPOSY/'POSY    '/,XNEGX/'NEGX    '/        00004200
      DATA XNEGY/'NEGY    '/,XIN/'IN      '/,XOUT/'OUT     '/           00004300
      DATA XSEG/'SEG     '/                                             00004310
       HHH=SURFN(1)                                                     00004500
      CALL HOLFRM(HHH,TEST,1,8,NWD)                                     00004510
      IF(TEST.EQ.XSEG) GO TO 400                                        00004600
      JJJ=4                                                             00004700
      IF (BOUNDF) GO TO 1                                               00004800
       BOUNDF=.TRUE.                                                    00004900
    1 IF (M .NE. 1) GO TO 2                                             00005000
      JAG=0                                                             00005100
      IE=1                                                              00005200
      N=0                                                               00005300
      SBOND0=SURFN(N)                                                   00005400
      ERR85=.FALSE.                                                     00005500
      ERR86=.FALSE.                                                     00005600
      DO 200 II=1,8                                                     00005700
 200  SBOND(II)=SURFN(II)                                               00005800
      IZRO=0                                                            00005900
      ICON=0                                                            00006000
 2    HHH =HSMOD(1)                                                     00006100
      CALL HOLFRM(HHH,TEST,1,8,NWD)                                     00006110
      JAG=JAG+1                                                         00006200
      IF(TEST.EQ.XPOSX.OR.TEST.EQ.XOUT) IE=1                            00006300
      IF(TEST.EQ.XPOSY) IE=2                                            00006400
      IF(TEST.EQ.XNEGX.OR.TEST.EQ.XIN) IE=4                             00006500
      IF(TEST.EQ.XNEGY) IE=5                                            00006600
      CALL UNPACK(SURFN,MODE,ISIZE,ISUB)                                00006700
      JJJ=1                                                             00006800
      IF(M.EQ.1) MMODE=MODE                                             00006900
      IF(M.EQ.1) GO TO 97                                               00007000
      RESUL0(1)=19030000.0D0                                            00007010
      IF((MMODE.EQ.1).AND.(MODE.EQ.1)) GO TO 210                        00007100
      IF((MMODE.EQ.4).AND.(MODE.EQ.1)) GO TO 220                        00007200
      IF((MMODE.EQ.4).AND.(MODE.EQ.4)) GO TO 230                        00007300
      IF((MMODE.EQ.1).AND.(MODE.EQ.4)) GO TO 240                        00007400
      GO TO 97                                                          00007500
 210  CALL APT003(RESULT,SBOND,SURFN)                                   00007600
      GO TO 300                                                         00007700
 220  CALL APT004(RESULT,IE,SURFN,SBOND)                                00007800
      GO TO 300                                                         00007900
 230  CALL APT005(RESULT,IE,SBOND,SURFN)                                00008000
      GO TO 300                                                         00008100
 240  CALL APT004(RESULT,IE,SBOND,SURFN)                                00008200
 300  JJJ=3                                                             00008300
      PTS(ICON+1)=RESULT(1)                                             00008400
      PTS(ICON+2)=RESULT(2)                                             00008500
      PTS(ICON+3)=RESULT(3)                                             00008600
      ICON=ICON+3                                                       00008700
      GO TO 97                                                          00008800
  400 ITY=1                                                             00008900
C  ABFRAGE OB KREISDEFINITION (MMODE=4)                                 00008910
      IF(MMODE.EQ.4) ITY=0                                              00009000
      CALL SYCURV(BOUNDN(1),PTS,SBOND,ITY)                              00009100
 97    RETURN                                                           00009200
      END                                                               00009300
**** SOURCE FILE : M0002811.V05   ***
*
C...  FORTRAN SUBROUTINE APT103                  6/70      RW           A1030010
C                                                                       A1030020
C                          FORTRAN SUBROUTINE APT103                    A1030030
C                                                                       A1030040
C                                                                       A1030050
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A BOUNDED GEOMETRY     A1030060
C              OBJECT DEFINED BY THE FOLLOWING APT STATEMENT.           A1030070
C                                                                       A1030080
C              OBJCTN=OBJECT/BOUND1,BOUND2,...,BOUNDI                   A1030090
C                                                                       A1030100
C CALLING SEQUENCE  CALL APT103(OBJCTN,BOUNDN,M)                        A1030110
C                                                                       A1030120
C ARGUMENTS    OBJCTN    ARRAY TO CONTAIN THE CANONICAL FORM OF THE     A1030130
C                        BOUNDED GEOMETRY OBJECT                        A1030140
C                                                                       A1030150
C              BOUNDN    ARRAY CONTAINING THE CANONICAL FORM OF THE     A1030160
C                        BOUNDED SURFACE OR OBJECT IN \HE OPERAND LIST  A1030170
C                        CURRENTLY BEING PROCESSED                      A1030180
C                                                                       A1030190
C              M         INDICATOR IDENTIFYING THE POSITION OF BOUNDN   A1030200
C                        IN THE OPERAND LIST                            A1030210
C                                                                       A1030220
C                        TAKES THE FOLLOWING VALUES.                    A1030230
C                        3  IF BOUNDN IS THE LAST ARGUMENT              A1030240
C                                                                       A1030250
C                        2  IF BOUNDN IS ANYTHING BUT THE FIRST         A1030260
C                           OR LAST ARGUMENT                            A1030270
C                                                                       A1030280
C                        1  IF PROCESSING THE FIRST ARGUMENT OF A       A1030290
C                           STATEMENT WITH TWO OR MORE ARGUMENTS        A1030300
C                                                                       A1030310
C                        0  IF PROCESSING THE FIRST ARGUMENT OF A       A1030320
C                           STATEMENT WITH ONLY ONE ARGUMENT.           A1030330
C                                                                       A1030340
C CALLED BY    NONE                                                     A1030350
C                                                                       A1030360
C SUBSIDIARIES TYPE              ENTRY                                  A1030370
C                                                                       A1030380
C              INTEGER FUNCTION  ADDRSS                                 A1030390
C              SUBROUTINE        ERROR                                  A1030400
C              SUBROUTINE        INCAN                                  A1030410
C              SUBROUTINE        PRINT                                  A1030420
C              SUBROUTINE        UNPACK                                 A1030430
C                                                                       A1030440
C RESTRICTIONS NONE                                                     A1030450
C                                                                       A1030460
C DIAGNOSTICS  ERROR CODE  COMMENT                                      A1030470
C              85          REFERENCED ELEMENT NOT PROPERLY DEFINED.     A1030480
C                                                                       A1030490
C              86          BOUNDED GEOMETRY ELEMENT HAS BEEN REDEFINED  A1030500
C                          WITH A DIFFERENT NUMBER OF ARGUMENTS.        A1030510
C                                                                       A1030520
C                                                                       A1030530
C                                                                       A1030540
      SUBROUTINE APT103(OBJCTN,BOUNDN,M)                                A1030550
C                                                                       A1030560
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                A1030570
C                                                                       A1030580
      INCLUDE 'TOTAL.INC'                                               A1030691
      INCLUDE 'LDEF.INC'                                                A1030771
      INCLUDE 'IDEF.INC'                                                A1030781
C                                                                       A1030790
C                                                                       A1030800
      INCLUDE 'BLANKCOM.INC'                                            A1030815
C                                                                       A1030816
      DIMENSION OBJCTN(1),BOUNDN(1)                                     A1030820
      INTEGER ADDRSS                                                    A1030830
      LOGICAL ERR85,ERR86                                               A1030840
      LOGICAL CKSTR                                                     A1030844
C                                                                       A1030850
C                                                                   *CD*A1030860
      CHARACTER*1 TEST,DLR                                              A1030865
      LOGICAL DLRTST(8)                                                 A1030870
      EQUIVALENCE (TTEST,DLRTST(1))                                     A1030880
      DATA DLR/'$'/                                                     A1030890
C                                                                   *CD*A1030900
C                                                                       A1030910
C                                                                       A1030920
      IF (M .GT. 1) GO TO 2                                             A1030930
      N=0                                                               A1030940
      ERR85=.FALSE.                                                     A1030950
      ERR86=.FALSE.                                                     A1030960
      CALL UNPACK(OBJCTN,MODE,IOBJSZ,ISUB)                              A1030970
      IF(M .EQ. 0)M=3                                                   A1030980
   2  N=N+2                                                             A1030990
C                                                                       A1031000
C...  MAKE SURE OBJCTN IS NOT REDEFINED ERRONEOUSLY.                    A1031010
C                                                                       A1031020
      IF (N .GT. IOBJSZ) GO TO 20                                       A1031030
C                                                                       A1031040
C...  MAKE SURE BOUNDN IS PROPERLY DEFINED.                             A1031050
C                                                                       A1031060
      CALL UNPACK(BOUNDN,MODE,ISIZE,ISUB)                               A1031070
      IF (CKSTR(BOUNDN(1)) .OR. ISUB .NE. 0) GO TO 10                   A1031080
C                                                                       A1031090
C        * STORE NAME IN CANONICAL FORM                                 A1031100
      OBJCTN(N-1)=BOUNDN(ISIZE+1)                                       A1031110
C                                                                       A1031120
C...  IF BOUNDN IS AN UNASSIGNED NESTED ARGUMENT, GENERATE DIAGNOSTIC.  A1031130
C                                                                       A1031140
      TTEST = OBJCTN(N-1)                                               A1031150
      CALL HOLFRM(DLRTST(1),TEST,1,1,NWD)                               A1031155
      IF (TEST .EQ. DLR) ERR85 = .TRUE.                                 A1031160
C                                                                       A1031170
C...  DETERMINE INDEX FOR BOUNDN                                        A1031180
      IOBJN=(ADDRSS(BOUNDN)-ADDRSS(COM))/KWRDSZ+1                       A1031190
      IF (CANFLG) CALL INCAN(IOBJN)                                     A1031200
      OBJCTN(N)=IOBJN-IBLK1                                             A1031210
C                                                                       A1031220
   5  IF (M .EQ. 3) GO TO 30                                            A1031230
      RETURN                                                            A1031240
C                                                                       A1031250
C...  ERROR 85:  REFERENCED ELEMENT NOT PROPERLY DEFINED.               A1031260
C                                                                       A1031270
   10 CALL UNDEF(OBJCTN(N-1))                                           A1031280
      OBJCTN(  N)=0                                                     A1031290
      ERR85=.TRUE.                                                      A1031300
      GO TO 5                                                           A1031310
C                                                                       A1031320
C...  ERROR 86:  BOUNDED GEOMETRY ELEMENT HAS BEEN REDEFINED WITH       A1031330
C     A DIFFERENT NUMBER OF OPERANDS.                                   A1031340
C                                                                       A1031350
   20 ERR86=.TRUE.                                                      A1031360
      IF (M .NE. 3) GO TO 40                                            A1031370
   30 IF (N .NE. IOBJSZ) ERR86=.TRUE.                                   A1031380
C                                                                       A1031390
      IF (PRNTON) CALL PRINT(3,OBJCTN,1)                                A1031400
      IF (ERR85) CALL ERROR(85,'APT103  ')                              A1031410
      IF (ERR86) CALL ERROR(86,'APT103  ')                              A1031420
      IF (ERR86 .OR. ERR85 ) BNDERR = .TRUE.                            A1031425
   40 RETURN                                                            A1031430
      END                                                               A1031440
**** SOURCE FILE : M0011441.V02   ***
*
C........  FORTRAN SUBROUTINE  APT105                   5/1/72     RN   A1050010
C                                                                       A1050020
      SUBROUTINE APT105(RESULT,M,SN,NT,RM)                              A1050030
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A1050040
C                                                                       A1050050
C  PURPOSE  TO RETRIEVE CL POINT OR VECTOR FROM CLTAPE AND STORE IT     A1050060
C           IN RESULT ARRAY.                                            A1050070
C                                                                       A1050080
C  LINKAGE   CALL  APT105 (RESULT ,M,SN,NT,RM)                          A1050090
C                                                                       A1050100
C  ARGUMENTS   RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE       A1050110
C                      RESULTING POINT OR VECTOR DEFINED AS N TH POINT  A1050120
C                      OR VECTOR OF A PREVIOUS MOTION STATEMENT.        A1050130
C              M       INTEGER                                          A1050140
C                        0   IF RESULT IS POINT                         A1050150
C                        1   IF RESULT IS VECTOR                        A1050160
C              SN      REAL NUMBER OF THE CLDAT SECTION                 A1050161
C              NT      INTEGER DATA TYPE                                A1050162
C                        1      2      3     4     5     6     7        A1050163
C                        TP     TA     TV    PDS   NDS   PPS   NPS      A1050164
C              RM      REAL VALUE N CORRESPONDING TO DESIRED POINT      A1050170
C                      OR VECTOR.                                       A1050180
C                                                                       A1050190
C  IMPORTANT VARIABLES                                                  A1050200
C              IEE     ERROR INDICATOR TO BE SET BY ATAPER WHEN THE     A1050210
C                      SPECIFIED CL POINT DOES NOT EXIST.               A1050220
C              J       INDICATOR OF POINT OR VECTOR FOR TRANSF.         A1050230
C              I       POINTER OF ARRAY P ACCORDING TO POINT OR VECTOR. A1050240
C              P       ARRAY TO CONTAIN X,Y,Z,I,J,K.                    A1050250
C              I       COUNTER TO PICK UP POINT OR VECTOR.              A1050260
C              IERROR  COMMON VARIABLE TO CARRY ERROR CODE.             A1050270
C                                                                       A1050280
C                                                                       A1050290
      INCLUDE 'TOTAL.INC'                                               A1050401
      INCLUDE 'IDEF.INC'                                                A1050402
C                                                                       A1050410
C                                                                       A1050440
      DIMENSION P(6),RESULT(3)                                          A1050450
      N = RM                                                            A1050460
      ISC=SN                                                            A1050461
      NTP=NT                                                            A1050462
      CALL ATAPER(P,N,ISC,NTP,IEE)                                      A1050470
      IF(IEE.EQ.0) GO TO 2                                              A1050480
      IERROR = 93                                                       A1050490
      GO TO 3                                                           A1050500
    2 J = 2                                                             A1050510
      I = 1                                                             A1050520
      IF(M.EQ.1) I = 4                                                  A1050530
      IF(M.EQ.1) J = 3                                                  A1050540
      DO 1 L=1,3                                                        A1050550
      RESULT(L) = P(I)                                                  A1050560
    1 I = I + 1                                                         A1050570
      CALL TRANSF(P,RESULT,J,3,-1)                                      A1050580
    3 CALL DEFEXT (RESULT)                                              A1050590
      RETURN                                                            A1050600
      END                                                               A1050610
**** SOURCE FILE : M0000845.V03   ***
*
C...  FORTRAN SUBROUTINE     APT106    6/69      SR                     A1060000
C                                                                       A1060020
C PURPOSE      TO COMPUTE AND STORE THE CANONICAL FORM                  A1060030
C              OF THE NTH POINT OF A PATERN                             A1060040
C                                                                       A1060060
C LINKAGE      CALL APT106(RESULT,PAT,RN)                               A1060080
C                                                                       A1060100
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF THE POINT A1060120
C              PAT     ARRAY CONTAINING THE I.C.F. OF THE PATERN        A1060140
C              RN      NUMBER OF THE DESIRED POINT                      A1060160
C                                                                       A1060180
C SUBSIDIARIES TYPE                ENTRY                                A1060200
C              SUBROUTINE          APT094                               A1060220
C              LOGICAL FUNCTION    CKDEF                                A1060240
C              SUBROUTINE          DEFEXT                               A1060260
C              SUBROUTINE          NPAT                                 A1060280
C                                                                       A1060300
      SUBROUTINE APT106(RESULT,PAT,RN)                                  A1060320
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A1060340
      DIMENSION RESULT(3),PAT(2)                                        A1060360
C                                                                       A1060380
      INCLUDE 'TOTAL.INC'                                               A1060601
      INCLUDE 'DEF.INC'                                                 A1060801
      INCLUDE 'ZNUMBR.INC'                                              A1061051
      INCLUDE 'IDEF.INC'                                                A1061071
C                                                                       A1061072
C                                                                       A1061074
      INCLUDE 'BLANKCOM.INC'                                            A1061085
C                                                                       A1061086
      LOGICAL CKDEF                                                     A1061090
C                                                                       A1061100
      IF(CKDEF(PAT))GO TO 90                                            A1061120
C                                                                       A1061140
C              MOVE THE EXTERNAL CANONICAL FORM TO BCANON               A1061160
C                                                                       A1061180
      CALL APT094(2,PAT,BCANON)                                         A1061200
      IF(CKDEF(PAT))GO TO 90                                            A1061220
C                                                                       A1061240
C              CHECK TO SEE THAT N IS LESS THAN OR EQUAL TO             A1061260
C              THE NUMBER OF POINTS IN THIS PATERN                      A1061280
C                                                                       A1061300
      IF(RN.GT.BCANON(4))GO TO 95                                       A1061320
      N=RN+Z1EM5                                                        A1061340
C                                                                       A1061360
C          DETERMINE AND STORE THE COORDINATES OF THE POINT             A1061380
C                                                                       A1061400
      CALL NPAT(R,N)                                                    A1061420
   10 CALL DEFEXT(RESULT)                                               A1061440
C                                                                       A1061460
      RETURN                                                            A1061480
C                                                                       A1061500
C          REFERENCED PATERN HAS NOT BEEN PREVIOUSLY CORRECTLY DEFINED  A1061520
C                                                                       A1061540
   90 IERROR=37                                                         A1061560
      GO TO 10                                                          A1061580
C                                                                       A1061600
C          THE NUMBER OF THE REQUESTED POINT IS GREATER THAN THE        A1061620
C          NUMBER OF POINTS IN THE PATERN                               A1061640
C                                                                       A1061660
   95 IERROR=38                                                         A1061680
      GO TO 10                                                          A1061700
      END                                                               A1061720
**** MODULE = ARELEM ****
**** SOURCE FILE : M0011439.W02   ***
*
C                                                                       AER00001
C                                                                       AER00002
      SUBROUTINE AERR(NUMBER,SBNAM)                                     AER00010
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           AER00015
C                                                                       AER00020
      INCLUDE 'TOTAL.INC'                                               AER00131
      INCLUDE 'IFXCOR.INC'                                              AER00161
C                                                                       AER00170
C...  20. SYSTEM I/O FILE NAMES                                         AER00180
C                                                                       AER00190
      INCLUDE 'SYMFIL.INC'                                              AER00205
C                                                                       AER00240
C     25. COMMON FOR AERR INFORMATION                                   AER00250
C                                                                       AER00260
      COMMON /AERCOM/  IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS               AER00270
      DIMENSION  PCTPTS(3,20), PCTPLN(4), ERRPTS(3,3)                   AER00280
C                                                                       AER00282
      INCLUDE 'DARRAY.INC'                                              AER00285
C                                                                       AER00290
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR                        AER00300
C                                                                       AER00310
          COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS       AER00320
          DIMENSION XTRAS(7),CFLAGS(4),LXTRAS(7)                        AER00330
          INTEGER   ERRX,XTRAS                                          AER00340
          LOGICAL   ERR,FINI,XC,CL,ASM,LXTRAS,CFLAGS,PX,END,ABEND       AER00350
          EQUIVALENCE (LXTRAS(1),XTRAS(1)),(CFLAGS(1),ERR)              AER00360
C                                                                       AER00362
      INTEGER NUM                                                       AER00363
      CHARACTER*8 SUBNAM,SBNAM*(*)                                      AER00364
      INTEGER BCDF                                                      AER00365
      LOGICAL FIRST                                                     AER00366
      SAVE FIRST,KERR                                                   AER00368
C                                                                       AER00370
      INTEGER Z4E                                                       AER00372
      PARAMETER (Z4E=1308622848)                                        AER00374
      DIMENSION KERR(10),ISN(2)                                         AER00380
      DATA KERR/0,0,Z4E,1,Z4E,1,Z4E,1,2*0/                              AER00390
      DATA FIRST/.TRUE./                                                AER00395
C                                                                       AER00397
C     ------------------------------------------------------------      AER00400
C                                                                       AER00402
      IF (FIRST) THEN                                                   AER00404
        KERR(1) = BCDF('AERR')                                          AER00406
        KERR(2) = BCDF('    ')                                          AER00408
        FIRST=.FALSE.                                                   AER00412
      ENDIF                                                             AER00414
C                                                                       AER00416
      SUBNAM=SBNAM                                                      AER00418
      IF(NUMBER.LT.0)GO TO 10                                           AER00420
      CALL AERR2(NUMBER,SUBNAM)                                         AER00430
      GO TO 20                                                          AER00435
C                                                                       AER00440
C        WARNING DIAGNOSTIC - NO VARIABLE INFORMATION OUTPUT            AER00450
C                                                                       AER00460
   10 XTRAS(2)=XTRAS(2)+1                                               AER00470
      IAERR=1                                                           AER00480
      CALL ATAPE                                                        AER00490
      NR = 0                                                            AER00500
      KERR(4)=1                                                         AER00510
      KERR(6)=2                                                         AER00520
      KERR(8)=NUMBER                                                    AER00530
      KERR( 9) = BCDF(SUBNAM(1:4))                                      AER00532
      KERR(10) = BCDF(SUBNAM(5:8))                                      AER00534
      CALL EWRITE (EXFILE,NR,KERR,10,IR)                                AER00540
      IF (ERRX .LT. 4) ERRX=4                                           AER00550
      CALL CPRINT(DARRAY)                                               AER00555
      NUM=ABS(NUMBER)                                                   AER00557
      IAERR=0                                                           AER00560
      IAERFG=0                                                          AER00570
      CALL RECORD(ISN(1))                                               AER00571
      CALL CFORM(' ***** WARNING DIAGNOSTIC ',DARRAY,1,26)              AER00572
      CALL ICONV(NUM,DARRAY,27,5)                                       AER00573
      CALL CFORM('ISN',DARRAY,36,3)                                     AER00574
      CALL ICONV(ISN(1),DARRAY,39,5)                                    AER00575
      CALL CFORM(' FROM SUBROUTINE ',DARRAY,44,17)                      AER00576
      CALL CFORM(SUBNAM,DARRAY,61,8)                                    AER00577
      CALL CFORM('*****',DARRAY,69,5)                                   AER00578
      CALL CPRINT(DARRAY)                                               AER00579
      CALL ERROUT(NUMBER)                                               AER00580
   20 RETURN                                                            AER00581
      END                                                               AER00590
**** SOURCE FILE : M0001934.V11   ***
*
C....    FORTRAN SUBROUTINE                 AERR2                       AER20000
C                                                                       AER20010
C... THIS ROUTINE WRITES ONTO THE EXFILE TAPE ALL THE INFORMATION       AER20020
C       REQUIRED BY THE CLTAPE EDITOR TO PROCESS ARELEM DIAGNOSTICS     AER20030
C                                                                       AER20040
C   SUBSIDIARIES   ATAPE, APT242, CUTTER, QSD                           AER20050
C                                                                       AER20060
C                                                                       AER20070
      SUBROUTINE AERR2 (NUMBER,SUBNAM)                                  AER20080
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            AER20090
C                                                                       AER20100
C                                                                       AER20110
      INCLUDE 'TOTAL.INC'                                               AER20221
      INCLUDE 'DSHAR4.INC'                                              AER20451
      INCLUDE 'FXCOR.INC'                                               AER20821
      INCLUDE 'HOLRTH.INC'                                              AER20911
      INCLUDE 'SV.INC'                                                  AER21301
      INCLUDE 'ISV.INC'                                                 AER21501
      INCLUDE 'IFXCOR.INC'                                              AER21711
      INCLUDE 'KNUMBR.INC'                                              AER21901
C                                                                       AER21902
C...  20. SYSTEM I/O FILE NAMES                                         AER21910
C                                                                       AER21920
      INCLUDE 'SYMFIL.INC'                                              AER21925
C                                                                       AER22020
C                                                                       AER22030
C...  21. ADDCOM BLOCK                                                  AER22040
C                                                                       AER22050
      COMMON/ADDCOM/ ADDCOM                                             AER22060
      DIMENSION ADDCOM(25)                                              AER22070
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            AER22080
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN)               AER22090
C                                                                       AER22100
C                                                                       AER22140
C        COMMON BLOCKS FOR SURFACE NAME AND SUBSCRIPT STORAGE           AER22150
C                                                                       AER22160
C     23. DSNAME BLOCK                                                  AER22170
      COMMON/DSNAME/DSNAME,NAMSUB                                       AER22180
C                                                                       AER22190
C     24. SRFNAM BLOCK                                                  AER22200
      COMMON /SRFNAM/ PSNAME,CS1NAM,CS2NAM,IPSSUB,ICS1SB,ICS2SB         AER22210
C                                                                       AER22220
C     25. COMMON FOR AERR INFORMATION                                   AER22230
C                                                                       AER22240
      COMMON /AERCOM/  IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS               AER22250
      DIMENSION  PCTPTS(3,20), PCTPLN(4), ERRPTS(3,3)                   AER22260
      INTEGER BCDF                                                      AER22261
      CHARACTER*8 SUBNAM                                                AER22262
      LOGICAL FIRST                                                     AER22263
      SAVE FIRST,KERR                                                   AER22264
      INCLUDE 'DARRAY.INC'                                              AER22265
C                                                                       AER22267
      INTEGER Z4E                                                       AER22268
      PARAMETER (Z4E=1308622848)                                        AER22269
C                                                                       AER22270
      DIMENSION DSHARE(100)                                             AER22272
C                                                                       AER22274
C        BLANK COMMON CONTAINING CANONICAL FORM OF SURFACES             AER22280
C                                                                       AER22290
      INCLUDE 'BLANKCOM.INC'                                            AER22300
C                                                                       AER22320
C        CANONICAL SIZE ARRAY FOR VARIOUS MODES OF A SURFACE            AER22330
C                                                                       AER22340
      DIMENSION ICANSZ(30)                                              AER22350
C                                                                       AER22390
C        DIMENSION FOR ARGUMENTS IN CALL TO QSD AND CUTTER              AER22400
      DIMENSION  CANFRM(10), COEFF(10), TRANS(12)                       AER22410
C                                                                       AER22415
      DIMENSION ITEMP(8),DTEMP(4)                                       AER22416
      EQUIVALENCE (ITEMP(1),DTEMP(1))                                   AER22417
C                                                                       AER22421
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR                        AER22422
C                                                                       AER22423
          COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS       AER22424
          DIMENSION XTRAS(7),CFLAGS(4),LXTRAS(7)                        AER22425
          INTEGER   ERRX,XTRAS                                          AER22426
          LOGICAL   ERR,FINI,XC,CL,ASM,LXTRAS,CFLAGS,PX,END,ABEND       AER22427
          EQUIVALENCE (LXTRAS(1),XTRAS(1)),(CFLAGS(1),ERR)              AER22428
C                                                                       AER22429
      DIMENSION KERR(10),ISN(2)                                         AER22430
      DATA KERR/0,0,Z4E,1,Z4E,1,Z4E,1,2*0/                              AER22432
      DATA       ICANSZ  / 4,  4,  7,  7,  4,    10, 10, 10,  7, 10,    AER22434
     +                     2,  2,  2, 10, 10,     1,  1, 12,  3,  3,    AER22435
     +                     1,  1,  1,  1, 12,     2,  1,  1,  2,  2/    AER22436
      DATA  IPOW/Z4E/                                                   AER22437
      DATA  FIRST/.TRUE./                                               AER22438
C     ------------------------------------------------------------      AER22440
C                                                                       AER22450
C                                                                       AER22460
      TAL(1)=FWD(1)                                                     AER22461
      TAL(2)=FWD(2)                                                     AER22462
      TAL(3)=FWD(3)                                                     AER22463
      XTRAS(1) = XTRAS(1) + 1                                           AER22466
      IAERR=K1                                                          AER22470
      IF (FIRST)THEN                                                    AER22472
        KERR(1) = BCDF('AERR')                                          AER22474
        KERR(2) = BCDF('    ')                                          AER22475
        FIRST=.FALSE.                                                   AER22476
      ENDIF                                                             AER22478
      NERR=NUMBER                                                       AER22480
      KERR( 9)= BCDF(SUBNAM(1:4))                                       AER22482
      KERR(10)= BCDF(SUBNAM(5:8))                                       AER22484
      NUMRTN=NERR/100                                                   AER22490
      CALL ATAPE                                                        AER22510
      CALL RECORD(ISN(1))                                               AER22520
      CALL CPRINT(DARRAY)                                               AER22530
      CALL CFORM(' ***** RESTART DIAGNOSTIC ',DARRAY,1,26)              AER22540
      CALL ICONV(NERR,DARRAY,27,5)                                      AER22550
      CALL CFORM('ISN',DARRAY,36,3)                                     AER22560
      CALL ICONV(ISN(1),DARRAY,39,5)                                    AER22565
      CALL CFORM(' FROM SUBROUTINE ',DARRAY,44,17)                      AER22570
      CALL CFORM(SUBNAM,DARRAY,61,8)                                    AER22575
      CALL CFORM('*****',DARRAY,69,5)                                   AER22580
      CALL CPRINT(DARRAY)                                               AER22585
      CALL ERROUT(NERR)                                                 AER22586
C                                                                       AER22590
C..   ***** RESTART DIAGNOSTIC - OUTPUT SURFACE VARIABLE DATA *****     AER22600
C                                                                       AER22610
C        SET ERROR LEVEL FLAG TO VALUE 8                                AER22612
   20 ERRX=K8                                                           AER22614
C                                                                       AER22616
C        CHECK FOR POCKET ERROR PROCESSING                              AER22620
      IF (NUMRTN-35) 22,90,22                                           AER22630
C                                                                       AER22640
C...     IF ERROR IS FOR MISSING CUTTER USE A POINT CUTTER              AER22650
   22 IF (ICTDEF .NE. K1) GO TO 23                                      AER22660
C                                                                       AER22670
      ICTDEF=0                                                          AER22680
      NR = 0                                                            AER22690
      KERR(4)=1                                                         AER22692
      KERR(6)=2                                                         AER22694
      KERR(8)=NERR                                                      AER22696
      CALL EWRITE (EXFILE,NR,KERR,10,IR)                                AER22698
      IAERR=0                                                           AER22700
      NR=7                                                              AER22702
      DO 21 I=1,9                                                       AER22704
      CANFRM(I)=0.0                                                     AER22705
   21 CONTINUE                                                          AER22706
      CALL CUTTER(NR,CANFRM)                                            AER22708
      GO TO 100                                                         AER22709
C                                                                       AER22710
C        OUTPUT ERROR NUMBER AND CUTTER PARAMETERS                      AER22720
C                                                                       AER22725
   23 KERR(4)=1                                                         AER22730
      KERR(6)=9                                                         AER22732
      KERR(8)=NERR                                                      AER22734
      CALL AFORM(DSHARE(1),KERR,5)                                      AER22735
      CALL AFORM(DSHARE(6),CUTDAT,7)                                    AER22737
      NR=0                                                              AER22738
      CALL EWRITE (EXFILE,NR,DSHARE,24,IR)                              AER22739
C                                                                       AER22740
C        CHECK FOR NO SURFACE VARIABLE OUTPUT                           AER22750
   24 IF (IAERFG) 25,25,99                                              AER22760
C                                                                       AER22770
C        WRITE NECESSARY SV AND ISV VARIABLES FOR PS ON EXFILE          AER22780
   25 L=K2                                                              AER22790
      J=IPS                                                             AER22800
      SFNAME=PSNAME                                                     AER22810
      ISUB=IPSSUB                                                       AER22820
C                                                                       AER22830
C                                                                       AER22840
C.... *** PRIMARY OUTPUT LOOP FOR EACH SURFACE ***                      AER22850
C                                                                       AER22860
   30 L=L+K1                                                            AER22870
      IC=ICANON(J)                                                      AER22880
      MODE=ISFIDN(J)                                                    AER22890
C                                                                       AER22900
C        SAVE CANONICAL FORM                                            AER22910
      ISIZE=ICANSZ(MODE)                                                AER22920
      ICC=IC                                                            AER22925
      DO  32 I=1,ISIZE                                                  AER22930
      CANFRM(I)=CANON(ICC)                                              AER22940
      ICC=ICC+1                                                         AER22950
   32 CONTINUE                                                          AER22955
C                                                                       AER22960
C        CALCULATE VT VALUES FOR ERRORS FROM AMIND ASSOCIATED ROUTINES  AER22970
C              (SINCE THEY MAY BE MISSING AT THIS TIME)                 AER22980
      IF (NUMRTN.LT.260 .OR. NUMRTN.GT.272) GO TO 34                    AER22990
C                                                                       AER23000
   33 VT(1,J)=TP(1,J)-TH(J)*TN(1,J)  -TE(1)                             AER23010
      VT(2,J)=TP(2,J)-TH(J)*TN(2,J)-TE(2)                               AER23020
      VT(3,J)=TP(3,J)-TH(J)*TN(3,J)-TE(3)                               AER23030
C                                                                       AER23040
C        PRIMARY OUTPUT STATEMENT CONTAINING NECESSARY SV AND ISV       AER23050
C        VARIABLES, SURFACE NAME AND TYPE, AND CANONICAL FORM           AER23060
C                                                                       AER23070
   34 JSIZE=ISIZE+30                                                    AER23080
      JL=J+K2                                                           AER23090
      KERR(4)=L                                                         AER23100
      KERR(6)=JSIZE                                                     AER23105
      KERR(8)=NERR                                                      AER23110
      CALL AFORM(DSHARE(1),KERR,5)                                      AER23115
      ITEMP(1)=IPOW                                                     AER23116
      ITEMP(2)=ITLON(J)                                                 AER23117
      ITEMP(3)=IPOW                                                     AER23118
      ITEMP(4)=ISFTYP(J)                                                AER23119
      ITEMP(5)=IPOW                                                     AER23120
      ITEMP(6)=IFL4(J)                                                  AER23121
      ITEMP(7)=IPOW                                                     AER23122
      ITEMP(8)=IFAR(J)                                                  AER23123
      CALL AFORM(DSHARE(6),DTEMP,4)                                     AER23124
      CALL AFORM(DSHARE(10),TAU1(J),1)                                  AER23125
      CALL AFORM(DSHARE(11),TAU2(J),1)                                  AER23126
      CALL AFORM(DSHARE(12),TH(J),1)                                    AER23127
      CALL AFORM(DSHARE(13),S(J),1)                                     AER23128
      CALL AFORM(DSHARE(14),RC(J),1)                                    AER23129
      CALL AFORM(DSHARE(15),SP(1,J),3)                                  AER23130
      CALL AFORM(DSHARE(18),SN(1,J),3)                                  AER23131
      CALL AFORM(DSHARE(21),TN(1,J),3)                                  AER23132
      CALL AFORM(DSHARE(24),CC(1,J),3)                                  AER23133
      CALL AFORM(DSHARE(27),VT(1,J),3)                                  AER23134
      CALL AFORM(DSHARE(30),SFNAME,1)                                   AER23135
      ITEMP(2)=ISUB                                                     AER23136
      ITEMP(4)=MODE                                                     AER23137
      ITEMP(6)=ISIZE                                                    AER23138
      CALL AFORM(DSHARE(31),DTEMP,3)                                    AER23139
      CALL AFORM(DSHARE(34),CANFRM,ISIZE)                               AER23140
      NR=0                                                              AER23145
      N=(JSIZE+3)*2                                                     AER23150
      CALL EWRITE (EXFILE,NR,DSHARE,N,IR)                               AER23155
C                                                                       AER23160
C        CHECK FOR QUADRIC, LCONIC, OR GCONIC TYPE SURFACES,            AER23170
C        IF FOUND, CALL QSD TO IDENTIFY AND SOLVE FOR PARAMETERS        AER23180
C                                                                       AER23190
      GO TO (35,35,35,35,35,  80,80,80,35,80,  35,35,35,80,35,          AER23200
     +35,35,35,35,35,35,35,35,35,35,35,35,35,35,35),MODE                AER23210
C                                                                       AER23220
C        CHECK FOR FURTHER SURFACE OUTPUT                               AER23230
   35 IF (((NUMSUR+K2).EQ.L) .OR. (NUMSUR.LE.K0)) GO TO 95              AER23240
      IF(L-K4) 40,50,60                                                 AER23250
C                                                                       AER23260
C        WRITE NECESSARY SV AND ISV VARIABLES FOR DS ON EXFILE          AER23270
   40 J=IDS                                                             AER23280
      IGOTO=K1                                                          AER23290
      ISRCH=K1                                                          AER23300
      SFNAME=DSNAME                                                     AER23310
      ISUB=NAMSUB                                                       AER23320
      GO TO 30                                                          AER23330
C                                                                       AER23340
C        WRITE NECESSARY SV AND ISV VARIABLES FOR CS1 ON EXFILE         AER23350
   50 J=ICS                                                             AER23360
      SFNAME=CS1NAM                                                     AER23380
      ISUB=ICS1SB                                                       AER23390
      GO TO 30                                                          AER23400
C                                                                       AER23410
C        WRITE NECESSARY SV AND ISV VARIABLES FOR CS2 ON EXFILE         AER23420
   60 J=J+LSV1                                                          AER23430
      SFNAME=CS2NAM                                                     AER23450
      ISUB=ICS2SB                                                       AER23460
      GO TO 30                                                          AER23470
C                                                                       AER23480
C        OUTPUT QUADRIC INFORMATION                                     AER23490
C                                                                       AER23500
   80 CALL QSD (CANFRM,IQSDFG,COEFF,TRANS)                              AER23510
      KERR(4)=7                                                         AER23515
      KERR(6)=24                                                        AER23520
      KERR(8)=IQSDFG                                                    AER23525
      NR=0                                                              AER23530
      CALL AFORM(DSHARE(1),KERR,5)                                      AER23532
      CALL AFORM(DSHARE(6),COEFF,10)                                    AER23533
      CALL AFORM(DSHARE(16),TRANS,12)                                   AER23534
      CALL EWRITE (EXFILE,NR,DSHARE,54,IR)                              AER23535
      GO TO 35                                                          AER23540
C                                                                       AER23550
C        OUTPUT POCKET INFORMATION AND RETURN                           AER23560
C                                                                       AER23570
   90 JSZ=3*NPCTPT                                                      AER23580
      JSIZE=JSZ+16                                                      AER23590
      KERR(4)=8                                                         AER23600
      KERR(6)=JSIZE                                                     AER23605
      KERR(8)=NERR                                                      AER23610
      NR=0                                                              AER23612
      N=(JSIZE+3)*2                                                     AER23614
      CALL AFORM(DSHARE(1),KERR,5)                                      AER23617
      ITEMP(2)=NPCTPT                                                   AER23618
      CALL AFORM(DSHARE(6),DTEMP,1)                                     AER23619
      CALL AFORM(DSHARE(7),ERRPTS,9)                                    AER23620
      CALL AFORM(DSHARE(16),PCTPLN,4)                                   AER23621
      CALL AFORM(DSHARE(20),PCTPTS,3*NPCPT)                             AER23622
      CALL EWRITE(EXFILE,NR,DSHARE,N,IR)                                AER23625
      GO TO 99                                                          AER23630
C                                                                       AER23640
C        WRITE NECESSARY VARIABLES FOR IDENTIFICATION OF SURFACE        AER23650
C                                                                       AER23660
   95 NR=0                                                              AER23665
      KERR(4)=2                                                         AER23670
      KERR(6)=20                                                        AER23672
      KERR(8)=ICSCNT                                                    AER23674
      CALL AFORM(DSHARE(1),KERR,5)                                      AER23675
      ITEMP(2)=IGO                                                      AER23676
      ITEMP(4)=ISTRUP                                                   AER23677
      CALL AFORM(DSHARE(6),DTEMP,2)                                     AER23678
      CALL AFORM(DSHARE(8),DPMAX,1)                                     AER23679
      ITEMP(2)=NMPNTS                                                   AER23680
      CALL AFORM(DSHARE(9),DTEMP,1)                                     AER23681
      CALL AFORM(DSHARE(10),ELMAX,1)                                    AER23682
      CALL AFORM(DSHARE(11),TI,3)                                       AER23683
      CALL AFORM(DSHARE(14),TE,3)                                       AER23684
      ITEMP(2)=IS                                                       AER23685
      CALL AFORM(DSHARE(17),DTEMP,1)                                    AER23686
      CALL AFORM(DSHARE(18),TAL,3)                                      AER23687
      CALL AFORM(DSHARE(21),TA,3)                                       AER23688
      CALL EWRITE (EXFILE,NR,DSHARE,46,IR)                              AER23690
C                                                                       AER23700
      CALL APT236                                                       AER23705
      CALL APT242                                                       AER23710
   99 IAERFG=0                                                          AER23720
  100 RETURN                                                            AER23730
      END                                                               AER23740
**** SOURCE FILE : ALTCMV.ORG   ***
*
      SUBROUTINE ALTCMV(JC,TN,S,IP,ID,VCS,DCS,EPS1CS,CMOVE,LRET)        00000100
C                                                                       00000200
C.... COMPUTE CMOVE BY ALTERNATIVE METHODS                              00000300
C                                                                       00000400
C ARGUMENTS:                                                            00000500
C           JC      FLAG INDICATING GAUSS FAILURE CONDITION USED        00000600
C                   TO SELECT ALTERNATIVE METHOD FOR COMPUTING CMOVE    00000700
C           TN      TOOL NORMAL DIRECTIONS                              00000800
C           S       DIRECTED DISTANCES                                  00000900
C           IP      INDEX FOR PS                                        00001000
C           ID      INDEX FOR DS                                        00001100
C           VCS     CHECK SURFACE DIRECTION                             00001200
C           SCS     CHECK SURFACE DIRECTED DISTANCE                     00001300
C           EPS1CS  TOLERANCE EQ .1*TAU FOR CHECK SURFACE               00001400
C           CMOVE   MOVE REQUIRED TO BRING TOOL INTO CONTACT WITH       00001500
C                   3 SURFACES                                          00001600
C           LRET    RETURN FLAG = .TRUE. IF WITHIN TOLERANCE WHEN       00001700
C                                        PS PARALLEL TO CS              00001800
C                               = .FALSE. OTHERWISE                     00001900
C                                                                       00002000
      INCLUDE 'ZNUMBR.INC'                                              00002100
C                                                                       00002200
      INTEGER JC,IP,ID,IVZ,J,I,II                                       00002300
      DOUBLE PRECISION TN,S,VCS,DCS,EPS1CS,CMOVE,C1,C2                  00002400
      DIMENSION TN(3,5),S(5),VCS(3),CMOVE(3)                            00002500
      LOGICAL LRET                                                      00002600
C                                                                       00002700
      LRET=.FALSE.                                                      00002800
      IVZ=SIGN(1,JC)                                                    00002900
      J=ABS(JC)                                                         00003000
C                                                                       00003100
      IF (J.EQ.1) THEN                                                  00003200
C.... SELECT LARGER OF PS AND DS MOVES                                  00003300
        IF (ABS(S(IP)).GT.ABS(S(ID))) THEN                              00003400
          I=IP                                                          00003500
        ELSE                                                            00003600
          I=ID                                                          00003700
        ENDIF                                                           00003800
C.... SET MOVE TO .9*LARGER S(I) + CHECK SURF MOVE                      00003900
        C1=Z9EM1*S(I)                                                   00004000
        C2=DCS                                                          00004100
        CALL SETMOV(CMOVE,C1,TN(1,I),C2,VCS)                            00004200
C                                                                       00004300
      ELSE IF (J.EQ.12) THEN                                            00004400
C                                                                       00004500
C.... PS PARALLEL TO DS                                                 00004600
C                                                                       00004700
C.... SELECT LARGER OF PS AND DS MOVES                                  00004800
        IF (ABS(S(IP)).GT.ABS(S(ID))) THEN                              00004900
          I=IP                                                          00005000
          II=ID                                                         00005100
        ELSE                                                            00005200
          I=ID                                                          00005300
          II=IP                                                         00005400
        ENDIF                                                           00005500
C                                                                       00005600
        IF ( (S(I)*S(II)*IVZ).GT.0) THEN                                00005700
C.... SET MOVE TO .9*LARGER + .9*CHECK SURF MOVE                        00005800
          C1=Z9EM1*S(I)                                                 00005900
        ELSE                                                            00006000
C.... SET MOVE TO .9*(MEAN S(I) IN DIRECTION OF LARGER)                 00006100
C                           + .9*CHECK SURF MOVE                        00006200
          C1=Z9EM1*SIGN(Z1,S(I))*Z5EM1*(S(I)+S(II))                     00006300
        ENDIF                                                           00006400
        C2=Z9EM1*DCS                                                    00006500
        CALL SETMOV(CMOVE,C1,TN(1,I),C2,VCS)                            00006600
C                                                                       00006700
      ELSE IF (J.EQ.13) THEN                                            00006800
C                                                                       00006900
C.... PS PARALLEL TO CS                                                 00007000
C                                                                       00007100
C.... COMPUTE .9* MEAN (PS AND CS DISTANCES)                            00007200
        C1=Z9EM1*Z5EM1*(S(IP)+IVZ*DCS)                                  00007300
        IF (ABS(C1).LT.(Z1EM2*EPS1CS)) THEN                             00007400
C.... CONSIDER AS SUCCESSFUL MOVE                                       00007500
          LRET=.TRUE.                                                   00007600
        ELSE                                                            00007700
C.... SET MOVE TO .9* MEAN (PS AND CS DISTANCES) IN PS DIRECTION        00007800
C               + .9* DS MOVE                                           00007900
          C2=Z9EM1*S(II)                                                00008000
          CALL SETMOV(CMOVE,C1,TN(1,IP),C2,TN(1,ID))                    00008100
        ENDIF                                                           00008200
C                                                                       00008300
      ELSE                                                              00008400
C                                                                       00008500
C.... DS PARALLEL TO CS                                                 00008600
C                                                                       00008700
C.... SELECT LARGER OF DS AND CS MOVES                                  00008800
        IF (ABS(S(ID)).GT.ABS(DCS)) THEN                                00008900
C.... DS LARGER                                                         00009000
C.... SET MOVE TO .9*IN DIRECTION OF DS + .9*PS MOVE                    00009100
          C1=Z9EM1                                                      00009200
          C2=Z9EM1*S(IP)                                                00009300
          CALL SETMOV(CMOVE,C1,TN(1,ID),C2,TN(1,IP))                    00009400
        ELSE                                                            00009500
C.... CS LARGER                                                         00009600
          IF ((S(IP)*S(ID)*IVZ).GT.0) THEN                              00009700
C.... SET MOVE TO .9*PS MOVE + .9* CHECK SURF MOVE                      00009800
            C1=Z9EM1*S(IP)                                              00009900
          ELSE                                                          00010000
C.... SET MOVE TO .9* MEAN (PS AND DS DISTANCES) IN PS DIRECTION        00010100
C               + .9* CHECK SURF MOVE                                   00010200
            C1=Z9EM1*SIGN(Z1,S(I))*Z5EM1*(S(IP)+S(ID))                  00010300
          ENDIF                                                         00010400
          C2=Z9EM1*DCS                                                  00010500
          CALL SETMOV(CMOVE,C1,TN(1,IP),C2,VCS)                         00010600
        ENDIF                                                           00010700
      ENDIF                                                             00010800
C                                                                       00010900
      END                                                               00011000
      SUBROUTINE SETMOV(CM,A,V1,B,V2)                                   00011100
C                                                                       00011200
C.... CALCULATE VECTOR MOVE = A*V1 + B*V2                               00011300
C                                                                       00011400
      INTEGER I                                                         00011500
      DOUBLE PRECISION CM,A,V1,B,V2                                     00011600
      DIMENSION CM(3),V1(3),V2(3)                                       00011700
C                                                                       00011800
      DO 10 I=1,3                                                       00011900
        CM(I)=A*V1(I)+B*V2(I)                                           00012000
   10 CONTINUE                                                          00012100
C                                                                       00012200
      END                                                               00012300
**** SOURCE FILE : M0002918.W05   ***
*
C.....FORTRAN SUBROUTINE  ....AMIND          8/68                 PH,HG 00000100
      SUBROUTINE AMIND                                                  00000200
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00000300
C                                                                       00000399
      INCLUDE 'TOTAL.INC'                                               00001301
      INCLUDE 'DSHAR4.INC'                                              00003201
      INCLUDE 'FXCOR.INC'                                               00005901
      INCLUDE 'SV.INC'                                                  00009201
      INCLUDE 'ISV.INC'                                                 00010801
      INCLUDE 'IFXCOR.INC'                                              00012601
      INCLUDE 'ISHR18.INC'                                              00013801
C                                                                       00013802
C...  21. ADDCOM BLOCK                                                  00013900
      COMMON/ADDCOM/ ADDCOM                                             00014000
      DIMENSION ADDCOM(25)                                              00014100
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            00014200
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),              00014300
     2            (ADDCOM(25),KDYNFL)                                   00014400
C                                                                       00014410
      INCLUDE 'BLANKCOM.INC'                                            00014600
C                                                                       00014610
      DIMENSION TPSAV(3),TNSAV(3),SPSAV(3),SNSAV(3),U1SAV(3)            00014700
      COMMON/MODESS/MODESS,MSSCHK,MSSARL                                00014800
      DIMENSION OLDU1(3),TE1(3)                                         00014900
C                                                                       00014910
      INCLUDE 'CHEKFL.INC'                                              00014920
      INCLUDE 'CGOUG.INC'                                               00014930
      CHARACTER*70 MSG                                                  00014940
      INCLUDE 'CSTART.INC'                                              00014950
C                                                                       00014990
      DATA ONE,ZERO,ZLIT1,ZLIT2/1.0D0,0.0D0,.99995D0,.995D0/            00015000
      DATA ZLIT5/0.99D0/                                                00015010
      DATA Z2,Z9EM1/2.0D0,0.9D0/                                        00015100
C                                                                       00015200
C------------AMIND - FIND MINIMUM DISTANCE FROM CUTTER TO SURFACE.      00015300
C             /-IC IS INDEX TO THE CANON FORM OF IS SURFACE             00015400
      IC=ICANON(IS)                                                     00015500
C             /-SPECIAL LOGIC FOR SSURF ONLY.  A FAST LOGIC IS          00015600
C             /-USED FOR POINT AND BALL CUTTERS AT TIMES ON SSURFS      00015700
C             /-MSSCHK SET TO 1 FOR SPECIAL LOGIC, 0 FOR NORMAL         00015800
      FLIPMX = ZERO                                                     00015810
      FLIPAB = ZERO                                                     00015820
      SSAV=1.0D5                                                        00015830
      SMODS=1.0D5                                                       00015840
      MODESS=0                                                          00015900
      MSSCHK=0                                                          00016000
      ISTART=0                                                          00016050
      UVDIST=ZERO                                                       00016060
      DIST=ZERO                                                         00016070
      IF(MSSARL.NE.1) GO TO 1101                                        00016100
      IF(ISFIDN(IS).NE.29) GO TO 1101                                   00016200
C             /-JTLFLG IS 1 IF 8 TH CUTTER SEGMENT RQD, 0 OTHERWISE.    00016300
      IF(JTLFLG(IS).EQ.1) GO TO 1101                                    00016400
      W1=CUTDAT(2)-CUTDAT(1)                                            00016500
      IF(DABS(W1).GT.0.0001D0) GO TO 1101                               00016600
      MSSCHK=1                                                          00016700
 1101 CONTINUE                                                          00016800
      ICBOT=IC-1                                                        00017100
C             /-JMIN SWITCH=1 FOR ERR IN AMIND, =0 OTHERWISE            00017300
C             /-IAMDCT IS COUNT OF NUMBER OF ITERATIONS WITHIN AMIND    00017400
      JMIN=0                                                            00017600
      IAMDCT=0                                                          00017700
C                                                                       00017800
C             /-SAVE TN ONLY FOR CHECK SURFACES                         00017900
      IF(IS.LT.ICS) GO TO 1102                                          00018000
      DO 1105 I=1,3                                                     00018100
      TNL(I,IS)=TN(I,IS)                                                00018110
 1105 CONTINUE                                                          00018200
 1102 IF(KDYNFL.NE.0) CALL APT238(3)                                    00018300
C              /-DYNDMP(103) --------.                                  00018400
C             /-REPLACE TOOL BY POINT TOOL AT TP(IT) IF TANGENT         00018500
C             /-CS IS BEING REFERENCED.                                 00018600
C             /-IOP=1 FOR SMALLEST POSITIVE DIRECTED DISTANCE           00018700
C             /-IOP=0 FOR SMALLEST ABSOLUTE DIRECTED DISTANCE           00018800
      IOP(IS)=0                                                         00018900
C             /-ITLON=0 FOR TOOL ON THIS SURF, =1 OTHERWISE             00019000
      ITLON1=ITLON(IS)                                                  00019100
      DO 1103 I=1,3                                                     00019200
 1103 TE1(I)=TE(I)                                                      00019300
C             /-ITLON -2 MEANS FIND DIST FROM DS CONTACT PT TO SURF     00019400
C             /-ITLON=-3 MEANS FIND DIST FROM PS CONTACT PT TO SURF     00019500
C             /-THESE CASES ARE FORCED BY CHANGING TE TO TP AND TOOL ON.00019600
      IF(ITLON(IS).LT.2) GO TO 1104                                     00019700
      IF(ITLON(IS).EQ.2) K=IDS                                          00019800
      IF(ITLON(IS).EQ.3) K=IPS                                          00019900
      ITLON(IS)=0                                                       00020000
C             /-TE IS THE CURRENT TOOL END AND VT IS THE VECTOR FROM THE00020100
C             /-TO THE CONTACT POINT ON THE CUTTER WITH THE SURFACE.    00020200
      DO 1107 I=1,3                                                     00020400
      TE(I)=TP(I,K)-TH(K)*TN(I,K)                                       00020500
      VT(I,IS)=ZERO                                                     00020600
 1107 CONTINUE                                                          00020700
C                                                                       00020800
C             /-FOR INITIAL ENTRY FOR A GIVEN SURFACE,JENT=1. THEN      00020900
C             /-FOLLOW INITIAL ENTRY ROUTES. START WITH TP = TM.        00021000
 1104 CONTINUE                                                          00021100
C                                                                       00021101
C     SPECIAL HANDLING WHEN GFLG=1                                      00021102
C                                                                       00021103
      IF (GFLG.GT.ZERO) THEN                                            00021104
        CFAKT=ONE                                                       00021106
        GFLG=-ONE                                                       00021108
77008   CONTINUE                                                        00021110
        DO 7008 I=1,3                                                   00021112
          TP(I,IS)=TE(I)+CFAKT*CUTDAT(1)*TI(I)                          00021114
C.... SAVE TN                                                           00021116
          TNSAV(I)=TN(I,IS)                                             00021118
 7008   CONTINUE                                                        00021120
        ITSEG(IS)=IBEGIN                                                00021122
        MODESS=11                                                       00021124
        CALL AJUNDD                                                     00021126
        MODESS=0                                                        00021128
C                                                                       00021130
C.... TN,SN TROUBLE ? (ITNCHG=1)                                        00021131
C                                                                       00021132
        IF (ITNCHG.EQ.0) THEN                                           00021134
          GOTO 252                                                      00021136
        ELSE                                                            00021138
          DO 77011 I=1,3                                                00021140
            TN(I,IS)=TNSAV(I)                                           00021142
77011     CONTINUE                                                      00021144
          IF (CFAKT.LT.0.3D0) THEN                                      00021146
            GOTO 252                                                    00021148
          ELSE                                                          00021150
            CFAKT=CFAKT-0.1D0                                           00021152
            GOTO 77008                                                  00021154
          ENDIF                                                         00021156
        ENDIF                                                           00021158
      ENDIF                                                             00021160
C-----------------------------------------------                        00021200
C             /-JENT =1 FOR FIRST ENTRY TO AMIND, 0 OTHERWISE.          00021300
      IF(JENT(IS).EQ.0) GO TO 2012                                      00021400
C             /-INITIAL ENTRY - CONSTRUCT FIRST TP IN MIDDLE OF CUTTER  00021500
      W1=CUTDAT(7)/2.0                                                  00021600
      IF(MSSCHK.EQ.1) W1=CUTDAT(2)                                      00021700
      DO 1108 I=1,3                                                     00021800
(uafhcx) 9% 