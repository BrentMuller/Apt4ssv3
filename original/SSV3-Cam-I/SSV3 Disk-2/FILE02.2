cat afile02.2
C                                                                       LAR24400
C...  IF NOMORE = .TRUE.,SLOPE OR NORMAL IN WRONG PLACE--TAKE ERROR PATHLAR24500
C                                                                       LAR24600
  102 IF(NOMORE)GO TO 1030                                              LAR24700
C                                                                       LAR24800
C... IF STACK(1,TOP-1) IS CLASS IDENT, CHANGE IT TO CLASS PERMID.       LAR24900
C                                                                       LAR25000
      ERRPT=TOP-1                                                       LAR25100
      L = STACK(1,ERRPT)                                                LAR25200
  103 IF(L.GT.NAMMAX)GO TO 105                                          LAR25300
      IF(NAMTBL(L)/MODULO.EQ.IDENT(1)/MODULO)CALL SETMOD(TOP-1,PERMID)  LAR25400
C                                                                       LAR25500
C... PLACE STACK(1,TOP-1) IN BIGSTK                                     LAR25600
C                                                                       LAR25700
  105 M=4                                                               LAR25800
      ASSIGN 110 TO N                                                   LAR25900
      GO TO 1000                                                        LAR26000
C                                                                       LAR26100
C... SEARCH GEOMETRIC PRODUCTIONS                                       LAR26200
C                                                                       LAR26300
  110 J = GEOLOC(TABCYL)                                                LAR26400
      EP=ACTNO                                                          LAR26500
      K = SEARCH (BIGSTK,BIGTOP, GEOMTB(J),EP)                          LAR26600
C                                                                       LAR26700
C... IF ACTION NUMBER = 200, NO MATCHING PRODUCTION WAS FOUND.          LAR26800
C                                                                       LAR26900
      IF (K.GE.200)GOTO 1030                                            LAR27000
C                                                                       LAR27100
C... EXAMINE, WHETHER SPLINE AND VECTOR APPEAR IN VALID POSITION        LAR27200
C                                                                       LAR27300
      IF (BIGCNT.GT.4)GOTO 200                                          LAR27400
      GOTO(150,160,200,170),BIGCNT                                      LAR27500
  150 IF(K.NE.1)GOTO 1030                                               LAR27600
      GOTO 210                                                          LAR27700
  160 IF(XYZ.NE.28)GOTO 200                                             LAR27800
      IF(K.NE.3.AND.K.NE.4)GOTO 1030                                    LAR27900
      GOTO 200                                                          LAR28000
  170 IF(XYZ.NE.28)GOTO 200                                             LAR28100
      IF(VECTR.NE.BLANK(2))GOTO 200                                     LAR28200
      IF(K.NE.4)GOTO 1030                                               LAR28300
C                                                                       LAR28400
C... BRANCH ON GEOMETRIC ACTION NUMBER.                                 LAR28500
C                                                                       LAR28600
  200 GO TO (210,220,230,240,250,260,270,280,290,300,310,320,330,310),K LAR28700
C... GEO ACTION NUMBER 1   *********************************************LAR28800
C                                                                       LAR28900
  210 IF (BIGCNT .NE. 1)  GO TO 1030                                    LAR29000
      GO TO 400                                                         LAR29100
C                                                                       LAR29200
C... GEO ACTION NUMBER 2   *********************************************LAR29300
C... SAVE MATRIX AND COMPRESS BIGSTK                                    LAR29400
C                                                                       LAR29500
  220 MATRX = STACK(1,TOP-1)                                            LAR29600
      TRFORM = ONE                                                      LAR29700
      CALL OPCODE(REPL)                                                 LAR29800
      CALL ONEARG(12)                                                   LAR29900
      CALL TWOARG(-6,DOTTAB)                                            LAR30000
      CALL ARGCVT(MATRX)                                                LAR30100
      CALL RLSLIN                                                       LAR30200
      LK=MATRX                                                          LAR30300
      KL=1                                                              LAR30400
      GO TO 3000                                                        LAR30500
C                                                                       LAR30600
C... GEO ACTION NUMBER 3   *********************************************LAR30700
C... EXPAND BIGSTK TO ACCOMODATE TRFORM-MATRIX IF TRFORM IS ARGUMENT 3  LAR30800
C... OF THE DEFINITION.                                                 LAR30900
C                                                                       LAR31000
  230 IF (BIGCNT .NE. 2)  GO TO 1030                                    LAR31100
      GO TO 390                                                         LAR31200
C                                                                       LAR31300
C... GEO ACTION NUMBER 4   *********************************************LAR31400
C... CHECK TO SEE THAT THE FORMAT IS CORRECT AND SAVE THE VECTOR        LAR31500
C                                                                       LAR31600
  240 IF ((BIGCNT .NE. 2) .AND. ((BIGCNT .NE. 4) .OR. (MATRX .EQ.       LAR31700
     /BLANK(2))))  GO TO 1030                                           LAR31800
      VECTR = STACK(1,TOP-1)                                            LAR31900
      CALL OPCODE(REPL)                                                 LAR32000
      CALL ONEARG(3)                                                    LAR32100
      CALL TWOARG(-3,DOTTAB)                                            LAR32200
      CALL ARGCVT(VECTR)                                                LAR32300
      CALL RLSLIN                                                       LAR32400
      LK=VECTR                                                          LAR32500
      KL=2                                                              LAR32600
      GO TO 3000                                                        LAR32700
C                                                                       LAR32800
C... GEO ACTION NUMBER 5   *********************************************LAR32900
C                                                                       LAR33000
  250 I = STACK(1,TOP-1)                                                LAR33100
      SLOPCT = SLOPCT + 1                                               LAR33200
      IF(PNTCNT.EQ.0)GOTO 1030                                          LAR33300
C                                                                       LAR33400
C... DETERMINE IF SLOPE OR NORMAL IS FOR FIRST OR LAST POINT AND        LAR33500
C... COMPRESS BIGSTK.                                                   LAR33600
C                                                                       LAR33700
      CALL OPCODE(MOVE)                                                 LAR33800
      KL=-1                                                             LAR33900
      IF(PNTCNT .GT. 1) KL=-2                                           LAR34000
      CALL TWOARG(KL,DOTTAB)                                            LAR34100
      CALL ARGCVT(I)                                                    LAR34200
      CALL RLSLIN                                                       LAR34300
      LK=I                                                              LAR34400
      KL=3                                                              LAR34500
C                                                                       LAR34600
C... SET NOMORE =.TRUE. INDICATING THIS MUST BE THE LAST ARGUMENT.      LAR34700
C                                                                       LAR34800
      IF(PNTCNT.GT.1) NOMORE = .TRUE.                                   LAR34900
      GO TO 3000                                                        LAR35000
C                                                                       LAR35100
C... GEO ACTION NUMBER 6   *********************************************LAR35200
C                                                                       LAR35300
  260 I = STACK(1,TOP-1)                                                LAR35400
C                                                                       LAR35500
C... DETERMINE IF SLOPE OR NORMAL IS FOR THE FIRST OR LAST POINT.       LAR35600
C                                                                       LAR35700
      IF (PNTCNT .GT. 1)   GO TO 265                                    LAR35800
C                                                                       LAR35900
C... DETERMINE IF ARGUMENT = SLOPE OR NORMAL AND SET FIRST = ONE OR TWO.LAR36000
C... EXPAND BIGSTK.                                                     LAR36100
C                                                                       LAR36200
      IF(CNAMTB(I).EQ.NORMAL)                                           LAR36300
     /    GO TO 261                                                     LAR36400
      FIRST = ONE                                                       LAR36500
      GO TO 390                                                         LAR36600
  261 FIRST = TWO                                                       LAR36700
      GO TO 390                                                         LAR36800
C                                                                       LAR36900
C... DETERMINE IF ARGUMENT = SLOPE OR NORMAL AND SET SECOND = ONE OR TWOLAR37000
C... EXPAND BIGSTK                                                      LAR37100
C                                                                       LAR37200
  265 IF(CNAMTB(I).EQ.NORMAL)                                           LAR37300
     /    GO TO 266                                                     LAR37400
      SECOND = ONE                                                      LAR37500
      GO TO 390                                                         LAR37600
  266 SECOND = TWO                                                      LAR37700
      GO TO 390                                                         LAR37800
C                                                                       LAR37900
C... GEO ACTION NUMBER 7   *********************************************LAR38000
C... ADD 1 TO POINT COUNT, ADVANCE ..TAB INDEX BY 2, COMPRESS BIGSTK,   LAR38100
C... ADD SECOND COORDINATE TO MOVE I.L. ARGUMENT LIST AND RELEASE THE ILLAR38200
C                                                                       LAR38300
  270 PNTCNT = PNTCNT + 1                                               LAR38400
      IF(PNTCNT.EQ.139)GOTO 1030                                        LAR38500
      CALL OPCODE(MOVE)                                                 LAR38600
      CALL TWOARG(INDEX,DOTTAB)                                         LAR38700
      CALL ARGCVT(SAVE1)                                                LAR38800
      INDEX  = INDEX - 2                                                LAR38900
      CALL ARGCVT (STACK(1,TOP-1))                                      LAR39000
      CALL RLSLIN                                                       LAR39100
      LK=SAVE1                                                          LAR39200
      KL=4                                                              LAR39300
      GO TO 3000                                                        LAR39400
  271 LK=STACK(1,TOP-1)                                                 LAR39500
      KL=5                                                              LAR39600
      GO TO 3000                                                        LAR39700
C                                                                       LAR39800
C... GEO ACTION NUMBER 8   *********************************************LAR39900
C... ADD 1 TO POINT COUNT, ADVANCE ..TAB INDEX BY 3, COMPRESS BIGSTK,   LAR40000
C... ADD THIRD COORDINATE TO MOVE I.L. ARGUMENT LIST AND RELEASE THE IL LAR40100
C                                                                       LAR40200
  280 PNTCNT = PNTCNT + 1                                               LAR40300
      IF(PNTCNT.EQ.139)GOTO 1030                                        LAR40400
      CALL OPCODE(MOVE)                                                 LAR40500
      CALL TWOARG(INDEX,DOTTAB)                                         LAR40600
      CALL ARGCVT(SAVE1)                                                LAR40700
      CALL ARGCVT(SAVE2)                                                LAR40800
      INDEX = INDEX - 3                                                 LAR40900
      CALL ARGCVT (STACK(1,TOP-1))                                      LAR41000
      CALL RLSLIN                                                       LAR41100
      LK=SAVE1                                                          LAR41200
      KL=6                                                              LAR41300
      GO TO 3000                                                        LAR41400
  281 LK=SAVE2                                                          LAR41500
      KL=7                                                              LAR41600
      GO TO 3000                                                        LAR41700
  282 LK=STACK(1,TOP-1)                                                 LAR41800
      KL=8                                                              LAR41900
      GO TO 3000                                                        LAR42000
C                                                                       LAR42100
C... GEO ACTION NUMBER 9   *********************************************LAR42200
C... ADD SECOND COORDINATE TO MOVE I.L. ARGUMENT LIST, EXPAND BIGSTK    LAR42300
C                                                                       LAR42400
  290 SAVE2=STACK(1,TOP-1)                                              LAR42500
      GO TO 380                                                         LAR42600
C                                                                       LAR42700
C... GEO ACTION NUMBER 10  *********************************************LAR42800
C... GENERATE MOVE I.L. COMMAND, PUT FIRST COORDINATE IN MOVE ARGUMENT  LAR42900
C... LIST, AND EXPAND BIGSTK.                                           LAR43000
C                                                                       LAR43100
  300 SAVE1=STACK(1,TOP-1)                                              LAR43200
C                                                                       LAR43300
C                                                                       LAR43400
      GO TO 390                                                         LAR43500
C                                                                       LAR43600
C... GEO ACTION NUMBERS 11,12,13, AND 14  ******************************LAR43700
C... ADD 1 TO POINT COUNT, ADVANCE ..TAB INDEX, GENERATE MOVE I.L.      LAR43800
C... COMMAND AND RELEASE THE I.L.                                       LAR43900
C                                                                       LAR44000
  310 I1 = -1                                                           LAR44100
      I2 = -2                                                           LAR44200
      GO TO 335                                                         LAR44300
C                                                                       LAR44400
  320 I1 = -2                                                           LAR44500
      I2 = -3                                                           LAR44600
      GO TO 335                                                         LAR44700
C                                                                       LAR44800
  330 I1 = -3                                                           LAR44900
      I2 = -1                                                           LAR45000
      GO TO 335                                                         LAR45100
C                                                                       LAR45200
  335 PNTCNT = PNTCNT + 1                                               LAR45300
      IF(PNTCNT.EQ.139)GOTO 1030                                        LAR45400
      LK=STACK(1,TOP-1)                                                 LAR45500
      IF(MOD(NAMTBL(LK),MODULO).LT.MODHLF)GO TO 336                     LAR45600
      J=GETTMP(POINT)                                                   LAR45700
      CALL OPCODE(REPL)                                                 LAR45800
      CALL ONEARG(3)                                                    LAR45900
      CALL TWOARG(NOUGHT,J)                                             LAR46000
      CALL TWOARG(TRPDLR,LK)                                            LAR46100
      CALL RLSLIN                                                       LAR46200
      STACK(1,TOP-1)=J                                                  LAR46300
      CALL PUTTMP(POINT)                                                LAR46400
  336 KL=9                                                              LAR46500
      GO TO 3000                                                        LAR46600
  338 CALL OPCODE(MOVE)                                                 LAR46700
      CALL TWOARG(INDEX, DOTTAB)                                        LAR46800
      CALL TWOARG(I1,STACK(1,TOP-1))                                    LAR46900
      CALL TWOARG(I2,STACK(1,TOP-1))                                    LAR47000
      IF (K .NE. 14)  GO TO 340                                         LAR47100
      CALL TWOARG(-3,STACK(1,TOP-1))                                    LAR47200
      INDEX = INDEX - 1                                                 LAR47300
  340 CALL RLSLIN                                                       LAR47400
      INDEX = INDEX - 2                                                 LAR47500
      GO TO 400                                                         LAR47600
C                                                                       LAR47700
C... COMPRESS BIGSTK                                                    LAR47800
C                                                                       LAR47900
  350 BIGSTK(8) = BIGSTK(10)                                            LAR48000
  360 BIGSTK(6) = BIGSTK(8)                                             LAR48100
      BIGTOP = 6                                                        LAR48200
      GO TO 400                                                         LAR48300
C                                                                       LAR48400
C... SLIDE BIGSTK ARGUMENTS UP                                          LAR48500
C                                                                       LAR48600
  380 BIGTOP = 10                                                       LAR48700
      BIGSTK(10) = BIGSTK(8)                                            LAR48800
      GO TO 395                                                         LAR48900
  390 BIGTOP = 8                                                        LAR49000
  395 BIGSTK(8)  = BIGSTK(6)                                            LAR49100
      BIGSTK(6)  = BIGSTK(4)                                            LAR49200
C                                                                       LAR49300
C... COMPRESS STACK AND EXIT                                            LAR49400
C                                                                       LAR49500
  400 STACK(1,TOP-2) = STACK(1,TOP)                                     LAR49600
      STACK(2,TOP-2) = STACK(2,TOP)                                     LAR49700
      TOP = TOP-2                                                       LAR49800
       RETURN                                                           LAR49900
C                                                                       LAR50000
C **********************************************************************LAR50100
C... FINAL PROCESSING  *************************************************LAR50200
C                                                                       LAR50300
C... RESERVE SPACE FOR RESULT OF TABCYL DEFINITION IF NECESSARY.        LAR50400
C                                                                       LAR50500
  500 IF (ACTNO .EQ. 105)  GO TO 530                                    LAR50600
      RESULT = STACK(1,TOP-5)                                           LAR50700
      J = MODULO * (NAMTBL(RESULT) / MODULO)                            LAR50800
      IF ((J .EQ. VBL(1)) .OR. (J .EQ. TEMP(1)))    GO TO 540           LAR50900
      NAMTBL(RESULT) = VBL(1) + TABCYL                                  LAR51000
      CALL RESRVZ (RESULT, TABCYL, TXXXX(1,TABCYL), 1)                  LAR51100
      GO TO 545                                                         LAR51200
  530 RESULT = GETTMP(TABCYL)                                           LAR51300
      NESTG = .TRUE.                                                    LAR51400
      GO TO 550                                                         LAR51500
C                                                                       LAR51600
C... IF THIS VARIABLE HAS BEEN PREVIOUSLY DEFINED WITH ANOTHER MODE,    LAR51700
C... ISSUE ERROR AND TERMINATE PROCESSING.                              LAR51800
  540 K = MODE (RESULT)                                                 LAR51900
      IERROR=1001                                                       LAR52000
      ERRPT=TOP-6                                                       LAR52100
      IF (K .NE. TABCYL)  GO TO 1040                                    LAR52200
C                                                                       LAR52300
C... IF THIS VARIABLE HAS BEEN PREVIOUSLY DEFINED WITH THE SAME MODE,   LAR52400
C... ISSUE WARNING AND CONTINUE PROCESSING                              LAR52500
      IF(J.EQ.VBL(1).AND.INTMED.EQ.0)CALL ALARM(50,TOP-5,4,'LARGES  ')  LAR52600
C                                                                       LAR52700
C... IF ERROR OCCURED PREVIOUSLY,GENERATE A CALL TO APT094.             LAR52800
C                                                                       LAR52900
      IF (FOULUP)  GO TO 1050                                           LAR53000
C                                                                       LAR53100
C... CHECK FOR INCOMPLETE ARGUMENT LIST AND CHECK THAT THE NUMBER OF    LAR53200
C... POINTS IS WITHIN BOUNDS.                                           LAR53300
C                                                                       LAR53400
  545 IERROR=1025                                                       LAR53500
      ERRPT=0                                                           LAR53600
      IF ((PNTCNT+SLOPCT).LT.4.OR.BIGTOP.NE.6)GOTO 1035                 LAR53700
C                                                                       LAR53800
C... TRANSLATE FIRST MODIFIER TO AN I.L. NUMBER                         LAR53900
C                                                                       LAR54000
  550 L = STACK(1,TOP-1)                                                LAR54100
      J = NAMTBL(L) - (NAMTBL(L)/MODULO)*MODULO - 19                    LAR54200
      IF (J-5)  552,554,554                                             LAR54300
  552 II = ONE                                                          LAR54400
      GO TO 556                                                         LAR54500
  554 II = ZERO(J)                                                      LAR54600
C                                                                       LAR54700
C... CHECK TO SEE IF WE HAVE AN XYZ FORMAT WITH NO DIRECTRIX SPECIFIED. LAR54800
C                                                                       LAR54900
C... CHECK IF THIS TABCYL IS ONE OF THE TWO LARGEST LARGE DATA ARRAY    LAR55000
C... CANONICAL FORMS ENCOUNTERED AND IF SO SAVE ITS SIZE IN MAXSIZ.     LAR55100
C                                                                       LAR55200
  556 NOWRDS=21+7*PNTCNT                                                LAR55300
      IF(NOWRDS.LE.(IABS(MAXSIZ(2))))GO TO 570                          LAR55400
      IF(NOWRDS.LE.(IABS(MAXSIZ(1))))GO TO 560                          LAR55500
      MAXSIZ(2)=MAXSIZ(1)                                               LAR55600
      MAXSIZ(1)=NOWRDS                                                  LAR55700
      GO TO 570                                                         LAR55800
  560 MAXSIZ(2)=NOWRDS                                                  LAR55900
C                                                                       LAR56000
C... INSERT TABCYL SIZE IN CANSIZ ARRAY FOR FUTURE REFERENCE.           LAR56100
C                                                                       LAR56200
  570 J = RESULT - (CANTOP*(RESULT/CANTOP))                             LAR56300
      DO 580  I = 1,CANTOP                                              LAR56400
      J = J + 1 - (CANTOP*(J/CANTOP))                                   LAR56500
      IF((CANSIZ(1,J).NE.0).AND.(CANSIZ(2,J).NE.RESULT))GO TO 580       LAR56600
      CANSIZ(1,J) = NOWRDS                                              LAR56700
      CANSIZ(2,J) = RESULT                                              LAR56800
      GO TO 600                                                         LAR56900
  580 CONTINUE                                                          LAR57000
C                                                                       LAR57100
C... CANSIZ HAS OVERFLOWED--- TOO MANY LARGE DATA ARRAYS IN PART PROGRAMLAR57200
C                                                                       LAR57300
      IERROR=53                                                         LAR57400
      ERRPT=TOP-6                                                       LAR57500
      GO TO 1040                                                        LAR57600
C                                                                       LAR57700
C...  GENERATE CALL I.L. FOR APT088 (TABCYL DEFINITION REDUCTION RTN.)  LAR57800
C                                                                       LAR57900
  600 TABCYS = .TRUE.                                                   LAR58000
      CALL  CALLZZ (APTXXX(67))                                         LAR58100
      CALL  ARGCVT (RESULT)                                             LAR58200
      CALL  ARGCVT (II)                                                 LAR58300
      CALL  TWOARG (QUIDLR, PNTCNT)                                     LAR58400
      CALL  ARGCVT (FIRST)                                              LAR58500
      CALL  ARGCVT (SECOND)                                             LAR58600
      CALL  ARGCVT (TRFORM)                                             LAR58700
      CALL TWOARG(NOUGHT,DOTTAB)                                        LAR58800
      CALL  RLSLIN                                                      LAR58900
C                                                                       LAR59000
C... ADJUST THE STACK AND RETURN                                        LAR59100
C                                                                       LAR59200
  610 IF (ACTNO - 104)  635,620,640                                     LAR59300
  620 TOP = TOP - 6                                                     LAR59400
  630 STACK(1,TOP) = RESULT                                             LAR59500
      K = NAMTBL(RESULT) / MODULO                                       LAR59600
      STACK(2,TOP) = META(K)                                            LAR59700
  635 RETURN                                                            LAR59800
  640 TOP = TOP - 4                                                     LAR59900
      NESTG = .FALSE.                                                   LAR60000
      GO TO 630                                                         LAR60100
C                                                                       LAR60200
C ********************************************************************  LAR60300
C... CONVERT AN ELEMENT OF THE STACK TO MACHINE DEPENDENT REPRESENTATIONLAR60400
C... AND INSERT IT IN BIGSTK SO IT CAN BE MATCHED WITH THE GEOMETRIC    LAR60500
C... PRODUCTIONS.                                                       LAR60600
C                                                                       LAR60700
C... LINKAGE --- SET L = STACK ELEMENT (NAMTBL POINTER)                 LAR60800
C...             SET M = BIGSTK INDEX                                   LAR60900
C...             ASSIGN N TO RETURN STATEMENT NUMBER                    LAR61000
C                                                                       LAR61100
 1000 IF(L.GT.NAMMAX)GO TO 1005                                         LAR61200
      KK = MODULO * (NAMTBL(L) /MODULO)                                 LAR61300
      IARG = NAMTBL(L) - KK                                             LAR61400
      IF (IARG .GE. 500)   IARG = IARG - 500                            LAR61500
      IF ((KK .EQ. VBL(1)) .OR. (KK .EQ. TEMP(1)))   GO TO 1020         LAR61600
      IF (KK .EQ. PERMID(1))  GO TO 1010                                LAR61700
      IF (KK .NE. NUMBER(1))  GO TO 1030                                LAR61800
 1005 IARG =REAL                                                        LAR61900
      GO TO 1020                                                        LAR62000
C---     CHECK FOR UNDEFINED SLOPE VALUE                                LAR62100
 1010 IF(IARG.EQ.0) GO TO 1030                                          LAR62200
      IARG=IARG+50                                                      LAR62300
 1020 BIGSTK(M) = PMIDTB(IARG)                                          LAR62400
      GO TO N, (10,110)                                                 LAR62500
C                                                                       LAR62600
C ********************************************************************  LAR62700
C... INVALID TABCYL DEFINITION                                          LAR62800
C                                                                       LAR62900
 1030 CALL ALARM(1025,ERRPT,8,'LARGES  ')                               LAR63000
      FOULUP = .TRUE.                                                   LAR63100
      GO TO 400                                                         LAR63200
C                                                                       LAR63300
C... FINAL PROCESSING CANNOT BE COMPLETED                               LAR63400
C                                                                       LAR63500
 1035 IF(FOULUP)GOTO 1050                                               LAR63600
      IF(EP.EQ.0)GOTO 1040                                              LAR63700
      STACK(1,TOP)=COMMA(2)                                             LAR63800
      ERRPT=TOP+1                                                       LAR63900
 1040 TOP=TOP+1                                                         LAR64000
      CALL ALARM(IERROR,ERRPT,8,'LARGES  ')                             LAR64100
      TOP=TOP-1                                                         LAR64200
 1050 CALL CALLZZ(APTXXX(68))                                           LAR64300
      CALL TWOARG(DLR,FOUR)                                             LAR64400
      CALL ARGCVT(RESULT)                                               LAR64500
      CALL TWOARG (NOUGHT,DOTTAB)                                       LAR64600
      CALL RLSLIN                                                       LAR64700
      GO TO 610                                                         LAR64800
C                                                                       LAR64900
C...  IF INDIRECT ADRESS TEMPORARY,RELEASE IT.                          LAR65000
C.                                                                      LAR65100
 3000 IF(LK.GT.NAMMAX)GO TO 4000                                        LAR65200
      I=NAMTBL(LK)                                                      LAR65300
      IF(I/MODULO.NE.TEMP(1)/MODULO)GO TO 4000                          LAR65400
      J=I-TEMP(1)                                                       LAR65500
      IF(J.GE.MODHLF)J=SUBSCR                                           LAR65600
      CALL PUTTMP(J)                                                    LAR65700
 4000 GO TO(360,400,360,271,360,281,282,350,338),KL                     LAR65800
      CALL HELP                                                         LAR65900
      RETURN                                                            LAR66000
       END                                                              LAR66100
**** SOURCE FILE : M0006649.V07   ***
*
C                                                                       LCN00100
C              FORTRAN SUBROUTINE LCANON                                LCN00200
C                                                                       LCN00300
C LINKAGE      SUBROUTINE LCANON(ACTNO,BIGCNT)                          LCN00400
C                                                                       LCN00500
C          SUBSIDIARIES                  CALLED BY                      LCN00600
C          TYPE          ENTRY           TYPE          ENTRY            LCN00700
C          SUBROUTINE    CONCAT          SUBROUTINE    RECOG            LCN00800
C          INTEGER FCT.  GETTMP                                         LCN00900
C          SUBROUTINE    BINBCD                                         LCN01000
C          SUBROUTINE    ARGCVT                                         LCN01100
C          INTEGER FCT.  NUMB                                           LCN01200
C          SUBROUTINE    OPCODE                                         LCN01300
C          SUBROUTINE    PUTTMP                                         LCN01400
C          SUBROUTINE    RESRVZ                                         LCN01500
C          SUBROUTINE    RLSLIN                                         LCN01600
C          SUBROUTINE    CALLZZ                                         LCN01700
C          SUBROUTINE    TWOARG                                         LCN01800
C          SUBROUTINE    ALARM                                          LCN01900
C                                                                       LCN02000
      SUBROUTINE LCANON(ACTNO,BIGCNT)                                   LCN02100
C                                                                       LCN02200
      IMPLICIT INTEGER (A-Z)                                            LCN02300
C                                                                       LCN02400
C                                                                       LCN02500
C        1.    NAME TABLE AND TABLE LIMITS                              LCN02600
C                                                                       LCN02700
      INCLUDE 'NAMETB.INC'                                              LCN02810
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                LCN02850
C CNAMTB:      NAME TABLE OR DICTIONARY                                 LCN02950
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     LCN03000
C                                                                       LCN03400
C        2.    STACK AND POINTER STORAGE                                LCN03500
C                                                                       LCN03600
      COMMON/STKLST/STKLST                                              LCN03700
      DIMENSION STKLST(300),STACK(2,99)                                 LCN03800
C TOP:         POINTER TO LAST STACK ENTRY                              LCN03900
      EQUIVALENCE (TOP,STKLST(1))                                       LCN04000
C STACK:       WORKING STACK                                            LCN04100
      EQUIVALENCE (STACK(1,1),STKLST(4))                                LCN04200
C                                                                       LCN04300
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      LCN04400
C                                                                       LCN04500
      COMMON/CODE/CODE                                                  LCN04600
      DIMENSION CODE(150),COMMA(2),TEMP(2),VBL(2),BIGGEO(2)             LCN04700
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF ',     '        LCN04800
      EQUIVALENCE (COMMA(1),CODE(1))                                    LCN04900
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        LCN05000
      EQUIVALENCE (TEMP(1),CODE(33))                                    LCN05100
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        LCN05200
      EQUIVALENCE (VBL(1),CODE(61))                                     LCN05300
C BIGGEO:      (1)=CODE CLASS 44000,(2)=NAMTBL INDEX OF 'BIGGEO'        LCN05400
      EQUIVALENCE (BIGGEO(1),CODE(87))                                  LCN05500
C                                                                       LCN05600
C        4.    PRODUCTION TABLE                                         LCN05700
C                                                                       LCN05800
      COMMON/SRCTBL/SRCTBL                                              LCN05900
      DIMENSION SRCTBL(502),META(50)                                    LCN06000
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   LCN06100
      EQUIVALENCE (META(1),SRCTBL(3))                                   LCN06200
C                                                                       LCN06300
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         LCN06400
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    LCN06500
      COMMON/TMP/TXXXX                                                  LCN06600
      DIMENSION TXXXX(2,32)                                             LCN06700
C                                                                       LCN06800
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      LCN06900
C                                                                       LCN07000
      COMMON/BCDPTR/BCDPTR                                              LCN07100
      DIMENSION BCDPTR(7)                                               LCN07200
C DOTTAB:      NAMTBL POINTER TO ALPHAMERIC LITERAL '$$TAB'             LCN07300
      EQUIVALENCE (DOTTAB,BCDPTR(7))                                    LCN07400
C                                                                       LCN07410
C        9.    NAME TABLE POINTERS TO NUMBERS                           LCN07420
C                                                                       LCN07430
      COMMON/NUMPTR/NUMPTR                                              LCN07440
      DIMENSION NUMPTR(12)                                              LCN07445
C ONE:         NAMTBL POINTER TO '1     '                               LCN07450
      EQUIVALENCE (ONE,NUMPTR(3))                                       LCN07455
C FOUR:        NAMTBL POINTER TO '4     '                               LCN07460
      EQUIVALENCE (FOUR,NUMPTR(7))                                      LCN07470
C                                                                       LCN07500
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    LCN07600
C                                                                       LCN07700
      COMMON/CFSIZE/CFSIZE                                              LCN07800
      DIMENSION CFSIZE(205),MAXSIZ(2),CANSIZ(2,100)                     LCN07900
C CANTOP:      POINTER TO THE LAST CANSIZ ENTRY                         LCN08000
      EQUIVALENCE (CANTOP,CFSIZE(1))                                    LCN08100
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                LCN08200
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 LCN08300
C CANSIZ:      NUMBER OF ITEMS A. NAMTBL INDEX OF EACH LARGE DATA ARRAY LCN08400
      EQUIVALENCE (CANSIZ(1,1),CFSIZE(6))                               LCN08500
C                                                                       LCN08600
C       16.    LITERALS FOR I. L. OPERATION CODES                       LCN08700
C                                                                       LCN08800
      COMMON/IL/IL                                                      LCN08900
      DIMENSION IL(21)                                                  LCN09000
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              LCN09100
      EQUIVALENCE (MOVE,IL(19))                                         LCN09200
C                                                                       LCN09300
C       17.    MODE CODES                                               LCN09400
C                                                                       LCN09500
      COMMON/MODX/MODX                                                  LCN09600
      DIMENSION MODX(32)                                                LCN09700
C REAL:        MODE CODE (24) FOR A SCALAR                              LCN09800
      EQUIVALENCE (REAL,MODX(21))                                       LCN09900
C SUBSCR:      MODE CODE (24) FOR SUBSCRIPT                             LCN10000
      EQUIVALENCE (SUBSCR,MODX(24))                                     LCN10100
C                                                                       LCN10200
C       22.    MACRO PROCESSING VARIABLES                               LCN10300
C                                                                       LCN10400
      COMMON/MACXX1/MACXX1                                              LCN10500
      LOGICAL FINMAC                                                    LCN10600
      DIMENSION MACXX1(71)                                              LCN10700
C FINMAC:      TRUE DURING FINAL MACRO PROCESSING                       LCN10800
      EQUIVALENCE (FINMAC,MACXX1(24))                                   LCN10900
C                                                                       LCN11000
C       27.    OPERAND MODIFIERS                                        LCN11100
C                                                                       LCN11200
      COMMON/OPMOD/OPMOD                                                LCN11300
      DIMENSION OPMOD(6)                                                LCN11400
C DLR:         CONTAINS OPERAND TYPE CODE 1                             LCN11410
      EQUIVALENCE (DLR,OPMOD(2))                                        LCN11420
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             LCN11500
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     LCN11600
C                                                                       LCN11700
C       28.    OPERAND MODIFIERS                                        LCN11800
C                                                                       LCN11900
      COMMON/SUBLST/SUBLST                                              LCN12000
      DIMENSION SUBLST(136),APTXXX(120)                                 LCN12100
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            LCN12200
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 LCN12300
C                                                                       LCN12400
C       29.    CLASS CODE MODULI                                        LCN12500
C                                                                       LCN12600
      COMMON/MODULI/MODULI                                              LCN12700
      DIMENSION MODULI(2)                                               LCN12800
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    LCN12900
      EQUIVALENCE (MODULO,MODULI(1))                                    LCN13000
C MODHLF:      NORMAL MODE CODE LIMIT 500                               LCN13100
      EQUIVALENCE (MODHLF,MODULI(2))                                    LCN13200
C                                                                       LCN13300
C       42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE       LCN13400
C                                                                       LCN13500
      COMMON/CANSTR/CANSTR                                              LCN13600
      DIMENSION CANSTR(18),CANSTK(16)                                   LCN13700
C CANPTR:      POINTER TO LAST CANSTK ENTRY                             LCN13800
      EQUIVALENCE (CANPTR,CANSTR(1))                                    LCN13900
C CANSTK:      ARGUMENT STACK FOR CANON AND OBTAIN STATEMENTS           LCN14000
      EQUIVALENCE (CANSTK(1),CANSTR(3))                                 LCN14100
C                                                                       LCN14200
C       44.    ERROR POSITION TABLE                                     LCN14300
C                                                                       LCN14400
      COMMON/ERRPOS/ERRPOS                                              LCN14500
      INTEGER ERRPOS,ESTACK,ERGSTK                                      LCN14600
      DIMENSION ERRPOS(302),ESTACK(100),ERGSTK(100)                     LCN14700
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    LCN14800
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               LCN14900
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   LCN15000
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               LCN15100
C*                                                                      LCN15200
C PURPOSE      TO GENERATE I.L. FOR LARGE DATA ARRAY CANON DEFINITIONS  LCN15300
C                                                                       LCN15400
C ARGUMENTS    ACTNO   BASIC PRODUCTION ACTION NUMBER                   LCN15500
C              BIGCNT  NUMBER OF CALLS TO LCANON FOR THIS DEFINITION    LCN15600
C                                                                       LCN15700
      CHARACTER IBUFF*15,IHBLK*4                                        LCN15810
      DATA IHBLK/'    '/                                                LCN15900
C**                                                                     LCN16000
C...       IF FIRST CALL, INITIALIZE                                    LCN16100
C                                                                       LCN16200
      IF(BIGCNT.NE.1)GO TO 100                                          LCN16300
      ICODE=1                                                           LCN16400
      IBR=1                                                             LCN16500
C                                                                       LCN16600
  100 IF(ACTNO.GE.103)GO TO 500                                         LCN16700
C                                                                       LCN16800
C...       PICK UP ARG.  GENERATE I.L. FOR THREE ARGUMENTS AT A TIME.   LCN16900
C                                                                       LCN17000
      CANPTR=CANPTR+1                                                   LCN17100
      CANSTK(CANPTR)=STACK(1,TOP-1)                                     LCN17200
      ERGSTK(101-CANPTR)=ESTACK(TOP-1)                                  LCN17300
      STACK(1,TOP-2)=STACK(1,TOP)                                       LCN17400
      STACK(2,TOP-2)=STACK(2,TOP)                                       LCN17500
      TOP=TOP-2                                                         LCN17600
      IF(CANPTR.NE.3)GO TO 900                                          LCN17700
C                                                                       LCN17800
  200 DO 230 I=1,CANPTR                                                 LCN17900
      N=CANSTK(I)                                                       LCN18000
      IF(N.GT.NAMMAX)GO TO 210                                          LCN18100
      IF(NAMTBL(N)/MODULO.NE.TEMP(1)/MODULO)GO TO 210                   LCN18200
      M=NAMTBL(N)-TEMP(1)                                               LCN18300
      IF(M.GE.MODHLF)M=SUBSCR                                           LCN18400
      CALL PUTTMP(M)                                                    LCN18500
  210 IF(ICODE.EQ.4)GO TO 230                                           LCN18600
      IF(MODE(N).NE.REAL)GO TO 1010                                     LCN18700
  220 CONTINUE                                                          LCN18800
  230 CONTINUE                                                          LCN18900
C                                                                       LCN19000
      IF(ICODE.EQ.4)GO TO 250                                           LCN19100
      CALL OPCODE(MOVE)                                                 LCN19200
      CALL TWOARG(-BIGCNT+1,DOTTAB)                                     LCN19300
      DO 240 I=1,CANPTR                                                 LCN19400
      N=CANSTK(I)                                                       LCN19500
  240 CALL ARGCVT(N)                                                    LCN19600
      CALL RLSLIN                                                       LCN19700
  250 IF(IBR.EQ.2)GO TO 510                                             LCN19800
      CANPTR=0                                                          LCN19900
      GO TO 900                                                         LCN20000
C                                                                       LCN20100
C...       PROCESS END OF DEFINITION.                                   LCN20200
C          FIRST CHECK FOR ARGUMENTS LEFT IN CANSTK.                    LCN20300
C                                                                       LCN20400
  500 IF(CANPTR.EQ.0 .OR. ICODE.EQ.4)GO TO 520                          LCN20500
      IBR=2                                                             LCN20600
      BIGCNT=BIGCNT-CANPTR+2                                            LCN20700
      GO TO 200                                                         LCN20800
  510 BIGCNT=BIGCNT+CANPTR-2                                            LCN20900
      CANPTR=0                                                          LCN21000
C                                                                       LCN21100
  520 N=STACK(1,TOP-3)                                                  LCN21200
      M=NAMTBL(N)-BIGGEO(1)                                             LCN21300
      IF(M.GT.MODHLF)M=M-MODHLF                                         LCN21400
      IF(ACTNO.NE.105)GO TO 530                                         LCN21500
C                                                                       LCN21600
      N5=GETTMP(M)                                                      LCN21700
      K5=TEMP(1)                                                        LCN21800
      GO TO 550                                                         LCN21900
C                                                                       LCN22000
  530 N5=STACK(1,TOP-5)                                                 LCN22100
      K5=(NAMTBL(N5)/MODULO)*MODULO                                     LCN22200
      IF(K5.NE.VBL(1) .AND. K5.NE.TEMP(1))GO TO 540                     LCN22300
      M5=NAMTBL(N5)-K5                                                  LCN22400
      IF(M5.GE.MODHLF)M5=M5-MODHLF                                      LCN22500
      IF(M5.EQ.M)GO TO 550                                              LCN22600
      IBR=3                                                             LCN22700
      GO TO 1020                                                        LCN22800
  540 NAMTBL(N5)=VBL(1)+M                                               LCN22900
      CALL RESRVZ(N5,M,TXXXX(1,M),1)                                    LCN23000
C                                                                       LCN23100
C...       UPDATE MAXSIZ IF NECESSARY.  ADD SIZE AND NAME TO CANSIZ.    LCN23200
C                                                                       LCN23300
  550 IF(BIGCNT.LE.(IABS(MAXSIZ(2))))GO TO 560                          LCN23400
      IF(BIGCNT.LE.(IABS(MAXSIZ(1))))GO TO 555                          LCN23500
      MAXSIZ(2)=MAXSIZ(1)                                               LCN23600
      MAXSIZ(1)=BIGCNT                                                  LCN23700
      GO TO 560                                                         LCN23800
  555 MAXSIZ(2)=BIGCNT                                                  LCN23900
  560 J=MOD(N5,CANTOP)                                                  LCN24000
      DO 570 I=1,CANTOP                                                 LCN24100
      J=MOD(J,CANTOP)+1                                                 LCN24200
      IF(CANSIZ(1,J).NE.0 .AND. CANSIZ(2,J).NE.N5)GO TO 570             LCN24300
      CANSIZ(1,J)=BIGCNT                                                LCN24400
      CANSIZ(2,J)=N5                                                    LCN24500
      GO TO 600                                                         LCN24600
  570 CONTINUE                                                          LCN24700
      IBR=4                                                             LCN24800
      GO TO 1030                                                        LCN24900
C                                                                       LCN25000
C...       GENERATE I.L. TO STORE SIZE IN INTERNAL CANONICAL FORM.      LCN25100
C                                                                       LCN25200
  600 IBUFF(12:15)=IHBLK                                                LCN25300
      CALL BINBCD(BIGCNT,IBUFF(4:),I)                                   LCN25400
      WRITE(IBUFF(1:3),'(I3)') I                                        LCN25410
      CALL CONCAT(IBUFF,'.')                                            LCN25500
      INUMB=NUMB(IBUFF(4:15)) + NAMMAX                                  LCN25600
      CALL OPCODE(MOVE)                                                 LCN25700
      CALL TWOARG(-2,N5)                                                LCN25800
      CALL ARGCVT(INUMB)                                                LCN25900
      CALL RLSLIN                                                       LCN26000
C                                                                       LCN26100
C...       GENERATE CALL TO APT094                                      LCN26200
C                                                                       LCN26300
  610 CALL CALLZZ(APTXXX(68))                                           LCN26400
      IF (ICODE.EQ.1) THEN                                              LCN26510
        CALL TWOARG(DLR,ONE)                                            LCN26520
      ELSE                                                              LCN26530
        CALL TWOARG(DLR,FOUR)                                           LCN26540
      ENDIF                                                             LCN26550
      CALL ARGCVT(N5)                                                   LCN26600
      CALL TWOARG(0,DOTTAB)                                             LCN26700
      CALL RLSLIN                                                       LCN26800
      IF(ACTNO-104)900,640,620                                          LCN26900
C                                                                       LCN27000
  620 TOP=TOP-4                                                         LCN27100
      GO TO 660                                                         LCN27200
  640 TOP=TOP-6                                                         LCN27300
  660 STACK(1,TOP)=N5                                                   LCN27400
      J=NAMTBL(N5)/MODULO                                               LCN27500
      STACK(2,TOP)=META(J)                                              LCN27600
      K=NAMTBL(N5)/MODULO                                               LCN27700
      STACK(2,TOP)=META(K)                                              LCN27800
C                                                                       LCN27900
  900 RETURN                                                            LCN28000
C                                                                       LCN28100
C...       DIAGNOSTIC PROCESSING                                        LCN28200
C                                                                       LCN28300
 1010 IERROR=1032                                                       LCN28400
      ERRPT=I-101                                                       LCN28500
      IF(.NOT.FINMAC)GOTO 1090                                          LCN28600
      N=TOP                                                             LCN28700
      J=STACK(1,TOP)                                                    LCN28800
      STACK(1,TOP)=COMMA(2)                                             LCN28900
      DO 1015 K=1,I                                                     LCN29000
      STACK(1,TOP+1)=CANSTK(K)                                          LCN29100
      STACK(1,TOP+2)=COMMA(2)                                           LCN29200
 1015 TOP=TOP+2                                                         LCN29300
      CALL ALARM(IERROR,TOP-1,8,'LCANON  ')                             LCN29400
      TOP=N                                                             LCN29500
      STACK(1,TOP)=J                                                    LCN29600
      GOTO 1100                                                         LCN29700
 1020 IERROR=1001                                                       LCN29800
      GO TO 1080                                                        LCN29900
 1030 IERROR=53                                                         LCN30000
 1080 ERRPT=TOP-5                                                       LCN30100
 1090 CALL ALARM(IERROR,ERRPT,8,'LCANON  ')                             LCN30200
 1100 ICODE=4                                                           LCN30300
      GO TO(220,220,550,610),IBR                                        LCN30400
      END                                                               LCN30500
**** SOURCE FILE : M0006648.V03   ***
*
C                                                                       LOP00100
C              FORTRAN SUBROUTINE LOOP                                  LOP00200
C                                                                       LOP00300
C LINKAGE      SUBROUTINE  LOOP                                         LOP00400
C                                                                       LOP00500
C          SUBSIDIARIES                  CALLED BY                      LOP00600
C          TYPE          ENTRY           TYPE          ENTRY            LOP00700
C          SUBROUTINE    ALARM           SUBROUTINE    INPUT            LOP00800
C          SUBROUTINE    ARGCVT          SUBROUTINE    RECOG            LOP00900
C          SUBROUTINE    MACLBL          SUBROUTINE    PRO026           LOP01000
C          SUBROUTINE    ONEARG                                         LOP01100
C          SUBROUTINE    OPCODE                                         LOP01200
C          INTEGER FCT.  GETTMP                                         LOP01300
C          INTEGER FCT.  MODE                                           LOP01400
C          SUBROUTINE    REPLAC                                         LOP01500
C          SUBROUTINE    RLSLIN                                         LOP01600
C          SUBROUTINE    LABELZ                                         LOP01700
C          SUBROUTINE    SETCHR                                         LOP01800
C                                                                       LOP01900
      SUBROUTINE  LOOP                                                  LOP02000
C                                                                       LOP02100
      IMPLICIT INTEGER (A-Z)                                            LOP02200
C                                                                       LOP02300
C        1.    NAME TABLE AND TABLE LIMITS                              LOP02400
C                                                                       LOP02500
      INCLUDE 'NAMETB.INC'                                              LOP02550
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     LOP02800
C NAMTBL:      NAME TABLE OR DICTIONARY                                 LOP03000
C                                                                       LOP03200
C        2.    STACK AND POINTER STORAGE                                LOP03300
C                                                                       LOP03400
      COMMON/STKLST/STKLST                                              LOP03500
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      LOP03600
C TOP:         POINTER TO LAST STACK ENTRY                              LOP03700
      EQUIVALENCE (TOP,STKLST(1))                                       LOP03800
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             LOP03900
      EQUIVALENCE (ARGTOP,STKLST(2))                                    LOP04000
C STACK:       WORKING STACK                                            LOP04100
      EQUIVALENCE (STACK(1,1),STKLST(4))                                LOP04200
C ARGSTK:      ARGUMENT STACK                                           LOP04300
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               LOP04400
C                                                                       LOP04500
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      LOP04600
C                                                                       LOP04700
      COMMON/CODE/CODE                                                  LOP04800
      DIMENSION CODE(150),COMMA(2),NUMBER(2),TEMP(2),LABEL(2),IMPLAB(2) LOP04900
     *         ,VBL(2),IDENT(2)                                         LOP05000
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF ',     '        LOP05100
      EQUIVALENCE (COMMA(1),CODE(1))                                    LOP05200
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        LOP05300
      EQUIVALENCE (NUMBER(1),CODE(27))                                  LOP05400
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        LOP05500
      EQUIVALENCE (TEMP(1),CODE(33))                                    LOP05600
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        LOP05700
      EQUIVALENCE (LABEL(1),CODE(43))                                   LOP05800
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        LOP05900
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  LOP06000
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        LOP06100
      EQUIVALENCE (VBL(1),CODE(61))                                     LOP06200
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        LOP06300
      EQUIVALENCE (IDENT(1),CODE(69))                                   LOP06400
C                                                                       LOP06500
C        4.    PRODUCTION TABLE                                         LOP06600
C                                                                       LOP06700
      COMMON/SRCTBL/SRCTBL                                              LOP06800
      DIMENSION SRCTBL(501),META(50)                                    LOP06900
C META:        END OF CHARACTER CONCATENATION AND STRING PRODUCTION     LOP07000
      EQUIVALENCE (META(1),SRCTBL(3))                                   LOP07100
C                                                                       LOP07200
C        9.    NAME TABLE POINTERS TO NUMBERS                           LOP07300
C                                                                       LOP07400
      COMMON/NUMPTR/NUMPTR                                              LOP07500
      DIMENSION NUMPTR(12)                                              LOP07600
C ONEPT:       NAMTBL POINTER TO '1.    '                               LOP07700
      EQUIVALENCE (ONEPT,NUMPTR(4))                                     LOP07800
C                                                                       LOP07900
C       16.    LITERALS FOR I. L. OPERATION CODES                       LOP08000
C                                                                       LOP08100
      COMMON/IL/IL                                                      LOP08200
      DIMENSION IL(21)                                                  LOP08300
C FADD:        CONTAINS COMMAND CODE ( 1) FOR FADD COMMAND              LOP08400
      EQUIVALENCE (FADD,IL(1))                                          LOP08500
C FSUB:        CONTAINS COMMAND CODE ( 2) FOR FSUB COMMAND              LOP08600
      EQUIVALENCE (FSUB,IL(2))                                          LOP08700
C FMPY:        CONTAINS COMMAND CODE ( 3) FOR FMPY COMMAND              LOP08800
      EQUIVALENCE (FMPY,IL(3))                                          LOP08900
C CONJMP:      CONTAINS COMMAND CODE (11) FOR CONJMP COMMAND            LOP09000
      EQUIVALENCE (CONJMP,IL(11))                                       LOP09100
C                                                                       LOP09200
C       17.    MODE CODES                                               LOP09300
C                                                                       LOP09400
      COMMON/MODX/MODX                                                  LOP09500
      DIMENSION MODX(32)                                                LOP09600
C REAL:        MODE CODE (21) FOR REAL                                  LOP09700
      EQUIVALENCE (REAL,MODX(21))                                       LOP09800
C                                                                       LOP09900
C       22.    MACRO PROCESSING VARIABLES                               LOP10000
C                                                                       LOP10100
      COMMON/MACXX1/MACXX1                                              LOP10200
      DIMENSION MACXX1(71)                                              LOP10300
      LOGICAL FINMAC                                                    LOP10400
C FINMAC:      TRUE DURING FINAL MACRO PROCESSING                       LOP10500
      EQUIVALENCE (FINMAC,MACXX1(24))                                   LOP10600
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED         LOP10700
      EQUIVALENCE (WHCHMN,MACXX1(63))                                   LOP10800
C                                                                       LOP10900
C       29.    CLASS CODE MODULI                                        LOP11000
C                                                                       LOP11100
      COMMON/MODULI/MODULI                                              LOP11200
      DIMENSION MODULI(2)                                               LOP11300
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    LOP11400
      EQUIVALENCE (MODULO,MODULI(1))                                    LOP11500
C                                                                       LOP11600
C       40.    PARAMETERS REQUIRED BY SUPERVISOR                        LOP11700
C                                                                       LOP11800
      COMMON/SUPER/SUPER                                                LOP11900
      LOGICAL FINI                                                      LOP12000
      DIMENSION SUPER(36)                                               LOP12100
C FINI:        FLAG ON INDICATES A FINI CARD HAS BEEN READ              LOP12200
      EQUIVALENCE (FINI,SUPER(7))                                       LOP12300
C                                                                       LOP12400
C       43.    DO LOOP CONTROL VALUES                                   LOP12500
C                                                                       LOP12600
      COMMON/DOLOOP/DOLOOP                                              LOP12700
      LOGICAL DOFLAG                                                    LOP12800
      DIMENSION DOLOOP(8)                                               LOP12900
C ABSDO:       LOOP NUMBER FOR LABEL CREATION                           LOP13000
      EQUIVALENCE (ABSDO,DOLOOP(2))                                     LOP13100
C RELDO:       CURRENTLY NESTED DO LOOPS                                LOP13200
      EQUIVALENCE (RELDO,DOLOOP(3))                                     LOP13300
C DONEST:      CURRENTLY NESTED DO LOOPS                                LOP13400
      EQUIVALENCE (DONEST,DOLOOP(4))                                    LOP13500
C DOMAX:       MAXIMAL NESTING OF LOOPS                                 LOP13600
      EQUIVALENCE (DOMAX,DOLOOP(5))                                     LOP13700
C DOJUMP:      VBL FOR COMPUTED GOTO AT LOOP PROCESSING                 LOP13800
      EQUIVALENCE (DOJUMP,DOLOOP(6))                                    LOP13900
C DOFLAG:      FLAG IS ON DURING OPENED LOOP                            LOP14000
      EQUIVALENCE (DOFLAG,DOLOOP(7))                                    LOP14100
C*                                                                      LOP14200
C PURPOSE      DISSECTS AND PROCESSES FORTRAN-LIKE PROGRAMMED DO-LOOPS  LOP14300
C              FOR I.L.-OUTPUT BY SETTING THE START-VALUE, ADDING WITH  LOP14400
C              RETURN-POINTER AND IF-SCANNING ON LOOP-END-VALUE WITH    LOP14500
C              RETURN OR BRANCHING OUT OF THE LOOP RESPECTIVELY.        LOP14600
C                                                                       LOP14700
C                                                                       LOP14800
C INPUT                                DO / LABEL, I1 = I2, I3, I4      LOP14900
C                              LABEL ) CONTIN                           LOP15000
C                        OR    LABEL ) APT - STATEMENT                  LOP15100
C                                                                       LOP15200
C              DOJUMP         1        DO STATEMENT PROGRAMMED          LOP15300
C                             2     LABEL STATEMENT PROGRAMMED          LOP15400
C                             3     PRODUCTION OF THE LOOP-END          LOP15500
C                             4     TERMAC STATEMENT                    LOP15600
C                             5     FINI   STATEMENT                    LOP15700
C              LABSAV(J,K)          NAMTBL ADDRESS                      LOP15800
C                     J       1     I1                                  LOP15900
C                             2     I2                                  LOP16000
C                             3     I3                                  LOP16100
C                             4     I4                                  LOP16200
C                             5     PROGRAMMED LABEL                    LOP16300
C                             6     PRODUCED LABEL                      LOP16400
C                             7     VALUE FOR PRODUCING LABEL           LOP16500
C                                                                       LOP16600
C                                                                       LOP16700
      DIMENSION LABSAV(7,10),ISTCK(5)                                   LOP16800
      DATA ISTCK/7,5,3,1,9/                                             LOP16900
C**                                                                     LOP17000
      GOTO(5,170,100,250,300),DOJUMP                                    LOP17100
      GOTO 999                                                          LOP17200
C                                                                       LOP17300
C     START OF DO-LOOP; INPUT STATEMENT DO / LAB , I1 = I2 , I3 (, I4)  LOP17400
C                                                                       LOP17500
C     ERROR-CONTROL                                                     LOP17600
C                                                                       LOP17700
    5 IF(ARGTOP.GT.0)GOTO 835                                           LOP17800
      IF(TOP.EQ.DOMAX)GOTO 10                                           LOP17900
      TOP=DOMAX                                                         LOP18000
      STACK(1,TOP)=STACK(1,TOP-2)                                       LOP18100
      STACK(2,TOP)=STACK(2,TOP-2)                                       LOP18200
      CALL SETCHR(TOP-2,COMMA)                                          LOP18300
      STACK(1,TOP-1)=ONEPT                                              LOP18400
      L=NUMBER(1)/MODULO                                                LOP18500
      STACK(2,TOP-1)=META(L)                                            LOP18600
C                                                                       LOP18700
C     PROVIDING AN ADDRESS ON TEMPORARY INPUT                           LOP18800
C                                                                       LOP18900
   10 LL=TOP                                                            LOP19000
      ABSDO=ABSDO+1                                                     LOP19100
      DO 29 J=2,4                                                       LOP19200
      M=LL-ISTCK(J)                                                     LOP19300
      IF (STACK(1,M).GT.NAMMAX) GOTO 29                                 LOP19350
      KK=MODULO*(NAMTBL(STACK(1,M))/MODULO)                             LOP19400
      IF(KK.NE.TEMP(1))GOTO 29                                          LOP19500
      K=STACK(1,M)                                                      LOP19600
      KK=20000+998*ABSDO-J                                              LOP19700
      L=WHCHMN                                                          LOP19800
      IF(L.EQ.0)L=51                                                    LOP19900
      CALL MACLBL(KK,-L,K)                                              LOP20000
      NAMTBL(K)=IDENT(1)                                                LOP20100
      KK=STACK(1,M-2)                                                   LOP20200
      MM=STACK(2,M-2)                                                   LOP20300
      TOP=M+1                                                           LOP20400
      STACK(1,M-2)=K                                                    LOP20500
      CALL REPLAC                                                       LOP20600
      STACK(1,M)=STACK(1,M-2)                                           LOP20700
      STACK(2,M)=META(NAMTBL(STACK(1,M))/MODULO)                        LOP20800
      STACK(1,M-2)=KK                                                   LOP20900
      STACK(2,M-2)=MM                                                   LOP21000
   29 CONTINUE                                                          LOP21100
      TOP=LL                                                            LOP21200
C                                                                       LOP21300
C     STORING THE DO-VALUES IN LABSAV; CONTROL ON MULTIPLY DEFINED      LOP21400
C     VARIABLES IN INTERLEAVINGS.                                       LOP21500
C                                                                       LOP21600
      RELDO=RELDO+1                                                     LOP21700
      IF(RELDO.GT.DONEST)GOTO 820                                       LOP21800
      DO 20 K=1,5                                                       LOP21900
   20 LABSAV(K,RELDO)=STACK(1,(TOP-ISTCK(K)))                           LOP22000
C                                                                       LOP22100
      IF(RELDO.LE.1)GOTO 23                                             LOP22200
      KK=RELDO-1                                                        LOP22300
      DO 22 K=1,KK                                                      LOP22400
      IF(LABSAV(1,K).EQ.LABSAV(1,RELDO))GOTO 830                        LOP22500
   22 CONTINUE                                                          LOP22600
C                                                                       LOP22700
C     WORKING UP OF I1=I2-I4                                            LOP22800
C                                                                       LOP22900
   23 DO 25 K=2,4                                                       LOP23000
   25 IF(MODE(LABSAV(K,RELDO)).NE.REAL) CALL ALARM(1008,TOP-9+2*K,8,    LOP23100
     /'LOOP    ')                                                       LOP23200
      RSLT=GETTMP(REAL)                                                 LOP23300
      CALL OPCODE(FSUB)                                                 LOP23400
      CALL ARGCVT(RSLT)                                                 LOP23500
      CALL ARGCVT(LABSAV(2,RELDO))                                      LOP23600
      CALL ARGCVT(LABSAV(4,RELDO))                                      LOP23700
      CALL RLSLIN                                                       LOP23800
      STACK(1,TOP-3)=LABSAV(1,RELDO)                                    LOP23900
      STACK(1,TOP-1)=RSLT                                               LOP24000
      CALL REPLAC                                                       LOP24100
C                                                                       LOP24200
C     WORKING UP OF LABEL)                                              LOP24300
C                                                                       LOP24400
      KK=20000+998*ABSDO                                                LOP24500
      LABSAV(7,RELDO)=KK+1                                              LOP24600
      L=WHCHMN                                                          LOP24700
      IF(L.EQ.0)L=51                                                    LOP24800
      CALL MACLBL(KK,-L,K)                                              LOP24900
      LABSAV(6,RELDO)=K                                                 LOP25000
      IF((.NOT.FINMAC).AND.(WHCHMN.NE.0))GOTO 40                        LOP25100
      NAMTBL(K)=LABEL(1)+WHCHMN                                         LOP25200
   30 CALL LABELZ(K)                                                    LOP25300
      GOTO 50                                                           LOP25400
   40 NAMTBL(K)=IMPLAB(1)+WHCHMN                                        LOP25500
      GOTO 30                                                           LOP25600
C                                                                       LOP25700
C     WORKING UP OF I1 = I1 + I4                                        LOP25800
C                                                                       LOP25900
   50 CALL OPCODE(FADD)                                                 LOP26000
      CALL ARGCVT(LABSAV(1,RELDO))                                      LOP26100
      CALL ARGCVT(LABSAV(1,RELDO))                                      LOP26200
      CALL ARGCVT(LABSAV(4,RELDO))                                      LOP26300
      CALL RLSLIN                                                       LOP26400
      GOTO 999                                                          LOP26500
C                                                                       LOP26600
C     END OF A DO-LOOPS;  INPUT: LABEL)CONTIN  RESP. STATEMENT          LOP26700
C                                                                       LOP26800
  100 IF(.NOT.DOFLAG)GOTO 999                                           LOP26900
      DOFLAG=.FALSE.                                                    LOP27000
C                                                                       LOP27100
C     WORKING UP OF TEMP = I3+I1                                        LOP27200
C                                                                       LOP27300
      RSLT=GETTMP(REAL)                                                 LOP27400
      DO 160 J=1,III                                                    LOP27500
      CALL OPCODE(FSUB)                                                 LOP27600
      CALL ARGCVT(RSLT)                                                 LOP27700
      CALL ARGCVT(LABSAV(3,RELDO))                                      LOP27800
      CALL ARGCVT(LABSAV(1,RELDO))                                      LOP27900
      CALL RLSLIN                                                       LOP28000
C                                                                       LOP28100
C     WORKING UP OF TEMP = TEMP -I4                                     LOP28200
C                                                                       LOP28300
      CALL OPCODE(FSUB)                                                 LOP28400
      CALL ARGCVT(RSLT)                                                 LOP28500
      CALL ARGCVT(RSLT)                                                 LOP28600
      CALL ARGCVT(LABSAV(4,RELDO))                                      LOP28700
      CALL RLSLIN                                                       LOP28800
C                                                                       LOP28900
C     WORKING UP OF TEMP = I4 * TEMP                                    LOP29000
C                                                                       LOP29100
      CALL OPCODE(FMPY)                                                 LOP29200
      CALL ARGCVT(RSLT)                                                 LOP29300
      CALL ARGCVT(LABSAV(4,RELDO))                                      LOP29400
      CALL ARGCVT(RSLT)                                                 LOP29500
      CALL RLSLIN                                                       LOP29600
C                                                                       LOP29700
C     WORKING UP OF IF(TEMP) LAB1,LAB2,LAB2                             LOP29800
C                                                                       LOP29900
      CALL OPCODE(CONJMP)                                               LOP30000
      CALL ARGCVT(RSLT)                                                 LOP30100
      KK=LABSAV(7,RELDO)                                                LOP30200
      L=WHCHMN                                                          LOP30300
      IF(L.EQ.0)L=51                                                    LOP30400
      CALL MACLBL(KK,-L,K)                                              LOP30500
      IF((.NOT.FINMAC).AND.(WHCHMN.NE.0))GOTO 140                       LOP30600
      NAMTBL(K)=LABEL(1)+WHCHMN                                         LOP30700
      GOTO 150                                                          LOP30800
C                                                                       LOP30900
C     WORKING UP OF IF-LABELS                                           LOP31000
C                                                                       LOP31100
  140 NAMTBL(K)=IMPLAB(1)+WHCHMN                                        LOP31200
  150 CALL ONEARG(K)                                                    LOP31300
      CALL ONEARG(LABSAV(6,RELDO))                                      LOP31400
      CALL ONEARG(LABSAV(6,RELDO))                                      LOP31500
      CALL RLSLIN                                                       LOP31600
      CALL LABELZ(K)                                                    LOP31700
  160 RELDO=RELDO-1                                                     LOP31800
      GOTO 999                                                          LOP31900
C                                                                       LOP32000
C     CHECK IF LABEL BELONGS TO A DO-LOOP                               LOP32100
C                                                                       LOP32200
  170 IF(RELDO.LE.0) GOTO 999                                           LOP32300
  171 III=0                                                             LOP32400
      DO 172 L=1,RELDO                                                  LOP32500
      K=RELDO+1-L                                                       LOP32600
      IF(LABSAV(5,K).EQ.STACK(1,TOP-1))III=III+1                        LOP32700
  172 CONTINUE                                                          LOP32800
      IF(III.EQ.0)GOTO 999                                              LOP32900
      DO 175 L=1,III                                                    LOP33000
      K=RELDO+1-L                                                       LOP33100
      IF(LABSAV(5,K).NE.STACK(1,TOP-1))GOTO 805                         LOP33200
  175 CONTINUE                                                          LOP33300
  177 DOFLAG=.TRUE.                                                     LOP33400
      GOTO 999                                                          LOP33500
C                                                                       LOP33600
C     MACRO HAS BEEN COMPLETED                                          LOP33700
C                                                                       LOP33800
  250 IF(.NOT.FINI)GOTO 999                                             LOP33900
      ABSDO=0                                                           LOP34000
      GOTO 310                                                          LOP34100
C                                                                       LOP34200
C     FINI HAS BEEN READ IN                                             LOP34300
  300 ABSDO=0                                                           LOP34400
  310 IF(RELDO.GT.0)GOTO 810                                            LOP34500
C                                                                       LOP34600
  999 RETURN                                                            LOP34700
C                                                                       LOP34800
C     ERROR-MESSAGES                                                    LOP34900
C                                                                       LOP35000
C     ERROR 1037   ON FINI OR TERMAC OPEN LOOP                          LOP35100
  810 CALL ALARM(1037,0,8,'LOOP    ')                                   LOP35200
      RELDO=0                                                           LOP35300
      GOTO 999                                                          LOP35400
C     ERROR 1038   TOO MANY DO'S NESTED (MORE THAN 10)                  LOP35500
  820 CALL ALARM(1038,2,8,'LOOP    ')                                   LOP35600
  825 RELDO=RELDO-1                                                     LOP35700
      GOTO 999                                                          LOP35800
C     ERROR 1039   WRONGLY NESTED DO                                    LOP35900
  805 CALL ALARM(1039,TOP-1,8,'LOOP    ')                               LOP36000
      GOTO 177                                                          LOP36100
C     ERROR 1040   DO-VARIABLE IDENTICAL                                LOP36200
  830 CALL ALARM(1040,TOP-7,8,'LOOP    ')                               LOP36300
      GOTO 825                                                          LOP36400
C     ERROR 1036   DO-ARGUMENT WITHOUT VALUE-ASSIGNEMENT                LOP36500
  835 IF(TOP.EQ.DOMAX)GOTO 840                                          LOP36600
      CALL ALARM(1036,-ARGTOP,8,'LOOP    ')                             LOP36700
      GOTO 999                                                          LOP36800
C     ERROR 2052   TOO MANY DO-ARGUMENTS                                LOP36900
  840 CALL ALARM(2052,-ARGTOP,8,'LOOP    ')                             LOP37000
      GOTO 10                                                           LOP37100
C                                                                       LOP37200
      END                                                               LOP37300
**** SOURCE FILE : M0006650.V04   ***
*
C                                                                       MBL00100
C              FORTRAN SUBROUTINE  MACLBL                               MBL00200
C                                                                       MBL00300
C LINKAGE      SUBROUTINE  MACLBL(LABEL1,LABEL2,LABEL3)                 MBL00400
C                                                                       MBL00500
C          SUBSIDIARIES                  CALLED BY                      MBL00600
C          TYPE          ENTRY           TYPE          ENTRY            MBL00700
C          SUBROUTINE    SHIFT           SUBROUTINE    BOOLIF           MBL00800
C          INTEGER FCT.  NAME            SUBROUTINE    COMSTR           MBL00900
C          SUBROUTINE    HELP            SUBROUTINE    INPUT            MBL01000
C          SUBROUTINE    ALARM           SUBROUTINE    LOOP             MBL01100
C                                        SUBROUTINE    MACREC           MBL01200
C                                        SUBROUTINE    MATCH            MBL01300
C                                        SUBROUTINE    MNPROC           MBL01400
C                                        SUBROUTINE    MOTION           MBL01500
C                                        SUBROUTINE    PATH             MBL01600
C                                        SUBROUTINE    PRO026           MBL01700
C                                        SUBROUTINE    PRO027           MBL01800
C                                        SUBROUTINE    RECOG            MBL01900
C                                        SUBROUTINE    RECOGN           MBL02000
C                                                                       MBL02100
      SUBROUTINE MACLBL(LABEL1, LABEL2, LABEL3)                         MBL02200
C                                                                       MBL02300
      IMPLICIT INTEGER (A-Z)                                            MBL02400
C                                                                       MBL02500
C        1.    NAME TABLE AND TABLE LIMITS                              MBL02600
C                                                                       MBL02700
      INCLUDE 'NAMETB.INC'                                              MBL02810
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                MBL02850
C CNAMTB:      NAME TABLE OR DICTIONARY                                 MBL02950
C*                                                                      MBL03200
C PURPOSE      TO CONSTRUCT A UNIQUE LABEL NAME CORRESPONDING           MBL03300
C              TO AN ORDERED PAIR OF NUMBERS.                           MBL03400
C ARGUMENTS    LABEL1    IS THE FIRST NUMBER OF THE PAIR                MBL03500
C              LABEL2    IS THE SECOND NUMBER OF THE PAIR               MBL03600
C              LABEL3    WILL CONTAIN THE NAME TABLE (NAMTBL)           MBL03700
C                        INDEX OF THE GENERATED LABEL.                  MBL03800
C...  COUNT IS THE TOTAL NUMBER OF GENERATED LABELS.                    MBL03900
C...  TABL IS AN ARRAY CONTAINING EACH UNIQUE PAIR OF ARGUMENTS         MBL04000
C...    RECEIVED AND THE CORRESPONDING NAMTBL INDEX FOR THE             MBL04100
C...    GENERATED LABEL.                                                MBL04200
C**                                                                     MBL04300
      DIMENSION TABL(3,600)                                             MBL04400
C...                                                                    MBL04700
      CHARACTER BLK,CHARAC(12),FIND*8                                   MBL04800
      DATA BLK/' '/                                                     MBL04900
      DATA CHARAC/ '0','1','2','3','4','5','6','7','8','9','Z','$'/     MBL05000
      DATA COUNT /0/                                                    MBL05010
      DATA TABL/1800*0/                                                 MBL05020
C...      INITIALIZE FIND WITH BLANKS                                   MBL05100
      FIND=BLK                                                          MBL05200
C...      IF ARGUMENT PAIR ISIIN TABLE THEN BRANCH - RETURN NAMTBL INDEXMBL05400
      DO 100 I=1,COUNT                                                  MBL05500
      IF (TABL(1,I).NE.LABEL1) GO TO 100                                MBL05600
      IF (TABL(2,I).EQ.LABEL2) GO TO 200                                MBL05700
  100 CONTINUE                                                          MBL05800
C...      OTHERWISE PUT ARGUMENTS IN TABLE- GENERATE LABEL              MBL05900
      COUNT=COUNT+1                                                     MBL06000
      IF(COUNT.LE.600) GOTO 105                                         MBL06100
C TABL LENGTH EXCEEDED.  TERMINATE PROGRAM                              MBL06200
      CALL ALARM(15,0,8,'MACLBL  ')                                     MBL06300
      CALL  HELP                                                        MBL06400
  105 TABL(1,COUNT)=LABEL1                                              MBL06500
      TABL(2,COUNT)=LABEL2                                              MBL06600
C...      SHIFT Z$ INTO 1ST TWO POSITIONS OF LABEL BEING GENERATED      MBL06700
      DO 110 I=1,2                                                      MBL06800
      CALL SHIFT(FIND,CHARAC(I+10))                                     MBL06900
  110 CONTINUE                                                          MBL07000
C...      SHIFT CHARACTER EQUIVALENT OF TABLE INDEX INTO LABEL          MBL07100
      INTGER=COUNT                                                      MBL07200
      DECR=1000                                                         MBL07300
      DO 120 I=1,4                                                      MBL07400
      SYMBOL=INTGER/DECR                                                MBL07500
      CALL SHIFT(FIND,CHARAC(SYMBOL+1))                                 MBL07600
      INTGER=INTGER-DECR*SYMBOL                                         MBL07700
      DECR=DECR/10                                                      MBL07800
  120 CONTINUE                                                          MBL07900
C...      PUT NAMTBL INDEX CORRESPONDING TO GENERATED LABEL IN TABLE    MBL08000
      TABL(3,COUNT)=NAME(FIND)                                          MBL08100
      I=COUNT                                                           MBL08200
C...      ASSIGN NAMTBL INDEX OF GENERATED LABEL TO RETURN PARAMETER    MBL08300
  200 LABEL3=TABL(3,I)                                                  MBL08400
      RETURN                                                            MBL08500
      END                                                               MBL08600
**** SOURCE FILE : M0006651.W03   ***
*
C                                                                       MAC00100
C              FORTRAN SUBROUTINE MACREC                                MAC00200
C                                                                       MAC00300
C LINKAGE      SUBROUTINE MACREC(IPROD)                                 MAC00400
C                                                                       MAC00500
C          SUBSIDIARIES                  CALLED BY                      MAC00600
C          TYPE          ENTRY           TYPE          ENTRY            MAC00700
C          SUBROUTINE    HELP            SUBROUTINE    RECOG            MAC00800
C          SUBROUTINE    ALARM                                          MAC00900
C          INTEGER FCT.  BCDF                                           MAC00910
C          SUBROUTINE    BINBCD                                         MAC00920
C          LOGICAL FCT.  IFTMP                                          MAC01000
C          SUBROUTINE    CALLZZ                                         MAC01100
C          SUBROUTINE    LABELZ                                         MAC01200
C          SUBROUTINE    MACLBL                                         MAC01300
C          SUBROUTINE    CALMCX                                         MAC01400
C          SUBROUTINE    MACTAB                                         MAC01500
C          SUBROUTINE    COMSTR                                         MAC01600
C          SUBROUTINE    MCXTRN                                         MAC01700
C          SUBROUTINE    MNPROC                                         MAC01800
C          INTEGER FCT.  NAME                                           MAC01900
C          SUBROUTINE    ONEARG                                         MAC02000
C          SUBROUTINE    OPCODE                                         MAC02100
C          SUBROUTINE    ARGCVT                                         MAC02200
C          SUBROUTINE    ASNADZ                                         MAC02300
C          SUBROUTINE    PUTTMP                                         MAC02400
C          SUBROUTINE    RESRVZ                                         MAC02500
C          SUBROUTINE    RLSLIN                                         MAC02600
C          SUBROUTINE    EPILOG                                         MAC02700
C                                                                       MAC02800
      SUBROUTINE MACREC(IPROD)                                          MAC02900
C                                                                       MAC03000
      IMPLICIT INTEGER (A-Z)                                            MAC03100
C                                                                       MAC03200
C              FUNCTION DECLARATION                                     MAC03300
C                                                                       MAC03400
      LOGICAL IFTMP                                                     MAC03500
C                                                                       MAC03600
C        1.    NAME TABLE AND TABLE LIMITS                              MAC03700
C                                                                       MAC03800
      INCLUDE 'NAMETB.INC'                                              MAC03910
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                MAC03950
C CNAMTB:      NAME TABLE OR DICTIONARY                                 MAC04050
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     MAC04100
C NUMBST:      NAMTBL INDEX OF BEGINNING OF NUMBER SECTION              MAC04210
C                                                                       MAC04500
C        2.    STACK AND POINTER STORAGE                                MAC04600
C                                                                       MAC04700
      COMMON/STKLST/STKLST                                              MAC04800
      DIMENSION STKLST(300),STACK(2,99)                                 MAC04900
C TOP:         POINTER TO LAST STACK ENTRY                              MAC05000
      EQUIVALENCE (TOP,STKLST(1))                                       MAC05100
C STACK:       WORKING STACK                                            MAC05200
      EQUIVALENCE (STACK(1,1),STKLST(4))                                MAC05300
C                                                                       MAC05400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      MAC05500
C                                                                       MAC05600
      COMMON/CODE/CODE                                                  MAC05700
      DIMENSION CODE(150),RTERM(2),GEOM(2),TEMP(2),FCN(2),PROCED(2),    MAC05800
     *          PERMID(2),LABEL(2),IMPLAB(2),VBL(2),MACNAM(2),IDENT(2), MAC05900
     *          MACVBL(2),CONGEO(2),CONPRO(2),DIGIT(2)                  MAC06000
C RTERM:       (1)=CODE CLASS  4000,(2)=NAMTBL INDEX OF 'RTERM '        MAC06100
      EQUIVALENCE (RTERM(1),CODE(7))                                    MAC06200
C DIGIT:       (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '        MAC06210
      EQUIVALENCE (DIGIT(1),CODE(19))                                   MAC06220
C GEOM:        (1)=CODE CLASS 16000,(2)=NAMTBL INDEX OF 'GEOM  '        MAC06300
      EQUIVALENCE (GEOM(1),CODE(31))                                    MAC06400
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        MAC06500
      EQUIVALENCE (TEMP(1),CODE(33))                                    MAC06600
C FCN:         (1)=CODE CLASS 18000,(2)=NAMTBL INDEX OF 'FCN   '        MAC06700
      EQUIVALENCE (FCN(1),CODE(35))                                     MAC06800
C PROCED:      (1)=CODE CLASS 19000,(2)=NAMTBL INDEX OF 'PROCED'        MAC06900
      EQUIVALENCE (PROCED(1),CODE(37))                                  MAC07000
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        MAC07100
      EQUIVALENCE (PERMID(1),CODE(39))                                  MAC07200
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        MAC07300
      EQUIVALENCE (LABEL(1),CODE(43))                                   MAC07400
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        MAC07500
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  MAC07600
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        MAC07700
      EQUIVALENCE (VBL(1),CODE(61))                                     MAC07800
C MACNAM:      (1)=CODE CLASS 34000,(2)=NAMTBL INDEX OF 'MACNAM'        MAC07900
      EQUIVALENCE (MACNAM(1),CODE(67))                                  MAC08000
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        MAC08100
      EQUIVALENCE (IDENT(1),CODE(69))                                   MAC08200
C MACVBL:      (1)=CODE CLASS 36000,(2)=NAMTBL INDEX OF 'MACVBL'        MAC08300
      EQUIVALENCE (MACVBL(1),CODE(71))                                  MAC08400
C CONGEO:      (1)=CODE CLASS 39000,(2)=NAMTBL INDEX OF 'CONGEO'        MAC08500
      EQUIVALENCE (CONGEO(1),CODE(77))                                  MAC08600
C CONPRO:      (1)=CODE CLASS 40000,(2)=NAMTBL INDEX OF 'CONPRO'        MAC08700
      EQUIVALENCE (CONPRO(1),CODE(79))                                  MAC08800
C                                                                       MAC08900
C        5.    PROGRAM CONTROL FLAGS                                    MAC09000
C                                                                       MAC09100
      COMMON/FLAGS/FLAGS                                                MAC09200
      LOGICAL NEWSTM                                                    MAC09300
      DIMENSION FLAGS(4)                                                MAC09400
C NEWSTM:      TRUE WHEN NEXT SOURCE STATEMENT REQUESTED FOR PROCESS    MAC09500
      EQUIVALENCE (NEWSTM,FLAGS(2))                                     MAC09600
C                                                                       MAC09700
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         MAC09800
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    MAC09900
      COMMON/TMP/TXXXX                                                  MAC10000
      DIMENSION TXXXX(2,32)                                             MAC10100
C                                                                       MAC10200
C       11.    SEQUENCE NUMBER STORAGE                                  MAC10300
C                                                                       MAC10400
      COMMON/SEQCOM/SEQCOM                                              MAC10500
      DIMENSION SEQCOM(3),SEQNUM(2)                                     MAC10600
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    MAC10700
      EQUIVALENCE (SEQNO,SEQCOM(1))                                     MAC10800
C SEQNUM:      ALPHANUMERIC REPRESENTATION OF CURRENT STATEMENT NUMBER  MAC10810
      EQUIVALENCE (SEQNUM(1),SEQCOM(2))                                 MAC10820
C                                                                       MAC10900
C       14.    I. L. LIST OPTION FLAGS                                  MAC11000
C                                                                       MAC11100
      COMMON/PRT/PRT                                                    MAC11200
      LOGICAL MCHDNG                                                    MAC11300
      DIMENSION PRT(7)                                                  MAC11400
C MCHDNG:      TRUE IF START OF NEW MACRO PROCESSING                    MAC11500
      EQUIVALENCE (MCHDNG,PRT(7))                                       MAC11600
C                                                                       MAC11700
C       16.    LITERALS FOR I. L. OPERATION CODES                       MAC11800
C                                                                       MAC11900
      COMMON/IL/IL                                                      MAC12000
      DIMENSION IL(21)                                                  MAC12100
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              MAC12200
      EQUIVALENCE (REPL,IL(17))                                         MAC12300
C                                                                       MAC12400
C       17.    MODE CODES                                               MAC12500
C                                                                       MAC12600
      COMMON/MODX/MODX                                                  MAC12700
      DIMENSION MODX(32)                                                MAC12800
C SUBSCR:      MODE CODE (24) FOR SUBSCRIPT                             MAC12900
      EQUIVALENCE (SUBSCR,MODX(24))                                     MAC13000
C                                                                       MAC13100
C       22.    MACRO PROCESSING VARIABLES                               MAC13200
C                                                                       MAC13300
      COMMON/MACXX1/MACXX1                                              MAC13400
      LOGICAL MACLDD,CALLON,CALLMV,ILHLT,MVMAC,MACRED,MVTRUE,FINMAC,    MAC13500
     *          MACEND                                                  MAC13600
      DIMENSION MACXX1(71)                                              MAC13700
C MACDFP:      POINTER TO LAST ENTRY IN MACDF1 AND MACDF2 ARRAYS        MAC13800
      EQUIVALENCE (MACDFP,MACXX1(1))                                    MAC13900
C MCNMB:       NUMBER OF DEFINED MACROS                                 MAC14000
      EQUIVALENCE (MCNMB,MACXX1(2))                                     MAC14100
C MCHSTP:      POINTER TO LAST MACHST ENTRY                             MAC14200
      EQUIVALENCE (MCHSTP,MACXX1(3))                                    MAC14300
C MCTXTP:      POINTER TO LAST MACTXT TABLE ENTRY                       MAC14400
      EQUIVALENCE (MCTXTP,MACXX1(4))                                    MAC14500
C MCSAVP:      PRESENT NEST LEVEL DURING MACRO PROCESSING               MAC14600
      EQUIVALENCE (MCSAVP,MACXX1(5))                                    MAC14700
C MNMVBP:      POINTER TO LAST MNMVB AND MNMVC TABLE ENTRY              MAC14800
      EQUIVALENCE (MNMVBP,MACXX1(6))                                    MAC14900
C MACLDD:      TRUE WHEN MACRO TEXT IS TO BE LOAD INTO MCBUFF TABLE     MAC15000
      EQUIVALENCE (MACLDD,MACXX1(7))                                    MAC15100
C TEMP1:       MACRO TEMPORARY STORAGE                                  MAC15200
      EQUIVALENCE (TEMP1,MACXX1(8))                                     MAC15300
C CALLON:      TRUE AT A NESTED CALL DURING INTERMED. MACRO PROCESSING  MAC15400
      EQUIVALENCE (CALLON,MACXX1(10))                                   MAC15500
C CALLMV:      TRUE IF A CALL/MACRO VARIABLE STATEMENT IS ENCOUNTERED   MAC15600
      EQUIVALENCE (CALLMV,MACXX1(11))                                   MAC15700
C MVSEG:       CONTAINS POSITION NUMBER OF MACRO VBL IF CALLMV IS TRUE  MAC15800
      EQUIVALENCE (MVSEG,MACXX1(12))                                    MAC15900
C CALLPT:      MACTXT INDEX OF CURRENT CALL STATEMENT                   MAC16000
      EQUIVALENCE (CALLPT,MACXX1(13))                                   MAC16100
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              MAC16200
      EQUIVALENCE (ILHLT,MACXX1(14))                                    MAC16300
C TEXTST:      POINTER TO MCBUFF OF MACRO TEXT WORD BEING PROCESSED     MAC16400
      EQUIVALENCE (TEXTST,MACXX1(15))                                   MAC16500
C MVPNT:       CONTAINS POINTER-1 OF FIRST MACRO VARIABLE VBLSAV        MAC16600
      EQUIVALENCE (MVPNT,MACXX1(16))                                    MAC16700
C MVMAC:       TRUE IF IN NESTED CALL LIST MACROVBL = MACRO VBL         MAC16800
      EQUIVALENCE (MVMAC,MACXX1(17))                                    MAC16900
C MACRED:      SET TRUE TO INDICATE INPUT FROM MCBUFF TABLE             MAC17000
      EQUIVALENCE (MACRED,MACXX1(18))                                   MAC17100
C MVTRUE:      TRUE IF SOME ASSIGNED VALUE IS A MACRO NAME              MAC17200
      EQUIVALENCE (MVTRUE,MACXX1(19))                                   MAC17300
C BRANCH:      SET 2 IF MACRO IS TO UNDERGO INTERMEDIATE PROCESSING.    MAC17400
      EQUIVALENCE (BRANCH,MACXX1(20))                                   MAC17500
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        MAC17600
      EQUIVALENCE (INTMED,MACXX1(22))                                   MAC17700
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING            MAC17800
      EQUIVALENCE (FINMAC,MACXX1(24))                                   MAC17900
C MCDFDM:      DIMENSION OF ARRAYS MACDF1,MACDF2 AND MACTBL             MAC18000
      EQUIVALENCE (MCDFDM,MACXX1(32))                                   MAC18100
C MHSTDM:      CONTAINS DIMENSION OF ARRAY MACHST                       MAC18200
      EQUIVALENCE (MHSTDM,MACXX1(33))                                   MAC18300
C MCSVDM:      DIMENSION OF ARRAYS MACSV1,MACSV2 AND MACSV3             MAC18400
      EQUIVALENCE (MCSVDM,MACXX1(34))                                   MAC18500
C MNMVDM:      CONTAINS DIMENSION OF MNMVB AND MNMVC                    MAC18600
      EQUIVALENCE (MNMVDM,MACXX1(35))                                   MAC18700
C MSEQDM:      CONTAINS DIMENSION OF THE ARRAY MACSEQ                   MAC18800
      EQUIVALENCE (MSEQDM,MACXX1(36))                                   MAC18900
C MCSRCH:      AT FINAL MACRO PRECESSING MACDF1 POINTER                 MAC19000
      EQUIVALENCE (MCSRCH,MACXX1(59))                                   MAC19100
C NUMARG:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            MAC19200
      EQUIVALENCE (NUMARG,MACXX1(61))                                   MAC19300
C MACEND:      TRUE WHEN ALL MACRO PROCESSING IS FINISHED               MAC19400
      EQUIVALENCE (MACEND,MACXX1(62))                                   MAC19500
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED         MAC19600
      EQUIVALENCE (WHCHMN,MACXX1(63))                                   MAC19700
C VBLSVP:      POINTER TO LAST VBLSAV ENTRY                             MAC19800
      EQUIVALENCE (VBLSVP,MACXX1(66))                                   MAC19900
C IVSVDM:      DIMENSION OF ARRAY VBLSAV                                MAC20000
      EQUIVALENCE (IVSVDM,MACXX1(67))                                   MAC20100
C PATHLN:      CURRENT ACTUAL BRANCHING EXPRESSION. INITIALLY=NUMARG    MAC20200
      EQUIVALENCE (PATHLN,MACXX1(68))                                   MAC20300
C NXTLN:       POINTER TO NEXT LINUSD POSITION TO BE EXAMINED           MAC20400
      EQUIVALENCE (NXTLN,MACXX1(69))                                    MAC20500
C PATHCH:      CURRENT ACTUAL BRANCHING EXPRESSION. INITIALLY=NUMARG    MAC20600
      EQUIVALENCE (PATHCH,MACXX1(71))                                   MAC20700
C                                                                       MAC20800
C       24.    MACRO PROCESSING ARRAYS                                  MAC20900
C                                                                       MAC21000
      COMMON/MACXX3/MACXX3                                              MAC21100
      DIMENSION MACXX3(2630),MACDF1(400),MACDF2(400),MACHST(1800),MACSV1MAC21200
     *         (10),MACSV3(10),MACSV2(10)                               MAC21300
C MACDF1:      STORES MACRO NAME AND ALL MACRO VBL NAMTBL POINTERS      MAC21400
      EQUIVALENCE (MACDF1(1),MACXX3(1))                                 MAC21500
C MACDF2:      STORES NORMAL VALUES FOR ALL MACRO VARIABLES             MAC21600
      EQUIVALENCE (MACDF2(1),MACXX3(401))                               MAC21700
C MACHST:      MACRO CALL HISTORY TABLE                                 MAC21800
      EQUIVALENCE (MACHST(1),MACXX3(801))                               MAC21900
C MACSV1:      CONTAINS MACRO NEST LEVEL INFORMATIONS                   MAC22000
      EQUIVALENCE (MACSV1(1),MACXX3(2601))                              MAC22100
C MACSV2:      CONTAINS MACRO NEST LEVEL INFORMATIONS                   MAC22200
      EQUIVALENCE (MACSV2(1),MACXX3(2611))                              MAC22300
C MACSV3:      CONTAINS MACRO NEST LEVEL INFORMATIONS                   MAC22400
      EQUIVALENCE (MACSV3(1),MACXX3(2621))                              MAC22500
C                                                                       MAC22600
C       25.    MACRO PROCESSING ARRAYS                                  MAC22700
C                                                                       MAC22800
      COMMON/MACXX4/MACXX4                                              MAC22900
      DIMENSION MACXX4(100),MNMVB(25),MNMVC(25),MACSEQ(50)              MAC23000
C MNMVB:       INDICATES MACROS IN WHICH ARE ASSIGNED VALUES            MAC23100
      EQUIVALENCE (MNMVB(1),MACXX4(1))                                  MAC23200
C MNMVC:       CALLED MACRO FOR WHICH CORRESPONDING MNMVB ENTRY IS MADE MAC23300
      EQUIVALENCE (MNMVC(1),MACXX4(26))                                 MAC23400
C MACSEQ:      PRESERVES INITIAL SEQUENCE NUMBERS OF THE MACROS         MAC23500
      EQUIVALENCE (MACSEQ(1),MACXX4(51))                                MAC23600
C                                                                       MAC23700
C       26.    MACRO PROCESSING ARRAYS                                  MAC23800
C                                                                       MAC23900
      COMMON/MACXX6/MACXX6                                              MAC24000
      DIMENSION MACXX6(1300),MACTBL(400),VBLSAV(900)                    MAC24100
C MACTBL:      NAMTBL POINTERS OF THE ASSIGNED VALUES FOR MACRO CALL    MAC24200
      EQUIVALENCE (MACTBL(1),MACXX6(1))                                 MAC24300
C VBLSAV:      SAVES MACRO VBL ASSIGNED VALUES DURING INTERMED. PROCESS MAC24400
      EQUIVALENCE (VBLSAV(1),MACXX6(401))                               MAC24500
C                                                                       MAC24600
C       29.    CLASS CODE MODULI                                        MAC24700
C                                                                       MAC24800
      COMMON/MODULI/MODULI                                              MAC24900
      DIMENSION MODULI(2)                                               MAC25000
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    MAC25100
      EQUIVALENCE (MODULO,MODULI(1))                                    MAC25200
C MODHLF:      NORMAL MODE CODE LIMIT 500                               MAC25300
      EQUIVALENCE (MODHLF,MODULI(2))                                    MAC25400
C                                                                       MAC25500
C       36.    SYSTEM MACRO AND SEGMENT READ VARIABLES                  MAC25600
C                                                                       MAC25700
      COMMON/MACSEG/MACSEG                                              MAC25800
      DIMENSION MACSEG(6)                                               MAC25900
C ITMPCT:      NUMBER OF INTERNAL SYMBOLS GENERATED IN TRANSLATION      MAC26000
      EQUIVALENCE (ITMPCT,MACSEG(5))                                    MAC26100
C                                                                       MAC26200
C       38.    COMMON BLOCK MACRO CALL STATEMENT                        MAC26300
C              INDICATES A MACRO CALL BEING PROCESSED                   MAC26400
      COMMON/CALFLG/ICALLF                                              MAC26500
C                                                                       MAC26600
C       44.    ERROR POSITION TABLE                                     MAC26700
C                                                                       MAC26800
      COMMON/ERRPOS/ERRPOS                                              MAC26900
      INTEGER ERRPOS,ESTACK                                             MAC27000
      DIMENSION ERRPOS(302),ESTACK(100)                                 MAC27100
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    MAC27200
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               MAC27300
C                                                                       MAC27310
C       45.    NUMBER TABLE INDICES                                     MAC27315
C                                                                       MAC27320
      INCLUDE 'NUMBLK.INC'                                              MAC27330
C MNMBND:      LAST NAME TABLE ENTRY TO MACRO ASSIGNED NUMBER SECTION   MAC27340
C NUMIDX:      NAMTBL INDEX OF A NUMBER GIVEN IN THE CURRENT STATEMENT  MAC27350
C MASGND:      NAMTBL INDEX OF SECTION END FOR NUMBERS ASSIGNED TO MACROMAC27360
C*                                                                      MAC27400
C PURPOSE    EXECUTIVE ROUTINE FOR ALL PRODUCTIONS RELATED TO           MAC27500
C            APT MACRO PROCESSING                                       MAC27600
C                                                                       MAC27700
C ARGUMENT   IPROD  NUMBER ASSOCIATED WITH CURRENTLY MATCHED PRODUCTION MAC27800
C NOTES      IPROD IS 50 LESS THAN ORIGINAL PRODUCTION NUMBER           MAC27900
C                                                                       MAC28000
C   MACRO-SPEZIAL-STACK FUER 50 MACROVARIABLE                           MAC28100
      DIMENSION MRGSTK(150),ISEQ(3)                                     MAC28200
      CHARACTER*6 HCALL,I296                                            MAC28250
      LOGICAL JLHLT                                                     MAC28260
      INTEGER ICNUM,BCDF                                                MAC28270
      DATA HCALL/'CALL  '/,MRGTOP/0/,IMRGDM/150/                        MAC28300
      DATA I296,J296/'APT296',19205/                                    MAC28400
C**                                                                     MAC28500
      K = TOP                                                           MAC28600
      GO TO(4100,4200,4300,4400,4500,4600,4700,4800,                    MAC28700
     X      4900,5000,4300,4420), IPROD                                 MAC28800
 4100 I = STACK(1,TOP-1)                                                MAC28900
      IF(I.GT.NAMMAX)GO TO 4102                                         MAC29000
      J = NAMTBL(I)                                                     MAC29100
      IF(J/MODULO.NE.TEMP(1)/MODULO)GO TO 4101                          MAC29200
      M=J-TEMP(1)                                                       MAC29300
      ITMPCT=ITMPCT+1                                                   MAC29400
      CALL MACLBL(I,-ITMPCT,II)                                         MAC29500
      IF(M.GT.MODHLF)M=SUBSCR                                           MAC29600
      NAMTBL(II)=VBL(1)+M                                               MAC29700
      CALL RESRVZ(II,M,TXXXX(1,M),1)                                    MAC29800
      STACK(1,TOP-1) = II                                               MAC29900
      IF(M.EQ.SUBSCR)GO TO 4120                                         MAC30000
      CALL OPCODE(REPL)                                                 MAC30100
      CALL ONEARG(TXXXX(1,M))                                           MAC30200
      CALL ARGCVT(II)                                                   MAC30300
      CALL ARGCVT(I)                                                    MAC30400
      CALL RLSLIN                                                       MAC30500
      GO TO 4125                                                        MAC30600
 4120 M=J-TEMP(1)                                                       MAC30700
      CALL ASNADZ(II,I)                                                 MAC30800
 4125 IF(IFTMP(I))CALL PUTTMP(MODE(I))                                  MAC30900
      NAMTBL(II)=VBL(1)+M                                               MAC31000
 4101 IF(MRGTOP+3.LE.IMRGDM)GO TO 4103                                  MAC31100
 4104 CALL ALARM(32,TOP-1,8,'MACREC  ')                                 MAC31200
      IPROD=4                                                           MAC31300
      GO TO 4420                                                        MAC31400
 4102 MNMBND=MNMBND+1                                                   MAC31410
      IF(MNMBND.LT.MASGND)GOTO 4106                                     MAC31420
      IF(MNMBND.EQ.MASGND)CALL ALARM(3002,TOP-1,8,'MACREC  ')           MAC31430
      MNMBND=MASGND+1                                                   MAC31440
 4106 STACK(1,TOP-1)=MNMBND + NAMMAX                                    MAC31450
      CNUMTB(MNMBND)=CNUMTB(I-NAMMAX)                                   MAC31470
      GOTO 4101                                                         MAC31490
 4103 MRGSTK(MRGTOP+3)=STACK(1,TOP-1)                                   MAC31500
      TOP = TOP-2                                                       MAC31600
 4110 I = STACK(1,TOP-1)                                                MAC31700
      MRGSTK(MRGTOP+1) = I                                              MAC31800
      MRGSTK(MRGTOP+2) = NAMTBL(I)                                      MAC31900
      MRGTOP=MRGTOP+3                                                   MAC32000
      ICALLF=1                                                          MAC32100
      NAMTBL(I) = MACVBL(1)+MRGTOP/3                                    MAC32200
      TOP = TOP - 2                                                     MAC32300
      STACK(1,TOP) = STACK(1,K)                                         MAC32400
      STACK(2,TOP) = STACK(2,K)                                         MAC32500
      GO TO 1                                                           MAC32600
 4200 IF(MRGTOP+3.GT.IMRGDM)GO TO 4104                                  MAC32700
      MRGSTK(MRGTOP+3)=0                                                MAC32800
      GO TO 4110                                                        MAC32900
 4300 IF(MCSAVP)4310,4320,4310                                          MAC33000
 4310 CALL ALARM(1016,TOP-3,8,'MACREC  ')                               MAC33100
      GO TO 4360                                                        MAC33200
 4320 IF((MACDFP+3+MRGTOP/3).LE.MCDFDM)GO TO 4325                       MAC33300
      CALL ALARM(21,0,8,'MACREC  ')                                     MAC33400
      CALL HELP                                                         MAC33500
 4325 IF(MRGTOP)4350,4350,4330                                          MAC33600
 4330 DO 4340 I=3,MRGTOP,3                                              MAC33700
      J=MACDFP+I/3                                                      MAC33800
      MACDF1(J+3)=MRGSTK(I-2)                                           MAC33900
 4340 MACDF2(J+3)=MRGSTK(I)                                             MAC34000
      MACDF1(MACDFP+3) = J+3                                            MAC34100
 4350 L = STACK(1,TOP-3)                                                MAC34200
      IF (IPROD.EQ.11) L=STACK(1,TOP-4)                                 MAC34300
      MACDF1(MACDFP+1)=L                                                MAC34400
      MCNMB=MCNMB+1                                                     MAC34500
      MACDF2(MACDFP+2) = MCNMB                                          MAC34600
C                                                                       MAC34700
C...     PRESERVE INITIAL SEQUENCE NO. FOR THIS MACRO                   MAC34800
C                                                                       MAC34900
      IF(MCNMB.LE.MSEQDM)GO TO 4355                                     MAC35000
      CALL ALARM(27,0,8,'MACREC  ')                                     MAC35100
      CALL HELP                                                         MAC35200
 4355 MACSEQ(MCNMB)=SEQNO                                               MAC35300
      NAMTBL(L) = MACNAM(1)+MCNMB                                       MAC35400
      MACDF1(MACDFP+2) = MCTXTP                                         MAC35500
 4360 MACLDD=.TRUE.                                                     MAC35600
  600 NEWSTM = .TRUE.                                                   MAC35700
    1 RETURN                                                            MAC35800
 4400 MACLDD=.FALSE.                                                    MAC35900
 4410 MACDFP=MACDFP+3                                                   MAC36000
      IF(MRGTOP.NE.0)MACDFP=MACDF1(MACDFP)                              MAC36100
      CALL MCXTRN(1,MCTXTP+1,STACK(1,TOP-1))                            MAC36200
      CALL MCXTRN(1,MCTXTP+2,RTERM(2))                                  MAC36300
      MCTXTP=MCTXTP+2                                                   MAC36400
 4415 IF(MRGTOP)600,600,4420                                            MAC36500
 4420 DO 4430 I=3,MRGTOP,3                                              MAC36600
      J= MRGSTK(I-2)                                                    MAC36700
 4430 NAMTBL(J) = MRGSTK(I-1)                                           MAC36800
      MRGTOP = 0                                                        MAC36900
      ICALLF=0                                                          MAC37000
      GO TO 600                                                         MAC37100
 4500 I=STACK(1,TOP-1)                                                  MAC37200
      MCTXTP = MCTXTP+1                                                 MAC37300
      IF(I.GT.NAMMAX)GO TO 1410                                         MAC37400
      IF(CNAMTB(I).EQ.HCALL)I=0                                         MAC37500
      IF(NAMTBL(I)/MODULO.EQ.MACVBL(1)/MODULO                           MAC37600
     /) I=MACVBL(1) - NAMTBL(I)                                         MAC37700
      CALL MCXTRN(1,MCTXTP,I)                                           MAC37710
      GOTO 1420                                                         MAC37720
 1410 J=NUMBST+NAMMAX                                                   MAC37730
      CALL MCXTRN(1,MCTXTP,J)                                           MAC37735
      DO 1415 J=1,9,4                                                   MAC37740
        MCTXTP=MCTXTP+1                                                 MAC37750
        ICNUM=BCDF(CNUMTB(I-NAMMAX)(J:J+3))                             MAC37755
        CALL MCXTRN(1,MCTXTP,ICNUM)                                     MAC37760
 1415 CONTINUE                                                          MAC37765
 1420 I=STACK(1,TOP)                                                    MAC37800
      IF(I.GT.NAMMAX)GOTO 1450                                          MAC38010
      CALL MCXTRN(1,MCTXTP+1,I)                                         MAC38020
      IF (I.EQ.RTERM(2)) GOTO 4501                                      MAC38030
 1430 TOP=TOP-2                                                         MAC38100
      NUMIDX=MNMBND                                                     MAC38110
      GO TO 5010                                                        MAC38200
 1440 TOP=TOP+1                                                         MAC38210
 1450 J=NUMBST+NAMMAX                                                   MAC38220
       CALL MCXTRN(1,MCTXTP+1,J)                                        MAC38225
      DO 1425 J=1,9,4                                                   MAC38230
        MCTXTP=MCTXTP+1                                                 MAC38240
        ICNUM=BCDF(CNUMTB(I-NAMMAX)(J:J+3))                             MAC38245
        CALL MCXTRN(1,MCTXTP+1,ICNUM)                                   MAC38250
 1425 CONTINUE                                                          MAC38255
      GOTO 1430                                                         MAC38260
 4501 IPROD = 6                                                         MAC38300
      GOTO 4601                                                         MAC38400
 4600 CALL MCXTRN(1,MCTXTP+1,RTERM(2))                                  MAC38500
 4601 MCTXTP = MCTXTP+1                                                 MAC38600
      GO TO 600                                                         MAC38700
 4700 I=STACK(1,TOP-3)                                                  MAC38800
      ICALLF=0                                                          MAC38900
      IF(CNAMTB(I).EQ.HCALL)GOTO 4701                                   MAC39000
      CALL ALARM(1017,TOP-3,8,'MACREC  ')                               MAC39100
      GO TO 4415                                                        MAC39200
 4701 BRANCH=1                                                          MAC39300
      J=STACK(1,TOP-1)                                                  MAC39400
 4702 MVMAC=.FALSE.                                                     MAC39500
      MVTRUE=.FALSE.                                                    MAC39600
      CALLON=.FALSE.                                                    MAC39700
      IF(MCHSTP+4.LE.MHSTDM)GO TO 4780                                  MAC39800
 4782 CALL ALARM(22,0,8,'MACREC  ')                                     MAC39900
      CALL HELP                                                         MAC40000
 4780 TEMP1=MCHSTP                                                      MAC40100
      I=1                                                               MAC40200
      CALL MACTAB(J,I)                                                  MAC40300
 4704 J2=MACDF1(I+2)                                                    MAC40400
      MACSV2(MCSAVP+1)=VBLSVP+1                                         MAC40500
      MACSV1(MCSAVP+1)=I                                                MAC40600
      IF(J2)4728,4728,4705                                              MAC40700
 4705 J1=I+3                                                            MAC40800
      M1=0                                                              MAC40900
      KK=0                                                              MAC40910
      DO 4731 J=J1,J2                                                   MAC41000
      K=IABS(MACDF1(J))                                                 MAC41100
      M1=M1+100000                                                      MAC41200
      KK=KK+1                                                           MAC41210
      GO TO (4790,4802),BRANCH                                          MAC41300
 4790 IF(K.GT.NAMMAX)GO TO 15                                           MAC41400
C   MACRO-CALL OHNE ARGUMENTE                                           MAC41500
      IF(MRGTOP.EQ.0)GO TO 15                                           MAC41600
      IF(NAMTBL(K)/MODULO.NE.MACVBL(1)/MODULO)GO TO 15                  MAC41700
 4706 DO 4707 L=3,MRGTOP,3                                              MAC41800
      IF(K.EQ.MRGSTK(L-2))GO TO 4708                                    MAC41900
 4707 CONTINUE                                                          MAC42000
 4708 IF(MCSAVP)4715,4715,4709                                          MAC42100
 4709 M=MACSV1(MCSAVP)                                                  MAC42200
      N2=MACDF1(M+2)                                                    MAC42300
      IF(N2)4715,4715,4710                                              MAC42400
 4710 N1=M+3                                                            MAC42500
      DO 4711 N=N1,N2                                                   MAC42600
      IF(MRGSTK(L).EQ.IABS(MACDF1(N)))GO TO 4712                        MAC42700
 4711 CONTINUE                                                          MAC42800
      GO TO 4715                                                        MAC42900
 4712 N3=N-N1+MACSV2(MCSAVP)                                            MAC43000
      VBLSAV(VBLSVP+1)=VBLSAV(N3)                                       MAC43100
      MACHST(MCHSTP+4)=-(M1+N-N1+1)                                     MAC43200
      MVMAC=.TRUE.                                                      MAC43300
 4713 MCHSTP=MCHSTP+1                                                   MAC43400
      IF(MCHSTP+4.GT.MHSTDM)GO TO 4782                                  MAC43500
 4714 MRGSTK(L)=-1                                                      MAC43600
      NAMTBL(K) = MRGSTK(L-1)                                           MAC43700
      GO TO 4717                                                        MAC43800
 4715 IF(MACDF2(J).EQ.MRGSTK(L))GO TO 4716                              MAC43900
      VBLSAV(VBLSVP+1)=MRGSTK(L)                                        MAC44000
      MACHST(MCHSTP+4) = M1 + MRGSTK(L)                                 MAC44100
      GO TO 4713                                                        MAC44200
 4716 VBLSAV(VBLSVP+1)=MACDF2(J)                                        MAC44300
      GO TO 4714                                                        MAC44400
   15 VBLSAV(VBLSVP+1) = MACDF2(J)                                      MAC44500
 4717 N=VBLSAV(VBLSVP+1)                                                MAC44600
      IF(N.GT.NAMMAX)GO TO 4718                                         MAC44700
      IF ((NAMTBL(N)/MODULO).EQ.(MACNAM(1)/MODULO)) GOTO 4720           MAC44800
 4718 IF(MACDF1(J))4719,4727,4727                                       MAC44900
 4719 CALL ALARM(1018,0,8,'MACREC  ')                                   MAC45000
      GO TO 4720                                                        MAC45100
 4720 IF(MACDF1(J)*MACDF2(I))4723,4722,4721                             MAC45200
 4721 CALL ALARM(1019,0,8,'MACREC  ')                                   MAC45300
      GO TO 4723                                                        MAC45400
 4722 MACDF1(J)=-MACDF1(J)                                              MAC45500
 4723 L=1                                                               MAC45600
      CALL MACTAB(N,L)                                                  MAC45700
      IF(MACDF2(L).EQ.0)MVTRUE=.TRUE.                                   MAC45800
      IF(MNMVBP)4726,4726,4724                                          MAC45900
 4724 DO 4725 K=1,MNMVBP                                                MAC46000
      IF((MNMVB(K).EQ.N).AND.(MNMVC(K).EQ.I))GO TO 4727                 MAC46100
 4725 CONTINUE                                                          MAC46200
 4726 MNMVBP=MNMVBP+1                                                   MAC46300
      IF(MNMVBP.LE.MNMVDM)GO TO 4786                                    MAC46400
      CALL ALARM(28,0,8,'MACREC  ')                                     MAC46500
      CALL HELP                                                         MAC46600
 4786 MNMVB(MNMVBP)=N                                                   MAC46700
      MNMVC(MNMVBP)=I                                                   MAC46800
      IF((MACDF2(L).NE.0).AND.(MACDF2(L).LE.(MCSAVP+1)))MACDF2(L)=MCSAVPMAC46900
     1+2                                                                MAC47000
 4727 IF(MACDF2(J).NE.0.OR.MACHST(MCHSTP+3)/100000.EQ.KK) THEN          MAC47005
        CONTINUE                                                        MAC47006
      ELSE                                                              MAC47007
      JLHLT=ILHLT                                                       MAC47010
      ILHLT=.FALSE.                                                     MAC47015
      DO 4744 N3=1,3                                                    MAC47020
        ISEQ(N3)=SEQCOM(N3)                                             MAC47025
 4744 CONTINUE                                                          MAC47030
      N3=MACDF2(J1-2)                                                   MAC47035
      SEQNO=MACSEQ(N3)                                                  MAC47040
      CALL BINBCD(SEQNO,SEQNUM,N3)                                      MAC47045
      STACK(1,TOP+1)=MACDF1(J1-3)                                       MAC47050
      STACK(1,TOP+2)=MACDF1(J)                                          MAC47055
      CALL ALARM(2055,0,8,'MACREC  ')                                   MAC47060
      ILHLT=JLHLT                                                       MAC47065
      DO 4745 N3=1,3                                                    MAC47070
        SEQCOM(N3)=ISEQ(N3)                                             MAC47075
 4745 CONTINUE                                                          MAC47080
      ENDIF                                                             MAC47085
      VBLSVP=VBLSVP+1                                                   MAC47100
 4731 CONTINUE                                                          MAC47110
      IF(VBLSVP.LT.IVSVDM)GO TO 4728                                    MAC47200
 4788 CALL ALARM(29,0,8,'MACREC  ')                                     MAC47300
      CALL HELP                                                         MAC47400
 4728 GO TO(4752,4739),BRANCH                                           MAC47500
 4752 IF(MRGTOP)4729,4732,4729                                          MAC47600
 4729 DO 4730 L=3,MRGTOP,3                                              MAC47700
      IF(MRGSTK(L).NE.(-1))CALL ALARM(1020,0,8,'MACREC  ')              MAC47800
 4730 CONTINUE                                                          MAC47900
 4732 IF(CALLMV) GO TO 4735                                             MAC48000
      IF(MVMAC)  GO TO 4736                                             MAC48100
      MACDF2(I+2)=MACDF2(I+2)+1                                         MAC48200
      MACHST(TEMP1+3)=MACDF2(I+2)                                       MAC48300
      MCHSTP=MCHSTP+3                                                   MAC48400
      IF(MCHSTP+4.GT.MHSTDM)GO TO 4782                                  MAC48500
      IF(MCSAVP)4733,4733,4734                                          MAC48600
 4733 IF(J2.NE.0)GO TO 1010                                             MAC48700
      CALL MACLBL(-1,MACDF1(I),J)                                       MAC48800
      NAMTBL(J)=LABEL(1)                                                MAC48900
      CALL CALMCX(J,0,1)                                                MAC49000
      GO TO 1020                                                        MAC49100
 1010 CALL CALMCX(MACDF1(I),0,2)                                        MAC49200
      CALL MACLBL(MACDF1(I),-MACDF2(I+2),L)                             MAC49300
      NAMTBL(L) = IMPLAB(1)                                             MAC49400
      CALL CALMCX(L,0,1)                                                MAC49500
 1020 MACHST(TEMP1+1)=0                                                 MAC49600
      GO TO 4742                                                        MAC49700
 4734 CALL MCXTRN(1,CALLPT+1,MACDF2(I+2))                               MAC49800
      CALL MCXTRN(1,CALLPT+2,I)                                         MAC49900
      GO TO 4703                                                        MAC50000
 4735 CALL MCXTRN(1,CALLPT+2,-MVSEG)                                    MAC50100
      CALLMV=.FALSE.                                                    MAC50200
      GO TO 4737                                                        MAC50300
 4736 CALL MCXTRN(1,CALLPT+2,I)                                         MAC50400
 4737 CALL MCXTRN(1,CALLPT+1,0)                                         MAC50500
      IF(TEMP1.EQ.MCHSTP)GO TO 4739                                     MAC50600
      M=MCHSTP-1                                                        MAC50700
      DO 4738 L=TEMP1,M                                                 MAC50800
      CALL MCXTRN(1,CALLPT+3,MACHST(L+4))                               MAC50900
 4738 CALLPT=CALLPT+1                                                   MAC51000
 4739 MCHSTP=TEMP1+3                                                    MAC51100
      MACHST(MCHSTP)=0                                                  MAC51200
 4703 MACHST(TEMP1+1)=MACSV1(MCSAVP)                                    MAC51300
      GO TO(4740,4742),BRANCH                                           MAC51400
 4740 CALL MCXTRN(1,CALLPT+3,TEXTST)                                    MAC51500
 4741 MACSV3(MCSAVP)=TEXTST                                             MAC51600
 4742 MACHST(TEMP1+2)=I                                                 MAC51700
      IF(MACDF2(I))4743,4760,4743                                       MAC51800
 4743 IF(MACDF2(I).GT.MCSAVP) GO TO 4749                                MAC51900
      MACDF2(I)=MCSAVP+1                                                MAC52000
 4749 IF(MVTRUE)GO TO  4757                                             MAC52100
      IF(MACDF1(I+2))4754,4754,4767                                     MAC52200
 4767 SWITCH=2                                                          MAC52300
      GO TO 4762                                                        MAC52400
 4754 IF(MCSAVP)4759,4415,4759                                          MAC52500
 4760 IF(MACDF1(I+2))4757,4757,4761                                     MAC52600
 4761 SWITCH=1                                                          MAC52700
 4762 J=MACSV2(MCSAVP+1)                                                MAC52800
      J1=I+3                                                            MAC52900
      J2=MACDF1(I+2)                                                    MAC53000
      DO 4766 K=J1,J2                                                   MAC53100
      GO TO(4765,4763),SWITCH                                           MAC53200
 4763 L=VBLSAV(J)                                                       MAC53300
      M = MACTBL(K)                                                     MAC53400
      IF (L.GT.NAMMAX) GOTO 4766                                        MAC53500
      N = MODULO*(NAMTBL(L)/MODULO)                                     MAC53600
      IF (M.GT.NAMMAX) GOTO 4777                                        MAC53700
      M = MODULO*(NAMTBL(M)/MODULO)                                     MAC53800
      IF(N.NE.CONGEO(1))GO TO 4791                                      MAC53900
      IF(M.EQ.GEOM(1))GO TO 4798                                        MAC54000
      GO TO 4793                                                        MAC54100
 4791 IF(N.NE.CONPRO(1))GO TO 4792                                      MAC54200
      IF(M.EQ.PROCED(1))GO TO 4798                                      MAC54300
      GO TO 4793                                                        MAC54400
 4777 M = VBL(1)                                                        MAC54500
 4792 IF(N.NE.IDENT(1) .AND. N.NE.PERMID(1))GO TO 4793                  MAC54600
      IF (M .EQ. PERMID(1)) GO TO 4798                                  MAC54700
      IF (M. NE. FCN(1)) GO TO 4793                                     MAC54800
 4798 NAMTBL(L) = M + NAMTBL(L) - N                                     MAC54900
      GO TO 4766                                                        MAC55000
 4793 IF(M.NE.VBL(1))GO TO 4766                                         MAC55100
      SWITCH=1                                                          MAC55200
      GO TO 4766                                                        MAC55300
 4765 MACTBL(K)=VBLSAV(J)                                               MAC55400
 4766 J=J+1                                                             MAC55500
      GO TO(4757,4754),SWITCH                                           MAC55600
 4757 INTMED=-1                                                         MAC55700
      MACRED=.TRUE.                                                     MAC55800
      ILHLT=.TRUE.                                                      MAC55900
      MVPNT=MACSV2(MCSAVP+1)-1                                          MAC56000
      MCSAVP=MCSAVP+1                                                   MAC56100
      IF(MCSAVP.LT.MCSVDM)GO TO 4784                                    MAC56200
      CALL ALARM(24,0,8,'MACREC  ')                                     MAC56300
      CALL HELP                                                         MAC56400
 4784 MACDF2(I)=MCSAVP                                                  MAC56500
      WHCHMN=MACDF2(I+1)                                                MAC56600
      GO TO(4758,4808),BRANCH                                           MAC56700
 4758 TEXTST = MACDF1(I+1)                                              MAC56800
 4759 GO TO(4415,4812),BRANCH                                           MAC56900
 4800 CALL MCXTRN(2,TEXTST+2,J)                                         MAC57000
      JJ = TEXTST + 3                                                   MAC57100
 4820 CALL MCXTRN(2,JJ,MCTXWD)                                          MAC57200
      IF((MCTXWD/100000).EQ.0)GO TO 4821                                MAC57300
      JJ = JJ + 1                                                       MAC57400
      GO TO 4820                                                        MAC57500
 4821 BRANCH = 2                                                        MAC57600
      IF(J)4801,4801,4702                                               MAC57700
 4801 J=MVPNT-J                                                         MAC57800
      J=VBLSAV(J)                                                       MAC57900
      GO TO 4702                                                        MAC58000
 4802 SAVE=TEXTST+3                                                     MAC58100
 4803 CALL MCXTRN(2,SAVE,MCTXWD)                                        MAC58200
      SAVE1=MCTXWD/100000                                               MAC58300
      IF(SAVE1)4804,4851,4804                                           MAC58400
 4851 VBLSAV(VBLSVP+1)=MACDF2(J)                                        MAC58500
      GO TO 4717                                                        MAC58600
 4804 IF(100000*IABS(SAVE1).EQ.M1)GO TO 4805                            MAC58700
      SAVE=SAVE+1                                                       MAC58800
      GO TO 4803                                                        MAC58900
 4805 IF(SAVE1)4806,4807,4807                                           MAC59000
 4806 SAVE1=MACSV2(MCSAVP)-(M1+MCTXWD)-1                                MAC59100
      VBLSAV(VBLSVP+1)=VBLSAV(SAVE1)                                    MAC59200
      GO TO 4717                                                        MAC59300
 4807 VBLSAV(VBLSVP+1)=MCTXWD-M1                                        MAC59400
      GO TO 4717                                                        MAC59500
 4808 CALL MCXTRN(2,JJ,MACSV3(MCSAVP-1))                                MAC59600
      TEXTST=MACDF1(I+1)                                                MAC59700
 4811 STACK(1,TOP) = RTERM(2)                                           MAC59800
      GO TO 4415                                                        MAC59900
 4812 CALL MCXTRN(2,JJ,TEXTST)                                          MAC60000
      GO TO 4811                                                        MAC60100
 4900 IF(INTMED)4901,4904,4905                                          MAC60200
 4901 MCSAVP=MCSAVP-1                                                   MAC60300
      L=MACSV1(MCSAVP+1)                                                MAC60400
      MACTBL(L)=1                                                       MAC60500
      VBLSVP=MACSV2(MCSAVP+1)-1                                         MAC60600
      IF(VBLSVP.GE.IVSVDM)GO TO 4788                                    MAC60700
      IF(MCSAVP)4904,4902,4903                                          MAC60800
 4904 CALL ALARM(37,0,8,'MACREC  ')                                     MAC60900
      CALL HELP                                                         MAC61000
 4902 ILHLT=.FALSE.                                                     MAC61100
      MACRED=.FALSE.                                                    MAC61200
      INTMED=0                                                          MAC61300
      WHCHMN=0                                                          MAC61400
      GO TO 600                                                         MAC61500
 4903 TEXTST=MACSV3(MCSAVP)                                             MAC61600
      MVPNT=MACSV2(MCSAVP)-1                                            MAC61700
      L=MACSV1(MCSAVP)                                                  MAC61800
      WHCHMN=MACDF2(L+1)                                                MAC61900
      GO TO 600                                                         MAC62000
 4905 IF(FINMAC)GO TO 4906                                              MAC62100
      FINMAC=.TRUE.                                                     MAC62200
C                                                                       MAC62300
C...  BEGIN FINAL MACRO PROCESSING FOR THIS MACRO                       MAC62400
C                                                                       MAC62500
      J = MACDF2(MCSRCH+1)                                              MAC62600
      SEQNO=MACSEQ(J)                                                   MAC62700
      ILHLT=.FALSE.                                                     MAC62800
      TEXTST=MACDF1(MCSRCH+1)                                           MAC62900
      PATHLN=NUMARG                                                     MAC63000
      NXTLN=1                                                           MAC63100
      PATHCH=NUMARG                                                     MAC63200
      CALL MACLBL(-1,MACDF1(MCSRCH),J)                                  MAC63300
      NAMTBL(J) = LABEL(1)                                              MAC63400
      MCHDNG=.TRUE.                                                     MAC63500
      CALL LABELZ(J)                                                    MAC63600
      J=NAME(I296)                                                      MAC63700
      NAMTBL(J)=J296                                                    MAC63800
      CALL CALLZZ(J)                                                    MAC63900
      CALL RLSLIN                                                       MAC64000
      GO TO 600                                                         MAC64100
 4906 CALL COMSTR                                                       MAC64200
      CALL MNPROC                                                       MAC64300
      IF(.NOT.MACEND)GO TO 600                                          MAC64400
      CALL EPILOG                                                       MAC64500
      MACRED = .FALSE.                                                  MAC64600
      GOTO 600                                                          MAC64700
 5000 I=STACK(1,TOP)                                                    MAC64710
      IF(I.GT.NAMMAX)GOTO 1440                                          MAC64720
      IF(NAMTBL(I)/MODULO.EQ.MACVBL(1)/MODULO)I=MACVBL(1)-NAMTBL(I)     MAC64730
      CALL MCXTRN(1,MCTXTP+1,I)                                         MAC64800
      TOP=TOP-1                                                         MAC64900
 5010 MCTXTP=MCTXTP+1                                                   MAC65000
      GO TO 1                                                           MAC65100
       END                                                              MAC65200
**** SOURCE FILE : M0006652.V01   ***
*
C                                                                       MTB00100
C              FORTRAN SUBROUTINE MACTAB                                MTB00200
C                                                                       MTB00300
C LINKAGE      SUBROUTINE MACTAB(PONTER,STAAT)                          MTB00400
C                                                                       MTB00500
C          SUBSIDIARIES                  CALLED BY                      MTB00600
C          NONE                          TYPE          ENTRY            MTB00700
C                                        SUBROUTINE    INPUT            MTB00800
C                                        SUBROUTINE    MACREC           MTB00900
C                                                                       MTB01000
      SUBROUTINE MACTAB(PONTER,STAAT)                                   MTB01100
C                                                                       MTB01200
      IMPLICIT INTEGER (A-Z)                                            MTB01300
C                                                                       MTB01400
C       22.    MACRO PROCESSING VARIABLES                               MTB01500
C                                                                       MTB01600
      COMMON/MACXX1/MACXX1                                              MTB01700
      DIMENSION MACXX1(71)                                              MTB01800
C MACDFP:      POINTER TO LAST ENTRY IN MACDF1 AND MACDF2 ARRAYS        MTB01900
      EQUIVALENCE (MACDFP,MACXX1(1))                                    MTB02000
C                                                                       MTB02100
C       24.    MACRO PROCESSING ARRAYS                                  MTB02200
C                                                                       MTB02300
      COMMON/MACXX3/MACXX3                                              MTB02400
      DIMENSION MACXX3(1430),MACDF1(400)                                MTB02500
C MACDF1:      STORES MACRO NAME AND ALL MACRO VBL NAMTBL POINTERS      MTB02600
      EQUIVALENCE (MACDF1(1),MACXX3(1))                                 MTB02700
C*                                                                      MTB02800
C PURPOSE      TO DETERMINE THE POSITION OF A PARTICULAR MACRO          MTB02900
C              NAME IN THE MACDF1 TABLE.                                MTB03000
C                                                                       MTB03100
C ARGUMENTS    PONTER   NAME TABLE (NAMTBL) INDEX OF MACRO NAME         MTB03200
C              STAAT    FOUND MACDF1 INDEX OF MACRO NAME                MTB03300
C**                                                                     MTB03400
      J=PONTER                                                          MTB03500
      I=STAAT                                                           MTB03600
    1 IF(I.GE.MACDFP)GO TO 4                                            MTB03700
      IF(MACDF1(I).EQ.J)GO TO 6                                         MTB03800
      IF(MACDF1(I+2))2,2,3                                              MTB03900
    2 I=I+3                                                             MTB04000
      GO TO 1                                                           MTB04100
    3 I=MACDF1(I+2)+1                                                   MTB04200
      GO TO 1                                                           MTB04300
    4 STAAT=0                                                           MTB04400
    5 RETURN                                                            MTB04500
    6 STAAT=I                                                           MTB04600
      GO TO 5                                                           MTB04700
       END                                                              MTB04800
**** SOURCE FILE : M0006653.V04   ***
*
C                                                                       MCH00100
C              FORTRAN SUBROUTINE MATCH                                 MCH00200
C                                                                       MCH00300
C LINKAGE      SUBROUTINE MATCH                                         MCH00400
C                                                                       MCH00500
C          SUBSIDIARIES                  CALLED BY                      MCH00600
C          TYPE          ENTRY           TYPE          ENTRY            MCH00700
C          SUBROUTINE    LABELZ          SUBROUTINE    INPUT            MCH00800
C          INTEGER FCT.  MODE            SUBROUTINE    PRO020           MCH00900
C          SUBROUTINE    MACLBL          SUBROUTINE    PRO026           MCH01000
C          SUBROUTINE    ALARM           SUBROUTINE    RECOG            MCH01100
C          SUBROUTINE    RETMCX          SUBROUTINE    REPLAC           MCH01200
C          SUBROUTINE    SETBIT                                         MCH01300
C          SUBROUTINE    HELP                                           MCH01400
C                                                                       MCH01500
      SUBROUTINE MATCH                                                  MCH01600
C                                                                       MCH01700
      IMPLICIT INTEGER (A-Z)                                            MCH01800
C                                                                       MCH01900
C        1.    NAME TABLE AND TABLE LIMITS                              MCH02000
C                                                                       MCH02100
      INCLUDE 'NAMETB.INC'                                              MCH02200
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                MCH02250
C CNAMTB:      NAME TABLE OR DICTIONARY                                 MCH02350
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     MCH02400
C                                                                       MCH02800
C        2.    STACK AND POINTER STORAGE                                MCH02900
C                                                                       MCH03000
      COMMON/STKLST/STKLST                                              MCH03100
      DIMENSION STKLST(300),ARGSTK(99)                                  MCH03200
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             MCH03300
      EQUIVALENCE (ARGTOP,STKLST(2))                                    MCH03400
C ARGSTK:      ARGUMENT STACK                                           MCH03500
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               MCH03600
C                                                                       MCH03700
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      MCH03800
C                                                                       MCH03900
      COMMON/CODE/CODE                                                  MCH04000
      DIMENSION CODE(150),NUMBER(2),PERMID(2),LABEL(2),IMPLAB(2)        MCH04100
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        MCH04200
      EQUIVALENCE (NUMBER(1),CODE(27))                                  MCH04300
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        MCH04400
      EQUIVALENCE (PERMID(1),CODE(39))                                  MCH04500
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        MCH04600
      EQUIVALENCE (LABEL(1),CODE(43))                                   MCH04700
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        MCH04800
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  MCH04900
C                                                                       MCH05000
C       22.    MACRO PROCESSING VARIABLES                               MCH05100
C                                                                       MCH05200
      COMMON/MACXX1/MACXX1                                              MCH05300
      LOGICAL ILHLT,ENTRY,NESTG                                         MCH05400
      DIMENSION MACXX1(71)                                              MCH05500
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              MCH05600
      EQUIVALENCE (ILHLT,MACXX1(14))                                    MCH05700
C MAXSPS:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            MCH05800
      EQUIVALENCE (MAXSPS,MACXX1(21))                                   MCH05900
C MAJWRD:      CONTAINS ACTUAL MAJOR WORD                               MCH06000
      EQUIVALENCE (MAJWRD,MACXX1(23))                                   MCH06100
C NMLINE:      EQUALS NUMBER OF EXPRESSIONS THAT REQUIRE BRANCHING I.L. MCH06200
      EQUIVALENCE (NMLINE,MACXX1(25))                                   MCH06300
C WAY:         INDICATES TYPE OF MACRO PROCESSING                       MCH06400
      EQUIVALENCE (WAY,MACXX1(26))                                      MCH06500
C BITWDS:      NUMBER OF WORDS NEEDED FOR ALL CALL QUALITIES OF MACRO   MCH06600
      EQUIVALENCE (BITWDS,MACXX1(29))                                   MCH06700
C MACLNT:      TEMPORARY STORAGE FOR MCSLNT                             MCH06800
      EQUIVALENCE (MACLNT,MACXX1(37))                                   MCH06900
C MCSLNT:      NUMBER OF MACRO VBLS IN ARGSTK FOR CURRENT EXPRESSION    MCH07000
      EQUIVALENCE (MCSLNT,MACXX1(38))                                   MCH07100
C MSP:         POINTER TO THE LAST ENTRY IN MAS ARRAY                   MCH07200
      EQUIVALENCE (MSP,MACXX1(39))                                      MCH07300
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION     MCH07400
      EQUIVALENCE (ENTRY,MACXX1(40))                                    MCH07500
C MVEXST:      POSITION NUMBER OF MACRO VARIABLE, 0=NO MACRO VARIABLE   MCH07600
      EQUIVALENCE (MVEXST,MACXX1(41))                                   MCH07700
C MACTOP:      POINTER TO EXPRESSION NUMBER IN MACSPD TABLE             MCH07800
      EQUIVALENCE (MACTOP,MACXX1(42))                                   MCH07900
C MCSTRT:      INDEX IN MACSPD OF CURRENT CALL BEING EXAMINED           MCH08000
      EQUIVALENCE (MCSTRT,MACXX1(43))                                   MCH08100
C MAJOR:       CURRENT CALL ASSIGNED VALUE IF MAYWRD IS MACRO VARIABLE  MCH08200
      EQUIVALENCE (MAJOR,MACXX1(44))                                    MCH08300
C NESTG:       TRUE WHEN A NESTED GEOMETRIC EXPRESSION ENCOUNTERED      MCH08400
      EQUIVALENCE (NESTG,MACXX1(45))                                    MCH08500
C ROUTE:       CLASS CODE OF A MAJOR WORD DURING MACRO PROCESSING       MCH08600
      EQUIVALENCE (ROUTE,MACXX1(46))                                    MCH08700
C ROAD:        CLASS CODE OF A MAJOR WORD DURING MACRO PROCESSING       MCH08800
      EQUIVALENCE (ROAD,MACXX1(47))                                     MCH08900
C SAVMSP:      USED TO SAVE A POINTER TO THE MAS ARRAY                  MCH09000
      EQUIVALENCE (SAVMSP,MACXX1(48))                                   MCH09100
C TYP:         1 WHEN AN INVALID PATTERN FOR CURRENT EXPRESSION APPEARS MCH09200
      EQUIVALENCE (TYP,MACXX1(49))                                      MCH09300
C LNUSDP:      INDEX OF LAST LINUSD ENTRY                               MCH09400
      EQUIVALENCE (LNUSDP,MACXX1(51))                                   MCH09500
C MCTOPP:      TEMPORARY STORAGE IN MATCH FOR MACTOP VALUE              MCH09600
      EQUIVALENCE (MCTOPP,MACXX1(52))                                   MCH09700
C LNSDDM:      DIMENSION OF LINUSD                                      MCH09800
      EQUIVALENCE (LNSDDM,MACXX1(53))                                   MCH09900
C MVARDM:      CONTAINS DIMENSION OF THE ARRAY MACVAR                   MCH10000
      EQUIVALENCE (MVARDM,MACXX1(54))                                   MCH10100
C MASDM:       CONTAINS DIMENSION OF ARRAY MAS                          MCH10200
      EQUIVALENCE (MASDM,MACXX1(55))                                    MCH10300
C NUMBIT:      CONTAINS NUMBER OF BITS IN A FIXED POINT WORD            MCH10400
      EQUIVALENCE (NUMBIT,MACXX1(56))                                   MCH10500
C MCSPDP:      POINTER TO LAST ENTRY IN MACSPD TABLE                    MCH10600
      EQUIVALENCE (MCSPDP,MACXX1(57))                                   MCH10700
C NUMARG:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            MCH10800
      EQUIVALENCE (NUMARG,MACXX1(61))                                   MCH10900
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED         MCH11000
      EQUIVALENCE (WHCHMN,MACXX1(63))                                   MCH11100
C MSPDDM:      CONTAINS DIMENSION OF THE ARRAY MACSPD                   MCH11200
      EQUIVALENCE (MSPDDM,MACXX1(65))                                   MCH11300
C                                                                       MCH11400
C      25A.    MACRO PROCESSING ARRAYS                                  MCH11500
C                                                                       MCH11600
      COMMON/MACXX5/MACXX5                                              MCH11700
      DIMENSION MACXX5(135),ITMPSV(135)                                 MCH11800
C ITMPSV:      TEMPORARY STORAGE DURING FINAL MACRO PROCESSING          MCH11900
      EQUIVALENCE (ITMPSV(1),MACXX5(1))                                 MCH12000
C                                                                       MCH12100
C       26.    MACRO PROCESSING ARRAYS                                  MCH12200
C                                                                       MCH12300
      COMMON/MACXX6/MACXX6                                              MCH12400
      DIMENSION MACXX6(1300),MACSPD(1300)                               MCH12500
C MACSPD:      NAMTBL POINTERS OF THE ASSIGNED VALUES FOR MACRO CALL    MCH12600
      EQUIVALENCE (MACSPD(1),MACXX6(1))                                 MCH12700
C                                                                       MCH12800
C      26A.    MACRO PROCESSING ARRAYS                                  MCH12900
C                                                                       MCH13000
      COMMON/MACXX7/MACXX7                                              MCH13100
      DIMENSION MACXX7(182),MACVAR(32),MAS(100),LINUSD(50)              MCH13200
C LINUSD:      NUMBERS OF EXPRESSIONS REQUIRING BRANCHING FOR MACROS    MCH13300
      EQUIVALENCE (LINUSD(1),MACXX7(1))                                 MCH13400
C MAS:         NAMTBL POINTERS OR ASSIGNED VALUES OF MACRO VBL MAJOR W. MCH13500
      EQUIVALENCE (MAS(1),MACXX7(51))                                   MCH13600
C MACVAR:      POSITION NUMBER OF EACH UNIQUE MACRO VARIABLE            MCH13700
      EQUIVALENCE (MACVAR(1),MACXX7(151))                               MCH13800
C                                                                       MCH13900
C       29.    CLASS CODE MODULI                                        MCH14000
C                                                                       MCH14100
      COMMON/MODULI/MODULI                                              MCH14200
      DIMENSION MODULI(2)                                               MCH14300
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    MCH14400
      EQUIVALENCE (MODULO,MODULI(1))                                    MCH14500
C MODHLF:      NORMAL MODE CODE LIMIT 500                               MCH14600
      EQUIVALENCE (MODHLF,MODULI(2))                                    MCH14700
C                                                                       MCH14800
C       44.    ERROR POSITION TABLE                                     MCH14900
C                                                                       MCH15000
      COMMON/ERRPOS/ERRPOS                                              MCH15100
      INTEGER ERRPOS,ERGSTK                                             MCH15200
      DIMENSION ERRPOS(302),ERGSTK(100)                                 MCH15300
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   MCH15400
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               MCH15500
C*                                                                      MCH15600
C PURPOSE      TO DETERMINE WHICH EXPRESSIONS IN AN APT MACRO           MCH15700
C              REQUIRE BRANCHING                                        MCH15800
C                                                                       MCH15900
C NOTES        1.  MATCH IS ACCESSED DURING THE FIRST PASS OF           MCH16000
C                  FINAL MACRO PROCESSING                               MCH16100
C              2.  FOR EACH CALL A 'STATE' BASED UPON THE KIND          MCH16200
C                  OF EXPRESSION ENCONTERED IS CALCULATED FOR           MCH16300
C                  EACH INVOLVED MACRO VARIABLE.  EVERY TIME            MCH16400
C                  THE CURRENT CALL STRING OF 'STATES' DIFFERS          MCH16500
C                  IN AT LEAST ONE POSITION FROM ALL OTHER              MCH16600
C                  PREVIOUS STRINGS, A NEW BRANCH IS INITIATED          MCH16700
C                  AND THE STRING OF 'STATES' IS STORED IN THE          MCH16800
C**                                                                     MCH16900
      LOGICAL EXTERN                                                    MCH17100
      DATA LBRCH/0/                                                     MCH17150
      DATA EXTERN/.FALSE./                                              MCH17200
      IF (NUMARG .EQ. 0) GO TO 7                                        MCH17300
C                                                                       MCH17400
C...     ENTRY=.TRUE. IF MATCH IS BEING ENTERED AGAIN FOR SAME          MCH17500
C...     PRODUCTION INDICATING A BRANCHING SITUATION EXISTS.            MCH17600
C                                                                       MCH17700
      IF(ENTRY)GO TO 99                                                 MCH17800
C                                                                       MCH17900
C...     NMLINE=NUMBER OF CURRENT (POTENTIAL) BRANCHING EXPRESSION.     MCH18000
C                                                                       MCH18100
      NMLINE=NMLINE+1                                                   MCH18200
      K1 = NUMARG                                                       MCH18300
      M1 = 0                                                            MCH18400
      ARGARG=ARGTOP                                                     MCH18500
      DO 1 I=2,NUMARG                                                   MCH18600
    1 ITMPSV(I+99)=0                                                    MCH18700
C                                                                       MCH18800
C...     MCSLNT=NUMBER OF UNIQUE MACRO VARIABLES IN ARGSTK.             MCH18900
C                                                                       MCH19000
      MCSLNT=0                                                          MCH19100
C                                                                       MCH19200
C...     MVEXST=POSITION NUMBER IF APT MAJOR WORD A MACRO VARIABLE.     MCH19300
C...     NORMALLY=0.                                                    MCH19400
C                                                                       MCH19500
      MVEXST=0                                                          MCH19600
C                                                                       MCH19700
C...     IF FUNCTION,NO BRANCHING REQUIRED FOR MACRO VARIABLE ARGUMENTS.MCH19800
C                                                                       MCH19900
      IF((ARGTOP.EQ.0).OR.(WAY.EQ.3))GO TO 3                            MCH20000
      DO 2 I=1,ARGTOP                                                   MCH20100
C                                                                       MCH20200
C...     SAVE CONTENTS OF ARGSTK IN ITMPSV(1) THRU ITMPSV(99)           MCH20300
C                                                                       MCH20400
      ITMPSV(I)=ARGSTK(I)                                               MCH20500
C                                                                       MCH20600
C...     SCAN ARGSTK AND PLACE THE POSITION NUMBER OF EACH UNIQUE MACRO MCH20700
C...     VARIABLE FOUND IN THE FIRST FREE POSITION OF MACVAR ARRAY.     MCH20800
C                                                                       MCH20900
      DO 2 J=2,NUMARG                                                   MCH21000
      IF(MACSPD(J-1).NE.ARGSTK(I))GO TO 2                               MCH21100
      IF(ITMPSV(J+99).NE.0)GO TO 2                                      MCH21200
      MCSLNT=MCSLNT+1                                                   MCH21300
      IF(MCSLNT.LE.MVARDM)GO TO 17                                      MCH21400
   18 CALL ALARM(32,-I,8,'MATCH   ')                                    MCH21500
      CALL HELP                                                         MCH21600
   17 MACVAR(MCSLNT)=J-1                                                MCH21700
      ITMPSV(J+99)=1                                                    MCH21800
    2 CONTINUE                                                          MCH21900
    3 MACLNT=MCSLNT                                                     MCH22000
C                                                                       MCH22100
C...     CALL EXPRESSIONS REQUIRE NO MAJOR WORD ANALYSIS.               MCH22200
C                                                                       MCH22300
      IF(WAY.EQ.5)GO TO 6                                               MCH22400
C                                                                       MCH22500
C...     ROUTE=CLASS CODE OF MAJOR WORD.                                MCH22600
C...     ROAD=MODE CODE OF MAJOR WORD.                                  MCH22700
C                                                                       MCH22800
      ROUTE = MODULO*(NAMTBL(MAJWRD)/MODULO)                            MCH22900
      ROAD = NAMTBL(MAJWRD)-ROUTE                                       MCH23000
      DO 4 I=2,NUMARG                                                   MCH23100
      IF(MACSPD(I-1).EQ.MAJWRD)GO TO 5                                  MCH23200
    4 CONTINUE                                                          MCH23300
      GO TO 6                                                           MCH23400
C                                                                       MCH23500
C...     STORE POSITION NUMBER OF MACRO VARIABLE MAJOR WORD IN BOTH     MCH23600
C...     MVEXST AND FIRST FREE CELL OF MACVAR ARRAY.                    MCH23700
C                                                                       MCH23800
    5 MVEXST=I-1                                                        MCH23900
C                                                                       MCH24000
C...     IF GEOMETRIC EXPRESSION HAS MACRO VARIABLE MAJOR WORD, THEN    MCH24100
C...     ISSUE DIAGNOSTIC.                                              MCH24200
C                                                                       MCH24300
      IF(NESTG)GO TO 62                                                 MCH24400
      I=100                                                             MCH24500
      IF(MCSLNT.GE.MVARDM)GO TO 18                                      MCH24600
      MACVAR(MCSLNT+1)=MVEXST                                           MCH24700
      MACLNT=MCSLNT+1                                                   MCH24800
C                                                                       MCH24900
C...     RETURN IF NO MACRO VARIABLES INVOLVED IN EXPRESSION.           MCH25000
C                                                                       MCH25100
    6 IF(MACLNT.NE.0)GO TO 8                                            MCH25200
    7 RETURN                                                            MCH25300
C                                                                       MCH25400
C...     EACH CALL IS EXAMINED AND COMPARED TO THE ONES PRECEDING IT TO MCH25500
C...     DETERMINE WHEN AND IF CODE FOR A NEW BRANCH IS REQUIRED.       MCH25600
C...     MCSTRT POINTS TO CURRENT CALL ASSIGNED VALUES IN MACSPD TABLE. MCH25700
C...     MSP POINTS TO LAST ENTRY IN MAS TABLE.                         MCH25800
C                                                                       MCH25900
    8 MCSTRT=0                                                          MCH26000
      MSP=0                                                             MCH26100
    9 MCSTRT=MCSTRT+NUMARG                                              MCH26200
C                                                                       MCH26300
C...     IF CALLS REMAIN TO BE PROCESSED, THEN BRANCH.                  MCH26400
C                                                                       MCH26500
      IF(MCSTRT.LT.MCSPDP)GO TO 10                                      MCH26600
C                                                                       MCH26700
C...     RESET CONTROL PARAMETERS FOR FINAL EXIT FOR THIS EXPRESSION.   MCH26800
C                                                                       MCH26900
      L=NUMARG                                                          MCH27000
      ILHLT=.TRUE.                                                      MCH27100
      ENTRY = .FALSE.                                                   MCH27200
      M1=1                                                              MCH27300
      GO TO 60                                                          MCH27400
   10 TYP=0                                                             MCH27500
      NRMVAL=-1                                                         MCH27600
      SAVMSP=MSP+1                                                      MCH27700
      ARGTOP=ARGARG                                                     MCH27800
C                                                                       MCH27900
C...     MAJOR=CURRENT CALL ASSIGNED VALUE (MACSPD(I)) IF MAJOR WORD IS MCH28000
C...     A MACRO VARIABLE. OTHERWISE MAJOR=MAJOR WORD (MAJWRD).         MCH28100
C                                                                       MCH28200
      MAJOR = MAJWRD                                                    MCH28300
      IF(MVEXST.EQ.0)GO TO 13                                           MCH28400
   11 I = MVEXST + MCSTRT                                               MCH28500
      MAJOR=IABS(MACSPD(I))                                             MCH28600
C                                                                       MCH28700
C...     FOR EACH CALL A MACRO VARIABLE MAJOR WORD HAS EITHER ITS       MCH28800
C...     ASSIGNED VALUE MODE OR NAMTBL POINTER STORED IN MAS ARRAY      MCH28900
C...     DEPENDING UPON EXPRESSION TYPE.                                MCH29000
C                                                                       MCH29100
      GO TO (101,202,202,102),WAY                                       MCH29200
  101 MAS(MSP+1) = MAJOR                                                MCH29300
      GO TO 12                                                          MCH29400
  202 MAS(MSP+1)=NAMTBL(MAJOR)-ROUTE                                    MCH29500
      IF(ENTRY)GO TO 20                                                 MCH29600
      EXTERN=.TRUE.                                                     MCH29700
      M1=1                                                              MCH29800
      GO TO 20                                                          MCH29900
  102 MAS(MSP+1) = NAMTBL(MAJOR)-ROUTE                                  MCH30000
      IF (WAY.EQ.4) GOTO 12                                             MCH30100
C                                                                       MCH30200
C...     IF A POSTPROCESSOR OR GOLFT,GORGT,GOUP,GODOWN,GOFWD,GOBACK     MCH30300
C...     PROCEDURE IS ENCOUNTERED, BRANCHING ON MAJOR WORD UNNECESSARY. MCH30400
C                                                                       MCH30500
   20 IF((MAS(MSP+1).EQ.0).OR.(MAS(MSP+1).EQ.34))MAJOR=MAJWRD           MCH30600
   12 ROAD=MAS(MSP+1)                                                   MCH30700
      MSP=MSP+1                                                         MCH30800
      IF(MSP.LT.MASDM)GO TO 13                                          MCH30900
   16 CALL ALARM(26,0,8,'MATCH   ')                                     MCH31000
      CALL HELP                                                         MCH31100
C                                                                       MCH31200
C...     IF NO ELEMENTS OF ARGSTK ARE MACRO VARIABLES, THEN BRANCH.     MCH31300
C                                                                       MCH31400
   13 IF((ARGTOP.EQ.0).OR.(WAY.EQ.3))GO TO 51                           MCH31500
C                                                                       MCH31600
C...     RESTORE CONTENTS OF ARGSTK WHICH MIGHT HAVE BEEN ALTERED IN    MCH31700
C...     GENERATING BRANCHING CODE FOR PRIOR CALLS.                     MCH31800
C                                                                       MCH31900
      DO 14 I=1,ARGTOP                                                  MCH32000
   14 ARGSTK(I)=ITMPSV(I)                                               MCH32100
      IF(MCSLNT.EQ.0)GO TO 51                                           MCH32200
C                                                                       MCH32300
C...     ESTABLISH 'STATE' OF EACH INVOLVED MACRO VARIABLE FOR THIS CALLMCH32400
C                                                                       MCH32500
      DO 50 I=1,MCSLNT                                                  MCH32600
      J=MACVAR(I)+MCSTRT                                                MCH32700
C                                                                       MCH32800
C...     PICK UP ASSIGNED VALUE POINTER.                                MCH32900
C                                                                       MCH33000
      K=IABS(MACSPD(J))                                                 MCH33100
C                                                                       MCH33200
C...     NRMVAL=1 IF AT LEAST ONE NON-NORMAL VALUE USED.                MCH33300
C                                                                       MCH33400
      IF(MACSPD(J).GE.0)NRMVAL=1                                        MCH33500
C                                                                       MCH33600
C...     ASSIGN INITIAL 'STATE' OF MACRO VARIABLE.                      MCH33700
C                                                                       MCH33800
      MAS(MSP+1)=MODE(K)                                                MCH33900
C                                                                       MCH34000
C...     M=CLASS OF ASSIGNED VALUE.                                     MCH34100
C                                                                       MCH34200
      IF (K.LE.NAMMAX) GOTO 1100                                        MCH34300
      M = NUMBER(1)                                                     MCH34400
      GOTO 1110                                                         MCH34500
 1100 M = MODULO*(NAMTBL(K)/MODULO)                                     MCH34600
      L = NAMTBL(K)-M                                                   MCH34700
C                                                                       MCH34800
C...     WAY=1 FOR GEOM, WAY=2 FOR PROC, WAY=3 FOR FUNC, WAY=4 FOR REPL,MCH34900
C...     WAY=5 FOR CALL.                                                MCH35000
C                                                                       MCH35100
 1110 GOTO (41,15,50,71,43),WAY                                         MCH35200
   71 IF (MAS(MSP+1) .EQ. 0) GO TO 22                                   MCH35300
      IF (MAS(MSP+1) .EQ. ROAD) GO TO 50                                MCH35400
      GO TO 22                                                          MCH35500
   15 IF (ROAD.EQ.0) GOTO 50                                            MCH35600
      IF (ROAD.LT.22) GOTO 22                                           MCH35700
      IF (ROAD - 41) 26,25,22                                           MCH35800
   26 IF (ROAD-24) 24,21,44                                             MCH35900
   21 IF((M.NE.LABEL(1)).AND.(M.NE.IMPLAB(1)))GO TO 22                  MCH36000
   23 IF (L.NE.WHCHMN) GOTO 22                                          MCH36100
      MAS(MSP+1)=200                                                    MCH36200
      GO TO 50                                                          MCH36300
   25 IF((MAS(MSP+1).EQ.0).OR.(MAS(MSP+1).GT.17))GO TO 22               MCH36400
   38 MAS(MSP+1) = 50                                                   MCH36500
      GO TO 50                                                          MCH36600
   24 IF (ROAD .EQ. 23) GO TO 47                                        MCH36700
      IF (MAS(MSP+1) .NE. 21) GO TO 22                                  MCH36800
      GO TO 50                                                          MCH36900
   47 IF (MAS(MSP+1) .NE. 2) GO TO 22                                   MCH37000
      GO TO 50                                                          MCH37100
   44 IF(MAS(MSP+1).EQ.21)GO TO 50                                      MCH37200
      IF(ROAD-34)27,29,30                                               MCH37300
   27 IF (ROAD .EQ. 25) GO TO 36                                        MCH37400
C                                                                       MCH37500
C...     INVALID 'STATE'. A SINGLE BRANCH FOR ALL SUCH CALLS.           MCH37600
C                                                                       MCH37700
   22 TYP=1                                                             MCH37800
      GO TO 50                                                          MCH37900
   36 IF(M.NE.PERMID(1))GO TO 25                                        MCH38000
      GO TO 42                                                          MCH38100
   29 IF(MAS(MSP+1).NE.0)GO TO 25                                       MCH38200
      IF (M .NE. PERMID(1)) GO TO 21                                    MCH38300
      IF (L.EQ.5) L=3                                                   MCH38400
      GO TO 42                                                          MCH38500
   30 IF(ROAD-37)31,33,32                                               MCH38600
   31 IF(MAS(MSP+1).EQ.19)GO TO 50                                      MCH38700
      GO TO 22                                                          MCH38800
   32 IF (ROAD-39) 33,46,39                                             MCH38900
   33 IF(MAS(MSP+1).EQ.20)GO TO 50                                      MCH39000
      GO TO 46                                                          MCH39100
   39 IF(MAS(MSP+1).EQ.19)GO TO 50                                      MCH39200
      GO TO 46                                                          MCH39300
   41 IF(MAS(MSP+1).NE.0)GO TO 50                                       MCH39400
   46 IF (M .NE. PERMID(1)) GO TO 22                                    MCH39500
   42 IF (L.EQ.0) GOTO 22                                               MCH39600
      MAS(MSP+1) = L+100                                                MCH39700
      GO TO 50                                                          MCH39800
   43 MAS(MSP+1)=K                                                      MCH39900
   50 MSP=MSP+1                                                         MCH40000
      IF(MSP.GE.MASDM)GO TO 16                                          MCH40100
C                                                                       MCH40200
C...     BRANCH IF NO INVALID 'STATES' ENCOUNTERED.                     MCH40300
C                                                                       MCH40400
      IF(TYP.EQ.0)GO TO 51                                              MCH40500
C                                                                       MCH40600
C...     SET ALL 'STATES' = 0 FOR THIS CALL.                            MCH40700
C                                                                       MCH40800
   61 DO 45 I=SAVMSP,MSP                                                MCH40900
   45 MAS(I)=0                                                          MCH41000
   51 J=MACVAR(MACLNT)+MCSTRT                                           MCH41100
      IF(MACSPD(J).GE.0) NRMVAL=1                                       MCH41200
      IF(MSP.NE.MACLNT)GO TO 98                                         MCH41300
C                                                                       MCH41400
C...     THIS PATH FOLLOWED FOR 1ST CALL SINCE NO COMPARISON CAN YET BE MCH41500
C...     MADE TO DETERMINE IF BRANCHING IS NECESSARY.                   MCH41600
C                                                                       MCH41700
      NRMSAV=NRMVAL                                                     MCH41800
      MAJSAV=MAJOR                                                      MCH41900
      IF (.NOT.EXTERN) GO TO 9                                          MCH42000
      EXTERN=.FALSE.                                                    MCH42100
      GO TO 105                                                         MCH42200
   98 K1=K1+NUMARG                                                      MCH42300
      L=MSP-MACLNT                                                      MCH42400
      K=L+1                                                             MCH42500
C                                                                       MCH42600
C...     COMPARE 'STATES' FOR THIS CALL WITH 'STATES' FOR EACH CALL THATMCH42700
C...     INITIATED A NEW BRANCH. UPON COMPLETION OF A CALL COMPARISON   MCH42800
C...     M1=0 IF SAME AS SOME PREVIOUS CALL. OTHERWISE BRANCH (M1=1).   MCH42900
C                                                                       MCH43000
      DO 53 I=1,L,MACLNT                                                MCH43100
      M1 = 0                                                            MCH43200
      DO 52 J=K,MSP                                                     MCH43300
      N=I+J-K                                                           MCH43400
   52 IF (MAS(J) .NE. MAS(N)) M1 = 1                                    MCH43500
      IF (M1 .EQ. 0) GO TO 59                                           MCH43600
   53 CONTINUE                                                          MCH43700
C                                                                       MCH43800
C...     ENTRY=.FALSE. IF 1ST BRANCH ENCOUNTERED FOR THIS EXPRESSION.   MCH43900
C                                                                       MCH44000
      IF(ENTRY)GO TO 56                                                 MCH44100
C                                                                       MCH44200
C...     MAXSPS KEEPS TRACK OF NUMBER OF ACTUAL BRANCHING EXPRESSIONS INMCH44300
C...     MACRO.                                                         MCH44400
C                                                                       MCH44500
  105 MAXSPS=MAXSPS+1                                                   MCH44600
C                                                                       MCH44700
C...     EVERY POTENTIAL BRANCHING SITUATION HAS A NUMBER ASSOCIATED    MCH44800
C...     WITH IT (NMLINE INCREMENTED EACH TIME). THOSE ACTUAL BRANCHING MCH44900
C...     EXPRESSIONS HAVE CURRENT VALUE OF NMLINE STORED IN LINUSD ARRAYMCH45000
C                                                                       MCH45100
      LNUSDP=LNUSDP+1                                                   MCH45200
      IF(LNUSDP.LE.LNSDDM)GO TO 54                                      MCH45300
      CALL ALARM(20,0,8,'MATCH   ')                                     MCH45400
      CALL HELP                                                         MCH45500
   54 LINUSD(LNUSDP)=NMLINE                                             MCH45600
C                                                                       MCH45700
C...     NEGATIVE OF BRANCHING EXPRESSION NUMBER STORED IN MACSPD TABLE.MCH45800
C                                                                       MCH45900
      MACSPD(MACTOP+1)=-NMLINE                                          MCH46000
      ILHLT=.FALSE.                                                     MCH46100
      NRMVAL=NRMSAV                                                     MCH46200
      MAJOR=MAJSAV                                                      MCH46300
      K1=2*NUMARG                                                       MCH46400
      MCSTRT=NUMARG                                                     MCH46500
      MSP=MACLNT                                                        MCH46600
      IF(MSP.GE.MASDM)GO TO 16                                          MCH46700
      ENTRY=.TRUE.                                                      MCH46800
      MACTOP=MACTOP+1                                                   MCH46900
C                                                                       MCH47000
C...     MCTOPP IS POINTER TO EXPRESSION NUMBER IN MACSPD TABLE.        MCH47100
C                                                                       MCH47200
      MCTOPP=MACTOP                                                     MCH47300
      IF(MACTOP.LT.MSPDDM)GO TO 56                                      MCH47400
   55 CALL ALARM(31,0,8,'MATCH   ')                                     MCH47500
      CALL HELP                                                         MCH47600
   56 LBRCH=LBRCH+1                                                     MCH47700
      CALL MACLBL(+2,-LBRCH,N)                                          MCH47800
      NAMTBL(N)=LABEL(1)                                                MCH47900
C                                                                       MCH48000
C...     GENERATE BRANCH LABEL COMMAND.                                 MCH48100
C                                                                       MCH48200
      CALL LABELZ(N)                                                    MCH48300
      M=MACTOP                                                          MCH48400
      MACTOP=MACTOP+BITWDS+1                                            MCH48500
      IF(MACTOP.GE.MSPDDM)GO TO 55                                      MCH48600
C                                                                       MCH48700
C...     STORE THE LATEST BRANCH LABEL IN THE BRANCHING HISTORY PORTION MCH48800
C...     OF THE MACSPD TABLE. IF THIS BRANCH ONLY EMPLOYS NORMAL VALUES MCH48900
C        (NRMVAL=-1), THEN STORE THE NEGATIVE OF THE LABEL POINTER.     MCH49000
C                                                                       MCH49100
      MACSPD(MACTOP)=NRMVAL*N                                           MCH49200
   57 J=(MACSPD(K1)-1)/NUMBIT                                           MCH49300
      N=MACSPD(K1)-NUMBIT*J                                             MCH49400
      K=M+J+1                                                           MCH49500
C                                                                       MCH49600
C...     SET THE NTH CALL QUALITY FOR THE APPROPRIATE BRANCH.           MCH49700
C                                                                       MCH49800
      CALL SETBIT(MACSPD(K),N)                                          MCH49900
      L=MCSTRT                                                          MCH50000
C                                                                       MCH50100
C...     UPDATE THE CLASS AND MODE FOR EACH MACRO VARIABLE TO CORRESPONDMCH50200
C...     TO THE ASSIGNED VALUES FOR THE CURRENT CALL.                   MCH50300
C                                                                       MCH50400
   60 DO 58 I=2,NUMARG                                                  MCH50500
      J=MACSPD(I-1)                                                     MCH50600
      K=IABS(MACSPD(L+1))                                               MCH50700
      NAMTBL(J) = NUMBER(1)+MODHLF                                      MCH50800
      IF(K.GT.NAMMAX)GO TO 58                                           MCH50900
      KK=NAMTBL(K)                                                      MCH51000
      IF(KK-MODULO*(KK/MODULO).LT.MODHLF)KK=KK+MODHLF                   MCH51100
      NAMTBL(J)=KK                                                      MCH51200
   58 L=L+1                                                             MCH51300
      IF (M1 .EQ. 0) GO TO 9                                            MCH51400
      GO TO 7                                                           MCH51500
   59 MSP=MSP-MACLNT                                                    MCH51600
      IF(.NOT.ENTRY)GO TO 9                                             MCH51700
C                                                                       MCH51800
C...     COMPUTE POSITION IN MACSPD TABLE FOR BRANCH ASSOCIATED WITH    MCH51900
C...     THIS CALL.                                                     MCH52000
C                                                                       MCH52100
      M = MCTOPP+((I-1)/MACLNT)*(BITWDS+1)                              MCH52200
      GO TO 57                                                          MCH52300
C                                                                       MCH52400
C...     GENERATE RETURN TERMINATOR FOR BRANCH CODE.                    MCH52500
C                                                                       MCH52600
   99 CALL RETMCX(2)                                                    MCH52700
      GO TO 9                                                           MCH52800
C                                                                       MCH52900
C...     1015 - SURFACE TYPE CHANGED IN NESTED GEOMETRIC DEFINITION     MCH53000
C                                                                       MCH53100
   62 CALL ALARM(1015,ERGSTK(100),8,'MATCH   ')                         MCH53200
      GO TO 7                                                           MCH53300
       END                                                              MCH53400
**** SOURCE FILE : M0006654.V06   ***
*
C                                                                       MCX00100
C              FORTRAN SUBROUTINE MCXTRN                                MCX00200
C                                                                       MCX00300
C LINKAGE      SUBROUTINE MCXTRN(IBR,INDEX,INFO)                        MCX00400
C                                                                       MCX00500
C          SUBSIDIARIES                  CALLED BY                      MCX00600
C          TYPE          ENTRY           TYPE          ENTRY            MCX00700
C          SUBROUTINE    HELP            SUBROUTINE    ALARM            MCX00800
C          SUBROUTINE    ALARM           SUBROUTINE    IEPLOG           MCX00900
C          SUBROUTINE    AREAD           SUBROUTINE    INPAT            MCX01000
C          SUBROUTINE    AWRITE          SUBROUTINE    INPUT            MCX01100
C          SUBROUTINE    TAPOP           SUBROUTINE    MACREC           MCX01200
C          SUBROUTINE    CHREAD          SUBROUTINE    MOTION           MCX01300
C          SUBROUTINE    CHWRIT          INTEGER FCT.  NUMB             MCX01400
C                                        SUBROUTINE    OPPAIR           MCX01500
C                                        SUBROUTINE    PRO026           MCX01600
C                                        SUBROUTINE    PRO027           MCX01700
C                                        SUBROUTINE    RECOG            MCX01800
C                                        SUBROUTINE    RESERV           MCX01900
C                                        SUBROUTINE    RESRED           MCX02000
C                                                                       MCX02100
      SUBROUTINE MCXTRN(IBR,INDEX,INFO)                                 MCX02200
C                                                                       MCX02300
      IMPLICIT INTEGER (A-Z)                                            MCX02400
C                                                                       MCX02500
C                                                                       MCX02600
C        1.    NAME TABLE AND TABLE LIMITS                              MCX02700
C                                                                       MCX02800
      INCLUDE 'NAMETB.INC'                                              MCX02910
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                MCX02950
C CNAMTB:      NAME TABLE OR DICTIONARY                                 MCX03050
C NUMBST:      NAMTBL INDEX OF BEGINNING OF NUMBER SECTION              MCX03100
C                                                                       MCX03500
C       14.    I. L. LIST OPTION FLAGS                                  MCX03600
C                                                                       MCX03700
      COMMON/PRT/PRT                                                    MCX03800
      LOGICAL ASSEMB                                                    MCX03900
      DIMENSION PRT(7)                                                  MCX04000
C ASSEMB:      SET TRUE INDICATES ASSEMBLY APPROACH (CONTRL/ASMBLE)     MCX04100
      EQUIVALENCE (ASSEMB,PRT(4))                                       MCX04200
C                                                                       MCX04300
C       22.    MACRO PROCESSING VARIABLES                               MCX04400
C                                                                       MCX04500
      COMMON/MACXX1/MACXX1                                              MCX04600
      DIMENSION MACXX1(71)                                              MCX04700
C MBPTR:       POINTER TO LAST MBREC ENTRY                              MCX04800
      EQUIVALENCE (MBPTR,MACXX1(30))                                    MCX04900
C                                                                       MCX05000
C       23.    MACRO PROCESSING ARRAYS                                  MCX05100
C                                                                       MCX05200
      COMMON/MACXX2/MACXX2                                              MCX05300
      DIMENSION MACXX2(902),MBUFF(350,2),MACRTB(200),MBREC(2)           MCX05400
C MBREC:       IDENTIFIES THE RECORDS(350 WORD BLK) CURRENTLY IN MBUFF  MCX05500
      EQUIVALENCE (MBREC(1),MACXX2(1))                                  MCX05600
C BUFF:        BUFFER ARRAY IN ORDER TO READ OR WRITE ON EXTERNAL FILE  MCX05700
      EQUIVALENCE(MBUFF(1,1),MACXX2( 3))                                MCX05800
C MACRTB:      BUFFER ARRAY OF THE EXTERNAL FILE                        MCX05900
      EQUIVALENCE (MACRTB(1),MACXX2(703))                               MCX06000
C                                                                       MCX06100
C       33.    SYMBOLIC FILE DEFINITIONS                                MCX06200
C                                                                       MCX06300
      INCLUDE 'SYMFIL.INC'                                              MCX06410
C MACTXT:          EXTERNAL FILE  OF MACRO TEXT                         MCX06600
C XNUM  :          OVERFLOW NUMBER TABLE                                MCX06800
C                                                                       MCX07000
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          MCX07100
C                                                                       MCX07200
      COMMON/NTBL/NTBL                                                  MCX07300
      DIMENSION NTBL(6)                                                 MCX07400
C NMOD:        NUMBER OF ENTRIES PERMITTED IN INTERNAL NUMBER TABLE     MCX07500
      EQUIVALENCE (NMOD,NTBL(1))                                        MCX07600
C NCRNT:       ACTUAL NUMBER TABLE BLOCK - INITIALLY 1                  MCX07700
      EQUIVALENCE (NCRNT,NTBL(2))                                       MCX07800
C NNDX:        CONVERSION BETWEEN ABS. AND VIRTUAL NUMBER TABLE POINTER MCX07900
      EQUIVALENCE (NNDX,NTBL(3))                                        MCX08000
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE MCX08100
      EQUIVALENCE (NLAST,NTBL(4))                                       MCX08200
C*                                                                      MCX08300
C ARGUMENTS    IBR     SET TO 1 FOR STORE, 2 FOR RETRIEVE               MCX08400
C              INDEX   POINTER TO REFERENCED MACRO TEXT WORD            MCX08500
C              INFO    DATA TO BE STORED OR RETRIEVED                   MCX08600
C**                                                                     MCX08700
      IF(IBR.GT.2)GO TO 500                                             MCX08800
C                                                                       MCX08900
C...     DETERMINE RECORD NUMBER AND WORD NUMBER                        MCX09000
C                                                                       MCX09100
      ITMP = (INDEX-1)/350                                              MCX09200
      IREC = ITMP + 1                                                   MCX09300
      IF (IREC.LT.200) GO TO 10                                         MCX09400
      CALL ALARM(35,0,8,'MCXTRN  ')                                     MCX09500
      CALL HELP                                                         MCX09600
   10 IWRD = INDEX-350*ITMP                                             MCX09700
C...  IS THIS RECORD IN THE BUFFERS                                     MCX09800
      IF (IREC.EQ.MBREC(MBPTR)) GO TO 100                               MCX09900
      MBPTR = 3-MBPTR                                                   MCX10000
      IF(IREC.EQ.MBREC(MBPTR)) GO TO 100                                MCX10100
C...  WRITE OLD BUFFER TO EXTERNAL FILE                                 MCX10200
      I = MBREC(MBPTR)                                                  MCX10300
      IF(MACRTB(I).NE.0) GO TO 20                                       MCX10400
      NREC = 0                                                          MCX10500
      CALL AWRITE(MACTXT,NREC,MBUFF(1,MBPTR),350,IRET)                  MCX10600
      MACRTB(I)=NREC                                                    MCX10700
C...  RECORD INDICATOR INDICATES NEW RECORD NUMBER                      MCX10800
   20 MBREC(MBPTR) = IREC                                               MCX10900
      IF(MACRTB(IREC).GT.0) GO TO 30                                    MCX11000
      IF(IBR.EQ.2) CALL ALARM(35,0,8,'MCXTRN  ')                        MCX11100
      GO TO 100                                                         MCX11200
C...  READ IN RECORD                                                    MCX11300
   30 CALL AREAD (MACTXT,MACRTB(IREC),MBUFF(1,MBPTR),350,IRET)          MCX11400
  100 IF(IBR.EQ.2) GO TO 200                                            MCX11500
C...  STORE INFO                                                        MCX11600
      MBUFF(IWRD,MBPTR)=INFO                                            MCX11700
      IF(MACRTB(IREC).NE.0) MACRTB(IREC) = 0                            MCX11800
      GO TO 400                                                         MCX11900
C...  READ INFO                                                         MCX12000
  200 INFO=MBUFF(IWRD,MBPTR)                                            MCX12100
      GO TO 400                                                         MCX12200
C                                                                       MCX12300
C                                                                       MCX12400
C...     NUMBER TABLE OVERFLOW PROCESSING                               MCX12500
C                                                                       MCX12600
  500 IBRTMP = IBR-2                                                    MCX12700
      GO TO (530,540,550,560),IBRTMP                                    MCX12800
C                                                                       MCX12900
C...  WRITE FIRST PART OF TABLE                                         MCX13000
C                                                                       MCX13100
  530 L=(NMOD*12)/2                                                     MCX13200
      J=0                                                               MCX13300
C... 4TH ARGUMENT OF CHWRIT IS NUMBER OF BYTES                          MCX13310
      CALL CHWRIT(XNUM,J,CNUMTB(NUMBST),L,IRET)                         MCX13400
      NLAST = NLAST+1                                                   MCX13500
      NNDX = NNDX +(NMOD/2)                                             MCX13600
      L = NUMBST + (NMOD/2) - 1                                         MCX13700
      DO 544 I=NUMBST,L                                                 MCX13800
      CNUMTB(I) = ' '                                                   MCX13900
  544 CONTINUE                                                          MCX14000
      GO TO 400                                                         MCX14100
C                                                                       MCX14200
C.... WRITE SECOND PART OF TABLE                                        MCX14300
C                                                                       MCX14400
  540 IF(ASSEMB) GO TO 805                                              MCX14500
      J=0                                                               MCX14600
      I=NUMBST + (NMOD/2)                                               MCX14700
      L = (NMOD*12)/2                                                   MCX14800
C... 4TH ARGUMENT OF CHWRIT IS NUMBER OF BYTES                          MCX14810
      CALL CHWRIT(XNUM,J,CNUMTB(I),L,IRET)                              MCX14900
      NLAST = NLAST+1                                                   MCX15000
      NNDX = NNDX + (NMOD/2)                                            MCX15100
      NCRNT = 2                                                         MCX15200
      GO TO 400                                                         MCX15300
C                                                                       MCX15400
C.... READ IN BLOCK CONTAINING INDEX                                    MCX15500
C                                                                       MCX15600
  550 L = NMOD/2                                                        MCX15700
      IF (INDEX.LT.NUMBST) GO TO 400                                    MCX15800
      ITMP=(INDEX-NUMBST)/L                                             MCX15900
      INDEX = INDEX - ITMP*L                                            MCX16000
      IF(ITMP.EQ.NLAST) GO TO 400                                       MCX16100
      INDEX = INDEX + L                                                 MCX16200
      IF(ITMP+1.EQ.NCRNT) GO TO 400                                     MCX16300
      NREC = ITMP + 1                                                   MCX16400
      I = NUMBST + L                                                    MCX16500
      L = L*12                                                          MCX16600
C... 4TH ARGUMENT OF CHREAD IS NUMBER OF BYTES                          MCX16610
      CALL AREAD (XNUM,NREC,CNUMTB(I),L,IRET)                           MCX16700
      NCRNT = NREC                                                      MCX16800
      GO TO 400                                                         MCX16900
C                                                                       MCX17000
C                                                                       MCX17100
C.... WRITE OUT FINAL RECORD                                            MCX17200
C                                                                       MCX17300
  560 CALL TAPOP (XNUM,-2)                                              MCX17400
  400 RETURN                                                            MCX17500
  805 CALL ALARM(36,0,8,'MCXTRN  ')                                     MCX17600
      CALL HELP                                                         MCX17700
      RETURN                                                            MCX17800
      END                                                               MCX17900
**** SOURCE FILE : M0006655.V04   ***
*
C                                                                       MNP00100
C              FORTRAN SUBROUTINE MNPROC                                MNP00200
C                                                                       MNP00300
C LINKAGE      SUBROUTINE MNPROC                                        MNP00400
C                                                                       MNP00500
C          SUBSIDIARIES                  CALLED BY                      MNP00600
C          TYPE          ENTRY           TYPE          ENTRY            MNP00700
C          SUBROUTINE    HELP            SUBROUTINE    MACREC           MNP00800
C          SUBROUTINE    ALARM           SUBROUTINE    PRO026           MNP00900
C          SUBROUTINE    ONEARG                                         MNP01000
C          SUBROUTINE    OPCODE                                         MNP01100
C          SUBROUTINE    MACLBL                                         MNP01200
C          SUBROUTINE    RLSLIN                                         MNP01300
C                                                                       MNP01400
      SUBROUTINE MNPROC                                                 MNP01500
C                                                                       MNP01600
      IMPLICIT INTEGER (A-Z)                                            MNP01700
C                                                                       MNP01800
C        1.    NAME TABLE AND TABLE LIMITS                              MNP01900
C                                                                       MNP02000
      INCLUDE 'NAMETB.INC'                                              MNP02110
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                MNP02150
C CNAMTB:      NAME TABLE OR DICTIONARY                                 MNP02250
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     MNP02300
C                                                                       MNP03400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      MNP03500
C                                                                       MNP03600
      COMMON/CODE/CODE                                                  MNP03700
      DIMENSION CODE(150),NUMBER(2),LABEL(2),MACVBL(2)                  MNP03800
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        MNP03900
      EQUIVALENCE (NUMBER(1),CODE(27))                                  MNP04000
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        MNP04100
      EQUIVALENCE (LABEL(1),CODE(43))                                   MNP04200
C MACVBL:      (1)=CODE CLASS 36000,(2)=NAMTBL INDEX OF 'MACVBL'        MNP04300
      EQUIVALENCE (MACVBL(1),CODE(71))                                  MNP04400
C                                                                       MNP04500
C       11.    SEQUENCE NUMBER STORAGE                                  MNP04600
C                                                                       MNP04700
      COMMON/SEQCOM/SEQCOM                                              MNP04800
      DIMENSION SEQCOM(3)                                               MNP04900
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    MNP05000
      EQUIVALENCE (SEQNO,SEQCOM(1))                                     MNP05100
C                                                                       MNP05200
C       16.    LITERALS FOR I. L. OPERATION CODES                       MNP05300
C                                                                       MNP05400
      COMMON/IL/IL                                                      MNP05500
      DIMENSION IL(21)                                                  MNP05600
C ENTRYX:      CONTAINS COMMAND CODE ( 7) FOR ENTRY COMMAND             MNP05700
      EQUIVALENCE (ENTRYX,IL(7))                                        MNP05800
C                                                                       MNP05900
C       22.    MACRO PROCESSING VARIABLES                               MNP06000
C                                                                       MNP06100
      COMMON/MACXX1/MACXX1                                              MNP06200
      LOGICAL ILHLT,FINMAC,ENTRY,MACEND                                 MNP06300
      DIMENSION MACXX1(71)                                              MNP06400
C MACDFP:      POINTER TO LAST ENTRY IN MACDF1 AND MACDF2 ARRAYS        MNP06500
      EQUIVALENCE (MACDFP,MACXX1(1))                                    MNP06600
C MCHSTP:      POINTER TO LAST MACHST ENTRY                             MNP06700
      EQUIVALENCE (MCHSTP,MACXX1(3))                                    MNP06800
C MCSAVP:      PRESENT NEST LEVEL DURING MACRO PROCESSING               MNP06900
      EQUIVALENCE (MCSAVP,MACXX1(5))                                    MNP07000
C MNMVBP:      POINTER TO LAST MNMVB AND MNMVC TABLE ENTRY              MNP07100
      EQUIVALENCE (MNMVBP,MACXX1(6))                                    MNP07200
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              MNP07300
      EQUIVALENCE (ILHLT,MACXX1(14))                                    MNP07400
C TEXTST:      POINTER TO MCBUFF OF MACRO TEXT WORD BEING PROCESSED     MNP07500
      EQUIVALENCE (TEXTST,MACXX1(15))                                   MNP07600
C MAXSPS:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            MNP07700
      EQUIVALENCE (MAXSPS,MACXX1(21))                                   MNP07800
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING            MNP07900
      EQUIVALENCE (FINMAC,MACXX1(24))                                   MNP08000
C NMLINE:      EQUALS NUMBER OF EXPRESSIONS THAT REQUIRE BRANCHING I.L. MNP08100
      EQUIVALENCE (NMLINE,MACXX1(25))                                   MNP08200
C NUMCAL:      CONTAINS NUMBER OF CALLS FOR CURRENT MACRO               MNP08300
      EQUIVALENCE (NUMCAL,MACXX1(28))                                   MNP08400
C BITWDS:      NUMBER OF WORDS NEEDED FOR ALL CALL QUALITIES OF MACRO   MNP08500
      EQUIVALENCE (BITWDS,MACXX1(29))                                   MNP08600
C NUMBIT:      CONTAINS NUMBER OF BITS IN A FIXED POINT WORD            MNP08700
      EQUIVALENCE (NUMBIT,MACXX1(56))                                   MNP08800
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION     MNP08900
      EQUIVALENCE (ENTRY,MACXX1(40))                                    MNP09000
C MACTOP:      POINTER TO EXPRESSION NUMBER IN MACSPD TABLE             MNP09100
      EQUIVALENCE (MACTOP,MACXX1(42))                                   MNP09200
C LNUSDP:      INDEX OF LAST LINUSD ENTRY                               MNP09300
      EQUIVALENCE (LNUSDP,MACXX1(51))                                   MNP09400
C MCSPDP:      POINTER TO LAST ENTRY IN MACSPD TABLE                    MNP09500
      EQUIVALENCE (MCSPDP,MACXX1(57))                                   MNP09600
C MCSRCH:      AT FINAL MACRO PRECESSING MACDF1 POINTER                 MNP09700
      EQUIVALENCE (MCSRCH,MACXX1(59))                                   MNP09800
C MACFND:      1 IF NO MACRO OF CURRENT LEVEL ENCOUNTERED. OTHERWISE 0  MNP09900
      EQUIVALENCE (MACFND,MACXX1(60))                                   MNP10000
C NUMARG:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            MNP10100
      EQUIVALENCE (NUMARG,MACXX1(61))                                   MNP10200
C MACEND:      TRUE WHEN ALL MACRO PROCESSING IS FINISHED               MNP10300
      EQUIVALENCE (MACEND,MACXX1(62))                                   MNP10400
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED         MNP10500
      EQUIVALENCE (WHCHMN,MACXX1(63))                                   MNP10600
C LARGMV:      KEEPS TRACK OF LARGEST NUMBER OF MACRO VARIABLES         MNP10700
      EQUIVALENCE (LARGMV,MACXX1(64))                                   MNP10800
C MSPDDM:      CONTAINS DIMENSION OF THE ARRAY MACSPD                   MNP10900
      EQUIVALENCE (MSPDDM,MACXX1(65))                                   MNP11000
C PATHLN:      CURRENT ACTUAL BRANCHING EXPRESSION. INITIALLY=NUMARG    MNP11100
      EQUIVALENCE (PATHLN,MACXX1(68))                                   MNP11200
C NXTLN:       POINTER TO NEXT LINUSD POSITION TO BE EXAMINED           MNP11300
      EQUIVALENCE (NXTLN,MACXX1(69))                                    MNP11400
C PATHCH:      CURRENT ACTUAL BRANCHING EXPRESSION. INITIALLY=NUMARG    MNP11500
      EQUIVALENCE (PATHCH,MACXX1(71))                                   MNP11600
C                                                                       MNP11700
C       24.    MACRO PROCESSING ARRAYS                                  MNP11800
C                                                                       MNP11900
      COMMON/MACXX3/MACXX3                                              MNP12000
      DIMENSION MACXX3(1430),MACDF1(400),MACDF2(400),MACHST(600)        MNP12100
C MACDF1:      STORES MACRO NAME AND ALL MACRO VBL NAMTBL POINTERS      MNP12200
      EQUIVALENCE (MACDF1(1),MACXX3(1))                                 MNP12300
C MACDF2:      STORES NORMAL VALUES FOR ALL MACRO VARIABLES             MNP12400
      EQUIVALENCE (MACDF2(1),MACXX3(401))                               MNP12500
C MACHST:      MACRO CALL HISTORY TABLE                                 MNP12600
      EQUIVALENCE (MACHST(1),MACXX3(801))                               MNP12700
C                                                                       MNP12800
C       25.    MACRO PROCESSING ARRAYS                                  MNP12900
C                                                                       MNP13000
      COMMON/MACXX4/MACXX4                                              MNP13100
      DIMENSION MACXX4(100),MNMVB(25),MNMVC(25),MACSEQ(50)              MNP13200
C MNMVB:       INDICATES MACROS IN WHICH ARE ASSIGNED VALUES            MNP13300
      EQUIVALENCE (MNMVB(1),MACXX4(1))                                  MNP13400
C MNMVC:       CALLED MACRO FOR WHICH CORRESPONDING MNMVB ENTRY IS MADE MNP13500
      EQUIVALENCE (MNMVC(1),MACXX4(26))                                 MNP13600
C MACSEQ:      PRESERVES INITIAL SEQUENCE NUMBERS OF THE MACROS         MNP13700
      EQUIVALENCE (MACSEQ(1),MACXX4(51))                                MNP13800
C                                                                       MNP13900
C      26A.    MACRO PROCESSING ARRAYS                                  MNP14000
C                                                                       MNP14100
      COMMON/MACXX6/MACXX6                                              MNP14200
      DIMENSION MACXX6(1300),MACSPD(1300)                               MNP14300
C MACSPD:      NAMTBL POINTERS OF THE ASSIGNED VALUES FOR MACRO CALL    MNP14400
      EQUIVALENCE (MACSPD(1),MACXX6(1))                                 MNP14500
C                                                                       MNP14600
C       29.    CLASS CODE MODULI                                        MNP14700
C                                                                       MNP14800
      COMMON/MODULI/MODULI                                              MNP14900
      DIMENSION MODULI(2)                                               MNP15000
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    MNP15100
      EQUIVALENCE (MODULO,MODULI(1))                                    MNP15200
C MODHLF:      NORMAL MODE CODE LIMIT 500                               MNP15300
      EQUIVALENCE (MODHLF,MODULI(2))                                    MNP15400
C                                                                       MNP15500
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          MNP15600
C                                                                       MNP15700
      COMMON/NTBL/NTBL                                                  MNP15800
      DIMENSION NTBL(6)                                                 MNP15900
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE MNP16000
      EQUIVALENCE (NLAST,NTBL(4))                                       MNP16100
C                                                                       MNP16110
C..... LOCAL ARRAY TO KEEP TRACK OF ASSIGNED VARIABLES TO AVOID         MNP16120
C      CORRUPTING NAME AND NUMBER TABLES                                MNP16130
       DIMENSION IASV(6000)                                             MNP16140
C**                                                                     MNP16200
C...     LARGMV KEEPS COUNT OF NUMBER OF MACRO VARIABLES AND LINKAGE    MNP16300
C...     CELLS NEEDED FOR ALL MACROS OF CURRENT LEVEL.                  MNP16400
C                                                                       MNP16500
      IF(MAXSPS.GT.LARGMV)LARGMV=MAXSPS                                 MNP16600
C                                                                       MNP16700
C...     BRANCH IF NOT FIRST MACRO TO UNDERGO FINAL PROCESSING.         MNP16800
C                                                                       MNP16900
      IF(MCSRCH.NE.0)GO TO 35                                           MNP17000
      MCSAVP = 1                                                        MNP17100
   71 MCSRCH=1                                                          MNP17200
C                                                                       MNP17300
C...     BRANCH IF ALL MACROS OF CURRENT LEVEL HAVE BEEN PROCESSED.     MNP17400
C                                                                       MNP17500
    1 IF(MCSRCH.GT.MACDFP)GO TO 65                                      MNP17600
      MCSPDP=0                                                          MNP17700
C                                                                       MNP17800
C...       SKIP IF MACRO WAS NOT CALLED                                 MNP17900
C                                                                       MNP18000
      IF(MACDF2(MCSRCH+2).EQ.0)GO TO 35                                 MNP18100
C                                                                       MNP18200
C...     CHECK IF MACRO BEING EXAMINED IS OF CURRENT LEVEL.             MNP18300
C...     = NEGATIVE - MACRO ALREADY PROCESSED.                          MNP18400
C...     = ZERO     - PROCESS IT.                                       MNP18500
C...     = PLUS     - NOT READY TO PROCESS THIS MACRO.                  MNP18600
C                                                                       MNP18700
    2 IF(MACDF2(MCSRCH)-MCSAVP)35,7,6                                   MNP18800
C                                                                       MNP18900
C...     DETERMINE LOCATION OF NEXT MACRO IN MACDF1 TABLE.              MNP19000
C                                                                       MNP19100
   35 IF(MACDF1(MCSRCH+2))3,3,4                                         MNP19200
    3 MCSRCH=MCSRCH+3                                                   MNP19300
      GO TO 1                                                           MNP19400
    4 MCSRCH=MACDF1(MCSRCH+2)+1                                         MNP19500
      GO TO 1                                                           MNP19600
C                                                                       MNP19700
C...     MACFND SET TO 1 IF NO MACRO OF CURRENT LEVEL ENCOUNTERED.      MNP19800
C...     OTHERWISE SET TO 0.                                            MNP19900
C                                                                       MNP20000
    6 MACFND=IABS(MACFND)                                               MNP20100
      GO TO 35                                                          MNP20200
    7 MACFND=0                                                          MNP20300
C                                                                       MNP20400
C...     COMPUTE BEGINNING (NUMBEG) AND END (NUMARG) OF MACRO VARIABLES MNP20500
C...     IN THE MACDF1 TABLE.                                           MNP20600
C                                                                       MNP20700
      NUMARG=MACDF1(MCSRCH+2)                                           MNP20800
    8 NUMBEG=MCSRCH+3                                                   MNP20900
C                                                                       MNP21000
C...     INITIALLY ZERO THE MACSPD TABLE PRIOR TO STORING CALL HISTORY. MNP21100
C                                                                       MNP21200
      DO 51 I=1,1300                                                    MNP21300
   51 MACSPD(I)=0                                                       MNP21400
      MCSPDP=1                                                          MNP21500
      IF(NUMARG.NE.0)MCSPDP=NUMARG-MCSRCH-1                             MNP21600
C                                                                       MNP21700
C...     BEGIN SCANNING THE MACHST TABLE TO RETRIEVE, EXPAND, AND PLACE MNP21800
C...     IN THE MACSPD TABLE CALL INFORMATION FOR CURRENT MACRO.        MNP21900
C                                                                       MNP22000
      L=2                                                               MNP22100
C                                                                       MNP22200
C...     DO NOT BRANCH IF CALL INFORMATION FOR CURRENT MACRO FOUND.     MNP22300
C                                                                       MNP22400
    9 IF(MACHST(L).NE.MCSRCH)GO TO 5                                    MNP22500
      K=1                                                               MNP22600
      M=L                                                               MNP22700
      IF(MACHST(L+1).EQ.0)GO TO 91                                      MNP22800
      IF(NUMARG.EQ.0)GO TO 93                                           MNP22900
      IF(MCSPDP+NUMARG-NUMBEG+2.LE.MSPDDM)GO TO 94                      MNP23000
   95 CALL ALARM(31,0,8,'MNPROC  ')                                     MNP23100
      CALL HELP                                                         MNP23200
C                                                                       MNP23300
C...     PLACE ASSIGNED VALUES FOR THIS CALL IN MACSPD TABLE.           MNP23400
C                                                                       MNP23500
   94 DO 12 I=NUMBEG,NUMARG                                             MNP23600
      IF(K.NE.(MACHST(L+2)/100000))GO TO 10                             MNP23700
      MACSPD(MCSPDP+1)=MACHST(L+2)-100000*K                             MNP23800
      L=L+1                                                             MNP23900
      GO TO 11                                                          MNP24000
   10 MACSPD(MCSPDP+1)=MACDF2(I)                                        MNP24100
      IF(NLAST.GT.0)MACSPD(MCSPDP+1)=-MACSPD(MCSPDP+1)                  MNP24200
   11 MCSPDP=MCSPDP+1                                                   MNP24300
   12 K=K+1                                                             MNP24400
C                                                                       MNP24500
C...     PLACE CALL NUMBER IN MACSPD TABLE.                             MNP24600
C                                                                       MNP24700
   93 MCSPDP=MCSPDP+1                                                   MNP24800
      IF(MCSPDP.GT.MSPDDM)GO TO 95                                      MNP24900
      MACSPD(MCSPDP)=MACHST(M+1)                                        MNP25000
   91 L=L+2                                                             MNP25100
   92 IF(MCHSTP-L)13,14,14                                              MNP25200
C                                                                       MNP25300
C...     NO MORE CALL INFORMATION REMAINS TO BE SCANNED.                MNP25400
C                                                                       MNP25500
   13 MCHSTP=M-2                                                        MNP25600
C                                                                       MNP25700
C...     BRANCH IF THERE ARE NO MACRO VARIABLES.                        MNP25800
C                                                                       MNP25900
   18 IF(NUMARG.EQ.0)GO TO 19                                           MNP26000
      NUMARG=NUMARG-NUMBEG+2                                            MNP26100
C                                                                       MNP26200
C...     GENERATE MACRO VARIABLE NAMES, STORE THEM IN NAMTBL, AND PLACE MNP26300
C...     THEIR NAMTBL INDICES IN THE MACSPD TABLE.                      MNP26400
C                                                                       MNP26500
      DO 32 I=2,NUMARG                                                  MNP26600
      CALL MACLBL(-MCSAVP,-I,L)                                         MNP26700
C      PROTECT NAMTBL ENTRY ON SUBSEQUENT CALLS                         MNP26800
      NAMTBL(L) = MACVBL(1)                                             MNP26900
   32 MACSPD(I-1)=L                                                     MNP27000
C                                                                       MNP27100
C...     BRANCH IF NO MACRO VARIABLES HAVE BEEN ASSIGNED MACRO NAMES.   MNP27200
C                                                                       MNP27300
   19 IF(MNMVBP.EQ.0)GO TO 20                                           MNP27400
      I=1                                                               MNP27500
   61 IF(MNMVC(I).NE.MCSRCH)GO TO 62                                    MNP27600
C                                                                       MNP27700
C...     REMOVE REFERENCES TO CURRENT MACRO FROM MNMVC TABLE.           MNP27800
C                                                                       MNP27900
      MNMVBP=MNMVBP-1                                                   MNP28000
      MNMVB(I)=MNMVB(MNMVBP+1)                                          MNP28100
      MNMVC(I)=MNMVC(MNMVBP+1)                                          MNP28200
   63 IF(MNMVBP.LT.I)GO TO 20                                           MNP28300
      GO TO 61                                                          MNP28400
   62 I=I+1                                                             MNP28500
      GO TO 63                                                          MNP28600
C                                                                       MNP28700
C...     INITIALIZE COUNTERS,POINTERS, AND FLAGS USED IN FINAL MACRO    MNP28800
C...     PROCESSING.                                                    MNP28900
C                                                                       MNP29000
   20 TEXTST=MACDF1(MCSRCH+1)                                           MNP29100
      WHCHMN=MACDF2(MCSRCH+1)                                           MNP29200
      SEQNO=MACSEQ(WHCHMN)                                              MNP29300
      ILHLT=.TRUE.                                                      MNP29400
      FINMAC=.FALSE.                                                    MNP29500
      MACTOP=MCSPDP                                                     MNP29600
      ENTRY=.FALSE.                                                     MNP29700
      NMLINE=NUMARG                                                     MNP29800
      NUMCAL=MACDF2(MCSRCH+2)                                           MNP29900
      IF(NUMARG.EQ.0)GO TO 53                                           MNP30000
C                                                                       MNP30100
C...     FOR EACH MACRO VARIABLE SELECT AS ITS NORMAL VALUE THE MOST    MNP30200
C...     COMMONLY USED ASSIGNED VALUE. ALSO ESTABLISH AS THE CLASS AND  MNP30300
C...     MODE OF EACH MACRO VARIABLE THAT OF ITS FIRST ASSIGNED VALUE.  MNP30400
C                                                                       MNP30500
      I=1                                                               MNP30600
   52 I=I+1                                                             MNP30700
      J=MACSPD(I-1)                                                     MNP30800
      L=NUMARG+I                                                        MNP30900
      K=MACSPD(L-1)                                                     MNP31000
      IF((NLAST.GT.0).AND.(K.LT.0))K=-K                                 MNP31100
      NAMTBL(J)=NUMBER(1)+MODHLF                                        MNP31200
      IF(K.GT.NAMMAX)GO TO 55                                           MNP31300
      KK=NAMTBL(K)                                                      MNP31400
      IF(KK-MODULO*(KK/MODULO).LT.MODHLF)KK=KK+MODHLF                   MNP31500
      NAMTBL(J)=KK                                                      MNP31600
   55 IF(NLAST.GT.0)GO TO 140                                           MNP31700
      L=0                                                               MNP31800
C                                                                       MNP31900
C...IASV IS USED TO KEEP TRACK OF THE FREQUENCY OF THE ASSIGNED VALUES. MNP32210
C                                                                       MNP32300
      M=I                                                               MNP32400
      DO 109 J=1,NUMCAL                                                 MNP32500
      M=M+NUMARG                                                        MNP32600
      N=MACSPD(M-1)                                                     MNP32700
  109 IASV(N)=0                                                         MNP32900
C                                                                       MNP33000
C...     K POINTS TO MOST COMMONLY USED ASSIGNED VALUE.                 MNP33100
C...     L KEEPS TRACK OF ITS FREQUENCY.                                MNP33200
C                                                                       MNP33300
      DO 110 J=1,NUMCAL                                                 MNP33400
      M=J*NUMARG+I                                                      MNP33500
      N=MACSPD(M-1)                                                     MNP33600
      IASV(N)=IASV(N)+1                                                 MNP33700
      IF(N.EQ.K)GO TO 102                                               MNP33800
      IF(IASV(N).LE.L)GO TO 110                                         MNP33900
      L=IASV(N)                                                         MNP34000
      K=N                                                               MNP34100
      GO TO 110                                                         MNP34200
  102 L=L+1                                                             MNP34300
  110 CONTINUE                                                          MNP34400
      GO TO 130                                                         MNP34500
C                                                                       MNP34600
C...     INITIALIZE PARAMETERS AND COUNTERS USED IN MACRO PROCESSING.   MNP34700
C                                                                       MNP34800
   53 BITWDS=(NUMCAL-1)/NUMBIT+1                                        MNP34900
      MAXSPS=NUMARG                                                     MNP35000
      NXTLN=1                                                           MNP35100
      LNUSDP=0                                                          MNP35200
      PATHLN=NUMARG                                                     MNP35300
      PATHCH=NUMARG                                                     MNP35400
      RETURN                                                            MNP35500
C                                                                       MNP35600
C...     COMPRESS MACHST TABLE TO ERASE CURRENT CALL INFORMATION STRING.MNP35700
C                                                                       MNP35800
   14 DO 15 I=L,MCHSTP                                                  MNP35900
      J=I-(L-M+1)                                                       MNP36000
   15 MACHST(J)=MACHST(I)                                               MNP36100
      MACHST(J+1)=0                                                     MNP36200
      MCHSTP=J                                                          MNP36300
      L=M                                                               MNP36400
      GO TO 9                                                           MNP36500
C                                                                       MNP36600
C...     LOCATE NEXT CALL INFORMATION STRING IN MACHST.                 MNP36700
C                                                                       MNP36800
    5 IF(MACHST(L+2)/100000)16,17,16                                    MNP36900
   16 L=L+1                                                             MNP37000
      GO TO 5                                                           MNP37100
   17 L=L+3                                                             MNP37200
      IF(L-MCHSTP)9,9,18                                                MNP37300
   65 IF(LARGMV)27,27,25                                                MNP37400
C                                                                       MNP37500
C...     GENERATE I.L. TRANSFER COMMANDS FOR MACRO VARIABLES AND LINKAGEMNP37600
C...     CELLS FOR CURRENT MACRO DEPTH LEVEL.                           MNP37700
C                                                                       MNP37800
   25 DO 26 I=2,LARGMV                                                  MNP37900
      CALL MACLBL(-MCSAVP,-I,L)                                         MNP38000
      NAMTBL(L) = LABEL(1)                                              MNP38100
      CALL OPCODE(ENTRYX)                                               MNP38200
      CALL ONEARG(L)                                                    MNP38300
   26 CALL RLSLIN                                                       MNP38400
   27 IF(MACFND)28,29,30                                                MNP38500
C                                                                       MNP38600
C...     PREPARE TO PROCESS MACROS OF NEXT DEPTH LEVEL.                 MNP38700
C                                                                       MNP38800
   29 MCSAVP=MCSAVP+1                                                   MNP38900
      LARGMV=0                                                          MNP39000
      MACFND=-1                                                         MNP39100
      IF(MNMVBP.EQ.0)GO TO 73                                           MNP39200
C                                                                       MNP39300
C...     ADJUST DEPTH LEVEL IN MACDF2 TABLE OF THOSE UNPROCESSED MACROS MNP39400
C...     WHICH ARE MACRO VARIABLE ASSIGNED VALUES.                      MNP39500
C                                                                       MNP39600
      DO 72 I=1,MNMVBP                                                  MNP39700
      K=MNMVC(I)                                                        MNP39800
   72 IF(MACDF2(K).LE.MCSAVP)MACDF2(K)=MCSAVP+1                         MNP39900
C                                                                       MNP40000
C...     ADJUST DEPTH LEVEL OF THOSE MACROS WHICH ARE DIRECTLY CALLED BYMNP40100
C...     UNPROCESSED MACROS WHICH ARE MACRO VARIABLE ASSIGNED VALUES.   MNP40200
C                                                                       MNP40300
   73 I=1                                                               MNP40400
   74 IF(I.GT.MCHSTP)GO TO 71                                           MNP40500
      K=MACHST(I)                                                       MNP40600
      IF(MACDF2(K).LT.MCSAVP)GO TO 75                                   MNP40700
      J=MACHST(I+1)                                                     MNP40800
      IF(MACDF2(J).LE.MACDF2(K))MACDF2(J)=MACDF2(K)+1                   MNP40900
   75 I=I+2                                                             MNP41000
   76 I=I+1                                                             MNP41100
      IF((MACHST(I)/100000).EQ.0)GO TO 74                               MNP41200
      GO TO 76                                                          MNP41300
C                                                                       MNP41400
C...     NO MORE MACROS REMAIN TO BE PROCESSED.                         MNP41500
C                                                                       MNP41600
   28 MACEND=.TRUE.                                                     MNP41700
      RETURN                                                            MNP41800
C                                                                       MNP41900
C...     1022 - RECURSIVE USE OF MACROS                                 MNP42000
C                                                                       MNP42100
   30 CALL ALARM(1022,0,8,'MNPROC  ')                                   MNP42200
      GO TO 28                                                          MNP42300
C                                                                       MNP42400
C     MARK MOST COMMON ASSIGNMENT                                       MNP42710
  130 DO 120 L=1,NUMCAL                                                 MNP42800
      J=NUMCAL-L+1                                                      MNP42900
      M = J*NUMARG+I                                                    MNP43000
      N=MACSPD(M-1)                                                     MNP43100
      IF(N.EQ.K)MACSPD(M-1)=-MACSPD(M-1)                                MNP43200
  120 CONTINUE                                                          MNP43300
      IF(I.LT.NUMARG) GOTO 52                                           MNP43400
      GO TO 53                                                          MNP43500
  140 KK=NUMARG+I-1                                                     MNP43600
      K=MACSPD(KK)                                                      MNP43700
      IF(K.LT.0)GO TO 180                                               MNP43800
      DO 150 L=1,NUMCAL                                                 MNP43900
      J=NUMCAL-L+1                                                      MNP44000
      M=J*NUMARG+I                                                      MNP44100
      N=MACSPD(M-1)                                                     MNP44200
      IF(N.LT.0)GO TO 180                                               MNP44300
  150 CONTINUE                                                          MNP44400
      DO 160 L=1,NUMCAL                                                 MNP44500
      J=NUMCAL-L+1                                                      MNP44600
      M=J*NUMARG+I                                                      MNP44700
      N=MACSPD(M-1)                                                     MNP44800
      IF(N.EQ.K)MACSPD(M-1)=-MACSPD(M-1)                                MNP44900
  160 CONTINUE                                                          MNP45000
  180 IF(I.LT.NUMARG)GO TO 52                                           MNP45100
      GO TO 53                                                          MNP45200
      END                                                               MNP45300
**** SOURCE FILE : M0006656.V03   ***
*
C                                                                       MOD00100
C              FORTRAN SUBROUTINE MODE                                  MOD00200
C                                                                       MOD00300
C LINKAGE      INTEGER FUNCTION MODE(INDEX)                             MOD00400
C                                                                       MOD00500
C          SUBSIDIARIES                  CALLED BY                      MOD00600
C          NONE                          TYPE          ENTRY            MOD00700
C                                        SUBROUTINE    BOOLIF           MOD00800
C                                        SUBROUTINE    GOLO             MOD00900
C                                        SUBROUTINE    INPAT            MOD01000
C                                        SUBROUTINE    LARGES           MOD01100
C                                        SUBROUTINE    LCANON           MOD01200
C                                        SUBROUTINE    LOOP             MOD01300
C                                        SUBROUTINE    MACREC           MOD01400
C                                        SUBROUTINE    MATCH            MOD01500
C                                        SUBROUTINE    MOTION           MOD01600
C                                        SUBROUTINE    PRO020           MOD01700
C                                        SUBROUTINE    PRO021           MOD01800
C                                        SUBROUTINE    PRO026           MOD01900
C                                        SUBROUTINE    PRO027           MOD02000
C                                        SUBROUTINE    RECOG            MOD02100
C                                        SUBROUTINE    RECOGN           MOD02200
C                                        SUBROUTINE    SSDEF            MOD02300
C                                        SUBROUTINE    SUBCOD           MOD02400
C                                        SUBROUTINE    TSSMIL           MOD02500
C                                                                       MOD02600
      INTEGER FUNCTION MODE(INDEX)                                      MOD02700
C                                                                       MOD02800
      IMPLICIT INTEGER (A-Z)                                            MOD02900
C                                                                       MOD03000
C        1.    NAME TABLE AND TABLE LIMITS                              MOD03100
C                                                                       MOD03200
      INCLUDE 'NAMETB.INC'                                              MOD03310
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                MOD03330
C CNAMTB:      NAME TABLE OR DICTIONARY                                 MOD03450
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     MOD03500
C                                                                       MOD03900
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      MOD04000
C                                                                       MOD04100
      COMMON/CODE/CODE                                                  MOD04200
      DIMENSION CODE(150),NUMBER(2),TEMP(2),VBL(2)                      MOD04300
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        MOD04400
      EQUIVALENCE (NUMBER(1),CODE(27))                                  MOD04500
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        MOD04600
      EQUIVALENCE (TEMP(1),CODE(33))                                    MOD04700
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        MOD04800
      EQUIVALENCE (VBL(1),CODE(61))                                     MOD04900
C                                                                       MOD05000
C       17.    MODE CODES                                               MOD05100
C                                                                       MOD05200
      COMMON/MODX/MODX                                                  MOD05300
      DIMENSION MODX(32)                                                MOD05400
C REAL:        MODE CODE (21) FOR REAL                                  MOD05500
      EQUIVALENCE (REAL,MODX(21))                                       MOD05600
C                                                                       MOD05700
C       29.    CLASS CODE MODULI                                        MOD05800
C                                                                       MOD05900
      COMMON/MODULI/MODULI                                              MOD06000
      DIMENSION MODULI(2)                                               MOD06100
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    MOD06200
      EQUIVALENCE (MODULO,MODULI(1))                                    MOD06300
C MODHLF:      NORMAL MODE CODE LIMIT 500                               MOD06400
      EQUIVALENCE (MODHLF,MODULI(2))                                    MOD06500
C*                                                                      MOD06600
C ARGUMENTS    INDEX     NAME TABLE (NAMTBL) INDEX OF THE VARIABLE.     MOD06700
C**                                                                     MOD06800
C...     IS INDEX THAT OF A NUMBER                                      MOD06900
C                                                                       MOD07000
      IF (INDEX.LE.NAMMAX) GOTO 100                                     MOD07100
C                                                                       MOD07200
C...     YES - MODE = REAL.                                             MOD07300
C                                                                       MOD07400
   10 MODE = REAL                                                       MOD07500
      RETURN                                                            MOD07600
C                                                                       MOD07700
C...     SET K TO CLASS OF ITEM.                                        MOD07800
C                                                                       MOD07900
  100 K = MODULO*(NAMTBL(INDEX)/MODULO)                                 MOD08000
C                                                                       MOD08100
C...     IS IT OF CLASS NUMBER                                          MOD08200
C                                                                       MOD08300
      IF (K.EQ.NUMBER(1)) GOTO 10                                       MOD08400
C                                                                       MOD08500
C...     NO. IS IT OF CLASS VBL OR TEMP. IF SO RETURN CORRECT MODE.     MOD08600
C                                                                       MOD08700
      IF ((K.NE.VBL(1)).AND.(K.NE.TEMP(1))) GOTO 25                     MOD08800
      MODE = NAMTBL(INDEX)-K                                            MOD08900
C                                                                       MOD09000
C...     IS IT A SUBSCRIPT. IF SO RETURN DERIVATIVE MODE.               MOD09100
C                                                                       MOD09200
      IF (MODE.GE.MODHLF) MODE = MODE-MODHLF                            MOD09300
      RETURN                                                            MOD09400
C                                                                       MOD09500
C...     NOT NUMBER, VBL, OR TEMP - SO RETURN ZERO MODE.                MOD09600
C                                                                       MOD09700
   25 MODE = 0                                                          MOD09800
      RETURN                                                            MOD09900
       END                                                              MOD10000
**** SOURCE FILE : M0006657.V06   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE MOTION                                M0000200
C                                                                       M0000300
C LINKAGE       SUBROUTINE MOTION                                       M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    CALLZZ          SUBROUTINE    PRO026           M0000800
C          SUBROUTINE    BCDBIN                                         M0000900
C          SUBROUTINE    MACLBL                                         M0001000
C          SUBROUTINE    MCXTRN                                         M0001100
C          INTEGER FCT.  MODE                                           M0001200
C          INTEGER FCT.  NAME                                           M0001300
C          SUBROUTINE    ONEARG                                         M0001400
C          SUBROUTINE    OPCODE                                         M0001500
C          SUBROUTINE    ARGCVT                                         M0001600
C          SUBROUTINE    RLSLIN                                         M0001700
C          SUBROUTINE    TWOARG                                         M0001800
C          SUBROUTINE    ALARM                                          M0001900
C                                                                       M0002000
       SUBROUTINE MOTION                                                M0002100
C                                                                       M0002200
      IMPLICIT INTEGER (A-Z)                                            M0002300
C                                                                       M0002400
C        1.    NAME TABLE AND TABLE LIMITS                              M0002500
C                                                                       M0002600
      INCLUDE 'NAMETB.INC'                                              M0002710
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0002750
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0002850
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0002900
C                                                                       M0003300
C        2.    STACK AND POINTER STORAGE                                M0003400
C                                                                       M0003500
      COMMON/STKLST/STKLST                                              M0003600
      DIMENSION STKLST(300),ARGSTK(99)                                  M0003700
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             M0003800
      EQUIVALENCE (ARGTOP,STKLST(2))                                    M0003900
C ARGSTK:      ARGUMENT STACK                                           M0004000
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               M0004100
C                                                                       M0004200
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0004300
C                                                                       M0004400
      COMMON/CODE/CODE                                                  M0004500
      DIMENSION CODE(150),TEMP(2),PERMID(2),LABEL(2),IMPLAB(2),VBL(2)   M0004600
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0004700
      EQUIVALENCE (TEMP(1),CODE(33))                                    M0004800
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        M0004900
      EQUIVALENCE (PERMID(1),CODE(39))                                  M0005000
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        M0005100
      EQUIVALENCE (LABEL(1),CODE(43))                                   M0005200
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        M0005300
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  M0005400
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        M0005500
      EQUIVALENCE (VBL(1),CODE(61))                                     M0005600
C                                                                       M0005700
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      M0005800
C                                                                       M0005900
      COMMON/BCDPTR/BCDPTR                                              M0006000
      DIMENSION BCDPTR(7)                                               M0006100
C DOTAC:       NAMTBL POINTER TO ALPHAMERIC LITERAL '.AC.'              M0006200
      EQUIVALENCE (DOTAC,BCDPTR(1))                                     M0006300
C FEDRAT:      NAMTBL POINTER TO ALPHAMERIC LITERAL 'FEDRAT'            M0006400
      EQUIVALENCE (FEDRAT,BCDPTR(2))                                    M0006500
C TO:          NAMTBL POINTER TO ALPHAMERIC LITERAL 'TO'                M0006600
      EQUIVALENCE (TO,BCDPTR(3))                                        M0006700
C                                                                       M0006800
C        9.    NAME TABLE POINTERS TO NUMBERS                           M0006900
C                                                                       M0007000
      COMMON/NUMPTR/NUMPTR                                              M0007100
      DIMENSION NUMPTR(12)                                              M0007200
C ONEPT:       NAMTBL POINTER TO '1.    '                               M0007300
      EQUIVALENCE (ONEPT,NUMPTR(4))                                     M0007400
C                                                                       M0007500
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0007600
C                                                                       M0007700
      COMMON/IL/IL                                                      M0007800
      DIMENSION IL(21)                                                  M0007900
C VBLJMP:      CONTAINS COMMAND CODE (20) FOR VBLJMP COMMAND            M0008000
      EQUIVALENCE (VBLJMP,IL(20))                                       M0008100
C                                                                       M0008200
C       17.    MODE CODES                                               M0008300
C                                                                       M0008400
      COMMON/MODX/MODX                                                  M0008500
      DIMENSION MODX(32)                                                M0008600
C REAL:        MODE CODE (24) FOR A SCALAR                              M0008700
      EQUIVALENCE (REAL,MODX(21))                                       M0008800
C                                                                       M0008900
C       22.    MACRO PROCESSING VARIABLES                               M0009000
C                                                                       M0009100
      COMMON/MACXX1/MACXX1                                              M0009200
      DIMENSION MACXX1(71)                                              M0009300
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED         M0009400
      EQUIVALENCE (WHCHMN,MACXX1(63))                                   M0009500
C                                                                       M0009600
C       27.    OPERAND MODIFIERS                                        M0009700
C                                                                       M0009800
      COMMON/OPMOD/OPMOD                                                M0009900
      DIMENSION OPMOD(6)                                                M0010000
C DBLDLR:      CONTAINS OPERAND TYPE CODE 2                             M0010100
      EQUIVALENCE (DBLDLR,OPMOD(3))                                     M0010200
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             M0010300
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     M0010400
C                                                                       M0010500
C       28.    OPERAND MODIFIERS                                        M0010600
C                                                                       M0010700
      COMMON/SUBLST/SUBLST                                              M0010800
      DIMENSION SUBLST(136)                                             M0010900
C APT200:      NAMTBL POINTER FOR APT200                                M0011000
      EQUIVALENCE (APT200,SUBLST(127))                                  M0011100
C APT201:      NAMTBL POINTER FOR APT201                                M0011200
      EQUIVALENCE (APT201,SUBLST(128))                                  M0011300
C APT299:      NAMTBL POINTER FOR APT299                                M0011400
      EQUIVALENCE (APT299,SUBLST(131))                                  M0011500
C ERROR:       NAMTBL POINTER TO EXECUTION SUBROUTINE ERROR             M0011600
      EQUIVALENCE (ERROR,SUBLST(132))                                   M0011700
C                                                                       M0011800
C       29.    CLASS CODE MODULI                                        M0011900
C                                                                       M0012000
      COMMON/MODULI/MODULI                                              M0012100
      DIMENSION MODULI(2)                                               M0012200
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0012300
      EQUIVALENCE (MODULO,MODULI(1))                                    M0012400
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0012500
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0012600
C                                                                       M0012700
C       31.    COMMON BLOCK FOR PRO026 AND MOTION                       M0012800
C                                                                       M0012900
      COMMON/COMP26/COMP26                                              M0013000
      LOGICAL FEDSAV,FMTERR,MCSJMP,JMPING                               M0013100
      DIMENSION COMP26(16),TAGTBL(3)                                    M0013200
C INTOF:       DESIRED DS AND CS INTERSECTION IN MULTIPLE INTERS. CASE  M0013300
      EQUIVALENCE (INTOF,COMP26(1))                                     M0013400
C ARGCNT:      POINTER FOR CURRENT ARGSTK ELEMENT                       M0013500
      EQUIVALENCE (ARGCNT,COMP26(2))                                    M0013600
C CSPNTR:      CONTAINS NAMTBL POINTER TO CS                            M0013700
      EQUIVALENCE (CSPNTR,COMP26(3))                                    M0013800
C JMPCS:       TAGTBL POINTER                                           M0013900
      EQUIVALENCE (JMPCS,COMP26(4))                                     M0014000
C NUMBCS:      NUMBER OF CHECK SURFACES                                 M0014100
      EQUIVALENCE (NUMBCS,COMP26(5))                                    M0014200
C TEST:        NAMTBL INDEX OF CURRENT ARGUMENT                         M0014300
      EQUIVALENCE (TEST,COMP26(6))                                      M0014400
C TEST1:       CLASS OF CURRENT ARGUMENT                                M0014500
      EQUIVALENCE (TEST1,COMP26(7))                                     M0014600
C FEDSAV:      INDICATES FINAL ARGUMENT MAY BE A FEEDRATE SPECIFICATION M0014700
      EQUIVALENCE (FEDSAV,COMP26(8))                                    M0014800
C FMTERR:      ERROR FLAG FOR CERTAIN MOTION STATEMENTS                 M0014900
      EQUIVALENCE (FMTERR,COMP26(9))                                    M0015000
C MCSJMP:      MULTIBLE CHECK SUBTRACT INDICATOR                        M0015100
      EQUIVALENCE (MCSJMP,COMP26(10))                                   M0015200
C JMPING:      INDICATES LABEL POINTER ADDED TO TAGTBL                  M0015300
      EQUIVALENCE (JMPING,COMP26(11))                                   M0015400
C K:           NAMTBL POINTER TO MAJOR WORD                             M0015500
      EQUIVALENCE (K,COMP26(12))                                        M0015600
C LERR:        ERROR TYPE INDICATOR                                     M0015700
      EQUIVALENCE (LERR,COMP26(13))                                     M0015800
C TAGTBL:      NAMTBL POINTERS TO LABELS USED AT MULTIBLE CHECK SURFACE M0015900
      EQUIVALENCE (TAGTBL(1),COMP26(14))                                M0016000
C                                                                       M0016100
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          M0016200
C                                                                       M0016300
      COMMON/NTBL/NTBL                                                  M0016400
      DIMENSION NTBL(6)                                                 M0016500
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE M0016600
      EQUIVALENCE (NLAST,NTBL(4))                                       M0016700
C                                                                       M0016800
      CHARACTER*6 ITANTO                                                M0016900
      DATA ITANTO/'TANTO '/                                             M0017000
C**                                                                     M0017100
C...     GOFWD, GOBACK, GOUP, GODOWN, GOLFT, OR GORGT / ......          M0017200
C...     INITIALISE CHECK SURFACE COUNT.                                M0017300
C                                                                       M0017400
 1901 NUMBCS=0                                                          M0017500
C                                                                       M0017600
C...     INITIALIZE MULTIPLE CHECK SURFACE EXISTENCE FLAG.              M0017700
C                                                                       M0017800
      MCSJMP = .FALSE.                                                  M0017900
      FMTERR = .FALSE.                                                  M0018000
      INTOF=0                                                           M0018100
      LERR=0                                                            M0018200
      IF (MODE (ARGSTK (1) ) .NE. REAL)  GO TO 13                       M0018300
      TEST = ARGSTK (1)                                                 M0018400
      IF (TEST .LE. NAMMAX)  GO TO 11                                   M0018500
C...  MAY BE A FEDRAT SPECIFICATION                                     M0018600
      TEST = ARGSTK (2)                                                 M0018700
      IF(TEST.GT.NAMMAX)GO TO 11                                        M0018800
      I=NAMTBL(TEST)/MODULO                                             M0018900
      IF(((I.NE.(VBL(1)/MODULO)).AND.                                   M0019000
     / (I.NE.(TEMP(1)/MODULO))))GO TO 11                                M0019100
C...  RESERVE JUDGEMENT                                                 M0019200
      FEDSAV = .TRUE.                                                   M0019300
      ARGCNT = 2                                                        M0019400
      JMPCS=1                                                           M0019500
      GO TO 16                                                          M0019600
C...  NO FEDRAT SPECIFICATION IN THIS STATEMENT                         M0019700
   13 ARGCNT = 1                                                        M0019800
      GO TO 15                                                          M0019900
C...  FEDRAT SPECIFICATION                                              M0020000
   11 ARGCNT = 2                                                        M0020100
   14 CALL CALLZZ (APT299)                                              M0020200
      CALL TWOARG (QUIDLR,1)                                            M0020300
      CALL TWOARG (DBLDLR,FEDRAT)                                       M0020400
      CALL TWOARG (QUIDLR,1)                                            M0020500
      CALL ARGCVT(ARGSTK(1))                                            M0020600
      CALL RLSLIN                                                       M0020700
   15 FEDSAV=.FALSE.                                                    M0020800
      JMPCS=1                                                           M0020900
   16 IF(ARGTOP-ARGCNT)17,18,68                                         M0021000
   17 CALL ALARM(2020,-ARGTOP,8,'MOTION  ')                             M0021100
      LERR = -1                                                         M0021200
      GO TO 900                                                         M0021300
   18 IF(.NOT.FEDSAV) GO TO 19                                          M0021400
      IF(NUMBCS.LE.1) GO TO 14                                          M0021500
C...  TWO OR MORE CHECK SURFACES HAVE BEEN COUNTED                      M0021600
      TAGTBL(1)=ARGSTK(1)                                               M0021700
      JMPCS=1                                                           M0021800
C...  CHECK MODE OF DRIVE SURFACE FOR ACCEPTABILITY                     M0021900
   19 TEST=MODE(ARGSTK(ARGCNT))                                         M0022000
      ERRPT=-ARGCNT                                                     M0022100
      IF((TEST.LT.1 .OR. TEST.GT.17) .AND.                              M0022200
     1   (TEST.LT.29 .OR. TEST.GT.30)) GO TO 17                         M0022300
C...  RELEASE DRIVE SURFACE CALL TO ARELEM STACK                        M0022400
   20 CALL CALLZZ(APT201)                                               M0022500
      CALL ARGCVT (ARGSTK(ARGTOP))                                      M0022600
      CALL ARGCVT(K)                                                    M0022700
      IF(MCSJMP) GO TO 21                                               M0022800
  900 RETURN                                                            M0022900
C...  THE JUMP TABLE (TAGTBL) MUST BE DUMPED FOR PROPER RETURN          M0023000
   21 CALL RLSLIN                                                       M0023100
   23 CALL OPCODE(VBLJMP)                                               M0023200
      CALL ARGCVT(DOTAC)                                                M0023300
      DO 24    I=1,NUMBCS                                               M0023400
      TEST=TAGTBL(JMPCS)                                                M0023500
 6003 IF(TEST.GT.NAMMAX)GO TO 6005                                      M0023600
      IF(WHCHMN.NE.0)GO TO 6002                                         M0023700
      GO TO 6006                                                        M0023800
C     DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           M0023910
 6005 TEST=TEST-NAMMAX                                                  M0023920
      IF(NLAST.GT.0)CALL MCXTRN(5,TEST,IDUMMY)                          M0023930
      CALL BCDBIN(CNUMTB(TEST),KK,ICOUNT)                               M0024000
      TEST=KK+10000                                                     M0024100
 6002 CALL MACLBL(TEST,-WHCHMN,TEST)                                    M0024200
      IF(NAMTBL(TEST).EQ.0)NAMTBL(TEST)=IMPLAB(1)+WHCHMN                M0024300
 6006 CALL ONEARG(TEST)                                                 M0024400
      JMPCS=JMPCS+1                                                     M0024500
   24 CONTINUE                                                          M0024600
      GO TO 900                                                         M0024700
C...  EVALUATE CHECK SURFACE EXPRESSSION                                M0024800
C     IS THE LAST ITEM A SURFACE NAME                                   M0024900
   68 TEST = MODE(ARGSTK(ARGCNT))                                       M0025000
      IF((TEST.LT.1 .OR. TEST.GT.17) .AND.                              M0025100
     1   (TEST.LT.29 .OR. TEST.GT.30)) GO TO 78                         M0025200
C...  THE LAST ITEM IS THE NAME OF A SURFACE                            M0025300
      CSPNTR=ARGSTK(ARGCNT)                                             M0025400
C...  ADVANCE ARGUMENT STACK POINTER                                    M0025500
   50 ARGCNT=ARGCNT+1                                                   M0025600
C...  COMPUTE NAMTBL INDEX OF NEXT ITEM                                 M0025700
   69 TEST=ARGSTK(ARGCNT)                                               M0025800
C...  WHAT ARE THE MODIFIERS FOR THIS CHACK SURFACE                     M0025900
C     IS THE NEXT ITEM A PERMANENT IDENTIFIER                           M0026000
      IF(TEST.GT.NAMMAX)GO TO 71                                        M0026100
      IF(NAMTBL(TEST)/MODULO.NE.PERMID(1)/MODULO)GO TO 71               M0026200
C...  YES, IS IT DEFINED FOR THIS FORMAT                                M0026300
      L = NAMTBL(TEST) - PERMID(1)                                      M0026400
      IF(L.GE.MODHLF)L=L-MODHLF                                         M0026500
      IF(L.EQ.6)GO TO 73                                                M0026600
      IF(L.EQ.3.OR.L.EQ.4.OR.L.EQ.147) GO TO 6004                       M0026700
C...  NO MATCH FOR THIS ITEM IN DEFINED LIST                            M0026800
C     SET CHECK SURFACE MODIFIER FOR TO STOPPING POSSITION              M0026900
   71 TEST=0                                                            M0027000
      GO TO 74                                                          M0027100
C...  TEST FOR MULTIPLE CHECK SURFACE TAG, SINCE LAST ITM IS NOT SFC    M0027200
   78 TEST=ARGSTK(ARGCNT)                                               M0027300
C...  IS IT A NUMBER                                                    M0027400
C...  IF IT IS DO NOT CHANGE MODE                                       M0027500
      IF (TEST.GT.NAMMAX) GOTO 81                                       M0027600
      TEST1 = MODULO*(NAMTBL(TEST)/MODULO)                              M0027700
C...  IS THE LAST ITEM A LABEL OR IMPLIED LABEL                         M0027800
      IF((TEST1.EQ.LABEL(1)).OR.(TEST1.EQ.IMPLAB(1))) GO TO 81          M0027900
C...  IS IT A PERMANENT IDENTIFIER                                      M0028000
      IF(TEST1.EQ.PERMID(1)) GO TO 80                                   M0028100
C)..  FORMAT IS NOT-SFC,ID OR SFC.                                      M0028200
      CALL ALARM(2022,-ARGCNT,8,'MOTION  ')                             M0028300
      FMTERR =.TRUE.                                                    M0028400
C...  IGNORE THE UNACCEPTABLE ITEM                                      M0028500
      GO TO 50                                                          M0028600
C...  CHANGE THE MODE ASSIGNMENT                                        M0028700
   80 IF(JMPING)GO TO 88                                                M0028800
      NAMTBL(TEST)=IMPLAB(1)                                            M0028900
C...  ITEM QUALIFIES AS A LABEL OF SOME KIND                            M0029000
C     COMPUTE JMPTBL INDEX,ALLOWING FOR FEDSAV ACTION                   M0029100
   81 I=NUMBCS+JMPCS                                                    M0029200
      IF(I.GT.3)CALL ALARM(14,-ARGCNT,4,'MOTION  ')                     M0029300
C...  VERIFY WE CAN WRITE INTO TAG TABLE FOR THIS CHECK SURFACE         M0029400
      IF(JMPING) GO TO 88                                               M0029500
      TAGTBL(I)=TEST                                                    M0029600
      MCSJMP=.TRUE.                                                     M0029700
C...  INDICATE TAG ADDED TO TAGTBL                                      M0029800
      JMPING=.TRUE.                                                     M0029900
      ARGCNT=ARGCNT+1                                                   M0030000
C...  GO BACK TO FIND THE ASSOCIATED CHECK SURFACE                      M0030100
      GO TO 68                                                          M0030200
C...  PERMID DEFINED FOR THIS FORMAT, IS IT INTOF                       M0030300
C...  NO, PICK UP MODIFIER AS HMOD                                      M0030400
 6004 ARGCNT=ARGCNT+1                                                   M0030500
C...  HAVE WE PASSED THROUGH WITHOUT ERROR                              M0030600
   74 IF(FMTERR) GO TO 75                                               M0030700
C...  YES, FORMAT SEEMS OK                                              M0030800
      NUMBCS=NUMBCS+1                                                   M0030900
C...  SET UP INTERMEDIATE LANGUAGE CALL FOR THIS CHECK SURFACE          M0031000
      CALL CALLZZ(APT200)                                               M0031100
      IF(TEST)6007,6007,6008                                            M0031200
 6007 I=TO                                                              M0031300
      GO TO 6016                                                        M0031400
 6008 IF(L.NE.147) GO TO 6015                                           M0031500
      I=NAME(ITANTO)                                                    M0031600
 6016 CALL TWOARG(DBLDLR,I)                                             M0031700
      GO TO 6009                                                        M0031800
 6015 CALL ARGCVT(TEST)                                                 M0031900
 6009 CALL ARGCVT(CSPNTR)                                               M0032000
      IF(INTOF)6010,6010,6011                                           M0032100
 6010 CALL ARGCVT(ONEPT)                                                M0032200
      GO TO 77                                                          M0032300
 6011 CALL ARGCVT(INTOF)                                                M0032400
C...  RESTORE NORMAL SEETTING FOR INTOF                                 M0032500
   77 INTOF=0                                                           M0032600
C...  ENTER IN ARELEM STACK                                             M0032700
      CALL RLSLIN                                                       M0032800
C...  SHOW TAG MATCHED WITH CHECK SURFACE                               M0032900
      JMPING=.FALSE.                                                    M0033000
C,..  CHECK TO SEE IF THERE ARE ANY MORE CHECK SURFACES                 M0033100
      GO TO 16                                                          M0033200
   88 CALL ALARM(2023,1-ARGCNT,8,'MOTION  ')                            M0033300
      LERR=-1                                                           M0033400
      JMPING=.FALSE.                                                    M0033500
      GO TO 900                                                         M0033600
C...  A FORMAT ERROR WAS DETECTED, REQUIRING ARELEM RESTART.            M0033700
   75 FMTERR=.FALSE.                                                    M0033800
      CALL CALLZZ(ERROR)                                                M0033900
      CALL TWOARG(QUIDLR,83)                                            M0034000
      GO TO 77                                                          M0034100
C...  INTOF MODIFIER DETECTED                                           M0034200
   73 TEST=ARGSTK(ARGCNT+1)                                             M0034300
      IF (MODE(TEST).NE.REAL) GOTO 76                                   M0034400
C...  SPECIFICATION NOT A NUMBER OR SCALAR                              M0034500
   85 INTOF=TEST                                                        M0034600
      ARGCNT=ARGCNT+2                                                   M0034700
C...  CHECK FOR OTHER MODIFIERS                                         M0034800
      GO TO 69                                                          M0034900
C...  ERROR IN INTOF FORMAT, WARNING ONLY                               M0035000
   76 CALL ALARM(2024,-ARGCNT-1,4,'MOTION  ')                           M0035100
C...  FMTERR WOULD BE SET HERE IF ARELEM RESTART WERE DESIRED.          M0035200
      GO TO 50                                                          M0035300
       END                                                              M0035400
**** SOURCE FILE : M0006658.W01   ***
*
C                                                                       NAM00100
C              FORTRAN SUBROUTINE NAME                                  NAM00200
C                                                                       NAM00300
C LINKAGE      INTEGER  FUNCTION  NAME  (STR)                           NAM00400
C                                                                       NAM00500
C          SUBSIDIARIES                  CALLED BY                      NAM00600
C          TYPE          ENTRY           TYPE          ENTRY            NAM00700
C          SUBROUTINE    ALARM           SUBROUTINE    COMSTR           NAM00800
C          INTEGER FCT.  BCDF            INTEGER FCT.  GETTMP           NAM00900
C                                        SUBROUTINE    GOLO             NAM01000
C                                        SUBROUTINE    GOPAT            NAM01100
C                                        SUBROUTINE    INPAT            NAM01200
C                                        SUBROUTINE    INPUT            NAM01300
C                                        SUBROUTINE    IPRLOG           NAM01400
C                                        SUBROUTINE    MACLBL           NAM01500
C                                        SUBROUTINE    MACREC           NAM01600
C                                        SUBROUTINE    MOTION           NAM01700
C                                        SUBROUTINE    PRO026           NAM01800
C                                        SUBROUTINE    PRO027           NAM01900
C                                        SUBROUTINE    RECOG            NAM02000
C                                        SUBROUTINE    RECOGN           NAM02100
C                                        SUBROUTINE    RESRVZ           NAM02200
C                                        SUBROUTINE    VCTPRD           NAM02300
C                                                                       NAM02400
      INTEGER  FUNCTION  NAME  (STR)                                    NAM02500
C                                                                       NAM02600
      IMPLICIT INTEGER (A-Z)                                            NAM02700
C                                                                       NAM02800
C        1.    NAME TABLE AND TABLE LIMITS                              NAM02900
C                                                                       NAM03000
      INCLUDE 'NAMETB.INC'                                              NAM03110
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                NAM03150
C CNAMTB:      NAME TABLE OR DICTIONARY                                 NAM03250
C NAMEST:      NAMTBL INDEX OF BEGIN OF THE PART PROGRAM NAME SECTION   NAM03300
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     NAM03500
C*                                                                      NAM03900
C ARGUMENTS    STR     A CHARACTER STRING CONTAINING THE ALPHA          NAM04000
C                      NUMERIC CHARACTERS OF THE SYMBOL.                NAM04100
C                                                                       NAM04200
      CHARACTER*6 STR                                                   NAM04300
C**                                                                     NAM04400
   10 J=MOD(BCDF(STR),NAMMAX-NAMEST)                                    NAM04500
      IF (J.LT.0) THEN                                                  NAM04510
        J=J+NAMMAX                                                      NAM04520
      ELSE                                                              NAM04530
        J=J+NAMEST                                                      NAM04540
      ENDIF                                                             NAM04550
      DO 20 I = J,NAMMAX                                                NAM04600
      IF (NAMTBL(I).EQ.0) GOTO 40                                       NAM04700
      IF(CNAMTB(I).EQ.STR) GOTO 100                                     NAM04800
   20 CONTINUE                                                          NAM04900
C                                                                       NAM05000
C...       SCAN TABLE FROM BOTTOM UP                                    NAM05100
C                                                                       NAM05200
      DO 30 I = NAMEST,J                                                NAM05300
      IF (NAMTBL(I).EQ.0) GOTO 40                                       NAM05400
      IF(CNAMTB(I).EQ.STR) GOTO 100                                     NAM05500
   30 CONTINUE                                                          NAM05600
C...       TABLE FULL                                                   NAM05700
      CALL ALARM(3001,0,8,'NAME    ')                                   NAM05800
      RETURN                                                            NAM05900
C                                                                       NAM06000
C...       NOT IN TABLE                                                 NAM06100
C                                                                       NAM06200
   40 CNAMTB(I)=STR                                                     NAM06300
C...       ENTRY IF NAME FOUND                                          NAM06500
  100 NAME = I                                                          NAM06600
      IF ((NAMTBL(I) .GE. 0) .OR. (I .GT. NAMMAX))  RETURN              NAM06700
      I = -NAMTBL(I)                                                    NAM06800
      GO TO 100                                                         NAM06900
C                                                                       NAM07000
       END                                                              NAM07100
**** SOURCE FILE : M0006659.W02   ***
*
C                                                                       NUM00100
C              FORTRAN SUBROUTINE NUMB                                  NUM00200
C                                                                       NUM00300
C LINKAGE      INTEGER FUNCTION NUMB(STR)                               NUM00400
C                                                                       NUM00500
C          SUBSIDIARIES                  CALLED BY                      NUM00600
C          TYPE          ENTRY           TYPE          ENTRY            NUM00700
C                                        SUBROUTINE    GOLO             NUM00800
C                                      SUBROUTINE    INPAT              NUM00900
C                                        SUBROUTINE    ISSCOD           NUM01000
C                                        SUBROUTINE    LCANON           NUM01100
C                                        SUBROUTINE    PRO021           NUM01300
C                                        SUBROUTINE    RECOG            NUM01400
C                                        SUBROUTINE    SSDEF            NUM01500
C                                        SUBROUTINE    TSSMIL           NUM01600
C                                                                       NUM01700
      INTEGER FUNCTION NUMB(STR)                                        NUM01800
C                                                                       NUM01900
      IMPLICIT INTEGER (A-Z)                                            NUM02000
C                                                                       NUM02100
C        1.    NAME TABLE AND TABLE LIMITS                              NUM02200
C                                                                       NUM02300
      INCLUDE 'NAMETB.INC'                                              NUM02410
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                NUM02450
C CNAMTB:      NAME TABLE OR DICTIONARY                                 NUM02550
C CNUMTB:      NUMBER TABLE                                             NUM02560
C NUMBST:      INDEX OF BEGINNING OF NUMBER SECTION IN CNUMTB           NUM02600
C NUMBND:      INDEX OF END OF NUMBER SECTION IN CNUMTB                 NUM02800
C                                                                       NUM03200
      INCLUDE 'NUMBLK.INC'                                              NUM04050
C                                                                       NUM04051
C MNMBND:      LAST NAME TABLE ENTRY TO MACRO ASSIGNED NUMBER SECTION   NUM04052
C NUMIDX:      NAMTBL INDEX OF A NUMBER GIVEN IN THE CURRENT STATEMENT  NUM04053
C  NMBRS:      QUANTITY OF NUMBERS IN THE CURRENT STATEMENT             NUM04054
C LSTCHR:      LAST CHARACTER OF A NUMBER                               NUM04055
C MASGND:      NAME TABLE INDEX OF SECTION END FOR NUMBERS ASSIGNMENT   NUM04056
C*                                                                      NUM04100
C ARGUMENTS    STR     A CHARACTER VARIABLE CONTAINING THE              NUM04200
C                      CHARACTERS OF THE NUMBER                         NUM04300
      CHARACTER*12 STR,BLK                                              NUM04500
      DATA BLK/' '/                                                     NUM04520
C**                                                                     NUM04600
      K=NUMIDX+1                                                        NUM04610
      IF (K.LE.NUMBND) THEN                                             NUM04620
        NUMIDX=K                                                        NUM04630
      ELSE                                                              NUM04640
        DO 20 I=MNMBND,NUMBND                                           NUM04650
          K=K-1                                                         NUM04655
          IF (CNUMTB(K).EQ.BLK) THEN                                    NUM04660
            GOTO 40                                                     NUM04665
          ENDIF                                                         NUM04670
   20   CONTINUE                                                        NUM04675
        K=NUMBND                                                        NUM04680
      ENDIF                                                             NUM04690
   40 CNUMTB(K) = STR                                                   NUM06910
      LSTCHR=NUMIDX                                                     NUM06920
      NUMB=K                                                            NUM06930
       END                                                              NUM07500
**** SOURCE FILE : M0006660.V01   ***
*
C                                                                       ONE00100
C              FORTRAN SUBROUTINE ONEARG                                ONE00200
C                                                                       ONE00300
C LINKAGE      SUBROUTINE ONEARG(I)                                     ONE00400
C                                                                       ONE00500
C          SUBSIDIARIES                  CALLED BY                      ONE00600
C          NONE                          TYPE          ENTRY            ONE00700
C          SUBROUTINE    ALARM           SUBROUTINE    ASNADZ           ONE00800
C                                        SUBROUTINE    BOOLIF           ONE00900
C                                        SUBROUTINE    CALLZZ           ONE01000
C                                        SUBROUTINE    CALMCX           ONE01100
C                                        SUBROUTINE    ISSCOD           ONE01200
C                                        SUBROUTINE    JUMPZZ           ONE01300
C                                        SUBROUTINE    LABELZ           ONE01400
C                                        SUBROUTINE    LARGES           ONE01500
C                                        SUBROUTINE    LOOP             ONE01600
C                                        SUBROUTINE    MACREC           ONE01700
C                                        SUBROUTINE    MNPROC           ONE01800
C                                        SUBROUTINE    MOTION           ONE01900
C                                        SUBROUTINE    PRO027           ONE02000
C                                        SUBROUTINE    RECOG            ONE02100
C                                        SUBROUTINE    RECOGN           ONE02200
C                                        SUBROUTINE    REPLAC           ONE02300
C                                        SUBROUTINE    RETMCX           ONE02400
C                                        SUBROUTINE    SSDEF            ONE02500
C                                        SUBROUTINE    SUBCOD           ONE02600
C                                        SUBROUTINE    TSSMIL           ONE02700
C                                                                       ONE02800
      SUBROUTINE ONEARG(I)                                              ONE02900
C                                                                       ONE03000
      IMPLICIT INTEGER (A-Z)                                            ONE03100
C                                                                       ONE03200
C       19.    INTERMEDIATE LANGUAGE TEXT                               ONE03300
C                                                                       ONE03400
      COMMON/ILTEXT/ILTEXT                                              ONE03500
      LOGICAL COMFIN                                                    ONE03600
      DIMENSION ILTEXT(94),TEXTIN(90)                                   ONE03700
C COMFIN:      TRUE IF I.L. OPERATION CODE GIVEN                        ONE03800
      EQUIVALENCE (COMFIN,ILTEXT(1))                                    ONE03900
C TPNTRX:      POINTER TO LAST TEXTIN ENTRY                             ONE04000
      EQUIVALENCE (TPNTRX,ILTEXT(3))                                    ONE04100
C TEXTIN:      STORAGE FOR CURRENTLY GENERATED I.L. COMMAND ARGUM.LIST  ONE04200
      EQUIVALENCE (TEXTIN(1),ILTEXT(5))                                 ONE04300
C*                                                                      ONE04400
C ARGUMENTS    I       NAME TABLE (NAMTBL) INDEX OF ARGUMENT            ONE04500
C**                                                                     ONE04600
      IF (COMFIN) GOTO 10                                               ONE04700
      IERROR=3                                                          ONE04800
      GO TO 90                                                          ONE04900
   10 IF (TPNTRX.LT.90) GOTO 20                                         ONE05000
      IERROR=2                                                          ONE05100
   90 CALL ALARM(IERROR,0,8,'ONEARG  ')                                 ONE05200
      GO TO 100                                                         ONE05300
   20 TEXTIN(TPNTRX+1) = I                                              ONE05400
      TPNTRX = TPNTRX+1                                                 ONE05500
  100 RETURN                                                            ONE05600
       END                                                              ONE05700
**** SOURCE FILE : M0006661.V01   ***
*
C                                                                       OPC00100
C              FORTRAN SUBROUTINE OPCODE                                OPC00200
C                                                                       OPC00300
C LINKAGE      SUBROUTINE OPCODE(I)                                     OPC00400
C                                                                       OPC00500
C          SUBSIDIARIES                  CALLED BY                      OPC00600
C          NONE                          TYPE          ENTRY            OPC00700
C          SUBROUTINE    ALARM           SUBROUTINE    ASNADZ           OPC00800
C                                        SUBROUTINE    ASNJPZ           OPC00900
C                                        SUBROUTINE    BOOLIF           OPC01000
C                                        SUBROUTINE    CALLZZ           OPC01100
C                                        SUBROUTINE    CALMCX           OPC01200
C                                        SUBROUTINE    GOPAT            OPC01300
C                                        SUBROUTINE    INPAT            OPC01400
C                                        SUBROUTINE    ISSCOD           OPC01500
C                                        SUBROUTINE    JUMPZZ           OPC01600
C                                        SUBROUTINE    LABELZ           OPC01700
C                                        SUBROUTINE    LARGES           OPC01800
C                                        SUBROUTINE    LCANON           OPC01900
C                                        SUBROUTINE    LOOP             OPC02000
C                                        SUBROUTINE    MACREC           OPC02100
C                                        SUBROUTINE    MNPROC           OPC02200
C                                        SUBROUTINE    MOTION           OPC02300
C                                        SUBROUTINE    PRO021           OPC02400
C                                        SUBROUTINE    PRO026           OPC02500
C                                        SUBROUTINE    PRO027           OPC02600
C                                        SUBROUTINE    RECOG            OPC02700
C                                        SUBROUTINE    RECOGN           OPC02800
C                                        SUBROUTINE    REPLAC           OPC02900
C                                        SUBROUTINE    RESRVZ           OPC03000
C                                        SUBROUTINE    RETMCX           OPC03100
C                                        SUBROUTINE    SSDEF            OPC03200
C                                        SUBROUTINE    SUBCOD           OPC03300
C                                        SUBROUTINE    TSSMIL           OPC03400
C                                                                       OPC03500
      SUBROUTINE OPCODE(I)                                              OPC03600
C                                                                       OPC03700
      IMPLICIT INTEGER (A-Z)                                            OPC03800
C                                                                       OPC03900
C       19.    INTERMEDIATE LANGUAGE TEXT                               OPC04000
C                                                                       OPC04100
      COMMON/ILTEXT/ILTEXT                                              OPC04200
      LOGICAL COMFIN                                                    OPC04300
      DIMENSION ILTEXT(94)                                              OPC04400
C COMFIN:      TRUE IF I.L. OPERATION CODE GIVEN                        OPC04500
      EQUIVALENCE (COMFIN,ILTEXT(1))                                    OPC04600
C LENGTH:      NUMBER OF ITEMS IN CURRENT I.L. COMMAND ARGUMENT LIST    OPC04700
      EQUIVALENCE (LENGTH,ILTEXT(2))                                    OPC04800
C TPNTRX:      POINTER TO LAST TEXTIN ENTRY                             OPC04900
      EQUIVALENCE (TPNTRX,ILTEXT(3))                                    OPC05000
C OPTEXT:      CONTAINS COMMAND CODE FOR CURRENT I.L. COMMAND           OPC05100
      EQUIVALENCE (OPTEXT,ILTEXT(4))                                    OPC05200
C*                                                                      OPC05300
C ARGUMENTS    I     INTEGER CODE FOR CURRENT I.L. COMMAND              OPC05400
C**                                                                     OPC05500
      IF(COMFIN)CALL ALARM(4,0,8,'OPCODE  ')                            OPC05600
      OPTEXT = I                                                        OPC05700
      LENGTH = 0                                                        OPC05800
      TPNTRX = 0                                                        OPC05900
      COMFIN = .TRUE.                                                   OPC06000
      RETURN                                                            OPC06100
       END                                                              OPC06200
**** SOURCE FILE : M0006662.W01   ***
*
C                                                                       OPC00100
C              FORTRAN SUBROUTINE OPPAIR                                OPC00200
C                                                                       OPC00300
C LINKAGE      SUBROUTINE OPPAIR(BCDPR,OPERND)                          OPC00400
C                                                                       OPC00500
C          SUBSIDIARIES                  CALLED BY                      OPC00600
C          TYPE          ENTRY           TYPE          ENTRY            OPC00700
C          SUBROUTINE    MCXTRN          SUBROUTINE    PRTIL            OPC00800
C          SUBROUTINE    BINBCD                                         OPC00900
C                                                                       OPC01000
      SUBROUTINE OPPAIR(BCDPR,OPERND)                                   OPC01100
C                                                                       OPC01200
      IMPLICIT INTEGER (A-Z)                                            OPC01300
C                                                                       OPC01400
C        1.    NAME TABLE AND TABLE LIMITS                              OPC01500
C                                                                       OPC01600
      INCLUDE 'NAMETB.INC'                                              OPC01710
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                OPC01750
C CNAMTB:      NAME TABLE OR DICTIONARY                                 OPC01850
C NUMBST:      NAMTBL INDEX OF BEGINNING OF NUMBER SECTION              OPC01900
C                                                                       OPC02300
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          OPC02400
C                                                                       OPC02500
      COMMON/NTBL/NTBL                                                  OPC02600
      DIMENSION NTBL(6)                                                 OPC02700
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE OPC02800
      EQUIVALENCE (NLAST,NTBL(4))                                       OPC02900
C*                                                                      OPC03000
C ARGUMENTS    BCDPR     OUTPUT STRING. BCD OF TYPE                     OPC03100
C                        DESIGNATION PLACED IN (1:8)                    OPC03200
C                        BCD OF SYMBOL (NAME OR NUMBER)                 OPC03300
C                        PLACED IN (9:20)                               OPC03400
C              OPERND    2 ELEMENT INPUT ARRAY.  TYPE                   OPC03500
C                        DESIGNATION CODE IN 1ST ELEMENT.               OPC03600
C                        NAME TABLE (NAMTBL) INDEX OF SYMBOL            OPC03700
C                        IN 2ND ELEMENT.                                OPC03800
C**                                                                     OPC03900
      DIMENSION OPERND(2)                                               OPC04000
      CHARACTER*20 BCDPR                                                OPC04010
      CHARACTER*8  MODIFY(8)                                            OPC04020
      CHARACTER*4  BLK                                                  OPC04030
      DATA MODIFY(1)/'0'/,                                              OPC04100
     1     MODIFY(2)/'$'/,                                              OPC04200
     2     MODIFY(3)/'$$'/,                                             OPC04300
     3     MODIFY(4)/'$$$'/,                                            OPC04400
     4     MODIFY(5)/'$$$$'/,                                           OPC04500
     5     MODIFY(6)/'$$$$$'/,                                          OPC04600
     6     MODIFY(7)/'$$$$$$'/,                                         OPC04610
     7     MODIFY(8)/'$$$$$$$'/                                         OPC04620
      DATA BLK/' '/                                                     OPC04700
      MODFER = OPERND(1)                                                OPC04800
      ARGMNT = OPERND(2)                                                OPC04900
      IF (MODFER) 100,200,300                                           OPC05000
C                                                                       OPC05100
C...  MODIFIER IS NEGATIVE (SUBSCRIPT)                                  OPC05200
C                                                                       OPC05300
  100 CALL BINBCD(-MODFER,BCDPR(1:8),COUNT)                             OPC05400
      GOTO 400                                                          OPC05500
C                                                                       OPC05600
C...  MODIFIER IS ZERO                                                  OPC05700
C                                                                       OPC05800
  200 BCDPR(1:8)=MODIFY(1)                                              OPC05900
      GOTO 400                                                          OPC06100
C                                                                       OPC06200
C...  MODIFIER IS POSITIVE (NO. OF DOLLAR SIGNS)                        OPC06300
C                                                                       OPC06400
  300 BCDPR(1:8)=MODIFY(MODFER+1)                                       OPC06500
      GOTO (500,400,400,400,600,500,500),MODFER                         OPC06700
C                                                                       OPC06800
C...  ARGUMENT IS VARIABLE OR PROCEDURE INDEX                           OPC06900
C                                                                       OPC07000
  400 BCDPR(9:20) = CNAMTB(ARGMNT)                                      OPC07100
      RETURN                                                            OPC07400
C                                                                       OPC07500
C...  ARGUMENT IS REAL OR INTEGER CONSTANT INDEX                        OPC07600
C                                                                       OPC07700
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           OPC07810
  500 ARGMNT=ARGMNT-NAMMAX                                              OPC07820
      IF((NLAST.GT.0).AND.(ARGMNT.GE.NUMBST))                           OPC07830
     /  CALL MCXTRN(5,ARGMNT,IDUMMY)                                    OPC07900
      BCDPR(9:20)=CNUMTB(ARGMNT)                                        OPC08000
      RETURN                                                            OPC08300
C                                                                       OPC08400
C...  ARGUMENT IS INTEGER CONSTANT                                      OPC08500
C                                                                       OPC08600
  600 CALL BINBCD(ARGMNT,BCDPR(9:16),COUNT)                             OPC08700
      BCDPR(17:20) = BLK                                                OPC08800
      RETURN                                                            OPC08900
       END                                                              OPC09000
**** SOURCE FILE : M0006663.V03   ***
*
C                                                                       PTH00100
C              FORTRAN SUBROUTINE PATH                                  PTH00200
C                                                                       PTH00300
C LINKAGE      SUBROUTINE PATH                                          PTH00400
C                                                                       PTH00500
C          SUBSIDIARIES                  CALLED BY                      PTH00600
C          TYPE          ENTRY           TYPE          ENTRY            PTH00700
C          SUBROUTINE    CALMCX          SUBROUTINE    INPUT            PTH00800
C          SUBROUTINE    MACLBL          SUBROUTINE    PRO020           PTH00900
C                                        SUBROUTINE    PRO026           PTH01000
C                                        SUBROUTINE    RECOG            PTH01100
C                                        SUBROUTINE    REPLAC           PTH01200
C                                                                       PTH01300
      SUBROUTINE PATH                                                   PTH01400
C                                                                       PTH01500
      IMPLICIT INTEGER (A-Z)                                            PTH01600
C                                                                       PTH01700
C        1.    NAME TABLE AND TABLE LIMITS                              PTH01800
C                                                                       PTH01900
      INCLUDE 'NAMETB.INC'                                              PTH02010
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                PTH02050
C CNAMTB:      NAME TABLE OR DICTIONARY                                 PTH02150
C                                                                       PTH02400
C       22.    MACRO PROCESSING VARIABLES                               PTH02500
C                                                                       PTH02600
      COMMON/MACXX1/MACXX1                                              PTH02700
      DIMENSION MACXX1(71)                                              PTH02800
      LOGICAL SHOULD                                                    PTH02900
C MCSAVP:      PRESENT NEST LEVEL DURING MACRO PROCESSING               PTH03000
      EQUIVALENCE (MCSAVP,MACXX1(5))                                    PTH03100
C WAY:         INDICATES TYPE OF MACRO PROCESSING                       PTH03200
      EQUIVALENCE (WAY,MACXX1(26))                                      PTH03300
C LNUSDP:      INDEX OF LAST LINUSD ENTRY                               PTH03400
      EQUIVALENCE (LNUSDP,MACXX1(51))                                   PTH03500
C NUMARG:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            PTH03600
      EQUIVALENCE (NUMARG,MACXX1(61))                                   PTH03700
C PATHLN:      CURRENT ACTUAL BRANCHING EXPRESSION. INITIALLY=NUMARG    PTH03800
      EQUIVALENCE (PATHLN,MACXX1(68))                                   PTH03900
C NXTLN:       POINTER TO NEXT LINUSD POSITION TO BE EXAMINED           PTH04000
      EQUIVALENCE (NXTLN,MACXX1(69))                                    PTH04100
C SHOULD:      MACRO INDICATOR. NORMALLY FALSE                          PTH04200
      EQUIVALENCE (SHOULD,MACXX1(70))                                   PTH04300
C PATHCH:      CURRENT ACTUAL BRANCHING EXPRESSION. INITIALLY=NUMARG    PTH04400
      EQUIVALENCE (PATHCH,MACXX1(71))                                   PTH04500
C                                                                       PTH04600
C      26A.    MACRO PROCESSING ARRAYS                                  PTH04700
C                                                                       PTH04800
      COMMON/MACXX7/MACXX7                                              PTH04900
      DIMENSION MACXX7(182),LINUSD(50)                                  PTH05000
C LINUSD:      NUMBERS OF EXPRESSIONS REQUIRING BRANCHING FOR MACROS    PTH05100
      EQUIVALENCE (LINUSD(1),MACXX7(1))                                 PTH05200
C**                                                                     PTH05300
      PATHLN=PATHLN+1                                                   PTH05400
      IF(NUMARG.EQ.0)GO TO 1                                            PTH05500
      IF(NXTLN.LE.LNUSDP)GO TO 3                                        PTH05600
    1 SHOULD=.TRUE.                                                     PTH05700
    2 RETURN                                                            PTH05800
    3 IF(PATHLN.NE.LINUSD(NXTLN))GO TO 1                                PTH05900
      PATHCH=PATHCH+1                                                   PTH06000
      CALL MACLBL(-MCSAVP,-PATHCH,I)                                    PTH06100
      NAMTBL(I)=1                                                       PTH06200
      J=0                                                               PTH06300
      IF(WAY.EQ.5)J=MCSAVP                                              PTH06400
      CALL CALMCX(I,J,2)                                                PTH06500
      SHOULD=.FALSE.                                                    PTH06600
      NXTLN = NXTLN + 1                                                 PTH06700
      RETURN                                                            PTH06800
       END                                                              PTH06900
**** SOURCE FILE : M0006665.W01   ***
*
C                                                                       P0R00100
C              FORTRAN SUBROUTINE PRO020                                P0R00200
C                                                                       P0R00300
C LINKAGE      SUBROUTINE PRO020(TIP)                                   P0R00400
C                                                                       P0R00500
C          SUBSIDIARIES                  CALLED BY                      P0R00600
C          TYPE          ENTRY           TYPE          ENTRY            P0R00700
C          SUBROUTINE    MATCH           SUBROUTINE    RECOG            P0R00800
C          SUBROUTINE    ARGCVT                                         P0R00900
C          INTEGER FCT.  MODE                                           P0R01000
C          LOGICAL FCT.  IFTMP                                          P0R01100
C          SUBROUTINE    ARGGEN                                         P0R01200
C          SUBROUTINE    PATH                                           P0R01300
C          SUBROUTINE    PRO021                                         P0R01400
C          SUBROUTINE    PUTTMP                                         P0R01500
C          SUBROUTINE    RESRVZ                                         P0R01600
C          SUBROUTINE    RLSLIN                                         P0R01700
C          INTEGER FCT.  SEARCH                                         P0R01800
C          SUBROUTINE    SETMOD                                         P0R01900
C          SUBROUTINE    CALLZZ                                         P0R02000
C          SUBROUTINE    TWOARG                                         P0R02100
C          SUBROUTINE    ALARM                                          P0R02200
C          INTEGER FCT.  GETTMP                                         P0R02300
C                                                                       P0R02400
      SUBROUTINE PRO020(TIP)                                            P0R02500
C                                                                       P0R02600
      IMPLICIT INTEGER (A-Z)                                            P0R02700
C                                                                       P0R02800
C              FUNCTION DECLARATION                                     P0R02900
C                                                                       P0R03000
      LOGICAL IFTMP                                                     P0R03100
C                                                                       P0R03200
C        1.    NAME TABLE AND TABLE LIMITS                              P0R03300
C                                                                       P0R03400
      INCLUDE 'NAMETB.INC'                                              P0R03510
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                P0R03550
C CNAMTB:      NAME TABLE OR DICTIONARY                                 P0R03650
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     P0R03700
C                                                                       P0R04100
C        2.    STACK AND POINTER STORAGE                                P0R04200
C                                                                       P0R04300
      COMMON/STKLST/STKLST                                              P0R04400
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      P0R04500
C TOP:         POINTER TO LAST STACK ENTRY                              P0R04600
      EQUIVALENCE (TOP,STKLST(1))                                       P0R04700
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             P0R04800
      EQUIVALENCE (ARGTOP,STKLST(2))                                    P0R04900
C STACK:       WORKING STACK                                            P0R05000
      EQUIVALENCE (STACK(1,1),STKLST(4))                                P0R05100
C ARGSTK:      ARGUMENT STACK                                           P0R05200
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               P0R05300
C                                                                       P0R05400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      P0R05500
C                                                                       P0R05600
      COMMON/CODE/CODE                                                  P0R05700
      DIMENSION CODE(150),NUMBER(2),GEOM(2),TEMP(2),PERMID(2),VBL(2),I  P0R05800
     *          DENT(2)                                                 P0R05900
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        P0R06000
      EQUIVALENCE (NUMBER(1),CODE(27))                                  P0R06100
C GEOM:        (1)=CODE CLASS 16000,(2)=NAMTBL INDEX OF 'GEOM  '        P0R06200
      EQUIVALENCE (GEOM(1),CODE(31))                                    P0R06300
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        P0R06400
      EQUIVALENCE (TEMP(1),CODE(33))                                    P0R06500
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        P0R06600
      EQUIVALENCE (PERMID(1),CODE(39))                                  P0R06700
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        P0R06800
      EQUIVALENCE (VBL(1),CODE(61))                                     P0R06900
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        P0R07000
      EQUIVALENCE (IDENT(1),CODE(69))                                   P0R07100
C                                                                       P0R07200
C        4.    PRODUCTION TABLE                                         P0R07300
C                                                                       P0R07400
      COMMON/SRCTBL/SRCTBL                                              P0R07500
      DIMENSION SRCTBL(502),META(50)                                    P0R07600
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   P0R07700
      EQUIVALENCE (META(1),SRCTBL(3))                                   P0R07800
C                                                                       P0R07900
C        5.    PROGRAM CONTROL FLAGS                                    P0R08000
C                                                                       P0R08100
      COMMON/FLAGS/FLAGS                                                P0R08200
      LOGICAL NEWSTM                                                    P0R08300
      DIMENSION FLAGS(4)                                                P0R08400
C NEWSTM:      TRUE WHEN NEXT SOURCE STATEMENT REQUESTED FOR PROCESS    P0R08500
      EQUIVALENCE (NEWSTM,FLAGS(2))                                     P0R08600
C                                                                       P0R08700
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         P0R08800
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    P0R08900
      COMMON/TMP/TXXXX                                                  P0R09000
      DIMENSION TXXXX(2,32)                                             P0R09100
C                                                                       P0R09200
C        9.    NAME TABLE POINTERS TO NUMBERS                           P0R09300
C                                                                       P0R09400
      COMMON/NUMPTR/NUMPTR                                              P0R09500
      DIMENSION NUMPTR(12)                                              P0R09600
C ZERO:        NAMTBL POINTER TO '0     '                               P0R09700
      EQUIVALENCE (ZERO,NUMPTR(1))                                      P0R09800
C ONE:         NAMTBL POINTER TO '1     '                               P0R09900
      EQUIVALENCE (ONE,NUMPTR(3))                                       P0R10000
C                                                                       P0R10100
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           P0R10200
C                                                                       P0R10300
      INCLUDE 'GMTY.INC'                                                P0R10400
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            P0R10700
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  P0R10900
C ARGMXY:      CONTAINS THE NAMTBL INDICES THAT REPLACE MINOR WORDS     P0R11100
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    P0R11300
C                                                                       P0R11500
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    P0R11600
C                                                                       P0R11700
      COMMON/CFSIZE/CFSIZE                                              P0R11800
      LOGICAL PARDEF                                                    P0R11900
      DIMENSION CFSIZE(205),MAXSIZ(2),CANSIZ(2,100)                     P0R12000
C CANTOP:      POINTER TO THE LAST CANSIZ ENTRY                         P0R12100
      EQUIVALENCE (CANTOP,CFSIZE(1))                                    P0R12200
C PARDEF:      TRUE WHEN PART PROGRAM CONTAINS PARAMETRIC SURFACES      P0R12300
      EQUIVALENCE (PARDEF,CFSIZE(2))                                    P0R12400
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                P0R12500
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 P0R12600
C CANSIZ:      NUMBER OF ITEMS A. NAMTBL INDEX OF EACH LARGE DATA ARRAY P0R12700
      EQUIVALENCE (CANSIZ(1,1),CFSIZE(6))                               P0R12800
C                                                                       P0R12900
C       17.    MODE CODES                                               P0R13000
C                                                                       P0R13100
      COMMON/MODX/MODX                                                  P0R13200
      DIMENSION MODX(32)                                                P0R13300
C PARSRF:      MODE CODE (15) FOR PARAMETRIC SURFACE                    P0R13400
      EQUIVALENCE (PARSRF,MODX(15))                                     P0R13500
C REAL:        MODE CODE (24) FOR A SCALAR                              P0R13600
      EQUIVALENCE (REAL,MODX(21))                                       P0R13700
C BOUNDS:      MODE CODE (27) FOR BOUNDS                                P0R13800
      EQUIVALENCE (BOUNDS,MODX(27))                                     P0R13900
C OBJECT:      MODE CODE (28) FOR OBJECT                                P0R14000
      EQUIVALENCE (OBJECT,MODX(28))                                     P0R14100
C                                                                       P0R14200
C       22.    MACRO PROCESSING VARIABLES                               P0R14300
C                                                                       P0R14400
      COMMON/MACXX1/MACXX1                                              P0R14500
      LOGICAL FINMAC,ENTRY,NESTG,SHOULD                                 P0R14600
      DIMENSION MACXX1(71)                                              P0R14700
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        P0R14800
      EQUIVALENCE (INTMED,MACXX1(22))                                   P0R14900
C MAJWRD:      CONTAINS ACTUAL MAJOR WORD                               P0R15000
      EQUIVALENCE (MAJWRD,MACXX1(23))                                   P0R15100
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING            P0R15200
      EQUIVALENCE (FINMAC,MACXX1(24))                                   P0R15300
C WAY:         INDICATES TYPE OF MACRO PROCESSING                       P0R15400
      EQUIVALENCE (WAY,MACXX1(26))                                      P0R15500
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION     P0R15600
      EQUIVALENCE (ENTRY,MACXX1(40))                                    P0R15700
C NESTG:       TRUE WHEN A NESTED GEOMETRIC EXPRESSION ENCOUNTERED      P0R15800
      EQUIVALENCE (NESTG,MACXX1(45))                                    P0R15900
C SHOULD:      MACRO INDICATOR. NORMALLY FALSE                          P0R16000
      EQUIVALENCE (SHOULD,MACXX1(70))                                   P0R16100
C                                                                       P0R16200
C       27.    OPERAND MODIFIERS                                        P0R16300
C                                                                       P0R16400
      COMMON/OPMOD/OPMOD                                                P0R16500
      DIMENSION OPMOD(6)                                                P0R16600
C DBLDLR:      CONTAINS OPERAND TYPE CODE 2                             P0R16700
      EQUIVALENCE (DBLDLR,OPMOD(3))                                     P0R16800
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             P0R16900
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     P0R17000
C                                                                       P0R17100
C       28.    OPERAND MODIFIERS                                        P0R17200
C                                                                       P0R17300
      COMMON/SUBLST/SUBLST                                              P0R17400
      DIMENSION SUBLST(136),APTXXX(120)                                 P0R17500
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            P0R17600
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 P0R17700
C UNDEF:       NAMTBL POINTER TO EXECUTION SUBROUTINE UNDEF             P0R17800
      EQUIVALENCE (UNDEF,SUBLST(74))                                    P0R17900
C                                                                       P0R18000
C       29.    CLASS CODE MODULI                                        P0R18100
C                                                                       P0R18200
      COMMON/MODULI/MODULI                                              P0R18300
      DIMENSION MODULI(2)                                               P0R18400
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    P0R18500
      EQUIVALENCE (MODULO,MODULI(1))                                    P0R18600
C MODHLF:      NORMAL MODE CODE LIMIT 500                               P0R18700
      EQUIVALENCE (MODHLF,MODULI(2))                                    P0R18800
C                                                                       P0R18900
C       44.    ERROR POSITION TABLE                                     P0R19000
C                                                                       P0R19100
      COMMON/ERRPOS/ERRPOS                                              P0R19200
      INTEGER ERRPOS,ESTACK,ERGSTK                                      P0R19300
      DIMENSION ERRPOS(302),ESTACK(100),ERGSTK(100)                     P0R19400
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    P0R19500
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               P0R19600
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   P0R19700
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               P0R19800
C*                                                                      P0R19900
C ARGUMENTS    TIP      CURRENT PRODUCTION NUMBER                       P0R20000
C                                                                       P0R20100
      DIMENSION II(3),MM(5),QQ(3),SLL(2),NORMAL(2)                      P0R20200
      DIMENSION  JLIST(11)                                              P0R20300
      CHARACTER*6 NODER,DERIV                                           P0R20350
      DATA NODER/'NODER'/,DERIV/'DERIV'/                                P0R20400
C**                                                                     P0R20500
      K = STACK(1,TOP-1)                                                P0R20600
      IF(K.GT.NAMMAX)GO TO 50                                           P0R20700
      IF (IFTMP(K)) CALL PUTTMP(MOD(NAMTBL(K),MODULO))                  P0R20800
      I=NAMTBL(K)/MODULO                                                P0R20900
      L=NAMTBL(K)-I*MODULO                                              P0R21000
      IF((I.EQ.IDENT(1)/MODULO).AND.(L.NE.0))                           P0R21100
     /CALL SETMOD(TOP-1,PERMID)                                         P0R21200
C     PLACE FIRST ARGUMENT IN ARGSTK                                    P0R21300
   50 ARGSTK(ARGTOP+1)=K                                                P0R21400
      ERGSTK(ARGTOP+1)=ESTACK(TOP-1)                                    P0R21500
      MAJWRD=STACK(1,TOP-3)                                             P0R21600
      KMODE = NAMTBL(MAJWRD)-GEOM(1)                                    P0R21700
      IF (KMODE.GT.MODHLF) KMODE=KMODE-MODHLF                           P0R21800
C... DETERMINE SIZE OF BOUNDS OR OBJECT CANONICAL FORM                  P0R21900
      IF(KMODE.EQ.BOUNDS)TXXXX(1,KMODE)=ARGTOP+2                        P0R22000
      IF(KMODE.EQ.OBJECT)TXXXX(1,KMODE)=2*ARGTOP+2                      P0R22100
      IF (TIP.EQ.37) GO TO 201                                          P0R22200
      RESULT=STACK(1,TOP-5)                                             P0R22300
      K = MODULO*(NAMTBL(RESULT)/MODULO)                                P0R22400
      IF((K.EQ.VBL(1)).OR.(K.EQ.TEMP(1))) GO TO 202                     P0R22500
      NAMTBL(RESULT) = VBL(1)+KMODE                                     P0R22600
      CALL RESRVZ(RESULT,KMODE,TXXXX(1,KMODE),1)                        P0R22700
      GO TO 202                                                         P0R22800
  201 RESULT=GETTMP(KMODE)                                              P0R22900
      NESTG=.TRUE.                                                      P0R23000
  202 ARGSTK(ARGTOP+2)=RESULT                                           P0R23100
      ARGTOP=ARGTOP+2                                                   P0R23200
      IF (INTMED .NE. 1)  GO TO 206                                     P0R23300
      WAY=1                                                             P0R23400
      IF(FINMAC)GO TO 204                                               P0R23500
      ERGSTK(100)=TOP-3                                                 P0R23600
      CALL MATCH                                                        P0R23700
      IF((.NOT.ENTRY).AND.(TIP.EQ.38))GO TO 998                         P0R23800
  228 KMODE=NAMTBL(MAJWRD)-GEOM(1)                                      P0R23900
      IF (KMODE.GT.MODHLF) KMODE=KMODE-MODHLF                           P0R24000
      GO TO 206                                                         P0R24100
  204 CALL PATH                                                         P0R24200
      IF(.NOT.SHOULD) GO TO 998                                         P0R24300
  206 L = MODE(RESULT)                                                  P0R24400
      IF(L.EQ.KMODE)GO TO 207                                           P0R24500
C                                                                       P0R24600
C... IF THIS VARIABLE HAS BEEN PREVIOUSLY DEFINED WITH ANOTHER MODE,    P0R24700
C... ISSUE ERROR AND TERMINATE PROCESSING.                              P0R24800
      CALL ALARM(1001,TOP-5,8,'PRO020  ')                               P0R24900
      GO TO 998                                                         P0R25000
C                                                                       P0R25100
C... IF THIS VARIABLE HAS BEEN PREVIOUSLY DEFINED WITH THE SAME MODE,   P0R25200
C... ISSUE WARNING AND CONTINUE PROCESSING                              P0R25300
  207 IF((K.EQ.VBL(1)).AND.(INTMED.EQ.0))                               P0R25400
     *                          CALL ALARM(50,TOP-5,4,'PRO020  ')       P0R25500
C....    BYPASS IDENTIFIER PROCESSING IF PARAMETRIC SURFACE DEFINITION  P0R25600
      IF(KMODE.EQ.PARSRF)GO TO 1000                                     P0R25700
      K=TOP+1                                                           P0R25800
      STACK(2,K) = - 1                                                  P0R25900
      DO 211 I=2,ARGTOP                                                 P0R26000
      K=K+1                                                             P0R26100
      L=ARGSTK(I-1)                                                     P0R26200
      ERRPT=1-I                                                         P0R26300
      IF (L .LE. NAMMAX)  GO TO 205                                     P0R26400
      IARG = REAL                                                       P0R26500
      GOTO 208                                                          P0R26600
  205 M = MODULO * (NAMTBL(L)/MODULO)                                   P0R26700
      IARG = NAMTBL(L)-M                                                P0R26800
      IF(IARG.GE.MODHLF)IARG=IARG-MODHLF                                P0R26900
  210 IF ((M .EQ. VBL(1)) .OR. (M .EQ. TEMP(1))) GO TO 208              P0R27000
      IF (M .EQ. PERMID(1))  GO TO 209                                  P0R27100
      IF (M.NE.NUMBER(1)) GOTO 999                                      P0R27200
      IARG = REAL                                                       P0R27300
      GOTO 208                                                          P0R27400
C                                                                       P0R27500
C...     PLACE NAMTBL POINTER OF INTEGER EQUIVALENT OF THE IDENTIFIER   P0R27600
C...         (POSX,XLARGE,ETC.) IN ARGSTK. IF ARGMXY CONTAINS 0 FOR     P0R27700
C...         THIS IDENTIFIER LEAVE ORIGINAL POINTER IN ARGSTK.          P0R27800
C                                                                       P0R27900
  209 IF(IARG.EQ.0) GO TO 999                                           P0R28000
      IF(ARGMXY(IARG).NE.0) ARGSTK(I-1)=ARGMXY(IARG)+NAMMAX             P0R28100
      IARG = IARG + 50                                                  P0R28200
  208 STACK(2,K)=PMIDTB(IARG)                                           P0R28300
  211 CONTINUE                                                          P0R28400
   90 L=GEOLOC(KMODE)                                                   P0R28500
      ERRPT=ARGTOP-1                                                    P0R28600
      KT2=K*2                                                           P0R28610
      I=SEARCH(STACK,KT2,GEOMTB(L),ERRPT)                               P0R28700
C                                                                       P0R28800
C... BRANCH ON HUNDREDS POSITION OF GEOMETRIC ACTION NUMBER.            P0R28900
C                                                                       P0R29000
      J = I/100 + 1                                                     P0R29100
      ERRP=ERRPT                                                        P0R29200
      GO TO (100,100,100,1000,2000),J                                   P0R29300
  100 CALL PRO021(RESULT,I,ERRP)                                        P0R29400
  998 IF(.NOT.ENTRY)GO TO 20                                            P0R29500
      ERGSTK(100)=0                                                     P0R29600
      CALL MATCH                                                        P0R29700
      IF(ENTRY)GO TO 228                                                P0R29800
C                                                                       P0R29900
C... ADJUST STACK AND EXIT  ..........................................  P0R30000
C                                                                       P0R30100
   20 IF(TIP-38)225,226,227                                             P0R30200
  225 TOP=TOP-4                                                         P0R30300
      NEST G = .FALSE.                                                  P0R30400
  230 STACK(1,TOP)=RESULT                                               P0R30500
      K = NAMTBL(RESULT)/MODULO                                         P0R30600
      STACK(2,TOP)=META(K)                                              P0R30700
  231 ARGTOP=0                                                          P0R30800
  995 RETURN                                                            P0R30900
  226 NEWSTM = .TRUE.                                                   P0R31000
      GO TO  231                                                        P0R31100
  227 TOP=TOP-6                                                         P0R31200
      GO TO  230                                                        P0R31300
C                                                                       P0R31400
  999 CALL ALARM(2001,ERRPT,8,'PRO020  ')                               P0R31500
 1001 CALL CALLZZ(UNDEF)                                                P0R31600
      CALL ARGCVT(RESULT)                                               P0R31700
      CALL RLSLIN                                                       P0R31800
      ARGTOP = 0                                                        P0R31900
      GO TO 998                                                         P0R32000
C                                                                       P0R32100
C        ***************************************************            P0R32200
C        **** PARAMETRIC SURFACE DEFINITION PROCESSING  ****            P0R32300
C        ***************************************************            P0R32400
C                                                                       P0R32500
 1000 IF (TIP.EQ.37) GO TO 1057                                         P0R32600
C...     PROCESS EACH PARAMETER IN THE PARSRF DEFINITION. CHECK FOR A   P0R32700
C...     VARIABLE OR IDENTIFIER-OTHERWISE ISSUE DIAGNOSTIC.             P0R32800
 1010 DO 1040 L=2,11                                                    P0R32900
      K=L                                                               P0R33000
      IF (K .GE. ARGTOP) GO TO 1042                                     P0R33100
      KARG=ARGTOP-K                                                     P0R33200
      J=ARGSTK(KARG)                                                    P0R33300
C...     SAVE NAME TABLE POINTER FOR FINAL CALL ARGUMENT LIST           P0R33400
      JLIST(K)=J                                                        P0R33500
      IF (K .EQ. 4) GO TO 1030                                          P0R33600
      IF(J.GT.NAMMAX)GO TO 1059                                         P0R33700
      IF (NAMTBL(J).EQ.VBL(1)+REAL)  GO TO 1040                         P0R33800
      IF(NAMTBL(J).NE.PERMID(1).AND.NAMTBL(J).NE.IDENT(1))GOTO 1059     P0R33900
C...     SET MODE OF THIS PARAMETER TO REAL VARIABLE.                   P0R34000
      NAMTBL(J) = VBL(1)+REAL                                           P0R34100
      CALL RESRVZ(J,REAL,TXXXX(1,REAL),1)                               P0R34200
      GO TO 1040                                                        P0R34300
C                                                                       P0R34400
C...     CHECK FOURTH ARGUMENT FOR DERIV OR NODER.                      P0R34500
C...     FOR DERIV-PASS ONE, FOR NODER-PASS ZERO.                       P0R34600
 1030 IF(J.GT.NAMMAX)GO TO 1060                                         P0R34700
      IF (CNAMTB(J).EQ.DERIV)                                           P0R34800
     +    JLIST(K)=ONE                                                  P0R34900
      IF (CNAMTB(J).EQ.NODER)                                           P0R35000
     +    JLIST(K)=ZERO                                                 P0R35100
      IF (JLIST(K).NE.ONE .AND. JLIST(K).NE.ZERO) GO TO 1060            P0R35200
C                                                                       P0R35300
 1040 CONTINUE                                                          P0R35400
C...     TOO MANY PARAMETERS IN THIS DEFINITION (LIMIT IS 10)           P0R35500
      GO TO 1061                                                        P0R35600
C                                                                       P0R35700
C...     PASS A TEMPORARY FOR ALL UNUSED SURFACE PARAMETERS             P0R35800
 1042 IF (K .EQ. 11) GO TO 1047                                         P0R35900
      IF (K .LT. 5) GO TO 1061                                          P0R36000
      DO 1045 L=K,10                                                    P0R36100
      KARG=GETTMP(REAL)                                                 P0R36200
      JLIST(L)=KARG                                                     P0R36300
 1045 CONTINUE                                                          P0R36400
C                                                                       P0R36500
C...     GENERATE A CALL TO APT101 WITH APPROPRIATE ARGUMENTS           P0R36600
 1047 CALL CALLZZ(APTXXX(95))                                           P0R36700
      CALL ARGCVT(ARGSTK(ARGTOP))                                       P0R36800
      DO 1050 L=2,10                                                    P0R36900
      CALL ARGCVT(JLIST(L))                                             P0R37000
      IF (L.EQ.4) CALL TWOARG(DBLDLR,ARGSTK(ARGTOP-1))                  P0R37100
 1050 CONTINUE                                                          P0R37200
C                                                                       P0R37300
C...     DEFINITION PROCESSING FINISHED                                 P0R37400
      ARGTOP=0                                                          P0R37500
      PARDEF=.TRUE.                                                     P0R37600
      CALL RLSLIN                                                       P0R37700
      GO TO 998                                                         P0R37800
C                                                                       P0R37900
C....    ERROR PROCESSING                                               P0R38000
C                                                                       P0R38100
 1057 IERR=7                                                            P0R38200
      ERRPT=TOP-3                                                       P0R38300
      GO TO 1070                                                        P0R38400
 1059 IERR=9                                                            P0R38500
      GO TO 1062                                                        P0R38600
 1060 IERR=10                                                           P0R38700
      GO TO 1062                                                        P0R38800
 1061 IERR=11                                                           P0R38900
 1062 ERRPT=-KARG                                                       P0R39000
C                                                                       P0R39100
 1070 CALL ALARM(IERR,ERRPT,8,'PRO020  ')                               P0R39200
C....    GENERATE A CALL TO UNDEF FOR THIS SURFACE                      P0R39300
      GO TO 1001                                                        P0R39400
C                                                                       P0R39500
C                                                                       P0R39600
C ********************************************************************  P0R39700
C... RULED SURFACE DEFINITION STATEMENT PROCESSING                      P0R39800
C ********************************************************************  P0R39900
C                                                                       P0R40000
C... COMPRESS ARGSTK TO REMOVE RESULT AND SET LENGTH = NUMBER OF        P0R40100
C... ARGUMENTS IN PART PROGRAMMING STATEMENT                            P0R40200
C                                                                       P0R40300
 2000 ARGTOP = ARGTOP - 1                                               P0R40400
      LENGTH = ARGTOP                                                   P0R40500
C                                                                       P0R40600
C... CHECK FOR VALID NUMBER OF ARGUMENTS                                P0R40700
C                                                                       P0R40800
      IF (((I .EQ. 401) .AND. (LENGTH .EQ. 5)) .OR. ((I .EQ. 402) .AND. P0R40900
     / (LENGTH .EQ. 8)))  GO TO 2005                                    P0R41000
      ERRPT=5+I/402*3-ARGTOP                                            P0R41100
      IF(ERRPT.GT.0)ERRPT=-1                                            P0R41200
      GO TO 999                                                         P0R41300
C                                                                       P0R41400
C... CALCULATE THE SIZE OF THE EXTERNAL CANONICAL FORM.                 P0R41500
C...                                                                    P0R41600
C... SIZE OF FORM GENERATED FROM 5 ARGUMENT STATEMENT = SIZE OF         P0R41700
C... SURFACE IN FIRST ARGUMENT + 39                                     P0R41800
C...                                                                    P0R41900
C... SIZE OF FORM GENERATED FROM 8 ARGUMENT STATEMENT = SIZE OF         P0R42000
C... SURFACE IN FIRST ARGUMENT + SIZE OF SURFACE IN FIFTH ARGUMENT + 48 P0R42100
C                                                                       P0R42200
 2005 NOWRDS = 42                                                       P0R42300
      IF(LENGTH.EQ.5) NOWRDS = 46                                       P0R42400
      DO 2030 J = 4,ARGTOP,4                                            P0R42500
      KK = ARGSTK(J)                                                    P0R42600
      ERRPT=J                                                           P0R42700
      IF(LENGTH.NE.5) GOTO 2006                                         P0R42800
      KK = ARGSTK(J+1)                                                  P0R42900
      ERRPT=J+1                                                         P0R43000
 2006 K = MODE (KK)                                                     P0R43100
      IF(K.NE.11) GO TO 2020                                            P0R43200
C                                                                       P0R43300
C... SURFACE IS A TABCYL. SEARCH FOR ITS SIZE IN CANSIZ.                P0R43400
C                                                                       P0R43500
      L = KK - (CANTOP*(KK/CANTOP))                                     P0R43600
      DO 2010  M = 1,CANTOP                                             P0R43700
      L = L + 1 - (CANTOP*(L/CANTOP))                                   P0R43800
      IF(CANSIZ(2,L).NE.KK) GO TO 2010                                  P0R43900
      NOWRDS = NOWRDS + CANSIZ(1,L) + 13                                P0R44000
      GO TO 2030                                                        P0R44100
 2010 CONTINUE                                                          P0R44200
C                                                                       P0R44300
C... TABCYL NOT FOUND. CALL ALARM.                                      P0R44400
C                                                                       P0R44500
      CALL ALARM(1026,-ERRPT,8,'PRO020  ')                              P0R44600
      GO TO 1001                                                        P0R44700
C                                                                       P0R44800
C... SURFACE IS NOT A TABCYL. GET ITS SIZE FROM TXXXX.                  P0R44900
C                                                                       P0R45000
 2020 NOWRDS = NOWRDS + TXXXX(1,K) + 13                                 P0R45100
 2030 CONTINUE                                                          P0R45200
C                                                                       P0R45300
C... CHECK IF THIS RLDSRF IS ONE OF THE TWO LARGEST LARGE DATA ARRAY    P0R45400
C... CANONICAL FORMS ENCOUNTERED AND IF SO, SAVE ITS SIZE IN MAXSIZ.    P0R45500
C                                                                       P0R45600
      IF(NOWRDS.LE.(IABS(MAXSIZ(1))))GO TO 2050                         P0R45700
      MAXSIZ(2) = MAXSIZ(1)                                             P0R45800
      MAXSIZ(1) = NOWRDS                                                P0R45900
      GO TO 2060                                                        P0R46000
 2050 IF(NOWRDS.GT.(IABS(MAXSIZ(2))))MAXSIZ(2)=NOWRDS                   P0R46100
C                                                                       P0R46200
C... GENERATE CALL TO APT033.                                           P0R46300
C                                                                       P0R46400
 2060 CALL CALLZZ(APTXXX(59))                                           P0R46500
      CALL ARGGEN                                                       P0R46600
      IF (LENGTH .EQ. 8)  GO TO 2080                                    P0R46700
C                                                                       P0R46800
C... 5 ARGUMENT FORMAT - ZERO ARGUMENTS 6-8 IN CALL TO APT033.          P0R46900
C                                                                       P0R47000
      DO 2070  J = 1,3                                                  P0R47100
 2070 CALL ARGCVT(ZERO)                                                 P0R47200
C                                                                       P0R47300
C... INSERT LENGTH AND RESULT AS ARGUMENTS 9 AND 10 OF CALL.            P0R47400
C                                                                       P0R47500
 2080 CALL TWOARG(QUIDLR,LENGTH)                                        P0R47600
      CALL ARGCVT(RESULT)                                               P0R47700
      CALL RLSLIN                                                       P0R47800
      GO TO 998                                                         P0R47900
      END                                                               P0R48000
**** SOURCE FILE : M0006666.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE PRO021                                M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE PRO021(RESULT,I,ERRP)                         M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    CALLZZ          SUBROUTINE    PRO020           M0000800
C          INTEGER FCT.  MODE                                           M0000900
C          INTEGER FCT.  NUMB                                           M0001000
C          INTEGER FCT.  GETTMP                                         M0001100
C          SUBROUTINE    OPCODE                                         M0001200
C          SUBROUTINE    PUTTMP                                         M0001300
C          SUBROUTINE    REFGEN                                         M0001400
C          SUBROUTINE    RLSLIN                                         M0001500
C          INTEGER FCT.  SEARCH                                         M0001600
C          SUBROUTINE    TWOARG                                         M0001700
C          SUBROUTINE    ARGCVT                                         M0001800
C          SUBROUTINE    ALARM                                          M0001900
C          SUBROUTINE    ARGGEN                                         M0002000
C                                                                       M0002100
      SUBROUTINE PRO021(RESULT,I,ERRP)                                  M0002200
C                                                                       M0002300
      IMPLICIT INTEGER (A-Z)                                            M0002400
C                                                                       M0002500
C        1.    NAME TABLE AND TABLE LIMITS                              M0002600
C                                                                       M0002700
      INCLUDE 'NAMETB.INC'                                              M0002810
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0002850
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0002950
C IFIXST:      NAMTBL INDEX OF BEGINNING OF FIXED POINT NUMBER SECTION  M0003000
C                                                                       M0003400
C        2.    STACK AND POINTER STORAGE                                M0003500
C                                                                       M0003600
      COMMON/STKLST/STKLST                                              M0003700
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      M0003800
C TOP:         POINTER TO LAST STACK ENTRY                              M0003900
      EQUIVALENCE (TOP,STKLST(1))                                       M0004000
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             M0004100
      EQUIVALENCE (ARGTOP,STKLST(2))                                    M0004200
C STACK:       WORKING STACK                                            M0004300
      EQUIVALENCE (STACK(1,1),STKLST(4))                                M0004400
C ARGSTK:      ARGUMENT STACK                                           M0004500
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               M0004600
C                                                                       M0004700
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0004800
C                                                                       M0004900
      COMMON/CODE/CODE                                                  M0005000
      DIMENSION CODE(150),GEOM(2)                                       M0005100
C GEOM:        (1)=CODE CLASS 16000,(2)=NAMTBL INDEX OF 'GEOM  '        M0005200
      EQUIVALENCE (GEOM(1),CODE(31))                                    M0005300
C                                                                       M0005400
C        9.    NAME TABLE POINTERS TO NUMBERS                           M0005500
C                                                                       M0005600
      COMMON/NUMPTR/NUMPTR                                              M0005700
      DIMENSION NUMPTR(12),IARG(8)                                      M0005800
C ZERO:        NAMTBL POINTER TO '0     '                               M0005900
      EQUIVALENCE (ZERO,NUMPTR(1))                                      M0006000
C ZEROPT:      NAMTBL POINTER TO '0.    '                               M0006100
      EQUIVALENCE (ZEROPT,NUMPTR(2))                                    M0006200
C ONE:         NAMTBL POINTER TO '1     '                               M0006300
      EQUIVALENCE (ONE,NUMPTR(3))                                       M0006400
C ONEPT:       NAMTBL POINTER TO '1.    '                               M0006500
      EQUIVALENCE (ONEPT,IARG(1),NUMPTR(4))                             M0006600
C TWO:         NAMTBL POINTER TO '2     '                               M0006700
      EQUIVALENCE (TWO,NUMPTR(5))                                       M0006800
C THREE:       NAMTBL POINTER TO '3     '                               M0006900
      EQUIVALENCE (THREE,NUMPTR(6))                                     M0007000
C                                                                       M0007100
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           M0007200
C                                                                       M0007300
      INCLUDE 'GMTY.INC'                                                M0007400
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            M0007600
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    M0007800
C                                                                       M0008000
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0008100
C                                                                       M0008200
      COMMON/IL/IL                                                      M0008300
      DIMENSION IL(21)                                                  M0008400
C FSUB:        CONTAINS COMMAND CODE ( 2) FOR FSUB COMMAND              M0008500
      EQUIVALENCE (FSUB,IL(2))                                          M0008600
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              M0008700
      EQUIVALENCE (MOVE,IL(19))                                         M0008800
C                                                                       M0008900
C       17.    MODE CODES                                               M0009000
C                                                                       M0009100
      COMMON/MODX/MODX                                                  M0009200
      DIMENSION MODX(32)                                                M0009300
C LINE:        MODE CODE ( 1) FOR LINE                                  M0009400
      EQUIVALENCE (LINE,MODX(1))                                        M0009500
C MATRIX:      MODE CODE (18) FOR MATRIX                                M0009600
      EQUIVALENCE (MATRIX,MODX(18))                                     M0009700
C POINT:       MODE CODE (19) FOR POINT                                 M0009800
      EQUIVALENCE (POINT,MODX(19))                                      M0009900
C VECTOR:      MODE CODE (20) FOR VECTOR                                M0010000
      EQUIVALENCE (VECTOR,MODX(20))                                     M0010100
C BOUNDS:      MODE CODE (27) FOR BOUNDS                                M0010200
      EQUIVALENCE (BOUNDS,MODX(27))                                     M0010300
C OBJECT:      MODE CODE (28) FOR OBJECT                                M0010400
      EQUIVALENCE (OBJECT,MODX(28))                                     M0010500
C                                                                       M0010600
C       28.    OPERAND MODIFIERS                                        M0010700
C                                                                       M0010800
      COMMON/SUBLST/SUBLST                                              M0010900
      DIMENSION SUBLST(136),APTXXX(120)                                 M0011000
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            M0011100
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 M0011200
C UNDEF:       NAMTBL POINTER TO EXECUTION SUBROUTINE UNDEF             M0011300
      EQUIVALENCE (UNDEF,SUBLST(74))                                    M0011400
C DEFEXT:      NAMTBL POINTER TO EXECUTION SUBROUTINE DEFEXT            M0011500
      EQUIVALENCE (DEFEXT,SUBLST(82))                                   M0011600
C                                                                       M0011700
C       29.    CLASS CODE MODULI                                        M0011800
C                                                                       M0011900
      COMMON/MODULI/MODULI                                              M0012000
      DIMENSION MODULI(2)                                               M0012100
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0012200
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0012300
C                                                                       M0012400
C       30.    NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCK   M0012500
C              NAMTBL POINTER TO FIRST CANONICAL FORMS IN EACH BLOCK    M0012600
      COMMON/BLKCFS/FIRST                                               M0012700
      DIMENSION FIRST(2,3)                                              M0012800
C                                                                       M0012900
C       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE             M0013000
C                                                                       M0013100
      COMMON/BGEOM/BGEOM                                                M0013200
      DIMENSION BGEOM(4)                                                M0013300
C IFBNDS:      VALUE 1 IF BOUNDED GEOMETRY IS INCLUDED IN PART PROGRAM  M0013400
      EQUIVALENCE (IFBNDS,BGEOM(1))                                     M0013500
C*                                                                      M0013600
C ARGUMENTS    RESULT  ARRAY TO CONTAIN CANONICAL FORM WHEN             M0013700
C                      I.L. IS EXECUTED                                 M0013800
C              I       CURRENT PRODUCTION NUMBER                        M0013900
C**                                                                     M0014000
      DIMENSION NARG(7,38),IARGZ(38),P(5),ICF(300)                      M0014100
      CHARACTER*12 ITWOPT                                               M0014110
      DATA ITWOPT/'2.          '/                                       M0014200
C                                                                       M0014300
C    STEUER DATEN FUER ERWEITERTE PUNKT/VECTOR-DEFINITIONEN             M0014400
      DATA NARG/                                                        M0014500
C   201: PT/IN, SC,P/F,  R       ;202:PT/IN, SC,P/F,  R,  R             M0014600
     1       -12, 3, 0, 2, 1, 0, 0,       -12, 4, 0, 3, 2, 1, 0,        M0014700
C   203: PT/IN, SS,  R,  R       ;204:PT/IN, SS,  R,  R,  R             M0014800
     2       -14, 3, 0, 2, 1, 0, 0,       -14, 4, 0, 3, 2, 1, 0,        M0014900
C   205: PT/IN, SS,P/F,  R,R,R   ;206:PT/IN,L/P, SC, PT                 M0015000
     3       -14, 5, 0, 3, 2, 1, 0,       -13, 2, 0, 0, 3, 1, 0,        M0015100
C   207: PT/IN, SS, PT, PT       ;208:PT/IN, SS,P/F, PT, PT             M0015200
     4       -16, 3, 0, 2, 0, 1, 0,       -16, 4, 0, 2, 0, 1, 0,        M0015300
C   209: PT/IN, SS, PT, VT, PT   ;210:PT/IN, SS,P/F, PT, VT, PT         M0015400
     5       -18, 4, 0, 3, 2, 1, 0,       -18, 5, 0, 3, 2, 1, 0,        M0015500
C   211: PT/IN, SS, PT, VT       ;212:PT/IN, SS,P/F, PT, VT             M0015600
     6       -17, 3, 0, 2, 1, 0, 0,       -17, 4, 0, 2, 1, 0, 0,        M0015700
C   213: PT/IN, SS, PT           ;214:PT/IN, SS,P/F, PT                 M0015800
     7       -15, 2, 0, 1, 0, 0, 0,       -15, 3, 0, 1, 0, 0, 0,        M0015900
C   215: VT/IN, SC,P/F,  R,TA1, U;216:VT/IN, SC,P/F,  R,  R,TA1, U      M0016000
     8       -12, 5, 2, 4, 3, 0, 1,       -12, 6, 2, 5, 4, 3, 1,        M0016100
C   217: VT/IN, SC,P/F,  R,TA1   ;218:VT/IN, SC,P/F,  R,  R,TA1         M0016200
     9       -12, 4, 1, 3, 2, 0, 0,       -12, 5, 1, 4, 3, 2, 0,        M0016300
C   219: VT/IN, SS,  R,  R,TA2, U;220:VT/IN, SS,  R,  R,  R,TA2, U      M0016400
     A       -14, 5, 2, 4, 3, 0, 1,       -14, 6, 2, 5, 4, 3, 1,        M0016500
C   221: VT/IN,SS,P/F,R,R,R,TA2,U;222:VT/IN, SS,  R,  R,TA2             M0016600
     A       -14, 7, 2, 5, 4, 3, 1,       -14, 4, 1, 3, 2, 0, 0,        M0016700
C   223: VT/IN, SS,  R,  R, R,TA2;224:VT/IN, SS,P/F,  R,  R,  R,TA2     M0016800
     B       -14, 5, 1, 4, 3, 2, 0,       -14, 6, 1, 4, 3, 2, 0,        M0016900
C   225: VT/IN,L/P, SC, PT,TA1   ;226:VT/IN,L/P, SC, PT,TA1, U          M0017000
     B       -13, 3, 1, 0, 4, 2, 0,       -13, 4, 2, 0, 5, 3, 1,        M0017100
C   227: VT/IN, SS, PT,TA2       ;228:VT/IN, SS, PT,TA2, U              M0017200
     C       -15, 3, 1, 2, 0, 0, 0,       -15, 4, 2, 3, 0, 0, 1,        M0017300
C   229: VT/IN, SS,P/F, PT,TA2   ;230:VT/IN, SS, PT, PT,TA2             M0017400
     D       -15, 4, 1, 2, 0, 0, 0,       -16, 4, 1, 3, 0, 2, 0,        M0017500
C   231: VT/IN, SS, PT, PT,TA2, U;232:VT/IN, SS,P/F, PT, PT,TA2         M0017600
     E       -16, 5, 2, 4, 0, 3, 1,       -16, 5, 1, 3, 0, 2, 0,        M0017700
C   233: VT/IN, SS, PT, VT,TA2   ;234:VT/IN, SS, PT, VT,TA2, U          M0017800
     F       -17, 4, 1, 3, 2, 0, 0,       -17, 5, 2, 4, 3, 0, 1,        M0017900
C   235: VT/IN, SS,P/F, PT,VT,TA2;236:VT/IN, SS, PT, VT, PT,TA2         M0018000
     G       -17, 5, 1, 3, 2, 0, 0,       -18, 5, 1, 4, 3, 2, 0,        M0018100
C   237: VT/IN,SS,PT,VT, PT,TA2,U;238:VT/IN, SS,P/F, PT, VT, PT,TA2     M0018200
     H       -18, 6, 2, 5, 4, 3, 1,       -18, 6, 1, 4, 3, 2, 0/        M0018300
C  BEDEUTUNG DER PARAMETER-KUERZEL: IN=INTOF , SC=SCURV , SS=SSURF ,    M0018400
C     P/F=PARAM/FLOW , R=REAL , PT=POINT , VT=VECTOR , L/P=LINE/PLANE , M0018500
C     TA1=TANSPL/CRSSPL/NORMAL/BINORM , TA2=TANSPL/CRSSPL/NORMAL        M0018600
C   STEUER-ARGUMENT-ERZEUGUNG MITTELS ZEIGER AUS COMMON/NUMPTR/         M0018700
      DATA  IARGZ/4,5,4,5,6,4,4,5,5,6,4,5,3,4,                          M0018800
     *          6,7,5,6,6,7,8,5,6,7,5,6,                                M0018900
     *          4,5,5,5,6,6,5,6,6,6,7,7/                                M0019000
      DATA KGT/0/,P/5*1/                                                M0019100
C                                                                       M0019200
C     ANZAHL DER ARGUMENTE                                              M0019300
      DATA ICF/                                                         M0019400
C ICF                ( 5)           (10)           (15)           (20)  M0019500
     1     4, 4, 3, 5, 5, 5, 3, 4, 4,-2, 5, 5, 5, 4, 4, 3, 4,-1,-4, 4,  M0019600
C ICF                (25)           (30)           (35)           (40)  M0019700
     2     4, 4, 3, 5, 4, 4, 3, 5,-3, 4, 5, 5, 6, 4, 4, 6, 6, 7,11, 5,  M0019800
C ICF                (45)           (50)           (55)           (60)  M0019900
     3     3, 3, 4,-1, 3, 5, 5, 5,-1, 5, 7,-4, 5, 6, 7, 7, 8, 8,-1, 4,  M0020000
C ICF                (65)           (70)           (75)           (80)  M0020100
     4     6, 5, 3, 4, 5,-1,-1,-1, 7, 7, 6,-1,-1,-1, 6, 5, 5, 4, 5, 3,  M0020200
C ICF                (85)           (90)                         (100)  M0020300
     5     5,-1, 7, 9,-1,-5,-6,-1, 7,-9,       9* -1              , 7,  M0020400
C ICF               (105)          (110)                                M0020500
     6     4, 3, 5, 4, 7, 4, 5, 5,13, 3, 2, 2, 5, 37* -1             ,  M0020600
C ICF               (155)          (160)          (165)          (170)  M0020700
     7     6, 5, 4, 4, 6, 9, 8, 7, 7, 5, 8, 7, 6, 6, 4, 7, 6, 5, 5, 4,  M0020800
C ICF               (175)          (180)          (185)                 M0020900
     8     7, 6, 5, 5, 4, 3, 4, 8,12,11,10, 6, 5, 5,-7,-8, 14* -1    ,  M0021000
C ICF               (205)          (210)          (215)          (220)  M0021100
     9     5, 6, 5, 6, 7, 5, 5, 6, 6, 7, 5, 6, 4, 5, 7, 8, 6, 7, 7, 8,  M0021200
C ICF               (225)          (230)          (235)                 M0021300
     A     9, 6, 7, 8, 6, 7, 5, 6, 6, 6, 7, 7, 6, 7, 7, 7, 8, 8,62* -1 /M0021400
C     PRODUKTION NICHT GEFUNDEN                                         M0021500
      ERRPT=-ERRP                                                       M0021600
      IF(ERRPT.GE.0)ERRPT=-1                                            M0021700
      IF(I.EQ.200) GOTO 999                                             M0021800
C     PRUEFEN DER ANZAHL DER ARGUMENTE                                  M0021900
      I1=ICF(I)                                                         M0022000
      IF(I1.LT.0) GOTO 91                                               M0022100
      IF(I1.EQ.ARGTOP) GOTO 100                                         M0022200
      ERRPT=I1-ARGTOP                                                   M0022300
      GOTO 998                                                          M0022400
   91 I1=-I1                                                            M0022500
      GOTO (998,92,93,94,100,100,100,100,90),I1                         M0022600
      GOTO 998                                                          M0022700
   90 I=27                                                              M0022800
      IF(ARGTOP.EQ.5) GOTO 100                                          M0022900
      GOTO 998                                                          M0023000
   92 IF(ARGTOP.EQ.6) GOTO 100                                          M0023100
      GOTO 95                                                           M0023200
   93 IF(ARGTOP.EQ.3) GOTO 100                                          M0023300
      GOTO 95                                                           M0023400
   94 IF(ARGTOP.EQ.4) GOTO 100                                          M0023500
   95 ERRPT=7-I1/3-ARGTOP                                               M0023600
      IF(ERRPT.GT.0)ERRPT=-1                                            M0023700
      IF(ARGTOP.NE.5) GOTO 998                                          M0023800
C                                                                       M0023900
  100 IF(I.GE.100) GOTO 151                                             M0024000
  101 CALL CALLZZ(APTXXX(I))                                            M0024100
      CALL ARGCVT(RESULT)                                               M0024200
      IF(I.GT.50) GOTO 102                                              M0024300
      GO TO (2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,         M0024400
     *       2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,         M0024500
     *       2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,         M0024600
     *       2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,         M0024700
     *       2041,2042,2043,2044,2045,2046,2047,2048,2049,2050),I       M0024800
  102 I=I-50                                                            M0024900
      GO TO (2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,         M0025000
     *       2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,         M0025100
     *       2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,         M0025200
     *       2081,2082,2083,2084,2085,2086,2087,2088,2089),I            M0025300
C    FEHLERAUSGANG FUER PRODUKTIONSNUMMERN 91 BIS 99                    M0025400
      GOTO  998                                                         M0025500
C   SONDERDEFINITIONEN                                                  M0025600
  151 IF(I.GT.200)GOTO 2201                                             M0025700
      IF(I.GT.150)GOTO 152                                              M0025800
C                                                                       M0025900
      I=I-99                                                            M0026000
      GO TO (2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,         M0026100
     *       2110,2111,2112,2113),I                                     M0026200
      GOTO  999                                                         M0026300
C MACRO-DEFINITIONEN UND SONSTIGES                                      M0026400
  152 I=I-150                                                           M0026500
      GO TO (2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,         M0026600
     *       2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,         M0026700
     *       2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,         M0026800
     *       2181,2182,2183,2184,2185,2186),I                           M0026900
      GOTO  999                                                         M0027000
C  FEHLERAUSGANG                                                        M0027100
 2018 CONTINUE                                                          M0027200
 2044 CONTINUE                                                          M0027300
 2049 CONTINUE                                                          M0027400
 2059 CONTINUE                                                          M0027500
 2066 CONTINUE                                                          M0027600
 2067 CONTINUE                                                          M0027700
 2068 CONTINUE                                                          M0027800
 2072 CONTINUE                                                          M0027900
 2073 CONTINUE                                                          M0028000
 2074 CONTINUE                                                          M0028100
 2082 CONTINUE                                                          M0028200
 2085 CONTINUE                                                          M0028300
 2088 CONTINUE                                                          M0028400
  999 CALL ALARM(2001,ERRPT,8,'PRO021  ')                               M0028500
  997 CALL CALLZZ(UNDEF)                                                M0028600
      CALL ARGCVT(RESULT)                                               M0028700
      CALL RLSLIN                                                       M0028800
      ARGTOP = 0                                                        M0028900
      RETURN                                                            M0029000
C                                                                       M0029100
  998 CALL ALARM(2052,ERRPT,8,'PRO021  ')                               M0029200
      GOTO 997                                                          M0029300
C                                                                       M0029400
C   1.ARGUMENT AUSLASSEN,SONST ALLE AUSGEBEN --- VERARBEITUNGSART A     M0029500
 2001 CONTINUE                                                          M0029600
 2003 CONTINUE                                                          M0029700
 2004 CONTINUE                                                          M0029800
 2006 CONTINUE                                                          M0029900
 2014 CONTINUE                                                          M0030000
 2017 CONTINUE                                                          M0030100
 2023 CONTINUE                                                          M0030200
 2028 CONTINUE                                                          M0030300
 2030 CONTINUE                                                          M0030400
 2036 CONTINUE                                                          M0030500
 2037 CONTINUE                                                          M0030600
 2040 CONTINUE                                                          M0030700
 2042 CONTINUE                                                          M0030800
 2048 CONTINUE                                                          M0030900
 2053 CONTINUE                                                          M0031000
 2060 CONTINUE                                                          M0031100
 2062 CONTINUE                                                          M0031200
 2077 CONTINUE                                                          M0031300
 2080 CONTINUE                                                          M0031400
 2081 CONTINUE                                                          M0031500
20011 ARGTOP=ARGTOP-2                                                   M0031600
      CALL ARGGEN                                                       M0031700
      CALL RLSLIN                                                       M0031800
      RETURN                                                            M0031900
C  VORLETZTES ARGUMENT AUSLASSEN                  VERARBEITUNGSART B    M0032000
 2057 CONTINUE                                                          M0032100
 2058 CONTINUE                                                          M0032200
 2084 CONTINUE                                                          M0032300
      CALL ARGCVT (ARGSTK(7))                                           M0032400
 2056 CONTINUE                                                          M0032500
      CALL ARGCVT (ARGSTK(6))                                           M0032600
 2055 CONTINUE                                                          M0032700
20551 CALL ARGCVT (ARGSTK(5))                                           M0032800
 2050 CONTINUE                                                          M0032900
 2054 CONTINUE                                                          M0033000
20501 CALL ARGCVT (ARGSTK(4))                                           M0033100
 2002 CONTINUE                                                          M0033200
 2008 CONTINUE                                                          M0033300
 2009 CONTINUE                                                          M0033400
 2012 CONTINUE                                                          M0033500
 2013 CONTINUE                                                          M0033600
 2019 CONTINUE                                                          M0033700
 2020 CONTINUE                                                          M0033800
 2022 CONTINUE                                                          M0033900
 2026 CONTINUE                                                          M0034000
 2031 CONTINUE                                                          M0034100
20571 CALL ARGCVT (ARGSTK(3))                                           M0034200
      CALL ARGCVT (ARGSTK(1))                                           M0034300
      ARGTOP=0                                                          M0034400
      CALL RLSLIN                                                       M0034500
      RETURN                                                            M0034600
C    ALLE ARGUMENTE AUSGEBEN                VERARBEITUNGSART C          M0034700
 2005 CONTINUE                                                          M0034800
 2007 CONTINUE                                                          M0034900
 2011 CONTINUE                                                          M0035000
 2015 CONTINUE                                                          M0035100
 2016 CONTINUE                                                          M0035200
 2024 CONTINUE                                                          M0035300
 2025 CONTINUE                                                          M0035400
 2032 CONTINUE                                                          M0035500
 2033 CONTINUE                                                          M0035600
 2034 CONTINUE                                                          M0035700
 2035 CONTINUE                                                          M0035800
 2038 CONTINUE                                                          M0035900
 2039 CONTINUE                                                          M0036000
 2043 CONTINUE                                                          M0036100
 2063 CONTINUE                                                          M0036200
 2064 CONTINUE                                                          M0036300
 2078 CONTINUE                                                          M0036400
 2079 CONTINUE                                                          M0036500
 2083 CONTINUE                                                          M0036600
 2089 CONTINUE                                                          M0036700
20051 ARGTOP=ARGTOP-1                                                   M0036800
      CALL ARGGEN                                                       M0036900
      CALL RLSLIN                                                       M0037000
      RETURN                                                            M0037100
C  LINE/(ATA/SLO),R,INTERC,(XA/YA),R   VERARBEITUNGSART D               M0037200
 2010 CONTINUE                                                          M0037300
      IF(ARGTOP.EQ.5) GO TO 20101                                       M0037400
      ARGSTK(3)=ARGSTK(2)                                               M0037500
      GO TO 20551                                                       M0037600
20101 ARGSTK(2)=TWO                                                     M0037700
      ARGTOP=ARGTOP-1                                                   M0037800
      CALL ARGGEN                                                       M0037900
      CALL RLSLIN                                                       M0038000
      RETURN                                                            M0038100
C  2. ARGUMENT ELIMINIEREN             VERARBEITUNGSART E               M0038200
 2046 CONTINUE                                                          M0038300
 2047 CONTINUE                                                          M0038400
 2065 CONTINUE                                                          M0038500
 2076 CONTINUE                                                          M0038600
      ARGSTK(3)= ARGSTK(2)                                              M0038700
      GO TO 20501                                                       M0038800
C  SPEZIAL: UMSPEICHERN DER ARGUMENTE  VERARBEITUNGSART F               M0038900
 2021 CONTINUE                                                          M0039000
      ARGSTK(2)=ARGSTK(1)                                               M0039100
      ARGSTK(1)=ARGSTK(3)                                               M0039200
      GOTO 20011                                                        M0039300
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART G               M0039400
 2029 CONTINUE                                                          M0039500
      IF (ARGTOP .GT. 3) GO TO 20571                                    M0039600
      GO TO 20051                                                       M0039700
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART H               M0039800
 2041 CONTINUE                                                          M0039900
      ARGSTK(3)=ARGSTK(2)                                               M0040000
      ARGSTK(2)=ARGSTK(1)                                               M0040100
      ARGSTK(1)=ONE                                                     M0040200
      CALL ARGGEN                                                       M0040300
      CALL RLSLIN                                                       M0040400
      RETURN                                                            M0040500
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART I               M0040600
 2051 CONTINUE                                                          M0040700
      CALL ARGCVT(ARGSTK(6))                                            M0040800
      GO TO 20501                                                       M0040900
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART J               M0041000
 2052 CONTINUE                                                          M0041100
      IF(ARGTOP.EQ.4) GO TO 20051                                       M0041200
      ARGSTK(1) = ARGSTK(2)                                             M0041300
      GO TO 20501                                                       M0041400
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART K               M0041500
 2061 CONTINUE                                                          M0041600
      CALL ARGCVT (ARGSTK(1))                                           M0041700
      CALL ARGCVT (ARGSTK(4))                                           M0041800
      CALL ARGCVT (ARGSTK(2))                                           M0041900
      ARGTOP=0                                                          M0042000
      CALL RLSLIN                                                       M0042100
      RETURN                                                            M0042200
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART L               M0042300
 2069 CONTINUE                                                          M0042400
      DO 20691 J=1,5                                                    M0042500
20691 ARGSTK(J)= ARGSTK(J+1)                                            M0042600
      ARGTOP= 5                                                         M0042700
      CALL ARGGEN                                                       M0042800
      CALL ARGCVT(TWO)                                                  M0042900
      CALL RLSLIN                                                       M0043000
      RETURN                                                            M0043100
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART M               M0043200
 2071 CONTINUE                                                          M0043300
      ARGTOP= 5                                                         M0043400
      CALL ARGGEN                                                       M0043500
      CALL ARGCVT(ONE)                                                  M0043600
      CALL RLSLIN                                                       M0043700
      RETURN                                                            M0043800
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART N               M0043900
 2070 CONTINUE                                                          M0044000
      CALL ARGCVT (ARGSTK(6))                                           M0044100
      CALL ARGCVT (ARGSTK(5))                                           M0044200
      CALL ARGCVT (ARGSTK(3))                                           M0044300
      CALL ARGCVT (ARGSTK(2))                                           M0044400
      ARGTOP=0                                                          M0044500
      CALL RLSLIN                                                       M0044600
      RETURN                                                            M0044700
C  SPEZIALVERARBEITUNG                 VERARBEITUNGSART O               M0044800
 2075 CONTINUE                                                          M0044900
      ARGTOP=ARGTOP-3                                                   M0045000
      CALL ARGGEN                                                       M0045100
      CALL RLSLIN                                                       M0045200
      RETURN                                                            M0045300
C  POINT/CLDATA,N  = PR. 27 ; POINT/CLDATA,N1,TP,N1  = PR. 90           M0045400
C  VECTOR/CLDATA,N = PR. 27 ; VECTOR/CLDATA,N1,TV,N2= PR. 90            M0045500
20271 ARGSTK(ARGTOP-1)=ZERO                                             M0045600
C   UNTERSUCHUNG OB VECTOR                                              M0045700
      KMODE=NAMTBL(STACK(1,TOP-3))-GEOM(1)                              M0045800
      IF(KMODE.GT.MODHLF)KMODE=KMODE-MODHLF                             M0045900
      IF(KMODE.EQ.VECTOR)ARGSTK(ARGTOP-1)=ONE                           M0046000
      GOTO 20051                                                        M0046100
 2027 IF(ARGTOP.EQ.3)GOTO 20272                                         M0046200
      L=ARGSTK(2)                                                       M0046300
      ARGSTK(2)=ZERO+MOD(NAMTBL(L),10)                                  M0046400
      GOTO 20271                                                        M0046500
20272 ARGTOP=5                                                          M0046600
      ARGSTK(5)=ARGSTK(3)                                               M0046700
      ARGSTK(4)=ARGSTK(2)                                               M0046800
      ARGSTK(3)=ZERO                                                    M0046900
      ARGSTK(2)=ZERO                                                    M0047000
      GOTO 20271                                                        M0047100
C   POINT/PATERN,N   PATERNPUNKT                                        M0047200
 2045 GOTO 20051                                                        M0047300
C   VECTOR/R,R,R,R,R,R                                                  M0047400
 2100 CONTINUE                                                          M0047500
      J=RESULT                                                          M0047600
      IREF=6                                                            M0047700
      DO 21002 L=1,3                                                    M0047800
      CALL OPCODE(FSUB)                                                 M0047900
      CALL TWOARG(-L,J)                                                 M0048000
      M=4-L                                                             M0048100
      DO 21001 N=1,2                                                    M0048200
      CALL ARGCVT(ARGSTK(M))                                            M0048300
21001 M=M+3                                                             M0048400
21002 CALL RLSLIN                                                       M0048500
      ARGTOP = 0                                                        M0048600
      CALL REFGEN(3,RESULT)                                             M0048700
      RETURN                                                            M0048800
C    POINT/R,R,R                                                        M0048900
 2101 CALL OPCODE(MOVE)                                                 M0049000
      CALL ARGGEN                                                       M0049100
      CALL RLSLIN                                                       M0049200
      ARGTOP = 0                                                        M0049300
      CALL REFGEN(1,RESULT)                                             M0049400
      RETURN                                                            M0049500
C    POINT/R,R                                                          M0049600
 2102 CALL OPCODE(MOVE)                                                 M0049700
      CALL ARGGEN                                                       M0049800
      CALL RLSLIN                                                       M0049900
      ARGTOP = 0                                                        M0050000
      CALL CALLZZ(APTXXX(49))                                           M0050100
      CALL ARGCVT(RESULT)                                               M0050200
      CALL RLSLIN                                                       M0050300
      RETURN                                                            M0050400
C   CIRCLE/R,R,R,R                                                      M0050500
 2103 CONTINUE                                                          M0050600
      J=4                                                               M0050700
21031 CALL OPCODE(MOVE)                                                 M0050800
      CALL ARGCVT (RESULT)                                              M0050900
      CALL ARGCVT (ARGSTK(J))                                           M0051000
      CALL ARGCVT (ARGSTK(J-1))                                         M0051100
      CALL ARGCVT (ARGSTK(J-2))                                         M0051200
21032 CALL ARGCVT(ZEROPT)                                               M0051300
      CALL ARGCVT(ZEROPT)                                               M0051400
      CALL ARGCVT(ONEPT)                                                M0051500
      CALL ARGCVT (ARGSTK(1))                                           M0051600
      CALL RLSLIN                                                       M0051700
      ARGTOP = 0                                                        M0051800
      CALL REFGEN(2,RESULT)                                             M0051900
      RETURN                                                            M0052000
C   CIRCLE/CENTER,R,R,R,RADIUS,R                                        M0052100
 2104 CONTINUE                                                          M0052200
      CALL OPCODE(MOVE)                                                 M0052300
      CALL ARGCVT (RESULT)                                              M0052400
      CALL ARGCVT (ARGSTK(3))                                           M0052500
      CALL ARGCVT (ARGSTK(2))                                           M0052600
      CALL ARGCVT(ZEROPT)                                               M0052700
      GO TO 21032                                                       M0052800
C   CIRCLE/R,R,R                                                        M0052900
 2105 CONTINUE                                                          M0053000
      J= 5                                                              M0053100
      GO TO 21031                                                       M0053200
C   VECTOR/R,R,R    /   VECTOR/UNIT,R,R,R                               M0053300
 2106 CONTINUE                                                          M0053400
 2107 CALL OPCODE (MOVE)                                                M0053500
      CALL ARGCVT (RESULT)                                              M0053600
      CALL ARGCVT (ARGSTK(3))                                           M0053700
      CALL ARGCVT (ARGSTK(2))                                           M0053800
      CALL ARGCVT (ARGSTK(1))                                           M0053900
      CALL RLSLIN                                                       M0054000
      CALL REFGEN(3,RESULT)                                             M0054100
      IF(ARGTOP.EQ.4)GOTO 21071                                         M0054200
      CALL CALLZZ (APTXXX(23))                                          M0054300
      CALL ARGCVT (RESULT)                                              M0054400
      CALL ARGCVT (RESULT)                                              M0054500
      CALL RLSLIN                                                       M0054600
21071 ARGTOP = 0                                                        M0054700
      RETURN                                                            M0054800
C    SPHERE/R,R,R,R                                                     M0054900
 2108 CALL OPCODE (MOVE)                                                M0055000
      CALL ARGGEN                                                       M0055200
      CALL RLSLIN                                                       M0055300
      CALL REFGEN(1,RESULT)                                             M0055400
      RETURN                                                            M0055500
C    MATRIX/R,R,R,R,R,R,R,R,R,R,R,R                                     M0055600
 2109 CALL OPCODE (MOVE)                                                M0055700
      CALL ARGGEN                                                       M0055800
      CALL RLSLIN                                                       M0055900
21091 CALL CALLZZ(DEFEXT)                                               M0056000
      CALL ARGCVT(RESULT)                                               M0056100
      CALL RLSLIN                                                       M0056200
      RETURN                                                            M0056300
C    MATRIX/SCALE,R                                                     M0056400
 2110 CALL OPCODE (MOVE)                                                M0056500
      CALL ARGCVT (RESULT)                                              M0056600
      CALL ARGCVT (ARGSTK(1))                                           M0056700
      DO 21102 J=1,2                                                    M0056800
      DO 21101 L=1,4                                                    M0056900
21101 CALL ARGCVT(ZEROPT)                                               M0057000
21102 CALL ARGCVT(ARGSTK(1))                                            M0057100
      CALL ARGCVT(ZEROPT)                                               M0057200
      CALL RLSLIN                                                       M0057300
      ARGTOP=0                                                          M0057400
      GOTO 21091                                                        M0057500
C    LINE/XAXIS                                                         M0057600
 2111 CALL OPCODE (MOVE)                                                M0057700
      CALL ARGCVT (RESULT)                                              M0057800
      CALL ARGCVT(ZEROPT)                                               M0057900
      CALL ARGCVT(ONEPT)                                                M0058000
21111 CALL ARGCVT(ZEROPT)                                               M0058100
      CALL ARGCVT(ZEROPT)                                               M0058200
      CALL RLSLIN                                                       M0058300
      CALL REFGEN(4,RESULT)                                             M0058400
      ARGTOP=0                                                          M0058500
      RETURN                                                            M0058600
C    LINE/YAXIS                                                         M0058700
 2112 CALL OPCODE (MOVE)                                                M0058800
      CALL ARGCVT (RESULT)                                              M0058900
      CALL ARGCVT(ONEPT)                                                M0059000
      CALL ARGCVT(ZEROPT)                                               M0059100
      GOTO 21111                                                        M0059200
C    LINE/PT,ATANGL/SLOPE,R,YAXIS                                       M0059300
 2113 ARGSTK(1)=GETTMP(LINE)                                            M0059400
      CALL OPCODE (MOVE)                                                M0059500
      CALL ARGCVT (ARGSTK(1))                                           M0059600
      CALL ARGCVT(ONEPT)                                                M0059700
      CALL ARGCVT(ZEROPT)                                               M0059800
      CALL ARGCVT(ZEROPT)                                               M0059900
      CALL ARGCVT(ZEROPT)                                               M0060000
      CALL RLSLIN                                                       M0060100
      CALL REFGEN(4,ARGSTK(1))                                          M0060200
      CALL PUTTMP(LINE)                                                 M0060300
      I=11                                                              M0060400
      GOTO 100                                                          M0060500
C **********************************************************************M0060600
C   MEHRFACHTRANSFORMATION                                              M0060700
C... BEHANDLUNG DER 2. MATRIX:                                          M0060800
C                                                                       M0060900
C  2.MATRIX SCHON DEFINIERT                                             M0061000
 2155 CONTINUE                                                          M0061100
 2160 CONTINUE                                                          M0061200
 2165 CONTINUE                                                          M0061300
 2170 IZRES2=ARGSTK(1)                                                  M0061400
C  MULTIPLIKATIONSSCHALTER AUF NORMAL STELLEN                           M0061500
      I66=ONE                                                           M0061600
      GOTO 701                                                          M0061700
C  2.MATRIX : TRANSL,X,Y,Z                                              M0061800
 2151 CONTINUE                                                          M0061900
 2156 CONTINUE                                                          M0062000
 2161 CONTINUE                                                          M0062100
 2166 CONTINUE                                                          M0062200
 2171 IZRES2=GETTMP(MATRIX)                                             M0062300
C   MATRIXMULTIPLIKATIONSSCHALTER VORLAEUFIG AUF SONDERBEHANDLUNG STELLEM0062400
      I66=ZERO                                                          M0062500
      CALL CALLZZ(APTXXX(40))                                           M0062600
      CALL ARGCVT(IZRES2)                                               M0062700
      CALL ARGCVT(ARGSTK(3))                                            M0062800
      CALL ARGCVT(ARGSTK(2))                                            M0062900
      CALL ARGCVT(ARGSTK(1))                                            M0063000
      GOTO 702                                                          M0063100
C  2.MATRIX : TRANSL,X,Y                                                M0063200
 2152 CONTINUE                                                          M0063300
 2157 CONTINUE                                                          M0063400
 2162 CONTINUE                                                          M0063500
 2167 CONTINUE                                                          M0063600
 2172 IZRES2=GETTMP(MATRIX)                                             M0063700
C   MATRIXMULTIPLIKATIONSSCHALTER VORLAEUFIG AUF SONDERBEHANDLUNG STELLEM0063800
      I66=ZERO                                                          M0063900
      CALL CALLZZ(APTXXX(40))                                           M0064000
      CALL ARGCVT(IZRES2)                                               M0064100
      CALL ARGCVT(ARGSTK(2))                                            M0064200
      CALL ARGCVT(ARGSTK(1))                                            M0064300
      CALL ARGCVT(ZEROPT)                                               M0064400
      GOTO 702                                                          M0064500
C  2.MATRIX : XYROT/YZROT/ZXROT,ALPH                                    M0064600
 2153 CONTINUE                                                          M0064700
 2158 CONTINUE                                                          M0064800
 2163 CONTINUE                                                          M0064900
 2168 CONTINUE                                                          M0065000
 2173 IZRES2=GETTMP(MATRIX)                                             M0065100
C   MATRIXMULTIPLIKATIONSSCHALTER VORLAEUFIG AUF SONDERBEHANDLUNG STELLEM0065200
      I66=ZERO                                                          M0065300
      CALL CALLZZ(APTXXX(63))                                           M0065400
      CALL ARGCVT(IZRES2)                                               M0065500
      CALL ARGCVT(ARGSTK(2))                                            M0065600
      CALL ARGCVT(ARGSTK(1))                                            M0065700
      GOTO 702                                                          M0065800
C  2.MATRIX : SCALE,F                                                   M0065900
 2154 CONTINUE                                                          M0066000
 2159 CONTINUE                                                          M0066100
 2164 CONTINUE                                                          M0066200
 2169 CONTINUE                                                          M0066300
 2174 IZRES2=GETTMP(MATRIX)                                             M0066400
      CALL OPCODE(MOVE)                                                 M0066500
      CALL ARGCVT(IZRES2)                                               M0066600
      CALL ARGCVT(ARGSTK(1))                                            M0066700
      DO 21542 J=1,2                                                    M0066800
      DO 21541 L=1,4                                                    M0066900
21541 CALL ARGCVT(ZEROPT)                                               M0067000
21542 CALL ARGCVT(ARGSTK(1))                                            M0067100
      CALL ARGCVT(ZEROPT)                                               M0067200
      CALL RLSLIN                                                       M0067300
      CALL CALLZZ(DEFEXT)                                               M0067400
      CALL ARGCVT(IZRES2)                                               M0067500
C    MULTIPLIKATION AUF NORMAL STELLEN                                  M0067600
      I66=ONE                                                           M0067700
C   SETZEN DES ZAEHLERS FUER MATRIX-ZWISCHENSPEICHER                    M0067800
  702 KGT=1                                                             M0067900
C  ABSCHLUSS DER BEFEHLSFOLGE FUER 2. MATRIX                            M0068000
      CALL RLSLIN                                                       M0068100
C  BEHANDLUNG DER 1. MATRIX                                             M0068200
  701 GOTO (4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,          M0068300
     *      4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,          M0068400
     *      4171,4172,4173,4174),I                                      M0068500
C  1.MATRIX SCHON DEFINIERT                                             M0068600
 4151 CONTINUE                                                          M0068700
 4152 CONTINUE                                                          M0068800
 4153 CONTINUE                                                          M0068900
 4154 IZRES1=ARGSTK(ARGTOP-1)                                           M0069000
C  MULTIPLIKATIONSSCHALTER AUF NORMAL STELLEN                           M0069100
      I66=ONE                                                           M0069200
      GOTO 711                                                          M0069300
C  1.MATRIX : TRANSL,X,Y,Z                                              M0069400
 4155 CONTINUE                                                          M0069500
 4156 CONTINUE                                                          M0069600
 4157 CONTINUE                                                          M0069700
 4158 CONTINUE                                                          M0069800
 4159 IZRES1=GETTMP(MATRIX)                                             M0069900
      CALL CALLZZ(APTXXX(40))                                           M0070000
      CALL ARGCVT(IZRES1)                                               M0070100
      CALL ARGCVT(ARGSTK(ARGTOP-2))                                     M0070200
      CALL ARGCVT(ARGSTK(ARGTOP-3))                                     M0070300
      CALL ARGCVT(ARGSTK(ARGTOP-4))                                     M0070400
      GOTO 712                                                          M0070500
C  1.MATRIX : TRANSL,X,Y                                                M0070600
 4160 CONTINUE                                                          M0070700
 4161 CONTINUE                                                          M0070800
 4162 CONTINUE                                                          M0070900
 4163 CONTINUE                                                          M0071000
 4164 IZRES1=GETTMP(MATRIX)                                             M0071100
      CALL CALLZZ(APTXXX(40))                                           M0071200
      CALL ARGCVT(IZRES1)                                               M0071300
      CALL ARGCVT(ARGSTK(ARGTOP-2))                                     M0071400
      CALL ARGCVT(ARGSTK(ARGTOP-3))                                     M0071500
      CALL ARGCVT(ZEROPT)                                               M0071600
      GOTO 712                                                          M0071700
C  1.MATRIX : XYROT/YZROT/ZXROT,ALPH                                    M0071800
 4165 CONTINUE                                                          M0071900
 4166 CONTINUE                                                          M0072000
 4167 CONTINUE                                                          M0072100
 4168 CONTINUE                                                          M0072200
 4169 IZRES1=GETTMP(MATRIX)                                             M0072300
      CALL CALLZZ(APTXXX(63))                                           M0072400
      CALL ARGCVT(IZRES1)                                               M0072500
      CALL ARGCVT(ARGSTK(ARGTOP-1))                                     M0072600
      CALL ARGCVT(ARGSTK(ARGTOP-2))                                     M0072700
      GOTO 712                                                          M0072800
C  1.MATRIX : SCALE,F                                                   M0072900
 4170 CONTINUE                                                          M0073000
 4171 CONTINUE                                                          M0073100
 4172 CONTINUE                                                          M0073200
 4173 CONTINUE                                                          M0073300
 4174 IZRES1=GETTMP(MATRIX)                                             M0073400
      CALL OPCODE(MOVE)                                                 M0073500
      CALL ARGCVT(IZRES1)                                               M0073600
      CALL ARGCVT(ARGSTK(ARGTOP-2))                                     M0073700
      DO 41702 J=1,2                                                    M0073800
      DO 41701 L=1,4                                                    M0073900
41701 CALL ARGCVT(ZEROPT)                                               M0074000
41702 CALL ARGCVT(ARGSTK(ARGTOP-2))                                     M0074100
      CALL ARGCVT(ZEROPT)                                               M0074200
      CALL RLSLIN                                                       M0074300
      CALL CALLZZ(DEFEXT)                                               M0074400
      CALL ARGCVT(IZRES1)                                               M0074500
C    MULTIPLIKATION AUF NORMAL STELLEN                                  M0074600
      I66=ONE                                                           M0074700
C   LOSLASSEN DES EBEN BENUTZTEN MATRIX-ZWISCHENSPEICHERS               M0074800
  712 CALL PUTTMP(MATRIX)                                               M0074900
C  ABSCHLUSS DER BEFEHLSFOLGE FUER 1. MATRIX                            M0075000
      CALL RLSLIN                                                       M0075100
C  GGF ZWISCHENSPEICHER FUER 2.MATRIX LOSLASSEN                         M0075200
  711 IF(KGT.EQ.0)GOTO 720                                              M0075300
      KGT=0                                                             M0075400
      CALL PUTTMP(MATRIX)                                               M0075500
C   MATRIX-ENDVERARBEITUNG                                              M0075600
  720 CALL CALLZZ(APTXXX(41))                                           M0075700
      CALL ARGCVT(RESULT)                                               M0075800
      CALL ARGCVT(IZRES1)                                               M0075900
      CALL ARGCVT(IZRES2)                                               M0076000
      CALL ARGCVT(I66)                                                  M0076100
      CALL RLSLIN                                                       M0076200
      ARGTOP=0                                                          M0076300
      RETURN                                                            M0076400
C **********************************************************************M0076500
C   MATRIX/TRANSL,R,R                                                   M0076600
 2175 ARGSTK(5)=ARGSTK(4)                                               M0076700
      ARGSTK(4)=ARGSTK(3)                                               M0076800
      ARGSTK(3)=ARGSTK(2)                                               M0076900
      ARGSTK(2)=ARGSTK(1)                                               M0077000
      ARGSTK(1)=ZEROPT                                                  M0077100
      ARGTOP=5                                                          M0077200
      I=40                                                              M0077300
      GO TO 100                                                         M0077400
C    MATRIX/MIRROR,XYPLAN/YZPLAN/ZXPLAN                                 M0077500
 2176 ARGSTK(5)=ARGSTK(3)                                               M0077600
      ARGSTK(4)=ARGSTK(2)                                               M0077700
      ARGSTK(3)=ARGSTK(1)                                               M0077800
      ARGSTK(2)=ZERO                                                    M0077900
      ARGSTK(1)=ZERO                                                    M0078000
      ARGTOP=5                                                          M0078100
      I=81                                                              M0078200
      GO TO 100                                                         M0078300
C    MATRIX/MIRROR,XYPLAN/YZPLAN/ZXPLAN,XYPLAN/YZPLAN/ZXPLAN            M0078400
 2177 ARGSTK(5)=ARGSTK(4)                                               M0078500
      ARGSTK(4)=ARGSTK(3)                                               M0078600
      ARGSTK(3)=ARGSTK(2)                                               M0078700
      ARGSTK(2)=ARGSTK(1)                                               M0078800
      ARGSTK(1)=ZERO                                                    M0078900
      ARGTOP=5                                                          M0079000
      I=81                                                              M0079100
      GO TO 100                                                         M0079200
C **********************************************************************M0079300
C    LOFT-CONIC-VERARBEITUNG                                            M0079400
C   LCONIC/5PT,X1,Y1,X2,Y2,X3,Y3,X4,Y4,X5,Y5                            M0079500
C  ARGSTK (11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)                           M0079600
 2179 GOTO 801                                                          M0079700
C   LCONIC/4PT1SL,X1,Y1,SL,X2,Y2,X3,Y3,X4,Y4                            M0079800
C  ARGSTK ( 10   , 9, 8, 7, 6, 5, 4, 3, 2, 1)                           M0079900
 2180 P(4)=-1                                                           M0080000
      GOTO 801                                                          M0080100
C   LCONIC/3PT2SL,X1,Y1,SL,X2,Y2,SL,X3,Y3                               M0080200
C  ARGSTK (  9   , 8, 7, 6, 5, 4, 3, 2, 1)                              M0080300
 2181 P(2)=-1                                                           M0080400
      P(4)=-1                                                           M0080500
      GOTO 801                                                          M0080600
C  LCONIC-BERECHNUNG                                                    M0080700
  801 J1=1                                                              M0080800
      DO 802 J=1,5                                                      M0080900
C  PUNKTBERECHNUNG: Z=0 ERGAENZEN,RUECKTRANSFORMATION                   M0081000
      IF(P(J).LT.0) GOTO 803                                            M0081100
      P(J)=GETTMP(POINT)                                                M0081200
      CALL OPCODE(MOVE)                                                 M0081300
      CALL ARGCVT(P(J))                                                 M0081400
      CALL ARGCVT(ARGSTK(J1+1))                                         M0081500
      CALL ARGCVT(ARGSTK(J1))                                           M0081600
      CALL ARGCVT(ZEROPT)                                               M0081700
      CALL RLSLIN                                                       M0081800
      CALL REFGEN(1,P(J))                                               M0081900
      ARGSTK(J)=P(J)                                                    M0082000
      J1=J1+2                                                           M0082100
      GOTO 802                                                          M0082200
C   STEIGUNG UMSPEICHERN                                                M0082300
  803 ARGSTK(J)=ARGSTK(J1)                                              M0082400
      J1=J1+1                                                           M0082500
  802 CONTINUE                                                          M0082600
C   DEFINITIONSART UND RESULTATZEIGER UMSPEICHERN                       M0082700
      ARGSTK(6)=ARGSTK(J1)                                              M0082800
      ARGSTK(7)=ARGSTK(J1+1)                                            M0082900
      ARGTOP=7                                                          M0083000
C   HILFSZEIGER LOSLASSEN                                               M0083100
      DO 804 J=1,5                                                      M0083200
      IF(P(J).NE.-1)CALL PUTTMP(POINT)                                  M0083300
  804 P(J)=1                                                            M0083400
C NORMALE VERARBEITUNG                                                  M0083500
      I=83                                                              M0083600
      GOTO 100                                                          M0083700
C **********************************************************************M0083800
C ... CYLNDR/X,Y,Z,V1,RADIUS                                            M0083900
 2182 I = 34                                                            M0084000
      ISAV=RESULT                                                       M0084100
      RESULT = GETTMP(POINT)                                            M0084200
      CALL OPCODE(MOVE)                                                 M0084300
      CALL ARGCVT(RESULT)                                               M0084400
      CALL ARGCVT(ARGSTK(5))                                            M0084500
      CALL ARGCVT(ARGSTK(4))                                            M0084600
      CALL ARGCVT(ARGSTK(3))                                            M0084700
      CALL RLSLIN                                                       M0084800
      CALL PUTTMP(POINT)                                                M0084900
      CALL REFGEN(1,RESULT)                                             M0085000
      ARGSTK(3) = RESULT                                                M0085100
      RESULT=ISAV                                                       M0085200
      ARGTOP = ARGTOP - 2                                               M0085300
      GO TO 100                                                         M0085400
C ... CYLNDR/X,Y,Z,I,J,K,RADIUS                                         M0085500
 2178 I = 33                                                            M0085600
      ISAV=RESULT                                                       M0085700
      RESULT = GETTMP(POINT)                                            M0085800
      CALL OPCODE(MOVE)                                                 M0085900
      CALL ARGCVT(RESULT)                                               M0086000
      CALL ARGCVT(ARGSTK(7))                                            M0086100
      CALL ARGCVT(ARGSTK(6))                                            M0086200
      CALL ARGCVT(ARGSTK(5))                                            M0086300
      CALL RLSLIN                                                       M0086400
      CALL PUTTMP(POINT)                                                M0086500
      CALL REFGEN(1,RESULT)                                             M0086600
      ARGSTK(5) = RESULT                                                M0086700
      RESULT=ISAV                                                       M0086800
      ARGTOP = ARGTOP - 2                                               M0086900
      GO TO 100                                                         M0087000
C ... PLANE/P1,P2,PERPTO,PL1                                            M0087100
 2183 I=28                                                              M0087200
      ARGSTK(2) = ARGSTK(4)                                             M0087300
      ISAV = ARGSTK(3)                                                  M0087400
      ARGSTK(3) = ARGSTK(1)                                             M0087500
      ARGSTK(1) = ISAV                                                  M0087600
      GO TO 101                                                         M0087700
C ... POINT/THETAR,**,ANGLE,RADIUS                                      M0087800
 2184 I = 48                                                            M0087900
      ISAV = ARGSTK(1)                                                  M0088000
      ARGSTK(1)=ARGSTK(2)                                               M0088100
      ARGSTK(2)=ISAV                                                    M0088200
      GO TO 101                                                         M0088300
C...  PROCESS BOUNDS STATEMENT                                          M0088400
C                                                                       M0088500
C     CALL GENERATED TO APT102        (I=86)                            M0088600
C                                                                       M0088700
C     TEST IF THIS IS FIRST CALL TO APT102.  IF SO GENERATE EXTRA CALL  M0088800
C     TO ALLOW INITIALIZATION OF BLOCK 1 POINTER.                       M0088900
C                                                                       M0089000
 2086 IF (IFBNDS .NE.  0) GO TO 1305                                    M0089100
      TWOPT=NUMB(ITWOPT)                                                M0089200
      IFBNDS=1                                                          M0089300
      DO 1302 I=1,3                                                     M0089400
      IF (FIRST(2,I) .NE. 0) GO TO 1303                                 M0089500
 1302 CONTINUE                                                          M0089600
 1303 CALL ARGCVT(FIRST(1,I))                                           M0089700
      CALL ARGCVT(ZEROPT)                                               M0089800
      CALL ARGCVT(ONE)                                                  M0089900
      CALL RLSLIN                                                       M0090000
      CALL CALLZZ(APTXXX(86))                                           M0090100
      CALL ARGCVT(RESULT)                                               M0090200
C                                                                       M0090300
 1305 CALL ARGCVT(ARGSTK(ARGTOP-1))                                     M0090400
      CALL ARGCVT(ZEROPT)                                               M0090500
      CALL ARGCVT (ONE)                                                 M0090600
      CALL RLSLIN                                                       M0090700
      L = GEOLOC(BOUNDS)                                                M0090800
      K = TOP + ARGTOP - 1                                              M0090900
      ERRPT=ARGTOP-1                                                    M0091000
 1306 ARGTOP = ARGTOP - 2                                               M0091100
      J = 0                                                             M0091200
      KT2=K*2                                                           M0091210
      I = SEARCH(STACK,KT2,GEOMTB(L),ERRPT)                             M0091300
      ERRPT=-ERRPT                                                      M0091400
      IF(ERRPT.GE.0)ERRPT=-1                                            M0091500
      IF (I .EQ. 185) GO TO 1308                                        M0091600
      IF (I .NE. 186) GO TO 999                                         M0091700
C                                                                       M0091800
C     BOUNDN/...,SURF,POINT OR POSX OR NEGX OR POSY OR NEGY OR POSZ ETC.M0091900
C                                                                       M0092000
      CALL CALLZZ(APTXXX(86))                                           M0092100
      CALL ARGCVT(RESULT)                                               M0092200
      CALL ARGCVT(ARGSTK(ARGTOP))                                       M0092300
      I = ARGSTK(ARGTOP - 1)                                            M0092400
      IF (I .LT. IFIXST) GO TO 1319                                     M0092500
      M = I - ONE + 1                                                   M0092600
      I = ONEPT                                                         M0092700
      GO TO (1307,1307,1307,1310,1310,1310), M                          M0092800
 1307 I = TWOPT                                                         M0092900
      GO TO 1310                                                        M0093000
C                                                                       M0093100
C     BOUNDS/...,SURF,IN OR OUT OR REAL,...                             M0093200
C                                                                       M0093300
 1308 CALL CALLZZ(APTXXX(86))                                           M0093400
      CALL ARGCVT(RESULT)                                               M0093500
      CALL ARGCVT(ARGSTK(ARGTOP))                                       M0093600
      I = ARGSTK(ARGTOP - 1)                                            M0093700
      IF (I .EQ. ONE) I = ONEPT                                         M0093800
      IF (I .EQ. TWO) I = TWOPT                                         M0093900
 1310 CALL ARGCVT(I)                                                    M0094000
      IF (ARGTOP .EQ. 2) GO TO 1315                                     M0094100
      CALL ARGCVT(TWO + J)                                              M0094200
      CALL RLSLIN                                                       M0094300
      K = K - 2                                                         M0094400
      GO TO 1306                                                        M0094500
 1315 CALL ARGCVT(THREE + J)                                            M0094600
 1318 CALL RLSLIN                                                       M0094700
      ARGTOP=0                                                          M0094800
      RETURN                                                            M0094900
C                                                                       M0095000
C     EMBEDDED POINT.                                                   M0095100
C                                                                       M0095200
 1319 J = 2                                                             M0095300
      GO TO 1310                                                        M0095400
C                                                                       M0095500
C     ERROR EXIT WHEN PRIMARY SURFACE NOT SPECIFIED.                    M0095600
C                                                                       M0095700
 2185 CONTINUE                                                          M0095800
 2186 GO TO 999                                                         M0095900
C                                                                       M0096000
C... PROCESS OBJECT STATEMENT                                           M0096100
C                                                                       M0096200
C     CALL GENERATED TO APT103               (I=87)                     M0096300
 2087 CALL ARGCVT (ARGSTK(ARGTOP-1))                                    M0096400
      J = 0                                                             M0096500
      KK=ARGTOP-2                                                       M0096600
      IF (KK .LT. 1) GO TO 1330                                         M0096700
      CALL ARGCVT (ONE)                                                 M0096800
      CALL RLSLIN                                                       M0096900
      DO 1325 K=1,KK                                                    M0097000
      CALL CALLZZ(APTXXX(87))                                           M0097100
      CALL ARGCVT(RESULT)                                               M0097200
      L=KK-K+1                                                          M0097300
      M = MODE(ARGSTK(L))                                               M0097400
      ERRPT=-L                                                          M0097500
      IF (M .NE. BOUNDS .AND. M .NE. OBJECT) GO TO 999                  M0097600
      CALL ARGCVT(ARGSTK(L))                                            M0097700
      IF (K .EQ. KK) GO TO 1315                                         M0097800
      CALL ARGCVT(TWO)                                                  M0097900
 1325 CALL RLSLIN                                                       M0098000
 1330 CALL ARGCVT(ZERO)                                                 M0098100
      GO TO 1318                                                        M0098200
C  PUNKT UND VECTOR-ABGRIFF VUN SSURF UND SCURV                         M0098300
 2201 I=I-200                                                           M0098400
      IF(I.GT.38)GOTO 999                                               M0098500
      NA=I                                                              M0098600
      ERRPT=1-ARGTOP                                                    M0098700
      IF(ARGTOP-1.NE.IARGZ(NA))GOTO 999                                 M0098800
      CALL CALLZZ(APTXXX(91))                                           M0098900
      CALL ARGCVT(RESULT)                                               M0099000
      DO 3300 NB=1,7                                                    M0099100
      NARG1=NARG(NB,NA)                                                 M0099200
      IF(NARG1)3310,3320,3330                                           M0099300
C STEUERVARIABLE 'II' FUER ROUTINE APT109 WIRD AUSGEGEBEN               M0099400
 3310 CALL ARGCVT(IARG(-10-NARG1))                                      M0099500
      GOTO 3300                                                         M0099600
C AUSGABE EINER REAL-ZAHL 0.0D0                                         M0099700
 3320 CALL ARGCVT(ZEROPT)                                               M0099800
      GOTO 3300                                                         M0099900
C AUSGABE EINER ARGSTK-ANGABE (ARGUMENT DER GEOMETRIE-DEFINITION)       M0100000
 3330 CALL ARGCVT(ARGSTK(NARG1))                                        M0100100
 3300 CONTINUE                                                          M0100200
      ARGTOP=0                                                          M0100300
      CALL RLSLIN                                                       M0100400
      RETURN                                                            M0100500
      END                                                               M0100600
**** SOURCE FILE : M0007341.W06   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE PRO026                                M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE PRO026                                        M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    JUMPZZ          SUBROUTINE    RECOG            M0000800
C          SUBROUTINE    LABCON                                         M0000900
C          SUBROUTINE    ARGGEN                                         M0001000
C          SUBROUTINE    MACLBL                                         M0001100
C          SUBROUTINE    MATCH                                          M0001200
C          INTEGER FCT.  CLMODE                                         M0001300
C          SUBROUTINE    MCXTRN                                         M0001500
C          SUBROUTINE    MNPROC                                         M0001600
C          INTEGER FCT.  MODE                                           M0001700
C          INTEGER FCT.  GETTMP                                         M0001800
C          SUBROUTINE    MOTION                                         M0001900
C          SUBROUTINE    ALARM                                          M0002000
C          INTEGER FCT.  NAME                                           M0002100
C          INTEGER FCT.  NUMB                                           M0002110
C          SUBROUTINE    ARGCVT                                         M0002200
C          SUBROUTINE    OPCODE                                         M0002300
C          SUBROUTINE    GOPAT                                          M0002400
C          SUBROUTINE    PATH                                           M0002500
C          SUBROUTINE    PRO027                                         M0002600
C          SUBROUTINE    PRO028                                         M0002610
C          SUBROUTINE    PUTTMP                                         M0002700
C          SUBROUTINE    EPILOG                                         M0002800
C          SUBROUTINE    READ                                           M0002900
C          SUBROUTINE    REFGEN                                         M0003000
C          SUBROUTINE    REFREF                                         M0003100
C          SUBROUTINE    RESERV                                         M0003200
C          SUBROUTINE    RESRVZ                                         M0003300
C          SUBROUTINE    RLSLIN                                         M0003400
C          SUBROUTINE    CALLZZ                                         M0003500
C          SUBROUTINE    TSSMIL                                         M0003600
C          SUBROUTINE    TWOARG                                         M0003700
C          SUBROUTINE    BCDBIN                                         M0003800
C                                                                       M0003900
      SUBROUTINE PRO026                                                 M0004000
C                                                                       M0004100
      IMPLICIT INTEGER (A-Z)                                            M0004200
C                                                                       M0004700
C        1.    NAME TABLE AND TABLE LIMITS                              M0004800
C                                                                       M0004900
      INCLUDE 'NAMETB.INC'                                              M0005010
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0005050
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0005150
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0005200
C IFIXST:      NAMTBL INDEX OF BEGINNING OF FIXED POINT NUMBER SECTION  M0005400
C                                                                       M0005800
C        2.    STACK AND POINTER STORAGE                                M0005900
C                                                                       M0006000
      COMMON/STKLST/STKLST                                              M0006100
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      M0006200
C TOP:         POINTER TO LAST STACK ENTRY                              M0006300
      EQUIVALENCE (TOP,STKLST(1))                                       M0006400
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             M0006500
      EQUIVALENCE (ARGTOP,STKLST(2))                                    M0006600
C STACK:       WORKING STACK                                            M0006700
      EQUIVALENCE (STACK(1,1),STKLST(4))                                M0006800
C ARGSTK:      ARGUMENT STACK                                           M0006900
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               M0007000
C                                                                       M0007100
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0007200
C                                                                       M0007300
      COMMON/CODE/CODE                                                  M0007400
      DIMENSION CODE(150),TEMP(2),PROCED(2),PERMID(2),LABEL(2),IMPLAB(  M0007500
     *          2),VBL(2)                                               M0007600
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0007700
      EQUIVALENCE (TEMP(1),CODE(33))                                    M0007800
C PROCED:      (1)=CODE CLASS 19000,(2)=NAMTBL INDEX OF 'PROCED'        M0007900
      EQUIVALENCE (PROCED(1),CODE(37))                                  M0008000
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        M0008100
      EQUIVALENCE (PERMID(1),CODE(39))                                  M0008200
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        M0008300
      EQUIVALENCE (LABEL(1),CODE(43))                                   M0008400
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        M0008500
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  M0008600
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        M0008700
      EQUIVALENCE (VBL(1),CODE(61))                                     M0008800
C                                                                       M0008900
C        4.    PRODUCTION TABLE                                         M0009000
C                                                                       M0009100
      COMMON/SRCTBL/SRCTBL                                              M0009200
      DIMENSION SRCTBL(501),META(50)                                    M0009300
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   M0009400
      EQUIVALENCE (META(1),SRCTBL(3))                                   M0009500
C                                                                       M0009600
C        5.    PROGRAM CONTROL FLAGS                                    M0009700
C                                                                       M0009800
      COMMON/FLAGS/FLAGS                                                M0009900
      LOGICAL NEWSTM,APTRAN                                             M0010000
      DIMENSION FLAGS(4)                                                M0010100
C NEWSTM:      TRUE WHEN NEXT SOURCE STATEMENT REQUESTED FOR PROCESS    M0010200
      EQUIVALENCE (NEWSTM,FLAGS(2))                                     M0010300
C APTRAN:      TRUE IF APTRAN CARD READ AND IN EFFECT                   M0010400
      EQUIVALENCE (APTRAN,FLAGS(3))                                     M0010500
C                                                                       M0010600
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      M0010700
C                                                                       M0010800
      COMMON/BCDPTR/BCDPTR                                              M0010900
      DIMENSION BCDPTR(7)                                               M0011000
C DOTAC:       NAMTBL POINTER TO ALPHAMERIC LITERAL '.AC.  '            M0011100
      EQUIVALENCE (DOTAC,BCDPTR(1))                                     M0011200
C FEDRAT:      NAMTBL POINTER TO ALPHAMERIC LITERAL 'FEDRAT'            M0011300
      EQUIVALENCE (FEDRAT,BCDPTR(2))                                    M0011400
C TO:          NAMTBL POINTER TO ALPHAMERIC LITERAL 'TO'                M0011500
      EQUIVALENCE (TO,BCDPTR(3))                                        M0011600
C ERASB:       NAMTBL POINTER TO ALPHAMERIC LITERAL 'APTER'             M0011700
      EQUIVALENCE (ERASB,BCDPTR(5))                                     M0011800
C DOTTAB:      NAMTBL POINTER TO ALPHAMERIC LITERAL '$$TAB'             M0011900
      EQUIVALENCE (DOTTAB,BCDPTR(7))                                    M0012000
C                                                                       M0012100
C        9.    NAME TABLE POINTERS TO NUMBERS                           M0012200
C                                                                       M0012300
      COMMON/NUMPTR/NUMPTR                                              M0012400
      DIMENSION NUMPTR(12),ZERO(1)                                      M0012500
C ZERO:        NAMTBL POINTER TO '0     '                               M0012600
      EQUIVALENCE (ZERO(1),NUMPTR(1))                                   M0012700
C ZEROPT:      NAMTBL POINTER TO '0.    '                               M0012800
      EQUIVALENCE (ZEROPT,NUMPTR(2))                                    M0012900
C ONE:         NAMTBL POINTER TO '1     '                               M0013000
      EQUIVALENCE (ONE,NUMPTR(3))                                       M0013100
C ONEPT:       NAMTBL POINTER TO '1.    '                               M0013200
      EQUIVALENCE (ONEPT,NUMPTR(4))                                     M0013300
C TWO:         NAMTBL POINTER TO '2     '                               M0013400
      EQUIVALENCE (TWO,NUMPTR(5))                                       M0013500
C THREE:       NAMTBL POINTER TO '3     '                               M0013600
      EQUIVALENCE (THREE,NUMPTR(6))                                     M0013700
C FOUR:        NAMTBL POINTER TO '4     '                               M0013800
      EQUIVALENCE (FOUR,NUMPTR(7))                                      M0013900
C FIVE:        NAMTBL POINTER TO '5     '                               M0014000
      EQUIVALENCE (FIVE,NUMPTR(8))                                      M0014100
C SIX:         NAMTBL POINTER TO '6     '                               M0014200
      EQUIVALENCE (SIX,NUMPTR(9))                                       M0014300
C NINE:        NAMTBL POINTER TO '9     '                               M0014400
      EQUIVALENCE (NINE,NUMPTR(12))                                     M0014500
C                                                                       M0014600
C       11.    SEQUENCE NUMBER STORAGE                                  M0014700
C                                                                       M0014800
      COMMON/SEQCOM/SEQCOM                                              M0014900
      DIMENSION SEQCOM(3)                                               M0015000
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    M0015100
      EQUIVALENCE (SEQNO,SEQCOM(1))                                     M0015200
C                                                                       M0015300
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    M0015400
C                                                                       M0015500
      COMMON/CFSIZE/CFSIZE                                              M0015600
      DIMENSION CFSIZE(205),MAXSIZ(2)                                   M0015700
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                M0015800
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 M0015900
C                                                                       M0016000
C       13.    NAMTBL POINTERS TO NEGATIVE NUMBERS                      M0016100
C              NAMTBL POINTER TO -1.                                    M0016200
      COMMON/NEGPTR/NONEPT                                              M0016300
C                                                                       M0016400
C       14.    I. L. LIST OPTION FLAGS                                  M0016500
C                                                                       M0016600
      COMMON/PRT/PRT                                                    M0016700
      LOGICAL CILPRT,ILPRT,PRTERR                                       M0016800
      DIMENSION PRT(7)                                                  M0016900
C CILPRT:      TRUE WHEN COMPRESSED I.L. PRINTING REQUESTED             M0017000
      EQUIVALENCE (CILPRT,PRT(1))                                       M0017100
C ILPRT:       TRUE INDICATES I.L. PRINTING (PPOPTN/INTLNG,ON)          M0017200
      EQUIVALENCE (ILPRT,PRT(2))                                        M0017300
C PRTERR:      TRUE IF PPOPTN/PRTER,ON. PRINTOUT OF STACK OR ARGSTK     M0017400
      EQUIVALENCE (PRTERR,PRT(6))                                       M0017500
C                                                                       M0017600
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0017700
C                                                                       M0017800
      COMMON/IL/IL                                                      M0017900
      DIMENSION IL(21)                                                  M0018000
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              M0018100
      EQUIVALENCE (REPL,IL(17))                                         M0018200
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              M0018300
      EQUIVALENCE (MOVE,IL(19))                                         M0018400
C VBLJMP:      CONTAINS COMMAND CODE (20) FOR VBLJMP COMMAND            M0018500
      EQUIVALENCE (VBLJMP,IL(20))                                       M0018600
C                                                                       M0018700
C       17.    MODE CODES                                               M0018800
C                                                                       M0018900
      COMMON/MODX/MODX                                                  M0019000
      DIMENSION MODX(32)                                                M0019100
C PLANE:       MODE CODE ( 2) FOR PLANE SURFACE                         M0019200
      EQUIVALENCE (PLANE,MODX(2))                                       M0019300
C POINT:       MODE CODE (19) FOR POINT                                 M0019400
      EQUIVALENCE (POINT,MODX(19))                                      M0019500
C VECTOR:      MODE CODE (20) FOR VECTOR                                M0019600
      EQUIVALENCE (VECTOR,MODX(20))                                     M0019700
C REAL:        MODE CODE (24) FOR A SCALAR                              M0019800
      EQUIVALENCE (REAL,MODX(21))                                       M0019900
C PATERN:      MODE CODE (26) FOR PATTERN                               M0020000
      EQUIVALENCE (PATERN,MODX(26))                                     M0020100
C OBJECT:      MODE CODE (28) FOR OBJECT                                M0020200
      EQUIVALENCE (OBJECT,MODX(28))                                     M0020300
C SSURF:       MODE CODE (29) FOR SSURF                                 M0020310
      EQUIVALENCE (SSURF,MODX(29))                                      M0020320
C                                                                       M0020400
C       22.    MACRO PROCESSING VARIABLES                               M0020500
C                                                                       M0020600
      COMMON/MACXX1/MACXX1                                              M0020700
      LOGICAL ILHLT,MACRED,FINMAC,ENTRY,MACEND,SHOULD                   M0020800
      DIMENSION MACXX1(71)                                              M0020900
C MACDFP:      POINTER TO LAST ENTRY IN MACDF1 AND MACDF2 ARRAYS        M0021000
      EQUIVALENCE (MACDFP,MACXX1(1))                                    M0021100
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              M0021200
      EQUIVALENCE (ILHLT,MACXX1(14))                                    M0021300
C MACRED:      SET TRUE TO INDICATE INPUT FROM MCBUFF TABLE             M0021400
      EQUIVALENCE (MACRED,MACXX1(18))                                   M0021500
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        M0021600
      EQUIVALENCE (INTMED,MACXX1(22))                                   M0021700
C MAJWRD:      CONTAINS ACTUAL MAJOR WORD                               M0021800
      EQUIVALENCE (MAJWRD,MACXX1(23))                                   M0021900
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING            M0022000
      EQUIVALENCE (FINMAC,MACXX1(24))                                   M0022100
C WAY:         INDICATES TYPE OF MACRO PROCESSING                       M0022200
      EQUIVALENCE (WAY,MACXX1(26))                                      M0022300
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION     M0022400
      EQUIVALENCE (ENTRY,MACXX1(40))                                    M0022500
C MAJOR:       CURRENT CALL ASSIGNED VALUE IF MAYWRD IS MACRO VARIABLE  M0022600
      EQUIVALENCE (MAJOR,MACXX1(44))                                    M0022700
C MACEND:      TRUE WHEN ALL MACRO PROCESSING IS FINISHED               M0022800
      EQUIVALENCE (MACEND,MACXX1(62))                                   M0022900
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED         M0023000
      EQUIVALENCE (WHCHMN,MACXX1(63))                                   M0023100
C SHOULD:      MACRO INDICATOR. NORMALLY FALSE                          M0023200
      EQUIVALENCE (SHOULD,MACXX1(70))                                   M0023300
C                                                                       M0023400
C       27.    OPERAND MODIFIERS                                        M0023500
C                                                                       M0023600
      COMMON/OPMOD/OPMOD                                                M0023700
      DIMENSION OPMOD(8)                                                M0023800
C NOUGHT:      CONTAINS OPERAND TYPE 0                                  M0023900
      EQUIVALENCE (NOUGHT,OPMOD(1))                                     M0024000
C DLR:         CONTAINS OPERAND TYPE CODE 1                             M0024100
      EQUIVALENCE (DLR,OPMOD(2))                                        M0024200
C DBLDLR:      CONTAINS OPERAND TYPE CODE 2                             M0024300
      EQUIVALENCE (DBLDLR,OPMOD(3))                                     M0024400
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             M0024500
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     M0024600
C                                                                       M0024700
C       28.    OPERAND MODIFIERS                                        M0024800
C                                                                       M0024900
      COMMON/SUBLST/SUBLST                                              M0025000
      DIMENSION SUBLST(136),APTXXX(120)                                 M0025100
C APT200:      NAMTBL POINTER FOR APT200                                M0025200
      EQUIVALENCE (APT200,SUBLST(127))                                  M0025300
C APT298:      NAMTBL POINTER FOR APT298                                M0025400
      EQUIVALENCE (APT298,SUBLST(130))                                  M0025500
C APT299:      NAMTBL POINTER FOR APT299                                M0025600
      EQUIVALENCE (APT299,SUBLST(131))                                  M0025700
C ERROR:       NAMTBL POINTER TO EXECUTION SUBROUTINE ERROR             M0025800
      EQUIVALENCE (ERROR,SUBLST(132))                                   M0025900
C PSIS:        NAMTBL POINTER FOR XECUTION SUBROUTINE PSIS              M0026000
      EQUIVALENCE (PSIS,SUBLST(133))                                    M0026100
C TLAXIS:      NAMTBL POINTER FOR XECUTION SUBROUTINE TLAXIS            M0026200
      EQUIVALENCE (TLAXIS,SUBLST(135))                                  M0026300
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            M0026400
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 M0026500
C APT001:      NAMTBL POINTER FOR APT001                                M0026600
      EQUIVALENCE (APT001,SUBLST(49))                                   M0026700
C                                                                       M0026800
C       29.    CLASS CODE MODULI                                        M0026900
C                                                                       M0027000
      COMMON/MODULI/MODULI                                              M0027100
      DIMENSION MODULI(2)                                               M0027200
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0027300
      EQUIVALENCE (MODULO,MODULI(1))                                    M0027400
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0027500
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0027600
C                                                                       M0027700
C       31.    COMMON BLOCK FOR PRO026 AND MOTION                       M0027800
C                                                                       M0027900
      COMMON/COMP26/COMP26                                              M0028000
      LOGICAL FMTERR                                                    M0028100
      DIMENSION COMP26(16)                                              M0028200
C ARGCNT:      POINTER FOR CURRENT ARGSTK ELEMENT                       M0028300
      EQUIVALENCE (ARGCNT,COMP26(2))                                    M0028400
C CSPNTR:      CONTAINS NAMTBL POINTER TO CS                            M0028500
      EQUIVALENCE (CSPNTR,COMP26(3))                                    M0028600
C NUMBCS:      NUMBER OF CHECK SURFACES                                 M0028700
      EQUIVALENCE (NUMBCS,COMP26(5))                                    M0028800
C TEST:        NAMTBL INDEX OF CURRENT ARGUMENT                         M0028900
      EQUIVALENCE (TEST,COMP26(6))                                      M0029000
C TEST1:       CLASS OF CURRENT ARGUMENT                                M0029100
      EQUIVALENCE (TEST1,COMP26(7))                                     M0029200
C FMTERR:      ERROR FLAG FOR CERTAIN MOTION STATEMENTS                 M0029300
      EQUIVALENCE (FMTERR,COMP26(9))                                    M0029400
C K:           NAMTBL POINTER TO MAJOR WORD                             M0029500
      EQUIVALENCE (K,COMP26(12))                                        M0029600
C LERR:        ERROR TYPE INDICATOR                                     M0029700
      EQUIVALENCE (LERR,COMP26(13))                                     M0029800
C                                                                       M0029900
C       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE             M0030000
C                                                                       M0030100
      COMMON/BGEOM/BGEOM                                                M0030200
      DIMENSION BGEOM(4)                                                M0030300
C IFDUMP:      VALUE 0=NO CFSAVE COMMAND,1=ALL,2=SCALAR,3=GEOM PROGRAM  M0030400
      EQUIVALENCE (IFDUMP,BGEOM(2))                                     M0030500
C J:           PASSES PUNCH/ARGUMENT FROM PRO026 TO PRO027              M0030600
      EQUIVALENCE (J,BGEOM(3))                                          M0030700
C L:           PASSES PUNCH/LISTON OR NOLIST FROM PRO026 TO PRO027      M0030800
      EQUIVALENCE (L,BGEOM(4))                                          M0030900
C                                                                       M0031000
C       40.    PARAMETERS REQUIRED BY SUPERVISOR                        M0031100
C                                                                       M0031200
      COMMON/SUPER/SUPER                                                M0031300
      LOGICAL CFLAGS,FINI                                               M0031400
      DIMENSION SUPER(36),CFLAGS(4)                                     M0031500
C CFLAGS:      CONDITION OF TERMINATION OF THE PHASES                   M0031600
      EQUIVALENCE (CFLAGS(1),SUPER(1))                                  M0031700
C FINI:        FLAG ON INDICATES A FINI CARD HAS BEEN READ              M0031800
      EQUIVALENCE (FINI,SUPER(7))                                       M0031900
C                                                                       M0032000
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          M0032100
C                                                                       M0032200
      COMMON/NTBL/NTBL                                                  M0032300
      DIMENSION NTBL(6)                                                 M0032400
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE M0032500
      EQUIVALENCE (NLAST,NTBL(4))                                       M0032600
C                                                                       M0032700
C       43.    DO LOOP CONTROL VALUES                                   M0032800
C                                                                       M0032900
      COMMON/DOLOOP/DOLOOP                                              M0033000
      DIMENSION DOLOOP(8)                                               M0033100
C JUMPTO:      MARKER SET AFTER JUMPTO OR IF FOR LABEL CONTROL          M0033200
      EQUIVALENCE (JUMPTO,DOLOOP(1))                                    M0033300
C DOJUMP:      VBL FOR COMPUTED GOTO AT LOOP PROCESSING                 M0033400
      EQUIVALENCE (DOJUMP,DOLOOP(6))                                    M0033500
C                                                                       M0033600
C       44.    ERROR POSITION TABLE                                     M0033700
C                                                                       M0033800
      COMMON/ERRPOS/ERRPOS                                              M0033900
      INTEGER ERRPOS,ESTACK,ERGSTK                                      M0034000
      DIMENSION ERRPOS(302),ESTACK(100),ERGSTK(100)                     M0034100
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    M0034200
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               M0034300
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   M0034400
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               M0034500
C                                                                       M0034510
C       45.    NUMBER TABLE INDICES                                     M0034520
C                                                                       M0034530
      INCLUDE 'NUMBLK.INC'                                              M0034540
C LSTCHR:      LAST CHARACTER OF A NUMBER                               M0034550
C*                                                                      M0034600
C...           PROGRAM VARIABLES                                        M0034700
C                                                                       M0034800
      CHARACTER*6 ICNTRL(4)                                             M0035000
      CHARACTER*6 IPPOPT(5),START,NOMORE,NORMAL                         M0035200
      LOGICAL   LTEMP                                                   M0035800
      CHARACTER*6 DON                                                   M0035900
      LOGICAL DSFIND,PSFIND                                             M0036100
      LOGICAL ERAS,ODD,ODD1,ODD2                                        M0036200
      CHARACTER*6 SRPRNT,FINIT,BLK,CONTIN                               M0036300
      CHARACTER*6 HALL,HON,HOFF,HAT,HPS                                 M0036350
      CHARACTER*6 HOUT,HIN,GOLO,PLOT                                    M0036360
      DATA DON/'ON    '/                                                M0036375
      DATA SRPRNT,START,NOMORE/'PRINT ','START ','NOMORE'/              M0036400
      DATA ERAS/.FALSE./,ODD,ODD1,ODD2/3*.TRUE./,NORMAL/'NORMAL'/       M0036500
      DATA FINIT/'FINI'/,BLK/'    '/,CONTIN/'CONT'/                     M0036510
      DATA ICNTRL/'ERR ','TR  ','XC  ','CL  '/                          M0036520
      DATA IPPOPT(1)/'INTLNG'/,                                         M0036530
     1     IPPOPT(2)/'PRTER '/,                                         M0036531
     2     IPPOPT(3)/'REFMOT'/,                                         M0036532
     3     IPPOPT(4)/'ALTMLT'/,                                         M0036533
     4     IPPOPT(5)/'CILPRT'/                                          M0036534
      DATA HALL,HON,HOFF,HAT,HPS/'ALL   ','ON    ','OFF   ','AT    ',   M0036550
     1     'PS    '/                                                    M0036552
      DATA HOUT,HIN,GOLO,PLOT/'OUT   ','IN    ','GOLOFT','PLOTFT'/      M0036554
C*********************************************************************  M0036600
      K=STACK(1,TOP-1)                                                  M0036700
      IF(INTMED.NE.1)GO TO 6052                                         M0036800
      WAY=2                                                             M0036900
      IF(FINMAC)GO TO 6051                                              M0037000
      ERGSTK(100)=TOP-1                                                 M0037100
      MAJWRD=K                                                          M0037200
 6002 CALL MATCH                                                        M0037300
      IF(.NOT.ENTRY)GO TO 6053                                          M0037400
      K=MAJOR                                                           M0037500
      GO TO 6052                                                        M0037600
 6051 CALL PATH                                                         M0037700
      IF(.NOT.SHOULD)GO TO 6053                                         M0037800
 6052 HOP=NAMTBL(K)-PROCED(1)                                           M0037900
      IF(HOP.GE.MODHLF)HOP=HOP-MODHLF                                   M0038000
      IF(HOP.EQ.0)GO TO 30                                              M0038100
C... TLLFT, TLRGT, TLON, TLONPS, TLOFPS, MULTAX, NOPS, AUTOPS, CUT,     M0038200
C    DNTCUT, NDTEST, COMP3D, GOUGCK                                     M0038300
      IF(HOP.LE.13)GO TO 10                                             M0038400
      HOP=HOP-13                                                        M0038500
C           CLPRNT APTRAN                                               M0038600
      GO TO (   80,  1918,                                              M0038700
C                                                                       M0038800
C           APTREN REFSYS   FINI RESERV CONTRL    SYN DYNDMP  ZSURF     M0038900
     2          22,  1923,  1924,  1926,   500,  2800,   180,     1,    M0039000
C                                                                       M0039100
C           JUMPTO                                                      M0039200
C           TRANTO     GO GODLTA  TOLER  INTOL OUTTOL CUTTER  MAXDP     M0039300
     3        1925,  1904,   700,  1909,  1909,  1909,  1912,   200,    M0039400
C                                                                       M0039500
C                         GOBACK                                        M0039600
C                         GODOWN                                        M0039700
C                          GOFWD                                        M0039800
C                          GOLFT                                        M0039900
C                          GORGT                                        M0040000
C           NUMPTS  THICK   GOUP   GOTO   FROM INDIRV SRFVCT TLAXIS     M0040100
     4         190,  1909,  1901,   800,   801,  1922,  1922,  1913,    M0040200
C                                                                       M0040300
C           INDIRP   PSIS  PRINT   CALL LOOPST LOOPND MACHIN NOPOST     M0040400
     5        1921,  1914,  1942,  4300,    22,    23,   100,   110,    M0040500
C                                                                       M0040600
C           POCKET TITLES  PUNCH 2DCALC 3DCALC TLNDON CFSAVE PPOPTN     M0040700
     6        1968,  8200,  8100,    11,    12,     3,  8100,   600,    M0040800
C                                         GOLOFT                        M0040900
C           PTONLY                 INTSEC PLOTFT                        M0041000
C           REMARK                 GCLEAR GOMILL                        M0041100
C           TUNEUP   READ  UNITS   SCON   SMIL  UNUSED TLPROJ CLDAT     M0041200
     7          22,  5700,  5800,  9100,  9100,     1,  2100,  2000,    M0041300
C           CHKSRF AVCTRL REGION                                        M0041310
     8        2200,  9100, 2100),HOP                                    M0041320
C                                                                       M0041400
C... PICK UP NAMTBL POINTER TO TLON                                     M0041500
    3 K=APTXXX(98)                                                      M0041600
   10 IF ((HOP.NE.6).AND.(HOP.NE.13)) GOTO 9                            M0041700
      IF(ARGTOP.GT.1) CALL ALARM(2002,1-ARGTOP,4,'PRO026  ')            M0041800
      IF(ARGTOP.NE.0) GOTO 8                                            M0041900
      ARGTOP=1                                                          M0042000
      ARGSTK(1)=NAME(DON)                                               M0042100
    8 IF(CNAMTB(ARGSTK(ARGTOP)).NE.HON .AND.CNAMTB(ARGSTK(ARGTOP)).     M0042200
     * NE.HOFF)CALL ALARM(2002,-ARGTOP,4,'PRO026  ')                    M0042300
      GOTO 3000                                                         M0042400
    9 IF (ARGTOP.NE.0) CALL ALARM(2028,-ARGTOP,4,'PRO026  ')            M0042500
      GO TO 3000                                                        M0042600
C... PICK UP NAMTBL POINTER TO NDTEST                                   M0042700
   11 K=APTXXX(96)                                                      M0042800
      GO TO 10                                                          M0042900
C... PICK UP NAMTBL POINTER TO COMP3D                                   M0043000
   12 K=APTXXX(97)                                                      M0043100
      GO TO 10                                                          M0043200
    1 ASSIGN 22 TO IRET                                                 M0043300
      IF(ARGTOP-1)9991,2,9989                                           M0043400
    2 IF (MODE(ARGSTK(1)) .EQ. PLANE) GO TO 3000                        M0043500
      CALL ALARM(2029,-1,8,'PRO026  ')                                  M0043600
      GO TO 22                                                          M0043700
 9100 IF (CNAMTB(K).EQ.GOLO.OR.CNAMTB(K).EQ.PLOT) THEN                  M0043800
        CALL GOLOFT                                                     M0043810
      ELSE                                                              M0043820
        CALL TSSMIL                                                     M0043830
      ENDIF                                                             M0043840
      GO TO 7080                                                        M0043900
C                                                                       M0044000
C     *************** PROCESS POST PROCESSOR STATEMENT *****************M0044100
C                                                                       M0044200
C                                                                       M0044300
C... SET L = NUMBER OF CALLS TO APT299 TO BE GENERATED.                 M0044400
C                                                                       M0044500
   30 SUB=APT299                                                        M0044600
   35 L = 1 + (ARGTOP/2)                                                M0044700
C                                                                       M0044800
C... GENERATE CALLS.                                                    M0044900
C                                                                       M0045000
      DO 70  I = 1,L                                                    M0045100
      CALL CALLZZ(SUB)                                                  M0045200
C                                                                       M0045300
C... INSERT TWO PAIRS OF ARGUMENTS IN ARGUMENT LIST.                    M0045400
C                                                                       M0045500
      DO 60  J = 1,2                                                    M0045600
C                                                                       M0045700
C... THE FIRST PAIR IN THE FIRST CALL CONSISTS OF THE TOTAL NUMBER OF   M0045800
C... ARGUMENT PAIRS EXCLUSIVE OF THE FIRST PAIR AND THE MAJOR WORD IN   M0045900
C... PART PROGRAM STATEMENT.                                            M0046000
C                                                                       M0046100
      IF ((I+J) .GT. 2)  GO TO 40                                       M0046200
      CALL TWOARG(QUIDLR,ARGTOP)                                        M0046300
      CALL ARGCVT(K)                                                    M0046400
      GO TO 60                                                          M0046500
C                                                                       M0046600
C... IF ARGSTK HAS BEEN EXHAUSTED,FILL OUT ARGUMENT LIST WITH ZEROS.    M0046700
C                                                                       M0046800
   40 IF (ARGTOP .GT. 0)  GO TO 50                                      M0046900
      CALL TWOARG(DLR,ZERO)                                             M0047000
      CALL TWOARG(DLR,ZERO)                                             M0047100
      GO TO 60                                                          M0047200
C                                                                       M0047300
C... DETERMINE THE CLASS AND MODE OF THE NEXT ARGSTK ELEMENT AND SET    M0047400
C... N = THE CORRESPONDING CLMODE. IF THE ELEMENT IS INVALID,ISSUE A    M0047500
C... WARNING MESSAGE AND TREAT IT AS A PERMANENT IDENTIFIER.            M0047600
C                                                                       M0047700
   50 N = CLMODE(ARGSTK(ARGTOP))                                        M0047800
      IF (N .NE. 2)  GO TO 52                                           M0047900
      IF (MOD(NAMTBL(ARGSTK(ARGTOP)),MODHLF).EQ.0)GOTO 53               M0048000
   52 IF (N .NE. 0)  GO TO 55                                           M0048100
   53 IF(HOP.NE.61.AND.HOP.NE.33)CALL ALARM(2002,-ARGTOP,8,'PRO026  ')  M0048200
      N = 2                                                             M0048300
C                                                                       M0048400
C... INSERT CLMODE AND ARGSTK ELEMENT AS THE NEXT PAIR IN THE           M0048500
C... ARGUMENT LIST.                                                     M0048600
C                                                                       M0048700
   55 CALL TWOARG(QUIDLR,N)                                             M0048800
      CALL ARGCVT(ARGSTK(ARGTOP))                                       M0048900
      ARGTOP = ARGTOP - 1                                               M0049000
   60 CONTINUE                                                          M0049100
C                                                                       M0049200
C... RELEASE GENERATED I.L.                                             M0049300
C                                                                       M0049400
      CALL RLSLIN                                                       M0049500
   70 CONTINUE                                                          M0049600
      GO TO 22                                                          M0049700
C                                                                       M0049800
C *********** SPECIAL PATH FOR CLPRNT,MACHIN AND NOPOST COMANDS ********M0049900
C                                                                       M0050000
C... CLPRNT COMMAND                                                     M0050100
C... IF THERE ARE NO ARGUMENTS,CALL APT298, IF THERE IS A SINGLE        M0050200
C... ARGUMENT WHICH IS EITHER ON OR OFF,PROCESS LIKE A POSTPROCESSOR    M0050300
C... COMMAND. OTHERWISE CALL ALARM.                                     M0050400
C                                                                       M0050500
   80 IF (ARGTOP .EQ. 0) GO TO 90                                       M0050600
      ERRPT=1-ARGTOP                                                    M0050700
      IF(ARGTOP.GT.1)GOTO 85                                            M0050800
      L = ARGSTK(1)                                                     M0050900
      IF(L.GT.NAMMAX)GOTO 84                                            M0051000
      IF (CNAMTB(L) .EQ. HON .OR. CNAMTB(L) .EQ. HOFF)  GO TO 30        M0051100
   84 ERRPT=-1                                                          M0051200
   85 CALL ALARM(2001,ERRPT,8,'PRO026  ')                               M0051300
      GO TO 22                                                          M0051400
   90 N = ONE                                                           M0051500
      GO TO 120                                                         M0051600
C                                                                       M0051700
C... MACHIN COMMAND                                                     M0051800
C... IF THERE ARE NO ARGUMENTS,CALL ALARM. OTHERWISE CALL APT298        M0051900
C                                                                       M0052000
  100 ERRPT=TOP-1                                                       M0052100
      IF (ARGTOP .EQ. 0) GO TO 85                                       M0052200
      N = THREE                                                         M0052300
      IF (ARGTOP .GT. 1)  GO TO 130                                     M0052400
      ARGTOP = 2                                                        M0052500
      ARGSTK(2) = ARGSTK(1)                                             M0052600
      ARGSTK(1) = 0                                                     M0052700
      GO TO 130                                                         M0052800
C... NOPOST COMMAND                                                     M0052900
  110 IF (ARGTOP .GT. 0)  CALL ALARM(2002,-ARGTOP,4,'PRO026  ')         M0053000
      N = TWO                                                           M0053100
  120 ARGSTK(1) = ZEROPT                                                M0053200
      ARGSTK(2) = ZEROPT                                                M0053300
      ARGTOP = 2                                                        M0053400
  130 CALL CALLZZ(APT298)                                               M0053500
      CALL TWOARG(DLR,N)                                                M0053600
      CALL ARGCVT(ARGSTK(ARGTOP))                                       M0053700
      CALL ARGCVT(ARGSTK(ARGTOP-1))                                     M0053800
      CALL RLSLIN                                                       M0053900
C... IF COMMAND IS MACHIN, GO TO POSTPROCESSOR PROCESSING NEXT.         M0054000
C... OTHERWISE TAKE NORMAL EXIT.                                        M0054100
C                                                                       M0054200
      IF(HOP.EQ.33)GO TO 30                                             M0054300
      GO TO 22                                                          M0054400
C                                                                       M0054500
C... CONTRL STATEMENT                                                   M0054600
C                                                                       M0054700
  500 IF(JUMPTO.NE.0)JUMPTO=SEQNO+2                                     M0054800
      IF(ARGTOP.EQ.0)GO TO 550                                          M0054900
      DO 540 I=1,ARGTOP                                                 M0055000
      K=ARGSTK(I)                                                       M0055100
      IF(K.GT.NAMMAX)GO TO 530                                          M0055200
      DO 520 J=1,4                                                      M0055300
      IF(CNAMTB(K).NE.ICNTRL(J))GO TO 520                               M0055400
      CFLAGS(J)=.TRUE.                                                  M0055500
      GO TO 540                                                         M0055600
  520 CONTINUE                                                          M0055700
  530 CALL ALARM(2042,-I,4,'PRO026  ')                                  M0055800
  540 CONTINUE                                                          M0055900
      GO TO 22                                                          M0056000
  550 CALL ALARM(2030,TOP-1,4,'PRO026  ')                               M0056100
      GO TO 22                                                          M0056200
C                                                                       M0056300
C... PPOPTN STATEMENT                                                   M0056400
C                                                                       M0056500
  600 IF(JUMPTO.NE.0)JUMPTO=SEQNO+2                                     M0056600
      IF(ARGTOP.EQ.0)GO TO 550                                          M0056700
      ERRPT=-1                                                          M0056800
      IF(2*(ARGTOP/2).NE.ARGTOP)GO TO 690                               M0056900
C        CHECK EACH ARGUMENT PAIR                                       M0057000
      DO 680 I=2,ARGTOP,2                                               M0057100
      K=ARGSTK(I-1)                                                     M0057200
      ERRPT=1-I                                                         M0057300
      IF(K.GT.NAMMAX)GO TO 690                                          M0057400
      IF(CNAMTB(K).NE.HON)GO TO 605                                     M0057500
      LTEMP=.TRUE.                                                      M0057600
      GO TO 610                                                         M0057700
  605 IF(CNAMTB(K).NE.HOFF)GO TO 690                                    M0057800
      LTEMP=.FALSE.                                                     M0057900
  610 K=ARGSTK(I)                                                       M0058000
      ERRPT=-I                                                          M0058100
C                                                                       M0058200
      DO 620 J=1,5                                                      M0058300
      IF(CNAMTB(K).NE.IPPOPT(J))GOTO 620                                M0058400
      HOP=J                                                             M0058600
      GO TO 625                                                         M0058700
  620 CONTINUE                                                          M0058800
      GO TO 690                                                         M0058900
C                                                                       M0059000
  625 GO TO (630,640,650,660,670),HOP                                   M0059100
C        INTLNG                                                         M0059200
  630 ILPRT=LTEMP                                                       M0059300
      GO TO 680                                                         M0059400
C        PRTER                                                          M0059500
  640 PRTERR=LTEMP                                                      M0059600
      GO TO 680                                                         M0059700
C        REFMOT                                                         M0059800
  650 J=TWO                                                             M0059900
      IF(LTEMP)J=ONE                                                    M0060000
      GO TO 665                                                         M0060100
C        ALTMLT                                                         M0060200
  660 J=FOUR                                                            M0060300
      IF(LTEMP)J=THREE                                                  M0060400
      GO TO 665                                                         M0060500
C         CILPRT                                                        M0060600
  670 CONTINUE                                                          M0060700
      J=SIX                                                             M0060800
      IF(LTEMP) J=FIVE                                                  M0060900
C---     COMPRESSED IL PRINT IS TURNED ON FROM -ON- INPUT.              M0061000
      IF(LTEMP) CILPRT=.TRUE.                                           M0061100
  665 CALL CALLZZ(APTXXX(18))                                           M0061200
      CALL TWOARG(DLR,J)                                                M0061300
      CALL RLSLIN                                                       M0061400
  680 CONTINUE                                                          M0061500
      GO TO 22                                                          M0061600
C                                                                       M0061700
C        ERROR IN PPOPTN STATEMENT                                      M0061800
  690 CALL ALARM(2039,ERRPT,8,'PRO026  ')                               M0061900
      GO TO 22                                                          M0062000
C                                                                       M0062100
C... CALLED MACRO HAS NOT BEEN DEFINED.  CHECK FOR SYSTEM MACRO.        M0062200
C                                                                       M0062300
 4300 IGOTO=5                                                           M0062400
      GO TO 99                                                          M0062500
C                                                                       M0062600
C...  DYNDMP , NUMPTS OR MAXDP STATEMENT                                M0062700
C                                                                       M0062800
  180 J=3                                                               M0062900
      GOTO 201                                                          M0063000
  200 J=2                                                               M0063100
      IF(ARGTOP.NE.1)GOTO 201                                           M0063200
      ARGSTK(2)=ARGSTK(1)                                               M0063300
      ARGSTK(1)=ZEROPT                                                  M0063400
      ARGTOP=2                                                          M0063500
      GOTO 202                                                          M0063600
  190 J=1                                                               M0063700
  201 IF(ARGTOP.EQ.0)GO TO 209                                          M0063800
      IF(ARGTOP.LE.J)GO TO 202                                          M0063900
      ERRPT=J-ARGTOP                                                    M0064000
      GOTO 210                                                          M0064100
  202 DO 203 I=1,ARGTOP                                                 M0064200
      ERRPT=-I                                                          M0064300
      IF(MODE(ARGSTK(I)).NE.REAL)GOTO 205                               M0064400
  203 CONTINUE                                                          M0064500
      GOTO 3000                                                         M0064600
  205 CALL ALARM(2021,ERRPT,8,'PRO026  ')                               M0064700
      GOTO 22                                                           M0064800
  209 ERRPT=TOP-1                                                       M0064900
  210 CALL ALARM(2052,ERRPT,8,'PRO026  ')                               M0065000
      GOTO 22                                                           M0065100
C                                                                       M0065200
 3000 CALL CALLZZ(K)                                                    M0065300
      IF (ARGTOP .NE. 0)  CALL ARGGEN                                   M0065400
 7080 CALL RLSLIN                                                       M0065500
      IF(CNAMTB(K).EQ.FINIT)GOTO 151                                    M0065600
   22 IF(ENTRY)GO TO 6002                                               M0065700
 6053 NEWSTM=.TRUE.                                                     M0065800
      ARGTOP=0                                                          M0065900
      RETURN                                                            M0066000
   23 IF(CNAMTB(STACK(1,TOP-1)).NE.CONTIN)GOTO 22                       M0066100
      DOJUMP=3                                                          M0066200
      CALL LOOP                                                         M0066300
      GOTO 22                                                           M0066400
C                                                                       M0066500
C... GODLTA STATEMENT                                                   M0066600
C                                                                       M0066700
  700 ASSIGN 22 TO IRET                                                 M0066800
      IF(ARGTOP.LT.1)GO TO 9991                                         M0066900
      ERRPT=4-ARGTOP                                                    M0067000
      IF(ARGTOP.GT.4)GO TO 9990                                         M0067100
      GO TO(750,720,730,720),ARGTOP                                     M0067200
  720 TEST=ARGSTK(1)                                                    M0067300
      ILIST=1                                                           M0067400
      IF(MODE(TEST).NE.REAL)GO TO 9992                                  M0067500
      ASSIGN 725 TO ASNVAR                                              M0067600
      GO TO 7002                                                        M0067700
C                                                                       M0067800
  725 ARGTOP=ARGTOP-1                                                   M0067900
      DO 728 I=1,ARGTOP                                                 M0068000
      ERGSTK(I)=ERGSTK(I+1)                                             M0068100
  728 ARGSTK(I)=ARGSTK(I+1)                                             M0068200
      IF(ARGTOP.EQ.1)GO TO 750                                          M0068300
C                                                                       M0068400
  730 L=ZEROPT                                                          M0068500
  732 J=GETTMP(VECTOR)                                                  M0068600
      CALL OPCODE(MOVE)                                                 M0068700
      CALL ARGCVT(J)                                                    M0068800
      DO 740 I=1,3                                                      M0068900
      IF(ARGTOP.EQ.0)GO TO 735                                          M0069000
      TEST=ARGSTK(ARGTOP)                                               M0069100
      ILIST=ARGTOP                                                      M0069200
      IF(MODE(TEST).NE.REAL)GO TO 9992                                  M0069300
      ARGTOP=ARGTOP-1                                                   M0069400
      GO TO 736                                                         M0069500
  735 TEST=ZEROPT                                                       M0069600
  736 CALL ARGCVT(TEST)                                                 M0069700
  740 CONTINUE                                                          M0069800
      CALL RLSLIN                                                       M0069900
      IF(L.EQ.ZEROPT)CALL REFGEN(3,J)                                   M0070000
      GO TO 760                                                         M0070100
C                                                                       M0070200
  750 J=ARGSTK(ARGTOP)                                                  M0070300
      ARGTOP=ARGTOP-1                                                   M0070400
      ILIST=ARGTOP                                                      M0070500
      L=MODE(J)                                                         M0070600
      IF(L.NE.REAL)GO TO 755                                            M0070700
      L=J                                                               M0070800
      GO TO 732                                                         M0070900
C                                                                       M0071000
  755 IF(L.NE.VECTOR)GO TO 790                                          M0071100
      L=ZEROPT                                                          M0071200
  760 CALL CALLZZ(K)                                                    M0071300
      CALL ARGCVT(J)                                                    M0071400
      CALL ARGCVT(L)                                                    M0071500
      CALL RLSLIN                                                       M0071600
      GO TO 22                                                          M0071700
C                                                                       M0071800
  790 CALL ALARM(2003,-ILIST,8,'PRO026  ')                              M0071900
      GO TO 22                                                          M0072000
C                                                                       M0072100
C...  ENTRY FOR*FROM* AND*GOTO*                                         M0072200
C                             IF FIRST ELEMENT IS PATERN, PROCESS       M0072300
C                             GOTO/PATERN STATEMENT.                    M0072400
  800 IF(MODE(ARGSTK(ARGTOP)).NE.PATERN)GO TO 801                       M0072500
      CALL GOPAT                                                        M0072600
      GO TO 22                                                          M0072700
C                                                                       M0072800
  801 ASSIGN 22 TO IRET                                                 M0072900
      IF(ARGTOP.LT.1)GO TO 9991                                         M0073000
      ERRPT=7-ARGTOP                                                    M0073100
      IF(ARGTOP.GT.7)GO TO 9990                                         M0073200
      TEST=ARGSTK(1)                                                    M0073300
      N=MODE(TEST)                                                      M0073400
      ILIST=1                                                           M0073500
      GO TO(860,830,825,820,805,845,805),ARGTOP                         M0073600
C                                                                       M0073700
C... FEEDRATE RECOGNITION                                               M0073800
C                                                                       M0073900
  805 IF(N.NE.REAL)GO TO 9992                                           M0074000
  810 ASSIGN 815 TO ASNVAR                                              M0074100
      GO TO 7002                                                        M0074200
  815 ARGTOP=ARGTOP-1                                                   M0074300
      DO 818 I=1,ARGTOP                                                 M0074400
      ERGSTK(I)=ERGSTK(I+1)                                             M0074500
  818 ARGSTK(I)=ARGSTK(I+1)                                             M0074600
      TEST=ARGSTK(1)                                                    M0074700
      N=MODE(TEST)                                                      M0074800
      GO TO(870,842,863,840,9997,845),ARGTOP                            M0074900
C                                                                       M0075000
  820 IF(N.NE.REAL)GO TO 840                                            M0075100
      IF(MODE(ARGSTK(ARGTOP)).NE.REAL)GO TO 845                         M0075200
      GO TO 810                                                         M0075300
  825 IF(N.NE.REAL)GO TO 9992                                           M0075400
      IF(MODE(ARGSTK(2)).NE.VECTOR)GO TO 863                            M0075500
      GO TO 810                                                         M0075600
  830 IF(N.EQ.VECTOR)GO TO 842                                          M0075700
      IF(N.NE.REAL)GO TO 9992                                           M0075800
      IF(MODE(ARGSTK(ARGTOP)).NE.POINT)GO TO 863                        M0075900
      GO TO 810                                                         M0076000
C                                                                       M0076100
C... TLAXIS RECOGNITION                                                 M0076200
C                                                                       M0076300
  840 IF(N.NE.VECTOR)GO TO 845                                          M0076400
  842 KK=K                                                              M0076500
      K=TLAXIS                                                          M0076600
      DSTYPE=3                                                          M0076700
      ASSIGN 848 TO ASNVAR                                              M0076800
      GO TO 1988                                                        M0076900
  845 KK=K                                                              M0077000
      K=TLAXIS                                                          M0077100
      DSTYPE=3                                                          M0077200
      ASSIGN 850 TO ASNVAR                                              M0077300
      GO TO 1952                                                        M0077400
  848 DSTYPE=1                                                          M0077500
  850 K=KK                                                              M0077600
      ARGTOP=ARGTOP-DSTYPE                                              M0077700
      DO 855 I=1,ARGTOP                                                 M0077800
      L=I+DSTYPE                                                        M0077900
      ERGSTK(I)=ERGSTK(L)                                               M0078000
  855 ARGSTK(I)=ARGSTK(L)                                               M0078100
C                                                                       M0078200
C... GENERATE CALL TO FROM OR GOTO                                      M0078300
C                                                                       M0078400
      IF(ARGTOP.NE.1)GO TO 862                                          M0078500
      TEST=ARGSTK(1)                                                    M0078600
      N=MODE(TEST)                                                      M0078700
  860 ERRPT=-1                                                          M0078710
      IF(N.NE.POINT)GO TO 890                                           M0078800
      GO TO 870                                                         M0078900
  862 ILIST=ARGTOP                                                      M0079000
      IF(ARGTOP.NE.3)GO TO 9997                                         M0079100
  863 L=GETTMP(POINT)                                                   M0079200
      CALL OPCODE(MOVE)                                                 M0079300
      CALL ARGCVT(L)                                                    M0079400
      CALL PUTTMP(POINT)                                                M0079500
      J=3                                                               M0079600
      IF(ARGTOP.EQ.2)J=2                                                M0079700
      DO 865 I=1,J                                                      M0079800
      TEST=ARGSTK(ARGTOP)                                               M0079900
      ILIST=ARGTOP                                                      M0080000
      IF(MODE(TEST).NE.REAL)GO TO 9992                                  M0080100
      CALL ARGCVT(TEST)                                                 M0080200
  865 ARGTOP=ARGTOP-1                                                   M0080300
      CALL RLSLIN                                                       M0080400
      TEST=L                                                            M0080500
      IF(J.NE.2)GO TO 867                                               M0080600
      CALL CALLZZ(APT001)                                               M0080700
      CALL ARGCVT(L)                                                    M0080800
      CALL RLSLIN                                                       M0080900
      GO TO 870                                                         M0081000
  867 CALL REFGEN(1,TEST)                                               M0081100
  870 CALL CALLZZ(K)                                                    M0081200
      CALL ARGCVT(TEST)                                                 M0081300
      CALL RLSLIN                                                       M0081400
      ARGTOP=0                                                          M0081500
      GO TO 22                                                          M0081600
C                                                                       M0081700
  890 CALL ALARM(2011,ERRPT,8,'PRO026  ')                               M0081800
      GO TO 22                                                          M0081900
C                                                                       M0082000
C...  GO UP/                                                            M0082100
C...  INITIALIZE CHECK SURFACE COUNT                                    M0082200
 1901 CALL MOTION                                                       M0082300
      IF(LERR) 9999,7080,7080                                           M0082400
C...  GO/ COMMAND                                                       M0082500
C     INITIALIZATION                                                    M0082600
 1904 ARGCNT=ARGTOP                                                     M0082700
      DSFIND=.FALSE.                                                    M0082800
      PSFIND=.FALSE.                                                    M0082900
      FMTERR=.FALSE.                                                    M0083000
      NUMBCS=0                                                          M0083100
      IDRECT=0                                                          M0083200
C...  TEST FOR EXHAUSTION OF AGRUMENT LIST                              M0083300
  400 IF(ARGTOP.GE.1)GO TO 401                                          M0083400
C...  THE ARGUMENT LIST IS EXHAUSTED. IF A DS WAS FOUND, TAKE NORMAL OUTM0083500
      IF(DSFIND) GO TO 415                                              M0083600
C...  ARGUMENT LIST EXHAUSTED WITHOUT FINDING A DRIVE SURFACE.          M0083700
      CALL ALARM(2004,TOP-1,8,'PRO026  ')                               M0083800
C...  TAKE RESTART ERROR EXIT                                           M0083900
      FMTERR=.TRUE.                                                     M0084000
      IERROR=2001                                                       M0084100
      GO TO 499                                                         M0084200
  401 TEST=ARGSTK(ARGTOP)                                               M0084300
      TEST1 = MODE(TEST)                                                M0084400
      IF (TEST1.EQ.REAL) GOTO 5000                                      M0084500
      IF ((NAMTBL(TEST)/MODULO).EQ.(PERMID(1)/MODULO)) GOTO 402         M0084600
C...  NOT PERMANENT IDENTIFIER (TO,ON,PAST). TRY FOR SURFACE.           M0084700
      IF((TEST1.GE.1.AND. TEST1.LE.17) .OR.                             M0084800
     1   (TEST1.GE.29 .AND. TEST1.LE.30)) GO TO 406                     M0084900
 5000 IF (.NOT.DSFIND) GOTO 420                                         M0085000
      IF(TEST1.NE.REAL)GO TO 414                                        M0085100
      ASSIGN 415 TO ASNVAR                                              M0085200
      GO TO 7002                                                        M0085300
  414 CALL ALARM(2005,-ARGTOP,8,'PRO026  ')                             M0085400
      IF(FMTERR)GO TO 415                                               M0085500
      IERROR=2002                                                       M0085600
      FMTERR=.TRUE.                                                     M0085700
      GO TO 415                                                         M0085800
C...  ITEM IS PERMANENT IDENTIFIER MAY BE TO,ON OR PAST                 M0085900
  402 IF (((NAMTBL(TEST)-PERMID(1)).EQ.3) .OR. ((NAMTBL(TEST)-PERMID    M0086000
     /(1)).EQ.503)) GOTO 404                                            M0086100
C...  NO MATCH,ILLEGAL FORMAT. TO ASSUMED                               M0086200
      CALL ALARM(2006,-ARGTOP,8,'PRO026  ')                             M0086300
      IF(FMTERR) GO TO 405                                              M0086400
      IERROR=2003                                                       M0086500
      FMTERR=.TRUE.                                                     M0086600
      GO TO 405                                                         M0086700
C...  TO,ON OR PAST. SET IDRECT TO INDICATE MODE OF THIS SURFACE.       M0086800
  404 IDRECT=TEST                                                       M0086900
C...  INCREMENT POINTER TO NEXT ITEM. THEN INSPECT REST OF STATEMENT    M0087000
  405 ARGTOP=ARGTOP-1                                                   M0087100
      GO TO 400                                                         M0087200
C...  A SURFACE HAS BEEN DETECTED. IF THE FIRST, STORE DATA FOR LATER OUM0087300
C     TPUT. IF NOT, SEND OUT PART AND CHECK SURFACE CALLS               M0087400
C                                                                       M0087500
C...  CONVERT SURFACE TYPE TO BCD                                       M0087600
C...  IF DRIVE SURFACE WAS FOUND ALREADY, THIS MAY BE A PART SURFACE.   M0087700
  406 IF(DSFIND)GO TO 407                                               M0087800
C...  FIRST SURFACE NOTED IS DRIVE SURFACE                              M0087900
      DSFIND=.TRUE.                                                     M0088000
      HMOD=IDRECT                                                       M0088100
      CSPNTR=TEST                                                       M0088200
C...  GO BACK FOR REST OF STATEMENT                                     M0088300
      GO TO 6006                                                        M0088400
C...  IF PART SURFACE WAS FOUND ALREADY, THIS IS A CHECK SURFACE        M0088500
  407 IF(PSFIND)GO TO 409                                               M0088600
C...  SECOND SURFACE NOTED IS PART SURFACE                              M0088700
      PSFIND=.TRUE.                                                     M0088800
      CALL CALLZZ(PSIS)                                                 M0088900
      IF(IDRECT)6012,6012,6013                                          M0089000
 6012 CALL TWOARG(DBLDLR,TO)                                            M0089100
      GO TO 6014                                                        M0089200
 6013 CALL ARGCVT(IDRECT)                                               M0089300
 6014 CALL ARGCVT(TEST)                                                 M0089400
  408 CALL RLSLIN                                                       M0089500
 6006 IDRECT=0                                                          M0089600
      GO TO 405                                                         M0089700
C...  CHECK SURFACES                                                    M0089800
  409 NUMBCS=NUMBCS+1                                                   M0089900
      IF (NUMBCS.EQ.1) GOTO 410                                         M0089910
      CALL ALARM(2008,-ARGTOP,8,'PRO026  ')                             M0089920
      GOTO 6006                                                         M0089930
  410 CALL CALLZZ(APT200)                                               M0090000
      IF(IDRECT)6015,6015,6016                                          M0090100
 6015 CALL TWOARG(DBLDLR,TO)                                            M0090200
      GO TO 6017                                                        M0090300
 6016 CALL ARGCVT(IDRECT)                                               M0090400
 6017 CALL ARGCVT(TEST)                                                 M0090500
      CALL ARGCVT(ONEPT)                                                M0090600
      GO TO 408                                                         M0090700
C...  NESTED FEDRAT                                                     M0090800
 7002 CALL CALLZZ (APT299)                                              M0090900
      CALL TWOARG (QUIDLR,1)                                            M0091000
      CALL TWOARG(DBLDLR,FEDRAT)                                        M0091100
      CALL TWOARG (QUIDLR,1)                                            M0091200
      CALL ARGCVT(TEST)                                                 M0091300
      CALL RLSLIN                                                       M0091400
      GO TO ASNVAR,(415,725,815)                                        M0091500
C...  STATEMENT SHOULD NOW BE COMPLETELY PROCESSED                      M0091600
  415 IF(ARGTOP.GT.1)CALL ALARM(2007,1-ARGTOP,4,'PRO026  ')             M0091700
C...  ANY FORMAT ERRORS ENCOUNTERED                                     M0092000
      IF(FMTERR) GO TO 499                                              M0092100
C...  OUTPUT GO/ CALL                                                   M0092200
 7007 CALL CALLZZ(K)                                                    M0092300
      IF(HMOD)6018,6018,6019                                            M0092400
 6018 CALL TWOARG(DBLDLR,TO)                                            M0092500
      GO TO 6020                                                        M0092600
 6019 CALL ARGCVT(HMOD)                                                 M0092700
 6020 CALL ARGCVT(CSPNTR)                                               M0092800
      IF(HMOD.GE.0)GOTO 7080                                            M0092900
      CALL ARGCVT(ARGSTK(2))                                            M0093000
      CALL ARGCVT(ARGSTK(1))                                            M0093100
      GO TO 7080                                                        M0093200
  420 CALL ALARM(2009,-ARGTOP,8,'PRO026  ')                             M0093300
      IF(FMTERR) GO TO 405                                              M0093400
      FMTERR=.TRUE.                                                     M0093500
      IERROR=2004                                                       M0093600
      GO TO 405                                                         M0093700
C...  ERROR IN GO/ COMMAND SIGNAL RESTART WITH FIRST UNRECOVERABLE ERRORM0093800
  499 CALL CALLZZ(ERROR)                                                M0093900
      CALL TWOARG(QUIDLR,IERROR)                                        M0094000
      GO TO 7080                                                        M0094100
C                                                                       M0094200
C...     TLAXIS                                                         M0094300
 1913 CALL PRO028(ERAS)                                                 M0094400
      GOTO 22                                                           M0094500
C                                                                       M0094600
 1952 TEST=GETTMP(VECTOR)                                               M0099200
      CALL OPCODE(MOVE)                                                 M0099300
      CALL TWOARG(NOUGHT,TEST)                                          M0099400
      DO 1954 I=1,3                                                     M0099500
      ILIST=4-I                                                         M0099600
      M=ARGSTK(ILIST)                                                   M0099700
      IF(MODE(M).NE.REAL)GO TO 9992                                     M0099800
 1954 CALL ARGCVT(M)                                                    M0099900
      CALL RLSLIN                                                       M0100000
      CALL REFGEN(3,TEST)                                               M0100100
      CALL PUTTMP(VECTOR)                                               M0100200
      GO TO 1988                                                        M0100300
C                                                                       M0101600
C...     CUTTER                                                         M0101700
 1912 ERRPT=7-ARGTOP                                                    M0101800
      ASSIGN 9999 TO IRET                                               M0101900
      IF(ARGTOP.GT.7)GO TO 9990                                         M0102000
      IF(ARGTOP.LT.1)GO TO 9991                                         M0102010
      GO TO 1970                                                        M0102100
C                                                                       M0102200
C...     INTOL, OUTTOL, THICK, TOLER                                    M0102300
 1909 ERRPT=4-ARGTOP                                                    M0102400
      ASSIGN 9999 TO IRET                                               M0102800
      IF(ARGTOP.GT.4) GOTO 9990                                         M0102900
      IF (ARGTOP.EQ.4) GOTO 1970                                        M0102910
      IF(ARGTOP.LT.1)GO TO 9991                                         M0103000
      DO 1911 I=1,4                                                     M0103005
        N=ARGTOP+1-I                                                    M0103010
        IF (N.LE.0) THEN                                                M0103015
          N=1                                                           M0103020
          IF (ARGSTK(1).GT.NAMMAX) THEN                                 M0103025
            LSTCHR=0                                                    M0103030
            ARGSTK(1)=NUMB(CNUMTB(ARGSTK(1)-NAMMAX))+NAMMAX             M0103035
          ENDIF                                                         M0103040
        ENDIF                                                           M0103045
        ARGSTK(5-I)=ARGSTK(N)                                           M0103050
 1911 CONTINUE                                                          M0103055
      ARGTOP=4                                                          M0103060
 1970 DSTYPE=ARGTOP                                                     M0103100
      N=ARGTOP                                                          M0103200
C...     CHECK FOR SCALARS                                              M0103300
      DO 1980 ILIST=1,N                                                 M0103500
      TEST=ARGSTK(ILIST)                                                M0103600
      IF(MODE(TEST).NE.REAL)GO TO 9992                                  M0103700
 1980 CONTINUE                                                          M0103800
C...     MOVE ARGUMENTS TO APTER ARRAY                                  M0103900
      IF(ERAS)GO TO 1982                                                M0104000
      CALL RESRVZ(ERASB,0,9,1)                                          M0104100
      ERAS=.TRUE.                                                       M0104200
 1982 CALL OPCODE(MOVE)                                                 M0104300
      CALL TWOARG(NOUGHT,ERASB)                                         M0104400
      CALL ARGGEN                                                       M0104500
      CALL RLSLIN                                                       M0104600
      TEST=ERASB                                                        M0104700
      ASSIGN 22 TO ASNVAR                                               M0104800
C...     GENERATE CALL TO SUBROUTINE                                    M0104900
 1988 CALL CALLZZ(K)                                                    M0105000
      CALL TWOARG(QUIDLR,DSTYPE)                                        M0105100
      IF (K.EQ.TLAXIS) CALL TWOARG(QUIDLR,7)                            M0105110
      CALL ARGCVT(TEST)                                                 M0105200
      CALL RLSLIN                                                       M0105300
      GO TO ASNVAR,(22,848,850)                                         M0105400
C...     PARAMETER LIST TOO LONG                                        M0105500
 9989 ERRPT=1-ARGTOP                                                    M0105600
 9990 CALL ALARM(2012,ERRPT,8,'PRO026  ')                               M0105700
 9999 CALL CALLZZ(ERROR)                                                M0105800
      CALL TWOARG(QUIDLR,83)                                            M0105900
      CALL RLSLIN                                                       M0106000
      ARGTOP=0                                                          M0106100
      GO TO 22                                                          M0106200
C...     NO PARAMETERS GIVEN                                            M0106300
 9991 CALL ALARM(12,TOP-1,8,'PRO026  ')                                 M0106400
      GO TO  9200                                                       M0106500
C...     ILLEGAL ARGUMENT                                               M0106600
 9992 CALL ALARM(2013,-ILIST,8,'PRO026  ')                              M0106700
      GO TO  9200                                                       M0106800
C...     WRONG CLDAT SEQUENCE                                           M0106900
 9995 CALL ALARM(2046,-ARGTOP,8,'PRO026  ')                             M0107000
      GO TO  9200                                                       M0107100
C...  TOOL TO SURFACE RELATIONSHIPS                                     M0107200
 1923 CALL REFREF                                                       M0107300
      GO TO 22                                                          M0107400
 9997 CALL ALARM(2052,-ILIST,8,'PRO026  ')                              M0107500
 9200 GOTO IRET,(22,9999)                                               M0107600
C                                                                       M0107700
C...     CLDAT/.....................                                    M0107800
 2000 ASSIGN 22 TO IRET                                                 M0107900
      IF(ARGTOP.EQ.0)GOTO 9991                                          M0108000
 2002 J=ARGSTK(ARGTOP)                                                  M0108100
      L=ARGSTK(1)                                                       M0108200
      IF(MODE(J).NE.REAL)GOTO 2004                                      M0108300
C...     IT MUST BE CLDAT/0.,1.,3.,(ON-OFF)                             M0108400
      ERRPT=-1                                                          M0108500
      IF(ARGTOP.LT.4)GOTO 9997                                          M0108600
      ERRPT=4-ARGTOP                                                    M0108700
      IF(ARGTOP.GT.4)GOTO 9990                                          M0108800
      ILIST=1                                                           M0108900
      IF(CNAMTB(L).NE.HON.AND.CNAMTB(L).NE.HOFF)GOTO 9992               M0109000
      DO 2003 I=2,3                                                     M0109100
      ILIST=ARGTOP-I                                                    M0109200
      IF(MODE(ARGSTK(I)).NE.REAL)GOTO 9992                              M0109300
 2003 CONTINUE                                                          M0109400
      GOTO 30                                                           M0109500
C...                                                                    M0109600
 2004 SUB=K                                                             M0109700
      IF(CNAMTB(J).NE.START)GOTO 2012                                   M0109800
C...     IT MUST BE CLDAT/START,INDEX,.........                         M0109900
      ERRPT=11-ARGTOP                                                   M0110000
      IF(ARGTOP.GT.11)GOTO 9990                                         M0110100
      IF(.NOT.ODD1.OR..NOT.ODD2)GOTO 9995                               M0110200
      ODD=.FALSE.                                                       M0110300
 2005 ILIST=ARGTOP                                                      M0110400
      IF(ARGTOP.LT.2)GOTO 9997                                          M0110500
      ILIST=ARGTOP-1                                                    M0110600
      IF(MODE(ARGSTK(ILIST)).NE.REAL)GOTO 9992                          M0110700
      J=ARGTOP-2                                                        M0110800
      IF(J.LT.1)GOTO 2009                                               M0110900
 2006 DO 2008 ILIST=1,J                                                 M0111000
      N=NAMTBL(ARGSTK(ILIST))-PERMID(1)                                 M0111100
      IF(N.GT.MODHLF)N=N-MODHLF                                         M0111200
      IF(N.LT.180.OR.N.GT.188)GOTO 9992                                 M0111300
 2008 CONTINUE                                                          M0111400
 2009 IF(J.EQ.ARGTOP)GOTO 2010                                          M0111500
      ODD1=ODD                                                          M0111600
      GOTO 35                                                           M0111700
 2010 ODD2=.FALSE.                                                      M0111800
      GOTO 35                                                           M0111900
C...                                                                    M0112000
 2012 IF(CNAMTB(J).NE.NOMORE)GOTO 2014                                  M0112100
C...     IT MUST BE CLDAT/NOMORE,INDEX,.........                        M0112200
      IF(ODD1)CALL ALARM(2046,-ARGTOP,4,'PRO026  ')                     M0112300
      ODD=.TRUE.                                                        M0112400
      GOTO 2005                                                         M0112500
C...                                                                    M0112600
 2014 IF(CNAMTB(J).NE.NORMAL)GOTO 2016                                  M0112700
C...     IT MUST BE CLDAT/NORMAL                                        M0112800
      IF(ODD2)CALL ALARM(2046,-ARGTOP,4,'PRO026  ')                     M0112900
      IF(ARGTOP.GT.1)GOTO 9989                                          M0113000
      ODD2=.TRUE.                                                       M0113100
      GOTO 35                                                           M0113200
C...     IT MUST BE CLDAT/TP,TA,TV,PDS,PPS,NDS,NPS,UVPDS,UVPPS          M0113300
 2016 ILIST=ARGTOP                                                      M0113400
      IF(.NOT.ODD1.OR..NOT.ODD2)GOTO 9995                               M0113500
      ERRPT=9-ARGTOP                                                    M0113600
      IF(ARGTOP.GT.9)GOTO 9990                                          M0113700
      J=ARGTOP                                                          M0113800
      GOTO 2006                                                         M0113900
C                                                                       M0114000
C...     TLPROJ/....................                                    M0114100
C...     REGION/....................                                    M0114110
 2100 IF(ARGTOP.EQ.0)GOTO 9991                                          M0114200
      ERRPT=2-ARGTOP                                                    M0114300
      IF(ARGTOP-2)2110,2120,9990                                        M0114400
 2110 ARGTOP=2                                                          M0114500
      ARGSTK(ARGTOP)=ZEROPT                                             M0114600
      IF(ARGSTK(1).LE.NAMMAX) THEN                                      M0114610
        IF (CNAMTB(ARGSTK(1)).EQ.HOFF) GOTO 3000                        M0114620
      ENDIF                                                             M0114630
      GOTO 2130                                                         M0114700
 2120 ILIST=ARGTOP                                                      M0114800
      J=ARGSTK(ARGTOP)                                                  M0114900
      IF (J.LE.NAMMAX) THEN                                             M0114910
        IF(CNAMTB(J).EQ.HON.OR.CNAMTB(J).EQ.HAT)GOTO 2130               M0115000
      ENDIF                                                             M0115010
      IF (MODE(J).NE.REAL) GOTO 9992                                    M0115020
      ILIST=1                                                           M0115030
      J=ARGSTK(ILIST)                                                   M0115040
      IF (J.LE.NAMMAX) THEN                                             M0115050
        IF(CNAMTB(J).EQ.HIN.OR.CNAMTB(J).EQ.HOUT) GOTO 3000             M0115060
      ENDIF                                                             M0115070
      GOTO 9992                                                         M0115080
 2130 ILIST=1                                                           M0115100
      J=ARGSTK(ILIST)                                                   M0115200
      IF(MODE(J).EQ.VECTOR)GOTO 3000                                    M0115300
      IF (J.LE.NAMMAX)THEN                                              M0115310
       IF(CNAMTB(J).EQ.NORMAL)GOTO 3000                                 M0115400
      ENDIF                                                             M0115410
      GOTO 9992                                                         M0115600
C                                                                       M0115610
C... CHKSRF/....                                                        M0115611
C                                                                       M0115612
 2200 IF (ARGTOP.EQ.0) GOTO 9991                                        M0115613
      ERRPT=-1                                                          M0115614
      IF (MOD(ARGTOP,2).NE.0) THEN                                      M0115615
        CALL ALARM(2055,ERRPT,8,'PRO026')                               M0115616
      ELSE                                                              M0115617
C... CHECK ARGUMENT PAIRS                                               M0115618
        DO 2280 I=2,ARGTOP,2                                            M0115619
C... 2ND ARGUMENT OF PAIR SHOULD BE 'ON' OR 'OFF'                       M0115620
          J=ARGSTK(I-1)                                                 M0115621
          ERRPT=1-I                                                     M0115622
          IF (J.GT.NAMMAX) THEN                                         M0115623
            CALL ALARM(2056,ERRPT,8,'PRO026')                           M0115624
            GOTO 22                                                     M0115625
          ELSE IF ((CNAMTB(J).EQ.HON).OR.(CNAMTB(J).EQ.HOFF)) THEN      M0115626
            JMOD=J                                                      M0115627
          ELSE                                                          M0115628
            CALL ALARM(2056,ERRPT,8,'PRO026')                           M0115629
            GOTO 22                                                     M0115630
          ENDIF                                                         M0115631
C... 1ST ARGUMENT OF PAIR SHOULD BE 'PS' OR A SSURF                     M0115632
          J=ARGSTK(I)                                                   M0115633
          ERRPT=-I                                                      M0115634
          IF (J.GT.NAMMAX) THEN                                         M0115635
            CALL ALARM(2057,ERRPT,8,'PRO026')                           M0115636
            GOTO 22                                                     M0115637
          ELSE                                                          M0115638
            TEST1=MODE(J)                                               M0115639
            IF ((CNAMTB(J).EQ.HPS).OR.(TEST1.EQ.SSURF)) THEN            M0115640
              CALL CALLZZ(K)                                            M0115641
              CALL ARGCVT(J)                                            M0115642
              CALL ARGCVT(JMOD)                                         M0115643
              CALL RLSLIN                                               M0115644
            ELSE                                                        M0115645
              CALL ALARM(2057,ERRPT,8,'PRO026')                         M0115646
              GOTO 22                                                   M0115647
            ENDIF                                                       M0115648
          ENDIF                                                         M0115649
 2280   CONTINUE                                                        M0115650
      ENDIF                                                             M0115651
      GOTO 22                                                           M0115652
C                                                                       M0115700
C... RESERVE SPACE FOR THE TWO LARGEST LARGE DATA ARRAYS.               M0115800
C                                                                       M0115900
 1924 CALL LABCON(0)                                                    M0116000
      DOJUMP=5                                                          M0116100
      CALL LOOP                                                         M0116200
      IF(MAXSIZ(1) .EQ. 0) GO TO 1920                                   M0116300
C                                                                       M0116400
      MAXTWO=IABS(MAXSIZ(1))+IABS(MAXSIZ(2))                            M0116500
C                                                                       M0116600
C                                                                       M0116700
      CALL RESRVZ(DOTTAB,-1,MAXTWO,1)                                   M0116800
 1920 IF (IFDUMP .NE. 0) GO TO 8300                                     M0116900
      GO TO 3000                                                        M0117000
C... INDICATE FINI STATEMENT HAS BEEN PROCESSED                         M0117100
  151 FINI = .TRUE.                                                     M0117200
C                                                                       M0117300
      IF(MACDFP.EQ.0) GOTO 7777                                         M0117400
      CALL MNPROC                                                       M0117500
      IF(MACEND)GO TO 7777                                              M0117600
      MACRED = .TRUE.                                                   M0117700
      INTMED = 1                                                        M0117800
      GO TO 6053                                                        M0117900
 7777 CALL EPILOG                                                       M0118000
      GOTO 6053                                                         M0118100
 1918 APTRAN = .TRUE.                                                   M0118200
C     CALL READ         CAUSES ABNORMAL END                             M0118300
      GO TO 22                                                          M0118400
C...  PSIS/SURFACE                                                      M0118500
 1914 IF(ARGTOP.GT.0)GOTO 1400                                          M0118600
      CALL ALARM(13,TOP-1,8,'PRO026  ')                                 M0118700
      GO TO 22                                                          M0118800
 1400 ILIST=ARGTOP-3                                                    M0118900
      IF(ARGTOP.GT.3)GOTO 9997                                          M0119000
C...  COMPUTE POINTER AND MODE                                          M0119100
      CSPNTR=ARGSTK(ARGTOP)                                             M0119200
      CSTYPE=MODE(CSPNTR)                                               M0119300
C...  IS THE FIRST ITEM A LEGITIMATE SURFACE                            M0119400
      IF((CSTYPE.GE.1 .AND. CSTYPE.LE.17) .OR.                          M0119500
     1   (CSTYPE.GE.29 .AND. CSTYPE.LE.30)) GO TO 1401                  M0119600
      CALL ALARM(2015,-ARGTOP,8,'PRO026  ')                             M0119700
      GO TO 22                                                          M0119800
 1401 HMOD=-1                                                           M0119900
      IF(ARGTOP.GT.1)GOTO 1402                                          M0120000
C...  FORMAT OK                                                         M0120100
      ARGSTK(2)=ZERO(1)                                                 M0120200
 1404 ARGSTK(1)=ZERO(1)                                                 M0120300
      ARGSTK(3)=CSPNTR                                                  M0120400
      GO TO 7007                                                        M0120500
C     MORE THAN ONE ITEM FOLLOW THE SLASH                               M0120600
 1402 ILIST=ARGTOP-1                                                    M0120700
      J=ARGSTK(ILIST)                                                   M0120800
      IF(ARGTOP.EQ.3)GOTO 1405                                          M0120900
      IF(NAMTBL(J).NE.20029)GOTO 9992                                   M0121000
      ARGSTK(2)=ARGSTK(1)                                               M0121100
      GO TO 1404                                                        M0121200
C     LIMIT AND SCALAR SHOULD FOLLOW                                    M0121300
 1405 IF(NAMTBL(J).NE.20139)GOTO 9992                                   M0121400
      ILIST=ARGTOP-2                                                    M0121500
      IF(MODE(ARGSTK(1)).NE.REAL)GOTO 9992                              M0121600
      GO TO 7007                                                        M0121700
C                                                                       M0121800
 1925 ERRPT=TOP-1                                                       M0121900
      IF(ARGTOP.LT.1)GOTO 2411                                          M0122000
      ERRPT=1-ARGTOP                                                    M0122100
      M=1                                                               M0122200
      IF(ARGTOP-2)6040,2411,6038                                        M0122300
 6038 J=ARGSTK(1)                                                       M0122400
      M=2                                                               M0122500
      IF (J.LE.NAMMAX) THEN                                             M0122510
        IF (NAMTBL(J)/MODULO*MODULO.EQ.TEMP(1)) GOTO 6039               M0122600
      ENDIF                                                             M0122610
      IF(MODE(J).NE.REAL)GOTO 1928                                      M0122700
 6039 CALL RESRVZ(DOTAC,REAL,1,1)                                       M0122710
      CALL OPCODE(REPL)                                                 M0122900
      CALL ONEARG(1)                                                    M0123000
      CALL ARGCVT(DOTAC)                                                M0123100
      CALL ARGCVT(J)                                                    M0123200
      CALL RLSLIN                                                       M0123300
      CALL OPCODE(VBLJMP)                                               M0123400
      CALL ARGCVT(DOTAC)                                                M0123500
 6040 DO 6045 I=M,ARGTOP                                                M0123600
      ERRPT=ARGTOP+M-I                                                  M0123700
      CSPNTR=ARGSTK(ERRPT)                                              M0123800
      IF (CSPNTR.GT.NAMMAX) GOTO 5001                                   M0123900
      TEST1=MODULO*(NAMTBL(CSPNTR)/MODULO)                              M0124000
      IF((TEST1.EQ.TEMP(1)).OR.(TEST1.EQ.VBL(1)))GO TO 2410             M0124100
      IF(TEST1.NE.LABEL(1) .AND. TEST1.NE.IMPLAB(1))                    M0124200
     / NAMTBL(CSPNTR)=IMPLAB(1)                                         M0124300
      IF(WHCHMN.EQ.0)GO TO 6044                                         M0124400
      GO TO 6046                                                        M0124500
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           M0124610
 5001 CSPNTR=CSPNTR-NAMMAX                                              M0124620
      IF(NLAST.GT.0)CALL MCXTRN(5,CSPNTR,IDUMMY)                        M0124630
      CALL BCDBIN(CNUMTB(CSPNTR),KK,ICOUNT)                             M0124700
      CSPNTR=KK+10000                                                   M0124800
 6046 CALL MACLBL(CSPNTR,-WHCHMN,CSPNTR)                                M0124900
      IF(NAMTBL(CSPNTR).EQ.0)NAMTBL(CSPNTR)=IMPLAB(1)+WHCHMN            M0125000
 6044 IF(ARGTOP.GT.1)GOTO 6041                                          M0125100
      CALL JUMPZZ(CSPNTR)                                               M0125200
      GOTO 6042                                                         M0125300
 6041 CALL ONEARG(CSPNTR)                                               M0125400
 6042 CALL LABCON(CSPNTR)                                               M0125500
 6045 CONTINUE                                                          M0125600
      IF(ARGTOP.GT.1)CALL RLSLIN                                        M0125700
      GOTO 22                                                           M0125800
 2410 IF(ARGTOP.GT.1)CALL RLSLIN                                        M0125900
 2411 CALL ALARM(2017,-ERRPT,8,'PRO026  ')                              M0126000
      GO TO 22                                                          M0126100
 1928 CALL ALARM(1008,-1,8,'PRO026  ')                                  M0126200
      GO TO 22                                                          M0126300
C                                                                       M0126400
C...     UNITS STATEMENT                                                M0126500
 5800 ERRPT=1-ARGTOP                                                    M0126600
      IF(ARGTOP-1)5801,3000,5802                                        M0126700
 5801 ERRPT=TOP-1                                                       M0126800
 5802 CALL ALARM(2052,ERRPT,8,'PRO026  ')                               M0126900
      GOTO 22                                                           M0127000
C                                                                       M0127100
 8100 IF (ARGTOP .GT. 0) GO TO 8120                                     M0127200
      CALL ALARM(2030,TOP-1,4,'PRO026  ')                               M0127300
      GO TO 22                                                          M0127400
 8200 K=NAME(SRPRNT)                                                    M0127500
      CALL CALLZZ(K)                                                    M0127600
      CALL TWOARG(QUIDLR,9)                                             M0127700
      CALL ARGCVT(ARGSTK(ARGTOP))                                       M0127800
      CALL TWOARG(QUIDLR,1)                                             M0127900
      CALL RLSLIN                                                       M0128000
      GO TO 22                                                          M0128100
 1926 IF(FINMAC)GOTO 1927                                               M0128200
      IF(.NOT.ILHLT)CALL RESERV                                         M0128300
      GO TO 22                                                          M0128400
 1927 CALL ALARM(2045,0,8,'PRO026  ')                                   M0128500
      GO TO 22                                                          M0128600
 2800 IGOTO=1                                                           M0128700
      GO TO 99                                                          M0128800
 1942 IGOTO=2                                                           M0128900
      GO TO 99                                                          M0129000
 1968 IGOTO=3                                                           M0129100
      GO TO 99                                                          M0129200
C                                                                       M0129300
C     PUNCH                                                             M0129400
C                                                                       M0129500
 8110 IGOTO=4                                                           M0129600
      GO TO 99                                                          M0129700
 1921 IGOTO=7                                                           M0129800
      GO TO 99                                                          M0129900
 1922 IGOTO=8                                                           M0130000
      GO TO 99                                                          M0130100
 5700 IGOTO=6                                                           M0130200
   99 CALL PRO027(IGOTO)                                                M0130300
      GO TO 22                                                          M0130400
C                                                                       M0130500
C...  P R O C E S S I N G   F O R   C F S A V E   A N D   P U N C H     M0130600
C                                                                       M0130700
 8120 I = ARGSTK(ARGTOP)                                                M0130800
C                                                                       M0130900
C     CHECK IF FIRST ARGUMENT IS A DIGIT.                               M0131000
C                                                                       M0131100
      L=I                                                               M0131200
      IF (I .LE. NAMMAX) GO TO 8150                                     M0131300
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           M0131310
      I=I-NAMMAX                                                        M0131320
      IF(NLAST.GT.0)CALL MCXTRN(5,I,IDUMMY)                             M0131400
      CALL BCDBIN(CNUMTB(I),J,L)                                        M0131500
C                                                                       M0131600
C     FIRST ARGUMENT IS A DIGIT.  CHECK IF IT IS LEGAL.                 M0131700
C                                                                       M0131800
      IF (J .LE. 3) GO TO 8140                                          M0131900
 8130 CALL ALARM(2031,-ARGTOP,4,'PRO026  ')                             M0132000
      GO TO 22                                                          M0132100
C                                                                       M0132200
 8140 IF(ARGTOP.EQ.1)GOTO 8130                                          M0132300
      ARGTOP=ARGTOP-1                                                   M0132400
      I = ARGSTK(ARGTOP)                                                M0132500
C                                                                       M0132600
C     CHECK IF SECOND ARGUMENT IS 'ALL'.                                M0132700
C                                                                       M0132800
      IF(CNAMTB(I).NE.HALL)GOTO 8130                                    M0132900
      GOTO 8180                                                         M0133000
C                                                                       M0133100
C     DETERMINE THE FIRST ARGUMENT                                      M0133200
C  PUNCH/ALL                                                            M0133300
 8150 J=1                                                               M0133400
      IF(CNAMTB(I).EQ.HALL)GOTO 8180                                    M0133500
C  PUNCH/SCALAR , PUNCH/GEOM  ,  PUNCH/LISTON  , PUNCH/NOLIST           M0133600
      M=MOD(NAMTBL(I),MODHLF)                                           M0133700
      J=M-124                                                           M0133800
      IF(J.GT.1.AND.J.LT.6)GOTO 8180                                    M0133900
C  PUNCH/RANDOM,...                                                     M0134000
      J=7                                                               M0134100
      IF(M.EQ.56)GOTO 8180                                              M0134200
C  PUNCH/RETAIN,...                                                     M0134300
      J=8                                                               M0134400
      IF(M.EQ.65)GOTO 8180                                              M0134500
C  MUST BE A LIST OF VARIABLE NAMES.                                    M0134600
      J=6                                                               M0134700
C                                                                       M0134800
C     CHECK IF PUNCH WAS SPECIFIED.                                     M0134900
C                                                                       M0135000
 8180 IF(HOP.EQ.37)GO TO 8110                                           M0135100
C                                                                       M0135200
C     CFSAVE                                                            M0135300
C                                                                       M0135400
      GO TO (8240,8240,8240,8130,8130,8220), J                          M0135500
 8220 IF  (MODE(I) .NE. OBJECT) GO TO 8130                              M0135600
      J = I                                                             M0135700
C                                                                       M0135800
 8240 IFDUMP = J                                                        M0135900
      GO TO 22                                                          M0136000
C                                                                       M0136100
C...  GENERATE CALL TO APT104 IF IFDUMP IS INDEX TO OBJECT.             M0136200
C                                                                       M0136300
 8300 IF (IFDUMP .LE. 3) GO TO 3000                                     M0136400
      CALL CALLZZ(APTXXX(85))                                           M0136500
      CALL ARGCVT (IFDUMP)                                              M0136600
      CALL RLSLIN                                                       M0136700
      GO TO 3000                                                        M0136800
      END                                                               M0136900
**** SOURCE FILE : M0006668.W05   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE PRO027                                M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE PRO027(IGOTO)                                 M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    ALARM           SUBROUTINE    PRO026           M0000800
C          SUBROUTINE    FOUTXX          SUBROUTINE    RECOG            M0000900
C          SUBROUTINE    LIBOPC                                         M0001000
C          SUBROUTINE    LIBRD                                          M0001100
C          SUBROUTINE    LIBSCH                                         M0001200
C          SUBROUTINE    MACLBL                                         M0001300
C          SUBROUTINE    MCXTRN                                         M0001400
C          INTEGER FCT.  MODE                                           M0001500
C          INTEGER FCT.  NAME                                           M0001600
C          SUBROUTINE    CALLZZ                                         M0001700
C          SUBROUTINE    ONEARG                                         M0001800
C          SUBROUTINE    OPCODE                                         M0001900
C          SUBROUTINE    ARGCVT                                         M0002000
C          SUBROUTINE    BCDBIN                                         M0002100
C          SUBROUTINE    PUTTMP                                         M0002200
C          SUBROUTINE    REFGEN                                         M0002300
C          SUBROUTINE    RESRVZ                                         M0002400
C          SUBROUTINE    RLSLIN                                         M0002500
C          INTEGER FCT.  GETTMP                                         M0002600
C          SUBROUTINE    TWOARG                                         M0002700
C                                                                       M0002800
      SUBROUTINE PRO027(IGOTO)                                          M0002900
C                                                                       M0003000
      IMPLICIT INTEGER (A-Z)                                            M0003100
C                                                                       M0003200
C        1.    NAME TABLE AND TABLE LIMITS                              M0003300
C                                                                       M0003400
      INCLUDE 'NAMETB.INC'                                              M0003510
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0003550
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0003650
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0003700
C                                                                       M0004100
C        2.    STACK AND POINTER STORAGE                                M0004200
C                                                                       M0004300
      COMMON/STKLST/STKLST                                              M0004400
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      M0004500
C TOP:         POINTER TO LAST STACK ENTRY                              M0004600
      EQUIVALENCE (TOP,STKLST(1))                                       M0004700
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             M0004800
      EQUIVALENCE (ARGTOP,STKLST(2))                                    M0004900
C STACK:       WORKING STACK                                            M0005000
      EQUIVALENCE (STACK(1,1),STKLST(4))                                M0005100
C ARGSTK:      ARGUMENT STACK                                           M0005200
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               M0005300
C                                                                       M0005400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0005500
C                                                                       M0005600
      COMMON/CODE/CODE                                                  M0005700
      DIMENSION CODE(150),SLASH(2),NUMBER(2),TEMP(2),PERMID(2),VBL(2),  M0005800
     *          IDENT(2)                                                M0005900
C SLASH:       (1)=CODE CLASS  5000,(2)=NAMTBL INDEX OF '/     '        M0006000
      EQUIVALENCE (SLASH(1),CODE(9))                                    M0006100
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        M0006200
      EQUIVALENCE (NUMBER(1),CODE(27))                                  M0006300
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0006400
      EQUIVALENCE (TEMP(1),CODE(33))                                    M0006500
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        M0006600
      EQUIVALENCE (PERMID(1),CODE(39))                                  M0006700
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        M0006800
      EQUIVALENCE (VBL(1),CODE(61))                                     M0006900
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        M0007000
      EQUIVALENCE (IDENT(1),CODE(69))                                   M0007100
C                                                                       M0007200
C        4.    PRODUCTION TABLE                                         M0007300
C                                                                       M0007400
      COMMON/SRCTBL/SRCTBL                                              M0007500
      DIMENSION SRCTBL(502),META(50)                                    M0007600
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   M0007700
      EQUIVALENCE (META(1),SRCTBL(3))                                   M0007800
C                                                                       M0007900
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         M0008000
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    M0008100
      COMMON/TMP/TXXXX                                                  M0008200
      DIMENSION TXXXX(2,32)                                             M0008300
C                                                                       M0008400
C        9.    NAME TABLE POINTERS TO NUMBERS                           M0008500
C                                                                       M0008600
      COMMON/NUMPTR/NUMPTR                                              M0008700
      DIMENSION NUMPTR(12)                                              M0008800
C ZEROPT:      NAMTBL POINTER TO '0.    '                               M0008900
      EQUIVALENCE (ZEROPT,NUMPTR(2))                                    M0009000
C ONE:         NAMTBL POINTER TO '1     '                               M0009100
      EQUIVALENCE (ONE,NUMPTR(3))                                       M0009200
C ONEPT:       NAMTBL POINTER TO '1.    '                               M0009300
      EQUIVALENCE (ONEPT,NUMPTR(4))                                     M0009400
C THREE:       NAMTBL POINTER TO '3     '                               M0009500
      EQUIVALENCE (THREE,NUMPTR(6))                                     M0009600
C                                                                       M0009610
C       11.    SEQUENCE NUMBER STORAGE                                  M0009620
C                                                                       M0009630
      COMMON/SEQCOM/SEQCOM                                              M0009640
      DIMENSION SEQCOM(3)                                               M0009650
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    M0009660
      EQUIVALENCE (SEQNO,SEQCOM(1))                                     M0009670
C                                                                       M0009700
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    M0009800
C                                                                       M0009900
      COMMON/CFSIZE/CFSIZE                                              M0010000
      DIMENSION CFSIZE(1106),MAXSIZ(2),CANSIZ(2,100),KSC(3,300)         M0010100
C CANTOP:      POINTER TO THE LAST CANSIZ ENTRY                         M0010200
      EQUIVALENCE (CANTOP,CFSIZE(1))                                    M0010300
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                M0010400
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 M0010500
C CANSIZ:      NUMBER OF ITEMS A. NAMTBL INDEX OF EACH LARGE DATA ARRAY M0010600
      EQUIVALENCE (CANSIZ(1,1),CFSIZE(6))                               M0010700
C ISC:         POINTER TO LAST KSC ENTRY                                M0010800
      EQUIVALENCE (ISC,CFSIZE(206))                                     M0010900
C KSC:         CONTAINS SYMBOL,SIZE AND NUMBER OF SEQMENTS OF SS-DEFIN. M0011000
      EQUIVALENCE (KSC(1,1),CFSIZE(207))                                M0011100
C                                                                       M0011200
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0011300
C                                                                       M0011400
      COMMON/IL/IL                                                      M0011500
      DIMENSION IL(21)                                                  M0011600
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              M0011700
      EQUIVALENCE (REPL,IL(17))                                         M0011800
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              M0011900
      EQUIVALENCE (MOVE,IL(19))                                         M0012000
C                                                                       M0012100
C       17.    MODE CODES                                               M0012200
C                                                                       M0012300
      COMMON/MODX/MODX                                                  M0012400
      DIMENSION MODX(32)                                                M0012500
C POINT:       MODE CODE (19) FOR POINT                                 M0012600
      EQUIVALENCE (POINT,MODX(19))                                      M0012700
C VECTOR:      MODE CODE (20) FOR VECTOR                                M0012800
      EQUIVALENCE (VECTOR,MODX(20))                                     M0012900
C REAL:        MODE CODE (21) FOR A SCALAR                              M0013000
      EQUIVALENCE (REAL,MODX(21))                                       M0013100
C BOOL:        MODE CODE (23) FOR BOOLEAN TYPE                          M0013110
      EQUIVALENCE (BOOL,MODX(23))                                       M0013120
C                                                                       M0013200
C      25A.    MACRO PROCESSING ARRAY                                   M0013300
C                                                                       M0013400
      COMMON/MACXX5/MACXX5                                              M0013500
      DIMENSION MACXX5(135),ITMPSV(135)                                 M0013600
C ITMPSV:      TEMPORARY STORAGE DURING FINAL MACRO PROCESSING          M0013700
      EQUIVALENCE (ITMPSV(1),MACXX5(1))                                 M0013800
C                                                                       M0013900
C       27.    OPERAND MODIFIERS                                        M0014000
C                                                                       M0014100
      COMMON/OPMOD/OPMOD                                                M0014200
      DIMENSION OPMOD(6)                                                M0014300
C NOUGHT:      CONTAINS OPERAND TYPE 0                                  M0014400
      EQUIVALENCE (NOUGHT,OPMOD(1))                                     M0014500
C DLR:         CONTAINS OPERAND TYPE CODE 1                             M0014600
      EQUIVALENCE (DLR,OPMOD(2))                                        M0014700
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             M0014800
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     M0014900
C                                                                       M0015000
C       29.    CLASS CODE MODULI                                        M0015100
C                                                                       M0015200
      COMMON/MODULI/MODULI                                              M0015300
      DIMENSION MODULI(2)                                               M0015400
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0015500
      EQUIVALENCE (MODULO,MODULI(1))                                    M0015600
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0015700
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0015800
C                                                                       M0015900
C       30.    NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCK   M0016000
C                                                                       M0016100
      COMMON/BLKCFS/FIRST                                               M0016200
      DIMENSION FIRST(2,3)                                              M0016300
C                                                                       M0016400
C       31.    COMMON BLOCK FOR PRO026 AND MOTION                       M0016500
C                                                                       M0016600
      COMMON/COMP26/COMP26                                              M0016700
      DIMENSION COMP26(16)                                              M0016800
C ARGCNT:      POINTER FOR CURRENT ARGSTK ELEMENT                       M0016900
      EQUIVALENCE (ARGCNT,COMP26(2))                                    M0017000
C TEST:        NAMTBL INDEX OF CURRENT ARGUMENT                         M0017100
      EQUIVALENCE (TEST,COMP26(6))                                      M0017200
C K:           NAMTBL POINTER TO MAJOR WORD                             M0017300
      EQUIVALENCE (K,COMP26(12))                                        M0017400
C                                                                       M0017500
C       33.    SYMBOLIC FILE DEFINITIONS                                M0017600
C                                                                       M0017700
      INCLUDE 'SYMFIL.INC'                                              M0017810
C ELFIL1:      OUTPUT OF PACKING FACTOR FOR CREATING PAGES (INTERPRETER)M0018000
C                                                                       M0018200
C       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE             M0018300
C                                                                       M0018400
      COMMON/BGEOM/BGEOM                                                M0018500
      DIMENSION BGEOM(4)                                                M0018600
C J:           PASSES PUNCH/ARGUMENT FROM PRO026 TO PRO027              M0018700
      EQUIVALENCE (J,BGEOM(3))                                          M0018800
C L:           PASSES PUNCH/LISTON OR NOLIST FROM PRO026 TO PRO027      M0018900
      EQUIVALENCE (L,BGEOM(4))                                          M0019000
C                                                                       M0019100
C       36.    SYSTEM MACRO AND SEGMENT READ VARIABLES                  M0019200
C                                                                       M0019300
      COMMON/MACSEG/MACSEG                                              M0019400
      LOGICAL ALOPN,LMRSTR                                              M0019500
      DIMENSION MACSEG(6)                                               M0019600
C ALOPN:       TRUE AFTER MACRO OR PART PROGRAM SEGMENT LIBRARY OPENED  M0019700
      EQUIVALENCE (ALOPN,MACSEG(1))                                     M0019800
C NMSEG:       NAMTBL POINTER TO THE NAME OF THE PART PROGRAM SEGMENT   M0019900
      EQUIVALENCE (NMSEG,MACSEG(2))                                     M0020000
C NMMAC:       NAMTBL POINTER TO SYSTEM MACRO NAME                      M0020100
      EQUIVALENCE (NMMAC,MACSEG(3))                                     M0020200
C LMRSTR:      FLAG ON STARTS READING IN A SYSTEM MACRO                 M0020300
      EQUIVALENCE (LMRSTR,MACSEG(4))                                    M0020400
C ITMPCT:      NUMBER OF INTERNAL SYMBOLS GENERATED IN TRANSLATION      M0020500
      EQUIVALENCE (ITMPCT,MACSEG(5))                                    M0020600
C                                                                       M0020700
C       39.    COMMON BLOCK LIBRARY PRINTING FLAG                       M0020800
C              FLAG ON CAUSE PRINTING OF INPUT LIBRARIES                M0020900
      COMMON/LIBPRT/LIBPRT                                              M0021000
      LOGICAL LIBPRT                                                    M0021100
C                                                                       M0021200
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          M0021300
C                                                                       M0021400
      COMMON/NTBL/NTBL                                                  M0021500
      DIMENSION NTBL(6)                                                 M0021600
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE M0021700
      EQUIVALENCE (NLAST,NTBL(4))                                       M0021800
C                                                                       M0021810
C       43.    DO LOOP CONTROL VALUES                                   M0021820
C                                                                       M0021830
      COMMON/DOLOOP/DOLOOP                                              M0021840
      DIMENSION DOLOOP(8)                                               M0021850
C JUMPTO:      MARKER SET AFTER JUMPTO OR IF FOR LABEL CONTROL          M0021860
      EQUIVALENCE (JUMPTO,DOLOOP(1))                                    M0021870
C*                                                                      M0021900
C ARGUMENTS    IGOTO   INTEGER USED BY PRO027 TO BRANCH                 M0022000
C                      TO APPROPRIATE CODING                            M0022100
C                                                                       M0022200
      CHARACTER*6 SYNLST(10)                                            M0022210
      CHARACTER*6 SRFNAM(3),SURF                                        M0022220
      DIMENSION INP(20)                                                 M0022230
      LOGICAL POINTX                                                    M0022300
      CHARACTER*6 HDOLPC,LRARG                                          M0022600
      CHARACTER*6 SRPRNT,HON,HOFF,HALL                                  M0023000
      CHARACTER*6 IEJECT,EJECT                                          M0023050
      CHARACTER*6 HTABP,HSSPR,HSSTT,HAVPR                               M0023060
      DATA SRPRNT/'PRINT '/                                             M0023100
      DATA     HON/'ON  '/,HOFF/'OFF '/,HALL/'ALL '/                    M0023200
      DATA  SYNTOP,SYNLST /10,'APTRAN','APTREN','CLOCK ',               M0023400
     /'CLPRNT','CONTRL','FINI  ','MACRO ','PRINT',                      M0023500
     /'SYN   ','TERMAC'/                                                M0023600
      DATA IEJECT/'1'/,EJECT/'EJECT '/                                  M0023700
C                                                                       M0023800
      DATA              SRFNAM/'DS    ' ,'PS    ','CS    '/             M0024000
      DATA             HTABP/'TABPRT'/                                  M0024100
      DATA             HSSPR/'SSPRT '/                                  M0024200
      DATA             HSSTT/'SSTEST'/                                  M0024300
      DATA             HAVPR/'AVPRT '/                                  M0024310
      DATA ITBPRT/20130/                                                M0024410
      DATA ILBPRT/20160/                                                M0024420
      DATA HDOLPC/'$PCRTH'/                                             M0024430
C                                                                       M0024500
C*********************************************************************  M0024600
C              SYN  PRINT POCKET  PUNCH   CALL   READ                   M0024700
      GO TO(  2800,  1942,  1968,  8110,  5700,  5700,4000,3800),IGOTO  M0024800
C                                                                       M0024900
C...     **** SYNONYM PROCESSING ****                                   M0025000
C                                                                       M0025100
C... CALL ALARM IF THE SYN STATEMENT HAS NO ARGUMENTS OR AN ODD NUMBER  M0025200
C... OF ARGUMENTS                                                       M0025300
C                                                                       M0025400
 2800 N = ARGTOP/2                                                      M0025500
      IF(ARGTOP.NE.0)GOTO 2805                                          M0025600
      CALL ALARM(2018,TOP-1,8,'PRO027  ')                               M0025700
      GO TO 22                                                          M0025800
 2805 IF(ARGTOP .EQ. 2*N)GOTO 2810                                      M0025900
      CALL ALARM(2018,-1,8,'PRO027  ')                                  M0026000
      GO TO 22                                                          M0026100
C   ENTSCHEIDUNG WIE DIE SYN/-PAARE ZU INTERPRETIREN SIND               M0026200
C   ANNAHME: SYN/SYNONYM,SPRACHWORT                                     M0026300
 2810 I1=0                                                              M0026400
      I2=-1                                                             M0026500
C   ANDERNFALLS:WERTE VON I1 UND I2 VERTAUSCHEN                         M0026600
      IF(NAMTBL(ARGSTK(ARGTOP)).EQ.PERMID(1))GOTO 2812                  M0026700
      I1=-1                                                             M0026800
      I2= 0                                                             M0026900
C                                                                       M0027000
C... PROCESS EACH PAIR OF ARGUMENTS                                     M0027100
C                                                                       M0027200
 2812 DO 2850  I=1,N                                                    M0027300
      K1= 2*I+I1                                                        M0027400
      K = ARGSTK(K1)                                                    M0027500
      L1= 2*I+I2                                                        M0027600
      L = ARGSTK(L1)                                                    M0027700
      IF(K.EQ.L)GOTO 2850                                               M0027800
      IF(NAMTBL(L)/MODULO .NE. TEMP(1)/MODULO)GO TO 2815                M0027900
      ITMPCT=ITMPCT+1                                                   M0028000
      CALL MACLBL(L,-ITMPCT,J)                                          M0028100
      NAMTBL(J)=VBL(1)+REAL                                             M0028200
      CALL RESRVZ(J,REAL,TXXXX(1,REAL),1)                               M0028300
      CALL OPCODE(REPL)                                                 M0028400
      CALL ONEARG(1)                                                    M0028500
      CALL ARGCVT(J)                                                    M0028600
      CALL ARGCVT(L)                                                    M0028700
      CALL RLSLIN                                                       M0028800
      L=J                                                               M0028900
C                                                                       M0029000
C... IF THE SYNONYM IS A NUMBER,A SYNONYM FOR ITSELF, OR A SYNONYM FOR  M0029100
C... A SPECIAL APT WORD FOR WHICH SYNONYMS ARE NOT ALLOWED,CALL ALARM   M0029200
C                                                                       M0029300
 2815 JJ=L                                                              M0029400
      LL=L1                                                             M0029500
 2825 IF(JJ.GT.NAMMAX)GO TO 2836                                        M0029600
      DO 2820  J = 1,SYNTOP                                             M0029700
      IF (CNAMTB(JJ).EQ. SYNLST(J))GOTO 2830                            M0029800
 2820 CONTINUE                                                          M0030000
 2836 IF(JJ.EQ.K)GOTO 2840                                              M0030100
      JJ=K                                                              M0030200
      LL=K1                                                             M0030300
      GOTO 2825                                                         M0030400
 2830 CALL ALARM(2019,-LL,8,'PRO027  ')                                 M0030500
      GO TO 2850                                                        M0030600
C                                                                       M0030700
C... IF THE SYNONYM IS NOT A PERMANENT IDENTIFIER,ISSUE A WARNING       M0030800
C                                                                       M0030900
 2840 IF(NAMTBL(K).EQ.PERMID(1))GOTO 2845                               M0031000
      IF(K.GT.NAMMAX.AND.L.GT.NAMMAX)GOTO 2830                          M0031100
      K = ARGSTK(L1)                                                    M0031200
      L = ARGSTK(K1)                                                    M0031300
      K1=L1                                                             M0031400
      IF (NAMTBL(K).NE.PERMID(1))GOTO 2846                              M0031500
      GOTO 2849                                                         M0031600
 2845 IF (NAMTBL(L).NE.PERMID(1))GOTO 2849                              M0031700
 2846 CALL ALARM(2035,-K1,4,'PRO027  ')                                 M0031800
C                                                                       M0031900
C... SET THE FIRST ITEM OF THE SYNONYMS NAMTBL ENTRY = MINUS THE NAMTBL M0032000
C... INDEX OF THE ASSOCIATED WORDS ENTRY                                M0032100
C                                                                       M0032200
 2849 NAMTBL(K) = -L                                                    M0032300
 2850 CONTINUE                                                          M0032400
      GO TO 22                                                          M0032500
C                                                                       M0032600
C...       PRINT STATEMENT                                              M0032700
C                                                                       M0032800
 1942 IF (ARGTOP .GT. 0)  GO TO 8010                                    M0032900
      ERRPT=TOP-1                                                       M0033000
      IF (CNAMTB(STACK(1,TOP-1)).NE.EJECT)GOTO 8015                     M0033010
      CALL FOUTXX(ELFIL1,IEJECT,1)                                      M0033020
      IF(JUMPTO.NE.0)JUMPTO=SEQNO+2                                     M0033030
      GO TO 22                                                          M0033040
 8015 CALL ALARM(2030,ERRPT,4,'PRO027  ')                               M0033100
      GO TO 22                                                          M0033200
 8008 ERRPT=1-ARGTOP                                                    M0033300
 8009 CALL ALARM(2031,ERRPT,4,'PRO027  ')                               M0033400
      GO TO 22                                                          M0033500
 8010 J = ARGSTK(ARGTOP)                                                M0033600
      ERRPT=-ARGTOP                                                     M0033700
      IF (CNAMTB(STACK(1,TOP-1)).EQ.EJECT)GOTO 8009                     M0033710
      II=1                                                              M0033800
      IF(J.LE.NAMMAX) GOTO 8011                                         M0033910
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           M0033920
      J=J-NAMMAX                                                        M0033930
      IF (NLAST.GT.0)CALL MCXTRN(5,J,IDUMMY)                            M0033940
      I = 7                                                             M0034000
      IF(CNUMTB(J).EQ.CNUMTB(ZEROPT-NAMMAX))GOTO 8020                   M0034100
      IF(CNUMTB(J).EQ.CNUMTB(ONEPT-NAMMAX)) GOTO 8020                   M0034200
      GOTO 8030                                                         M0034250
 8011 I = 8                                                             M0034300
      IF(NAMTBL(J).EQ.ILBPRT.OR.                                        M0034400
     X   NAMTBL(J)-MODHLF.EQ.ILBPRT) GO TO 6000                         M0034500
      IF(NAMTBL(J).EQ.ITBPRT.OR.NAMTBL(J)-MODHLF.EQ.ITBPRT)GOTO 8025    M0034600
      I = 11                                                            M0034700
 8019 IF (CNAMTB(J) .EQ. HON )GOTO 8020                                 M0034800
      I = I + 1                                                         M0034900
      IF (CNAMTB(J) .EQ. HOFF )GOTO 8020                                M0035000
      GOTO(8030,8008),II                                                M0035100
 8020 CALL CALLZZ(K)                                                    M0035300
      CALL TWOARG(QUIDLR,I)                                             M0035400
      CALL ARGCVT(J)                                                    M0035500
      CALL TWOARG(QUIDLR,1)                                             M0035600
      CALL RLSLIN                                                       M0035700
      ERRPT=II-ARGTOP                                                   M0035800
      IF(ARGTOP.GT.II)GOTO 8009                                         M0035900
      GO TO 22                                                          M0036000
 8025 JJ=J                                                              M0036100
      II=2                                                              M0036200
      J=ARGSTK(ARGTOP-1)                                                M0036300
      I = 16                                                            M0036400
C     PRINT/TABPRT,ON/OFF                                               M0036500
      IF(CNAMTB(JJ).EQ.HTABP)GOTO 8019                                  M0036600
      I=18                                                              M0036700
C     PRINT/SSPRT ,ON/OFF                                               M0036800
      IF(CNAMTB(JJ).EQ.HSSPR)GOTO 8019                                  M0036900
      I=20                                                              M0037000
C     PRINT/SSTEST,ON/OFF                                               M0037100
      IF(CNAMTB(JJ).EQ.HSSTT)GOTO 8019                                  M0037200
      I=22                                                              M0037210
C     PRINT/AVPRT,ON/OFF                                                M0037220
      IF(CNAMTB(JJ).EQ.HAVPR)GOTO 8019                                  M0037230
      IF(ARGTOP.EQ.1)GOTO 8035                                          M0037300
      GOTO 8009                                                         M0037400
 8030 CALL BCDBIN(CNUMTB(J),M,N)                                        M0037500
      IF (M.EQ. 2 .OR. M .EQ. 3)  GO TO 8032                            M0037600
      GOTO 8009                                                         M0037700
 6000 J=ARGSTK(ARGTOP-1)                                                M0037800
      IF(CNAMTB(J).NE.HON)GOTO 6010                                     M0037900
      LIBPRT=.TRUE.                                                     M0038000
      GOTO 6020                                                         M0038100
 6010 IF(CNAMTB(J).NE.HOFF)GOTO 8008                                    M0038200
      LIBPRT=.FALSE.                                                    M0038300
 6020 ERRPT=2-ARGTOP                                                    M0038400
      IF(ARGTOP.GT.2)GOTO 8009                                          M0038500
      GO TO 22                                                          M0038600
 8032 IF(ARGTOP.GT.1)GOTO 8033                                          M0038700
 8035 CALL ALARM(2052,ERRPT,4,'PRO027  ')                               M0038800
      GO TO 22                                                          M0038900
 8033 ARGTOP=ARGTOP-1                                                   M0039000
      J = ARGSTK(ARGTOP)                                                M0039100
      IF (CNAMTB(J).NE.HALL)GOTO 8036                                   M0039200
      J = 0                                                             M0039300
      IF (M .EQ. 2) J = 3                                               M0039400
      DO 8034  I = 1,3                                                  M0039500
      J = J + 1                                                         M0039600
      IF(FIRST(2,I).EQ.0) GO TO 8034                                    M0039700
      CALL CALLZZ(K)                                                    M0039800
      CALL TWOARG(QUIDLR,J)                                             M0039900
      CALL ARGCVT(FIRST(1,I))                                           M0040000
      CALL TWOARG(QUIDLR,FIRST(2,I))                                    M0040100
      CALL RLSLIN                                                       M0040200
 8034 CONTINUE                                                          M0040300
      IF(ARGTOP.GT.1)GOTO 8008                                          M0040400
      GO TO 6020                                                        M0040500
 8036 DO 8060  I = 1,ARGTOP                                             M0040600
      L = ARGTOP + 1 - I                                                M0040700
      J = ARGSTK(L)                                                     M0040800
      N = 10                                                            M0040900
      IF (J .GT. NAMMAX)  GO TO 8050                                    M0041000
      L=MOD(NAMTBL(J),MODULO)                                           M0041100
      JJ=(NAMTBL(J)/MODULO)*MODULO                                      M0041200
      IF(JJ.NE.VBL(1))GO TO 8038                                        M0041300
      IF(L.GT.MODHLF)L=L-MODHLF                                         M0041400
      GO TO 8040                                                        M0041500
 8038 IF(JJ.EQ.TEMP(1))GO TO 8040                                       M0041600
      IF(JJ.EQ.NUMBER(1) .AND. L.EQ.MODHLF)GO TO 8050                   M0041700
      CALL ALARM(2031,I-1-ARGTOP,4,'PRO027  ')                          M0041800
      GO TO 8060                                                        M0041900
 8040 N=1                                                               M0042000
      IF (L .EQ. REAL .OR. L .EQ. BOOL)  GO TO 8045                     M0042100
      N = 2                                                             M0042200
      IF (L .EQ. REAL+MODHLF .OR. L .EQ. BOOL+MODHLF)  GO TO 8045       M0042300
      N = 3                                                             M0042400
 8045 IF (M.EQ.2) N=N+3                                                 M0042500
 8050 CALL CALLZZ(K)                                                    M0042600
      CALL TWOARG(QUIDLR,N)                                             M0042700
      CALL ARGCVT(J)                                                    M0042800
      CALL TWOARG(QUIDLR,1)                                             M0042900
      CALL RLSLIN                                                       M0043000
 8060 CONTINUE                                                          M0043100
      GO TO 22                                                          M0043200
C...       POCKET STATEMENT                                             M0043300
C                                                                       M0043400
 1968 ERRPT=-1                                                          M0043500
      IF(ARGTOP.LT.1)ERRPT=TOP-1                                        M0043600
      IF(ARGTOP.LT.11)GOTO 1974                                         M0043700
      ERRPT=28-ARGTOP                                                   M0043800
      IF(ARGTOP.GT.28)GOTO 1974                                         M0043900
      DO 1969 IPC=1,8                                                   M0044000
      ARGCNT=ARGTOP+1-IPC                                               M0044100
      ERRPT=-ARGCNT                                                     M0044200
      TEST=MODE(ARGSTK(ARGCNT))                                         M0044300
      IF(TEST.NE.REAL)GO TO 1974                                        M0044400
 1969 CONTINUE                                                          M0044500
      JARG=ARGTOP-8                                                     M0044600
      DO 1970 IPC=1,JARG                                                M0044700
      ARGCNT=JARG+1-IPC                                                 M0044800
      TEST=MODE(ARGSTK(ARGCNT))                                         M0044900
      ERRPT=-ARGCNT                                                     M0045000
      IF(TEST.NE.POINT)GO TO 1974                                       M0045100
 1970 CONTINUE                                                          M0045200
      KPCRTH=NAME(HDOLPC)                                               M0045300
      IF (NAMTBL(KPCRTH).NE.0) GO TO 1972                               M0045400
      NAMTBL(KPCRTH)=VBL(1)                                             M0045500
      CALL RESRVZ(KPCRTH,0,98,1)                                        M0045600
 1972 DO 1973 IPC=1,JARG                                                M0045700
      ARGCNT=JARG+1-IPC                                                 M0045800
      LPC=2-3*IPC                                                       M0045900
      CALL OPCODE(REPL)                                                 M0046000
      CALL ONEARG(3)                                                    M0046100
      CALL TWOARG(LPC,KPCRTH)                                           M0046200
      CALL ARGCVT(ARGSTK(ARGCNT))                                       M0046300
 1973 CALL RLSLIN                                                       M0046400
      CALL CALLZZ(K)                                                    M0046500
      DO 1971 IPC=1,8                                                   M0046600
 1971 CALL ARGCVT(ARGSTK(ARGTOP+1-IPC))                                 M0046700
      CALL TWOARG(QUIDLR,JARG)                                          M0046800
      CALL TWOARG(NOUGHT,KPCRTH)                                        M0046900
      CALL RLSLIN                                                       M0047000
      GO TO 22                                                          M0047100
 1974 CALL ALARM(2034,ERRPT,8,'PRO027  ')                               M0047200
      GO TO 22                                                          M0047300
C                                                                       M0047400
C                                                                       M0047500
C ***************** P U N C H   P R O C E S S I N G ******************  M0047600
C                                                                       M0047700
 8110 JJ=J                                                              M0047800
      IF(J.GT.5)GOTO 8112                                               M0047900
      IF(ARGTOP.GT.1)CALL ALARM(2031,-ARGTOP,4,'PRO027  ')              M0048000
 8112 GO TO (8160,8160,8180,8115,8115,8140,7100,7100),J                 M0048100
C            1    2    3    4    5    6                                 M0048200
C                                                                       M0048300
C ... J IS 4 OR 5 FOR LISTON OR NOLIST.  GENERATE CALL TOPRINT          M0048400
C     WITH CODE=J+9.                                                    M0048500
C                                                                       M0048600
 8115 K=NAME(SRPRNT)                                                    M0048700
      I=J+9                                                             M0048800
      J=L                                                               M0048900
      II=ARGTOP                                                         M0049000
      GO TO 8020                                                        M0049100
C                                                                       M0049200
C ... INVALID ARGUMENT.                                                 M0049300
 8120 CALL ALARM(2031,ERRPT,4,'PRO027  ')                               M0049400
      GO TO 8150                                                        M0049500
C                                                                       M0049600
C...  VALIDATE LIST ITEMS AND GENERATE CALL I.L.                        M0049700
C                                                                       M0049800
 8140 DO 8150 I=1,ARGTOP                                                M0049900
      J = ARGTOP + 1 - I                                                M0050000
      ERRPT=-J                                                          M0050100
      L = ARGSTK(J)                                                     M0050200
      IF(L.GT.NAMMAX)GO TO 8120                                         M0050300
      IF (NAMTBL(L)/MODULO .NE. VBL(1)/MODULO .AND.                     M0050400
     / (NAMTBL(L)/MODULO .NE. TEMP(1)/MODULO .OR.                       M0050500
     / (NAMTBL(L)/MODULO .EQ. TEMP(1)/MODULO .AND.                      M0050600
     / NAMTBL(L)-TEMP(1) .LE. MODHLF)))  GO TO 8120                     M0050700
C                                                                       M0050800
C... SET J = THE NUMBER OF THE BLOCK WHICH                              M0050900
C... CONTAINS THE CANONICAL FORM.                                       M0051000
C                                                                       M0051100
      J = 3                                                             M0051200
      IF (MOD(NAMTBL(L),MODULO) .EQ. REAL)  J = 1                       M0051300
      IF (NAMTBL(L)-TEMP(1) .EQ. MODHLF+REAL)  J = 2                    M0051400
      IF(JJ.LE.6)GOTO 7200                                              M0051500
      J=JJ-3                                                            M0051600
      JJJ=NAMTBL(L)-VBL(1)                                              M0051700
      IF(NAMTBL(L)/MODULO.EQ.TEMP(1)/MODULO)JJJ=NAMTBL(L)-TEMP(1)       M0051800
     * -MODHLF                                                          M0051900
      IF(JJJ.EQ.11.OR.JJJ.EQ.12.OR.JJJ.EQ.26.OR.JJJ.EQ.29.OR.JJJ.EQ.30) M0052000
     /  GOTO 7200                                                       M0052100
      GOTO 8120                                                         M0052200
 7200 CALL CALLZZ(K)                                                    M0052300
      CALL TWOARG(QUIDLR,J)                                             M0052400
      CALL ARGCVT(L)                                                    M0052500
      CALL TWOARG(QUIDLR,1)                                             M0052600
      CALL RLSLIN                                                       M0052700
 8150 CONTINUE                                                          M0052800
      GO TO 22                                                          M0052900
C                                                                       M0053000
C... PUNCH ALL SCALARS                                                  M0053100
C                                                                       M0053200
 8160 DO 8170  I = 1,2                                                  M0053300
      IF (FIRST(2,I) .EQ. 0)  GO TO 8170                                M0053400
      CALL CALLZZ(K)                                                    M0053500
      CALL TWOARG(QUIDLR,I)                                             M0053600
      CALL ARGCVT(FIRST(1,I))                                           M0053700
      CALL TWOARG(QUIDLR,FIRST(2,I))                                    M0053800
      CALL RLSLIN                                                       M0053900
 8170 CONTINUE                                                          M0054000
      IF (J .EQ. 2) GO TO 22                                            M0054100
C                                                                       M0054200
C... PUNCH ALL SURFACES                                                 M0054300
C                                                                       M0054400
 8180 IF (FIRST(2,3) .EQ. 0)  GO TO 22                                  M0054500
      CALL CALLZZ(K)                                                    M0054600
      CALL TWOARG(QUIDLR,3)                                             M0054700
      CALL ARGCVT(FIRST(1,3))                                           M0054800
      CALL TWOARG(QUIDLR,FIRST(2,3))                                    M0054900
      CALL RLSLIN                                                       M0055000
      GO TO 22                                                          M0055100
C                                                                       M0055200
C...     SYSTEM MACRO AND SEGMENT READ                                  M0055300
C                                                                       M0055400
 5700 IF(NMSEG.NE.0 .OR. NMMAC.NE.0)GO TO 5770                          M0055500
      IF (ARGTOP.EQ.0) THEN                                             M0055510
        J=0                                                             M0055520
      ELSE                                                              M0055530
        J=ARGSTK(ARGTOP)                                                M0055600
      ENDIF                                                             M0055610
      ERRPT=-ARGTOP                                                     M0055700
      IF(TOP.LT.9)GOTO 5705                                             M0055800
      J=STACK(1,TOP-5)                                                  M0055900
      ERRPT=TOP-5                                                       M0056000
 5705 IF(J.GT.NAMMAX)GOTO 7000                                          M0056100
      IF(ALOPN)GO TO 5710                                               M0056200
      CALL LIBOPC(1,IFLAG)                                              M0056300
      IF(IFLAG.NE.0)GO TO 5760                                          M0056400
      ALOPN=.TRUE.                                                      M0056500
 5710 LRARG=CNAMTB(J)                                                   M0056600
      CALL LIBSCH(LRARG,IFLAG)                                          M0056800
      IF(IGOTO.EQ.5)GO TO 5720                                          M0056900
      IF(IFLAG.NE.0)GO TO 5780                                          M0057000
      NMSEG=J                                                           M0057100
      IF(NAMTBL(NMSEG)/MODULO .EQ. PERMID(1)/MODULO)                    M0057200
     /     NAMTBL(NMSEG)=IDENT(1)                                       M0057300
      GO TO 22                                                          M0057400
 5720 IF(IFLAG.NE.0)GO TO 5785                                          M0057500
      NMMAC=J                                                           M0057600
      LMRSTR=.TRUE.                                                     M0057700
      ITMPSV(2)=TOP+1                                                   M0057800
      IF(TOP.GE.9)ITMPSV(2)=TOP-1                                       M0057900
      K=TOP-1                                                           M0058000
      DO 5730 I=1,K                                                     M0058100
      ITMPSV(2*I+1)=STACK(1,I)                                          M0058200
      ITMPSV(2*I+2)=STACK(2,I)                                          M0058300
 5730 CONTINUE                                                          M0058400
      IF(TOP.GE.9)GO TO 5740                                            M0058500
      ITMPSV(7)=SLASH(2)                                                M0058600
      I=SLASH(1)/MODULO                                                 M0058700
      ITMPSV(8)=META(I)                                                 M0058800
      ITMPSV(9)=NMMAC                                                   M0058900
 5735 IF(NAMTBL(NMMAC)/MODULO .EQ. PERMID(1)/MODULO)                    M0059000
     /     NAMTBL(NMMAC)=IDENT(1)                                       M0059100
      GO TO 22                                                          M0059200
 5740 I=STACK(1,TOP-1)                                                  M0059300
      IF(I.GT.NAMMAX)GO TO 5735                                         M0059400
      J=NAMTBL(I)                                                       M0059500
      IF(J/MODULO.NE.TEMP(1)/MODULO)GO TO 5735                          M0059600
      IF((J-TEMP(1)).NE.REAL)GO TO 5755                                 M0059700
      ITMPCT=ITMPCT+1                                                   M0059800
      CALL MACLBL(I,-ITMPCT,II)                                         M0059900
      NAMTBL(II)=VBL(1)+REAL                                            M0060000
      CALL RESRVZ(II,REAL,TXXXX(1,REAL),1)                              M0060100
      CALL OPCODE(REPL)                                                 M0060200
      CALL ONEARG(1)                                                    M0060300
      CALL ARGCVT(II)                                                   M0060400
      CALL ARGCVT(I)                                                    M0060500
      CALL RLSLIN                                                       M0060600
      CALL PUTTMP(REAL)                                                 M0060700
      ITMPSV(17)=II                                                     M0060800
      I=VBL(1)/MODULO                                                   M0060900
      ITMPSV(18)=META(I)                                                M0061000
      GO TO 5735                                                        M0061100
C                                                                       M0061200
 5750 IERROR=2001                                                       M0061300
      GO TO 5790                                                        M0061400
 5755 IERROR=1023                                                       M0061500
      ERRPT=TOP-1                                                       M0061600
      NMMAC=0                                                           M0061700
      LMRSTR=.FALSE.                                                    M0061800
      GO TO 5790                                                        M0061900
 5760 IERROR=72                                                         M0062000
      GO TO 5790                                                        M0062100
 5770 IERROR=71                                                         M0062200
      GO TO 5790                                                        M0062300
 5780 IERROR=73                                                         M0062400
      GO TO 5790                                                        M0062500
 5785 IERROR=17                                                         M0062600
 5790 CALL ALARM(IERROR,ERRPT,8,'PRO027  ')                             M0062700
C                                                                       M0062800
   22 RETURN                                                            M0062900
C                                                                       M0063000
C...  INDIRP  ENTRY                                                     M0063100
 4000 POINTX=.TRUE.                                                     M0063200
      GOTO 4001                                                         M0063300
C.....................................                                  M0063400
C...  INDIRV  ENTRY                                                     M0063500
C...  SRFVCT  ENTRY                                                     M0063600
 3800 POINTX=.FALSE.                                                    M0063700
C...   SET UP IMPLIED SURFACES  DS,PS,CS.                               M0063800
 4001 DO 4090 IPARM=1,3                                                 M0063900
      SURF=SRFNAM(IPARM)                                                M0064000
      IDECT=NAME(SURF)                                                  M0064100
C...  IS FIRST ITEM PERMID                                              M0064200
      TEST=ARGSTK(ARGTOP)                                               M0064300
      IF(TEST.GT.NAMMAX)GOTO 4007                                       M0064400
      IF(NAMTBL(TEST)/MODULO.NE.PERMID(1)/MODULO) GOTO 4007             M0064500
C...  IS FIRST WORD PS,DS, OR CS                                        M0064600
      ARGTOP=ARGTOP-1                                                   M0064700
      IF(((NAMTBL(TEST)-PERMID(1)).EQ.1).OR.                            M0064800
     1   (NAMTBL(TEST)-PERMID(1)).EQ.501) GOTO 3719                     M0064900
C...  IMPROPER PERMID                                                   M0065000
      CALL ALARM(2010,-ARGTOP-1,4,'PRO027  ')                           M0065100
      GOTO 4007                                                         M0065200
C                                                                       M0065300
 3719 IDECT=TEST                                                        M0065400
C...  SYMBOLIC OR NESTED DEFINITION OF VECTOR OR POINT YES,NO.          M0065500
 4007 TEST=MODE(ARGSTK(ARGTOP))                                         M0065600
      IF((POINTX.AND.(TEST.EQ.POINT)).OR.(.NOT.POINTX.AND.              M0065700
     1   (TEST.EQ.VECTOR)))GOTO 4008                                    M0065800
C...  NO.    CHECK  FOR THREE SCALARS.                                  M0065900
      DO 4010 I=1,3                                                     M0066000
      ITOP=ARGTOP-I+1                                                   M0066100
      ERRPT=-ITOP                                                       M0066200
      IF(MODE(ARGSTK(ITOP)).NE.REAL)GOTO 4017                           M0066300
 4010 CONTINUE                                                          M0066400
C...  GET A TEMPORARY FOR A POINT OR VECTOR                             M0066500
      IF(.NOT.POINTX)GOTO 3705                                          M0066600
      TEST=GETTMP(POINT)                                                M0066700
      GOTO 3706                                                         M0066800
 3705 TEST=GETTMP(VECTOR)                                               M0066900
C...  ASSIGN TEMPORARY STORAGE                                          M0067000
 3706 CALL OPCODE(MOVE)                                                 M0067100
      CALL ARGCVT(TEST)                                                 M0067200
      CALL ARGCVT(ARGSTK(ARGTOP))                                       M0067300
      CALL ARGCVT(ARGSTK(ARGTOP-1))                                     M0067400
      CALL ARGCVT(ARGSTK(ARGTOP-2))                                     M0067500
      CALL RLSLIN                                                       M0067600
      NEWTOP=ARGTOP-3                                                   M0067700
      GOTO 3721                                                         M0067800
 4008 TEST=ARGSTK(ARGTOP)                                               M0067900
      NEWTOP=ARGTOP-1                                                   M0068000
C...  OUTPUT PROCEDURE CALL                                             M0068100
 3721 IF(NEWTOP.NE.ARGTOP-3)GO TO 4026                                  M0068200
      IF(POINTX)GO TO 4022                                              M0068300
      M=VECTOR                                                          M0068400
      N=3                                                               M0068500
      GO TO 4024                                                        M0068600
 4022 M=POINT                                                           M0068700
      N=1                                                               M0068800
 4024 CALL REFGEN(N,TEST)                                               M0068900
      CALL PUTTMP(M)                                                    M0069000
 4026 CALL CALLZZ(K)                                                    M0069100
      CALL ARGCVT(IDECT)                                                M0069200
      CALL ARGCVT(TEST)                                                 M0069300
      CALL RLSLIN                                                       M0069400
 4028 ARGTOP=NEWTOP                                                     M0069500
      IF(ARGTOP.EQ.0) GOTO 22                                           M0069600
 4090 CONTINUE                                                          M0069700
      ERRPT=-ARGTOP                                                     M0069800
 4017 CALL ALARM(2011,ERRPT,8,'PRO027  ')                               M0069900
      GOTO 22                                                           M0070000
C    TEST AUF READ/1,...                                                M0070100
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           M0070210
 7000 J=J-NAMMAX                                                        M0070220
      IF(NLAST.GT.0)CALL MCXTRN(5,J,IDUMMY)                             M0070230
      CALL BCDBIN(CNUMTB(J),M,N)                                        M0070300
      IF(M.NE.1) GOTO 5750                                              M0070400
      ARGTOP=ARGTOP-1                                                   M0070500
      IF(ARGTOP.EQ.0)GOTO 5750                                          M0070600
 7001 J=ARGSTK(ARGTOP)                                                  M0070700
      K5=(NAMTBL(J)/MODULO)*MODULO                                      M0070800
      IF(K5.NE.VBL(1).AND.K5.NE.TEMP(1)) GOTO 7010                      M0070900
C   EINLESEUEBERPRUEFUNG FUER INDIZIERTE VARIABLE IN RESRED             M0071000
      IF(K5.EQ.TEMP(1).AND.NAMTBL(J)-K5.GT.MODHLF)GOTO 7060             M0071100
      CALL ALARM(1001,-ARGTOP,8,'PRO027  ')                             M0071200
      GO TO 22                                                          M0071300
C  LESEN VON 'APTLIB'                                                   M0071400
 7010 IF(ALOPN)GOTO 7020                                                M0071500
      CALL LIBOPC(1,IFLAG)                                              M0071600
      IF(IFLAG.NE.0)GOTO 5760                                           M0071700
      ALOPN=.TRUE.                                                      M0071800
 7020 LRARG=CNAMTB(J)                                                   M0071900
      CALL FINDME(LDAFIL,LRARG,IFLAG)                                   M0072100
      IF(IFLAG.NE.0)GOTO 5780                                           M0072200
C    READ THE FIRST RECORD                                              M0072300
      CALL RDSATZ(LDAFIL,INP,IDUM1,IDUM2,IFLAG)                         M0072400
      IF(IFLAG.NE.0)GOTO 5780                                           M0072500
C FLAECHEN-ART                                                          M0072600
      M=INP(5)                                                          M0072700
C  GEOMETRIE QUALIFIZIEREN                                              M0072800
      NAMTBL(J)=VBL(1)+M                                                M0072900
C   SPEICHER RESERVIEREN                                                M0073000
      CALL RESRVZ(J,M,TXXXX(1,M),1)                                     M0073100
C IN INP(8) IST DIE LAENGE DER KANONISCHEN FORM GESPEICHERT             M0073200
C  MAXSIZ,WENN NOETIG AENDERN                                           M0073300
      IF(INP(8).LE.(IABS(MAXSIZ(2))))GOTO 7040                          M0073400
      IF(INP(8).LE.(IABS(MAXSIZ(1))))GOTO 7030                          M0073500
      MAXSIZ(2)=MAXSIZ(1)                                               M0073600
      MAXSIZ(1)=INP(8)                                                  M0073700
      GOTO7040                                                          M0073800
 7030 MAXSIZ(2)=INP(8)                                                  M0073900
C NACH FREIEM PLATZ ABFRAGEN                                            M0074000
 7040 DO 7045 I=4,ISC                                                   M0074100
      IF(J.EQ.KSC(1,I))GOTO 7048                                        M0074200
 7045 CONTINUE                                                          M0074300
      ISC=ISC+1                                                         M0074400
      IF(ISC.LE.300)GOTO 7047                                           M0074500
      CALL ALARM(34,-ARGTOP,8,'PRO027  ')                               M0074600
      GOTO 22                                                           M0074700
 7047 KSC(1,ISC)=J                                                      M0074800
      KSC(2,ISC)=INP(8)                                                 M0074900
 7048 JJ=MOD(J,CANTOP)                                                  M0075000
      DO 7050 I=1,CANTOP                                                M0075100
      JJ=MOD(JJ,CANTOP)+1                                               M0075200
      IF(CANSIZ(1,JJ).NE.0.AND.CANSIZ(2,JJ).NE.J)GOTO 7050              M0075300
      CANSIZ(1,JJ)=INP(8)                                               M0075400
      CANSIZ(2,JJ)=J                                                    M0075500
      GOTO 7060                                                         M0075600
 7050 CONTINUE                                                          M0075700
      CALL ALARM(53,-ARGTOP,8,'PRO027  ')                               M0075800
      GOTO 22                                                           M0075900
C  AUSGABE DES BEFEHLES 'READ/1,NAME'                                   M0076000
 7060 CALL CALLZZ(K)                                                    M0076100
      CALL TWOARG(QUIDLR,1)                                             M0076200
      CALL ARGCVT(J)                                                    M0076300
      CALL TWOARG(DLR,ONE)                                              M0076400
      CALL RLSLIN                                                       M0076500
C SCHLIESSEN DES PDS-LESENS                                             M0076600
      IF(ALOPN) CALL CLOSPE(LDAFIL,IFLAG)                               M0076700
      ALOPN=.FALSE.                                                     M0076800
      ARGTOP=ARGTOP-1                                                   M0076900
      ERRPT=-ARGTOP                                                     M0077000
      IF(ARGTOP.GT.0)GOTO 7001                                          M0077100
      GOTO 22                                                           M0077200
C     VERARBEITUNG DER SONDER-PUNCH-ANWEISUNG                           M0077300
 7100 J=6                                                               M0077400
      ARGTOP=ARGTOP-1                                                   M0077500
      IF(ARGTOP.NE.0)GOTO 8140                                          M0077600
      CALL ALARM(2030,TOP-1,4,'PRO027  ')                               M0077700
      GOTO 22                                                           M0077800
      END                                                               M0077900
**** SOURCE FILE : M0006669.V10   ***
*
C                                                                       PRT00100
C              FORTRAN SUBROUTINE PRTIL                                 PRT00200
C                                                                       PRT00300
C LINKAGE      SUBROUTINE PRTIL(LINE)                                   PRT00400
C                                                                       PRT00500
C          SUBSIDIARIES                  CALLED BY                      PRT00600
C          TYPE          ENTRY           TYPE          ENTRY            PRT00700
C          SUBROUTINE    FOUTXX          SUBROUTINE    RLSLIN           PRT00800
C          SUBROUTINE    OPPAIR                                         PRT00900
C          SUBROUTINE    BINBCD                                         PRT01000
C                                                                       PRT01100
      SUBROUTINE PRTIL(LINE)                                            PRT01200
C                                                                       PRT01300
      IMPLICIT INTEGER (A-Z)                                            PRT01400
C                                                                       PRT01410
C        0.    SYSTEM DEPENDENT PARAMETERS                              PRT01420
C                                                                       PRT01430
      INCLUDE 'SDP.INC'                                                 PRT01440
C IWRD:        NO. OF BYTES PER INTEGER WORD                            PRT01450
C IFAC:        BYTE LEFT SHIFT MULTIPLICATION FACTOR                    PRT01460
C                                                                       PRT01500
C        1.    NAME TABLE AND TABLE LIMITS                              PRT01600
C                                                                       PRT01700
      INCLUDE 'NAMETB.INC'                                              PRT01810
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                PRT01850
C CNAMTB:      NAME TABLE OR DICTIONARY                                 PRT01950
C                                                                       PRT02200
C       19.    INTERMEDIATE LANGUAGE TEXT                               PRT02300
C                                                                       PRT02400
      COMMON/ILTEXT/ILTEXT                                              PRT02500
      DIMENSION ILTEXT(94),TEXTIN(90)                                   PRT02600
C TPNTRX:      POINTER TO LAST TEXTIN ENTRY                             PRT02700
      EQUIVALENCE (TPNTRX,ILTEXT(3))                                    PRT02800
C OPTEXT:      CONTAINS COMMAND CODE FOR CURRENT I.L. COMMAND           PRT02900
      EQUIVALENCE (OPTEXT,ILTEXT(4))                                    PRT03000
C TEXTIN:      STORAGE FOR CURRENTLY GENERATED I.L. COMMAND ARGUM.LIST  PRT03100
      EQUIVALENCE (TEXTIN(1),ILTEXT(5))                                 PRT03200
C                                                                       PRT03300
C       33.    SYMBOLIC FILE DEFINITIONS                                PRT03400
C                                                                       PRT03500
      INCLUDE 'SYMFIL.INC'                                              PRT03610
C VLFILE:      VERIFICATION LISTING FILE                                PRT03800
C*                                                                      PRT04000
C ARGUMENTS    LINE     OUTPUT ARRAY TO CONTAIN ALPHA-                  PRT04100
C                       NUMERIC EQUIVALENT OF BINARY I.L..              PRT04200
C                                                                       PRT04300
      CHARACTER*6 OPBCD(21)                                             PRT04400
      CHARACTER*4 BLK,NEG                                               PRT04410
      CHARACTER*124  LINE                                               PRT04420
      DATA OPBCD( 1)/'FADD'/,                                           PRT04500
     1     OPBCD( 2)/'FSUB'/,                                           PRT04600
     2     OPBCD( 3)/'FMPY'/,                                           PRT04700
     3     OPBCD( 4)/'FDIV'/,                                           PRT04800
     4     OPBCD( 5)/'PEXP'/,                                           PRT04900
     5     OPBCD( 6)/'LABEL'/,                                          PRT05000
     6     OPBCD( 7)/'ENTRY'/,                                          PRT05100
     7     OPBCD( 8)/'JUMP'/,                                           PRT05200
     8     OPBCD( 9)/'SEQNCE'/,                                         PRT05300
     9     OPBCD(10)/'RETMC'/                                           PRT05400
      DATA OPBCD(11)/'CONJMP'/,                                         PRT05500
     1     OPBCD(12)/'RESRV'/,                                          PRT05600
     2     OPBCD(13)/'CVTSUB'/,                                         PRT05700
     3     OPBCD(14)/'CALMC'/,                                          PRT05800
     4     OPBCD(15)/'ASNADD'/,                                         PRT05900
     5     OPBCD(16)/'ASNJMP'/,                                         PRT06000
     6     OPBCD(17)/'REPL'/,                                           PRT06100
     7     OPBCD(18)/'CALL'/,                                           PRT06200
     8     OPBCD(19)/'MOVE'/,                                           PRT06300
     9     OPBCD(20)/'VBLJMP'/                                          PRT06400
      DATA OPBCD(21)/'HOLDAT'/                                          PRT06500
      DATA BLK/' '/,NEG/'   -'/                                         PRT06600
C**                                                                     PRT06700
      LINE(5:)=OPBCD(OPTEXT)                                            PRT06800
      GOTO (100,100,100,100,100,600,600,600,900,1000,1100,1200,1300,    PRT07000
     /1400,1500,1600,1700,1800,1900,2000,2100),OPTEXT                   PRT07100
C                                                                       PRT07200
C...  FADD,FSUB,FMPY,FDIV,FEXP                                          PRT07300
C                                                                       PRT07400
  100 L=13                                                              PRT07500
      DO 101 I=1,5,2                                                    PRT07600
      CALL OPPAIR(LINE(L:),TEXTIN(I))                                   PRT07700
  101 L=L+20                                                            PRT07800
      K=69                                                              PRT07900
      GOTO 9000                                                         PRT08000
C                                                                       PRT08100
C...  LABEL,ENTRY,JUMP                                                  PRT08200
C                                                                       PRT08300
  600 ITEXT = TEXTIN(1)                                                 PRT08400
      LINE(13:)=CNAMTB(ITEXT)                                           PRT08500
      K=21                                                              PRT08700
      GOTO 9000                                                         PRT08800
C                                                                       PRT08900
C...     SEQNCE                                                         PRT09000
C                                                                       PRT09100
  900 LINE(13:)=BLK                                                     PRT09200
      IF (TEXTIN(1)) 901,902,902                                        PRT09300
  901 LINE(13:)=NEG                                                     PRT09400
  902 CALL BINBCD(IABS(TEXTIN(1)),LINE(17:),COUNT)                      PRT09500
      K=25                                                              PRT09600
      GOTO 9000                                                         PRT09700
C                                                                       PRT09800
C...     RETMC                                                          PRT09900
C                                                                       PRT10000
 1000 CALL BINBCD(TEXTIN(1),LINE(13:),COUNT)                            PRT10100
      K=21                                                              PRT10200
      GOTO 9000                                                         PRT10300
C                                                                       PRT10400
C...  CONJMP                                                            PRT10500
C                                                                       PRT10600
 1100 CALL OPPAIR(LINE(13:),TEXTIN(1))                                  PRT10700
      DO 1101 I=1,3                                                     PRT10800
      ITEXT=TEXTIN(I+2)                                                 PRT10900
      I1=I*8+25                                                         PRT10950
      LINE(I1:)=CNAMTB(ITEXT)                                           PRT11000
 1101 CONTINUE                                                          PRT11100
      K=57                                                              PRT11200
      GOTO 9000                                                         PRT11300
C                                                                       PRT11400
C...  RESRV                                                             PRT11500
C                                                                       PRT11600
 1200 ITEXT = TEXTIN(1)                                                 PRT11700
      LINE(13:)=CNAMTB(ITEXT)                                           PRT11800
      DO 1201 I=2,4                                                     PRT12000
 1201 CALL BINBCD(TEXTIN(I),LINE(I*8+5:),COUNT)                         PRT12100
      K=41                                                              PRT12200
      GOTO 9000                                                         PRT12300
C                                                                       PRT12400
C...  CVTSUB                                                            PRT12500
C                                                                       PRT12600
 1300 L=13                                                              PRT12700
      DO 1301 I=1,5,2                                                   PRT12800
      CALL OPPAIR(LINE(L:),TEXTIN(I))                                   PRT12900
 1301 L=L+20                                                            PRT13000
      CALL BINBCD(TEXTIN(7),LINE(65:),COUNT)                            PRT13100
      K=81                                                              PRT13200
      GOTO 9000                                                         PRT13300
C                                                                       PRT13400
C...  CALMC                                                             PRT13500
C                                                                       PRT13600
 1400 ITEXT = TEXTIN(1)                                                 PRT13700
      LINE(13:)=CNAMTB(ITEXT)                                           PRT13800
      CALL BINBCD(TEXTIN(2),LINE(21:),COUNT)                            PRT14000
      CALL BINBCD(TEXTIN(3),LINE(29:),COUNT)                            PRT14100
      K=33                                                              PRT14200
      GOTO 9000                                                         PRT14300
C                                                                       PRT14400
C...  ASNADD                                                            PRT14500
C                                                                       PRT14600
 1500 ITEXT = TEXTIN(1)                                                 PRT14700
      LINE(13:)=CNAMTB(ITEXT)                                           PRT14800
      CALL OPPAIR(LINE(25:),TEXTIN(2))                                  PRT15000
      K=41                                                              PRT15100
      GOTO 1601                                                         PRT15200
C                                                                       PRT15300
C...  ASNJMP                                                            PRT15400
C                                                                       PRT15500
 1600 ITEXT = TEXTIN(1)                                                 PRT15600
      LINE(13:)=CNAMTB(ITEXT)                                           PRT15700
      ITEXT = TEXTIN(2)                                                 PRT15900
      LINE(25:)=CNAMTB(ITEXT)                                           PRT16000
      K=33                                                              PRT16200
 1601 LINE(21:)=BLK                                                     PRT16300
      GOTO 9000                                                         PRT16400
C                                                                       PRT16500
C...  REPL                                                              PRT16600
C                                                                       PRT16700
 1700 CALL BINBCD(TEXTIN(1),LINE(13:),COUNT)                            PRT16800
      CALL OPPAIR(LINE(21:),TEXTIN(2))                                  PRT16900
      CALL OPPAIR(LINE(41:),TEXTIN(4))                                  PRT17000
      K=61                                                              PRT17100
      GOTO 9000                                                         PRT17200
C                                                                       PRT17300
C...  CALL                                                              PRT17400
C                                                                       PRT17500
 1800 ITEXT = TEXTIN(1)                                                 PRT17600
      LINE(13:)=CNAMTB(ITEXT)                                           PRT17700
      LINE(21:32)=BLK                                                   PRT17900
      LIMIT=TPNTRX-9                                                    PRT18200
      J = 2                                                             PRT18300
      L=33                                                              PRT18400
      IF (LIMIT) 1804,1804,1801                                         PRT18500
 1801 DO 1803 I=1,LIMIT,10                                              PRT18600
      DO 1802 II=L,100,20                                               PRT18700
      CALL OPPAIR(LINE(II:),TEXTIN(J))                                  PRT18800
 1802 J = J+2                                                           PRT18900
      CALL FOUTXX (VLFILE,LINE,116)                                     PRT19000
      L=13                                                              PRT19100
      LINE(9:)=BLK                                                      PRT19200
 1803 LINE(5:) = BLK                                                    PRT19300
 1804 IF (TPNTRX.EQ.1) GOTO 1807                                        PRT19400
      DO 1805 I=J,TPNTRX,2                                              PRT19500
      CALL OPPAIR(LINE(L:),TEXTIN(I))                                   PRT19600
 1805 L=L+20                                                            PRT19700
 1807 K = L                                                             PRT19800
      GOTO 9000                                                         PRT19900
C                                                                       PRT20000
C...  MOVE                                                              PRT20100
C                                                                       PRT20200
 1900 LIMIT=TPNTRX-11                                                   PRT20300
      J = 1                                                             PRT20400
      L=13                                                              PRT20500
      IF (LIMIT) 1804,1804,1801                                         PRT20600
C                                                                       PRT20700
C...  VBLJMP                                                            PRT20800
C                                                                       PRT20900
 2000 CALL OPPAIR(LINE(13:),TEXTIN(1))                                  PRT21000
      ITEXT = TEXTIN(2)                                                 PRT21300
      LINE(21:)=CNAMTB(ITEXT)                                           PRT21400
      L=29                                                              PRT21600
 2006 J = 3                                                             PRT21700
      LIMIT=TPNTRX-20+L/4                                               PRT21800
      IF (LIMIT) 2004,2004,2001                                         PRT21900
 2001 DO 2003 I=1,LIMIT,13                                              PRT22000
      DO 2002 II=L,112,8                                                PRT22100
      IF (OPTEXT.GT.20) GOTO 2007                                       PRT22200
      ITEXT = TEXTIN(J)                                                 PRT22300
      LINE(II:)=CNAMTB(ITEXT)                                           PRT22400
      GOTO 2002                                                         PRT22600
 2007 CALL HOLFRM(TEXTIN(J),LINE,II,IWRD,NWD)                           PRT22700
      LINE(II+4:II+7)=BLK                                               PRT22800
 2002 J = J+1                                                           PRT22900
      CALL FOUTXX (VLFILE,LINE,120)                                     PRT23000
      L=13                                                              PRT23100
      LINE(9:12)=BLK                                                    PRT23200
 2003 LINE(5:8) = LINE(1:4)                                             PRT23300
 2004 DO 2005 I=J,TPNTRX                                                PRT23400
      IF (OPTEXT.GT.20) GOTO 2008                                       PRT23500
      ITEXT = TEXTIN(I)                                                 PRT23600
      LINE(L:) = CNAMTB(ITEXT)                                          PRT23700
      GOTO 2005                                                         PRT23900
 2008 CALL HOLFRM(TEXTIN(I),LINE,L,IWRD,NWD)                            PRT24000
      LINE(L+4:L+7)=BLK                                                 PRT24100
 2005 L=L+8                                                             PRT24200
      K = L                                                             PRT24300
 9000 IF(K.GT.120)GOTO 9002                                             PRT24400
 9001 LINE(K:) = BLK                                                    PRT24600
 9002 CALL FOUTXX(VLFILE,LINE,120)                                      PRT24700
      RETURN                                                            PRT24800
C                                                                       PRT24900
C...  HOLDAT                                                            PRT25000
C                                                                       PRT25100
 2100 ITEXT = TEXTIN(1)                                                 PRT25200
      LINE(13:)=BLK                                                     PRT25300
      LINE(17:)=CNAMTB(ITEXT)                                           PRT25400
      LINE(25:)=BLK                                                     PRT25600
      CALL BINBCD(TEXTIN(2),LINE(29:),COUNT)                            PRT25700
      L=37                                                              PRT25800
      GOTO 2006                                                         PRT25900
       END                                                              PRT26000
**** SOURCE FILE : M0006670.V03   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE PUTTMP                                M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE PUTTMP(MODE)                                  M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    BINBCD          SUBROUTINE    BOOLIF           M0000800
C          SUBROUTINE    FOUTXX          SUBROUTINE    INPAT            M0000900
C                                        SUBROUTINE    LARGES           M0001000
C                                        SUBROUTINE    LCANON           M0001100
C                                        SUBROUTINE    MACREC           M0001200
C                                        SUBROUTINE    PRO020           M0001300
C                                        SUBROUTINE    PRO021           M0001400
C                                        SUBROUTINE    PRO026           M0001500
C                                        SUBROUTINE    PRO027           M0001600
C                                        SUBROUTINE    RECOG            M0001700
C                                        SUBROUTINE    RECOGN           M0001800
C                                        SUBROUTINE    REPLAC           M0001900
C                                        SUBROUTINE    SSDEF            M0002000
C                                        SUBROUTINE    SUBCOD           M0002100
C                                                                       M0002200
      SUBROUTINE PUTTMP(MODE)                                           M0002300
C                                                                       M0002400
      IMPLICIT INTEGER (A-Z)                                            M0002500
C                                                                       M0002600
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         M0002700
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    M0002800
      COMMON/TMP/TXXXX                                                  M0002900
      DIMENSION TXXXX(2,32)                                             M0003000
C                                                                       M0003100
C       33.    SYMBOLIC FILE DEFINITIONS                                M0003200
C                                                                       M0003300
      INCLUDE 'SYMFIL.INC'                                              M0003410
C ELFIL1:      OUTPUT OF PACKING FACTOR FOR CREATING PAGES (INTERPRETER)M0003600
C*                                                                      M0003800
C ARGUMENT     MODE      MODE OF TEMPORARY STORAGE NAME TO BE RELEASED  M0003900
C                                                                       M0004000
      CHARACTER INAM*24                                                 M0004100
      DATA INAM/' PUTTMP ERROR   '/                                     M0004200
C**                                                                     M0004300
      IF (TXXXX(2,MODE) .EQ. 0)    GO  TO  999                          M0004400
      TXXXX(2,MODE) = TXXXX(2,MODE)-1                                   M0004500
      RETURN                                                            M0004600
C                                                                       M0004700
C     ERROR                                                             M0004800
  999 CALL BINBCD(MODE,INAM(17:),I)                                     M0004900
      CALL FOUTXX (ELFIL1,INAM,24)                                      M0005000
      RETURN                                                            M0005100
       END                                                              M0005200
**** SOURCE FILE : M0006671.W01   ***
*
C                                                                       RED00100
C              FORTRAN SUBROUTINE READ                                  RED00200
C                                                                       RED00300
C LINKAGE      SUBROUTINE READ (INCHAR)                                 RED00400
C                                                                       RED00500
C          SUBSIDIARIES                  CALLED BY                      RED00600
C          TYPE          ENTRY           TYPE          ENTRY            RED00700
C          SUBROUTINE    ICONV           SUBROUTINE    INPUT            RED00800
C          SUBROUTINE    CREAD           SUBROUTINE    PRO026           RED00900
C          SUBROUTINE    LIBRD                                          RED01000
C          SUBROUTINE    CPRINT                                         RED01100
C          SUBROUTINE    ALARM                                          RED01200
C          SUBROUTINE    CFORM                                          RED01300
C                                                                       RED01400
      SUBROUTINE READ (INCHAR)                                          RED01500
C                                                                       RED01600
      IMPLICIT INTEGER (A-Z)                                            RED01700
C                                                                       RED01800
C                                                                       RED01900
C        1.    NAME TABLE AND TABLE LIMITS                              RED02000
C                                                                       RED02100
      INCLUDE 'NAMETB.INC'                                              RED02210
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                RED02250
C CNAMTB:      NAME TABLE OR DICTIONARY                                 RED02350
C                                                                       RED02600
C        2.    STACK AND POINTER STORAGE                                RED02700
C                                                                       RED02800
      COMMON/STKLST/STKLST                                              RED02900
      DIMENSION STKLST(300),STACK(2,99)                                 RED03000
C TOP:         POINTER TO LAST STACK ENTRY                              RED03100
      EQUIVALENCE (TOP,STKLST(1))                                       RED03200
C STACK:       WORKING STACK                                            RED03300
      EQUIVALENCE (STACK(1,1),STKLST(4))                                RED03400
C                                                                       RED03500
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      RED03600
C                                                                       RED03700
      COMMON/CODE/CODE                                                  RED03800
      DIMENSION CODE(150),RTERM(2),SLASH(2),QUOTE(2)                    RED03900
C RTERM:       (1)=CODE CLASS  4000,(2)=NAMTBL INDEX OF 'RTERM '        RED04000
      EQUIVALENCE (RTERM(1),CODE(7))                                    RED04100
C SLASH:       (1)=CODE CLASS  5000,(2)=NAMTBL INDEX OF '/     '        RED04200
      EQUIVALENCE (SLASH(1),CODE(9))                                    RED04300
C QUOTE:       (1)=CODE CLASS 12000,(2)=NAMTBL INDEX OF ''     '        RED04400
      EQUIVALENCE (QUOTE(1),CODE(23))                                   RED04500
C                                                                       RED04600
C        4.    PRODUCTION TABLE                                         RED04700
C                                                                       RED04800
      COMMON/SRCTBL/SRCTBL                                              RED04900
      DIMENSION SRCTBL(502),META(50)                                    RED05000
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   RED05100
      EQUIVALENCE (META(1),SRCTBL(3))                                   RED05200
C                                                                       RED05300
C        5.    PROGRAM CONTROL FLAGS                                    RED05400
C                                                                       RED05500
      COMMON/FLAGS/FLAGS                                                RED05600
      LOGICAL NEWSTM                                                    RED05700
      DIMENSION FLAGS(4)                                                RED05800
C NEWSTM:      TRUE WHEN NEXT SOURCE STATEMENT REQUESTED FOR PROCESS    RED05900
      EQUIVALENCE (NEWSTM,FLAGS(2))                                     RED06000
C                                                                       RED06100
C        7.    STRING STORAGE AREA                                      RED06200
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT   RED06300
      COMMON/INPTR/CNT                                                  RED06400
C                                                                       RED06500
C       11.    SEQUENCE NUMBER STORAGE                                  RED06600
C                                                                       RED06700
      INCLUDE 'SEQCOM.INC'                                              RED06810
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    RED07000
C                                                                       RED07200
C       20.    IO - ARRAY                                               RED07300
C              I/O ARRAY                                                RED07400
      INCLUDE 'DARRAY.INC'                                              RED07710
C                                                                       RED07800
C       22.    MACRO PROCESSING VARIABLES                               RED07900
C                                                                       RED08000
      COMMON/MACXX1/MACXX1                                              RED08100
      LOGICAL MACLDD                                                    RED08200
      DIMENSION MACXX1(71)                                              RED08300
C MACLDD:      TRUE WHEN MACRO TEXT IS TO BE LOAD INTO MCBUFF TABLE     RED08400
      EQUIVALENCE (MACLDD,MACXX1(7))                                    RED08500
C                                                                       RED08600
C      25A.    MACRO PROCESSING ARRAY                                   RED08700
C                                                                       RED08800
      COMMON/MACXX5/MACXX5                                              RED08900
      DIMENSION MACXX5(135),ITMPSV(135)                                 RED09000
C ITMPSV:      TEMPORARY STORAGE DURING FINAL MACRO PROCESSING          RED09100
      EQUIVALENCE (ITMPSV(1),MACXX5(1))                                 RED09200
C                                                                       RED09300
C       29.    CLASS CODE MODULI                                        RED09400
C                                                                       RED09500
      COMMON/MODULI/MODULI                                              RED09600
      DIMENSION MODULI(2)                                               RED09700
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    RED09800
      EQUIVALENCE (MODULO,MODULI(1))                                    RED09900
C                                                                       RED10000
C       36.    SYSTEM MACRO AND SEGMENT READ VARIABLES                  RED10100
C                                                                       RED10200
      COMMON/MACSEG/MACSEG                                              RED10300
      LOGICAL LMRSTR,LMREND                                             RED10400
      DIMENSION MACSEG(6)                                               RED10500
C NMSEG:       NAMTBL POINTER TO THE NAME OF THE PART PROGRAM SEGMENT   RED10600
      EQUIVALENCE (NMSEG,MACSEG(2))                                     RED10700
C NMMAC:       NAMTBL POINTER TO SYSTEM MACRO NAME                      RED10800
      EQUIVALENCE (NMMAC,MACSEG(3))                                     RED10900
C LMRSTR:      FLAG ON STARTS READING IN A SYSTEM MACRO                 RED11000
      EQUIVALENCE (LMRSTR,MACSEG(4))                                    RED11100
C LMREND:      FLAG ON AFTER COMPLETION READING A SYSTEM MACRO          RED11200
      EQUIVALENCE (LMREND,MACSEG(6))                                    RED11300
C                                                                       RED11400
C       39.    COMMON BLOCK LIBRARY PRINTING FLAG                       RED11500
C              FLAG ON CAUSE PRINTING OF INPUT LIBRARIES                RED11600
      COMMON/LIBPRT/LIBPRT                                              RED11700
      LOGICAL LIBPRT                                                    RED11800
C                                                                       RED11900
C       40.    PARAMETERS REQUIRED BY SUPERVISOR                        RED12000
C                                                                       RED12100
      INCLUDE 'SUPER.INC'                                               RED12210
C END:         FLAG TO INDICATE LAST PART PROGRAM                       RED12500
C IRDSAV:      SAVE AREA FOR FIRST CARD IN PART PROGRAM                 RED12700
C                                                                       RED12900
C       43.    DO LOOP CONTROL VALUES                                   RED13000
C                                                                       RED13100
      COMMON/DOLOOP/DOLOOP                                              RED13200
      LOGICAL DLRFLG                                                    RED13300
      DIMENSION DOLOOP(8)                                               RED13400
C DLRFLG:      FLAG IS ON WHEN CONTINUATION CARD EXPECTED               RED13500
      EQUIVALENCE (DLRFLG,DOLOOP(8))                                    RED13600
C                                                                       RED13700
C       44.    ERROR POSITION TABLE                                     RED13800
C                                                                       RED13900
      COMMON/ERRPOS/ERRPOS                                              RED14000
      INTEGER ERRPOS,ERRPNT                                             RED14100
      DIMENSION ERRPOS(302),ERRPNT(100)                                 RED14200
C ERRPNT:      CONTAINS POINTERS TO INPUT STATEMENT TEXT POSITIONS      RED14300
      EQUIVALENCE (ERRPNT(1),ERRPOS(3))                                 RED14400
C*                                                                      RED14500
      PARAMETER (NVLD=80)                                               RED14710
      CHARACTER RDCHAR*80,VALIDC*(NVLD)                                 RED14720
      DIMENSION INCHAR(76),CONV(NVLD)                                   RED14730
      CHARACTER*6 IA(5),LRARG                                           RED14740
      CHARACTER*4 IBLK,CFINI                                            RED14750
      LOGICAL QTFLG,READFG,LIBFLG                                       RED14800
      DATA          READFG /.TRUE./                                     RED14900
      DATA  II,IBLK,CFINI,LINEST /0,'    ','FINI',13/                   RED15600
      DATA IA/'PARTNO','TITLES','PPRINT','INSERT','REMARK'/             RED15700
C                                                                       RED15810
C     LIST OF VALID CHARACTERS                                          RED15820
C                                                                       RED15830
      DATA VALIDC( 1:10)/'0123456789'/                                  RED15840
      DATA VALIDC(11:36)/'ABCDEFGHIJKLMNOPQRSTUVWXYZ'/                  RED15850
      DATA VALIDC(37:48)/' +-*/=.,''()$'/                               RED15860
C  ASCII/EBCDIC REPRESENTATION OF BCDIC CHARACTERS ()+='                RED15870
      DATA VALIDC(49:53)/'%<&#@'/                                       RED15875
C  SEMI-COLON                                                           RED15880
      DATA VALIDC(54:54)/';'/                                           RED15885
C  LOWER CASE CHARACTERS                                                RED15890
      DATA VALIDC(55:80)/'abcdefghijklmnopqrstuvwxyz'/                  RED15895
C                                                                       RED15900
C                   CONV TABLE                                          RED16000
C                                                                       RED16100
C                 0   1   2   3   4   5   6   7   8   9                 RED18110
      DATA CONV/  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,                RED18112
C                 A   B   C   D   E   F   G   H   I                     RED18114
     1           15, 16, 17, 18, 19, 20, 21, 22, 23,                    RED18116
C                 J   K   L   M   N   O   P   Q   R                     RED18118
     2           27, 28, 29, 30, 31, 32, 33, 34, 35,                    RED18120
C                 S   T   U   V   W   X   Y   Z                         RED18122
     3           40, 41, 42, 43, 44, 45, 46, 47,                        RED18124
C                SP   +   -   *   /   =   .   ,   '   (   )   $         RED18126
     4           38, 14, 26, 37, 39, 12, 24, 48, 13, 49, 25, 36,        RED18128
C                 %   <   &   #   @   ;                                 RED18130
     5           49, 25, 26, 12, 13,  0,                                RED18132
C                 a   b   c   d   e   f   g   h   i                     RED18134
     6           15, 16, 17, 18, 19, 20, 21, 22, 23,                    RED18136
C                 j   k   l   m   n   o   p   q   r                     RED18138
     7           27, 28, 29, 30, 31, 32, 33, 34, 35,                    RED18140
C                 s   t   u   v   w   x   y   z                         RED18142
     8           40, 41, 42, 43, 44, 45, 46, 47/                        RED18144
C**                                                                     RED18200
      IF(.NOT.DLRFLG)INLIN=0                                            RED18300
      IF(.NOT.READFG) GO TO 110                                         RED18400
      NUMCHR = 72                                                       RED18500
      NUMI = 0                                                          RED18600
C                                                                       RED18700
C...   IF END IS FALSE, FIRST CARD FOR THIS PROGRAM IS IN IRDSAV        RED18800
C                                                                       RED18900
      LIBFLG=.TRUE.                                                     RED19000
      IF(END)GO TO 15                                                   RED19100
      RDCHAR=IRDSAV                                                     RED19350
      END=.TRUE.                                                        RED19400
      GO TO 25                                                          RED19500
C                                                                       RED19600
C                   READ CARD IMAGE                                     RED19700
C                                                                       RED19800
   15 IF(NMSEG.EQ.0)GO TO 16                                            RED19900
      LRARG=CNAMTB(NMSEG)                                               RED20110
      CALL LIBRD(LRARG,IFLAG,RDCHAR)                                    RED20200
      IF(IFLAG.EQ.0) GO TO 27                                           RED20300
      IF(IFLAG.NE.1)CALL ALARM(74,0,8,'READ    ')                       RED20400
      NMSEG=0                                                           RED20500
      GO TO 19                                                          RED20600
   16 IF(NMMAC.NE.0)GO TO 32                                            RED20700
   19 CALL CREAD (RDCHAR,IEND)                                          RED20800
      IF (IEND.EQ.1) GO TO 50                                           RED20900
   25 LIBFLG=.FALSE.                                                    RED21000
   26 CNT=0                                                             RED21100
      GO TO 34                                                          RED21200
   27 IF(LIBPRT) GO TO 25                                               RED21300
      GO TO 26                                                          RED21400
   32 IF(.NOT.LMRSTR)GO TO 38                                           RED21500
      IRDSAV=RDCHAR                                                     RED21750
      ITMPSV(1)=CNT-1                                                   RED21800
      LMRSTR=.FALSE.                                                    RED21900
   38 LRARG=CNAMTB(NMMAC)                                               RED22010
      CALL LIBRD(LRARG,IFLAG,RDCHAR)                                    RED22200
      IF(IFLAG.EQ.0) GO TO 27                                           RED22300
      IF(IFLAG.NE.1)CALL ALARM(74,0,8,'READ    ')                       RED22400
      RDCHAR=IRDSAV                                                     RED22650
      CNT=ITMPSV(1)                                                     RED22700
      TOP=ITMPSV(2)                                                     RED22800
      DO 37 I=1,TOP                                                     RED22900
      STACK(1,I)=ITMPSV(2*I+1)                                          RED23000
      STACK(2,I)=ITMPSV(2*I+2)                                          RED23100
   37 CONTINUE                                                          RED23200
      I=NAMTBL(NMMAC)/MODULO                                            RED23300
      STACK(2,4)=META(I)                                                RED23400
      NMMAC=0                                                           RED23500
      LMREND=.TRUE.                                                     RED23600
C                                                                       RED23700
   34 QTFLG=.FALSE.                                                     RED23800
C        CHECK FOR PARTNO, TITLES, PPRINT, INSERT, REMARK               RED23900
      DO 90 I=1,5                                                       RED24000
      IF(RDCHAR(1:6).NE.IA(I))GO TO 90                                  RED24100
      J=0                                                               RED24300
      IF(I.EQ.5)GO TO 80                                                RED24400
      GO TO 98                                                          RED24500
   90 CONTINUE                                                          RED24600
   40 J=0                                                               RED24700
      DLRFLG=.FALSE.                                                    RED24800
      READFG = .TRUE.                                                   RED24900
      L = NUMI + 1                                                      RED25000
      DO 70 I=L,72                                                      RED25100
C...FOR EACH CHARACTER INPUT CHECK IF A VALID CHARACTER                 RED25610
C   INCHAR(I)=0 INVALID CHARACTER                                       RED25615
C   OTHERWISE LOCATION OF CHARACTER IN NAME TABLE                       RED25620
      II=INDEX(VALIDC,RDCHAR(I:I))                                      RED25625
      IF (II.EQ.0) THEN                                                 RED25630
        INCHAR(I)=0                                                     RED25635
      ELSE                                                              RED25640
        INCHAR(I)=CONV(II)                                              RED25645
      ENDIF                                                             RED25650
C   DOLLAR GESETZT?                                                     RED25700
      IF(DLRFLG)GOTO 75                                                 RED25800
C   HOCHKOMMA?                                                          RED25900
      IF(II.NE.45)GO TO 43                                              RED26000
      IF(QTFLG)GOTO42                                                   RED26100
      IF(J.EQ.0)GOTO41                                                  RED26200
C  VORHERGEHENDES ZEICHEN HOCHKOMMA? :FORTSETZUNG EINER ZEICHENKETTE    RED26300
      IF(INCHAR(J).NE.13)GOTO41                                         RED26400
      QTFLG=.TRUE.                                                      RED26500
      J=J-1                                                             RED26600
      GOTO 61                                                           RED26700
C  NEUER START EINER ZEICHENKETTE                                       RED26800
   41 QTFLG=.TRUE.                                                      RED26900
      GOTO 60                                                           RED27000
   42 QTFLG=.FALSE.                                                     RED27100
      GO TO 60                                                          RED27200
   43 IF(.NOT.QTFLG)GO TO 45                                            RED27300
C AUSGABE EINES NEGATIVEN BUCHSTABEN-WERTES,DA ZEICHENKETTE             RED27400
   61 J=J+1                                                             RED27500
      INCHAR(J)=-CONV(II)                                               RED27600
      GOTO 70                                                           RED27700
C     AUF BLANK PRUEFEN                                                 RED27800
   45 IF(II.EQ.37)GO TO 70                                              RED27900
C                                                                       RED28000
C     STRICHPUNKT  = ENDE EINES APT-SATZES                              RED28100
C                                                                       RED28200
      IF(II.EQ.54) GOTO 105                                             RED28300
C                                                                       RED28400
C        AUF DOLLAR PRUEFEN                                             RED28500
      IF(II.EQ.48)DLRFLG=.TRUE.                                         RED28600
C    AUSGABE DES NAMENSTAFEL-INDEX                                      RED28700
   60 J=J+1                                                             RED28800
      INCHAR(J)=CONV(II)                                                RED28900
      ERRPNT(J)=I+INLIN                                                 RED29000
   70 CONTINUE                                                          RED29100
      IF(NUMI .NE. 0) NUMCHR = 85 - LINEST                              RED29200
C  VERHINDERUNG VON UEBER KARTENGRENZE REICHENDER ZEICHENKETTE          RED29300
      IF(.NOT.QTFLG)GOTO 80                                             RED29400
      J=J+1                                                             RED29500
      INCHAR(J)=QUOTE(2)                                                RED29600
C                                                                       RED29700
C        END OF CARD - SET POINTER TO RTERM                             RED29800
   80 INCHAR(J+1)=RTERM(2)                                              RED29900
   82 IF(LIBFLG) GO TO 100                                              RED30200
      CALL ICONV(SEQNO ,DARRAY,5,4)                                     RED30300
      CALL CFORM('.',DARRAY,9,1)                                        RED30400
      CALL CFORM(RDCHAR,DARRAY,LINEST,NUMCHR)                           RED30500
      CALL CFORM(RDCHAR(73:80),DARRAY,85,8 )                            RED30600
      CALL CPRINT (DARRAY)                                              RED30700
  100 RETURN                                                            RED30800
  105 READFG = .FALSE.                                                  RED30900
      NUMCHR = I                                                        RED31000
      NUMI = I                                                          RED31100
      GOTO 80                                                           RED31200
  110 RDCHAR(1:NUMI)=IBLK                                               RED31450
      GO TO 26                                                          RED31500
C        IS THIS $$                                                     RED31600
   75 NUMCHR = 72                                                       RED31700
      INLIN=INLIN+100                                                   RED31800
      IF(II.EQ.48)GOTO 78                                               RED31900
      GO TO 80                                                          RED32000
   78 J = J - 1                                                         RED32100
      DLRFLG = .FALSE.                                                  RED32200
      GO TO 80                                                          RED32300
C        MISSING FINI - INSERT FINI AND COMPLETE PROCESSING             RED32400
   50 IFLAG=55                                                          RED32500
      IF(MACLDD)IFLAG=56                                                RED32600
      CALL ALARM(IFLAG,0,4,'READ    ')                                  RED32700
      END=.FALSE.                                                       RED32800
      IF(MACLDD)GO TO 56                                                RED32900
      RDCHAR = CFINI                                                    RED33000
      GO TO 25                                                          RED33300
   56 IRDSAV=CFINI                                                      RED33400
      MACLDD=.FALSE.                                                    RED33700
      NEWSTM=.TRUE.                                                     RED33800
      INCHAR(1)=RTERM(2)                                                RED33900
      CNT=0                                                             RED34000
      GO TO 100                                                         RED34100
C        CHANGE PARTNO, TITLES, PPRINT, INSERT TO NEW FORMAT            RED34200
   98 DO 91 I=7,72                                                      RED34300
        II=INDEX(VALIDC,RDCHAR(I:I))                                    RED34610
        IF (II.EQ.0) THEN                                               RED34620
          INCHAR(I)=0                                                   RED34630
        ELSE                                                            RED34640
          INCHAR(I)=CONV(II)                                            RED34650
        ENDIF                                                           RED34660
        IF(INCHAR(I).EQ.SLASH(2))GO TO 40                               RED34700
        IF(II.NE.37)GO TO 92                                            RED34800
   91 CONTINUE                                                          RED34900
   92 QTFLG=.FALSE.                                                     RED35000
      DO 96 K=1,72                                                      RED35100
      I=73-K                                                            RED35200
        II=INDEX(VALIDC,RDCHAR(I:I))                                    RED35510
        IF (II.EQ.0) THEN                                               RED35520
          INCHAR(I)=0                                                   RED35530
        ELSE                                                            RED35540
          INCHAR(I)=CONV(II)                                            RED35550
        ENDIF                                                           RED35560
      IF(QTFLG)GO TO 94                                                 RED35600
   93 IF(II.EQ.37 .AND. I.NE.7)GO TO 96                                 RED35700
      QTFLG=.TRUE.                                                      RED35800
      INCHAR(I+4)=RTERM(2)                                              RED35900
      INCHAR(I+3)=QUOTE(2)                                              RED36000
   94 IF (II.EQ.0) THEN                                                 RED36100
        IF(I.GE.7)INCHAR(I+2)=0                                         RED36110
        IF(I.LE.7)INCHAR(I)=0                                           RED36120
      ELSE                                                              RED36130
        IF(I.GE.7)INCHAR(I+2)=-CONV(II)                                 RED36150
        IF(I.LE.7)INCHAR(I)=CONV(II)                                    RED36200
      ENDIF                                                             RED36210
   96 CONTINUE                                                          RED36300
      QTFLG=.FALSE.                                                     RED36400
      INCHAR(7)=SLASH(2)                                                RED36500
      INCHAR(8)=QUOTE(2)                                                RED36600
      GO TO 82                                                          RED36700
      END                                                               RED36800
**** SOURCE FILE : M0006672.W05   ***
*
C                                                                       RC000100
C              FORTRAN SUBROUTINE RECOG                                 RC000200
C                                                                       RC000300
C LINKAGE      SUBROUTINE  RECOG                                        RC000400
C                                                                       RC000500
C          SUBSIDIARIES                  CALLED BY                      RC000600
C          TYPE          ENTRY           TYPE          ENTRY            RC000700
C          SUBROUTINE    LARGES          SUBROUTINE    START            RC000800
C          SUBROUTINE    LCANON                                         RC000900
C          SUBROUTINE    BINBCD                                         RC001000
C          SUBROUTINE    MACLBL                                         RC001100
C          SUBROUTINE    MACREC                                         RC001200
C          LOGICAL FCT.  IFTMP                                          RC001300
C          SUBROUTINE    MATCH                                          RC001400
C          SUBROUTINE    MCXTRN                                         RC001500
C          SUBROUTINE    INPUT                                          RC001600
C          SUBROUTINE    ISSCOD                                         RC001650
C          INTEGER FCT.  NAME                                           RC001700
C          INTEGER FCT.  NUMB                                           RC001800
C          SUBROUTINE    ONEARG                                         RC001900
C          SUBROUTINE    OPCODE                                         RC002000
C          INTEGER FCT.  GETTMP                                         RC002100
C          SUBROUTINE    PATH                                           RC002200
C          SUBROUTINE    CALLZZ                                         RC002300
C          SUBROUTINE    PRO020                                         RC002400
C          SUBROUTINE    PRO026                                         RC002500
C          SUBROUTINE    PRO027                                         RC002600
C          SUBROUTINE    PUTTMP                                         RC002700
C          SUBROUTINE    ARGCVT                                         RC002800
C          SUBROUTINE    RECOGN                                         RC002900
C          SUBROUTINE    REPLAC                                         RC003000
C          SUBROUTINE    RESRED                                         RC003100
C          SUBROUTINE    RESRVZ                                         RC003200
C          SUBROUTINE    RLSLIN                                         RC003300
C          INTEGER FCT.  SEARCH                                         RC003400
C          SUBROUTINE    LABELZ                                         RC003500
C          SUBROUTINE    SETCHR                                         RC003600
C          SUBROUTINE    SETMOD                                         RC003700
C          SUBROUTINE    INPAT                                          RC003800
C          SUBROUTINE    ARGGEN                                         RC003900
C          SUBROUTINE    SSDEF                                          RC004000
C          SUBROUTINE    SUBCOD                                         RC004100
C          SUBROUTINE    ALARM                                          RC004200
C          SUBROUTINE    TWOARG                                         RC004300
C          SUBROUTINE    CONCAT                                         RC004400
C          SUBROUTINE    BCDBIN                                         RC004500
C          SUBROUTINE    LABCON                                         RC004600
C          SUBROUTINE    LOOP                                           RC004700
C          SUBROUTINE    BOOLIF                                         RC004800
C          SUBROUTINE    KONAST                                         RC004900
C          SUBROUTINE    VCTPRD                                         RC005200
C          INTEGER FCT.  BCDF                                           RC005210
C          SUBROUTINE    HOLFRM                                         RC005220
C                                                                       RC005300
      SUBROUTINE  RECOG                                                 RC005400
C                                                                       RC005500
      IMPLICIT INTEGER (A-Z)                                            RC005600
C                                                                       RC005700
C              FUNCTION DECLARATION                                     RC005800
      LOGICAL IFTMP                                                     RC005900
C                                                                       RC006000
C        1.    NAME TABLE AND TABLE LIMITS                              RC006100
C                                                                       RC006200
      INCLUDE 'NAMETB.INC'                                              RC006310
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                RC006350
C CNAMTB:      NAME TABLE OR DICTIONARY                                 RC006450
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     RC006500
C NUMBST:      NAMTBL INDEX OF BEGINNING OF NUMBER SECTION              RC006630
C NUMBND:      NAMTBL INDEX OF END OF NUMBER SECTION                    RC006640
C                                                                       RC006900
C        2.    STACK AND POINTER STORAGE                                RC007000
C                                                                       RC007100
      COMMON/STKLST/STKLST                                              RC007200
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      RC007300
C TOP:         POINTER TO LAST STACK ENTRY                              RC007400
      EQUIVALENCE (TOP,STKLST(1))                                       RC007500
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             RC007600
      EQUIVALENCE (ARGTOP,STKLST(2))                                    RC007700
C STACK:       WORKING STACK                                            RC007800
      EQUIVALENCE (STACK(1,1),STKLST(4))                                RC007900
C ARGSTK:      ARGUMENT STACK                                           RC008000
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               RC008100
C                                                                       RC008200
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      RC008300
C                                                                       RC008400
      COMMON/CODE/CODE                                                  RC008500
      DIMENSION CODE(150),COMMA(2),RTERM(2),SLASH(2),MINUS(2),PLUS(2),  RC008600
     *          ASTER(2),LETTER(2),QUOTE(2),NUMBER(2),GEOM(2),TEMP(2),F RC008700
     *          CN(2),PROCED(2),PERMID(2),LABEL(2),IMPLAB(2),LTERM(2),V RC008800
     *          BL(2),DBLAST(2),IDENT(2),MCLTRM(2),CANON(2),BIGGEO(2),L RC008900
     *          PAREN(2),RPAREN(2),DOT(2),KREUZ(2),RELAT(2),CONAST(2),N RC009000
     *          OT(2),CONGEO(2),CONPRO(2),DECMAL(2),DOLLAR(2)           RC009100
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF ',     '        RC009200
      EQUIVALENCE (COMMA(1),CODE(1))                                    RC009300
C LPAREN:      (1)=CODE CLASS  2000,(2)=NAMTBL INDEX OF '(     '        RC009400
      EQUIVALENCE (LPAREN(1),CODE(3))                                   RC009500
C RPAREN:      (1)=CODE CLASS  3000,(2)=NAMTBL INDEX OF ')     '        RC009600
      EQUIVALENCE (RPAREN(1),CODE(5))                                   RC009700
C RTERM:       (1)=CODE CLASS  4000,(2)=NAMTBL INDEX OF 'RTERM '        RC009800
      EQUIVALENCE (RTERM(1),CODE(7))                                    RC009900
C SLASH:       (1)=CODE CLASS  5000,(2)=NAMTBL INDEX OF '/     '        RC010000
      EQUIVALENCE (SLASH(1),CODE(9))                                    RC010100
C MINUS:       (1)=CODE CLASS  6000,(2)=NAMTBL INDEX OF '-     '        RC010200
      EQUIVALENCE (MINUS(1),CODE(11))                                   RC010300
C PLUS:        (1)=CODE CLASS  7000,(2)=NAMTBL INDEX OF '+     '        RC010400
      EQUIVALENCE (PLUS(1),CODE(13))                                    RC010500
C ASTER:       (1)=CODE CLASS  9000,(2)=NAMTBL INDEX OF '*     '        RC010600
      EQUIVALENCE (ASTER(1),CODE(17))                                   RC010700
C LETTER:      (1)=CODE CLASS 11000,(2)=NAMTBL INDEX OF 'LETTER'        RC010800
      EQUIVALENCE (LETTER(1),CODE(21))                                  RC010900
C QUOTE:       (1)=CODE CLASS 12000,(2)=NAMTBL INDEX OF ''     '        RC011000
      EQUIVALENCE (QUOTE(1),CODE(23))                                   RC011100
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        RC011200
      EQUIVALENCE (NUMBER(1),CODE(27))                                  RC011300
C DOLLAR:      (1)=CODE CLASS 15000,(2)=NAMTBL INDEX OF '$     '        RC011310
      EQUIVALENCE (DOLLAR(1),CODE(29))                                  RC011320
C GEOM:        (1)=CODE CLASS 16000,(2)=NAMTBL INDEX OF 'GEOM  '        RC011400
      EQUIVALENCE (GEOM(1),CODE(31))                                    RC011500
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        RC011600
      EQUIVALENCE (TEMP(1),CODE(33))                                    RC011700
C FCN:         (1)=CODE CLASS 18000,(2)=NAMTBL INDEX OF 'FCN   '        RC011800
      EQUIVALENCE (FCN(1),CODE(35))                                     RC011900
C PROCED:      (1)=CODE CLASS 19000,(2)=NAMTBL INDEX OF 'PROCED'        RC012000
      EQUIVALENCE (PROCED(1),CODE(37))                                  RC012100
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        RC012200
      EQUIVALENCE (PERMID(1),CODE(39))                                  RC012300
C DECMAL:      (1)=CODE CLASS 21000,(2)=NAMTBL INDEX OF '.     '        RC012310
      EQUIVALENCE (DECMAL(1),CODE(41))                                  RC012320
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        RC012400
      EQUIVALENCE (LABEL(1),CODE(43))                                   RC012500
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        RC012600
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  RC012700
C LTERM:       (1)=CODE CLASS 24000,(2)=NAMTBL INDEX OF 'LTERM '        RC012800
      EQUIVALENCE (LTERM(1),CODE(47))                                   RC012900
C DOT:         (1)=CODE CLASS 25000,(2)=NAMTBL INDEX OF 'DOT   '        RC013000
      EQUIVALENCE (DOT(1),CODE(49))                                     RC013100
C KREUZ:       (1)=CODE CLASS 26000,(2)=NAMTBL INDEX OF 'KREUZ '        RC013200
      EQUIVALENCE (KREUZ(1),CODE(51))                                   RC013300
C RELAT:       (1)=CODE CLASS 27000,(2)=NAMTBL INDEX OF 'RELAT '        RC013400
      EQUIVALENCE (RELAT(1),CODE(53))                                   RC013500
C NOT:         (1)=CODE CLASS 28000,(2)=NAMTBL INDEX OF 'NOT   '        RC013600
      EQUIVALENCE (NOT(1),CODE(55))                                     RC013700
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        RC013800
      EQUIVALENCE (VBL(1),CODE(61))                                     RC013900
C DBLAST:      (1)=CODE CLASS 32000,(2)=NAMTBL INDEX OF 'DBLAST'        RC014000
      EQUIVALENCE (DBLAST(1),CODE(63))                                  RC014100
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        RC014200
      EQUIVALENCE (IDENT(1),CODE(69))                                   RC014300
C MCLTRM:      (1)=CODE CLASS 38000,(2)=NAMTBL INDEX OF 'MCLTRM'        RC014400
      EQUIVALENCE (MCLTRM(1),CODE(75))                                  RC014500
C CONGEO:      (1)=CODE CLASS 39000,(2)=NAMTBL INDEX OF 'CONGEO'        RC014600
      EQUIVALENCE (CONGEO(1),CODE(77))                                  RC014700
C CONPRO:      (1)=CODE CLASS 40000,(2)=NAMTBL INDEX OF 'CONPRO'        RC014800
      EQUIVALENCE (CONPRO(1),CODE(79))                                  RC014900
C CANON:       (1)=CODE CLASS 42000,(2)=NAMTBL INDEX OF 'CANON '        RC015000
      EQUIVALENCE (CANON(1),CODE(83))                                   RC015100
C BIGGEO:      (1)=CODE CLASS 44000,(2)=DNAMTBL INDEX OF 'BIGGEO'       RC015200
      EQUIVALENCE (BIGGEO(1),CODE(87))                                  RC015300
C CONAST:      (1)=CODE CLASS 45000,(2)=NAMTBL INDEX OF 'CONAST'        RC015400
      EQUIVALENCE (CONAST(1),CODE(89))                                  RC015500
C                                                                       RC015600
C        4.    PRODUCTION TABLE                                         RC015700
C                                                                       RC015800
      COMMON/SRCTBL/SRCTBL                                              RC015900
      DIMENSION SRCTBL(1482),PRODTB(1430),META(50)                      RC016000
C BRKPNT:      END OF MACRO TEXT TRANSFER PRODUCTION IN PRODTB          RC016100
      EQUIVALENCE (BRKPNT,SRCTBL(1))                                    RC016200
C MBKPNT:      END OF CHARACTER CONCATENATION AND STRING PRODUCTION     RC016300
      EQUIVALENCE (MBKPNT,SRCTBL(2))                                    RC016400
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   RC016500
      EQUIVALENCE (META(1),SRCTBL(3))                                   RC016600
C PRODTB:      CONTAINS BASIC PRODUCTIONS                               RC016700
      EQUIVALENCE (PRODTB(1),SRCTBL(53))                                RC016800
C                                                                       RC016900
C        5.    PROGRAM CONTROL FLAGS                                    RC017000
C                                                                       RC017100
      COMMON/FLAGS/FLAGS                                                RC017200
      LOGICAL ENDFLG,NEWSTM                                             RC017300
      DIMENSION FLAGS(4)                                                RC017400
C ENDFLG:      TRUE WHEN SOURCE STATEMENT TOTALLY IN STACK              RC017500
      EQUIVALENCE (ENDFLG,FLAGS(1))                                     RC017600
C NEWSTM:      TRUE WHEN NEXT SOURCE STATEMENT REQUESTED FOR PROCESS    RC017700
      EQUIVALENCE (NEWSTM,FLAGS(2))                                     RC017800
C                                                                       RC017900
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         RC018000
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    RC018100
      COMMON/TMP/TXXXX                                                  RC018200
      DIMENSION TXXXX(2,32)                                             RC018300
C                                                                       RC018400
C        7.    STRING STORAGE AREA                                      RC018500
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT   RC018600
      COMMON/INPTR/CNT                                                  RC018700
C                                                                       RC018710
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      RC018720
C                                                                       RC018730
      COMMON/BCDPTR/BCDPTR                                              RC018740
      DIMENSION BCDPTR(7)                                               RC018750
C DOTAC:       NAMTBL POINTER TO ALPHAMERIC LITERAL '.AC.'              RC018760
      EQUIVALENCE (DOTAC,BCDPTR(1))                                     RC018770
C                                                                       RC018800
C        9.    NAME TABLE POINTERS TO NUMBERS                           RC018900
C                                                                       RC019000
      COMMON/NUMPTR/NUMPTR                                              RC019100
      DIMENSION NUMPTR(13)                                              RC019200
C ZEROPT:      NAMTBL POINTER TO '0.    '                               RC019300
      EQUIVALENCE (ZEROPT,NUMPTR(2))                                    RC019400
C ONEPT:       NAMTBL POINTER TO '1.    '                               RC019500
      EQUIVALENCE (ONEPT,NUMPTR(4))                                     RC019600
C TENPT:       NAMTBL POINTER TO '10.   '                               RC019610
      EQUIVALENCE (TENPT,NUMPTR(13))                                    RC019620
C                                                                       RC019700
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           RC019800
C                                                                       RC019900
      INCLUDE 'GMTY.INC'                                                RC020000
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            RC020200
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  RC020400
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    RC020600
C                                                                       RC020800
C       11.    SEQUENCE NUMBER STORAGE                                  RC020900
C                                                                       RC021000
      INCLUDE 'SEQCOM.INC'                                              RC021110
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    RC021300
C SEQNUM:      ALPHANUMERIC REPRESENTATION OF CURRRENT STATEMENT NUMBER RC021500
C                                                                       RC021700
C       13.    NAMTBL POINTERS TO NEGATIVE NUMBERS                      RC021800
C              NAMTBL POINTER TO -1.                                    RC021900
      COMMON/NEGPTR/NONEPT                                              RC022000
C                                                                       RC022100
C       14.    I. L. LIST OPTION FLAGS                                  RC022200
C                                                                       RC022300
      COMMON/PRT/PRT                                                    RC022400
      LOGICAL INTERP                                                    RC022500
      DIMENSION PRT(7)                                                  RC022600
C INTERP:      NORMALLY TRUE,INDICATING INTERPRETIVE APPROACH DEFAULT   RC022700
      EQUIVALENCE (INTERP,PRT(3))                                       RC022800
C                                                                       RC023100
C       15.    ARRAY LIMIT STORAGE                                      RC023200
C                                                                       RC023300
      COMMON/SBSCPT/SBSCPT                                              RC023400
      DIMENSION SBSCPT(101),RANGE(100)                                  RC023500
C RNGPT:       POINTER TO NEXT RANGE ENTRY                              RC023600
      EQUIVALENCE (RNGPT,SBSCPT(1))                                     RC023700
C RANGE:       STORAGE FOR APT RESERVE STATEMENT INFORMATION            RC023800
      EQUIVALENCE (RANGE(1),SBSCPT(2))                                  RC023900
C                                                                       RC024000
C       16.    LITERALS FOR I. L. OPERATION CODES                       RC024100
C                                                                       RC024200
      COMMON/IL/IL                                                      RC024300
      DIMENSION IL(21)                                                  RC024400
C FADD:        CONTAINS COMMAND CODE ( 1) FOR FADD COMMAND              RC024500
      EQUIVALENCE (FADD,IL(1))                                          RC024600
C FSUB:        CONTAINS COMMAND CODE ( 2) FOR FSUB COMMAND              RC024700
      EQUIVALENCE (FSUB,IL(2))                                          RC024800
C FMPY:        CONTAINS COMMAND CODE ( 3) FOR FMPY COMMAND              RC024900
      EQUIVALENCE (FMPY,IL(3))                                          RC025000
C FDIV:        CONTAINS COMMAND CODE ( 4) FOR FDIV COMMAND              RC025100
      EQUIVALENCE (FDIV,IL(4))                                          RC025200
C FEXP:        CONTAINS COMMAND CODE ( 5) FOR FEXP COMMAND              RC025300
      EQUIVALENCE (FEXP,IL(5))                                          RC025400
C SEQNCE:      CONTAINS COMMAND CODE ( 9) FOR SEQNCE COMMAND            RC025500
      EQUIVALENCE (SEQNCE,IL(9))                                        RC025600
C CONJMP:      CONTAINS COMMAND CODE (11) FOR CONJMP COMMAND            RC025700
      EQUIVALENCE (CONJMP,IL(11))                                       RC025800
C HOLDAT:      CONTAINS COMMAND CODE (21) FOR HOLDAT COMMAND            RC025900
      EQUIVALENCE (HOLDAT,IL(21))                                       RC026000
C                                                                       RC026100
C       17.    MODE CODES                                               RC026200
C                                                                       RC026300
      COMMON/MODX/MODX                                                  RC026400
      DIMENSION MODX(32)                                                RC026500
C TABCYL:      MODE CODE (11) FOR TABULATED CYLINDER                    RC026600
      EQUIVALENCE (TABCYL,MODX(11))                                     RC026700
C POINT:       MODE CODE (19) FOR POINT                                 RC026800
      EQUIVALENCE (POINT,MODX(19))                                      RC026900
C VECTOR:      MODE CODE (20) FOR VECTOR                                RC027000
      EQUIVALENCE (VECTOR,MODX(20))                                     RC027100
C REAL:        MODE CODE (21) FOR A SCALAR                              RC027200
      EQUIVALENCE (REAL,MODX(21))                                       RC027300
C BOOL:        MODE CODE (23) FOR BOOLEAN TYPE                          RC027400
      EQUIVALENCE (BOOL,MODX(23))                                       RC027500
C SUBSCR:      MODE CODE (24) FOR SUBSCRIPT                             RC027600
      EQUIVALENCE (SUBSCR,MODX(24))                                     RC027700
C STRING:      MODE CODE (25) FOR STRING                                RC027800
      EQUIVALENCE (STRING,MODX(25))                                     RC027900
C PATERN:      MODE CODE (26) FOR PATTERN                               RC028000
      EQUIVALENCE (PATERN,MODX(26))                                     RC028100
C BOUNDS:      MODE CODE (27) FOR BOUNDS                                RC028200
      EQUIVALENCE (BOUNDS,MODX(27))                                     RC028300
C OBJECT:      MODE CODE (28) FOR OBJECT                                RC028400
      EQUIVALENCE (OBJECT,MODX(28))                                     RC028500
C SSURF:       MODE CODE (29) FOR SCULPTURED SURFACE                    RC028600
      EQUIVALENCE (SSURF,MODX(29))                                      RC028700
C SCURV:       MODE CODE (30) FOR SCULPTURED CURVE                      RC028800
      EQUIVALENCE (SCURV,MODX(30))                                      RC028900
C                                                                       RC029000
C       18.    STRING STORAGE AREA                                      RC029100
C              STORAGE OF INTERNAL REPRESENTATION OF STRING OR SYMBOL   RC029200
      COMMON/CHRX/CHR                                                   RC029300
      CHARACTER CHR*400                                                 RC029400
C FIRST 3 BYTES CONTAIN CHARACTER REPRESENTATION OF NUMBER OF           RC029410
C CHARACTERS IN STRING, REMAINING BYTES CONTAIN STRING                  RC029420
C                                                                       RC029500
C       22.    MACRO PROCESSING VARIABLES                               RC029600
C                                                                       RC029700
      COMMON/MACXX1/MACXX1                                              RC029800
      LOGICAL MACLDD,ILHLT,MACRED,FINMAC,ENTRY,SHOULD                   RC029900
      DIMENSION MACXX1(71)                                              RC030000
C MACLDD:      TRUE WHEN MACRO TEXT IS TO BE LOAD INTO MCBUFF TABLE     RC030100
      EQUIVALENCE (MACLDD,MACXX1(7))                                    RC030200
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              RC030300
      EQUIVALENCE (ILHLT,MACXX1(14))                                    RC030400
C TEXTST:      POINTER TP MCBUFF OF MACRO TEXT WORD BEING PROCESSED     RC030410
      EQUIVALENCE (TEXTST,MACXX1(15))                                   RC030420
C MACRED:      SET TRUE TO INDICATE INPUT FROM MCBUFF TABLE             RC030500
      EQUIVALENCE (MACRED,MACXX1(18))                                   RC030600
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        RC030700
      EQUIVALENCE (INTMED,MACXX1(22))                                   RC030800
C MAJWRD:      CONTAINS ACTUAL MAJOR WORD                               RC030900
      EQUIVALENCE (MAJWRD,MACXX1(23))                                   RC031000
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING            RC031100
      EQUIVALENCE (FINMAC,MACXX1(24))                                   RC031200
C WAY:         INDICATES TYPE OF MACRO PROCESSING                       RC031300
      EQUIVALENCE (WAY,MACXX1(26))                                      RC031400
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION     RC031500
      EQUIVALENCE (ENTRY,MACXX1(40))                                    RC031600
C MAJOR:       CURRENT CALL ASSIGNED VALUE IF MAYWRD IS MACRO VARIABLE  RC031700
      EQUIVALENCE (MAJOR,MACXX1(44))                                    RC031800
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED         RC031900
      EQUIVALENCE (WHCHMN,MACXX1(63))                                   RC032000
C SHOULD:      MACRO INDICATOR. NORMALLY FALSE                          RC032100
      EQUIVALENCE (SHOULD,MACXX1(70))                                   RC032200
C                                                                       RC032300
C       28.    OPERAND MODIFIERS                                        RC032400
C                                                                       RC032500
      COMMON/SUBLST/SUBLST                                              RC032600
      DIMENSION SUBLST(136)                                             RC032700
C UNDEF:       NAMTBL POINTER TO EXECUTION SUBROUTINE UNDEF             RC032800
      EQUIVALENCE (UNDEF,SUBLST(74))                                    RC032900
C                                                                       RC033000
C       29.    CLASS CODE MODULI                                        RC033100
C                                                                       RC033200
      COMMON/MODULI/MODULI                                              RC033300
      DIMENSION MODULI(2)                                               RC033400
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    RC033500
      EQUIVALENCE (MODULO,MODULI(1))                                    RC033600
C MODHLF:      NORMAL MODE CODE LIMIT 500                               RC033700
      EQUIVALENCE (MODHLF,MODULI(2))                                    RC033800
C                                                                       RC033900
C       36.    SYSTEM MACRO AND SEGMENT READ VARIABLES                  RC034000
C                                                                       RC034100
      COMMON/MACSEG/MACSEG                                              RC034200
      LOGICAL LMREND                                                    RC034300
      DIMENSION MACSEG(6)                                               RC034400
C LMREND:      FLAG ON AFTER COMPLETION READING A SYSTEM MACRO          RC034500
      EQUIVALENCE (LMREND,MACSEG(6))                                    RC034600
C                                                                       RC034700
C       37.    INCLUSIVE SUBSCRIPT VARIABLES                            RC034800
C                                                                       RC034900
      COMMON/ISSCOM/ISSCOM                                              RC035000
      LOGICAL ISSFL,ISSEND                                              RC035100
      DIMENSION ISSCOM(9),ISSTRM(2)                                     RC035200
C ISSA:        LOWEST SUBSCRIPT OF AN INCLUSIVE SUBSCRIPT STRING        RC035300
      EQUIVALENCE (ISSA,ISSCOM(1))                                      RC035400
C ISSB:        HIGHEST SUBSCRIPT OF AN INCLUSIVE SUBSCRIPT STRING       RC035500
      EQUIVALENCE (ISSB,ISSCOM(2))                                      RC035600
C ISSC:        INCREMENT OR DECREMENT FOR INCLUSIVE SUBSCRIPT STRING    RC035700
      EQUIVALENCE (ISSC,ISSCOM(3))                                      RC035800
C ISSVBL:      NAMTBL POINTER TO THE INCLUSIVE SUBSCRIPTED VARIABLE     RC035900
      EQUIVALENCE (ISSVBL,ISSCOM(4))                                    RC036000
C ISSFL:       TRUE DURING INCLUSIVE SUBSCRIPT PROCESSING               RC036100
      EQUIVALENCE (ISSFL,ISSCOM(6))                                     RC036200
C ISSEND:      END OF INCLUSIVE SUBSCRIPT PROCESSING                    RC036300
      EQUIVALENCE (ISSEND,ISSCOM(7))                                    RC036400
C ISSTRM:      SAVES THE STACK TOP ITEMS DURING SUBSCRIPT PROCESSING    RC036500
      EQUIVALENCE (ISSTRM(1),ISSCOM(8))                                 RC036600
C                                                                       RC036700
C       38.    COMMON BLOCK MACRO CALL STATEMENT                        RC036800
C              INDICATES A MACRO CALL BEING PROCESSED                   RC036900
      COMMON/CALFLG/ICALLF                                              RC037000
C                                                                       RC037100
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          RC037200
C                                                                       RC037300
      COMMON/NTBL/NTBL                                                  RC037400
      DIMENSION NTBL(6)                                                 RC037500
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE RC037600
      EQUIVALENCE (NLAST,NTBL(4))                                       RC037700
C                                                                       RC037800
C       42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE       RC037900
C                                                                       RC038000
      COMMON/CANSTR/CANSTR                                              RC038100
      DIMENSION CANSTR(18)                                              RC038200
C CANPTR:      POINTER TO LAST CANSTK ENTRY                             RC038300
      EQUIVALENCE (CANPTR,CANSTR(1))                                    RC038400
C                                                                       RC038500
C       43.    DO LOOP CONTROL VALUES                                   RC038600
C                                                                       RC038700
      COMMON/DOLOOP/DOLOOP                                              RC038800
      LOGICAL DOFLAG,IFFLAG                                             RC038810
      DIMENSION DOLOOP(9)                                               RC038900
C JUMPTO:      MARKER SET AFTER JUMPTO OR IF FOR LABEL CONTROL          RC039000
      EQUIVALENCE (JUMPTO,DOLOOP(1))                                    RC039100
C RELDO:       CURRENTLY NESTED DO LOOPS                                RC039110
      EQUIVALENCE (RELDO,DOLOOP(3))                                     RC039120
C DOJUMP:      VBL FOR COMPUTED GOTO AT LOOP PROCESSING                 RC039200
      EQUIVALENCE (DOJUMP,DOLOOP(6))                                    RC039300
C DOFLAG:      FLAG IS ON DURING OPENED LOOP                            RC039310
      EQUIVALENCE (DOFLAG,DOLOOP(7))                                    RC039320
C IFFLAG:      FLAG ON WHEN LOGICAL IF OCCURS                           RC039330
      EQUIVALENCE (IFFLAG,DOLOOP(9))                                    RC039340
C                                                                       RC039400
C       44.    ERROR POSITION TABLE                                     RC039500
C                                                                       RC039600
      COMMON/ERRPOS/ERRPOS                                              RC039700
      INTEGER ERRPOS,ESTACK,ERGSTK                                      RC039800
      LOGICAL NOWARN                                                    RC039900
      DIMENSION ERRPOS(302),ESTACK(100),ERGSTK(100)                     RC040000
C NOWARN:      FLAG TRUE IS SUPPRESSING OUTPUT OF WARNING NR. 50        RC040100
      EQUIVALENCE (NOWARN,ERRPOS(1))                                    RC040200
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    RC040300
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               RC040400
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   RC040500
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               RC040600
C                                                                       RC040610
C       45.    NUMBER TABLE INDICES                                     RC040620
C                                                                       RC040630
      INCLUDE 'NUMBLK.INC'                                              RC040640
C MNMBND:      LAST NAME TABLE ENTRY TO MACRO ASSIGNED NUMBER SECTION   RC040650
C NUMIDX:      NAMTBL INDEX OF A NUMBER GIVEN IN THE CURRENT STATEMENT  RC040660
C  NMBRS:      QUANTITY OF NUMBERS IN THE CURRENT STATEMENT             RC040670
C LSTCHR:      LAST CHARACTER OF A NUMBER                               RC040680
C*                                                                      RC040700
      CHARACTER IICHR*20                                                RC040800
      DIMENSION ARGX(2),ICNUM(3)                                        RC040900
      EQUIVALENCE(ARGX(1),ARG1),(ARGX(2),ARG2)                          RC041000
C      IMPLEMENTATION DEPENDENT  NAME $21T$1                       ..CD.RC041020
      CHARACTER*6  ICD21                                                RC041030
      CHARACTER*6 BLK,ISEQ1,ON,OFF,ZERO*3,TRUE,FALSE                    RC041060
      LOGICAL OPDFLG                                                    RC041065
      INCLUDE 'SDP.INC'                                                 RC041070
      INTEGER BCDF                                                      RC041080
      EXTERNAL BCDF                                                     RC041090
      DATA LBKPNT/1/                                                    RC041100
      DATA BLK/'    '/,CLDATA/69/                                       RC041200
      DATA  ISEQ1/' 1  '/,TRUE/'.TRUE.'/,FALSE/'.FALSE'/                RC041300
      DATA STRCNT /0/,ON/'ON  '/,OFF/'OFF '/                            RC041600
      DATA ICD21/'$21T$1'/                                              RC041900
      DATA ZERO/'  0'/                                                  RC041910
C**                                                                     RC042200
      SEQNUM=ISEQ1                                                      RC042300
      MNMBND=NUMBST                                                     RC042410
      NUMIDX=NUMBST                                                     RC042420
C      PUT IMPLEMENTATION DEPENDENT NAME INTO NAMTBL              ..CD. RC042500
      I=NAME(ICD21)                                                     RC042600
      NAMTBL(I)=TEMP(1)+REAL                                            RC042700
C      PUT FIRST ITEM IN CANONICAL FORM BLOCK 3.                        RC042800
      I=GETTMP(POINT)                                                   RC042900
C      GENERATE I.L. TO STORE -1.0 IN PERMANENT LOCATION.               RC043000
C        (USE OF TEMPORARY CAN CAUSE INCORRECT I.L.)                    RC043100
C        STORE NAMTBL POINTER TO LOCATION OF -1.0 IN NONEPT.            RC043200
      CALL MACLBL(ONEPT,0,NONEPT)                                       RC043300
      NAMTBL(NONEPT)=VBL(1)+REAL                                        RC043400
      CALL RESRVZ(NONEPT,REAL,TXXXX(1,REAL),1)                          RC043500
      CALL OPCODE(FSUB)                                                 RC043600
      CALL ARGCVT(NONEPT)                                               RC043700
      CALL ARGCVT(ZEROPT)                                               RC043800
      CALL ARGCVT(ONEPT)                                                RC043900
      CALL RLSLIN                                                       RC044000
C  GENERATE IL TO RESERVE LOCATION FOR .AC. IN CANONICAL FORM BLOCK     RC044010
C  TO OVERCOME IMPEMENTATION DEPENDENCY OF USE OF AC                    RC044020
      CALL RESRVZ(DOTAC,REAL,TXXXX(1,REAL),1)                           RC044030
      GO TO 11                                                          RC044100
C                                                                       RC044200
    1 IF(.NOT.NEWSTM) GO TO 20                                          RC044300
C...  IF INTERP FALSE, TRANSLATION IS COMPLETE                          RC044400
      IF(.NOT.INTERP) RETURN                                            RC044500
C                                                                       RC044600
C... SET LARGE SURFACE ARGUMENT COUNT = 0                               RC044700
C                                                                       RC044800
    3 BIGCNT = 0                                                        RC044900
      IBR=0                                                             RC045000
      IF (STACK(1,TOP) .NE. RTERM(2) ) GO TO 11                         RC045100
    5 IF (IFFLAG)CALL BOOLIF(0)                                         RC045110
      OPDFLG=.FALSE.                                                    RC045120
      NUMIDX=MNMBND                                                     RC045130
      NMBRS=0                                                           RC045140
      IF (.NOT.DOFLAG)GOTO 6                                            RC045150
      DOJUMP=3                                                          RC045160
      CALL LOOP                                                         RC045170
    6 IF(.NOT.ILHLT)GO TO 10                                            RC045200
      IF(INTMED.NE.1)GO TO 11                                           RC045300
   10 SEQNO=SEQNO+1                                                     RC045400
      CALL BINBCD(SEQNO,SEQNUM,TOP)                                     RC045500
      IF(MACLDD.OR.ILHLT)GO TO 11                                       RC045600
      CALL OPCODE(SEQNCE)                                               RC045700
      CALL ONEARG(SEQNO)                                                RC045800
      CALL RLSLIN                                                       RC045900
      IF(JUMPTO.NE.SEQNO)GOTO 11                                        RC046000
      CALL BINBCD(SEQNO-1,SEQNUM,TOP)                                   RC046100
      CALL ALARM(1009,0,4,'RECOG   ')                                   RC046200
      CALL BINBCD(SEQNO,SEQNUM,TOP)                                     RC046300
      JUMPTO=0                                                          RC046400
C...  NEW STATEMENT                                                     RC046500
C                                                                       RC046600
   11 NEWSTM = .FALSE.                                                  RC046700
      TOP=1                                                             RC046800
      IF(.NOT.MACLDD) GO TO 12                                          RC047000
      STACK(1,1) = MCLTRM(2)                                            RC047100
      L = MCLTRM(1)/MODULO                                              RC047200
      BKPT=MBKPNT                                                       RC047300
      GO TO  13                                                         RC047400
   12 STACK(1,1) = LTERM(2)                                             RC047500
      L = LTERM(1)/MODULO                                               RC047600
      BKPT=BRKPNT                                                       RC047700
C                                                                       RC047800
      DO 15 I=1,30                                                      RC047900
   15 TXXXX(2,I) = 0                                                    RC048000
      ARGTOP = 0                                                        RC048100
      CANPTR=0                                                          RC048200
   13 STACK(2,1)=META(L)                                                RC048300
      GO TO 2900                                                        RC048400
C...  FIND MATCHING PRODUCTION                                          RC048500
   20 IF((.NOT.LMREND).AND.(.NOT.ISSFL).AND.(.NOT.ISSEND))GO TO 21      RC048600
      LBKPNT=BKPT                                                       RC048700
      ISSEND=.FALSE.                                                    RC048800
      LMREND=.FALSE.                                                    RC048900
   21 IF(MACRED)LBKPNT=BKPT                                             RC049000
   25 ERRP=TOP                                                          RC049100
      TOPT2=TOP*2                                                       RC049110
      I=SEARCH(STACK,TOPT2,PRODTB(LBKPNT),ERRP)                         RC049200
      LBKPNT=1                                                          RC049300
C                                                                       RC049400
      IF(I.GT.50)GO TO 50                                               RC049500
      GOTO ( 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,          RC049600
     1      1100,2950,1300,1450,1500,1600,1700,1800,1900,2000,          RC049700
     2      2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,          RC049800
     3      3100,3200,3300,3400,3500,3600,3700,3700,3700,4000,          RC049900
     4      5000,5000,5000,5000,5000,5000,5000,5000,5000,1200),I        RC050000
   50 IF(I.LT.70)GO TO 5100                                             RC050100
      J=I-70                                                            RC050200
      GOTO(7100,3500,2000,2000,7500,7500,7500,7800),J                   RC050300
      GO TO 5200                                                        RC050400
C                                                                       RC050500
C          SET I TO G                                                   RC050600
  100 CALL SETMOD (TOP-1,GEOM)                                          RC050700
      GOTO 220                                                          RC050800
C     IDENTIFIER TO PROCEDURE                                           RC050900
  200 CALL SETMOD (TOP-1,PROCED)                                        RC051000
  220 LBKPNT = BKPT                                                     RC051100
      GO TO 25                                                          RC051200
C...       GENERATE CODE FOR STRING                                     RC051300
C                                                                       RC051400
  300 CHR=ZERO//BLK                                                     RC051500
  310 CALL INPUT                                                        RC051600
      I=STACK(1,TOP)                                                    RC051700
      IF(I.EQ.QUOTE(2))GO TO 320                                        RC051800
      I=-I                                                              RC051900
      CALL CONCAT(CHR,CNAMTB(I))                                        RC052000
      TOP=TOP-1                                                         RC052100
      GO TO 310                                                         RC052200
  320 STRCNT=STRCNT+1                                                   RC052300
      CALL MACLBL(QUOTE(2),-STRCNT,I)                                   RC052400
C              ENTER STRING NAME IN NAMTBL                              RC052500
C                                                                       RC052600
C              ENTER STRING NAME IN STACK                               RC052700
C                                                                       RC052800
      STACK(1,TOP-1) = I                                                RC052900
      NAMTBL(I) = VBL(1)+STRING                                         RC053000
      L = VBL(1)/MODULO                                                 RC053100
      STACK(2,TOP-1) = META(L)                                          RC053200
C                                                                       RC053300
C              WRITE DATA STATEMENT                                     RC053400
C                                                                       RC053500
      CALL OPCODE(HOLDAT)                                               RC053600
C... NUMBER OF CHARACTERS                                               RC053700
      READ (CHR,'(I3)') NCHR                                            RC053800
      CALL TWOARG(I,NCHR)                                               RC053900
C... WRITE CHARACTER STRING TO IL , BY CONVERTING                       RC053930
C    IWRD CHARACTERS AT A TIME TO INTEGER FOR TRANSFER                  RC053940
      IF (MOD(NCHR,IWRD).NE.0) NCHR=(NCHR/IWRD+1)*IWRD                  RC053950
      DO 303 J=4,NCHR,IWRD                                              RC054000
        CALL ONEARG(BCDF(CHR(J:J+IWRD-1)))                              RC054100
  303 CONTINUE                                                          RC054110
      CALL RLSLIN                                                       RC054200
      TOP=TOP-1                                                         RC054300
      GO TO 2900                                                        RC054400
C     CHECK FOR CLDATA(N), OTHERWISE ERROR                              RC054500
  400 J=STACK(1,TOP-4)                                                  RC054600
      K=NAMTBL(J)                                                       RC054700
      L=K/MODULO                                                        RC054800
      IF(K-L*MODULO.NE.CLDATA)GO TO 420                                 RC054900
      IF(L.EQ.IDENT(1)/MODULO)CALL SETMOD(TOP-4,PERMID)                 RC055000
      L=COMMA(1)/MODULO                                                 RC055100
      STACK(1,TOP-1)=STACK(1,TOP)                                       RC055200
      STACK(2,TOP-1)=STACK(2,TOP)                                       RC055300
      ESTACK(TOP-1)=ESTACK(TOP)                                         RC055400
      STACK(1,TOP-3)=COMMA(2)                                           RC055500
      STACK(2,TOP-3)=META(L)                                            RC055600
      TOP=TOP-1                                                         RC055700
      GO TO 220                                                         RC055800
  420 CALL ALARM(1111,TOP-4,8,'RECOG   ')                               RC055900
      GO TO 2810                                                        RC056100
C     IMPLIED LABEL OR IDENTIFIER TO LABEL                              RC056200
  500 DOJUMP=2                                                          RC056300
      IF (RELDO.GT.0) CALL LOOP                                         RC056400
      K = STACK(1,TOP-1)                                                RC056500
      IF (K.LE.NAMMAX) GOTO 530                                         RC056600
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           RC056610
      K=K-NAMMAX                                                        RC056620
      IF(NLAST.GT.0)CALL MCXTRN(5,K,IDUMMY)                             RC056700
      CALL BCDBIN(CNUMTB(K),KK,ICOUNT)                                  RC056800
      K=KK+10000                                                        RC056900
  505 CALL MACLBL(K,-WHCHMN,K)                                          RC057000
      STACK(1,TOP-1) = K                                                RC057100
      IF(NAMTBL(K)/MODULO .EQ. LABEL(1)/MODULO)GO TO 710                RC057200
  506 IF((.NOT.FINMAC).AND.(WHCHMN.NE.0))GO TO 510                      RC057300
      NAMTBL(K) = LABEL(1)+WHCHMN                                       RC057400
      L = LABEL(1)/MODULO                                               RC057500
  507 STACK(2,TOP-1) = META(L)                                          RC057600
      CALL LABELZ(K)                                                    RC057700
      CALL LABCON(-K)                                                   RC057800
C     ERASE FROM STACK                                                  RC057900
  520 TOP=TOP-2                                                         RC058000
      GO TO 2900                                                        RC058100
  530 IF(WHCHMN.EQ.0)GO TO 506                                          RC058200
      IF(NAMTBL(K)/MODULO.NE.LABEL(1)/MODULO)NAMTBL(K)=IMPLAB(1)        RC058300
      GO TO 505                                                         RC058400
  510 NAMTBL(K) = IMPLAB(1)+WHCHMN                                      RC058500
      L = IMPLAB(1)/MODULO                                              RC058600
      GO TO 507                                                         RC058700
  600 IF(JUMPTO.NE.0)JUMPTO=SEQNO+2                                     RC058900
       GO  TO    5                                                      RC059000
  700 IF(WHCHMN.NE.0)GO TO 500                                          RC059100
  710 CALL ALARM(1003,TOP-1,8,'RECOG   ')                               RC059200
      GO TO 520                                                         RC059300
C...       BINARY OPERATION GENERATIR                                   RC059400
  800 ARG1=STACK(1,TOP-3)                                               RC059500
      ARG2=STACK(1,TOP-1)                                               RC059600
      OP=STACK(1,TOP-2)                                                 RC059700
      DO 810 L=1,2                                                      RC059800
      J = MODE(ARGX(L))                                                 RC059900
      IF(J.EQ.REAL) GO TO 810                                           RC060000
      K=2*L-5                                                           RC060100
      CALL ALARM(1004,TOP+K,8,'RECOG   ')                               RC060200
  810 IF(IFTMP(ARGX(L))) CALL PUTTMP(J)                                 RC060300
      RSLT = GETTMP(REAL)                                               RC060400
      IF (NAMTBL(OP).NE.SLASH(1)) GOTO 801                              RC060500
      CALL OPCODE (FDIV)                                                RC060600
      GO  TO  850                                                       RC060700
  801 IF (NAMTBL(OP).NE.MINUS(1)) GOTO 802                              RC060800
      CALL OPCODE (FSUB)                                                RC060900
      GO  TO  850                                                       RC061000
  802 IF (NAMTBL(OP).NE.PLUS(1))  GOTO 803                              RC061100
      CALL OPCODE (FADD)                                                RC061200
      GO  TO  850                                                       RC061300
  803 IF (NAMTBL(OP).NE.ASTER(1)) GOTO 804                              RC061400
      CALL OPCODE (FMPY)                                                RC061500
      GO  TO  850                                                       RC061600
  804 CALL OPCODE(FEXP)                                                 RC061700
  850 CALL ARGCVT(RSLT)                                                 RC061800
      CALL ARGCVT(ARG1)                                                 RC061900
      CALL ARGCVT(ARG2)                                                 RC062000
      CALL RLSLIN                                                       RC062100
      STACK(1,TOP-3) = RSLT                                             RC062200
      L = NAMTBL(RSLT)/MODULO                                           RC062300
      STACK(2,TOP-3)=META(L)                                            RC062400
  860 STACK(1,TOP-2)=STACK(1,TOP)                                       RC062500
      ESTACK(TOP-2)=ESTACK(TOP)                                         RC062600
      STACK(2,TOP-2) = STACK(2,TOP)                                     RC062700
      TOP = TOP-2                                                       RC062800
      GO TO 220                                                         RC062900
C...       INITIALIZE STRING, THEN READ                                 RC063000
  900 I = STACK(1,TOP)                                                  RC063100
      CHR = ZERO//BLK                                                   RC063200
      CALL CONCAT(CHR,CNAMTB(I))                                        RC063500
      GO TO 2900                                                        RC063600
C                                                                       RC063700
C...     SUBSCRIPT ON RIGHT                                             RC063800
 1000 IF(ISSFL)GO TO 1030                                               RC063900
      I=STACK(1,TOP-2)                                                  RC064000
      IF (I.GT.NAMMAX) THEN                                             RC064010
        J=NUMBER(1)/MODULO                                              RC064020
      ELSE                                                              RC064030
      J=NAMTBL(I)/MODULO                                                RC064100
      ENDIF                                                             RC064110
      IF(ARGTOP.GT.0)GO TO 1050                                         RC064200
      IF(I.GT.NAMMAX)GO TO 1030                                         RC064300
      IF(J.EQ.IDENT(1)/MODULO .OR. J.EQ.PERMID(1)/MODULO)GO TO 1050     RC064400
C    LIEGT EIN   READ-BEFEHL VOR ?                                      RC064500
 1030 IF (STACK(1,2).LE.NAMMAX) THEN                                    RC064600
        IF(NAMTBL(STACK(1,2)).EQ.19057)CALL  RESRED                     RC064610
      ENDIF                                                             RC064620
      CALL SUBCOD (TOP-4)                                               RC064700
C        MODIFY STACK                                                   RC064800
 1010 STACK(1,TOP-3)=STACK(1,TOP)                                       RC064900
      STACK(2,TOP-3)=STACK(2,TOP)                                       RC065000
      ESTACK(TOP-3)=ESTACK(TOP)                                         RC065100
      TOP=TOP-3                                                         RC065200
      GO TO 220                                                         RC065300
C                                                                       RC065400
C...     CHECK FOR INCLUSIVE SUBSCRIPT FORMAT                           RC065500
C                                                                       RC065600
 1050 IF(J.EQ.IDENT(1)/MODULO)CALL SETMOD(TOP-2,PERMID)                 RC065700
C        PLACE BIT PATTERNS IN TOP OF STACK FOR SEARCH                  RC065800
      ARGTOP=ARGTOP+1                                                   RC065900
      ARGSTK(ARGTOP)=STACK(1,TOP-2)                                     RC066000
      ERGSTK(ARGTOP)=ESTACK(TOP-2)                                      RC066100
      K=TOP+1                                                           RC066200
      N5=TOP                                                            RC066300
      STACK(2,K)=-1                                                     RC066400
      ATP=1                                                             RC066500
      IF(ARGTOP.GT.5)ATP=ARGTOP-4                                       RC066600
      DO 1060 I=ATP,ARGTOP                                              RC066700
      K=K+1                                                             RC066800
      L=ARGSTK(I)                                                       RC066900
      IF(L.LE.NAMMAX)GO TO 1052                                         RC067000
      IARG=REAL                                                         RC067100
      GO TO 1058                                                        RC067200
 1052 M=MODULO*(NAMTBL(L)/MODULO)                                       RC067300
      IARG=NAMTBL(L)-M                                                  RC067400
      IF(IARG.GE.MODHLF)IARG=IARG-MODHLF                                RC067500
      IF (IARG.EQ.0) GOTO 1092                                          RC067510
      IF(M.EQ.VBL(1) .OR. M.EQ.TEMP(1))GO TO 1058                       RC067600
      IF(M.EQ.PERMID(1))GO TO 1056                                      RC067700
      IF (M.NE.NUMBER(1)) GO TO 1092                                    RC067710
      IARG=REAL                                                         RC067800
      GO TO 1058                                                        RC067900
 1056 IARG=IARG+50                                                      RC068000
 1058 STACK(2,K)=PMIDTB(IARG)                                           RC068100
 1060 CONTINUE                                                          RC068200
C        SEARCH SUBSCR PRODUCTIONS                                      RC068300
      L=GEOLOC(SUBSCR)                                                  RC068500
      ERRP=ARGTOP                                                       RC068600
      KT2=K*2                                                           RC068710
      I=SEARCH(STACK,KT2,GEOMTB(L),ERRP)                                RC068720
      IF (I.EQ.200) GO TO 1090                                          RC068800
      IF (ERRP.GE.ATP) GO TO 1091                                       RC068900
      ISSC=1                                                            RC069000
      J=1                                                               RC069100
      IF(I.LT.6) GO TO 1070                                             RC069200
      II=ARGSTK(ATP)                                                    RC069300
      I=I-5                                                             RC069400
 1062 IF(II.LE.NAMMAX)GO TO 1094                                        RC069900
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           RC069910
      II=II-NAMMAX                                                      RC069920
      IF(NLAST.GT.0)CALL MCXTRN(5,II,IDUMMY)                            RC070000
      CALL BCDBIN(CNUMTB(II),III,IDUMMY)                                RC070100
      GO TO (1068,1080,1085),J                                          RC070200
C                                                                       RC070210
C        PREPARE AND STORE ISSC                                         RC070220
 1068 ISSC=III                                                          RC070230
 1070 K=ARGSTK(ATP+1)                                                   RC070240
      IF (K.LE.NAMMAX) THEN                                             RC070245
        IF (NAMTBL(K)-NAMTBL(K)/MODHLF*MODHLF.EQ.60)ISSC=-ISSC          RC070250
      ENDIF                                                             RC070260
C        PREPARE AND STORE ISSB                                         RC070400
      J=2                                                               RC070410
      IF(I.NE.3 .AND. I.NE.5 )GO TO 1072                                RC070500
      II=ARGSTK(ARGTOP-I/2)                                             RC070510
      GOTO 1062                                                         RC070520
 1072 IF(RNGPT.EQ.1)GO TO 1096                                          RC070600
      II=STACK(1,TOP-4)                                                 RC070700
      III=RNGPT-2                                                       RC070800
      DO 1075 M=1,III,2                                                 RC070900
      IF(RANGE(M).EQ.II)GO TO 1076                                      RC071000
 1075 CONTINUE                                                          RC071100
      GO TO 1096                                                        RC071200
 1076 ISSB=RANGE(M+1)                                                   RC071300
      GO TO 1082                                                        RC071400
 1080 ISSB=III                                                          RC071900
C                                                                       RC072000
C        PREPARE AND STORE ISSA                                         RC072100
 1082 J=3                                                               RC072200
      ISSA=1                                                            RC072300
      IF (I.LT.4)GOTO 1084                                              RC072400
      II=ARGSTK(ARGTOP)                                                 RC072500
      GOTO 1062                                                         RC072600
 1085 ISSA=III                                                          RC072700
C                                                                       RC072800
 1084 IF((ISSB-ISSA)*ISSC.GT.0) GO TO 1086                              RC073300
      II=ISSB                                                           RC073400
      ISSB=ISSA                                                         RC073500
      ISSA=II                                                           RC073600
C        PLACE ISSA IN STACK AND SET FLAG, ETC. IF STRING CONTAINS      RC073900
C          MORE THAN ONE ITEM                                           RC074000
 1086 IF(ISSA.NE.1)GO TO 1088                                           RC074100
      STACK(1,TOP-2)=ONEPT                                              RC074200
      GO TO 1089                                                        RC074300
 1088 IICHR=BLK                                                         RC074400
      CALL BINBCD(ISSA,IICHR,K)                                         RC074500
      IICHR(K+1:K+1)='.'                                                RC074600
C                                                                       RC074700
      I=NUMB(IICHR(:K+1))                                               RC074800
C....ADD OFFSET OF NAMMAX TO CNUMTB ADDRESS FOR COMPATIBILITY           RC074880
C....WITH PREVIOUS METHOD OF STORING NUMBERS IN NAMTBL                  RC074890
      STACK(1,TOP-2)=I + NAMMAX                                         RC074900
 1089 II=NUMBER(1)/MODULO                                               RC075000
      ARGTOP=ATP-1                                                      RC075010
      STACK(2,TOP-2)=META(II)                                           RC075100
      ISSA=ISSA+ISSC                                                    RC075200
      IF(ISSC.LE.0 .AND. (ISSA.LT.ISSB .OR. ISSC.GT.-1))GO TO 1030      RC075300
      IF(ISSC.GE.0 .AND. (ISSA.GT.ISSB .OR. ISSC.LT.1))GO TO 1030       RC075400
      ISSVBL=STACK(1,TOP-4)                                             RC075500
      ISSTRM(1)=STACK(1,TOP)                                            RC075600
      ISSTRM(2)=STACK(2,TOP)                                            RC075700
      STACK(1,TOP)=COMMA(2)                                             RC075800
      II=COMMA(1)/MODULO                                                RC075900
      STACK(2,TOP)=META(II)                                             RC076000
      ISSFL=.TRUE.                                                      RC076100
      GO TO 1030                                                        RC076200
C                                                                       RC076300
C     'FALSCHE INDIZIERUNGSANGABE'                                      RC076700
 1090 IF (ERRP.EQ.ATP)ERRP=ATP                                          RC076710
      GOTO 1091                                                         RC076720
 1092 ERRP=I                                                            RC076800
 1091 IERROR=2053                                                       RC076900
      IF (ERRP.EQ.ARGTOP) GOTO 1097                                     RC076910
      GO TO 1095                                                        RC077000
C     'UNZULAESSIGE SYMBOLISCHE ZAHLANGABE'                             RC077300
 1094 IERROR=2054                                                       RC077400
      IF (J.EQ.3) GOTO 1097                                             RC077410
      ERRP=ATP                                                          RC077500
      IF (J.EQ.2)ERRP=ARGTOP-I/2                                        RC077510
 1095 TOP=TOP-2                                                         RC077520
      ARGTOP=ARGTOP-1                                                   RC077530
      GO TO 1098                                                        RC077540
 1097 ERRP=2-TOP                                                        RC077550
      GO TO 1098                                                        RC077600
C     'VARIABLE NICHT RESERVIERT'                                       RC077700
 1096 IERROR=1013                                                       RC077800
      ERRP=4-TOP                                                        RC077900
 1098 CALL ALARM(IERROR,-ERRP,8,'RECOG   ')                             RC078000
      TOP=N5                                                            RC078100
      GO TO 2810                                                        RC078200
C                                                                       RC078300
C...     SUBSCRIPT ON LEFT                                              RC078400
C          DOES LEFT SIDE HAVE MODE                                     RC078500
C                                                                       RC078600
 1100 II=MODE(STACK(1,TOP-1))                                           RC078700
 1101 IF(MODE(STACK(1,TOP-6)).NE.0) GO TO 1130                          RC078800
      I=STACK(1,TOP-6)                                                  RC078900
      NAMTBL(I) = NAMTBL(I)+II                                          RC079000
C                                                                       RC079100
C     FIND ARRAY LENGTH IN RANGE                                        RC079200
      III=1                                                             RC079300
 1110 IF(III.GE.RNGPT)GO TO 1130                                        RC079400
      IF(RANGE(III).EQ.STACK(1,TOP-6))GO TO 1120                        RC079500
      III=III+2                                                         RC079600
      GO TO 1110                                                        RC079700
C                                                                       RC079800
C     RESERVE STORAGE                                                   RC079900
 1120 CALL RESRVZ(I,II,TXXXX(1,II),RANGE(III+1))                        RC080000
C                                                                       RC080100
C                                                                       RC080200
 1130 IF(II.EQ.BOUNDS .OR. II.EQ.OBJECT) GO TO 1805                     RC080300
      CALL SUBCOD(TOP-6)                                                RC080400
C                                                                       RC080500
C     MODIFY STACK                                                      RC080600
      STACK (1,TOP-5)=STACK(1,TOP-2)                                    RC080700
      STACK (2,TOP-5)=STACK(2,TOP-2)                                    RC080800
      ESTACK (TOP-5)=ESTACK(TOP-2)                                      RC080900
      STACK (1,TOP-4)=STACK(1,TOP-1)                                    RC081000
      STACK (2,TOP-4)=STACK(2,TOP-1)                                    RC081100
      ESTACK (TOP-4)=ESTACK(TOP-1)                                      RC081200
      GO TO 1010                                                        RC081300
C                                                                       RC081400
 1200 K=STACK (1,TOP-1)                                                 RC081500
      IF(CNAMTB(K).NE.ON)GOTO 1210                                      RC081600
      NOWARN=.TRUE.                                                     RC081700
      GOTO 1220                                                         RC081800
 1210 IF(CNAMTB(K).NE.OFF)GOTO 1230                                     RC081900
      NOWARN=.FALSE.                                                    RC082000
 1220 IF (K.LE.NAMMAX) THEN                                             RC082100
      IF(NAMTBL(K)/MODULO.EQ.IDENT(1)/MODULO)CALL SETMOD(TOP-1,PERMID)  RC082110
      ENDIF                                                             RC082128
      GOTO 5                                                            RC082200
 1230 CALL ALARM(1008,TOP-1,8,'RECOG   ')                               RC082300
      GOTO 5                                                            RC082400
C                                                                       RC082500
 1300 IF (STACK(1,TOP-2).LE.NAMMAX) THEN                                RC082600
        IF (NAMTBL(STACK(1,TOP-2)).EQ.MINUS(1)) GOTO 1400               RC082610
      ENDIF                                                             RC082620
C     UNARY PLUS                                                        RC082700
      STACK(1,TOP-2) = STACK(1,TOP-1)                                   RC082800
      STACK(2,TOP-2) = STACK(2,TOP-1)                                   RC082900
      ESTACK(TOP-2) = ESTACK(TOP-1)                                     RC083000
C                                                                       RC083100
      GO TO 1420                                                        RC083200
C...       UNARY MINUS                                                  RC083300
 1400 ARG = STACK(1,TOP-1)                                              RC083400
      J = MODE(ARG)                                                     RC083500
      IF(J.EQ.REAL) GO TO 1410                                          RC083600
      CALL ALARM(1005,TOP-1,8,'RECOG   ')                               RC083700
 1410 IF(IFTMP(ARG)) CALL PUTTMP(J)                                     RC083800
      RSLT = GETTMP(REAL)                                               RC083900
      CALL OPCODE (FSUB)                                                RC084000
      CALL ARGCVT(RSLT)                                                 RC084100
      CALL ARGCVT(ZEROPT)                                               RC084200
      CALL ARGCVT(ARG)                                                  RC084300
      CALL RLSLIN                                                       RC084400
      STACK(1,TOP-2) = RSLT                                             RC084500
      L = TEMP(1)/MODULO                                                RC084600
      STACK(2,TOP-2)=META(L)                                            RC084700
 1420 STACK(1,TOP-1)=STACK(1,TOP)                                       RC084800
      STACK(2,TOP-1) = STACK(2,TOP)                                     RC084900
      ESTACK(TOP-1) = ESTACK(TOP)                                       RC085000
      TOP = TOP-1                                                       RC085100
      GO TO 220                                                         RC085200
C...                                                                    RC085205
 1450 IF (STACK(1,TOP).NE.NUMBST+NAMMAX)GOTO 2900                       RC085210
      K=NUMIDX+1                                                        RC085215
      IF(K.GT.NUMBND)GOTO 1480                                          RC085220
      NUMIDX=K                                                          RC085225
 1460 DO 1470 J=1,3                                                     RC085230
        TEXTST=TEXTST+1                                                 RC085232
        CALL MCXTRN(2,TEXTST,ICNUM(J))                                  RC085234
 1470 CONTINUE                                                          RC085236
      CALL HOLFRM(ICNUM,CNUMTB(K),1,12,NWD)                             RC085240
C... INCREMENT FOR NUMBER TABLE ADDRESS                                 RC085242
      STACK(1,TOP)=K+NAMMAX                                             RC085245
      GOTO 2900                                                         RC085250
 1480 DO 1490 J=MNMBND,NUMBND                                           RC085255
       K=K-1                                                            RC085260
       IF (CNUMTB(K).EQ.' ') GOTO 1460                                  RC085265
 1490 CONTINUE                                                          RC085270
      K=NUMBND                                                          RC085275
      GOTO 1460                                                         RC085280
C...       VECTOR PRODUCTS                                              RC085300
 1500 CALL INPUT                                                        RC085400
      CALL INPUT                                                        RC085500
      IF (ENDFLG.AND.(STACK(1,TOP-1).NE.DOLLAR(2)) ) GOTO 3             RC085510
      IF(STACK(1,TOP).EQ.RPAREN(2))GOTO 1530                            RC085600
 1510 CNT=CNT-2                                                         RC085700
 1520 TOP=TOP-2                                                         RC085800
      GOTO 3215                                                         RC085900
 1530 IF(STACK(1,TOP-1).NE.ASTER(2))GOTO 1550                           RC086000
      CALL SETCHR(TOP-2,KREUZ)                                          RC086100
      GOTO 1520                                                         RC086300
 1550 IF(STACK(1,TOP-1).NE.DECMAL(2))GOTO 1510                          RC086400
      CALL SETCHR(TOP-2,DOT)                                            RC086500
      GOTO 1520                                                         RC086700
C...       ARGUMENT LIST                                                RC086800
 1600 K=STACK(1,TOP-1)                                                  RC086900
      ARGTOP=ARGTOP+1                                                   RC087000
      ARGSTK(ARGTOP)=K                                                  RC087100
      ERGSTK(ARGTOP)=ESTACK(TOP-1)                                      RC087200
      IF(K.GT.NAMMAX)GO TO 860                                          RC087300
      IF(IFTMP(K)) CALL PUTTMP(MODE(K))                                 RC087400
      J=NAMTBL(K)/MODULO                                                RC087500
      IF(J.EQ.IDENT(1)/MODULO)                                          RC087600
     /CALL SETMOD(TOP-1,PERMID)                                         RC087700
      GO TO 860                                                         RC087800
C...       FUNCTION CALL GENERATOR                                      RC087900
 1700 ARGTOP=ARGTOP+1                                                   RC088000
      I = STACK(1,TOP-1)                                                RC088100
      ARGSTK(ARGTOP) = I                                                RC088200
      IF(IFTMP(I)) CALL PUTTMP(MODE(I))                                 RC088300
      J = GETTMP(REAL)                                                  RC088400
      MAJOR=STACK(1,TOP-3)                                              RC088500
      IF(INTMED.NE.1)GO TO 1703                                         RC088600
      WAY=3                                                             RC088700
      IF(FINMAC)GO TO 1702                                              RC088800
      MAJWRD=MAJOR                                                      RC088900
 1701 ERGSTK(100)=TOP-3                                                 RC089000
      CALL MATCH                                                        RC089100
      IF(.NOT.ENTRY)GO TO 1705                                          RC089200
      IF(MAJOR.LE.NAMMAX)GO TO 1706                                     RC089300
      CALL ALARM(2025,TOP-3,8,'RECOG   ')                               RC089400
      GO TO 1703                                                        RC089500
 1706 IF(NAMTBL(MAJOR)/MODULO.NE.FCN(1)/MODULO)CALL ALARM(2025,TOP-3,   RC089600
     * 8,'RECOG   ')                                                    RC089700
      GO TO 1703                                                        RC089800
 1702 CALL PATH                                                         RC089900
      IF(.NOT.SHOULD)GO TO 1705                                         RC090000
 1703 CALL CALLZZ(MAJOR)                                                RC090100
      CALL ARGCVT(J)                                                    RC090200
      CALL ARGGEN                                                       RC090300
      CALL RLSLIN                                                       RC090400
      IF(ENTRY)GO TO 1701                                               RC090500
 1705 STACK(1,TOP-3)=J                                                  RC090600
      L = TEMP(1)/MODULO                                                RC090700
      STACK(2,TOP-3)=META(L)                                            RC090800
      ARGTOP=0                                                          RC090900
      TOP = TOP-3                                                       RC091000
      CALL VCTPRD(L)                                                    RC091100
      IF (L.EQ.1) GOTO 2900                                             RC091110
      GOTO 220                                                          RC091200
C     STACK ARGUMENT                                                    RC091300
 1800 II = STACK(1,TOP-1)                                               RC091400
      II = MOD(NAMTBL(II),MODULO)                                       RC091500
      IF(II.GE.MODHLF)II=II-MODHLF                                      RC091600
      GOTO 1101                                                         RC091700
C                                                                       RC091800
C...  ERROR 1029:  'BOUNDED GEOMETRY MUST NOT BE SUBSCRIPTED.  STATE-   RC091900
C                   MENT IGNORED.'                                      RC092000
C                                                                       RC092100
 1805 CALL ALARM(1029,TOP-4,8,'RECOG   ')                               RC092200
      CALL CALLZZ(UNDEF)                                                RC092300
      CALL ARGCVT(STACK(1,TOP-6))                                       RC092400
      CALL RLSLIN                                                       RC092500
      GOTO 2810                                                         RC092600
C...       SCAN PAST RIGHT TERMINATOR                                   RC093100
 1900 CALL INPUT                                                        RC093200
      IF(STACK(1,TOP).EQ.RTERM(2))GO TO 520                             RC093300
      TOP=TOP-1                                                         RC093400
      GO TO 1900                                                        RC093500
C     REMOVE PARENTHESIS                                                RC093600
C                                                                       RC093700
 2100 STACK(1,TOP-2)=STACK(1,TOP-1)                                     RC093800
      STACK(2,TOP-2)=STACK(2,TOP-1)                                     RC093900
      ESTACK(TOP-2)=ESTACK(TOP-1)                                       RC094000
      TOP=TOP-2                                                         RC094100
      GO TO 2900                                                        RC094200
C                                                                       RC094300
C...       CONCATINATE TOP TO STRING, SET STACK TO 'LTR'                RC094400
 2200 CALL SETCHR(TOP-1,LETTER)                                         RC094500
 2500 K=STACK(1,TOP)                                                    RC094600
 2510 CALL CONCAT(CHR,CNAMTB(K))                                        RC094700
      LSTCHR=STACK(1,TOP)                                               RC094710
      TOP=TOP-1                                                         RC094800
      CALL INPUT                                                        RC094900
      GO TO 25                                                          RC095000
 2900 CALL INPUT                                                        RC095100
      IF (STACK(1,TOP).GT.NAMMAX)GOTO 1                                 RC095110
      IF(NAMTBL(STACK(1,TOP)).NE.MCLTRM(1))GOTO 1                       RC095200
      BKPT=MBKPNT                                                       RC095300
      GO TO 1                                                           RC095400
 2950 IF (.NOT.ISSFL) GOTO 2900                                         RC095410
      CALL ISSCOD                                                       RC095420
      GO TO 20                                                          RC095430
C...       NESTED ASSIGNMENT                                            RC095500
 2300 IF (MODE(STACK(1,TOP-1)).EQ.BOOL)CALL BOOLIF(5)                   RC095510
      CALL REPLAC                                                       RC095600
      GO TO 860                                                         RC095700
C...       ASSIGNMENT STATEMENT                                         RC095800
 2400 IF (MODE(STACK(1,TOP-1)).EQ.BOOL)CALL BOOLIF(5)                   RC095810
      CALL REPLAC                                                       RC095900
      GO TO 5                                                           RC096000
 2600 CALL PRO026                                                       RC096100
      GO  TO  1                                                         RC096200
 2700 DOJUMP = 1                                                        RC096300
      CALL LOOP                                                         RC096400
      GOTO 6                                                            RC096500
C     STACK ARGUMENT                                                    RC096600
 2800 CALL ALARM(1007,ERRP,8,'RECOG   ')                                RC096700
      IF (ICALLF.EQ.1) CALL MACREC(12)                                  RC096710
 2810 BIGCNT = 0                                                        RC096800
      IBR=0                                                             RC096900
      IF(STACK(1,TOP).EQ.RTERM(2)) GO TO 5                              RC097200
      TOP=99                                                            RC097300
      CALL INPUT                                                        RC097400
      GO TO 5                                                           RC097500
C                                                                       RC097600
C...       IS MODE OF JUMP VARIABLE 'REAL'                              RC097700
C                                                                       RC097800
 3000 IF(ARGTOP.GT.0)CALL ALARM(2052,-ARGTOP,8,'RECOG   ')              RC097900
      K = STACK(1,TOP-7)                                                RC098000
      L = MODE(K)                                                       RC098100
      IF(L.NE.REAL)                                                     RC098200
     1CALL ALARM(1008,TOP-7,8,'RECOG   ')                               RC098300
      IF(IFTMP(K)) CALL PUTTMP(L)                                       RC098400
      CALL OPCODE (CONJMP)                                              RC098500
C                                                                       RC098600
C...       VARIABLE                                                     RC098700
C                                                                       RC098800
      CALL ARGCVT(K)                                                    RC098900
C                                                                       RC099000
C...   LABELS                                                           RC099100
C                                                                       RC099200
      DO 3001 I=1,5,2                                                   RC099300
      K = TOP-6+I                                                       RC099400
      K = STACK(1,K)                                                    RC099500
      IF (K.GT.NAMMAX) GOTO 3004                                        RC099600
      J = MODULO*(NAMTBL(K)/MODULO)                                     RC099700
      IF(J.NE.LABEL(1) .AND. J.NE.IMPLAB(1))NAMTBL(K)=IMPLAB(1)         RC099800
      IF(WHCHMN.EQ.0)GO TO 3002                                         RC099900
      GO TO 3003                                                        RC100000
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           RC100110
 3004 K=K-NAMMAX                                                        RC100120
      IF(NLAST.GT.0)CALL MCXTRN(5,K,IDUMMY)                             RC100130
      CALL BCDBIN(CNUMTB(K),KK,ICOUNT)                                  RC100200
      K=KK+10000                                                        RC100300
 3003 CALL MACLBL(K,-WHCHMN,K)                                          RC100400
      IF(NAMTBL(K).EQ.0)NAMTBL(K)=IMPLAB(1)+WHCHMN                      RC100500
 3002 CALL LABCON(K)                                                    RC100600
 3001 CALL ONEARG(K)                                                    RC100700
      CALL RLSLIN                                                       RC100800
      GO TO 6                                                           RC100900
C                                                                       RC101000
 3200 CALL INPUT                                                        RC101100
      IF (ENDFLG) GOTO 3                                                RC101110
      ERRP=TOP-1                                                        RC101200
      IF(STACK(1,TOP).NE.ASTER(2))GO TO 3210                            RC101300
C                  **  TO  'DBLAST'                                     RC101400
      TOP=ERRP                                                          RC101500
      CALL SETCHR (TOP,DBLAST)                                          RC101600
      GO TO 25                                                          RC101700
 3210 TOP=ERRP                                                          RC101900
      CNT=CNT-1                                                         RC102000
 3215 LBKPNT=MBKPNT-6                                                   RC102100
      GO TO 25                                                          RC102200
C           VECTOR PRODUCT (STACK PREPARATION)                          RC102300
 3300 IF (STACK(1,TOP-2).LE.NAMMAX) THEN                                RC102400
        IF (NAMTBL(STACK(1,TOP-2)).EQ.DOT(1))GOTO 3320                  RC102410
      ENDIF                                                             RC102420
      DO 3310 J=1,3,2                                                   RC102500
      IF (STACK(1,TOP-J).LE.NAMMAX) THEN                                RC102510
      IF(MOD(NAMTBL(STACK(1,TOP-J)),MODHLF).NE.VECTOR)GOTO 3330         RC102600
      ENDIF                                                             RC102610
 3310 CONTINUE                                                          RC102700
 3320 I=-1                                                              RC102800
      CALL VCTPRD(I)                                                    RC102900
      GOTO 220                                                          RC103000
 3330 CALL ALARM(1008,TOP-J,8,'RECOG   ')                               RC103100
      GOTO 2810                                                         RC103200
C                                                                       RC103300
C...       ENTER DIGIT STRING IN NAME TABLE                             RC103400
 3400 CALL CONCAT(CHR,'.')                                              RC103500
      LSTCHR=NUMIDX                                                     RC103510
 2000 IICHR=CHR(4:15)                                                   RC103600
      K=I                                                               RC103800
      I = NUMB(IICHR)                                                   RC103900
 3405 L = NUMBER(1)/MODULO                                              RC104000
C....ADD OFFSET OF NAMMAX TO CNUMTB ADDRESS FOR COMPATIBILITY           RC104080
C....WITH PREVIOUS METHOD OF STORING NUMBERS IN NAMTBL                  RC104090
      I= I + NAMMAX                                                     RC104091
 3410 STACK(1,TOP-1) = I                                                RC104100
      STACK(2,TOP-1) = META (L)                                         RC104200
      ERRP=TOP-1                                                        RC104300
      IF(K.LT.70)GOTO 220                                               RC104400
      IF (K-73)7200,7300,7400                                           RC104410
 3500 L = IDENT(1)                                                      RC104500
      K=I                                                               RC104600
      READ (CHR,'(I3)') NCHR                                            RC104610
      IF(NCHR.GT.6) CALL ALARM(16,TOP-1,4,'RECOG   ')                   RC104700
      IICHR = CHR(4:NCHR+3)                                             RC104910
      I = NAME(IICHR)                                                   RC105000
      IF (NAMTBL(I).EQ.0) NAMTBL(I)=L                                   RC105200
      L = NAMTBL(I)/MODULO                                              RC105300
      GO TO 3410                                                        RC105400
C...       SET PERIOD AND CONCATINATE TOP TO DIGIT STRING               RC105500
 3600 CALL SETCHR(TOP-1,NUMBER)                                         RC105600
      GO TO 2500                                                        RC105700
 3700 CALL PRO020(I)                                                    RC105800
      IF (I.NE. 38) GO TO 2900                                          RC105900
      GO TO 1                                                           RC106000
C                                                                       RC106300
 4000 CALL KONAST(TENPT)                                                RC106400
      GOTO 220                                                          RC106500
C                                                                       RC106600
C...  MACRO PROCESSING                                                  RC106700
C                                                                       RC106800
 5100 J = I - 50                                                        RC106900
      IF(J.EQ.9)CALL LABCON(0)                                          RC107000
      CALL MACREC(J)                                                    RC107400
      GO TO (220,220,1,1,2900,1,5110,1,5110,2900,1),J                   RC107500
 5110 DOJUMP=J-3                                                        RC107510
      CALL LOOP                                                         RC107520
      GOTO 1                                                            RC107530
C                                                                       RC107600
C... LARGE SURFACE PRODUCTIONS  ****************************************RC107700
C... IF ACTION NUMBER EQUALS 101, CHANGE STACK FROM CONBIG / TO         RC107800
C... BIGGEO /.                                                          RC107900
C... IF ACTION NUMBER IS NOT EQUAL TO 101, ADD 1 TO LARGE SURFACE       RC108000
C... ARGUMENT COUNT AND CALL LCANON, LARGES OR INPAT                    RC108100
C                                                                       RC108200
 5200 IF(I.NE.101)GO TO 5210                                            RC108300
      CALL SETMOD(TOP-1,BIGGEO)                                         RC108400
      GO TO 5205                                                        RC108500
C                                                                       RC108600
 5210 BIGCNT=BIGCNT+1                                                   RC108700
      IF(IBR.NE.0)GO TO 5250                                            RC108800
C                                                                       RC108900
      N3=STACK(1,TOP-3)                                                 RC109000
      IF(N3.GT.NAMMAX)GO TO 5240                                        RC109100
      IF(NAMTBL(N3).NE.CANON(1))GO TO 5240                              RC109200
      IBR=1                                                             RC109300
      GO TO 5250                                                        RC109400
 5240 N5=STACK(1,TOP-5)                                                 RC109500
      M5=NAMTBL(N5)-BIGGEO(1)                                           RC109600
      IF(M5.GE.MODHLF)M5=M5-MODHLF                                      RC109700
      IF(M5.NE.TABCYL)GO TO 5245                                        RC109800
      IBR=2                                                             RC109900
      GO TO 5250                                                        RC110000
 5245 IF(M5.NE.PATERN)GO TO 5248                                        RC110100
      IBR=3                                                             RC110200
      GO TO 5250                                                        RC110300
 5248 ERRP=TOP-5                                                        RC110400
      IF(M5.NE.SSURF.AND.M5.NE.SCURV)GO TO 2800                         RC110500
      IBR=4                                                             RC110600
C                                                                       RC110700
 5250 GO TO (5255,5270,5280,5290),IBR                                   RC110800
 5255 CALL LCANON(I,BIGCNT)                                             RC110900
      GO TO 5205                                                        RC111000
 5270 CALL LARGES(I,BIGCNT)                                             RC111100
      GO TO 5205                                                        RC111200
 5280 CALL INPAT(I,BIGCNT)                                              RC111300
      GO TO 5205                                                        RC111400
 5290 CALL SSDEF(I,BIGCNT)                                              RC111500
C                                                                       RC111600
C... START PRODUCTION SEARCH AT BRKPNT IF CALLED FOR BY PREVIOUS        RC111700
C... PRODUCTION. IF PREVIOUS PRODUCTION RESULTED IN A NULL STACK, SET   RC111800
C... NEW STATEMENT FLAG EQUAL TO .TRUE.  IF PREVIOUS PRODUCTION CALLED  RC111900
C... FOR A NEW CHARACTER TO BE ADDED TO THE STACK, CALL INPUT.          RC112000
C                                                                       RC112100
C                                                                       RC112200
 5205 IF (I .LE. 102)  LBKPNT = BKPT                                    RC112300
      I = I-100                                                         RC112400
      GO TO (25,1,3,5220,5220) ,I                                       RC112500
 5220 CALL INPUT                                                        RC112600
      GO TO 1                                                           RC112700
C                                                                       RC113000
 5000 CALL RECOGN(I,IASNRT)                                             RC113100
      GO TO(25,220,600,1000,2900),IASNRT                                RC113200
C                                                                       RC113300
 3100 CALL PRO027(5)                                                    RC113400
      GO TO 5                                                           RC113700
C                                                                       RC113800
 7100 STACK(1,TOP-1)=STACK(1,TOP)                                       RC113900
      STACK(2,TOP-1) = STACK(2,TOP)                                     RC114000
      ESTACK(TOP-1) = ESTACK(TOP)                                       RC114100
      OPDFLG=.TRUE.                                                     RC114200
      GOTO 2500                                                         RC114300
C                                                                       RC114400
 7200 IF(NAMTBL(I).NE.RELAT(1))GOTO 7210                                RC114700
      TOP=TOP+2                                                         RC114800
      STACK(1,TOP-1)=ZEROPT                                             RC114900
      IF(CNAMTB(I).EQ.TRUE)STACK(1,TOP-1)=ONEPT                         RC115000
      NAMTBL(I)=IDENT(1)                                                RC115010
      CALL REPLAC                                                       RC115100
      NAMTBL(I)=VBL(1)+BOOL                                             RC115200
      TOP=TOP-3                                                         RC115300
      GOTO 2900                                                         RC115400
 7210 IF(OPDFLG)GOTO 7230                                               RC115500
 7215 CNT=CNT-1                                                         RC115600
 7220 TOP=TOP-1                                                         RC115700
      GOTO 220                                                          RC115800
C                                                                       RC115900
 7230 OPDFLG=.FALSE.                                                    RC116010
      IF (L.GT.26.AND.L.LT.31) GOTO 7220                                RC116030
      IF (STACK(1,TOP).LE.NAMMAX) THEN                                  RC116045
        IF (CNAMTB(I).EQ.TRUE.OR.CNAMTB(I).EQ.FALSE)GOTO 7220           RC116050
      ENDIF                                                             RC116055
      IF (MACLDD)GOTO 7215                                              RC116060
      ERRP=TOP                                                          RC116065
      GOTO 2800                                                         RC116070
C                                                                       RC116100
 7300 IF (MACLDD)GOTO 7215                                              RC116200
      GOTO 900                                                          RC116300
C                                                                       RC116400
 7400 CALL INPUT                                                        RC116600
      IF (STACK(1,TOP).LE.NAMMAX) THEN                                  RC116710
      IF(NAMTBL(STACK(1,TOP)).EQ.LETTER(1))GOTO 7420                    RC116800
      IF((CNAMTB(STACK(1,TOP-1)).NE.'E   ').AND.                        RC116900
     *   (CNAMTB(STACK(1,TOP-1)).NE.'D   '))GOTO 7420                   RC117000
      ENDIF                                                             RC117010
      CALL SETCHR(TOP-1,CONAST)                                         RC117100
      GOTO 7215                                                         RC117700
 7420 CHR=ZERO//BLK                                                     RC117710
      CALL CONCAT(CHR,'.')                                              RC117720
      CNT=CNT-1                                                         RC117800
      K=STACK(1,TOP-1)                                                  RC117900
      OPDFLG=.TRUE.                                                     RC117910
      GOTO 2510                                                         RC118000
C                                                                       RC118100
 7800 IF (STACK(1,TOP-1).LE.NAMMAX) THEN                                RC118200
        IF(MOD(NAMTBL(STACK(1,TOP-1)),MODHLF).NE.BOOL)GOTO 2900         RC118210
      ENDIF                                                             RC118220
 7500 J=I-74                                                            RC118300
      CALL BOOLIF(J)                                                    RC118400
      IF(TOP)2810,11,220                                                RC118500
C                                                                       RC118700
      END                                                               RC118800
**** SOURCE FILE : M0006673.V06   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE RECOGN                                M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE RECOGN(I,IASNRT)                              M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    MACLBL          SUBROUTINE    RECOG            M0000800
C          SUBROUTINE    ARGCVT                                         M0000900
C          INTEGER FCT.  NAME                                           M0001000
C          SUBROUTINE    ALARM                                          M0001100
C          INTEGER FCT.  GETTMP                                         M0001200
C          SUBROUTINE    ONEARG                                         M0001300
C          SUBROUTINE    OPCODE                                         M0001400
C          SUBROUTINE    CALLZZ                                         M0001500
C          SUBROUTINE    PUTTMP                                         M0001600
C          SUBROUTINE    REFGEN                                         M0001700
C          SUBROUTINE    RESRVZ                                         M0001800
C          SUBROUTINE    RLSLIN                                         M0001900
C          SUBROUTINE    SETMOD                                         M0002000
C          LOGICAL FCT.  IFTMP                                          M0002100
C          SUBROUTINE    TWOARG                                         M0002200
C                                                                       M0002300
      SUBROUTINE RECOGN(I,IASNRT)                                       M0002400
C                                                                       M0002500
      IMPLICIT INTEGER (A-Z)                                            M0002600
C                                                                       M0002700
C              FUNCTION DECLARATION                                     M0002800
C                                                                       M0002900
      LOGICAL IFTMP                                                     M0003000
C                                                                       M0003100
C        1.    NAME TABLE AND TABLE LIMITS                              M0003200
C                                                                       M0003300
      INCLUDE 'NAMETB.INC'                                              M0003410
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0003450
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0003550
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0003600
C                                                                       M0004000
C        2.    STACK AND POINTER STORAGE                                M0004100
C                                                                       M0004200
      COMMON/STKLST/STKLST                                              M0004300
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      M0004400
C TOP:         POINTER TO LAST STACK ENTRY                              M0004500
      EQUIVALENCE (TOP,STKLST(1))                                       M0004600
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             M0004700
      EQUIVALENCE (ARGTOP,STKLST(2))                                    M0004800
C STACK:       WORKING STACK                                            M0004900
      EQUIVALENCE (STACK(1,1),STKLST(4))                                M0005000
C ARGSTK:      ARGUMENT STACK                                           M0005100
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               M0005200
C                                                                       M0005300
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0005400
C                                                                       M0005500
      COMMON/CODE/CODE                                                  M0005600
      DIMENSION CODE(150),SLASH(2),GEOM(2),TEMP(2),VBL(2),IDENT(2),     M0005700
     *          CONGEO(2),CONPRO(2),CONBIG(2),CANON(2),BIGGEO(2)        M0005800
C SLASH:       (1)=CODE CLASS  5000,(2)=NAMTBL INDEX OF '/     '        M0005900
      EQUIVALENCE (SLASH(1),CODE(9))                                    M0006000
C GEOM:        (1)=CODE CLASS 16000,(2)=NAMTBL INDEX OF 'GEOM  '        M0006100
      EQUIVALENCE (GEOM(1),CODE(31))                                    M0006200
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0006300
      EQUIVALENCE (TEMP(1),CODE(33))                                    M0006400
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        M0006500
      EQUIVALENCE (VBL(1),CODE(61))                                     M0006600
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        M0006700
      EQUIVALENCE (IDENT(1),CODE(69))                                   M0006800
C CONGEO:      (1)=CODE CLASS 39000,(2)=NAMTBL INDEX OF 'CONGEO'        M0006900
      EQUIVALENCE (CONGEO(1),CODE(77))                                  M0007000
C CONPRO:      (1)=CODE CLASS 40000,(2)=NAMTBL INDEX OF 'CONPRO'        M0007100
      EQUIVALENCE (CONPRO(1),CODE(79))                                  M0007200
C CONBIG:      (1)=CODE CLASS 43000,(2)=NAMTBL INDEX OF 'CONBIG'        M0007300
      EQUIVALENCE (CONBIG(1),CODE(85))                                  M0007400
C CANON:       (1)=CODE CLASS 42000,(2)=NAMTBL INDEX OF 'CANON '        M0007500
      EQUIVALENCE (CANON(1),CODE(83))                                   M0007600
C BIGGEO:      (1)=CODE CLASS 44000,(2)=NAMTBL INDEX OF 'BIGGEO'        M0007700
      EQUIVALENCE (BIGGEO(1),CODE(87))                                  M0007800
C                                                                       M0007900
C        4.    PRODUCTION TABLE                                         M0008000
C                                                                       M0008100
      COMMON/SRCTBL/SRCTBL                                              M0008200
      DIMENSION SRCTBL(502),META(50)                                    M0008300
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   M0008400
      EQUIVALENCE (META(1),SRCTBL(3))                                   M0008500
C                                                                       M0008600
C        5.    PROGRAM CONTROL FLAGS                                    M0008700
C                                                                       M0008800
      COMMON/FLAGS/FLAGS                                                M0008900
      LOGICAL REFFLG                                                    M0009000
      DIMENSION FLAGS(4)                                                M0009100
C REFFLG:      TRUE WHEN A REFSYS COMMAND ENCOUNTERED                   M0009200
      EQUIVALENCE (REFFLG,FLAGS(4))                                     M0009300
C                                                                       M0009400
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         M0009500
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    M0009600
      COMMON/TMP/TXXXX                                                  M0009700
      DIMENSION TXXXX(2,32)                                             M0009800
C                                                                       M0009900
C        9.    NAME TABLE POINTERS TO NUMBERS                           M0010000
C                                                                       M0010100
      COMMON/NUMPTR/NUMPTR                                              M0010200
      DIMENSION NUMPTR(12)                                              M0010300
C ZERO:        NAMTBL POINTER TO '0     '                               M0010400
      EQUIVALENCE (ZERO,NUMPTR(1))                                      M0010500
C ONE:         NAMTBL POINTER TO '1     '                               M0010600
      EQUIVALENCE (ONE,NUMPTR(3))                                       M0010700
C TWO:         NAMTBL POINTER TO '2     '                               M0010800
      EQUIVALENCE (TWO,NUMPTR(5))                                       M0010900
C THREE:       NAMTBL POINTER TO '3     '                               M0011000
      EQUIVALENCE (THREE,NUMPTR(6))                                     M0011100
C FOUR:        NAMTBL POINTER TO '4     '                               M0011200
      EQUIVALENCE (FOUR,NUMPTR(7))                                      M0011300
C FIVE:        NAMTBL POINTER TO '5     '                               M0011400
      EQUIVALENCE (FIVE,NUMPTR(8))                                      M0011500
C                                                                       M0011600
C       15.    ARRAY LIMIT STORAGE                                      M0011700
C                                                                       M0011800
      COMMON/SBSCPT/SBSCPT                                              M0011900
      DIMENSION SBSCPT(101),RANGE(100)                                  M0012000
C RNGPT:       POINTER TO NEXT RANGE ENTRY                              M0012100
      EQUIVALENCE (RNGPT,SBSCPT(1))                                     M0012200
C RANGE:       STORAGE FOR APT RESERVE STATEMENT INFORMATION            M0012300
      EQUIVALENCE (RANGE(1),SBSCPT(2))                                  M0012400
C                                                                       M0012500
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0012600
C                                                                       M0012700
      COMMON/IL/IL                                                      M0012800
      DIMENSION IL(21)                                                  M0012900
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              M0013000
      EQUIVALENCE (REPL,IL(17))                                         M0013100
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              M0013200
      EQUIVALENCE (MOVE,IL(19))                                         M0013300
C                                                                       M0013400
C       17.    MODE CODES                                               M0013500
C                                                                       M0013600
      COMMON/MODX/MODX                                                  M0013700
      DIMENSION MODX(32)                                                M0013800
C RLDSRF:      MODE CODE (12) FOR RULED SURFACE                         M0013900
      EQUIVALENCE (RLDSRF,MODX(12))                                     M0014000
C POINT:       MODE CODE (19) FOR POINT                                 M0014100
      EQUIVALENCE (POINT,MODX(19))                                      M0014200
C REAL:        MODE CODE (24) FOR A SCALAR                              M0014300
      EQUIVALENCE (REAL,MODX(21))                                       M0014400
C                                                                       M0014500
C       22.    MACRO PROCESSING VARIABLES                               M0014600
C                                                                       M0014700
      COMMON/MACXX1/MACXX1                                              M0014800
      DIMENSION MACXX1(71)                                              M0014900
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        M0015000
      EQUIVALENCE (INTMED,MACXX1(22))                                   M0015100
C                                                                       M0015200
C       27.    OPERAND MODIFIERS                                        M0015300
C                                                                       M0015400
      COMMON/OPMOD/OPMOD                                                M0015500
      DIMENSION OPMOD(6)                                                M0015600
C TRPDLR:      CONTAINS OPERAND TYPE CODE 3                             M0015700
      EQUIVALENCE (TRPDLR,OPMOD(4))                                     M0015800
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             M0015900
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     M0016000
C                                                                       M0016100
C       28.    OPERAND MODIFIERS                                        M0016200
C                                                                       M0016300
      COMMON/SUBLST/SUBLST                                              M0016400
      DIMENSION SUBLST(136),APTXXX(120)                                 M0016500
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            M0016600
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 M0016700
C                                                                       M0016800
C       29.    CLASS CODE MODULI                                        M0016900
C                                                                       M0017000
      COMMON/MODULI/MODULI                                              M0017100
      DIMENSION MODULI(2)                                               M0017200
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0017300
      EQUIVALENCE (MODULO,MODULI(1))                                    M0017400
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0017500
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0017600
C                                                                       M0017700
C       42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE       M0017800
C                                                                       M0017900
      COMMON/CANSTR/CANSTR                                              M0018000
      DIMENSION CANSTR(18),CANSTK(16)                                   M0018100
C CANPTR:      POINTER TO LAST CANSTK ENTRY                             M0018200
      EQUIVALENCE (CANPTR,CANSTR(1))                                    M0018300
C CANCHK:      CONTAINS DIMENSION OF ARRAY CANSTK                       M0018400
      EQUIVALENCE (CANCHK,CANSTR(2))                                    M0018500
C CANSTK:      ARGUMENT STACK FOR CANON AND OBTAIN STATEMENTS           M0018600
      EQUIVALENCE (CANSTK(1),CANSTR(3))                                 M0018700
C*                                                                      M0018800
C ARGUMENTS    I       CURRENT PRODUCTION NUMBER                        M0018900
C              IASNRT  INTEGER USED BY RECOG TO BRANCH TO THE           M0019000
C              APPROPRIATE CODING AFTER RETURN FROM RECOGN              M0019100
C                                                                       M0019200
      LOGICAL CANFLG,ERRFLG                                             M0019300
      CHARACTER*6 PPOINT                                                M0019350
      DATA CANFLG/.FALSE./,STMTYP,CANDAT/2*0/                           M0019400
      DATA PPOINT /'POINT'/                                             M0019600
C**                                                                     M0019700
      INDEX=I-40                                                        M0019800
      GO TO(4100,4200,4300,4400,4500,4600,4700,4800,4900),INDEX         M0019900
C                                                                       M0020000
C...  STORE NEXT ELEMENT                                                M0020100
C                                                                       M0020200
 4100 N5=STACK(1,TOP-5)                                                 M0020300
      IF(CANPTR.NE.0)GO TO 4150                                         M0020400
      J=NAMTBL(N5)-GEOM(1)                                              M0020500
      IF(J.EQ.RLDSRF)GO TO 4110                                         M0020600
      J=J-MODHLF                                                        M0020700
      IF(J.NE.RLDSRF)GO TO 4150                                         M0020800
 4110 N5=GETTMP(RLDSRF)                                                 M0020900
      NAMTBL(N5)=BIGGEO(1)+J                                            M0021000
      STACK(1,TOP-5)=N5                                                 M0021100
      J=BIGGEO(1)/MODULO                                                M0021200
      STACK(2,TOP-5)=META(J)                                            M0021300
      GO TO 220                                                         M0021400
 4150 CANPTR=CANPTR+1                                                   M0021500
      CANDAT=CANDAT+1                                                   M0021600
      IF(CANPTR.EQ.1)GOTO 4175                                          M0021700
 4155 IF(CANPTR.NE.CANERR)GOTO 4156                                     M0021800
      CALL ALARM(III,TOP-1,8,'RECOGN  ')                                M0021900
      GOTO 4403                                                         M0022000
 4156 IF(CANPTR.LE.CANCHK)GO TO 4160                                    M0022100
      IF(CANPTR.EQ.CANCH)CALL ALARM(19,TOP-1,8,'RECOGN  ')              M0022200
      GO TO 4170                                                        M0022300
 4160 J=STACK(1,TOP-1)                                                  M0022400
      KK=MODE(J)                                                        M0022500
      IF(STMTYP.NE.3)GOTO 4161                                          M0022600
      IF(J.GT.NAMMAX)GOTO 4172                                          M0022700
      JJ=NAMTBL(J)/MODULO*MODULO                                        M0022800
      IF(JJ.NE.VBL(1).AND.JJ.NE.TEMP(1))GOTO 4165                       M0022900
 4161 IF(KK.NE.REAL)GOTO 4172                                           M0023000
 4165 CANSTK(CANPTR) = STACK(1,TOP-1)                                   M0023100
 4170 STACK(1,TOP-2) = STACK(1,TOP)                                     M0023200
      STACK(2,TOP-2) = STACK(2,TOP)                                     M0023300
      TOP = TOP-2                                                       M0023400
      GOTO 220                                                          M0023500
 4172 CALL ALARM(KKK,TOP-1,8,'RECOGN  ')                                M0023600
      ERRFLG=.TRUE.                                                     M0023700
      GOTO(4165,4212),INDEX                                             M0023800
C                                                                       M0023900
C...  STORE NEGATIVE MODIFIER                                           M0024000
C                                                                       M0024100
 4200 CANPTR=CANPTR+1                                                   M0024200
      IF(CANPTR.EQ.1)GOTO 4175                                          M0024300
 4205 IF(CANPTR.NE.CANMAX)GOTO 4206                                     M0024400
 4207 CALL ALARM(III,TOP,8,'RECOGN  ')                                  M0024500
      GOTO 4403                                                         M0024600
 4206 IF(CANPTR.LE.CANCHK)GO TO 4210                                    M0024700
      IF(CANPTR.EQ.CANCH)CALL ALARM(19,TOP,8,'RECOGN  ')                M0024800
      GO TO 4220                                                        M0024900
 4210 IF(STMTYP.EQ.1)GOTO 4230                                          M0025000
 4212 CANSTK(CANPTR) = -CANPTR                                          M0025100
 4220 STACK(1,TOP-1)=STACK(1,TOP)                                       M0025200
      STACK(2,TOP-1)=STACK(2,TOP)                                       M0025300
      TOP = TOP-1                                                       M0025400
      GOTO 220                                                          M0025500
 4230 III=1008                                                          M0025600
      GOTO 4207                                                         M0025700
C                                                                       M0025800
 4175 TP=TOP-6+INDEX                                                    M0025900
      ERRFLG=.FALSE.                                                    M0026000
      IF(STACK(1,TP+1).EQ.SLASH(2))GOTO 4180                            M0026100
      TP=TP-2                                                           M0026200
      STMTYP=2                                                          M0026300
      GOTO 4185                                                         M0026400
 4180 STMTYP=3                                                          M0026500
      IF(NAMTBL(STACK(1,TP+2)).EQ.CANON(1))STMTYP=1                     M0026600
 4185 MODC=MOD(NAMTBL(STACK(1,TP)),MODHLF)                              M0026700
      CANMAX=TXXXX(1,MODC)                                              M0026800
      CANERR=CANMAX+1                                                   M0026900
      CANCH =CANCHK+1                                                   M0027000
      III=2032                                                          M0027100
      KKK=2033                                                          M0027200
      IF(STMTYP.NE.3)GOTO 4190                                          M0027300
      III=1035                                                          M0027400
      KKK=2051                                                          M0027500
 4190 GOTO(4155,4205),INDEX                                             M0027600
C                                                                       M0027700
C...  REMOVE VARIABLE NAME FROM CANON DEFINITION                        M0027800
C                                                                       M0027900
 4300 CANNAM = STACK(1,TOP-3)                                           M0028000
      J = STACK(1,TOP-5)                                                M0028100
      JJ=MODE(CANNAM)                                                   M0028200
      MODC=MOD(NAMTBL(J),MODULO)                                        M0028300
      IF (JJ.EQ.MODC)GOTO 4301                                          M0028400
      CALL ALARM(1024,TOP-3,8,'RECOGN  ')                               M0028500
      GOTO 4403                                                         M0028600
 4301 CANFLG = .TRUE.                                                   M0028700
      CANMAX=TXXXX(1,MODC)                                              M0028800
      STACK(1,TOP-3) = STACK(1,TOP-1)                                   M0028900
      STACK(2,TOP-3) = STACK(2,TOP-1)                                   M0029000
      STACK(1,TOP-2) = STACK(1,TOP)                                     M0029100
      STACK(2,TOP-2) = STACK(2,TOP)                                     M0029200
      TOP = TOP-2                                                       M0029300
      GOTO 220                                                          M0029400
C                                                                       M0029500
C...  END OF CANON DEFINITION STATEMENT                                 M0029600
C                                                                       M0029700
 4400 CANEND=1                                                          M0029800
 4401 IF(ERRFLG)GOTO 4403                                               M0029900
      IF(ARGTOP.GT.0)GOTO 4415                                          M0030000
      IF(STMTYP.EQ.2.OR.CANDAT.EQ.CANMAX)GOTO 4411                      M0030100
      IF(CANDAT.EQ.0)GOTO 4416                                          M0030200
 4402 CALL ALARM(2032,0,8,'RECOGN  ')                                   M0030300
      GOTO 4403                                                         M0030400
 4415 CALL ALARM(2013,-ARGTOP,8,'RECOGN  ')                             M0030500
      GOTO 4403                                                         M0030600
 4416 CALL ALARM(2032,0,4,'RECOGN  ')                                   M0030700
 4411 J = STACK(1,TOP-5)                                                M0030800
      JJ = MODULO*(NAMTBL(J)/MODULO)                                    M0030900
      K = STACK(1,TOP-3)                                                M0031000
      KK = NAMTBL(K)-GEOM(1)                                            M0031100
      IF(KK.GE.MODHLF)KK=KK-MODHLF                                      M0031200
 4420 IF(JJ.NE.VBL(1). AND .JJ.NE.TEMP(1))GO TO 4425                    M0031300
      IF(MODE(J).EQ.KK)GO TO 4404                                       M0031400
      CALL ALARM(1001,TOP-5,8,'RECOGN  ')                               M0031500
 4403 CANFLG = .FALSE.                                                  M0031600
      GOTO 600                                                          M0031700
C                                                                       M0031800
 4425 CALL RESRVZ(J,KK,CANMAX,1)                                        M0031900
      CALL SETMOD(TOP-5,VBL(1))                                         M0032000
      NAMTBL(J) = NAMTBL(J)+KK                                          M0032100
C                                                                       M0032200
C...  CHECK FOR REFSYS                                                  M0032300
C                                                                       M0032400
 4404 IF(JJ.EQ.VBL(1).AND.INTMED.EQ.0)CALL ALARM(50,TOP-5,4,'RECOGN  ') M0032500
      IREF=0                                                            M0032600
      REFSAV=0                                                          M0032700
      IF(.NOT.REFFLG)GO TO 4445                                         M0032800
      IF(KK.LT.1.OR.KK.GT.20)GO TO 4445                                 M0032900
      GO TO(4431,4431,4432,4432,4433,4434,4434,4434,4435,4434,4445,     M0033000
     /      4445,4445,4434,4445,4445,4445,4445,4433,4436),KK            M0033100
 4431 IR=FOUR                                                           M0033200
      IREF=4                                                            M0033300
      GO TO 4440                                                        M0033400
 4432 IR=FIVE                                                           M0033500
      IREF=2                                                            M0033600
      GO TO 4440                                                        M0033700
 4433 IR=TWO                                                            M0033800
      IREF=1                                                            M0033900
      GO TO 4440                                                        M0034000
 4434 IR=ONE                                                            M0034100
      IREF=5                                                            M0034200
      GO TO 4440                                                        M0034300
 4435 IR=FIVE                                                           M0034400
      IREF=2                                                            M0034500
      GO TO 4440                                                        M0034600
 4436 IR=THREE                                                          M0034700
      IREF=3                                                            M0034800
 4440 IF(.NOT.CANFLG)GO TO 4445                                         M0034900
C                                                                       M0035000
C...  GENERATE CALL TO TRANSF TO MOVE REFERENCED C.F. TO LOCAL SYSTEM   M0035100
C                                                                       M0035200
      REFSAV=CANNAM                                                     M0035300
      CANNAM=GETTMP(KK)                                                 M0035400
      CALL CALLZZ(APTXXX(103))                                          M0035500
      CALL ARGCVT(CANNAM)                                               M0035600
      CALL ARGCVT(REFSAV)                                               M0035700
      CALL ARGCVT(IR)                                                   M0035800
      CALL TWOARG(QUIDLR,CANMAX)                                        M0035900
      CALL ARGCVT(ZERO)                                                 M0036000
      CALL RLSLIN                                                       M0036100
 4445 CALL OPCODE(MOVE)                                                 M0036200
      CALL ARGCVT(J)                                                    M0036300
      IF(CANPTR.EQ.0)GO TO 4414                                         M0036400
      DO 4405 II=1,CANPTR                                               M0036500
      IF(CANSTK(II))4406,4406,4407                                      M0036600
 4406 IF (CANFLG) GOTO 4408                                             M0036700
      III=2033                                                          M0036800
      GOTO 4403                                                         M0036900
 4408 CALL TWOARG(CANSTK(II),CANNAM)                                    M0037000
      GOTO 4405                                                         M0037100
 4407 CALL ARGCVT(CANSTK(II))                                           M0037200
      IF(IFTMP(CANSTK(II)))CALL PUTTMP(MODE(CANSTK(II)))                M0037300
 4405 CONTINUE                                                          M0037400
      IF(.NOT.CANFLG)GO TO 4410                                         M0037500
      IF(CANPTR.EQ.CANMAX)GO TO 4480                                    M0037600
 4414 JJ=CANPTR+1                                                       M0037700
      DO 4409 II=JJ,CANMAX                                              M0037800
 4409 CALL TWOARG(-II,CANNAM)                                           M0037900
 4480 IF(IFTMP(CANNAM))CALL PUTTMP(MODE(CANNAM))                        M0038000
      IF(REFSAV.EQ.0)GO TO 4410                                         M0038100
      IF(IFTMP(REFSAV))CALL PUTTMP(MODE(REFSAV))                        M0038200
 4410 CALL RLSLIN                                                       M0038300
C                                                                       M0038400
C...  IF REFSYS APPLIES,GENERATE I.L. TO MOVE RESULT TO BASE SYSTEM     M0038500
C                                                                       M0038600
      IF(IREF.NE.0)CALL REFGEN(IREF,J)                                  M0038700
      GO TO(600,4412,4413),CANEND                                       M0038800
 4412 STACK(1,TOP-6) = STACK(1,TOP-5)                                   M0038900
      STACK(2,TOP-6) = STACK(2,TOP-5)                                   M0039000
      TOP = TOP-6                                                       M0039100
      GOTO 2900                                                         M0039200
 4413 STACK(1,TOP-4) = CANTMP                                           M0039300
      L = TEMP(1)/MODULO                                                M0039400
      STACK(2,TOP-4) = META(L)                                          M0039500
      TOP = TOP-4                                                       M0039600
      GOTO 2900                                                         M0039700
C                                                                       M0039800
C...  END OF NESTED NAMED CANON DEFINITION                              M0039900
C                                                                       M0040000
 4500 CANEND=2                                                          M0040100
      GOTO 4401                                                         M0040200
C                                                                       M0040300
C...  END OF NESTED UNNAMED CANON DEFINITION                            M0040400
C                                                                       M0040500
C                                                                       M0040600
 4600 K = STACK(1,TOP-3)                                                M0040700
      KK=NAMTBL(K)-GEOM(1)                                              M0040800
      IF(KK.GE.MODHLF)KK=KK-MODHLF                                      M0040900
      J = GETTMP(KK)                                                    M0041000
      JJ = TEMP(1)                                                      M0041100
      CANTMP = J                                                        M0041200
      CANEND = 3                                                        M0041300
      GOTO 4420                                                         M0041400
C                                                                       M0041500
C **********   O B T A I N   P R O C E S S I N G   **********           M0041600
C                                                                       M0041700
 4700 J = STACK(1,TOP-1)                                                M0041800
      IF(ARGTOP.GT.0)GO TO 7015                                         M0041900
      IF(CANDAT.GT.0)GO TO 7010                                         M0042000
      CALL ALARM(18,0,8,'RECOGN  ')                                     M0042100
      GO TO 7080                                                        M0042200
 7010 IF(MODE(J).EQ.MODC) GO TO 7020                                    M0042300
C                                                                       M0042400
C... VARIABLE ASSIGNED WRONG MODE.                                      M0042500
C                                                                       M0042600
      CALL ALARM(1050,TOP-1,8,'RECOGN  ')                               M0042700
      GO TO 7080                                                        M0042800
 7015 CALL ALARM(2013,-ARGTOP,8,'RECOGN  ')                             M0042900
      GO TO 7080                                                        M0043000
 7020 IF(ERRFLG)GOTO 7080                                               M0043100
      IF (MOD(NAMTBL(J),MODULO) .LE. MODHLF)  GO TO 7030                M0043200
      J = GETTMP(MODE(J))                                               M0043300
      CALL OPCODE(REPL)                                                 M0043400
      CALL ONEARG(TXXXX(1,MODC))                                        M0043500
      CALL TWOARG(0,J)                                                  M0043600
      CALL TWOARG(TRPDLR,STACK(1,TOP-1))                                M0043700
      CALL RLSLIN                                                       M0043800
C                                                                       M0043900
C...  IF REFSYS APPLIES,MOVE C.F. TO LOCAL SYSTEM                       M0044000
C                                                                       M0044100
 7030 REFSAV=0                                                          M0044200
      IF(.NOT.REFFLG)GO TO 7032                                         M0044300
      JJ=MODE(J)                                                        M0044400
      IF(JJ.LT.1.OR.JJ.GT.20)GO TO 7032                                 M0044500
      GO TO(7061,7061,7062,7062,7063,7064,7064,7064,7062,7064,7032,     M0044600
     /      7032,7032,7064,7032,7032,7032,7032,7063,7066),JJ            M0044700
 7061 IR=FOUR                                                           M0044800
      GO TO 7070                                                        M0044900
 7062 IR=FIVE                                                           M0045000
      GO TO 7070                                                        M0045100
 7063 IR=TWO                                                            M0045200
      GO TO 7070                                                        M0045300
 7064 IR=ONE                                                            M0045400
      GO TO 7070                                                        M0045500
 7066 IR=THREE                                                          M0045600
 7070 REFSAV=J                                                          M0045700
      J=GETTMP(JJ)                                                      M0045800
      CALL CALLZZ(APTXXX(103))                                          M0045900
      CALL ARGCVT(J)                                                    M0046000
      CALL ARGCVT(REFSAV)                                               M0046100
      CALL ARGCVT(IR)                                                   M0046200
      CALL TWOARG(QUIDLR,TXXXX(1,JJ))                                   M0046300
      CALL ARGCVT(ZERO)                                                 M0046400
      CALL RLSLIN                                                       M0046500
C                                                                       M0046600
 7032 DO 7050 N=1,CANPTR                                                M0046700
      K=CANSTK(N)                                                       M0046800
      IF(K.LT.0)GO TO 7050                                              M0046900
      L=(NAMTBL(K)/MODULO)*MODULO                                       M0047000
      IF((L.NE.IDENT(1)).AND.(L.NE.CONGEO(1)).AND.                      M0047100
     /   (L.NE.CONBIG(1)).AND.(L.NE.CONPRO(1)))GO TO 7035               M0047200
      CALL RESRVZ(K,REAL,TXXXX(1,REAL),1)                               M0047300
      NAMTBL(K)=VBL(1)+REAL                                             M0047400
      GO TO 7040                                                        M0047500
 7035 IF((L.EQ.VBL(1)).AND.(MODE(K).EQ.REAL))GO TO 7040                 M0047600
      IF((MOD(NAMTBL(K),MODULO).GT.MODHLF)                              M0047700
     / .AND.(MODE(K).EQ.REAL))GO TO 7045                                M0047800
 7040 CALL OPCODE(MOVE)                                                 M0047900
      CALL TWOARG(0,K)                                                  M0048000
 7043 CALL TWOARG(-N,J)                                                 M0048100
      CALL RLSLIN                                                       M0048200
      GO TO 7050                                                        M0048300
 7045 CALL OPCODE(MOVE)                                                 M0048400
      CALL TWOARG(TRPDLR,K)                                             M0048500
      GO TO 7043                                                        M0048600
 7050 CONTINUE                                                          M0048700
      IF(REFSAV.EQ.0)GO TO 7080                                         M0048800
      IF(IFTMP(REFSAV))CALL PUTTMP(MODE(REFSAV))                        M0048900
 7080 IF(IFTMP(J))CALL PUTTMP(MODE(J))                                  M0049000
      GO TO 600                                                         M0049100
C                                                                       M0049200
C                                                                       M0049300
C... SUBSCRIPTED ARGUMENT IN OBTAIN STATEMENT                           M0049400
C                                                                       M0049500
 4800 I=STACK(1,TOP-4)                                                  M0049600
      IF(MODE(I).NE.0)GO TO 1000                                        M0049700
      NAMTBL(I)=NAMTBL(I)+REAL                                          M0049800
      III=1                                                             M0049900
 7110 IF(III.GE.RNGPT)GO TO 1000                                        M0050000
      IF(RANGE(III).EQ.I)GO TO 7120                                     M0050100
      III=III+2                                                         M0050200
      GO TO 7110                                                        M0050300
 7120 CALL RESRVZ(I,REAL,TXXXX(1,REAL),RANGE(III+1))                    M0050400
      GO TO 1000                                                        M0050500
C                                                                       M0050600
C... RETURN TO RECOG                                                    M0050700
C                                                                       M0050800
  220 IASNRT=2                                                          M0050900
      GO TO 9000                                                        M0051000
  600 IASNRT=3                                                          M0051100
      GO TO 8900                                                        M0051200
 1000 IASNRT=4                                                          M0051300
      GO TO 9000                                                        M0051400
 2900 IASNRT=5                                                          M0051500
      CANFLG = .FALSE.                                                  M0051600
 8900 CANPTR=0                                                          M0051700
      STMTYP=0                                                          M0051800
      CANDAT=0                                                          M0051900
 9000 RETURN                                                            M0052000
C                                                                       M0052100
C...  SPECIAL POINT DEFINITION                                          M0052200
C                                                                       M0052300
 4900 K=STACK(1,TOP-1)                                                  M0052400
      ARGTOP=ARGTOP+1                                                   M0052500
      ARGSTK(ARGTOP)=K                                                  M0052600
      IF(IFTMP(K))CALL PUTTMP(MODE(K))                                  M0052700
      STACK(1,TOP-1)=STACK(1,TOP-3)                                     M0052800
      STACK(2,TOP-1)=STACK(2,TOP-3)                                     M0052900
      K=NAME(PPOINT)                                                    M0053000
      CALL MACLBL(K,0,K)                                                M0053100
      NAMTBL(K)=GEOM(1)+POINT                                           M0053200
      STACK(1,TOP-3)=K                                                  M0053300
      K=GEOM(1)/MODULO                                                  M0053400
      STACK(2,TOP-3)=META(K)                                            M0053500
      STACK(1,TOP-2)=SLASH(2)                                           M0053600
      K=SLASH(1)/MODULO                                                 M0053700
      STACK(2,TOP-2)=META(K)                                            M0053800
      GO TO 220                                                         M0053900
C                                                                       M0054000
      END                                                               M0054100
**** SOURCE FILE : M0006674.V01   ***
*
C                                                                       RFG00100
C              FORTRAN SUBROUTINE REFGEN                                RFG00200
C                                                                       RFG00300
C LINKAGE      SUBROUTINE REFGEN (IREF,NAMPTR)                          RFG00400
C                                                                       RFG00500
C          SUBSIDIARIES                  CALLED BY                      RFG00600
C          TYPE          ENTRY           TYPE          ENTRY            RFG00700
C          SUBROUTINE    ARGCVT          SUBROUTINE    PRO021           RFG00800
C          SUBROUTINE    CALLZZ          SUBROUTINE    PRO026           RFG00900
C          SUBROUTINE    RLSLIN          SUBROUTINE    PRO027           RFG01000
C                                        SUBROUTINE    RECOGN           RFG01100
C                                                                       RFG01200
      SUBROUTINE REFGEN (IREF,NAMPTR)                                   RFG01300
C                                                                       RFG01400
      IMPLICIT INTEGER (A-Z)                                            RFG01500
C                                                                       RFG01600
C       13.    NAMTBL POINTERS TO NEGATIVE NUMBERS                      RFG01700
C              NAMTBL POINTER TO -1.                                    RFG01800
      COMMON/NEGPTR/NONEPT                                              RFG01900
C                                                                       RFG02000
C       28.    OPERAND MODIFIERS                                        RFG02100
C                                                                       RFG02200
      COMMON/SUBLST/SUBLST                                              RFG02300
      DIMENSION SUBLST(136),APTYYY(5)                                   RFG02400
C APTYYY:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            RFG02500
      EQUIVALENCE (APTYYY(1),SUBLST(121))                               RFG02600
C DEFEXT:      NAMTBL POINTER FOR XECUTION SUBROUTINE DEFEXT            RFG02700
      EQUIVALENCE (DEFEXT,SUBLST(82))                                   RFG02800
C*                                                                      RFG02900
C ARGUMENTS    IREF       APTYYY INDEX CONTAINING NAME TABLE            RFG03000
C                         (NAMTBL) INDEX OF TRANSFORMATION ROUTINE.     RFG03100
C              NAMPTR    NAME TABLE (NAMTBL) INDEX OF VARIABLE          RFG03200
C                        TO BE TRANSFORMED.                             RFG03300
C NOTES        FOLLOWING IS A LIST OF EACH IREF VALUE WITH              RFG03400
C              ITS ASSOCIATED SURFACE AND TRANSFORMATION ROUTINE NAME.  RFG03500
C              IREF       VARIABLE MODE         TRANSFORMATION          RFG03600
C              1             POINT, SPHERE         APT081               RFG03700
C              2             CIRCLE                APT083               RFG03800
C              3             VECTOR                ATP078               RFG03900
C              4             LINE, PLANE           APT077               RFG04000
C              5             QUADRIC SURFACE       APT079               RFG04100
C**                                                                     RFG04200
  380 CALL CALLZZ(APTYYY(IREF))                                         RFG04300
      CALL ARGCVT(NAMPTR)                                               RFG04400
      CALL ARGCVT(NONEPT)                                               RFG04500
      CALL RLSLIN                                                       RFG04600
      CALL CALLZZ(DEFEXT)                                               RFG04700
      CALL ARGCVT(NAMPTR)                                               RFG04800
      CALL RLSLIN                                                       RFG04900
      RETURN                                                            RFG05000
       END                                                              RFG05100
**** SOURCE FILE : M0006675.V03   ***
*
C                                                                       RFR00100
C              FORTRAN SUBROUTINE REFREF                                RFR00200
C                                                                       RFR00300
C LINKAGE      SUBROUTINE REFREF                                        RFR00400
C                                                                       RFR00500
C          SUBSIDIARIES                  CALLED BY                      RFR00600
C          TYPE          ENTRY           TYPE          ENTRY            RFR00700
C          SUBROUTINE    CALLZZ          SUBROUTINE    PRO026           RFR00800
C          SUBROUTINE    ARGCVT                                         RFR00900
C          SUBROUTINE    ALARM                                          RFR01000
C          SUBROUTINE    RLSLIN                                         RFR01100
C                                                                       RFR01200
      SUBROUTINE REFREF                                                 RFR01300
C                                                                       RFR01400
      IMPLICIT INTEGER (A-Z)                                            RFR01500
C                                                                       RFR01600
C                                                                       RFR01700
C        1.    NAME TABLE AND TABLE LIMITS                              RFR01800
C                                                                       RFR01900
      INCLUDE 'NAMETB.INC'                                              RFR02010
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                RFR02050
C CNAMTB:      NAME TABLE OR DICTIONARY                                 RFR02150
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     RFR02200
C                                                                       RFR02600
C        2.    STACK AND POINTER STORAGE                                RFR02700
C                                                                       RFR02800
      COMMON/STKLST/STKLST                                              RFR02900
      DIMENSION STKLST(300),ARGSTK(99)                                  RFR03000
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             RFR03100
      EQUIVALENCE (ARGTOP,STKLST(2))                                    RFR03200
C ARGSTK:      ARGUMENT STACK                                           RFR03300
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               RFR03400
C                                                                       RFR03500
C        5.    PROGRAM CONTROL FLAGS                                    RFR03600
C                                                                       RFR03700
      COMMON/FLAGS/FLAGS                                                RFR03800
      LOGICAL REFFLG                                                    RFR03900
      DIMENSION FLAGS(4)                                                RFR04000
C REFFLG:      TRUE WHEN A REFSYS COMMAND ENCOUNTERED                   RFR04100
      EQUIVALENCE (REFFLG,FLAGS(4))                                     RFR04200
C                                                                       RFR04300
C       17.    MODE CODES                                               RFR04400
C                                                                       RFR04500
      COMMON/MODX/MODX                                                  RFR04600
      DIMENSION MODX(32)                                                RFR04700
C MATRIX:      MODE CODE (18) FOR MATRIX                                RFR04800
      EQUIVALENCE (MATRIX,MODX(18))                                     RFR04900
C                                                                       RFR05000
C       28.    OPERAND MODIFIERS                                        RFR05100
C                                                                       RFR05200
      COMMON/SUBLST/SUBLST                                              RFR05300
      DIMENSION SUBLST(136)                                             RFR05400
C APT085:      NAMTBL POINTER FOR APT085                                RFR05500
      EQUIVALENCE (APT085,SUBLST(126))                                  RFR05600
C REFSYS:      NAMTBL POINTER FOR XECUTION SUBROUTINE REFSYS            RFR05700
      EQUIVALENCE (REFSYS,SUBLST(134))                                  RFR05800
C**                                                                     RFR05900
      CHARACTER*6 CNMORE                                                RFR06010
      DATA CNMORE/'NOMORE'/                                             RFR06020
      EP=-1                                                             RFR06100
      IF(ARGTOP-1)20,40,30                                              RFR06200
   20 EP=TOP                                                            RFR06300
      GOTO 35                                                           RFR06400
   30 EP=1-ARGTOP                                                       RFR06500
   35 CALL ALARM(2052,EP,8,'REFREF  ')                                  RFR06600
   40 IF (REFFLG) GO TO 1000                                            RFR06700
C     REFSYS NOT IN EFFECT                                              RFR06800
C     ARE PARAMETERS CORRECT                                            RFR06900
      IF(MODE(ARGSTK(ARGTOP)).NE.MATRIX)                                RFR07000
     *CALL ALARM(1010,-ARGTOP,8,'REFREF  ')                             RFR07100
      REFFLG = .TRUE.                                                   RFR07200
    5 CALL CALLZZ(REFSYS)                                               RFR07300
      CALL ARGCVT (ARGSTK(ARGTOP))                                      RFR07400
   10 CALL RLSLIN                                                       RFR07500
   50 RETURN                                                            RFR07600
C     REFSYS IN EFFECT                                                  RFR07700
 1000 I=ARGSTK(ARGTOP)                                                  RFR07800
      IF (MODE(ARGSTK(ARGTOP)).EQ.MATRIX) GO TO 5                       RFR07900
      IF (CNAMTB(I).NE.CNMORE) CALL ALARM(1011,                         RFR08000
     *-ARGTOP,8,'REFREF  ')                                             RFR08100
      REFFLG=.FALSE.                                                    RFR08200
      CALL CALLZZ(APT085)                                               RFR08300
      GO TO 10                                                          RFR08400
       END                                                              RFR08500
**** SOURCE FILE : M0006676.V03   ***
*
C                                                                       RPL00100
C              FORTRAN SUBROUTINE REPLAC                                RPL00200
C                                                                       RPL00300
C LINKAGE      SUBROUTINE  REPLAC                                       RPL00400
C                                                                       RPL00500
C          SUBSIDIARIES                  CALLED BY                      RPL00600
C          TYPE          ENTRY           TYPE          ENTRY            RPL00700
C          SUBROUTINE    ARGCVT          SUBROUTINE    RECOG            RPL00800
C          SUBROUTINE    MATCH           SUBROUTINE    LOOP             RPL00900
C          SUBROUTINE    ONEARG                                         RPL01000
C          SUBROUTINE    OPCODE                                         RPL01100
C          SUBROUTINE    PATH                                           RPL01200
C          SUBROUTINE    PUTTMP                                         RPL01300
C          SUBROUTINE    ALARM                                          RPL01400
C          SUBROUTINE    RESRVZ                                         RPL01500
C          SUBROUTINE    RLSLIN                                         RPL01600
C          SUBROUTINE    SETMOD                                         RPL01700
C          LOGICAL FCT.  IFTMP                                          RPL01800
C                                                                       RPL01900
      SUBROUTINE  REPLAC                                                RPL02000
C                                                                       RPL02100
      IMPLICIT INTEGER (A-Z)                                            RPL02200
C                                                                       RPL02300
C              FUNCTION DECLARATION                                     RPL02400
C                                                                       RPL02500
      LOGICAL IFTMP                                                     RPL02600
C                                                                       RPL02700
C        1.    NAME TABLE AND TABLE LIMITS                              RPL02800
C                                                                       RPL02900
      INCLUDE 'NAMETB.INC'                                              RPL03010
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                RPL03050
C CNAMTB:      NAME TABLE OR DICTIONARY                                 RPL03150
C                                                                       RPL03400
C        2.    STACK AND POINTER STORAGE                                RPL03500
C                                                                       RPL03600
      COMMON/STKLST/STKLST                                              RPL03700
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      RPL03800
C TOP:         POINTER TO LAST STACK ENTRY                              RPL03900
      EQUIVALENCE (TOP,STKLST(1))                                       RPL04000
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             RPL04100
      EQUIVALENCE (ARGTOP,STKLST(2))                                    RPL04200
C STACK:       WORKING STACK                                            RPL04300
      EQUIVALENCE (STACK(1,1),STKLST(4))                                RPL04400
C ARGSTK:      ARGUMENT STACK                                           RPL04500
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               RPL04600
C                                                                       RPL04700
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      RPL04800
C                                                                       RPL04900
      COMMON/CODE/CODE                                                  RPL05000
      DIMENSION CODE(150),VBL(2),IDENT(2),CONGEO(2),CONPRO(2),RELAT(2)  RPL05100
C RELAT:       (1)=CODE CLASS 27000,(2)=NAMTBL INDEX OF 'RELAT '        RPL05200
      EQUIVALENCE (RELAT(1),CODE(53))                                   RPL05300
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        RPL05400
      EQUIVALENCE (VBL(1),CODE(61))                                     RPL05500
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        RPL05600
      EQUIVALENCE (IDENT(1),CODE(69))                                   RPL05700
C CONGEO:      (1)=CODE CLASS 39000,(2)=NAMTBL INDEX OF 'CONGEO'        RPL05800
      EQUIVALENCE (CONGEO(1),CODE(77))                                  RPL05900
C CONPRO:      (1)=CODE CLASS 40000,(2)=NAMTBL INDEX OF 'CONPRO'        RPL06000
      EQUIVALENCE (CONPRO(1),CODE(79))                                  RPL06100
C                                                                       RPL06200
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         RPL06300
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    RPL06400
      COMMON/TMP/TXXXX                                                  RPL06500
      DIMENSION TXXXX(2,32)                                             RPL06600
C                                                                       RPL06700
C       16.    LITERALS FOR I. L. OPERATION CODES                       RPL06800
C                                                                       RPL06900
      COMMON/IL/IL                                                      RPL07000
      DIMENSION IL(21)                                                  RPL07100
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              RPL07200
      EQUIVALENCE (REPL,IL(17))                                         RPL07300
C                                                                       RPL07400
C       22.    MACRO PROCESSING VARIABLES                               RPL07500
C                                                                       RPL07600
      COMMON/MACXX1/MACXX1                                              RPL07700
      LOGICAL FINMAC,ENTRY,SHOULD                                       RPL07800
      DIMENSION MACXX1(71)                                              RPL07900
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        RPL08000
      EQUIVALENCE (INTMED,MACXX1(22))                                   RPL08100
C MAJWRD:      CONTAINS ACTUAL MAJOR WORD                               RPL08200
      EQUIVALENCE (MAJWRD,MACXX1(23))                                   RPL08300
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING            RPL08400
      EQUIVALENCE (FINMAC,MACXX1(24))                                   RPL08500
C WAY:         INDICATES TYPE OF MACRO PROCESSING                       RPL08600
      EQUIVALENCE (WAY,MACXX1(26))                                      RPL08700
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION     RPL08800
      EQUIVALENCE (ENTRY,MACXX1(40))                                    RPL08900
C SHOULD:      MACRO INDICATOR. NORMALLY FALSE                          RPL09000
      EQUIVALENCE (SHOULD,MACXX1(70))                                   RPL09100
C                                                                       RPL09200
C       29.    CLASS CODE MODULI                                        RPL09300
C                                                                       RPL09400
      COMMON/MODULI/MODULI                                              RPL09500
      DIMENSION MODULI(2)                                               RPL09600
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    RPL09700
      EQUIVALENCE (MODULO,MODULI(1))                                    RPL09800
C                                                                       RPL09900
C       44.    ERROR POSITION TABLE                                     RPL10000
C                                                                       RPL10100
      COMMON/ERRPOS/ERRPOS                                              RPL10200
      INTEGER ERRPOS,ESTACK,ERGSTK                                      RPL10300
      DIMENSION ERRPOS(302),ESTACK(100),ERGSTK(100)                     RPL10400
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    RPL10500
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               RPL10600
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   RPL10700
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               RPL10800
C**                                                                     RPL10900
      K = STACK(1,TOP-1)                                                RPL11000
      MAJWRD=STACK(1,TOP-3)                                             RPL11100
      ERGSTK(100)=TOP-3                                                 RPL11200
      IF(INTMED.NE.1)GO TO 30                                           RPL11300
      WAY=4                                                             RPL11400
      IF(FINMAC)GO TO 20                                                RPL11500
      ARGTOP=1                                                          RPL11600
      ARGSTK(1)=K                                                       RPL11700
   10 CALL MATCH                                                        RPL11800
      K=ARGSTK(1)                                                       RPL11900
      IF(.NOT.ENTRY)GO TO 210                                           RPL12000
      GO TO 30                                                          RPL12100
   20 CALL PATH                                                         RPL12200
      IF (.NOT.SHOULD) GOTO 210                                         RPL12300
   30 MODXX=MODE(K)                                                     RPL12400
C          CHANGE CLASS IF IDENTIFIER                                   RPL12500
      J = MODULO*(NAMTBL(MAJWRD)/MODULO)                                RPL12600
       IF((J.NE.IDENT(1)).AND.(J.NE.CONPRO(1)).AND.(J.NE.CONGEO(1)).AND.RPL12700
     /(J.NE.RELAT(1)))GOTO 100                                          RPL12800
  150 CALL RESRVZ(MAJWRD,MODXX,TXXXX(1,MODXX),1)                        RPL12900
      CALL SETMOD(TOP-3,VBL(1))                                         RPL13000
      NAMTBL(MAJWRD) = NAMTBL(MAJWRD)+MODXX                             RPL13100
      GO  TO  200                                                       RPL13200
  100 IF(MODE(MAJWRD).EQ.MODXX)GO TO 200                                RPL13300
      CALL ALARM(1012,TOP-1,8,'REPLAC  ')                               RPL13400
C                                                                       RPL13500
  200 CALL OPCODE(REPL)                                                 RPL13600
      CALL ONEARG(TXXXX(1,MODXX))                                       RPL13700
      CALL ARGCVT(MAJWRD)                                               RPL13800
      CALLARGCVT(K)                                                     RPL13900
      CALL RLSLIN                                                       RPL14000
      IF(ENTRY)GO TO 10                                                 RPL14100
  210 ARGTOP=0                                                          RPL14200
      IF(IFTMP(K))CALL PUTTMP(MODE(K))                                  RPL14300
  300 RETURN                                                            RPL14400
       END                                                              RPL14500
**** SOURCE FILE : M0006677.W02   ***
*
C                                                                       RSR00100
C              FORTRAN SUBROUTINE RESERV                                RSR00200
C                                                                       RSR00300
C LINKAGE      SUBROUTINE RESERV                                        RSR00400
C                                                                       RSR00500
C          SUBSIDIARIES                  CALLED BY                      RSR00600
C          TYPE          ENTRY           TYPE          ENTRY            RSR00700
C          SUBROUTINE    MCXTRN          SUBROUTINE    PRO026           RSR00800
C          SUBROUTINE    BCDBIN                                         RSR00900
C          SUBROUTINE    ALARM                                          RSR01000
C                                                                       RSR01100
      SUBROUTINE RESERV                                                 RSR01200
C                                                                       RSR01300
      IMPLICIT INTEGER (A-Z)                                            RSR01400
C                                                                       RSR01500
C        1.    NAME TABLE AND TABLE LIMITS                              RSR01600
C                                                                       RSR01700
      INCLUDE 'NAMETB.INC'                                              RSR01810
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                RSR01850
C CNAMTB:      NAME TABLE OR DICTIONARY                                 RSR01950
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     RSR02000
C                                                                       RSR02400
C        2.    STACK AND POINTER STORAGE                                RSR02500
C                                                                       RSR02600
      COMMON/STKLST/STKLST                                              RSR02700
      DIMENSION STKLST(300),ARGSTK(99)                                  RSR02800
C TOP:         POINTER TO LAST STACK ENTRY                              RSR02900
      EQUIVALENCE (TOP,STKLST(1))                                       RSR03000
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             RSR03100
      EQUIVALENCE (ARGTOP,STKLST(2))                                    RSR03200
C ARGSTK:      ARGUMENT STACK                                           RSR03300
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               RSR03400
C                                                                       RSR03500
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      RSR03600
C                                                                       RSR03700
      COMMON/CODE/CODE                                                  RSR03800
      DIMENSION CODE(150),PERMID(2),VBL(2)                              RSR03900
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        RSR04000
      EQUIVALENCE (PERMID(1),CODE(39))                                  RSR04100
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        RSR04200
      EQUIVALENCE (VBL(1),CODE(61))                                     RSR04300
C                                                                       RSR04400
C       15.    ARRAY LIMIT STORAGE                                      RSR04500
C                                                                       RSR04600
      COMMON/SBSCPT/SBSCPT                                              RSR04700
      DIMENSION SBSCPT(401),RANGE(400)                                  RSR04800
C RNGPT:       POINTER TO NEXT RANGE ENTRY                              RSR04900
      EQUIVALENCE (RNGPT,SBSCPT(1))                                     RSR05000
C RANGE:       STORAGE FOR APT RESERVE STATEMENT INFORMATION            RSR05100
      EQUIVALENCE (RANGE(1),SBSCPT(2))                                  RSR05200
C                                                                       RSR05300
C       29.    CLASS CODE MODULI                                        RSR05400
C                                                                       RSR05500
      COMMON/MODULI/MODULI                                              RSR05600
      DIMENSION MODULI(2)                                               RSR05700
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    RSR05800
      EQUIVALENCE (MODULO,MODULI(1))                                    RSR05900
C                                                                       RSR06000
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          RSR06100
C                                                                       RSR06200
      COMMON/NTBL/NTBL                                                  RSR06300
      DIMENSION NTBL(6)                                                 RSR06400
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE RSR06500
      EQUIVALENCE (NLAST,NTBL(4))                                       RSR06600
C*                                                                      RSR06700
C PURPOSE      TO RECORD DATA FROM RESERV SOURCE STATEMENT.             RSR06800
C                                                                       RSR06900
C                                                                       RSR07000
C NOTES        RANGE TABLE IS DIMENSIONED 100 AND HAS ROOM              RSR07100
C              FOR 25 ENTRIES (4 WORDS PER ENTRY).                      RSR07200
C                                                                       RSR07300
C...       CHECK FOR END OF TABLE                                       RSR07400
C**                                                                     RSR07500
      IF(MOD(ARGTOP,2).NE.0)GOTO 98                                     RSR07600
      II=ARGSTK(ARGTOP)                                                 RSR07700
   10 IF(RNGPT.GE.401)GO TO 90                                          RSR07800
C                                                                       RSR07900
C...       SET UP RANGE TABLE                                           RSR08000
C                                                                       RSR08100
      IF(ARGTOP-1)96,92,40                                              RSR08200
   40 II=ARGSTK(ARGTOP)                                                 RSR08300
      III=ARGSTK(ARGTOP-1)                                              RSR08400
      IF(II.GT.NAMMAX)GOTO 92                                           RSR08500
      IF(III.LE.NAMMAX)GOTO 91                                          RSR08600
      IF(NAMTBL(II)/MODULO.NE.PERMID(1)/MODULO)GO TO 94                 RSR08700
      NAMTBL(II)=VBL(1)                                                 RSR08800
      RANGE(RNGPT)=II                                                   RSR08900
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           RSR08910
      III=III-NAMMAX                                                    RSR08920
      IF(NLAST.GT.0)CALL MCXTRN(5,III,IDUMMY)                           RSR09000
      CALL BCDBIN(CNUMTB(III),RANGE(RNGPT+1),CNT)                       RSR09100
      IF(RANGE(RNGPT+1).EQ.1) RANGE(RNGPT+1)=2                          RSR09200
      RNGPT=RNGPT+2                                                     RSR09300
      ARGTOP=ARGTOP-2                                                   RSR09400
      IF(ARGTOP.GT.0)GO TO 10                                           RSR09500
C                                                                       RSR09600
   99 RETURN                                                            RSR09700
C                                                                       RSR09800
C...       TOO MANY SUBSCRIPTED VARIABLES IN PART PROGRAM               RSR09900
C...       RANGE TABLE FILLED                                           RSR10000
C                                                                       RSR10100
   90 CALL ALARM(2026,-ARGTOP,8,'RESERV  ')                             RSR10200
      GO TO 99                                                          RSR10300
C                                                                       RSR10400
C...       INCORRECT FORMAT FOR RESERV STATEMENT                        RSR10500
C...       MUST BE SYMBOL, NUMBER                                       RSR10600
C                                                                       RSR10700
   91 ARGTOP=ARGTOP-1                                                   RSR10800
   92 CALL ALARM(2027,-ARGTOP,8,'RESERV  ')                             RSR10900
      GO TO 99                                                          RSR11000
C                                                                       RSR11100
C...       DUPLICATE NAME OF DIMENSIONED VARIABLE                       RSR11200
C                                                                       RSR11300
   94 CALL ALARM(2044,-ARGTOP,8,'RESERV  ')                             RSR11400
      GO TO 99                                                          RSR11500
C                                                                       RSR11600
C...       NO ARGUMENTS OR ODD NUMBER OF ARGUMENTS                      RSR11700
C                                                                       RSR11800
   96 EP=1-TOP                                                          RSR11900
      GO TO 100                                                         RSR12000
   98 EP=1                                                              RSR12100
  100 CALL ALARM(2018,-EP,8,'RESERV  ')                                 RSR12200
      GO TO 99                                                          RSR12300
C                                                                       RSR12400
      END                                                               RSR12500
**** SOURCE FILE : M0006678.W01   ***
*
C                                                                       RRD00100
C              FORTRAN SUBROUTINE RESRED                                RRD00200
C                                                                       RRD00300
C LINKAGE      SUBROUTINE RESRED                                        RRD00400
C                                                                       RRD00500
C          SUBSIDIARIES                  CALLED BY                      RRD00600
C          TYPE          ENTRY           TYPE          ENTRY            RRD00700
C          SUBROUTINE    ICONV           SUBROUTINE    RECOG            RRD00800
C          SUBROUTINE    LIBOPC                                         RRD00900
C          SUBROUTINE    LIBRD                                          RRD01000
C          SUBROUTINE    LIBSCH                                         RRD01100
C          SUBROUTINE    BCDBIN                                         RRD01200
C          SUBROUTINE    MCXTRN                                         RRD01300
C          SUBROUTINE    ALARM                                          RRD01400
C          SUBROUTINE    CFORM                                          RRD01500
C          SUBROUTINE    RESRVZ                                         RRD01600
C                                                                       RRD01700
      SUBROUTINE RESRED                                                 RRD01800
C                                                                       RRD01900
      IMPLICIT INTEGER (A-Z)                                            RRD02000
C                                                                       RRD02100
C        1.    NAME TABLE AND TABLE LIMITS                              RRD02200
C                                                                       RRD02300
      INCLUDE 'NAMETB.INC'                                              RRD02410
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                RRD02450
C CNAMTB:      NAME TABLE OR DICTIONARY                                 RRD02550
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     RRD02600
C                                                                       RRD03000
C        2.    STACK AND POINTER STORAGE                                RRD03100
C                                                                       RRD03200
      COMMON/STKLST/STKLST                                              RRD03300
      DIMENSION STKLST(300),STACK(2,99)                                 RRD03400
C TOP:         POINTER TO LAST STACK ENTRY                              RRD03500
      EQUIVALENCE (TOP,STKLST(1))                                       RRD03600
C STACK:       WORKING STACK                                            RRD03700
      EQUIVALENCE (STACK(1,1),STKLST(4))                                RRD03800
C                                                                       RRD03900
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         RRD04000
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    RRD04100
      COMMON/TMP/TXXXX                                                  RRD04200
      DIMENSION TXXXX(2,32)                                             RRD04300
C                                                                       RRD04400
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    RRD04500
C                                                                       RRD04600
      COMMON/CFSIZE/CFSIZE                                              RRD04700
      DIMENSION CFSIZE(205),MAXSIZ(2),CANSIZ(2,100)                     RRD04800
C CANTOP:      POINTER TO THE LAST CANSIZ ENTRY                         RRD04900
      EQUIVALENCE (CANTOP,CFSIZE(1))                                    RRD05000
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                RRD05100
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 RRD05200
C CANSIZ:      NUMBER OF ITEMS A. NAMTBL INDEX OF EACH LARGE DATA ARRAY RRD05300
      EQUIVALENCE (CANSIZ(1,1),CFSIZE(6))                               RRD05400
C                                                                       RRD05500
C       15.    ARRAY LIMIT STORAGE                                      RRD05600
C                                                                       RRD05700
      COMMON/SBSCPT/SBSCPT                                              RRD05800
      DIMENSION SBSCPT(101),RANGE(100)                                  RRD05900
C RNGPT:       POINTER TO NEXT RANGE ENTRY                              RRD06000
      EQUIVALENCE (RNGPT,SBSCPT(1))                                     RRD06100
C RANGE:       STORAGE FOR APT RESERVE STATEMENT INFORMATION            RRD06200
      EQUIVALENCE (RANGE(1),SBSCPT(2))                                  RRD06300
C                                                                       RRD06400
C       36.    SYSTEM MACRO AND SEGMENT READ VARIABLES                  RRD06500
C                                                                       RRD06600
      COMMON/MACSEG/MACSEG                                              RRD06700
      LOGICAL ALOPN                                                     RRD06800
      DIMENSION MACSEG(6)                                               RRD06900
C ALOPN:       TRUE AFTER MACRO OR PART PROGRAM SEGMENT LIBRARY OPENED  RRD07000
      EQUIVALENCE (ALOPN,MACSEG(1))                                     RRD07100
C                                                                       RRD07200
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          RRD07300
C                                                                       RRD07400
      COMMON/NTBL/NTBL                                                  RRD07500
      DIMENSION NTBL(6)                                                 RRD07600
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE RRD07700
      EQUIVALENCE (NLAST,NTBL(4))                                       RRD07800
C**                                                                     RRD07900
      CHARACTER*6 NAM1,NAM2,BLA*1                                       RRD08000
      INTEGER INP(20)                                                   RRD08300
      DATA BLA/' '/                                                     RRD08350
C    CREATION OF AN INDICATED NAME                                      RRD08400
      I=STACK(1,TOP-2)                                                  RRD08500
      IF(I.GT.NAMMAX)GOTO 10                                            RRD08600
C   ILLEGAL SYMBOLIC NUMBER-STATEMENT AS IDNEX ON READ-COMMAND          RRD08700
      CALL ALARM(2054,TOP-2,8,'RESRED  ')                               RRD08800
      RETURN                                                            RRD08900
C   CONSTRUCT STORAGE NAME                                              RRD09000
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           RRD09110
   10 I=I-NAMMAX                                                        RRD09120
      IF(NLAST.GT.0)CALL MCXTRN(5,I,IDUMMY)                             RRD09130
      CALL BCDBIN (CNUMTB(I),M,N)                                       RRD09200
      CALL ICONV (M+10000000,NAM2,0,8)                                  RRD09300
      CALL CFORM (CNAMTB(STACK(1,TOP-4)),NAM1,0,8)                      RRD09400
      DO 20 J=1,8                                                       RRD09500
      IF(NAM1(J:J).EQ.BLA)GOTO 20                                       RRD09600
      NAM2(J:J)=NAM1(J:J)                                               RRD09700
   20 CONTINUE                                                          RRD09800
C   POSSIBLY OPEN THE PDS                                               RRD09900
      IF(ALOPN) GOTO 30                                                 RRD10000
      CALL LIBOPC(1,IFLAG)                                              RRD10100
      IF(IFLAG.EQ.0) GOTO 25                                            RRD10200
      IERROR=72                                                         RRD10300
   24 CALL ALARM(IERROR,0,8,'RESRED  ')                                 RRD10400
      GOTO 41                                                           RRD10500
   25 ALOPN=.TRUE.                                                      RRD10600
   30 CALL LIBSCH(NAM2,IFLAG)                                           RRD10700
      IF(IFLAG.EQ.0)GOTO 40                                             RRD10800
   32 IERROR=73                                                         RRD10900
      GOTO 24                                                           RRD11000
C   READ FIRST CARD                                                     RRD11100
   40 CALL LIBRD(NAM2,IFLAG,INP)                                        RRD11200
      IF(IFLAG.NE.0)GOTO 32                                             RRD11300
   41 CALL LIBOPC(2,IFLA)                                               RRD11400
      ALOPN=.FALSE.                                                     RRD11500
      IF(IFLAG.NE.0)RETURN                                              RRD11600
C  TRANSFER MODE AND RESERVE VARIABLE, IF NECESSARY                     RRD11700
      J=STACK(1,TOP-4)                                                  RRD11800
      IF(MODE(J).NE.0)GOTO 7000                                         RRD11900
      NAMTBL(J)=NAMTBL(J)+INP(5)                                        RRD12000
C  SEARCH VARIABLE IN RESERV STORAGE                                    RRD12100
      N1=RNGPT-2                                                        RRD12200
      DO 50 N=1,N1,2                                                    RRD12300
      IF(RANGE(N).EQ.J)GOTO 60                                          RRD12400
   50 CONTINUE                                                          RRD12500
C   THE ERROR IS REPORTED BY THE FOLLOWING CALL SUBCOD                  RRD12600
      RETURN                                                            RRD12700
C  RESERVE STORAGE                                                      RRD12800
   60 CALL RESRVZ(J,INP(5),TXXXX(1,INP(5)),RANGE(N+1))                  RRD12900
C THE LENGTH OF THE CANONICAL FORM IS STORED IN INP(8)                  RRD13000
C  CHANGE MAXSIZ IF NECESSARY                                           RRD13100
 7000 IF(INP(8).LE.(IABS(MAXSIZ(2))))GOTO 7040                          RRD13200
      IF(INP(8).LE.(IABS(MAXSIZ(1))))GOTO 7030                          RRD13300
      MAXSIZ(2)=MAXSIZ(1)                                               RRD13400
      MAXSIZ(1)=INP(8)                                                  RRD13500
      GOTO7040                                                          RRD13600
 7030 MAXSIZ(2)=INP(8)                                                  RRD13700
C INTERROGATE FOR FREE SPACE                                            RRD13800
 7040 JJ=MOD(J,CANTOP)                                                  RRD13900
      DO 7050 I=1,CANTOP                                                RRD14000
      JJ=MOD(JJ,CANTOP)+1                                               RRD14100
      IF(CANSIZ(2,JJ).EQ.J)GOTO 7060                                    RRD14200
      IF(CANSIZ(1,JJ).NE.0)GOTO 7050                                    RRD14300
      CANSIZ(1,JJ)=INP(8)                                               RRD14400
      CANSIZ(2,JJ)=J                                                    RRD14500
      RETURN                                                            RRD14600
 7050 CONTINUE                                                          RRD14700
      RETURN                                                            RRD14800
 7060 CANSIZ(1,JJ)=INP(8)+CANSIZ(1,JJ)                                  RRD14900
      RETURN                                                            RRD15000
      END                                                               RRD15100
**** SOURCE FILE : M0006679.W01   ***
*
C                                                                       RVZ00100
C              FORTRAN SUBROUTINE RESRVZ                                RVZ00200
C                                                                       RVZ00300
C LINKAGE      SUBROUTINE RESRVZ(INDEX,MODE,ISIZE,NNNBER)               RVZ00400
C                                                                       RVZ00500
C          SUBSIDIARIES                  CALLED BY                      RVZ00600
C          TYPE          ENTRY           TYPE          ENTRY            RVZ00700
C          INTEGER FCT.  NAME            INTEGER FCT.  GETTMP           RVZ00800
C          SUBROUTINE    OPCODE          SUBROUTINE    GOPAT            RVZ00900
C          SUBROUTINE    RLSLIN          SUBROUTINE    INPAT            RVZ01000
C          SUBROUTINE    TWOARG          SUBROUTINE    LARGES           RVZ01100
C                                        SUBROUTINE    LCANON           RVZ01200
C                                        SUBROUTINE    MACREC           RVZ01300
C                                        SUBROUTINE    PRO020           RVZ01400
C                                        SUBROUTINE    PRO026           RVZ01500
C                                        SUBROUTINE    PRO027           RVZ01600
C                                        SUBROUTINE    RECOG            RVZ01700
C                                        SUBROUTINE    RECOGN           RVZ01800
C                                        SUBROUTINE    REPLAC           RVZ01900
C                                        SUBROUTINE    RESRED           RVZ02000
C                                        SUBROUTINE    SSDEF            RVZ02100
C                                                                       RVZ02200
      SUBROUTINE RESRVZ(INDEX,MODE,ISIZE,NNNBER)                        RVZ02300
C                                                                       RVZ02400
      IMPLICIT INTEGER (A-Z)                                            RVZ02500
C                                                                       RVZ02600
C        1.    NAME TABLE AND TABLE LIMITS                              RVZ02700
C                                                                       RVZ02800
      INCLUDE 'NAMETB.INC'                                              RVZ02910
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                RVZ02950
C CNAMTB:      NAME TABLE OR DICTIONARY                                 RVZ03050
C                                                                       RVZ03300
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      RVZ03400
C                                                                       RVZ03500
      COMMON/CODE/CODE                                                  RVZ03600
      DIMENSION CODE(150),VBL(2)                                        RVZ03700
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        RVZ03800
      EQUIVALENCE (VBL(1),CODE(61))                                     RVZ03900
C                                                                       RVZ04000
C       16.    LITERALS FOR I. L. OPERATION CODES                       RVZ04100
C                                                                       RVZ04200
      COMMON/IL/IL                                                      RVZ04300
      DIMENSION IL(21)                                                  RVZ04400
C RESRV:       CONTAINS COMMAND CODE (12) FOR RESRV COMMAND             RVZ04500
      EQUIVALENCE (RESRV,IL(12))                                        RVZ04600
C                                                                       RVZ04700
C       17.    MODE CODES                                               RVZ04800
C                                                                       RVZ04900
      COMMON/MODX/MODX                                                  RVZ05000
      DIMENSION MODX(32)                                                RVZ05100
C REAL:        MODE CODE (21) FOR A SCALAR                              RVZ05200
      EQUIVALENCE (REAL,MODX(21))                                       RVZ05300
C BOOL:        MODE CODE (23) FOR BOOLEAN TYPE                          RVZ05310
      EQUIVALENCE (BOOL,MODX(23))                                       RVZ05320
C                                                                       RVZ05400
C       30.    NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCK   RVZ05500
C                                                                       RVZ05600
      COMMON/BLKCFS/FIRST                                               RVZ05700
      DIMENSION FIRST(2,3)                                              RVZ05800
C*                                                                      RVZ05900
C ARGUMENT     INDEX     NAME TABLE (NAMTBL) INDEX OF                   RVZ06000
C                        VARIABLE FOR WHICH OBJECT TIME                 RVZ06100
C                        CANONICAL FORM SPACE IS BEING ALLOCATED.       RVZ06200
C              MODE      MODE OF VARIABLE.                              RVZ06300
C              ISIZE     NUMBER OF ELEMENTS IN CANONICAL FORM           RVZ06400
C                        EXCLUDING SUBSCRIPT AND BCD NAME.              RVZ06500
C              NNNBER    UPPER SUBSCRIPT LIMIT (1 IF NON-               RVZ06600
C                        SUBSCRIPTED VARIABLE).                         RVZ06700
C                                                                       RVZ06800
      CHARACTER*6  DLRBLK(3)                                            RVZ07000
      DATA  DLRBLK /'      ','$$BLK2','$$BLK3'/                         RVZ07100
C**                                                                     RVZ07200
C... DETERMINE WHICH BLOCK THE VARIABLE BELONGS IN                      RVZ07300
C                                                                       RVZ07400
      BLOCK = 4                                                         RVZ07500
      MD = MODE                                                         RVZ07540
      IF(MD.EQ.BOOL)MD=REAL                                             RVZ07560
      IF (MD .EQ. REAL   .AND. NNNBER .EQ. 1)  BLOCK = 1                RVZ07600
      IF (MD .EQ. REAL   .AND. NNNBER .GT. 1)  BLOCK = 2                RVZ07700
      IF ((MD .LT. REAL  .AND.  MD .GT. 0) .OR. (MD .GE. 24)            RVZ07800
     1  ) BLOCK = 3                                                     RVZ07900
C                                                                       RVZ08000
      IF(BLOCK.NE.2 .OR. FIRST(2,2).NE.0)GO TO 5                        RVZ08100
C... PUT FIRST ITEM IN CANONICAL FORM BLOCK 2.                          RVZ08200
      I=NAME(DLRBLK(2))                                                 RVZ08300
      NAMTBL(I)=VBL(1)+MODE                                             RVZ08400
      CALL OPCODE(RESRV)                                                RVZ08500
      CALL TWOARG(I,MODE)                                               RVZ08600
      CALL TWOARG(1,2)                                                  RVZ08700
      CALL RLSLIN                                                       RVZ08800
      FIRST(1,2)=I                                                      RVZ08900
      FIRST(2,2)=1                                                      RVZ09000
C                                                                       RVZ09100
    5 CALL OPCODE(RESRV)                                                RVZ09200
      CALL TWOARG(INDEX,MODE)                                           RVZ09300
      CALL TWOARG(ISIZE,NNNBER)                                         RVZ09400
      CALL RLSLIN                                                       RVZ09500
      IF(BLOCK.EQ.4)GO TO 20                                            RVZ09600
C... IF FIRST CANONICAL FORM FOR THIS BLOCK, SAVE NAMTBL INDEX.         RVZ09700
      IF(FIRST(2,BLOCK).NE.0)GO TO 10                                   RVZ09800
      FIRST(1,BLOCK)=INDEX                                              RVZ09900
C... INCREMENT COUNT OF NUMBER OF FORMS IN THIS BLOCK                   RVZ10000
C                                                                       RVZ10100
   10 FIRST(2,BLOCK) = FIRST(2,BLOCK) + NNNBER                          RVZ10200
   20 RETURN                                                            RVZ10300
      END                                                               RVZ10400
**** SOURCE FILE : M0006680.V01   ***
*
C                                                                       RET00100
C              FORTRAN SUBROUTINE RETMCX                                RET00200
C                                                                       RET00300
C LINKAGE      SUBROUTINE RETMCX(INDX)                                  RET00400
C                                                                       RET00500
C          SUBSIDIARIES                  CALLED BY                      RET00600
C          TYPE          ENTRY           TYPE          ENTRY            RET00700
C          SUBROUTINE    ONEARG          SUBROUTINE    COMSTR           RET00800
C          SUBROUTINE    OPCODE          SUBROUTINE    MATCH            RET00900
C          SUBROUTINE    RLSLIN                                         RET01000
C                                                                       RET01100
      SUBROUTINE RETMCX(INDX)                                           RET01200
C                                                                       RET01300
      IMPLICIT INTEGER (A-Z)                                            RET01400
C                                                                       RET01500
C       16.    LITERALS FOR I. L. OPERATION CODES                       RET01600
C                                                                       RET01700
      COMMON/IL/IL                                                      RET01800
      DIMENSION IL(21)                                                  RET01900
C RETMC:       CONTAINS COMMAND CODE (10) FOR RETMC COMMAND             RET02000
      EQUIVALENCE (RETMC,IL(10))                                        RET02100
C*                                                                      RET02200
C ARGUMENTS    INDX     INDEX REGISTER NUMBER                           RET02300
C**                                                                     RET02400
      CALL OPCODE(RETMC)                                                RET02500
      CALL ONEARG(INDX)                                                 RET02600
      CALL RLSLIN                                                       RET02700
      RETURN                                                            RET02800
       END                                                              RET02900
**** SOURCE FILE : M0006682.V05   ***
*
C                                                                       RLN00100
C              FORTRAN SUBROUTINE RLSLIN                                RLN00200
C                                                                       RLN00300
C LINKAGE      SUBROUTINE RLSLIN                                        RLN00400
C                                                                       RLN00500
C          SUBSIDIARIES                  CALLED BY                      RLN00600
C          TYPE          ENTRY           TYPE          ENTRY            RLN00700
C          SUBROUTINE    FOUTXX          SUBROUTINE    ASNADZ           RLN00800
C          SUBROUTINE    COMPRS          SUBROUTINE    ASNJPZ           RLN00900
C          SUBROUTINE    PRTIL           SUBROUTINE    BOOLIF           RLN01000
C          SUBROUTINE    BINBCD          SUBROUTINE    CALMCX           RLN01100
C                                        SUBROUTINE    COMSTR           RLN01200
C                                        SUBROUTINE    GOLO             RLN01300
C                                        SUBROUTINE    GOPAT            RLN01400
C                                        SUBROUTINE    INPAT            RLN01500
C                                        SUBROUTINE    ISSCOD           RLN01600
C                                        SUBROUTINE    JUMPZZ           RLN01700
C                                        SUBROUTINE    LABELZ           RLN01800
C                                        SUBROUTINE    LARGES           RLN01900
C                                        SUBROUTINE    LCANON           RLN02000
C                                        SUBROUTINE    LOOP             RLN02100
C                                        SUBROUTINE    MACREC           RLN02200
C                                        SUBROUTINE    MNPROC           RLN02300
C                                        SUBROUTINE    MOTION           RLN02400
C                                        SUBROUTINE    PRO020           RLN02500
C                                        SUBROUTINE    PRO021           RLN02600
C                                        SUBROUTINE    PRO026           RLN02700
C                                        SUBROUTINE    PRO027           RLN02800
C                                        SUBROUTINE    RECOG            RLN02900
C                                        SUBROUTINE    RECOGN           RLN03000
C                                        SUBROUTINE    REFGEN           RLN03100
C                                        SUBROUTINE    REFREF           RLN03200
C                                        SUBROUTINE    REPLAC           RLN03300
C                                        SUBROUTINE    RESRVZ           RLN03400
C                                        SUBROUTINE    RETMCX           RLN03500
C                                        SUBROUTINE    SSDEF            RLN03600
C                                        SUBROUTINE    SUBCOD           RLN03700
C                                        SUBROUTINE    TSSMIL           RLN03800
C                                                                       RLN03900
      SUBROUTINE RLSLIN                                                 RLN04000
C                                                                       RLN04100
      IMPLICIT INTEGER (A-Z)                                            RLN04200
C                                                                       RLN04300
C       11.    SEQUENCE NUMBER STORAGE                                  RLN04400
C                                                                       RLN04500
      INCLUDE 'SEQCOM.INC'                                              RLN04650
C                                                                       RLN04660
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    RLN04800
C SEQNUM:      ALPHANUMERIC REPRESENTATION OF CURRRENT STATEMENT NUMBER RLN05000
C                                                                       RLN05200
C       14.    I. L. LIST OPTION FLAGS                                  RLN05300
C                                                                       RLN05400
      COMMON/PRT/PRT                                                    RLN05500
      LOGICAL ILPRT,MCHDNG                                              RLN05600
      DIMENSION PRT(7)                                                  RLN05700
C ILPRT:       TRUE INDICATES I.L. PRINTING (PPOPTN/INTLNG,ON)          RLN05800
      EQUIVALENCE (ILPRT,PRT(2))                                        RLN05900
C MCHDNG:      TRUE IF START OF NEW MACRO PROCESSING                    RLN06000
      EQUIVALENCE (MCHDNG,PRT(7))                                       RLN06100
C                                                                       RLN06200
C       16.    LITERALS FOR I. L. OPERATION CODES                       RLN06300
C                                                                       RLN06400
      COMMON/IL/IL                                                      RLN06500
      DIMENSION IL(21)                                                  RLN06600
C RESRV:       CONTAINS COMMAND CODE (12) FOR RESRV COMMAND             RLN06700
      EQUIVALENCE (RESRV,IL(12))                                        RLN06800
C                                                                       RLN06900
C       19.    INTERMEDIATE LANGUAGE TEXT                               RLN07000
C                                                                       RLN07100
      COMMON/ILTEXT/ILTEXT                                              RLN07200
      LOGICAL COMFIN                                                    RLN07300
      DIMENSION ILTEXT(94)                                              RLN07400
C COMFIN:      TRUE IF I.L. OPERATION CODE GIVEN                        RLN07500
      EQUIVALENCE (COMFIN,ILTEXT(1))                                    RLN07600
C OPTEXT:      CONTAINS COMMAND CODE FOR CURRENT I.L. COMMAND           RLN07700
      EQUIVALENCE (OPTEXT,ILTEXT(4))                                    RLN07800
C                                                                       RLN07900
C       22.    MACRO PROCESSING VARIABLES                               RLN08000
C                                                                       RLN08100
      COMMON/MACXX1/MACXX1                                              RLN08200
      LOGICAL ILHLT                                                     RLN08300
      DIMENSION MACXX1(71)                                              RLN08400
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              RLN08500
      EQUIVALENCE (ILHLT,MACXX1(14))                                    RLN08600
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        RLN08700
      EQUIVALENCE (INTMED,MACXX1(22))                                   RLN08800
C                                                                       RLN08900
C       33.    SYMBOLIC FILE DEFINITIONS                                RLN09000
C                                                                       RLN09100
      INCLUDE 'SYMFIL.INC'                                              RLN09210
C VLFILE:      VERIFICATION LISTING FILE                                RLN09400
C*                                                                      RLN09600
      LOGICAL  HEADNG                                                   RLN09700
      CHARACTER LINE*124,M1*36,M2*44                                    RLN09800
      DATA  LINE(1:4),HEADNG/' ',.TRUE./                                RLN09900
      DATA M1/'0 ** FINAL MACRO I.L. PROCESSING ** '/                   RLN10000
      DATA M2/'0GENERATED I.L. FOR MACRO AT SEQNCE '/                   RLN10200
C**                                                                     RLN10400
      COMFIN=.FALSE.                                                    RLN10500
      IF (ILHLT) GOTO 6                                                 RLN10600
    1 IF (.NOT.ILPRT) GOTO 3                                            RLN10700
C...CHECK FOR FINAL MACRO PROCESSING                                    RLN10800
      IF (INTMED) 2,2,4                                                 RLN10900
    2 LINE(121:124)=SEQNUM(1:4)                                         RLN11000
      CALL PRTIL(LINE)                                                  RLN11100
    3 CALL COMPRS                                                       RLN11200
      GO TO 7                                                           RLN11300
C...CHECK IF HEADING SHOULD BE PRINTED ON VLFILE                        RLN11400
    4 IF (.NOT.HEADNG) GOTO 5                                           RLN11500
      CALL FOUTXX(VLFILE,M1,36)                                         RLN11600
      HEADNG=.FALSE.                                                    RLN11700
C                                                                       RLN11800
C...CHECK FOR START OF NEW MACRO I.L.                                   RLN11900
    5 IF (.NOT.MCHDNG) GOTO 2                                           RLN12000
      CALL BINBCD(SEQNO,SEQNUM,N)                                       RLN12100
      M2(37:44)=SEQNUM                                                  RLN12200
      CALL FOUTXX(VLFILE,M2,44)                                         RLN12400
      MCHDNG=.FALSE.                                                    RLN12500
      GOTO 2                                                            RLN12600
    6 IF (OPTEXT.EQ.RESRV) GOTO 1                                       RLN12700
    7 RETURN                                                            RLN12800
      END                                                               RLN12900
**** SOURCE FILE : SEARCH00.ORG   ***
*
*                                                                       00000100
*  *  SEARCH  *   INTEGER FUNCTION   25.6.86   E.MCLELLAN               00000200
*                                                                       00000300
*  PURPOSE     TO COMPARE SOURCE STRUCTURE TO A LIST OF                 00000400
*              PRODUCTIONS AND TO DETERMINE WHICH PRODUCTION            00000500
*              IS 'MATCHED' BY THE SOURCE STRUCTURE                     00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*              INTEGER= SEARCH (SOURCE,IADR,PRODCT,ERRPT)               00000900
*                                                                       00001000
*  ARGUMENTS   SOURCE   ARRAY CONTAINING SOURCE STRUCTURE.              00001100
*              IADR     ADDRESS OF FIRST ELEMENT.                       00001200
*                       THE REMAINING ELEMENTS ARE STORED               00001300
*                       IN SUCCESSIVELY LOWER CORE LOCATIONS            00001400
*              PRODCT   ADDRESS OF THE FIRST ELEMENT OF THE             00001500
*                       FIRST PRODUCTION. THE REMAINING                 00001600
*                       ELEMENTS ARE STORED IN SUCCESSIVELY             00001700
*                       HIGHER CORE LOCATIONS                           00001800
*              ERRPT    ADDRESS OF THE PRODCT POSITION IN WHICH         00001900
*                       A MISMATCHED PRODUCTION WAS DETECTED            00002000
*                                                                       00002100
*  CALLED BY            GOPAT,INPAT,LARGES,PRO020,PRO021,RECOG,         00002200
*                       SSDEF,TSSMIL                                    00002300
*                                                                       00002400
*  SUBSIDIARIES         NONE                                            00002500
*                                                                       00002600
      INTEGER FUNCTION SEARCH(SOURCE,IADR,PRODCT,ERRPT)                 00002700
C                                                                       00002800
      INTEGER SOURCE,IADR,PRODCT,ERRPT,IADSAV,ORIGIN,SUBPAT             00002900
      DIMENSION SOURCE(*),PRODCT(*)                                     00003000
      INTEGER ANDF                                                      00003100
      INTEGER Z9999,ZAAAA,ZCCCC,ZFFFF                                   00003200
C                                                                       00003220
      INCLUDE 'SDP.INC'                                                 00003250
C     IWRD: NO. OF BYTES PER WORD                                       00003260
C                                                                       00003270
      DATA Z9999/-1718026240/,ZAAAA/-1431699456/,                       00003300
     +     ZCCCC/-859045888/,ZFFFF/-65536/                              00003400
C                                                                       00003500
C.... SAVE INITIAL STACK ADDRESS                                        00003600
      IADSAV=IADR                                                       00003700
C.... PRODCT ADDRESS                                                    00003800
      J=1                                                               00003900
C.... INITIAL VALUE OF ERRPT                                            00004000
   5  K=ERRPT                                                           00004100
C.... INITIAL STACK ADDRESS                                             00004150
      I=IADSAV                                                          00004100
C.... IS ADDRESS IN PRODCT A BREAK POINT ?                              00004200
      SUBPAT=ANDF(PRODCT(J),ZFFFF)                                      00004250
      IF (SUBPAT.EQ.Z9999) THEN                                         00004300
C.... YES - STORE THE BASIC ADDRESS, INCREMENT PRODCT ADDRESS BY 1      00004400
        ORIGIN=J                                                        00004500
        J=J+1                                                           00004600
      ELSE                                                              00004700
C.... NOT A BREAK POINT - DECREASE STACK ADDRESS BY 2                   00004800
C                         DECREASE ERRPT BY 1                           00004900
        I=I-2                                                           00005000
        K=K-1                                                           00005100
      ENDIF                                                             00005200
C                                                                       00005300
C.... NEW PRODUCTION                                                    00005400
C                                                                       00005500
  10  CONTINUE                                                          00005600
      IF (PRODCT(J).GE.0) THEN                                          00005700
C.... COMPARE IF NEXT INFORMATION IS AN ARGUMENT,                       00005800
C     IF SO CHANGE TO SEQUENTIAL MODE                                   00005900
        IF (PRODCT(J+1).GT.0) GOTO 50                                   00006000
C....COMPARE STACK AND PRODCT                                           00006100
        SUBPAT=ANDF(SOURCE(I),PRODCT(J))                                00006200
        IF (SOURCE(I).EQ.SUBPAT) THEN                                   00006300
C.... PRODUCTION STILL OK, INCREMENT PRODCT BY 1                        00006400
C                          DECREMENT STACK BY 2                         00006500
          J=J+1                                                         00006600
          I=I-2                                                         00006700
C.... DECREMENT ERRPT                                                   00006720
          K=K-1                                                         00006740
        ELSE                                                            00006800
C.... MAINTAIN STACK ADDRESS CONSTANT, INCREMENT PRODCT BY 2            00006900
C     AND SEARCH NEW PRODUCTION                                         00007000
          J=J+2                                                         00007100
        ENDIF                                                           00007200
        GOTO 10                                                         00007300
C                                                                       00007400
      ELSE                                                              00007500
C.... IS PRODCT A PRODUCTION NUMBER                                     00007600
        SUBPAT=ANDF(PRODCT(J),ZFFFF)                                    00007650
        IF (SUBPAT.EQ.ZCCCC) THEN                                       00007700
          GOTO 80                                                       00007800
C                                                                       00007900
C.... IS IT A DISPLACEMENT                                              00008000
        ELSE IF (SUBPAT.EQ.ZAAAA) THEN                                  00008100
C.... YES                                                               00008200
          J=(PRODCT(J)-ZAAAA)/IWRD                                      00008300
          J=J+ORIGIN                                                    00008400
          GOTO 10                                                       00008500
        ELSE                                                            00008600
          GOTO 5                                                        00008700
        ENDIF                                                           00008800
      ENDIF                                                             00008900
C                                                                       00009000
C.... SEQUENTIAL SEARCHING                                              00009100
C                                                                       00009200
  50  SUBPAT=ANDF(SOURCE(I),PRODCT(J))                                  00009300
      IF (SOURCE(I).EQ.SUBPAT) THEN                                     00009400
C.... NEXT HIGHER PRODCT ADDRESS, NEXT LOWER STACK ADDRESS              00009500
        J=J+1                                                           00009600
        I=I-2                                                           00009700
C.... DECREMENT ERRPT                                                   00009800
        K=K-1                                                           00009900
C.... IS PRODCT A PRODUCTION NUMBER                                     00010000
        SUBPAT=ANDF(PRODCT(J),ZFFFF)                                    00010050
        IF (SUBPAT.EQ.ZCCCC) THEN                                       00010100
          GOTO 80                                                       00010200
        ELSE                                                            00010300
          GOTO 50                                                       00010400
        ENDIF                                                           00010500
      ELSE                                                              00010600
C.... SEARCHING FAILED. FINAL PROCESS.                                  00010700
C     SEARCH FOR NEXT FINAL PRODUCTION NUMBER                           00010800
  60    J=J+1                                                           00010900
        SUBPAT=ANDF(PRODCT(J),ZFFFF)                                    00010950
        IF (SUBPAT.EQ.ZCCCC) THEN                                       00011000
          J=J+1                                                         00011050
          GOTO 80                                                       00011100
        ELSE                                                            00011200
          GOTO 60                                                       00011300
        ENDIF                                                           00011400
      ENDIF                                                             00011500
C                                                                       00011600
C.... PRODUCTION NUMBER                                                 00011700
C                                                                       00011800
  80  SEARCH=PRODCT(J)-ZCCCC                                            00011900
      ERRPT=K                                                           00012000
      RETURN                                                            00012100
      END                                                               00012200
**** SOURCE FILE : M0006684.V01   ***
*
C                                                                       SBT00100
C              FORTRAN SUBROUTINE SETBIT                                SBT00200
C                                                                       SBT00300
C LINKAGE      SUBROUTINE SETBIT (WORD,N)                               SBT00400
C                                                                       SBT00500
C          SUBSIDIARIES                  CALLED BY                      SBT00600
C          NONE                          TYPE          ENTRY            SBT00700
C                                        SUBROUTINE    MATCH            SBT00800
C                                                                       SBT00900
      SUBROUTINE SETBIT (WORD,N)                                        SBT01000
C                                                                       SBT01100
      IMPLICIT INTEGER (A-Z)                                            SBT01200
C                                                                       SBT01300
C       32.    COMMON BLOCK FOR SETBIT AND BITMCH                       SBT01400
C              CONTAINS ONE WORD FOR EACH BIT WITH ONLY THAT BIT SET    SBT01500
      COMMON/BITCOM/BIT                                                 SBT01600
      DIMENSION BIT(32)                                                 SBT01700
C*                                                                      SBT01800
C ARGUMENTS    WORD    CELL WHOSE BIT POSITION IS REFERENCED            SBT01900
C              N       BIT POSITION OF WORD TO BE SET                   SBT02000
      REAL WORD,WORDR,ALLBIT                                            SBT02100
      LOGICAL WORDL,BIT                                                 SBT02200
      EQUIVALENCE (WORDR,WORDL)                                         SBT02300
C**                                                                     SBT02400
      WORDR=WORD                                                        SBT02500
      WORDL=WORDL.OR.BIT(N+1)                                           SBT02600
      WORD=WORDR                                                        SBT02700
      GOTO 1040                                                         SBT02800
 1040 RETURN                                                            SBT02900
       END                                                              SBT03000
**** SOURCE FILE : M0006685.V01   ***
*
C                                                                       SCH00100
C              FORTRAN SUBROUTINE SETCHR                                SCH00200
C                                                                       SCH00300
C LINKAGE      SUBROUTINE SETCHR(PNTR,CLASS)                            SCH00400
C                                                                       SCH00500
C          SUBSIDIARIES                  CALLED BY                      SCH00600
C          NONE                          TYPE          ENTRY            SCH00700
C                                        SUBROUTINE    RECOG            SCH00800
C                                        SUBROUTINE    KONAST           SCH00900
C                                        SUBROUTINE    LOOP             SCH01000
C                                        SUBROUTINE    VCTPRD           SCH01100
C                                                                       SCH01200
      SUBROUTINE SETCHR(PNTR,CLASS)                                     SCH01300
C                                                                       SCH01400
      IMPLICIT INTEGER (A-Z)                                            SCH01500
C                                                                       SCH01600
C        2.    STACK AND POINTER STORAGE                                SCH01700
C                                                                       SCH01800
      COMMON/STKLST/STKLST                                              SCH01900
      DIMENSION STKLST(300),STACK(2,99)                                 SCH02000
C STACK:       WORKING STACK                                            SCH02100
      EQUIVALENCE (STACK(1,1),STKLST(4))                                SCH02200
C                                                                       SCH02300
C        4.    PRODUCTION TABLE                                         SCH02400
C                                                                       SCH02500
      COMMON/SRCTBL/SRCTBL                                              SCH02600
      DIMENSION SRCTBL(502),META(50)                                    SCH02700
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   SCH02800
      EQUIVALENCE (META(1),SRCTBL(3))                                   SCH02900
C                                                                       SCH03000
C       29.    CLASS CODE MODULI                                        SCH03100
C                                                                       SCH03200
      COMMON/MODULI/MODULI                                              SCH03300
      DIMENSION MODULI(2)                                               SCH03400
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    SCH03500
      EQUIVALENCE (MODULO,MODULI(1))                                    SCH03600
C*                                                                      SCH03700
C ARGUMENTS    PNTR      STACK INDEX OF ENTRY                           SCH03800
C              CLASS     TWO ELEMENT ARRAY WHERE CLASS(2)               SCH03900
C                        CONTAINS NAME TABLE (NAMTBL) INDEX OF          SCH04000
C                        DESIRED META-CHARACTER.                        SCH04100
C     CHANGE A CHARACTER                                                SCH04200
C**                                                                     SCH04300
      DIMENSION CLASS(2)                                                SCH04400
      STACK(1,PNTR)=CLASS(2)                                            SCH04500
      I = CLASS(1)/MODULO                                               SCH04600
      STACK(2,PNTR) = META(I)                                           SCH04700
      RETURN                                                            SCH04800
       END                                                              SCH04900
**** SOURCE FILE : M0006686.V03   ***
*
C                                                                       SMD00100
C              FORTRAN SUBROUTINE SETMOD                                SMD00200
C                                                                       SMD00300
C LINKAGE      SUBROUTINE SETMOD(PNTR,CLASS)                            SMD00400
C                                                                       SMD00500
C          SUBSIDIARIES                  CALLED BY                      SMD00600
C          NONE                          TYPE          ENTRY            SMD00700
C                                        SUBROUTINE    LARGES           SMD00800
C                                        SUBROUTINE    PRO020           SMD00900
C                                        SUBROUTINE    RECOG            SMD01000
C                                        SUBROUTINE    RECOGN           SMD01100
C                                        SUBROUTINE    REPLAC           SMD01200
C                                                                       SMD01300
      SUBROUTINE SETMOD(PNTR,CLASS)                                     SMD01400
C                                                                       SMD01500
      IMPLICIT INTEGER (A-Z)                                            SMD01600
C                                                                       SMD01700
C        1.    NAME TABLE AND TABLE LIMITS                              SMD01800
C                                                                       SMD01900
      INCLUDE 'NAMETB.INC'                                              SMD02010
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                SMD02050
C CNAMTB:      NAME TABLE OR DICTIONARY                                 SMD02150
C                                                                       SMD02400
C        2.    STACK AND POINTER STORAGE                                SMD02500
C                                                                       SMD02600
      COMMON/STKLST/STKLST                                              SMD02700
      DIMENSION STKLST(300),STACK(2,99)                                 SMD02800
C STACK:       WORKING STACK                                            SMD02900
      EQUIVALENCE (STACK(1,1),STKLST(4))                                SMD03000
C                                                                       SMD03100
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      SMD03200
C                                                                       SMD03300
      COMMON/CODE/CODE                                                  SMD03400
      DIMENSION CODE(150),GEOM(2),FCN(2),PROCED(2),PERMID(2),BIGGEO(2)  SMD03500
C GEOM:        (1)=CODE CLASS 16000,(2)=NAMTBL INDEX OF 'GEOM  '        SMD03600
      EQUIVALENCE (GEOM(1),CODE(31))                                    SMD03700
C FCN:         (1)=CODE CLASS 18000,(2)=NAMTBL INDEX OF 'FCN   '        SMD03800
      EQUIVALENCE (FCN(1),CODE(35))                                     SMD03900
C PROCED:      (1)=CODE CLASS 19000,(2)=NAMTBL INDEX OF 'PROCED'        SMD04000
      EQUIVALENCE (PROCED(1),CODE(37))                                  SMD04100
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        SMD04200
      EQUIVALENCE (PERMID(1),CODE(39))                                  SMD04300
C BIGGEO:      (1)=CODE CLASS 44000,(2)=NAMTBL INDEX OF 'BIGGEO'        SMD04400
      EQUIVALENCE (BIGGEO(1),CODE(87))                                  SMD04500
C                                                                       SMD04600
C        4.    PRODUCTION TABLE                                         SMD04700
C                                                                       SMD04800
      COMMON/SRCTBL/SRCTBL                                              SMD04900
      DIMENSION SRCTBL(502),META(50)                                    SMD05000
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   SMD05100
      EQUIVALENCE (META(1),SRCTBL(3))                                   SMD05200
C                                                                       SMD05300
C       29.    CLASS CODE MODULI                                        SMD05400
C                                                                       SMD05500
      COMMON/MODULI/MODULI                                              SMD05600
      DIMENSION MODULI(2)                                               SMD05700
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    SMD05800
      EQUIVALENCE (MODULO,MODULI(1))                                    SMD05900
C*                                                                      SMD06000
C ARGUMENTS    PNTR      WORKING STACK (STACK) POINTER OF               SMD06100
C                        ITEM WHOSE CLASS IS TO BE CHANGED.             SMD06200
C              CLASS     NEW META-LINQUISTIC CLASS ASSIGNMENT.          SMD06300
C                                                                       SMD06400
C NOTES        IF CLASS IS PERMID, PROCED, OR GEOM, IT IS               SMD06500
C              ASSUMED THAT PREVIOUS CLASS WAS IDENT, CONPRO,           SMD06600
C              OR CONGEO, RESPECTIVELY, IN WHICH CASE THE               SMD06700
C              ORIGINAL MODE IS RETAINED.                               SMD06800
C                                                                       SMD06900
C     CHANGE THE CLASS OF A CHARACTER                                   SMD07000
C**                                                                     SMD07100
      DIMENSION CLASS(2)                                                SMD07200
      I=STACK(1,PNTR)                                                   SMD07300
      J = CLASS(1)                                                      SMD07400
       IF ((J .EQ. PERMID(1)) .OR. (J .EQ. GEOM(1)) .OR.                SMD07500
     /(J .EQ. BIGGEO(1)) .OR. (J .EQ. PROCED(1)))  GO TO 1              SMD07600
      IF(J.EQ.FCN(1))GO TO 1                                            SMD07700
      NAMTBL(I) = J                                                     SMD07800
      GO TO 2                                                           SMD07900
    1 NAMTBL(I) = J+(NAMTBL(I)-MODULO*(NAMTBL(I)/MODULO))               SMD08000
    2 J = J/MODULO                                                      SMD08100
      STACK(2,PNTR)=META(J)                                             SMD08200
      RETURN                                                            SMD08300
       END                                                              SMD08400
**** SOURCE FILE : M0006687.W03   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE SSDEF                                 M0000200
C                                                                       M0000300
C LINKAGE      SUBROUTINE SSDEF(ACTNO,BIGCNT)                           M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED BY                      M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    ALARM           SUBROUTINE    RECOG            M0000800
C          SUBROUTINE    CALLZZ                                         M0000900
C          LOGICAL FCT.  IFTMP                                          M0001000
C          INTEGER FCT.  NUMB                                           M0001100
C          SUBROUTINE    ONEARG                                         M0001200
C          SUBROUTINE    OPCODE                                         M0001300
C          SUBROUTINE    ARGCVT                                         M0001400
C          SUBROUTINE    PUTTMP                                         M0001500
C          SUBROUTINE    CONCAT                                         M0001600
C          SUBROUTINE    RESRVZ                                         M0001700
C          SUBROUTINE    RLSLIN                                         M0001800
C          INTEGER FCT.  GETTMP                                         M0001900
C          SUBROUTINE    TWOARG                                         M0002000
C          SUBROUTINE    BINBCD                                         M0002100
C                                                                       M0002200
      SUBROUTINE SSDEF(ACTNO,BIGCNT)                                    M0002300
C                                                                       M0002400
      IMPLICIT INTEGER (A-Z)                                            M0002500
C                                                                       M0002600
C              FUNCTION DECLARATION                                     M0002700
C                                                                       M0002800
      LOGICAL IFTMP                                                     M0002900
C                                                                       M0003000
C        1.    NAME TABLE AND TABLE LIMITS                              M0003100
C                                                                       M0003200
      INCLUDE 'NAMETB.INC'                                              M0003310
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0003350
C CNAMTB:      NAME TABLE OR DICTIONARY                                 M0003450
C NAMMAX:      NAMTBL INDEX OF THE PART PROGRAM NAME SECTION            M0003500
C                                                                       M0003900
C        2.    STACK AND POINTER STORAGE                                M0004000
C                                                                       M0004100
      COMMON/STKLST/STKLST                                              M0004200
      DIMENSION STKLST(300),STACK(2,99)                                 M0004300
C TOP:         POINTER TO LAST STACK ENTRY                              M0004400
      EQUIVALENCE (TOP,STKLST(1))                                       M0004500
C STACK:       WORKING STACK                                            M0004600
      EQUIVALENCE (STACK(1,1),STKLST(4))                                M0004700
C                                                                       M0004800
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0004900
C                                                                       M0005000
      COMMON/CODE/CODE                                                  M0005100
      DIMENSION CODE(150),NUMBER(2),TEMP(2),PERMID(2),VBL(2),IDENT(2),  M0005200
     *          COMMA(2)                                                M0005300
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF 'COMMA '        M0005400
      EQUIVALENCE (COMMA(1),CODE(1))                                    M0005500
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        M0005600
      EQUIVALENCE (NUMBER(1),CODE(27))                                  M0005700
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0005800
      EQUIVALENCE (TEMP(1),CODE(33))                                    M0005900
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        M0006000
      EQUIVALENCE (PERMID(1),CODE(39))                                  M0006100
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        M0006200
      EQUIVALENCE (VBL(1),CODE(61))                                     M0006300
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        M0006400
      EQUIVALENCE (IDENT(1),CODE(69))                                   M0006500
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         M0006600
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    M0006700
      COMMON/TMP/TXXXX                                                  M0006800
      DIMENSION TXXXX(2,32)                                             M0006900
C                                                                       M0007000
C        4.    PRODUCTION TABLE                                         M0007100
C                                                                       M0007200
      COMMON/SRCTBL/SRCTBL                                              M0007300
      DIMENSION SRCTBL(502),META(50)                                    M0007400
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   M0007500
      EQUIVALENCE (META(1),SRCTBL(3))                                   M0007600
C                                                                       M0007700
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      M0007800
C                                                                       M0007900
      COMMON/BCDPTR/BCDPTR                                              M0008000
      DIMENSION BCDPTR(7)                                               M0008100
C DOTTAB:      NAMTBL POINTER TO ALPHAMERIC LITERAL '$$TAB'             M0008200
      EQUIVALENCE (DOTTAB,BCDPTR(7))                                    M0008300
C                                                                       M0008400
C        9.    NAME TABLE POINTERS TO NUMBERS                           M0008500
C                                                                       M0008600
      COMMON/NUMPTR/NUMPTR                                              M0008700
      DIMENSION NUMPTR(12)                                              M0008800
C ZEROPT:      NAMTBL POINTER TO '0.    '                               M0008900
      EQUIVALENCE (ZEROPT,NUMPTR( 2))                                   M0009000
C ONE:PT:      NAMTBL POINTER TO '1     '                               M0009100
      EQUIVALENCE (ONE,NUMPTR( 3))                                      M0009200
C TWO:         NAMTBL POINTER TO '2     '                               M0009300
      EQUIVALENCE (TWO,NUMPTR( 5))                                      M0009400
C FOUR:        NAMTBL POINTER TO '4     '                               M0009500
      EQUIVALENCE (FOUR,NUMPTR(7))                                      M0009600
C                                                                       M0009700
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           M0009800
C                                                                       M0009900
      INCLUDE 'GMTY.INC'                                                M0010000
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            M0010200
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  M0010400
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    M0010600
C                                                                       M0010800
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    M0010900
C                                                                       M0011000
      COMMON/CFSIZE/CFSIZE                                              M0011100
      DIMENSION CFSIZE(1106),MAXSIZ(2),KSC(3,300)                       M0011200
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                M0011300
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 M0011400
C ISC:         POINTER TO LAST KSC ENTRY                                M0011500
      EQUIVALENCE (ISC,CFSIZE(206))                                     M0011600
C KSC:         CONTAINS SYMBOL,SIZE AND NUMBER OF SEQMENTS OF SS-DEFIN. M0011700
      EQUIVALENCE (KSC(1,1),CFSIZE(207))                                M0011800
C                                                                       M0011900
C       16.    LITERALS FOR I. L. OPERATION CODES                       M0012000
C                                                                       M0012100
      COMMON/IL/IL                                                      M0012200
      DIMENSION IL(21)                                                  M0012300
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              M0012400
      EQUIVALENCE (REPL,IL(17))                                         M0012500
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              M0012600
      EQUIVALENCE (MOVE,IL(19))                                         M0012700
C                                                                       M0012800
C       17.    MODE CODES                                               M0012900
C                                                                       M0013000
      COMMON/MODX/MODX                                                  M0013100
      DIMENSION MODX(32)                                                M0013200
C MATRIX:      MODE CODE (18) FOR MATRIX                                M0013300
      EQUIVALENCE (MATRIX,MODX(18))                                     M0013400
C POINT:       MODE CODE (19) FOR POINT                                 M0013500
      EQUIVALENCE (POINT,MODX(19))                                      M0013600
C VECTOR:      MODE CODE (20) FOR VECTOR                                M0013700
      EQUIVALENCE (VECTOR,MODX(20))                                     M0013800
C REAL:        MODE CODE (21) FOR A SCALAR                              M0013900
      EQUIVALENCE (REAL,MODX(21))                                       M0014000
C SSURF:       MODE CODE (29) FOR SCULPTURED SURFACE                    M0014100
      EQUIVALENCE (SSURF,MODX(29))                                      M0014200
C SCURV:       MODE CODE (30) FOR SCULPTURED CURVE                      M0014300
      EQUIVALENCE (SCURV,MODX(30))                                      M0014400
C                                                                       M0014500
C       22.    MACRO PROCESSING VARIABLES                               M0014600
C                                                                       M0014700
      COMMON/MACXX1/MACXX1                                              M0014800
      DIMENSION MACXX1(71)                                              M0014900
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        M0015000
      EQUIVALENCE (INTMED,MACXX1(22))                                   M0015100
C                                                                       M0015200
C       27.    OPERAND MODIFIERS                                        M0015300
C                                                                       M0015400
      COMMON/OPMOD/OPMOD                                                M0015500
      DIMENSION OPMOD(6)                                                M0015600
C NOUGHT:      CONTAINS OPERAND TYPE 0                                  M0015700
      EQUIVALENCE (NOUGHT,OPMOD(1))                                     M0015800
C DLR:         CONTAINS OPERAND TYPE CODE 1                             M0015900
      EQUIVALENCE (DLR,OPMOD(2))                                        M0016000
C                                                                       M0016100
C       28.    OPERAND MODIFIERS                                        M0016200
C                                                                       M0016300
      COMMON/SUBLST/SUBLST                                              M0016400
      DIMENSION SUBLST(135),APTXXX(120)                                 M0016500
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            M0016600
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 M0016700
C                                                                       M0016800
C       29.    CLASS CODE MODULI                                        M0016900
C                                                                       M0017000
      COMMON/MODULI/MODULI                                              M0017100
      DIMENSION MODULI(2)                                               M0017200
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0017300
      EQUIVALENCE (MODULO,MODULI(1))                                    M0017400
C MODHLF:      NORMAL MODE CODE LIMIT 500                               M0017500
      EQUIVALENCE (MODHLF,MODULI(2))                                    M0017600
C                                                                       M0017700
C       44.    ERROR POSITION TABLE                                     M0017800
C                                                                       M0017900
      COMMON/ERRPOS/ERRPOS                                              M0018000
      INTEGER ESTACK,ERRPOS                                             M0018100
      DIMENSION ERRPOS(302),ESTACK(100)                                 M0018200
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    M0018300
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               M0018400
C*                                                                      M0018500
C       TYPE   MODE  SIZE                                               M0018600
C       ****************************************************************M0018700
C SCURV/CURSEG 140  NPS=2  SEGMS=0                    *                 M0018800
C       SPLINE  30  NOWRDS=24*(NPS+1)                 * =72             M0018900
C                   NPS=2  SEGMS.GT.0                 *                 M0019000
C       SEG    150  NOWRDS=54*(NPS+1)-18+6*SEGMS      * =144+6*SEGMS    M0019100
C                           I=N                                         M0019200
C       COMBIN 141   NOWRDS=SUMME(NOWRDS(SS )-24) + 24                  M0019300
C                           I=1            I                            M0019400
C       ****************************************************************M0019500
C SSURF/SMESH,XYZ,...132   KN=59   NOWRDS=10+KN*(SPL-1)*(NPS-1)         M0019600
C       GMESH,XYZ,...125   KN=59                                        M0019700
C       SMESH,XYPLAN,132   KN=35                                        M0019800
C       COMBIN,......141                  I=N                           M0019900
C       RULED,.......143           NOWRDS=SUMME(NOWRDS(SS )-10) + 10    M0020000
C       TRANSL,......133                  I=1            I              M0020100
C       SCALE,....... 36                                                M0020200
C       XYROT,....... 34                                                M0020300
C       REVOLV,......142           NOWRDS=74+222*NOWRDS/24              M0020400
C       GENCUR,......148           NOWRDS=NOWRDS+10                     M0020500
C       PATCH,PNTSON,131                                                M0020600
C       PATCH,PNTVEC,131           NOWRDS=8+65*NPATCH                   M0020700
C       PATCH,POLYGN,131                                                M0020800
C       ****************************************************************M0020900
      LOGICAL FOULUP,CRSFLG,MINDEF,WTFLAG,NOMTRX                        M0021000
      DIMENSION ITMP(2,3)                                               M0021100
      CHARACTER IBUFF*15,IBLANK                                         M0021110
      DIMENSION STK(2,30),SAVE(2,27),SPLARY(16)                         M0021200
      DIMENSION TCURV(4),TSURF(11)                                      M0021300
C                                                                       M0022100
      EQUIVALENCE(STK(1, 1),    TP),(STK(1, 2),NOMTRX)                  M0022200
      EQUIVALENCE(STK(1, 3),FOULUP),(STK(1, 4),MINDEF)                  M0022300
      EQUIVALENCE(STK(1, 5),CRSFLG),(STK(1, 6),WTFLAG)                  M0022400
      EQUIVALENCE(STK(1, 7), INDEX),(STK(1, 8),  MOUT)                  M0022500
      EQUIVALENCE(STK(1, 9),NOWRDS),(STK(1,10), MMODE)                  M0022600
      EQUIVALENCE(STK(1,11),   SPM),(STK(1,12),   PTM)                  M0022700
      EQUIVALENCE(STK(1,13),   PNT),(STK(1,14),   SPL)                  M0022800
      EQUIVALENCE(STK(1,15),   PMS),(STK(1,16), COUNT)                  M0022900
      EQUIVALENCE(STK(1,17),   CNT),(STK(1,18),   JMP)                  M0023000
      EQUIVALENCE(STK(1,19),   NPS),(STK(1,20),    KN)                  M0023100
      EQUIVALENCE(STK(1,21),  MTOP),(STK(1,22),ITMP(1,1))               M0023200
C                                                                       M0023300
C...  LOCAL VARIABLES WHICH MUST BE SAVED UNTIL THIS SSURF DEF IS       M0023400
C      COMPLETELY TRANSLATED.                                           M0023500
C                                                                       M0023510
      DATA IBLANK/' '/,JSAVE/0/                                         M0023520
C                CURSEG SPLINE COMBIN SEG                               M0023530
      DATA TCURV/   190,    80,   191,   200/                           M0023540
C                PATCH  SMESH  COMBIN GENCUR REVOLV RULED               M0023550
      DATA TSURF/   181,   182,   191,   198,   192,   193,             M0023560
C                TRANSL SCALE  XYROT  YZROT  ZXROT                      M0023570
     *               83,    86,    84,    87,    98/                    M0023580
C**                                                                     M0023600
      IRET=1                                                            M0023700
      IND=1                                                             M0023800
      IF(BIGCNT.NE.1)GOTO 10                                            M0023900
C                                                                       M0024000
      TP=2                                                              M0024100
    1 MTOP=TOP                                                          M0024200
      ISS=MOD(NAMTBL(STACK(1,TOP-5)),MODHLF)                            M0024300
      FOULUP=.FALSE.                                                    M0024400
      MINDEF=.FALSE.                                                    M0024500
      CRSFLG=.FALSE.                                                    M0024600
      WTFLAG=.FALSE.                                                    M0024700
      NOMTRX =.FALSE.                                                   M0024800
      INDEX=-9                                                          M0024900
      NOWRDS=0                                                          M0025000
      NPS=0                                                             M0025100
      SPM=31                                                            M0025200
      PTM=31                                                            M0025300
      PMS=31                                                            M0025400
      PNT=1                                                             M0025500
      SEGMS=0                                                           M0025550
      SPL=0                                                             M0025600
      COUNT=0                                                           M0025700
      CNT=0                                                             M0025800
      SPLARY(1)=0                                                       M0025900
      DO 5 I=1,3                                                        M0026000
      ITMP(1,I)=1                                                       M0026100
    5 ITMP(2,I)=REAL                                                    M0026200
      STK(2,1)=-1                                                       M0026300
      KN=35                                                             M0026400
      JMP=5                                                             M0026500
      MOUT=1                                                            M0026600
      FLOWS=-1                                                          M0026700
      NPATCH=0                                                          M0026800
      L=STACK(1,TOP-3)                                                  M0026900
      M=STACK(1,TOP-1)                                                  M0027000
      ERRPT=TOP-3                                                       M0027100
      GOTO 200                                                          M0027200
C                                                                       M0027300
C         STORE INTERNAL BIT REPRESENTATION IN STK                      M0027400
C                                                                       M0027500
   10 IF(ACTNO.GT.102)GOTO 500                                          M0027600
      IF(FOULUP)GOTO 140                                                M0027700
      IF(TOP.GT.MTOP)GOTO 900                                           M0027800
   20 L=STACK(1,TOP-1)                                                  M0027900
      ERRPT=TOP-1                                                       M0028000
      IF(L.GT.NAMMAX)GOTO 50                                            M0028200
      CLASS=MODULO*(NAMTBL(L)/MODULO)                                   M0028210
      MODE=NAMTBL(L)-CLASS                                              M0028300
      IF(MODE.GT.MODHLF)MODE=MODE-MODHLF                                M0028400
      IF(CLASS.NE.IDENT(1))GOTO 40                                      M0028500
      CLASS=PERMID(1)                                                   M0028600
      NAMTBL(L)=NAMTBL(L)-IDENT(1)+PERMID(1)                            M0028700
   40 IF(CLASS.EQ.PERMID(1))MODE=MODE+50                                M0028800
      IF(CLASS.EQ.VBL(1).OR.CLASS.EQ.PERMID(1).OR.CLASS.EQ.TEMP(1))     M0028900
     *                                                      GOTO 60     M0029000
      IF(CLASS.NE.NUMBER(1))GOTO 80                                     M0029100
   50 MODE=REAL                                                         M0029200
      CLASS=NUMBER(1)                                                   M0029210
   60 IF(WTFLAG)GOTO 1000                                               M0029300
      TP=TP+1                                                           M0029400
      ERROR=1227                                                        M0029500
      IF(TP.GT.30)GOTO 100                                              M0029600
      STK(2,TP)=PMIDTB(MODE)                                            M0029700
      GEOPOS=GEOLOC(ISS)                                                M0029800
      TPT2=TP*2                                                         M0029810
      PROD=SEARCH(STK,TPT2,GEOMTB(GEOPOS),ERRPT)                        M0029900
C                                                                       M0030000
      GOTO(1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,           M0030100
     1     2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,           M0030200
     2     3100,3200,3300,3400,3500,3600,3700),PROD                     M0030300
C                                                                       M0030400
C                ERROR OUTPUT                                           M0030500
C                                                                       M0030600
   80 ERRPT=TOP-1                                                       M0030700
   90 ERROR=1007                                                        M0030800
      IF(CLASS.EQ.PERMID(1))GOTO 100                                    M0030900
      J=MOD(MODE-9,10)                                                  M0031000
      IF(MODE.LT.19.OR.J.GT.2)GOTO 100                                  M0031100
      ERROR=1203+MODE                                                   M0031200
  100 FOULUP=.TRUE.                                                     M0031300
      MINDEF=.TRUE.                                                     M0031400
  110 TP=TP-1                                                           M0031500
      CALL ALARM(ERROR,ERRPT,8,'SSDEF   ')                              M0031600
  140 STACK(1,TOP-2)=STACK(1,TOP)                                       M0031700
      STACK(2,TOP-2)=STACK(2,TOP)                                       M0031800
      ESTACK( TOP-2)=ESTACK( TOP)                                       M0031900
      TOP=TOP-2                                                         M0032000
  150 RETURN                                                            M0032100
C                                                                       M0032200
C                I.L.  OUTPUT                                           M0032300
C                                                                       M0032400
C           SPECIAL CONTROL AND OUTPUT OF THE SUBTYPE                   M0032500
C                                                                       M0032600
  200 ASSIGN 1110 TO TSEG                                               M0032700
      MODE=MOD(NAMTBL(L),MODHLF)                                        M0032800
      CLASS=NAMTBL(L)-MODE                                              M0032900
      IF(CLASS.NE.IDENT(1))GOTO 201                                     M0033000
      CLASS=PERMID(1)                                                   M0033100
      NAMTBL(L)=NAMTBL(L)-IDENT(1)+PERMID(1)                            M0033200
  201 IF(CLASS.NE.PERMID(1))GOTO 202                                    M0033300
      ITMP(1,1)=L                                                       M0033400
      MODE=MODE+50                                                      M0033500
  202 MMODE=MODE                                                        M0033600
      STK(2,TP)=PMIDTB(MMODE)                                           M0033700
      HMODE=MOD(NAMTBL(M),MODHLF)                                       M0033800
      TYP=NAMTBL(M)-HMODE                                               M0033900
      IF(TYP.NE.PERMID(1).AND.TYP.NE.IDENT(1))GOTO 204                  M0034000
      HMODE=HMODE+50                                                    M0034100
      IF(HMODE.NE.188.AND.HMODE.NE.189)ITMP(1,3)=M                      M0034200
  204 IF(ISS.EQ.29)GOTO 215                                             M0034300
C                                                                       M0034400
      DO 210 TYP=1,4                                                    M0034500
      IF(TCURV(TYP).EQ.MMODE)GOTO 225                                   M0034600
  210 CONTINUE                                                          M0034700
      GOTO 90                                                           M0034800
C                                                                       M0034900
  215 DO 216 TYP=1,11                                                   M0035000
      IF(TSURF(TYP).EQ.MMODE)GOTO 217                                   M0035100
  216 CONTINUE                                                          M0035200
      GOTO 90                                                           M0035300
  217 TYP=TYP+4                                                         M0035400
C                                                                       M0035500
  225 IRET=2                                                            M0035600
      TOP=TOP-2                                                         M0035700
      GOTO(230,232,234,236,                                             M0035800
     *     244,270,246,270,320,248,320,320,320,320,320),TYP             M0035900
C            CURSEG                                                     M0036000
  230 NPS=1                                                             M0036100
      PTM=6                                                             M0036200
C            SPLINE                                                     M0036300
  232 SPL=1                                                             M0036400
      NPS=NPS+1                                                         M0036500
      JMP=6                                                             M0036600
      GOTO 320                                                          M0036700
C            COMBIN                                                     M0036800
  234 NPS=1                                                             M0036900
      JMP=7                                                             M0037000
      GOTO 270                                                          M0037100
C            SEG                                                        M0037200
  236 SPL=1                                                             M0037300
      NPS=2                                                             M0037400
      PNT=2                                                             M0037500
      JMP=6                                                             M0037600
      ASSIGN 1910 TO TSEG                                               M0037700
      GOTO 270                                                          M0037800
C            PATCH                                                      M0037900
  244 MOUT=2                                                            M0038000
      JMP=2                                                             M0038100
      GOTO 270                                                          M0038200
C            SSURF/COMBIN                                               M0038300
  246 JMP=3                                                             M0038400
      GOTO 270                                                          M0038500
C            SSURF/RULED                                                M0038600
  248 SPL=1                                                             M0038700
      GOTO 320                                                          M0038800
C                                                                       M0038900
  270 IRET=1                                                            M0039000
      TOP=TOP+2                                                         M0039100
      GOTO 20                                                           M0039200
C                                                                       M0039300
  280 JJ=ISS-28                                                         M0039400
      IF(CLASS.EQ.TEMP(1))GOTO 290                                      M0039500
      DO 285 JJ=4,ISC                                                   M0039600
      IF(L.EQ.KSC(1,JJ))GOTO 290                                        M0039700
  285 CONTINUE                                                          M0039800
      ERRPT=TOP-1                                                       M0039900
      ERROR=1235                                                        M0040000
      GOTO 100                                                          M0040100
  290 K=24                                                              M0040200
      IF(MODE.NE.SCURV)K=10                                             M0040300
      NOWRDS=NOWRDS+KSC(2,JJ)-K                                         M0040400
      IF(JMP.EQ.5)NOWRDS=NOWRDS+KSC(2,JJ)+24*KSC(3,JJ)                  M0040500
      GOTO 330                                                          M0040600
C                                                                       M0040700
C                MOVE COUPLER TO LINE                                   M0040800
C                                                                       M0040900
  300 GOTO(310,330),MOUT                                                M0041000
  310 IF(CLASS.EQ.PERMID(1))MODE=MODE-50                                M0041100
      IBUFF(8:15)=IBLANK                                                M0041310
      CALL BINBCD(MODE,IBUFF(4:),NCH)                                   M0041400
      WRITE (IBUFF(1:3),'(I3)') NCH                                     M0041410
      CALL CONCAT(IBUFF,'.')                                            M0041500
      JN=NUMB(IBUFF(4:15))+NAMMAX                                       M0041600
      CALL OPCODE(MOVE)                                                 M0041700
      CALL TWOARG(INDEX,DOTTAB)                                         M0041800
      CALL TWOARG(DLR,JN)                                               M0041900
      CALL RLSLIN                                                       M0042000
      INDEX=INDEX-1                                                     M0042100
      IF(IND.GT.1)GOTO 330                                              M0042200
C                                                                       M0042300
  320 CALL OPCODE(MOVE)                                                 M0042400
      GOTO 340                                                          M0042500
  330 CALL OPCODE(REPL)                                                 M0042600
      CALL ONEARG(IND)                                                  M0042700
  340 CALL TWOARG(INDEX,DOTTAB)                                         M0042800
      CALL ARGCVT(STACK(1,TOP-1))                                       M0042900
      CALL RLSLIN                                                       M0043000
      INDEX=INDEX-IND                                                   M0043100
      GOTO(140,270),IRET                                                M0043200
C                                                                       M0043300
C                PROCESS END OF DEFINITION                              M0043400
C                                                                       M0043500
  500 IF(MINDEF.AND.FLOWS.NE.0)GOTO 510                                 M0043600
      CALL ALARM(1204,TOP,8,'SSDEF   ')                                 M0043700
      FOULUP=.TRUE.                                                     M0043800
      GOTO 520                                                          M0043900
  510 IF(MMODE.EQ.182.AND.PNT.NE.NPS)CALL ALARM(1225,0,8,'SSDEF   ')    M0044000
  520 ISS=MOD(NAMTBL(STACK(1,TOP-3)),MODHLF)                            M0044100
      IF(ACTNO.NE.105)GOTO 530                                          M0044200
      RESULT=GETTMP(ISS)                                                M0044300
      GOTO 560                                                          M0044400
  530 RESULT=STACK(1,TOP-5)                                             M0044500
      CLASS=MODULO*(NAMTBL(RESULT)/MODULO)                              M0044600
      MODE=MOD(NAMTBL(RESULT),MODHLF)                                   M0044700
      IF(CLASS.EQ.VBL(1).OR.CLASS.EQ.TEMP(1))GOTO 540                   M0044800
      NAMTBL(RESULT)=VBL(1)+ISS                                         M0044900
      CALL RESRVZ(RESULT,ISS,TXXXX(1,ISS),1)                            M0045000
      MODE=MOD(NAMTBL(RESULT),MODHLF)                                   M0045100
  540 IF(MODE.NE.ISS)GOTO 800                                           M0045200
      IF(CLASS.EQ.VBL(1).AND.INTMED.EQ.0)                               M0045300
     *                      CALL ALARM(52,TOP-5,4,'SSDEF   ')           M0045400
  560 IF(FOULUP)GOTO 810                                                M0045500
      IF(.NOT.WTFLAG)GOTO 570                                           M0045600
      CALL ALARM(1200+WTMODE,TOP,8,'SSDEF   ')                          M0045700
  570 DO 590 I=3,5                                                      M0045800
      J=-I                                                              M0045900
      IF(I-4)573,574,575                                                M0046000
  573 NMU=SPL                                                           M0046100
      GOTO 580                                                          M0046200
  574 NMU=NPS                                                           M0046300
      GOTO 580                                                          M0046400
  575 NMU=-INDEX                                                        M0046500
  580 IBUFF(8:15)=IBLANK                                                M0046600
      CALL BINBCD(NMU,IBUFF(4:),NCH)                                    M0046800
      WRITE (IBUFF(1:3),'(I3)') NCH                                     M0046810
      CALL CONCAT(IBUFF,'.')                                            M0046900
      JN=NUMB(IBUFF(4:))+NAMMAX                                         M0047000
      CALL OPCODE(MOVE)                                                 M0047100
      CALL TWOARG(J,DOTTAB)                                             M0047200
      CALL TWOARG(DLR,JN)                                               M0047300
  590 CALL RLSLIN                                                       M0047400
      IF(ISS.EQ.30)GOTO 585                                             M0047500
      CALL CALLZZ(APTXXX(88))                                           M0047600
      GOTO 595                                                          M0047700
  585 I=90                                                              M0047800
      IF(MMODE.EQ.200)I=86                                              M0047900
      CALL CALLZZ(APTXXX(I))                                            M0048000
  595 CALL ARGCVT(RESULT)                                               M0048100
      DO 600 I=1,3                                                      M0048200
  600 CALL ARGCVT(ITMP(1,I))                                            M0048300
      CALL RLSLIN                                                       M0048400
C                                                                       M0048500
C                STORAGE OF THE SIZE                                    M0048600
C                                                                       M0048700
      GOTO(610,620,630,640,650,660,670),JMP                             M0048800
C**** SSURF/                   SMESH                                    M0048900
  610 IF(SPL.EQ.2.OR.NPS.EQ.2)KN=47                                     M0049000
      NOWRDS=10+KN*(SPL-1)*(NPS-1)                                      M0049100
      GOTO 700                                                          M0049200
C**** SSURF/                   PATCH                                    M0049300
  620 NOWRDS=8+65*NPATCH                                                M0049400
      GOTO 700                                                          M0049500
C**** SSURF/                   COMBIN                                   M0049600
  630 NOWRDS=NOWRDS+10                                                  M0049700
      GOTO 700                                                          M0049800
C**** SSURF/                   REVOLV                                   M0049900
  640 NOWRDS=10+222*NOWRDS/24                                           M0050000
      GOTO 700                                                          M0050100
C**** SSURF/                   GENCUR,RULED                             M0050200
C****                          TRANSL,SCALE,XYROT,YZROT,ZXROT           M0050300
  650 NOWRDS=10+NOWRDS                                                  M0050400
      GOTO 700                                                          M0050500
  660 IF(NOWRDS.GT.0)GOTO 670                                           M0050600
C**** SCURV/                   CURSEG,SPLINE,SEG                        M0050700
      NOWRDS=72                                                         M0050800
      IF(SEGMS.GT.0)NOWRDS=144+6*SEGMS                                  M0050900
      GOTO 700                                                          M0051000
C**** SCURV/                   COMBIN                                   M0051100
  670 NOWRDS=NOWRDS+24                                                  M0051200
C                                                                       M0051300
  700 IF(CLASS.NE.TEMP(1))GOTO 720                                      M0051400
      J=ISS-28                                                          M0051500
      IF(NOWRDS.GT.KSC(2,J))KSC(2,J)=NOWRDS                             M0051600
      IF(SEGMS.GT.KSC(3,J))KSC(3,J)=SEGMS                               M0051700
      GOTO 760                                                          M0051800
  720 ISC=ISC+1                                                         M0051900
      IF(ISC.LE.300)GOTO 740                                            M0052000
      CALL ALARM(34,TOP-5,8,'SSDEF   ')                                 M0052100
      GOTO 810                                                          M0052200
  740 KSC(1,ISC)=RESULT                                                 M0052300
      KSC(2,ISC)=NOWRDS                                                 M0052400
      KSC(3,ISC)=SEGMS                                                  M0052500
  760 IF(NOWRDS.LE.MAXSIZ(2)) GOTO 820                                  M0052600
      IF(NOWRDS.GE.MAXSIZ(1)) GOTO 780                                  M0052700
      MAXSIZ(2)=NOWRDS                                                  M0052800
      GOTO 820                                                          M0052900
  780 MAXSIZ(2)=MAXSIZ(1)                                               M0053000
      MAXSIZ(1)=NOWRDS                                                  M0053100
      GOTO 820                                                          M0053200
C                                                                       M0053300
C                ERROR PROCESSING GENERATE CALL TO APT094               M0053400
C                                                                       M0053500
  800 CALL ALARM(1001,TOP-5,8,'SSDEF   ')                               M0053600
  810 CALL CALLZZ(APTXXX(68))                                           M0053700
      CALL TWOARG(DLR,FOUR)                                             M0053800
      CALL ARGCVT(RESULT)                                               M0053900
      CALL TWOARG(NOUGHT,DOTTAB)                                        M0054000
      CALL RLSLIN                                                       M0054100
C                                                                       M0054200
C                IF NESTED DEFINITION LOAD SAVED DATA                   M0054300
C                                                                       M0054400
  820 IF(ACTNO-104)150,830,840                                          M0054500
  830 TOP=TOP-6                                                         M0054600
      GOTO 860                                                          M0054700
  840 TOP=TOP-4                                                         M0054800
  860 STACK(1,TOP)=RESULT                                               M0054900
      CLASS=NAMTBL(RESULT)/MODULO                                       M0055000
      STACK(2,TOP)=META(CLASS)                                          M0055100
      IF(JSAVE.EQ.0)GOTO 890                                            M0055200
      IF(TOP.GT.SAVE(JSAVE,21))GOTO 890                                 M0055300
      DO 880 I=1,27                                                     M0055400
  880 STK(1,I)=SAVE(JSAVE,I)                                            M0055500
      JSAVE=JSAVE-1                                                     M0055600
      GOTO 150                                                          M0055700
  890 BIGCNT=0                                                          M0055800
      GOTO 150                                                          M0055900
C                                                                       M0056000
C                NESTED DEFINITION, SAVE DATA                           M0056100
C                                                                       M0056200
  900 IF(JSAVE.LT.2)GOTO 910                                            M0056300
      CALL ALARM(1228,TOP-5,8,'SSDEF   ')                               M0056400
      FOULUP=.TRUE.                                                     M0056500
      MINDEF=.TRUE.                                                     M0056600
      GOTO 140                                                          M0056700
  910 JSAVE=JSAVE+1                                                     M0056800
      DO 920 I=1,27                                                     M0056900
  920 SAVE(JSAVE,I)=STK(1,I)                                            M0057000
      TP=TP+1                                                           M0057100
      GOTO 1                                                            M0057200
C                                                                       M0057300
C       ****  POINT,VECTOR,SCALAR OR SURFACES EXPECTED ****             M0057400
C                                                                       M0057500
 1000 COUNT=COUNT+1                                                     M0057600
      IF(COUNT.EQ.MAXCNT)WTFLAG=.FALSE.                                 M0057700
      IF(MAXCNT-10)1030,1005,1020                                       M0057800
 1005 IF(MMODE.NE.193)GOTO 1010                                         M0057810
      IF(MODE.EQ.POINT)GOTO 1025                                        M0057820
      WTMODE=VECTOR                                                     M0057830
      WTFLAG=.FALSE.                                                    M0057840
      GOTO 1025                                                         M0057850
 1010 IF(COUNT.EQ.9)GOTO 1030                                           M0057900
      IF(MODE.EQ.WTMODE)GOTO 1025                                       M0058000
      WTMODE=VECTOR                                                     M0058100
      IF(MMODE.NE.192)WTMODE=SSURF                                      M0058200
      GOTO 1025                                                         M0058300
 1020 WTMODE=SPLARY(COUNT)                                              M0058400
 1025 IF(.NOT.WTFLAG)MAXCNT=1                                           M0058500
 1030 ERROR=1200+WTMODE                                                 M0058600
      IF(MODE.NE.WTMODE)CALL ALARM(ERROR,TOP-1,8,'SSDEF   ')            M0058700
      IF(MODE.NE.MATRIX)GOTO 1040                                       M0058800
      IF(NOMTRX)CALL ALARM(1216,TOP-1,4,'SSDEF   ')                     M0058900
      IND=12                                                            M0059000
      IF(STACK(1,TOP).NE.COMMA(2))GOTO 330                              M0059100
      FOULUP=.TRUE.                                                     M0059200
      CALL ALARM(1217,TOP,8,'SSDEF   ')                                 M0059300
      GOTO 330                                                          M0059400
 1040 GOTO TSEG,(1100,1910)                                             M0059500
C                                                                       M0059600
C       ****  SCURV/CURSEG-SPLINE  ****                                 M0059700
C                                                                       M0059800
 1080 COUNT=0                                                           M0059900
      WTFLAG=.TRUE.                                                     M0060000
 1090 TP=TP-1                                                           M0060100
      GOTO 1110                                                         M0060200
C                                                                       M0060300
 1100 CNT=0                                                             M0060400
      SPLARY(1)=0                                                       M0060500
 1110 IND=1                                                             M0060600
      IF(CLASS.NE.PERMID(1))IND=TXXXX(1,MODE)                           M0060700
      IF(IND.EQ.2)GOTO 280                                              M0060800
      GOTO 300                                                          M0060900
C                                                                       M0061000
 1200 IF(.NOT.CRSFLG.OR.PNT.LT.2)GOTO 1210                              M0061100
      ESTACK(TOP-1)=ERRPOS(102)                                         M0061200
      CALL ALARM(1211,TOP-1,4,'SSDEF   ')                               M0061300
 1210 CRSFLG=.FALSE.                                                    M0061400
      GOTO 1310                                                         M0061500
C                                                                       M0061600
 1300 NPS=NPS+1                                                         M0061700
 1310 MINDEF=.TRUE.                                                     M0061800
 1320 PNT=PNT+1                                                         M0061900
      IF(PNT.EQ.PTM)CALL ALARM(1201,TOP-1,4,'SSDEF   ')                 M0062000
      CNT=0                                                             M0062100
      SPLARY(1)=0                                                       M0062200
      GOTO 1090                                                         M0062300
C                                                                       M0062400
 1400 WTMODE=VECTOR                                                     M0062500
      ERROR=1210                                                        M0062600
      IF(MODE.NE.187)GOTO 1510                                          M0062700
      ERRPOS(102)=ESTACK(TOP-1)                                         M0062800
      CRSFLG=.TRUE.                                                     M0062900
      GOTO 1510                                                         M0063000
C                                                                       M0063100
 1500 WTMODE=REAL                                                       M0063200
      ERROR=1209                                                        M0063300
 1510 DO 1520 I=1,CNT                                                   M0063400
      IF(SPLARY(I).NE.MODE)GOTO 1520                                    M0063500
      CALL ALARM(ERROR,TOP-1,4,'SSDEF   ')                              M0063600
      GOTO 1530                                                         M0063700
 1520 CONTINUE                                                          M0063800
      CNT=CNT+1                                                         M0063900
      SPLARY(CNT)=MODE                                                  M0064000
 1530 MAXCNT=1                                                          M0064100
      GOTO 1080                                                         M0064200
C                                                                       M0064300
C                   **** SCURV-SSURF/COMBIN  ****                       M0064400
C                                                                       M0064500
 1600 MINDEF=.TRUE.                                                     M0064600
      GOTO 1110                                                         M0064700
C                                                                       M0064800
 1700 IF(ISS.EQ.SSURF)GOTO 1090                                         M0064900
      NPS=NPS+1                                                         M0065000
      PNT=NPS+1                                                         M0065100
      IF(NPS.EQ.PTM)CALL ALARM(1213,TOP-1,4,'SSDEF   ')                 M0065200
      GOTO 1090                                                         M0065300
C                                                                       M0065400
C                   ****  SCURV/SEG  ****                               M0065500
C                                                                       M0065600
 1800 CNT=CNT+1                                                         M0065700
      ERROR=1212                                                        M0065800
      ERRPT=TOP-1                                                       M0065900
      GOTO(1810,1820,1830,110),CNT                                      M0066000
 1810 CALL CALLZZ(APTXXX(86))                                           M0066100
      CALL ARGCVT(STACK(1,TOP-7))                                       M0066200
      CALL ARGCVT(STACK(1,TOP-1))                                       M0066300
      CALL ARGCVT(ZEROPT)                                               M0066400
      CALL ARGCVT(ONE)                                                  M0066500
      CALL RLSLIN                                                       M0066600
 1820 II=STACK(1,TOP-1)                                                 M0066700
      GOTO 140                                                          M0066800
 1830 MINDEF=.TRUE.                                                     M0066900
      IF(COUNT.GT.0)GOTO 1820                                           M0067000
      COUNT=COUNT+1                                                     M0067100
 1840 COUNT=COUNT+1                                                     M0067200
 1850 CALL CALLZZ(APTXXX(86))                                           M0067300
      CALL ARGCVT(STACK(1,TOP-7))                                       M0067400
      CALL ARGCVT(II)                                                   M0067500
      CALL ARGCVT(STACK(1,TOP-1))                                       M0067600
      CALL ARGCVT(TWO)                                                  M0067700
      CALL RLSLIN                                                       M0067800
      II=-II                                                            M0067900
      GOTO 140                                                          M0068000
C                                                                       M0068100
 1900 TP=TP-2                                                           M0068200
      IF(COUNT.GE.2)GOTO 1820                                           M0068300
      GOTO 1840                                                         M0068400
 1910 IF(II.LT.0)GOTO 1820                                              M0068500
      GOTO 1850                                                         M0068600
C                                                                       M0068700
C                   ****  FLOW AND SEG SECTION ****                     M0068800
C                                                                       M0068900
 2000 FLOWS=0                                                           M0069000
 2010 IF(MINDEF)GOTO 2020                                               M0069100
      FOULUP=.TRUE.                                                     M0069200
      CALL ALARM(1204,TOP-1,8,'SSDEF   ')                               M0069300
 2020 GOTO TSEG,(1080,1100,1910)                                        M0069400
C                                                                       M0069500
 2100 FLWARG=2                                                          M0069600
      IF(MODE.EQ.117)FLWARG=3                                           M0069700
      GOTO 2210                                                         M0069800
C                                                                       M0069900
 2200 FLWARG=5                                                          M0070000
      IF(MODE.EQ.204)FLWARG=6                                           M0070100
      IF(JMP.EQ.5)CALL ALARM(1206,TOP-1,8,'SSDEF   ')                   M0070200
      JMP=FLWARG                                                        M0070300
 2210 FLOWS=FLOWS+1                                                     M0070400
      IF(FLOWS.EQ.PNT)CALL ALARM(1205,TOP-1,4,'SSDEF   ')               M0070500
 2220 COUNT=0                                                           M0070600
      MAXCNT=2                                                          M0070700
 2240 WTMODE=REAL                                                       M0070800
 2250 WTFLAG=.TRUE.                                                     M0070900
      GOTO 2640                                                         M0071000
C                                                                       M0071100
 2300 IF(COUNT.NE.2.OR.FLWARG.LT.3)CALL ALARM(1206,TOP-1,8,'SSDEF   ')  M0071200
      COUNT=2                                                           M0071300
      MAXCNT=3                                                          M0071400
      WTMODE=REAL                                                       M0071500
      GOTO 2410                                                         M0071600
C                                                                       M0071700
 2400 IF(COUNT.GT.3.OR.FLWARG.LT.5)CALL ALARM(1206,TOP-1,8,'SSDEF   ')  M0071800
      IF((FLWARG+MODE).EQ.223)CALL ALARM(1206,TOP-1,8,'SSDEF   ')       M0071900
      JMP=0                                                             M0072000
      WTMODE=POINT                                                      M0072100
      COUNT=3                                                           M0072200
      MAXCNT=COUNT+MODE/110                                             M0072300
 2410 WTFLAG=.TRUE.                                                     M0072400
      TP=TP-1                                                           M0072500
      GOTO 140                                                          M0072600
C                                                                       M0072700
 2500 IF(FLWARG.LT.5.OR.FLWARG.LE.COUNT)CALL ALARM(1206,TOP-1,8,        M0072800
     *                                  'SSDEF   ')                     M0072900
      WTMODE=VECTOR                                                     M0073000
      MAXCNT=FLWARG                                                     M0073100
      COUNT=MAXCNT-1                                                    M0073200
      GOTO 2410                                                         M0073300
C                                                                       M0073400
 2600 IF(MODE-VECTOR)2610,2620,2630                                     M0073500
 2610 COUNT=COUNT+1                                                     M0073600
      IF(COUNT.LT.4)COUNT=4                                             M0073700
      JMP=0                                                             M0073800
      IF(COUNT.GT.(FLWARG-1))CALL ALARM(1207,TOP-1,4,'SSDEF   ')        M0073900
      GOTO 2640                                                         M0074000
 2620 IF(FLWARG.LT.5)CALL ALARM(1207,TOP-1,4,'SSDEF   ')                M0074100
      IF(FLWARG.EQ.6.AND.COUNT.EQ.4)CALL ALARM(1207,TOP-1,4,'SSDEF   ') M0074200
      COUNT=COUNT+1                                                     M0074300
      IF(COUNT.LT.FLWARG)COUNT=FLWARG                                   M0074400
      IF(COUNT.GT.FLWARG)CALL ALARM(1207,TOP-1,4,'SSDEF   ')            M0074500
      GOTO 2640                                                         M0074600
 2630 IF(COUNT.GT.2.OR.FLWARG.LT.3)CALL ALARM(1207,TOP-1,4,'SSDEF   ')  M0074700
      COUNT=3                                                           M0074800
 2640 TP=TP-1                                                           M0074900
      GOTO TSEG,(1100,1910)                                             M0075000
C                                                                       M0075100
 2700 SEGMS=0                                                           M0075200
      MINDEF=.FALSE.                                                    M0075300
      IF(MODE.EQ.MMODE)GOTO 140                                         M0075400
      GOTO 1110                                                         M0075500
C                                                                       M0075600
 2800 SEGMS=SEGMS+1                                                     M0075700
      MINDEF=.TRUE.                                                     M0075800
      IF(SEGMS.EQ.PNT)CALL ALARM(1208,TOP-1,4,'SSDEF   ')               M0075900
      GOTO 2220                                                         M0076000
C                                                                       M0076100
C                   ****  TRFORM,MATRIX  ****                           M0076200
C                                                                       M0076300
 2900 WTMODE=MATRIX                                                     M0076400
      ITMP(1,2)=L                                                       M0076500
      MAXCNT=1                                                          M0076600
      MOUT=1                                                            M0076700
      ASSIGN 1080 TO TSEG                                               M0076800
      GOTO 2010                                                         M0076900
C                                                                       M0077000
C                   ****  SSURF/SMESH  ****                             M0077100
C                                                                       M0077200
 3000 IF(MMODE.EQ.181)GOTO 140                                          M0077300
      IF(MODE.EQ.193)SPM=3                                              M0077400
      IF(HMODE.GT.83.AND.HMODE.LT.99)NOMTRX=.TRUE.                      M0077500
      JMP=1                                                             M0077600
      GOTO 140                                                          M0077700
C                                                                       M0077800
 3100 MINDEF=.FALSE.                                                    M0077900
      SPL=SPL+1                                                         M0078000
      CNT=0                                                             M0078100
      SPLARY(1)=0                                                       M0078200
      IF(SPL-2)320,3110,3120                                            M0078300
 3110 NPS=PNT                                                           M0078400
      IF(NPS.LT.2)CALL ALARM(1225,TOP-1,8,'SSDEF   ')                   M0078500
      GOTO 3130                                                         M0078600
 3120 IF(SPL.EQ.SPM)CALL ALARM(1203,TOP-1,4,'SSDEF   ')                 M0078700
      IF(PNT.NE.NPS)CALL ALARM(1225,TOP-1,8,'SSDEF   ')                 M0078800
 3130 PNT=1                                                             M0078900
      TP=TP-2                                                           M0079000
      GOTO 320                                                          M0079100
C                                                                       M0079200
 3200 IF((PNT+1).EQ.NPS)GOTO 1310                                       M0079300
      GOTO 1320                                                         M0079400
C                                                                       M0079500
C                   ****  SSURF/PATCH  ****                             M0079600
C                                                                       M0079700
 3300 NPATCH=NPATCH+1                                                   M0079800
      MINDEF=.TRUE.                                                     M0079900
      DO 3310 I=1,16                                                    M0080000
 3310 SPLARY(I)=POINT                                                   M0080100
      IF(HMODE-184)3320,3360,3350                                       M0080200
 3320 SPLARY(3)=VECTOR                                                  M0080300
      SPLARY(4)=VECTOR                                                  M0080400
      DO 3340 I=7,16                                                    M0080500
 3340 SPLARY(I)=VECTOR                                                  M0080600
      GOTO 3360                                                         M0080700
 3350 IF(NPATCH.EQ.2)CALL ALARM(1215,TOP-1,4,'SSDEF   ')                M0080800
 3360 MAXCNT=16                                                         M0080900
      COUNT=0                                                           M0081000
      WTFLAG=.TRUE.                                                     M0081100
      TP=TP-1                                                           M0081200
      SPL=NPATCH                                                        M0081300
      GOTO 320                                                          M0081400
C                                                                       M0081500
C                   ****  SSURF/REVOLV-RULED  ****                      M0081600
C                                                                       M0081700
 3400 IF(MMODE.EQ.192)GOTO 3430                                         M0081800
      SPL=0                                                             M0081900
      MINDEF=.TRUE.                                                     M0082100
      GOTO 3440                                                         M0082300
 3430 JMP=4                                                             M0082400
      STK(2,TP-1)=STK(2,TP)                                             M0082500
 3440 TP=TP-1                                                           M0082600
      WTMODE=POINT                                                      M0082700
      COUNT=8                                                           M0082800
      MAXCNT=10                                                         M0082900
      WTFLAG=.TRUE.                                                     M0083000
      GOTO 1110                                                         M0083100
C                                                                       M0083200
 3500 WTMODE=REAL                                                       M0083300
      MAXCNT=2                                                          M0083400
      MINDEF=.TRUE.                                                     M0083500
      CNT=0                                                             M0083600
      GOTO 1080                                                         M0083700
C                                                                       M0083800
C                   ****  SSURF/GENCUR  ****                            M0083900
C                                                                       M0084000
 3600 IF(CLASS.EQ.PERMID(1))GOTO 3610                                   M0084100
      PNT=PNT+1                                                         M0084200
      IF(PNT.EQ.PTM.AND.MMODE.EQ.205)CALL ALARM(1201,TOP-1,4,'SSDEF   ')M0084300
      TP=TP-1                                                           M0084400
      GOTO 1600                                                         M0084500
 3610 MINDEF=.FALSE.                                                    M0084600
      IF(CNT.EQ.TP)CALL ALARM(1212,TOP-1,4,'SSDEF   ')                  M0084700
      CNT=TP                                                            M0084800
      GOTO 1090                                                         M0084900
C                                                                       M0085000
C               ****  SSURF/TRANSL,SCALE,XYTRANS,YZTRANS,ZXTRANS ***    M0085100
C                                                                       M0085200
 3700 WTMODE=SCURV                                                      M0085300
      MINDEF=.TRUE.                                                     M0085310
      MAXCNT=1                                                          M0085320
      GOTO 1080                                                         M0085400
C                                                                       M0085500
      END                                                               M0085600
**** SOURCE FILE : M0006688.V09   ***
*
C                                                                       STR00100
C              FORTRAN SUBROUTINE START                                 STR00200
C                                                                       STR00300
C LINKAGE      SUBROUTINE  START                                        STR00400
C                                                                       STR00500
C          SUBSIDIARIES                  CALLED BY                      STR00600
C          TYPE          ENTRY           MAIN                           STR00700
C          SUBROUTINE    FOUTXX                                         STR00800
C          SUBROUTINE    RECOG                                          STR00900
C          SUBROUTINE    TAPOP                                          STR01000
C                                                                       STR01100
      SUBROUTINE  START                                                 STR01200
C                                                                       STR01300
      IMPLICIT INTEGER (A-Z)                                            STR01400
C                                                                       STR01500
C        1.    NAME TABLE AND TABLE LIMITS                              STR01600
C                                                                       STR01700
      INCLUDE 'NAMETB.INC'                                              STR01810
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                STR01850
C CNAMTB:      NAME TABLE OR DICTIONARY                                 STR01950
C NUMBST:      NAMTBL INDEX OF BEGINNING OF NUMBER SECTION              STR02000
C NUMBND:      NAMTBL INDEX OF END OF NUMBER SECTION                    STR02200
C                                                                       STR02600
C       33.    SYMBOLIC FILE DEFINITIONS                                STR02700
C                                                                       STR02800
      INCLUDE 'SYMFIL.INC'                                              STR02910
C VLFILE:      VERIFICATION LISTING FILE                                STR03300
C                                                                       STR03500
C       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE             STR03600
C                                                                       STR03700
      COMMON/BGEOM/BGEOM                                                STR03800
      DIMENSION BGEOM(4)                                                STR03900
C IFBNDS:      VALUE 1 IF BOUNDED GEOMETRY IS INCLUDED IN PART PROGRAM  STR04000
      EQUIVALENCE (IFBNDS,BGEOM(1))                                     STR04100
C IFDUMP:      VALUE 0=NO CFSAVE COMMAND,1=ALL,2=SCALAR,3=GEOM PROGRAM  STR04200
      EQUIVALENCE (IFDUMP,BGEOM(2))                                     STR04300
C                                                                       STR04400
C       40.    PARAMETERS REQUIRED BY SUPERVISOR                        STR04500
C                                                                       STR04600
      INCLUDE 'SUPER.INC'                                               STR04650
C                                                                       STR05400
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          STR05500
C                                                                       STR05600
      COMMON/NTBL/NTBL                                                  STR05700
      DIMENSION NTBL(6)                                                 STR05800
C NMOD:        NUMBER OF ENTRIES PERMITTED IN INTERNAL NUMBER TABLE     STR05900
      EQUIVALENCE (NMOD,NTBL(1))                                        STR06000
C NNDX:        CONVERSION BETWEEN ABS. AND VIRTUAL NUMBER TABLE POINTER STR06100
      EQUIVALENCE (NNDX,NTBL(3))                                        STR06200
C*                                                                      STR06300
      CHARACTER*12 B                                                    STR06500
      DATA B/'0       ISN' /                                            STR06700
C**                                                                     STR06800
C                                                                       STR07600
      DO 10 I=NUMBST,NUMBND                                             STR07700
   10 CNUMTB(I)=' '                                                     STR07800
      NMOD=NUMBND-NUMBST+1                                              STR07900
      NNDX=0                                                            STR08000
      IFDUMP=0                                                          STR08100
      IFBNDS=0                                                          STR08200
C...     PUT APPROPRIATE HEADINGS ON VLFILE AND DIAGNOSTIC FILE         STR08300
      CALL FOUTXX(VLFILE,B,12)                                          STR08400
C                                                                       STR08500
      CALL TAPOP(ELFIL1,-1)                                             STR08600
      CALL TAPOP(ELFIL2,-1)                                             STR08700
      CALL RECOG                                                        STR08800
C                                                                       STR08900
C....    INDICATE NORMAL ENDING                                         STR09000
      ABEND=.FALSE.                                                     STR09100
C                                                                       STR09800
      RETURN                                                            STR09900
       END                                                              STR10000
**** SOURCE FILE : M0006689.V03   ***
*
C                                                                       SUB00100
C              FORTRAN SUBROUTINE SUBCOD                                SUB00200
C                                                                       SUB00300
C LINKAGE      SUBROUTINE SUBCOD (TPX)                                  SUB00400
C                                                                       SUB00500
C          SUBSIDIARIES                  CALLED BY                      SUB00600
C          TYPE          ENTRY           TYPE          ENTRY            SUB00700
C          LOGICAL FCT.  IFTMP           SUBROUTINE    RECOG            SUB00800
C          SUBROUTINE    ONEARG                                         SUB00900
C          SUBROUTINE    OPCODE                                         SUB01000
C          SUBROUTINE    PUTTMP                                         SUB01100
C          SUBROUTINE    RLSLIN                                         SUB01200
C          INTEGER FCT.  GETTMP                                         SUB01300
C          SUBROUTINE    ALARM                                          SUB01400
C          INTEGER FCT.  MODE                                           SUB01500
C          SUBROUTINE    ARGCVT                                         SUB01600
C                                                                       SUB01700
      SUBROUTINE SUBCOD (TPX)                                           SUB01800
C                                                                       SUB01900
      IMPLICIT INTEGER (A-Z)                                            SUB02000
C                                                                       SUB02100
C              FUNCTION DECLARATION                                     SUB02200
C                                                                       SUB02300
      LOGICAL IFTMP                                                     SUB02400
C                                                                       SUB02500
C        1.    NAME TABLE AND TABLE LIMITS                              SUB02600
C                                                                       SUB02700
      INCLUDE 'NAMETB.INC'                                              SUB02810
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                SUB02850
C CNAMTB:      NAME TABLE OR DICTIONARY                                 SUB02950
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     SUB03000
C                                                                       SUB03400
C        2.    STACK AND POINTER STORAGE                                SUB03500
C                                                                       SUB03600
      COMMON/STKLST/STKLST                                              SUB03700
      DIMENSION STKLST(300),STACK(2,99)                                 SUB03800
C TOP:         POINTER TO LAST STACK ENTRY                              SUB03900
      EQUIVALENCE (TOP,STKLST(1))                                       SUB04000
C STACK:       WORKING STACK                                            SUB04100
      EQUIVALENCE (STACK(1,1),STKLST(4))                                SUB04200
C                                                                       SUB04300
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      SUB04400
C                                                                       SUB04500
      COMMON/CODE/CODE                                                  SUB04600
      DIMENSION CODE(150),TEMP(2),VBL(2)                                SUB04700
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        SUB04800
      EQUIVALENCE (TEMP(1),CODE(33))                                    SUB04900
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        SUB05000
      EQUIVALENCE (VBL(1),CODE(61))                                     SUB05100
C                                                                       SUB05200
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         SUB05300
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    SUB05400
      COMMON/TMP/TXXXX                                                  SUB05500
      DIMENSION TXXXX(2,32)                                             SUB05600
C                                                                       SUB05700
C       15.    ARRAY LIMIT STORAGE                                      SUB05800
C                                                                       SUB05900
      COMMON/SBSCPT/SBSCPT                                              SUB06000
      DIMENSION SBSCPT(101),RANGE(100)                                  SUB06100
C RNGPT:       POINTER TO NEXT RANGE ENTRY                              SUB06200
      EQUIVALENCE (RNGPT,SBSCPT(1))                                     SUB06300
C RANGE:       STORAGE FOR APT RESERVE STATEMENT INFORMATION            SUB06400
      EQUIVALENCE (RANGE(1),SBSCPT(2))                                  SUB06500
C                                                                       SUB06600
C       16.    LITERALS FOR I. L. OPERATION CODES                       SUB06700
C                                                                       SUB06800
      COMMON/IL/IL                                                      SUB06900
      DIMENSION IL(21)                                                  SUB07000
C CVTSUB:      CONTAINS COMMAND CODE (13) FOR CVTSUB COMMAND            SUB07100
      EQUIVALENCE (CVTSUB,IL(13))                                       SUB07200
C                                                                       SUB07300
C       17.    MODE CODES                                               SUB07400
C                                                                       SUB07500
      COMMON/MODX/MODX                                                  SUB07600
      DIMENSION MODX(32)                                                SUB07700
C SUBSCR:      MODE CODE (24) FOR SUBSCRIPT                             SUB07800
      EQUIVALENCE (SUBSCR,MODX(24))                                     SUB07900
C                                                                       SUB08000
C       22.    MACRO PROCESSING VARIABLES                               SUB08100
C                                                                       SUB08200
      COMMON/MACXX1/MACXX1                                              SUB08300
      LOGICAL ILHLT                                                     SUB08400
      DIMENSION MACXX1(71)                                              SUB08500
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              SUB08600
      EQUIVALENCE (ILHLT,MACXX1(14))                                    SUB08700
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        SUB08800
      EQUIVALENCE (INTMED,MACXX1(22))                                   SUB08900
C                                                                       SUB09000
C       29.    CLASS CODE MODULI                                        SUB09100
C                                                                       SUB09200
      COMMON/MODULI/MODULI                                              SUB09300
      DIMENSION MODULI(2)                                               SUB09400
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    SUB09500
      EQUIVALENCE (MODULO,MODULI(1))                                    SUB09600
C MODHLF:      NORMAL MODE CODE LIMIT 500                               SUB09700
      EQUIVALENCE (MODHLF,MODULI(2))                                    SUB09800
C                                                                       SUB09900
C       37.    INCLUSIVE SUBSCRIPT VARIABLES                            SUB10000
C                                                                       SUB10100
      COMMON/ISSCOM/ISSCOM                                              SUB10200
      LOGICAL ISSFL                                                     SUB10300
      DIMENSION ISSCOM(9),ISSTRM(2)                                     SUB10400
C ISSMOD:      MODE OF THE INCLUSIVE SUBSCRIPTED VARIABLE               SUB10500
      EQUIVALENCE (ISSMOD,ISSCOM(5))                                    SUB10600
C ISSFL:       TRUE DURING INCLUSIVE SUBSCRIPT PROCESSING               SUB10700
      EQUIVALENCE (ISSFL,ISSCOM(6))                                     SUB10800
C ISSTRM:      SAVES THE STACK TOP ITEMS DURING SUBSCRIPT PROCESSING    SUB10900
      EQUIVALENCE (ISSTRM(1),ISSCOM(8))                                 SUB11000
C*                                                                      SUB11100
C ARGUMENTS    TPX       WORKING STACK (STACK) INDEX WHICH              SUB11200
C                        POINTS TO THE VARIABLE NAME OF A               SUB11300
C**                      SUBSCRIPTED VARIABLE.                          SUB11400
C                                                                       SUB11500
C     GET RESULT CELL                                                   SUB11600
      RSLT=GETTMP(SUBSCR)                                               SUB11700
      NAMTBL(RSLT)=TEMP(1)+SUBSCR                                       SUB11800
C                                                                       SUB11900
C     FIND POSITION IN RANGE TABLE                                      SUB12000
      IF(RNGPT.EQ.1)GO TO 62                                            SUB12100
      J=RNGPT-2                                                         SUB12200
      N=STACK(1,TPX)                                                    SUB12300
      DO 10 I=1,J,2                                                     SUB12400
      IF(RANGE(I).EQ.N)GO TO 20                                         SUB12500
   10 CONTINUE                                                          SUB12600
      GO TO 60                                                          SUB12700
C                                                                       SUB12800
C     GENERATE CODE                                                     SUB12900
   20 II=STACK(1,TPX+2)                                                 SUB13000
      IF(II.GT.NAMMAX)GO TO 30                                          SUB13100
      IF(IFTMP(II))CALL PUTTMP(MOD(NAMTBL(II),MODULO))                  SUB13200
   30 I=MODE(N)                                                         SUB13300
      IF(I.EQ.0)GO TO 65                                                SUB13400
      IF(ISSFL)ISSMOD=I                                                 SUB13500
      CALL OPCODE(CVTSUB)                                               SUB13600
      CALL ARGCVT (RSLT)                                                SUB13700
      CALL ARGCVT(N)                                                    SUB13800
      CALL ARGCVT (STACK(1,TPX+2))                                      SUB13900
      CALL ONEARG(TXXXX(1,I))                                           SUB14000
      CALL RLSLIN                                                       SUB14100
C                                                                       SUB14200
C...       MODIFY NAMTBL ENTRY TO MODE + 50                             SUB14300
C                                                                       SUB14400
      NAMTBL(RSLT) = TEMP(1)+I+MODHLF                                   SUB14500
C                                                                       SUB14600
C     MODIFY STACK                                                      SUB14700
      STACK (1,TPX)=RSLT                                                SUB14800
   90 RETURN                                                            SUB14900
C                                                                       SUB15000
C     ERROR                                                             SUB15100
   60 IF(INTMED)61,62,63                                                SUB15200
   61 ILHLT=.FALSE.                                                     SUB15300
      CALL ALARM(1013,TPX,8,'SUBCOD  ')                                 SUB15400
      ILHLT=.TRUE.                                                      SUB15500
      GO TO 72                                                          SUB15600
   63 M=NAMTBL(N)                                                       SUB15700
      J=(M/MODULO)*MODULO                                               SUB15800
      IF(J.EQ.VBL(1).AND.(M-J).GT.MODHLF)GO TO 20                       SUB15900
   62 IERROR=1013                                                       SUB16000
      GO TO 70                                                          SUB16100
   65 IERROR=1014                                                       SUB16200
   70 CALL ALARM(IERROR,TPX,8,'SUBCOD  ')                               SUB16300
   72 IF(.NOT.ISSFL) GO TO 90                                           SUB16400
      STACK(1,TOP)=ISSTRM(1)                                            SUB16500
      STACK(2,TOP)=ISSTRM(2)                                            SUB16600
      ISSFL=.FALSE.                                                     SUB16700
      GO TO 90                                                          SUB16800
       END                                                              SUB16900
**** SOURCE FILE : M0004613.W03   ***
*
C                                                                       00000100
C     FORTRAN SUBROUTINE ERRWRD                                         00000200
C                                                                       00000300
      BLOCK DATA TRERRW                                                 00000400
C                                                                       00000500
      INCLUDE 'ERRTXT.INC'                                              00000600
C                                                                       00000700
      INTEGER A,B                                                       00000800
      CHARACTER*4 E                                                     00000900
      DIMENSION A(ERND),B(ERND),E(ERRDM)                                00001000
      EQUIVALENCE (A(1),ERRAD1(1))                                      00001100
      EQUIVALENCE (B(1),ERRAD2(1))                                      00001200
      EQUIVALENCE (E(1),ERRTXT(1))                                      00001300
                                                                        00001400
C                                                                       00001500
C                                                                       00001700
      DATA A(  1),A(  2),A(  3),A(  4)/      1,      2,      3,      4/ 00001800
      DATA A(  5),A(  6),A(  7),A(  8)/      7,      9,     10,     12/ 00001900
      DATA A(  9),A( 10),A( 11),A( 12)/     13,     14,     15,     16/ 00002000
      DATA A( 13),A( 14),A( 15),A( 16)/     17,     18,     19,     20/ 00002100
      DATA A( 17),A( 18),A( 19),A( 20)/     21,     22,     24,     26/ 00002200
      DATA A( 21),A( 22),A( 23),A( 24)/     27,     28,     29,     31/ 00002300
      DATA A( 25),A( 26),A( 27),A( 28)/     32,     34,     35,     36/ 00002400
      DATA A( 29),A( 30),A( 31),A( 32)/     37,     38,     40,     50/ 00002500
      DATA A( 33),A( 34),A( 35),A( 36)/     52,     53,     55,     56/ 00002600
      DATA A( 37),A( 38),A( 39),A( 40)/     71,     72,     73,     74/ 00002700
      DATA A( 41),A( 42),A( 43),A( 44)/   1001,   1002,   1003,   1004/ 00002800
      DATA A( 45),A( 46),A( 47),A( 48)/   1005,   1007,   1008,   1009/ 00002900
      DATA A( 49),A( 50),A( 51),A( 52)/   1010,   1011,   1012,   1013/ 00003000
      DATA A( 53),A( 54),A( 55),A( 56)/   1014,   1015,   1016,   1017/ 00003100
      DATA A( 57),A( 58),A( 59),A( 60)/   1018,   1019,   1020,   1021/ 00003200
      DATA A( 61),A( 62),A( 63),A( 64)/   1022,   1023,   1024,   1025/ 00003300
      DATA A( 65),A( 66),A( 67),A( 68)/   1026,   1028,   1029,   1032/ 00003400
      DATA A( 69),A( 70),A( 71),A( 72)/   1035,   1036,   1037,   1038/ 00003500
      DATA A( 73),A( 74),A( 75),A( 76)/   1039,   1040,   1041,   1050/ 00003600
      DATA A( 77),A( 78),A( 79),A( 80)/   1111,   1201,   1203,   1204/ 00003700
      DATA A( 81),A( 82),A( 83),A( 84)/   1205,   1206,   1207,   1208/ 00003800
      DATA A( 85),A( 86),A( 87),A( 88)/   1209,   1210,   1211,   1212/ 00003900
      DATA A( 89),A( 90),A( 91),A( 92)/   1213,   1215,   1216,   1217/ 00004000
      DATA A( 93),A( 94),A( 95),A( 96)/   1218,   1219,   1220,   1221/ 00004100
      DATA A( 97),A( 98),A( 99),A(100)/   1222,   1223,   1224,   1225/ 00004200
      DATA A(101),A(102),A(103),A(104)/   1227,   1228,   1229,   1230/ 00004300
      DATA A(105),A(106),A(107),A(108)/   1232,   1233,   1235,   2001/ 00004400
      DATA A(109),A(110),A(111),A(112)/   2002,   2003,   2004,   2005/ 00004500
      DATA A(113),A(114),A(115),A(116)/   2006,   2007,   2008,   2009/ 00004600
      DATA A(117),A(118),A(119),A(120)/   2010,   2011,   2012,   2013/ 00004700
      DATA A(121),A(122),A(123),A(124)/   2015,   2017,   2018,   2019/ 00004800
      DATA A(125),A(126),A(127),A(128)/   2020,   2021,   2022,   2023/ 00004900
      DATA A(129),A(130),A(131),A(132)/   2024,   2025,   2026,   2027/ 00005000
      DATA A(133),A(134),A(135),A(136)/   2028,   2029,   2030,   2031/ 00005100
      DATA A(137),A(138),A(139),A(140)/   2032,   2033,   2034,   2035/ 00005200
      DATA A(141),A(142),A(143),A(144)/   2036,   2037,   2038,   2039/ 00005300
      DATA A(145),A(146),A(147),A(148)/   2041,   2042,   2044,   2045/ 00005400
      DATA A(149),A(150),A(151),A(152)/   2046,   2051,   2052,   2053/ 00005500
      DATA A(153),A(154),A(155),A(156)/   2054,   2055,   2056,   2057/ 00005600
      DATA A(157),A(158),A(159)       /   2058,   3001,   3002 /        00005610
      DATA B(  1),B(  2),B(  3),B(  4)/     11,     25,     37,     50/ 00005700
      DATA B(  5),B(  6),B(  7),B(  8)/     64,     80,     98,    106/ 00005800
      DATA B(  9),B( 10),B( 11),B( 12)/    119,    131,    145,    158/ 00005900
      DATA B( 13),B( 14),B( 15),B( 16)/    178,    188,    206,    225/ 00006000
      DATA B( 17),B( 18),B( 19),B( 20)/    244,    266,    284,    302/ 00006100
      DATA B( 21),B( 22),B( 23),B( 24)/    317,    340,    361,    380/ 00006200
      DATA B( 25),B( 26),B( 27),B( 28)/    401,    416,    421,    428/ 00006300
      DATA B( 29),B( 30),B( 31),B( 32)/    435,    457,    472,    499/ 00006400
      DATA B( 33),B( 34),B( 35),B( 36)/    522,    537,    551,    565/ 00006500
      DATA B( 37),B( 38),B( 39),B( 40)/    590,    609,    622,    643/ 00006600
      DATA B( 41),B( 42),B( 43),B( 44)/    670,    683,    687,    690/ 00006700
      DATA B( 45),B( 46),B( 47),B( 48)/    697,    704,    709,    719/ 00006800
      DATA B( 49),B( 50),B( 51),B( 52)/    724,    729,    732,    738/ 00006900
      DATA B( 53),B( 54),B( 55),B( 56)/    744,    757,    763,    772/ 00007000
      DATA B( 57),B( 58),B( 59),B( 60)/    781,    790,    796,    804/ 00007100
      DATA B( 61),B( 62),B( 63),B( 64)/    810,    821,    835,    842/ 00007200
      DATA B( 65),B( 66),B( 67),B( 68)/    853,    864,    879,    892/ 00007300
      DATA B( 69),B( 70),B( 71),B( 72)/    918,    930,    940,    946/ 00007400
      DATA B( 73),B( 74),B( 75),B( 76)/    950,    961,    970,    985/ 00007500
      DATA B( 77),B( 78),B( 79),B( 80)/    999,   1009,   1019,   1028/ 00007600
      DATA B( 81),B( 82),B( 83),B( 84)/   1038,   1049,   1061,   1068/ 00007700
      DATA B( 85),B( 86),B( 87),B( 88)/   1077,   1088,   1101,   1110/ 00007800
      DATA B( 89),B( 90),B( 91),B( 92)/   1120,   1131,   1143,   1159/ 00007900
      DATA B( 93),B( 94),B( 95),B( 96)/   1166,   1173,   1180,   1184/ 00008000
      DATA B( 97),B( 98),B( 99),B(100)/   1196,   1209,   1219,   1235/ 00008100
      DATA B(101),B(102),B(103),B(104)/   1244,   1253,   1260,   1267/ 00008200
      DATA B(105),B(106),B(107),B(108)/   1279,   1291,   1304,   1316/ 00008300
      DATA B(109),B(110),B(111),B(112)/   1327,   1334,   1347,   1366/ 00008400
      DATA B(113),B(114),B(115),B(116)/   1381,   1404,   1426,   1445/ 00008500
      DATA B(117),B(118),B(119),B(120)/   1455,   1471,   1477,   1482/ 00008600
      DATA B(121),B(122),B(123),B(124)/   1500,   1512,   1530,   1542/ 00008700
      DATA B(125),B(126),B(127),B(128)/   1562,   1568,   1579,   1595/ 00008800
      DATA B(129),B(130),B(131),B(132)/   1613,   1620,   1637,   1653/ 00008900
      DATA B(133),B(134),B(135),B(136)/   1663,   1674,   1694,   1711/ 00009000
      DATA B(137),B(138),B(139),B(140)/   1723,   1733,   1739,   1755/ 00009100
      DATA B(141),B(142),B(143),B(144)/   1766,   1780,   1800,   1817/ 00009200
      DATA B(145),B(146),B(147),B(148)/   1825,   1836,   1846,   1854/ 00009300
      DATA B(149),B(150),B(151),B(152)/   1868,   1878,   1891,   1900/ 00009400
      DATA B(153),B(154),B(155),B(156)/   1917,   1924,   1933,   1945/ 00009500
      DATA B(157),B(158),B(159)       /   1961,   1973,   1985/         00009510
      DATA E(   1),E(   2),E(   3),E(   4)/'INVA','LID ','CHAR','ACTE'/ 00009600
      DATA E(   5),E(   6),E(   7),E(   8)/'R IN',' PRE','CEDI','NG S'/ 00009700
      DATA E(   9),E(  10),E(  11),E(  12)/'TATE','MENT','    ','I.L.'/ 00009800
      DATA E(  13),E(  14),E(  15),E(  16)/' STO','RAGE',' EXH','AUST'/ 00009900
      DATA E(  17),E(  18),E(  19),E(  20)/'ED. ','FURT','HER ','CALL'/ 00010000
      DATA E(  21),E(  22),E(  23),E(  24)/'S CA','USE ','DATA',' LOS'/ 00010100
      DATA E(  25),E(  26),E(  27),E(  28)/'S   ','ARGU','MENT','S CA'/ 00010200
      DATA E(  29),E(  30),E(  31),E(  32)/'NNOT',' PRE','CEDE',' OPC'/ 00010300
      DATA E(  33),E(  34),E(  35),E(  36)/'ODE.',' CAL','L IG','NORE'/ 00010400
      DATA E(  37),E(  38),E(  39),E(  40)/'D   ','OPCO','DE C','ALL '/ 00010500
      DATA E(  41),E(  42),E(  43),E(  44)/'PREC','EDED',' REL','EASE'/ 00010600
      DATA E(  45),E(  46),E(  47),E(  48)/'. PR','EVIO','US L','INE '/ 00010700
      DATA E(  49),E(  50),E(  51),E(  52)/'LOST','    ','PARA','METR'/ 00010800
      DATA E(  53),E(  54),E(  55),E(  56)/'IC S','URFA','CE I','S NO'/ 00010900
      DATA E(  57),E(  58),E(  59),E(  60)/'T NA','MED.',' SUR','FACE'/ 00011000
      DATA E(  61),E(  62),E(  63),E(  64)/' IS ','UNDE','FINE','D   '/ 00011100
      DATA E(  65),E(  66),E(  67),E(  68)/'PARA','METR','IC S','URFA'/ 00011200
      DATA E(  69),E(  70),E(  71),E(  72)/'CE V','ARIA','BLE ','IS N'/ 00011300
      DATA E(  73),E(  74),E(  75),E(  76)/'OT A',' SCA','LAR.','SURF'/ 00011400
      DATA E(  77),E(  78),E(  79),E(  80)/'ACE ','IS U','NDEF','INED'/ 00011500
      DATA E(  81),E(  82),E(  83),E(  84)/'PARA','METR','IC S','URFA'/ 00011600
      DATA E(  85),E(  86),E(  87),E(  88)/'CE M','ODIF','IER ','IS N'/ 00011700
      DATA E(  89),E(  90),E(  91),E(  92)/'OT D','ERIV',' OR ','NODE'/ 00011800
      DATA E(  93),E(  94),E(  95),E(  96)/'R. S','URFA','CE I','S UN'/ 00011900
      DATA E(  97),E(  98),E(  99),E( 100)/'DEFI','NED ','NO P','ARAM'/ 00012000
      DATA E( 101),E( 102),E( 103),E( 104)/'ETER','S FO','LLOW',' COM'/ 00012100
      DATA E( 105),E( 106),E( 107),E( 108)/'MAND','    ','NO S','URFA'/ 00012200
      DATA E( 109),E( 110),E( 111),E( 112)/'CE I','S NA','MED.',' COM'/ 00012300
      DATA E( 113),E( 114),E( 115),E( 116)/'MAND',' IGN','ORED',', CO'/ 00012400
      DATA E( 117),E( 118),E( 119),E( 120)/'NTIN','UING','    ','TAGT'/ 00012500
      DATA E( 121),E( 122),E( 123),E( 124)/'BL M','AY O','VERF','LOW.'/ 00012600
      DATA E( 125),E( 126),E( 127),E( 128)/' TOO',' MAN','Y CH','ECK '/ 00012700
      DATA E( 129),E( 130),E( 131),E( 132)/'SURF','ACES','    ','TOO '/ 00012800
      DATA E( 133),E( 134),E( 135),E( 136)/'MANY',' SYS','TEM-','GENE'/ 00012900
      DATA E( 137),E( 138),E( 139),E( 140)/'RATE','D LA','BELS','; TA'/ 00013000
      DATA E( 141),E( 142),E( 143),E( 144)/'BLE ','LENG','TH E','XCEE'/ 00013100
      DATA E( 145),E( 146),E( 147),E( 148)/'DED ','SYMB','OL E','XCEE'/ 00013200
      DATA E( 149),E( 150),E( 151),E( 152)/'DS S','IX C','HARA','CTER'/ 00013300
      DATA E( 153),E( 154),E( 155),E( 156)/'S; I','T MA','Y BE',' TRU'/ 00013400
      DATA E( 157),E( 158),E( 159),E( 160)/'NCAT','ED  ','NAME',' FOL'/ 00013500
      DATA E( 161),E( 162),E( 163),E( 164)/'LOWI','NG C','ALL/',' IS '/ 00013600
      DATA E( 165),E( 166),E( 167),E( 168)/'NOT ','A PR','EVIO','USLY'/ 00013700
      DATA E( 169),E( 170),E( 171),E( 172)/' DEF','INED',' MAC','RO N'/ 00013800
      DATA E( 173),E( 174),E( 175),E( 176)/'OR I','T IS',' A S','YSTE'/ 00013900
      DATA E( 177),E( 178),E( 179),E( 180)/'M MA','CRO ','UNKN','OWN '/ 00014000
      DATA E( 181),E( 182),E( 183),E( 184)/'FORM','AT U','SED ','IN O'/ 00014100
      DATA E( 185),E( 186),E( 187),E( 188)/'BTAI','N ST','ATEM','ENT '/ 00014200
      DATA E( 189),E( 190),E( 191),E( 192)/'TOO ','MANY',' ARG','UMEN'/ 00014300
      DATA E( 193),E( 194),E( 195),E( 196)/'TS I','N CA','NON ','OR O'/ 00014400
      DATA E( 197),E( 198),E( 199),E( 200)/'BTAI','N ST','ATEM','ENT;'/ 00014500
      DATA E( 201),E( 202),E( 203),E( 204)/'CANS','TK A','RRAY',' EXC'/ 00014600
      DATA E( 205),E( 206),E( 207),E( 208)/'EEDE','D   ','LINU','SD T'/ 00014700
      DATA E( 209),E( 210),E( 211),E( 212)/'ABLE',' USE','D IN',' MAC'/ 00014800
      DATA E( 213),E( 214),E( 215),E( 216)/'RO P','ROCE','SSIN','G IS'/ 00014900
      DATA E( 217),E( 218),E( 219),E( 220)/' FIL','LED.',' SEE',' APT'/ 00015000
      DATA E( 221),E( 222),E( 223),E( 224)/' SYS','TEM ','PROG','RAMM'/ 00015100
      DATA E( 225),E( 226),E( 227),E( 228)/'ER  ','TOO ','MANY',' MAC'/ 00015200
      DATA E( 229),E( 230),E( 231),E( 232)/'RO V','ARIA','BLES',' IN '/ 00015300
      DATA E( 233),E( 234),E( 235),E( 236)/'PART',' PRO','GRAM','. MA'/ 00015400
      DATA E( 237),E( 238),E( 239),E( 240)/'CDF1',' AND',' MAC','DF2 '/ 00015500
      DATA E( 241),E( 242),E( 243),E( 244)/'TABL','ES E','XCEE','DED '/ 00015600
      DATA E( 245),E( 246),E( 247),E( 248)/'TOO ','MANY',' VAL','UES '/ 00015700
      DATA E( 249),E( 250),E( 251),E( 252)/'ASSI','GNED',' TO ','THE '/ 00015800
      DATA E( 253),E( 254),E( 255),E( 256)/'MACR','O VA','RIAB','LES '/ 00015900
      DATA E( 257),E( 258),E( 259),E( 260)/'IN P','ART ','PROG','RAM.'/ 00016000
      DATA E( 261),E( 262),E( 263),E( 264)/' MAC','HST ','TABL','E EX'/ 00016100
      DATA E( 265),E( 266),E( 267),E( 268)/'CEED','ED  ','MACR','O NE'/ 00016200
      DATA E( 269),E( 270),E( 271),E( 272)/'ST L','EVEL',' MAX','IMUM'/ 00016300
      DATA E( 273),E( 274),E( 275),E( 276)/' EXC','EEDE','D. M','ACSV'/ 00016400
      DATA E( 277),E( 278),E( 279),E( 280)/'1,MA','CSV2',',MAC','SV3 '/ 00016500
      DATA E( 281),E( 282),E( 283),E( 284)/'TABL','ES E','XCEE','DED '/ 00016600
      DATA E( 285),E( 286),E( 287),E( 288)/'MAS ','TABL','E US','ED I'/ 00016700
      DATA E( 289),E( 290),E( 291),E( 292)/'N MA','CRO ','PROC','ESSI'/ 00016800
      DATA E( 293),E( 294),E( 295),E( 296)/'NG I','S FI','LLED','. SE'/ 00016900
      DATA E( 297),E( 298),E( 299),E( 300)/'E AP','T SY','STEM',' PRO'/ 00017000
      DATA E( 301),E( 302),E( 303),E( 304)/'GRAM','MER ','MORE',' THA'/ 00017100
      DATA E( 305),E( 306),E( 307),E( 308)/'N 50',' MAC','ROS ','IN P'/ 00017200
      DATA E( 309),E( 310),E( 311),E( 312)/'ART ','PROG','RAM.',' MAC'/ 00017300
      DATA E( 313),E( 314),E( 315),E( 316)/'SEQ ','TABL','E EX','CEED'/ 00017400
      DATA E( 317),E( 318),E( 319),E( 320)/'ED  ','TOO ','MANY',' MAC'/ 00017500
      DATA E( 321),E( 322),E( 323),E( 324)/'RO V','ARIA','BLES',' HAV'/ 00017600
      DATA E( 325),E( 326),E( 327),E( 328)/'E BE','EN A','SSIG','NED '/ 00017700
      DATA E( 329),E( 330),E( 331),E( 332)/'MACR','O NA','MES.',' MNM'/ 00017800
      DATA E( 333),E( 334),E( 335),E( 336)/'VB A','ND M','NMVC',' TAB'/ 00017900
      DATA E( 337),E( 338),E( 339),E( 340)/'LES ','EXCE','EDED','    '/ 00018000
      DATA E( 341),E( 342),E( 343),E( 344)/'VBLS','AV T','ABLE',' OVE'/ 00018100
      DATA E( 345),E( 346),E( 347),E( 348)/'RFLO','W.RE','DUCE',' NUM'/ 00018200
      DATA E( 349),E( 350),E( 351),E( 352)/'BER ','OF M','ACRO',' CAL'/ 00018300
      DATA E( 353),E( 354),E( 355),E( 356)/'LS A','ND/O','R NU','MBER'/ 00018400
      DATA E( 357),E( 358),E( 359),E( 360)/' OF ','MACR','O VA','RIAB'/ 00018500
      DATA E( 361),E( 362),E( 363),E( 364)/'LES ','MACS','PD T','ABLE'/ 00018600
      DATA E( 365),E( 366),E( 367),E( 368)/' USE','D IN',' MAC','RO P'/ 00018700
      DATA E( 369),E( 370),E( 371),E( 372)/'ROCE','SSIN','G IS',' FIL'/ 00018800
      DATA E( 373),E( 374),E( 375),E( 376)/'LED.','SEE ','APT ','SYST'/ 00018900
      DATA E( 377),E( 378),E( 379),E( 380)/'EM P','ROGR','AMME','R   '/ 00019000
      DATA E( 381),E( 382),E( 383),E( 384)/'TOO ','MANY',' MAC','RO V'/ 00019100
      DATA E( 385),E( 386),E( 387),E( 388)/'ARIA','BLES',' IN ','A SI'/ 00019200
      DATA E( 389),E( 390),E( 391),E( 392)/'NGLE',' EXP','RESS','ION.'/ 00019300
      DATA E( 393),E( 394),E( 395),E( 396)/' MRG','STK ','OR M','ACVA'/ 00019400
      DATA E( 397),E( 398),E( 399),E( 400)/'R TA','BLE ','OVER','FLOW'/ 00019500
      DATA E( 401),E( 402),E( 403),E( 404)/'    ','KSC ','TABL','E FI'/ 00019600
      DATA E( 405),E( 406),E( 407),E( 408)/'LLED','. TO','O MA','NY S'/ 00019700
      DATA E( 409),E( 410),E( 411),E( 412)/'CULP','TURE','D SU','RFAC'/ 00019800
      DATA E( 413),E( 414),E( 415),E( 416)/'E DE','FINI','TION','S   '/ 00019900
      DATA E( 417),E( 418),E( 419),E( 420)/'TOO ','MUCH',' MAC','RO T'/ 00020000
      DATA E( 421),E( 422),E( 423),E( 424)/'EXT ','NUME','RIC ','NAME'/ 00020100
      DATA E( 425),E( 426),E( 427),E( 428)/' TAB','LE O','VERF','LOW '/ 00020200
      DATA E( 429),E( 430),E( 431),E( 432)/'INVA','LID ','USE ','OF W'/ 00020300
      DATA E( 433),E( 434),E( 435),E( 436)/'ORD ','TERM','AC  ','SUPP'/ 00020400
      DATA E( 437),E( 438),E( 439),E( 440)/'OSED',' PRO','CEDU','RE D'/ 00020500
      DATA E( 441),E( 442),E( 443),E( 444)/'OES ','NOT ','HAVE',' CLA'/ 00020600
      DATA E( 445),E( 446),E( 447),E( 448)/'SS P','ROCE','DURE',' OR '/ 00020700
      DATA E( 449),E( 450),E( 451),E( 452)/'FUNC','TION','. SE','E AP'/ 00020800
      DATA E( 453),E( 454),E( 455),E( 456)/'T SY','STEM',' PRO','GRAM'/ 00020900
      DATA E( 457),E( 458),E( 459),E( 460)/'MER ','LABA','RY T','ABLE'/ 00021000
      DATA E( 461),E( 462),E( 463),E( 464)/' FIL','LED.',' NO ','FURT'/ 00021100
      DATA E( 465),E( 466),E( 467),E( 468)/'HER ','SEAR','CH F','OR M'/ 00021200
      DATA E( 469),E( 470),E( 471),E( 472)/'ISSI','NG L','ABEL','S   '/ 00021300
      DATA E( 473),E( 474),E( 475),E( 476)/'GEOM','ETRI','C VA','RIAB'/ 00021400
      DATA E( 477),E( 478),E( 479),E( 480)/'LE B','EING',' USE','D HA'/ 00021500
      DATA E( 481),E( 482),E( 483),E( 484)/'S BE','EN P','REVI','OUSL'/ 00021600
      DATA E( 485),E( 486),E( 487),E( 488)/'Y DE','FINE','D WI','TH T'/ 00021700
      DATA E( 489),E( 490),E( 491),E( 492)/'HE S','AME ','MODE','. FI'/ 00021800
      DATA E( 493),E( 494),E( 495),E( 496)/'RST ','DEFI','NITI','ON O'/ 00021900
      DATA E( 497),E( 498),E( 499),E( 500)/'VERR','IDDE','N   ','SCUL'/ 00022000
      DATA E( 501),E( 502),E( 503),E( 504)/'PTUR','ED S','URFA','CE V'/ 00022100
      DATA E( 505),E( 506),E( 507),E( 508)/'ARIA','BLE ','BEIN','G US'/ 00022200
      DATA E( 509),E( 510),E( 511),E( 512)/'ED H','AS B','EEN ','PREV'/ 00022300
      DATA E( 513),E( 514),E( 515),E( 516)/'IOUS','LY D','EFIN','ED. '/ 00022400
      DATA E( 517),E( 518),E( 519),E( 520)/'FIRS','T DE','F. O','VERR'/ 00022500
      DATA E( 521),E( 522),E( 523),E( 524)/'IDDE','N   ','TOO ','MANY'/ 00022600
      DATA E( 525),E( 526),E( 527),E( 528)/' LAR','GE D','ATA ','ARRA'/ 00022700
      DATA E( 529),E( 530),E( 531),E( 532)/'Y DE','FINI','TION','S. C'/ 00022800
      DATA E( 533),E( 534),E( 535),E( 536)/'ANSI','Z TA','BLE ','FILL'/ 00022900
      DATA E( 537),E( 538),E( 539),E( 540)/'ED  ','MISS','ING ','FINI'/ 00023000
      DATA E( 541),E( 542),E( 543),E( 544)/'. FI','NI I','NSER','TED '/ 00023100
      DATA E( 545),E( 546),E( 547),E( 548)/'AND ','PROC','ESSI','NG C'/ 00023200
      DATA E( 549),E( 550),E( 551),E( 552)/'ONTI','NUES','    ','MISS'/ 00023300
      DATA E( 553),E( 554),E( 555),E( 556)/'ING ','TERM','AC. ','FINI'/ 00023400
      DATA E( 557),E( 558),E( 559),E( 560)/' INS','ERTE','D AN','D PR'/ 00023500
      DATA E( 561),E( 562),E( 563),E( 564)/'OCES','SING',' CON','TINU'/ 00023600
      DATA E( 565),E( 566),E( 567),E( 568)/'ES  ','SEGM','ENT ','READ'/ 00023700
      DATA E( 569),E( 570),E( 571),E( 572)/' OR ','FIRS','T CA','LL T'/ 00023800
      DATA E( 573),E( 574),E( 575),E( 576)/'O SY','STEM',' MAC','RO C'/ 00023900
      DATA E( 577),E( 578),E( 579),E( 580)/'ANNO','T BE',' CON','TAIN'/ 00024000
      DATA E( 581),E( 582),E( 583),E( 584)/'ED I','N A ','SEGM','ENT '/ 00024100
      DATA E( 585),E( 586),E( 587),E( 588)/'READ',' OR ','A SY','STEM'/ 00024200
      DATA E( 589),E( 590),E( 591),E( 592)/' MAC','RO  ','UNAB','LE T'/ 00024300
      DATA E( 593),E( 594),E( 595),E( 596)/'O OP','EN L','IBRA','RY A'/ 00024400
      DATA E( 597),E( 598),E( 599),E( 600)/'PTLI','B. C','OULD',' RES'/ 00024500
      DATA E( 601),E( 602),E( 603),E( 604)/'ULT ','FROM',' CAL','L TO'/ 00024600
      DATA E( 605),E( 606),E( 607),E( 608)/' UND','EFIN','ED M','ACRO'/ 00024700
      DATA E( 609),E( 610),E( 611),E( 612)/'    ','SEGM','ENT ','NAME'/ 00024800
      DATA E( 613),E( 614),E( 615),E( 616)/'D IN',' REA','D/ S','TATE'/ 00024900
      DATA E( 617),E( 618),E( 619),E( 620)/'MENT',' IS ','NOT ','IN A'/ 00025000
      DATA E( 621),E( 622),E( 623),E( 624)/'PTLI','B   ','UNAB','LE T'/ 00025100
      DATA E( 625),E( 626),E( 627),E( 628)/'O RE','AD A',' REC','ORD '/ 00025200
      DATA E( 629),E( 630),E( 631),E( 632)/'FROM',' APT','LIB;',' I/O'/ 00025300
      DATA E( 633),E( 634),E( 635),E( 636)/' ERR','OR O','R IL','LEGA'/ 00025400
      DATA E( 637),E( 638),E( 639),E( 640)/'L BL','OCKS','IZE ','OR R'/ 00025500
      DATA E( 641),E( 642),E( 643),E( 644)/'ECOR','D SI','ZE  ','GEOM'/ 00025600
      DATA E( 645),E( 646),E( 647),E( 648)/'ETRI','C VA','RIAB','LE B'/ 00025700
      DATA E( 649),E( 650),E( 651),E( 652)/'EING',' USE','D HA','S BE'/ 00025800
      DATA E( 653),E( 654),E( 655),E( 656)/'EN P','REVI','OUSL','Y DE'/ 00025900
      DATA E( 657),E( 658),E( 659),E( 660)/'FINE','D WI','TH A',' DIF'/ 00026000
      DATA E( 661),E( 662),E( 663),E( 664)/'FERE','NT M','ODE.',' FIR'/ 00026100
      DATA E( 665),E( 666),E( 667),E( 668)/'ST D','EFIN','ITIO','N RE'/ 00026200
      DATA E( 669),E( 670),E( 671),E( 672)/'TAIN','ED  ','MISS','ING '/ 00026300
      DATA E( 673),E( 674),E( 675),E( 676)/'LABE','L ST','ATEM','ENT '/ 00026400
      DATA E( 677),E( 678),E( 679),E( 680)/'ADDR','ESSE','D BY',' JUM'/ 00026500
      DATA E( 681),E( 682),E( 683),E( 684)/'PTO ','OR I','F   ','DUPL'/ 00026600
      DATA E( 685),E( 686),E( 687),E( 688)/'ICAT','E LA','BEL ','MIXE'/ 00026700
      DATA E( 689),E( 690),E( 691),E( 692)/'D MO','DE  ','INVA','LID '/ 00026800
      DATA E( 693),E( 694),E( 695),E( 696)/'USE ','OF M','INUS',' SIG'/ 00026900
      DATA E( 697),E( 698),E( 699),E( 700)/'N   ','INVA','LID ','STAT'/ 00027000
      DATA E( 701),E( 702),E( 703),E( 704)/'EMEN','T IG','NORE','D   '/ 00027100
      DATA E( 705),E( 706),E( 707),E( 708)/'IMPR','OPER',' ARG','UMEN'/ 00027200
      DATA E( 709),E( 710),E( 711),E( 712)/'T   ','MISS','ING ','LABE'/ 00027300
      DATA E( 713),E( 714),E( 715),E( 716)/'L. S','TATE','MENT',' NOT'/ 00027400
      DATA E( 717),E( 718),E( 719),E( 720)/' REA','CHAB','LE  ','MATR'/ 00027500
      DATA E( 721),E( 722),E( 723),E( 724)/'IX M','UST ','FOLL','OW  '/ 00027600
      DATA E( 725),E( 726),E( 727),E( 728)/'NOMO','RE M','UST ','FOLL'/ 00027700
      DATA E( 729),E( 730),E( 731),E( 732)/'OW  ','MIXE','D MO','DE  '/ 00027800
      DATA E( 733),E( 734),E( 735),E( 736)/'VARI','ABLE',' IS ','UNRE'/ 00027900
      DATA E( 737),E( 738),E( 739),E( 740)/'SERV','ED  ','NO T','YPE '/ 00028000
      DATA E( 741),E( 742),E( 743),E( 744)/'FOR ','VARI','ABLE','    '/ 00028100
      DATA E( 745),E( 746),E( 747),E( 748)/'SURF','ACE ','TYPE',' CHA'/ 00028200
      DATA E( 749),E( 750),E( 751),E( 752)/'NGED',' IN ','NEST','ED G'/ 00028300
      DATA E( 753),E( 754),E( 755),E( 756)/'EOME','TRIC',' DEF','INIT'/ 00028400
      DATA E( 757),E( 758),E( 759),E( 760)/'ION ','MACR','O DE','FINI'/ 00028500
      DATA E( 761),E( 762),E( 763),E( 764)/'TION',' NES','TED ','MACR'/ 00028600
      DATA E( 765),E( 766),E( 767),E( 768)/'O NA','ME N','OT P','RECE'/ 00028700
      DATA E( 769),E( 770),E( 771),E( 772)/'EDED',' BY ','CALL','    '/ 00028800
      DATA E( 773),E( 774),E( 775),E( 776)/'DUMM','Y VA','RIAB','LE E'/ 00028900
      DATA E( 777),E( 778),E( 779),E( 780)/'XPEC','TS M','ACRO',' NAM'/ 00029000
      DATA E( 781),E( 782),E( 783),E( 784)/'E   ','DUMM','Y VA','RIAB'/ 00029100
      DATA E( 785),E( 786),E( 787),E( 788)/'LE R','EJEC','TS M','ACRO'/ 00029200
      DATA E( 789),E( 790),E( 791),E( 792)/' NAM','E   ','UNKN','OWN '/ 00029300
      DATA E( 793),E( 794),E( 795),E( 796)/'MACR','O VA','RIAB','LE  '/ 00029400
      DATA E( 797),E( 798),E( 799),E( 800)/'ERRO','R IN',' FIN','AL M'/ 00029500
      DATA E( 801),E( 802),E( 803),E( 804)/'ACRO',' PRO','CESS','ING '/ 00029600
      DATA E( 805),E( 806),E( 807),E( 808)/'RECU','RSIV','E US','E OF'/ 00029700
      DATA E( 809),E( 810),E( 811),E( 812)/' MAC','ROS ','ILLE','GAL '/ 00029800
      DATA E( 813),E( 814),E( 815),E( 816)/'MODE',' FOR',' TEM','PORA'/ 00029900
      DATA E( 817),E( 818),E( 819),E( 820)/'RY I','N CA','LL T','O MA'/ 00030000
      DATA E( 821),E( 822),E( 823),E( 824)/'CRO ','VARI','ABLE',' NAM'/ 00030100
      DATA E( 825),E( 826),E( 827),E( 828)/'E IN',' CAN','ON D','EFIN'/ 00030200
      DATA E( 829),E( 830),E( 831),E( 832)/'ITIO','N IS',' OF ','INCO'/ 00030300
      DATA E( 833),E( 834),E( 835),E( 836)/'RREC','T MO','DE  ','INVA'/ 00030400
      DATA E( 837),E( 838),E( 839),E( 840)/'LID ','TABC','YL D','EFIN'/ 00030500
      DATA E( 841),E( 842),E( 843),E( 844)/'ITIO','N   ','INVA','LID '/ 00030600
      DATA E( 845),E( 846),E( 847),E( 848)/'TABC','YL U','SED ','IN R'/ 00030700
      DATA E( 849),E( 850),E( 851),E( 852)/'LDSR','F DE','FINI','TION'/ 00030800
      DATA E( 853),E( 854),E( 855),E( 856)/'    ','INPU','T ST','ATEM'/ 00030900
      DATA E( 857),E( 858),E( 859),E( 860)/'ENT ','IS T','OO L','ONG.'/ 00031000
      DATA E( 861),E( 862),E( 863),E( 864)/' STA','CK O','VERF','LOW '/ 00031100
      DATA E( 865),E( 866),E( 867),E( 868)/'BOUN','DED ','GEOM','ETRY'/ 00031200
      DATA E( 869),E( 870),E( 871),E( 872)/' MUS','T NO','T BE',' SUB'/ 00031300
      DATA E( 873),E( 874),E( 875),E( 876)/'SCRI','PTED','. ST','ATEM'/ 00031400
      DATA E( 877),E( 878),E( 879),E( 880)/'ENT ','IGNO','RED ','INVA'/ 00031500
      DATA E( 881),E( 882),E( 883),E( 884)/'LID ','ARGU','MENT',' IN '/ 00031600
      DATA E( 885),E( 886),E( 887),E( 888)/'A LA','RGE ','DATA',' CAN'/ 00031700
      DATA E( 889),E( 890),E( 891),E( 892)/'ON S','TATE','MENT','    '/ 00031800
      DATA E( 893),E( 894),E( 895),E( 896)/'OBTA','IN S','TATE','MENT'/ 00031900
      DATA E( 897),E( 898),E( 899),E( 900)/' SPE','CIFI','ES M','ORE '/ 00032000
      DATA E( 901),E( 902),E( 903),E( 904)/'VARI','ABLE','S TH','AN T'/ 00032100
      DATA E( 905),E( 906),E( 907),E( 908)/'HERE',' ARE',' ELE','MENT'/ 00032200
      DATA E( 909),E( 910),E( 911),E( 912)/'S IN',' IND','ICAT','ED S'/ 00032300
      DATA E( 913),E( 914),E( 915),E( 916)/'URFA','CE C','ANON','ICAL'/ 00032400
      DATA E( 917),E( 918),E( 919),E( 920)/' FOR','M   ','TOO ','MANY'/ 00032500
      DATA E( 921),E( 922),E( 923),E( 924)/' DO-','ARGU','MENT','S OR'/ 00032600
      DATA E( 925),E( 926),E( 927),E( 928)/' ARG','UMEN','T WI','THOU'/ 00032700
      DATA E( 929),E( 930),E( 931),E( 932)/'T VA','LUE ','DO-L','OOP '/ 00032800
      DATA E( 933),E( 934),E( 935),E( 936)/'NOT ','CLOS','ED A','T FI'/ 00032900
      DATA E( 937),E( 938),E( 939),E( 940)/'NI O','R TE','RMAC','    '/ 00033000
      DATA E( 941),E( 942),E( 943),E( 944)/'MORE',' THA','N 10',' DO '/ 00033100
      DATA E( 945),E( 946),E( 947),E( 948)/'NEST','ED  ','BAD ','NEST'/ 00033200
      DATA E( 949),E( 950),E( 951),E( 952)/'ED D','O   ','IDEN','TICA'/ 00033300
      DATA E( 953),E( 954),E( 955),E( 956)/'L NA','MES ','OF V','ARIA'/ 00033400
      DATA E( 957),E( 958),E( 959),E( 960)/'BLES',' IN ','NEST','ED D'/ 00033500
      DATA E( 961),E( 962),E( 963),E( 964)/'O   ','ILLE','GAL ','PATE'/ 00033600
      DATA E( 965),E( 966),E( 967),E( 968)/'RN D','EFIN','ITIO','N FO'/ 00033700
      DATA E( 969),E( 970),E( 971),E( 972)/'RMAT','    ','WRON','G SU'/ 00033800
      DATA E( 973),E( 974),E( 975),E( 976)/'RFAC','E AS','SOCI','ATED'/ 00033900
      DATA E( 977),E( 978),E( 979),E( 980)/' WIT','H VA','RIAB','LE I'/ 00034000
      DATA E( 981),E( 982),E( 983),E( 984)/'N OB','TAIN',' STA','TEME'/ 00034100
      DATA E( 985),E( 986),E( 987),E( 988)/'NT  ','ILLE','GAL ','SUBS'/ 00034200
      DATA E( 989),E( 990),E( 991),E( 992)/'CRIP','TED ','VARI','ABLE'/ 00034300
      DATA E( 993),E( 994),E( 995),E( 996)/'. CH','ECK ','FOR ','MISS'/ 00034400
      DATA E( 997),E( 998),E( 999),E(1000)/'ING ','RESE','RV  ','MORE'/ 00034500
      DATA E(1001),E(1002),E(1003),E(1004)/' THA','N 30',' RES','P. 5'/ 00034600
      DATA E(1005),E(1006),E(1007),E(1008)/' POI','NT D','EFIN','ITIO'/ 00034700
      DATA E(1009),E(1010),E(1011),E(1012)/'NS  ','MORE',' THA','N 30'/ 00034800
      DATA E(1013),E(1014),E(1015),E(1016)/' RES','P. 5',' SPL','INE '/ 00034900
      DATA E(1017),E(1018),E(1019),E(1020)/'DEFI','NITI','ONS ','SURF'/ 00035000
      DATA E(1021),E(1022),E(1023),E(1024)/'ACE ','DEFI','NITI','ON I'/ 00035100
      DATA E(1025),E(1026),E(1027),E(1028)/'S NO','T CO','MPLE','TE  '/ 00035200
      DATA E(1029),E(1030),E(1031),E(1032)/'TOO ','MANY',' SEG','MENT'/ 00035300
      DATA E(1033),E(1034),E(1035),E(1036)/'S IN',' THE',' FLO','W SE'/ 00035400
      DATA E(1037),E(1038),E(1039),E(1040)/'CTIO','N   ','INCO','RREC'/ 00035500
      DATA E(1041),E(1042),E(1043),E(1044)/'T DE','FINI','TION',' OF '/ 00035600
      DATA E(1045),E(1046),E(1047),E(1048)/'THE ','FLOW',' SEG','MENT'/ 00035700
      DATA E(1049),E(1050),E(1051),E(1052)/'    ','TOO ','MANY',' OR '/ 00035800
      DATA E(1053),E(1054),E(1055),E(1056)/'INCO','RREC','T IT','EMS '/ 00035900
      DATA E(1057),E(1058),E(1059),E(1060)/'IN T','HE F','LOW ','SECT'/ 00036000
      DATA E(1061),E(1062),E(1063),E(1064)/'ION ','TOO ','MANY',' SEG'/ 00036100
      DATA E(1065),E(1066),E(1067),E(1068)/' DEF','INIT','IONS','    '/ 00036200
      DATA E(1069),E(1070),E(1071),E(1072)/'MULT','IPLE',' DEF','INED'/ 00036300
      DATA E(1073),E(1074),E(1075),E(1076)/' LIM','IT O','R WE','IGHT'/ 00036400
      DATA E(1077),E(1078),E(1079),E(1080)/'    ','TANS','PL,C','RSSP'/ 00036500
      DATA E(1081),E(1082),E(1083),E(1084)/'L OR',' NOR','MAL ','MULT'/ 00036600
      DATA E(1085),E(1086),E(1087),E(1088)/'IPLE',' DEF','INED','    '/ 00036700
      DATA E(1089),E(1090),E(1091),E(1092)/'USE ','OF C','RSSP','L ON'/ 00036800
      DATA E(1093),E(1094),E(1095),E(1096)/'LY C','ORRE','CT A','T ST'/ 00036900
      DATA E(1097),E(1098),E(1099),E(1100)/'ART ','AND ','END ','POIN'/ 00037000
      DATA E(1101),E(1102),E(1103),E(1104)/'T   ','MODI','FICA','TOR '/ 00037100
      DATA E(1105),E(1106),E(1107),E(1108)/'OR D','EFIN','ITIO','N RE'/ 00037200
      DATA E(1109),E(1110),E(1111),E(1112)/'PEAT','ING ','MORE',' THA'/ 00037300
      DATA E(1113),E(1114),E(1115),E(1116)/'N 30',' SUR','FACE','S DE'/ 00037400
      DATA E(1117),E(1118),E(1119),E(1120)/'FINE',' A C','OMBI','N   '/ 00037500
      DATA E(1121),E(1122),E(1123),E(1124)/'MORE',' THA','N ON','E PA'/ 00037600
      DATA E(1125),E(1126),E(1127),E(1128)/'TCH ','DEFI','NE A',' PAT'/ 00037700
      DATA E(1129),E(1130),E(1131),E(1132)/'CH/P','NTSO','N   ','TRFO'/ 00037800
      DATA E(1133),E(1134),E(1135),E(1136)/'RM,M','ATRI','X NO','T AL'/ 00037900
      DATA E(1137),E(1138),E(1139),E(1140)/'LOWE','D IN',' THI','S DE'/ 00038000
      DATA E(1141),E(1142),E(1143),E(1144)/'FINI','TION','    ','TRFO'/ 00038100
      DATA E(1145),E(1146),E(1147),E(1148)/'RM,M','ATRI','X SH','OULD'/ 00038200
      DATA E(1149),E(1150),E(1151),E(1152)/' BE ','DEFI','NED ','AT T'/ 00038300
(uafhcx) 7% 