cat afile02.1
^[cat: Command not found.
(uafhcx) 182% cat afile02.1
**** CREATED AT 25-APR-1990 13:32:59.71 ****
**** MODULE = INCFIL.COPY ****
*COPY ADDCOM
C...  21. ADDCOM BLOCK
C
        DIMENSION       ADDCOM  (25)
        COMMON /ADDCOM/ ADDCOM
C
        EQUIVALENCE     (ELMAX  ,ADDCOM(  1))
        EQUIVALENCE     (CLNGTH ,ADDCOM(  2))
        EQUIVALENCE     (IBTFLG ,ADDCOM( 23))
        EQUIVALENCE     (JLIN   ,ADDCOM( 24))
        EQUIVALENCE     (KDYNFL ,ADDCOM( 25))
C
*COPY ALLBTS
      COMMON/ALLBTS/ALLBTS(2),Z9999,ZAAAA,ZCCCC
C
*COPY ASSOC
C
      DIMENSION ASSOC(4,200),JASSOC(800)
      CHARACTER*6 CASSOC(200)
C
      COMMON/ASSOC/ASSOC
      COMMON/CASSOC/CASSOC
C
      EQUIVALENCE (ASSOC(1,1),JASSOC(1))
C
*COPY ATFLG
C
      COMMON/ATFLG/CSNAME,PSNAME,IATFLG
C
*COPY AVCPRM
C
C       AVOIDANCE CONTROL PARAMETERS
C
      DOUBLE PRECISION CTANG,BMIN,BMAX,DMAX
      LOGICAL LATYP1,LANPS,AVLIST
C
      COMMON/AVCPRM/CTANG,BMIN,BMAX,DMAX,LATYP1,LANPS,AVLIST
C
C     CTANG    CONSTANT TECHNOLOGICAL ANGLE
C     BMIN     MINIMUM PITCH ANGLE
C     BMAX     MAXIMUM PITCH ANGLE
C     DMAX     MAXIMUM LINEAR LIFT OFF
C     LATYP1   FLAG INDICATING IF TYPE1 (TILT) AVOIDANCE REQUIRED
C     LANPS    FLAG INDICATING TYPE OF LINEAR LIFT OFF
C              .TRUE.  - LIFT OFF NORMAL TO PS
C              .FALSE. - LIFT OFF PARALLEL TO TOOL AXIS
C     AVLIST   FLAG INDICATING THAT AVOIDANCE DETAILS ARE TO BE PRINTED
C
*COPY BLANKCOM
C
C     UNLABELLED COMMON
C
C---     SIZE OF BLANK COMMON IS ALLOCATED RIGHT HERE.
C
      INTEGER COMSIZ,SSIZ
      PARAMETER (COMSIZ=36000)
      PARAMETER (SSIZ=20000)
      DOUBLE PRECISION COM
      DIMENSION COM(COMSIZ)
C
      COMMON COM
C
      DOUBLE PRECISION CANON,SSCAN,BCANON,CAN
      DIMENSION CANON(COMSIZ),SSCAN(SSIZ),BCANON(SSIZ),CAN(SSIZ)
      EQUIVALENCE (COM(1),CANON(1))
      EQUIVALENCE (COM(41),SSCAN(1))
      EQUIVALENCE (COM(41),BCANON(1))
      EQUIVALENCE (COM(41),CAN(1))
C
*COPY CFSIZE
C
C...      12.      LARGE DATA ARRAY STORAGE REQUIREMENTS
C
C...    MODIFIED FOR MV/8000 F77 IMPLEMENTATION P.KRINER 09/30/82
C
      LOGICAL                                       PARDEF,TABCYS
      INTEGER        MAXSIZ(2),CANSIZ(2,100),CANTOP
      COMMON /CFSIZE/MAXSIZ,   CANSIZ,       CANTOP,PARDEF,TABCYS
C
*COPY CGOUG
C
      DOUBLE PRECISION TALT,SVGL,SHILF,GFLG,TPG,SPG
      COMMON/CGOUG/TALT(3),SVGL,SHILF,GFLG,TPG(3),SPG(3)
C
*COPY CHANG
C
C---- FLAG INTRODUCED BY VW - USED TO INDICATE IF TE HAS CHANGED
C                             JTENEU = 1 NO CHANGE FOR TE
C                                    = 0 TE HAS CHANGED
C
      INTEGER JTENEU
      COMMON/CHANG/JTENEU
C
*COPY CHEKFL
C
C---- FLAG INTRODUCED BY VW - USED TO DETERMINE 'CORRECT' SIDE OF CUTTER
C
      INTEGER ICHEKF
      COMMON/CHEKFL/ICHEKF
C
*COPY CLDT
C
C
      LOGICAL CLDFG
      INTEGER ICLTAB(5,100),IPTVEC(9)
      COMMON/CLDT/CLDFG,ICLCOD,ICLCNT,ICLINE,ICLBLK,ICLRCD,ICLTAB,IPTVEC
C
C
      CHARACTER*8 PNTVCT(9)
      COMMON/CHCLDT/PNTVCT
C
C
*COPY CLERR

C
C
C...COMMON/CLERR/ SPLIT INTO /CLERRW/ FOR INTEGERS & /CLERRT/ FOR TEXT
C
C
      INTEGER CERDM,CERCNT,CERAD1(34),CERAD2(34)
C
      COMMON/CLERRW/CERDM,CERCNT,CERAD1,CERAD2

C
C
C
      CHARACTER*4 CERTXT(570)
C
      COMMON/CLERRT/CERTXT
C
C
*COPY CLHOLRTH
C
C
C...CL EDITOR ALPHA-NUMERIC LITERAL CONSTANTS.
C
C
      CHARACTER*8   ALL,CIRCLE,FINI,FROM,GODLTA,GOTO,INDIRP,INDIRV,
     1              MODIFY,MIRROR,SAME,TRANSL,XYROT,YZPLAN,ZXPLAN,
     2              XYPLAN,CUT,DNTCNT,INTOL,OUTTOL,KUTTER,OVPLOT,COPY,
     3              ON,OFF,DUMMY5,DUMMY6,DUMMY7,DUMMY8,DUMMY9
C
      COMMON/HOLRTH/ALL,CIRCLE,FINI,FROM,GODLTA,GOTO,INDIRP,INDIRV,
     1              MODIFY,MIRROR,SAME,TRANSL,XYROT,YZPLAN,ZXPLAN,
     2              XYPLAN,CUT,DNTCNT,INTOL,OUTTOL,KUTTER,OVPLOT,COPY,
     3              ON,OFF,DUMMY5,DUMMY6,DUMMY7,DUMMY8,DUMMY9
C
      SAVE /HOLRTH/
C
*COPY COMMONS
C
C...     COMMON AREAS FROM SYSTEM 360 APT
C
      INTEGER KCON(14)
      COMMON/A0CON/KCON
      INTEGER I(23)
      COMMON/ATAPTB/ I
      INTEGER J(22)
      COMMON/ASISTM/ J
      DOUBLE PRECISION P(40)
      COMMON/APOSTP/P
      DOUBLE PRECISION T(4)
      COMMON/ATIME/T
      INTEGER JFLAG
      COMMON/AOUTFG/JFLAG
C
      INCLUDE 'SYMFIL.INC'
C
         COMMON/PARLST/JPAR(20)
         COMMON/AENT/KENTRY
         COMMON/CMPTST/ICMTES
C
C...         2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST,STACK,ARGSTK
      INTEGER STKLST,STACK,ARGSTK
      DIMENSION STKLST(3),STACK(2,99),ARGSTK(99)
C
C...         5.    PROGRAM CONTROL FLAGS
C
      COMMON/FLAGS/FLAGS
      LOGICAL FLAGS
      DIMENSION FLAGS(4)
C
C
C...         6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION
C
      COMMON/TMP/TXXXX
      INTEGER TXXXX
      DIMENSION TXXXX(2,32)
C
C...     7.   STRING STORAGE AREA
C
         COMMON/INPTR/CNT
C
C
C...      13.      NAMTBL POINTERS TO NEGATIVE NUMBERS
C
      COMMON/NEGPTR/NONEPT
C
C...        11.    SEQUENCE NUMBER STORAGE
C
C                  COMMENT OF  SEQNO AND SEQNUM
C
      INCLUDE 'SEQCOM.INC'
C
C...        12.    LARGE DATA ARRAY STORAGE REQUIREMENTS
C
      COMMON/CFSIZE/CFSIZE,MAXSIZ,CANSIZ,IISC,KSC
      INTEGER CFSIZE,MAXSIZ,CANSIZ,IISC,KSC
      DIMENSION  CFSIZE(3),MAXSIZ(2),CANSIZ(2,100),KSC(3,300)
C
C
C...      14.      I. L. LIST OPTION FLAGS
C
      COMMON/PRT/CILPRT,  ILPRT, INTERP, ASSEMB, TRACFL
     /          ,PRTERR,  MCHDNG
      LOGICAL    CILPRT,  ILPRT, INTERP, ASSEMB, TRACFL
     /          ,PRTERR,  MCHDNG
C
C
C...        15.    ARRAY LIMIT STORAGE
C
      COMMON/SBSCPT/RNGPT,RANGE
      INTEGER RNGPT,RANGE
      DIMENSION RANGE(100)
C
C...        16.    LITERALS FOR I. L. OPERATION CODES
C
      COMMON/IL/IL
      DIMENSION IL(21)
C
C
C...        17.    MODE CODES
C
      COMMON/MODX/MODX
      DIMENSION MODX(32)
C
C
C...        18.    STRING STORAGE AREA
C
      COMMON/CHRX/CHR
      CHARACTER CHR*400
C
C...      19.      INTERMEDIATE LANGUAGE TEXT
C
      COMMON/ILTEXT/ILTEXT,TEXTIN
      INTEGER TEXTIN,ILTEXT
      DIMENSION TEXTIN(90),ILTEXT(4)
C
C
C         22.      MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      INTEGER MACXX1
      DIMENSION MACXX1(71)
C
C         23.      MACRO PROCESSING ARRAYS
C
      COMMON/MACXX2/MACXX2
      DIMENSION MACXX2(902)
C
C         24.      MACRO PROCESSING ARRAYS
C
      COMMON/MACXX3/MACXX3
      DIMENSION MACXX3(1430)
C
C         25.      MACRO PROCESSING ARRAYS
C
      COMMON/MACXX4/MACXX4
      DIMENSION MACXX4( 100)
C
C         25A.     MACRO PROCESSING ARRAYS
C
      COMMON/MACXX5/ITMPSV
      DIMENSION ITMPSV(135)
C
C         26.      MACRO PROCESSING ARRAYS
C
      COMMON/MACXX6/MACXX6
      DIMENSION MACXX6(1300)
C
C         26A.     MACRO PROCESSING ARRAYS
C
      COMMON/MACXX7/MACXX7
      DIMENSION MACXX7(182)
C
C...        27.    OPERAND MODIFIERS
C
      COMMON/OPMOD/OPMOD
      INTEGER OPMOD
      DIMENSION    OPMOD(6)
C
C
C
C...        29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULO,MODHLF
C
C...        30.   NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCK
C
      COMMON/BLKCFS/FIRST
      INTEGER FIRST
      DIMENSION  FIRST(2,3)
C....
C           31.   COMMON BLOCK FOR PRO026 AND MOTION
C....
      COMMON /COMP26/COMP26,TAGTBL
      INTEGER COMP26,TAGTBL
      DIMENSION TAGTBL(3),COMP26(13)
C
C
C           32.   COMMON BLOCK FOR SETBIT AND BITMCH
C
      COMMON/BITCOM/BIT
      INTEGER BIT
      DIMENSION BIT(32)
C...
C ...       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE
C
C
      COMMON/BGEOM/BGEOM
      INTEGER BGEOM
      DIMENSION BGEOM(4)
C
C           36.    SYSTEM MACRO AND SEGMENT READ VARIABLES
C
      COMMON/MACSEG/MACSEG
      DIMENSION     MACSEG(6)
C
C...        37.    INCLUSIVE SUBSCRIPT VARIABLES
C
      COMMON/ISSCOM/ISSCOM,ISSTRM
      DIMENSION ISSTRM(2),ISSCOM(7)
C
C
C...     38.  COMMON BLOCK MACRO CALL STATEMENT
C             INDICATES A MACRO CALL BEING PROCESSED
C
         COMMON/CALFLG/ICALLF
C
C...        39.    COMMON BLOCK LIBRARY PRINTING FLAG
C
      COMMON/LIBPRT/LIBPRT
      LOGICAL       LIBPRT
C
C
      INCLUDE 'SUPER.INC'
C
C...        41.    NUMBER TABLE OVERFLOW VARIABLES
C
      COMMON/NTBL/NTBL
      DIMENSION   NTBL(6)
C
C
C           42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE
C
      COMMON/CANSTR/CANSTR,CANSTK
      INTEGER CANSTR,CANSTK
      DIMENSION CANSTK(16),CANSTR(2)
C
C           43.    COMMON BLOCK FOR LOOP
C
      COMMON/DOLOOP/DOLOOP
      INTEGER DOLOOP
      DIMENSION DOLOOP(8)
C
C
C           44.    COMMON BLOCK FOR ERROR POSITIONS
C
      COMMON/ERRPOS/ERRPOS
      INTEGER ERRPOS(302)
C
      INCLUDE 'OUTBUF.INC'
      INCLUDE 'DARRAY.INC'
      INCLUDE 'SDP.INC'
C
      INTEGER CODE
      COMMON/CODE/CODE(150)
C
      INTEGER SRCTBL
      COMMON/SRCTBL/SRCTBL(1482)
C
      INCLUDE 'GMTY.INC'
C
      INTEGER BCDPTR
      COMMON/BCDPTR/BCDPTR(7)
C
      COMMON/NUMPTR/NUMPTR(12)
C
      INTEGER SUBLST
      COMMON/SUBLST/SUBLST(136)
C
      INCLUDE 'NAMETB.INC'
C
         CHARACTER*8 MEMNAM
         COMMON/CLIBCM/MEMNAM
         COMMON/LIBCOM/IEOF
      INCLUDE 'ADDCOM.INC'
      INCLUDE 'BLANKCOM.INC'
      INCLUDE 'CLDT.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSNAME.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'HOLRTH.INC'
      INCLUDE 'IBRKPT.INC'
      INCLUDE 'IDEF.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'ISV.INC'
      INCLUDE 'KNUMBR.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'SRFNAM.INC'
      INCLUDE 'SSPAD.INC'
C
C
        INTEGER         NTB, FPB, PPB, COMN, CFB, NBLK, NRECRD, NTPARM
        DIMENSION       NRECRD(10),NTPARM(10)
C
        COMMON  /STOR/  NTB, FPB, PPB, COMN, CFB, NBLK, NRECRD, NTPARM
C

      INCLUDE 'SV.INC'
      INCLUDE 'WORK.INC'
      INCLUDE 'XUNITS.INC'
      INCLUDE 'ZNUMBR.INC'
C
      COMMON /APT227/ APT227
C
C...  22. TRACE BLOCK
      COMMON /TRACFL/TRCFLG
      LOGICAL TRCFLG
C
C     25.   COMMON FOR AERR INFORMATION
C
      COMMON /AERCOM/  IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS
      DIMENSION  PCTPTS(3,20), PCTPLN(4), ERRPTS(3,3)
C
C
C          29.  COMMON FOR HOLD INFORMATION
C
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)
C
C
C CONST--COMMON CONTAINING CONSTANTS
C
C
      COMMON/CONST/KCOMT,KCOMF,CILPR,KCBN
      LOGICAL CILPR
C
      COMMON/SSARLM/B(64,4),U(4),V(4),ITOP(6,4,4),IFLAG(4,4),IPNUM(4),
     X  ISEQLS,NLAST,MCAT,JENLAS(4),MODLAS(4),IRRLAS(4),NCALMX,NCMX
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM
      COMMON/MODESS/MODESS,MSSCHK,MSSARL
      COMMON/XDS/DGEOM(4),DLIM(4),TLDIR(3),DOFSET,ITLDIR,IDTOOL,NDS
      COMMON/XPS/PGEOM(4),PSIDE,PTHICK,IPTOOL,NPS
      COMMON/XFEED/CLRPLN(4),FED(4),NCLRPL,NFEED
      COMMON/XSTEPO/SSTEP(4),NSTEPO
      COMMON/XAXIS/AXIS(3),IAXIS,NAXIS
C
      LOGICAL SSPRT,SSTEST
      COMMON/SSPRT/SSPRT,SSTEST
C
      COMMON/SSBOND/SBOND0,SBOND,MMODE,ICON,PTS,JAG
      DIMENSION SBOND(9),PTS(20)
C
      COMMON /HSAVE/ SAVEH(50)
      COMMON/SQNC/ LSEQNO
C
      COMMON/IDDST/IDDST
C
C    MAXLDA CONTAINS THE MAXIMUM SPACE AVAILABLE FOR LDA'S
      COMMON/MAXLDA/MAXLDA
C
C  UEBERGABECOMMON FUER --PARMF--
      COMMON/PARMFC/UA,VA,PNUM,UT,US,FNAM
C
      COMMON/IZEILL/IZEIL
      INTEGER IZEIL
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
C
      COMMON /KFLAGS/ KFLAGS
      DIMENSION  KFLAGS(5)
C
      COMMON /NCFSTO/ NCFSTO,CSCALE
      DIMENSION NCFSTO(60000)
C
      COMMON /VERSON/ NEWSYS,ISTAND,IMACHN,IFIRST,NUM,KONSYS(2)
C
      COMMON /NRECC/ NRECC
      DIMENSION  NRECC(21)
C
*COPY CSTART
C
      DOUBLE PRECISION DIST,UVDIST,SPBOND
      INTEGER ISTART
      DIMENSION SPBOND(40)
C
      COMMON/CSTART/DIST,UVDIST,SPBOND,ISTART
C
*COPY DARRAY
C
C   ***  20.  DARRAY BLOCK  ***
C
C   PRINT BUFFER
C
      INTEGER CPL
      PARAMETER (CPL=120)
      CHARACTER DARRAY*(CPL)
C
      COMMON/DARRAY/DARRAY
C
*COPY DEF
C
C   ***  2.  DEF BLOCK    ***
C
C   REAL VARIABLES USED BY DEFINITION ROUTINES
C   WHICH MUST REMAIN INVIOLATE
C
      DOUBLE PRECISION A(12,2),AHOLD(2,4),C1(8),LN1(5),R(10),REF(2,4)
C
      COMMON/DEF/A,AHOLD,C1,LN1,R,REF
C
*COPY DSHAR3
C
C   ***  3.  DSHARE BLOCK 3  ***
C
C   USED FOR REAL VARIABLES AND SHARED WITH ARELEM
C
      DOUBLE PRECISION C(7),G(10),L(4),P(16),SC(16),T(12),T1(12),V(10)
C
      COMMON/DSHAR3/C,G,L,P,SC,T,T1,V
C
      SAVE /DSHAR3/
C
*COPY DSHAR4
C
C   ***  4.  DSHARE BLOCK 4  ***
C
      DOUBLE PRECISION A,B,C,CENDIS,CMOVE(3),COM1,COM4,DIR(3),DP,DPE,
     +                 DPCNT,DPI,DPL,DP1,D1,D2A,FLIPCK,FWD(3),OGLE(3),
     +                 P1(3),P2(3),RDRN,REFPNT(3),TANGL,TES(3),TEW(3),
     +                 UVEC(3),U2(3),V(3),VL,ZL,ZLNORM(3),ZLPNT(3),ZL1,
     +                 PARAM(6),R(6),SAVPAR(4),SEG(9),SLOPE,SQROOT,UNN,
     +                 UPP,VINT,VNN,VPP
C
      COMMON/DSHAR4/A,B,C,CENDIS,CMOVE,COM1,COM4,DIR,DP,DPE,DPCNT,
     +              DPI,DPL,DP1,D1,D2A,FLIPCK,FWD,OGLE,P1,P2,RDRN,
     +              REFPNT,TANGL,TES,TEW,UVEC,U2,V,VL,ZL,ZLNORM,
     +              ZLPNT,ZL1,PARAM,R,SAVPAR,SEG,SLOPE,SQROOT,UNN,
     +              UPP,VINT,VNN,VPP
C
      SAVE /DSHAR4/
C
*COPY DSHAR5
C
C   ***  5.  DSHARE BLOCK 5  ***
C
      DOUBLE PRECISION CCENTR(3),CEND(3),CENLEN,CHORD,COSTH,CRDIUS,
     +                 CTOOL,ALPHA,DCENTR(3),DRDIUS,DINC,DELMOT(3),
     +                 DNMOT(3),DIF,DIFOUT,DSMOV,D2(3),EL1,EL2,FIPNT(3),
     +                 HCHORD,HAFDIA,OFFSET,PSI,RADNO,RONE,RZERO(3),
     +                 RZEROL,SINTH,STVEC(3),TANMOT(3),THETA,ZDOTC,ZIGN,
     +                 ZGAMMA,ZPNTS
C
      COMMON/DSHAR5/CCENTR,CEND,CENLEN,CHORD,COSTH,CRDIUS,CTOOL,ALPHA,
     +              DCENTR,DRDIUS,DINC,DELMOT,DNMOT,DIF,DIFOUT,DSMOV,
     +              D2,EL1,EL2,FIPNT,HCHORD,HAFDIA,OFFSET,PSI,RADNO,
     +              RONE,RZERO,RZEROL,SINTH,STVEC,TANMOT,THETA,ZDOTC,
     +              ZIGN,ZGAMMA,ZPNTS
C
      SAVE /DSHAR5/
C
*COPY DSHAR6
C
C   ***  6.  DSHARE BLOCK 6  ***
C
      DOUBLE PRECISION B,C,D(12),DX1,DX2,SB,TEM(3),TEMP,V(3),X2,Y2
C
      COMMON/DSHAR6/B,C,D,DX1,DX2,SB,TEM,TEMP,V,X2,Y2
C
      SAVE /DSHAR6/
C
*COPY DSNAME
C        COMMON BLOCKS FOR SURFACE NAME AND SUBSCRIPT STORAGE
C
C     23. DSNAME BLOCK
      COMMON/DSNAME/DSNAME,NAMSUB
C
C
*COPY ERRTXT
C
      INTEGER ERND,ERRDM
      PARAMETER (ERND=159,ERRDM=1985)
C
      INTEGER ERRAD1,ERRAD2
      DIMENSION ERRAD1(ERND),ERRAD2(ERND)
C
      COMMON/ERRWR/ERRAD1,ERRAD2
C
      CHARACTER*4 ERRTXT
      DIMENSION ERRTXT(ERRDM)
C
      COMMON/ERRTXT/ERRTXT
C
*COPY EXERR
C
      INTEGER ERND,ERRDM
      PARAMETER (ERND=389,ERRDM=6288)
C
      INTEGER ERRAD1,ERRAD2
      DIMENSION ERRAD1(ERND),ERRAD2(ERND)
C
      COMMON/EXERRW/ERRAD1,ERRAD2
C
      CHARACTER*4 ERRTXT(ERRDM)
C
      COMMON/EXERRT/ERRTXT
C
*COPY FILTAB
*
*  *  FILE ATTRIBUTES  *
*
*
      CHARACTER FILNAM*16,FILACC*10,FILFMT*11,OPSTAT*7,CLSTAT*6
      INTEGER NUMFIL,U,RL,NXTREC,LSTREC
      PARAMETER (NUMFIL=30)
C
      DIMENSION FILNAM(NUMFIL),FILACC(NUMFIL),FILFMT(NUMFIL),
     1          OPSTAT(NUMFIL),CLSTAT(NUMFIL),U(NUMFIL),RL(NUMFIL),
     2          NXTREC(NUMFIL),LSTREC(NUMFIL)
C
      COMMON/FILTAB/FILNAM,FILACC,FILFMT,OPSTAT,CLSTAT
      COMMON/IFILTB/U,RL,NXTREC,LSTREC
C
      SAVE /FILTAB/
      SAVE /IFILTB/
C
*COPY FXCOR
C

C    *** 7.  FXCOR BLOCK  ***
C
C    REAL VARIABLES USED BY ARELEM, WHICH MUST REMAIN INVIOLATE
C
      DOUBLE PRECISION AX4(3),CAGL,CUTDAT(7),GAMMA,HI,PMOVE(3),RA,
     +                 RC1,SAGL,SURD,TA(3),TAK(3),TE(3),TEK(3),TEL(3),
     +                 TEM(10),TEMP(24),TI(3),TIK(3),TIL(3),
     +                 TM(3),VTEM,ALP,TAL(3),DPMAX,STRTNO,TLHIT
C
      COMMON/FXCOR/AX4,CAGL,CUTDAT,GAMMA,HI,PMOVE,RA,RC1,SAGL,SURD,
     +             TA,TAK,TE,TEK,TEL,TEM,TEMP,TI,TIK,TIL,TM,
     +             VTEM,ALP,TAL,DPMAX,STRTNO,TLHIT
C
C
C    SEPARATE /CHARCT/ COMMON BLOCK FOR MODFER, WHICH WAS PART OF FXCOR.
C
      CHARACTER*6 MODFER
      COMMON/CHARCT/MODFER
C
C
C
C    TOOL DATA STORAGE
C
C    NOTE: 'TANHI' AND 'SINL' SHARE LOCATIONS AS DO 'TANLO' AND 'COSL'
C           THIS IS DELIBERATE.
C
      DOUBLE PRECISION TLHITE(8),TANHI(8),SINL(8),TANLO(8),COSL(8),
     +                 UMAX(8),RI(8),CORRAD(8),TCONT(0:8),TLINC(0:8)
C
      COMMON/TLLDAT/TLHITE,TANHI,TANLO,UMAX,RI,CORRAD,TCONT,TLINC
C
      EQUIVALENCE  (TANHI(1),SINL(1))
      EQUIVALENCE  (TANLO(1),COSL(1))
C
*COPY GLFLGS
C
C.... GOLOFT FLAGS
C
      INTEGER REGFLG,MOTDIR,IAUTOG
      LOGICAL RINGFG
C
      COMMON/GLFLGS/REGFLG,RINGFG,MOTDIR,IAUTOG
C
C     REGFLG:    REGION FLAG
C     RINGFG:    RING CUTTER FLAG
C     MOTDIR:    MOTION DIRECTION FLAG OF TLAXIS
C     IAUTOG:    TLAXIS/...,AUTO FLAG
C
*COPY GMTY
C
      INTEGER GEOLOC,PMIDTB,ARGMXY,GEOMTB
      DIMENSION GEOLOC(  50),PMIDTB( 250),ARGMXY( 250),GEOMTB(2180)
C
      COMMON/GMTY/GEOLOC,PMIDTB,ARGMXY,GEOMTB
C
*COPY HOLRTH
C
C     *** 8.  HOLRTH BLOCK ***
C
C     ALPHA-NUMERIC LITERAL CONSTANTS.
C
      CHARACTER*8 HPS,HDS,HCS,HLFT,HRGT,HFWD,HBACK,HUP,HDOWN,HTO,
     +            HPAST,HON,HTANTO,HPSTAN,HDYNP,HAERR,HCLDAT,HGERR
C
      COMMON/HBLOCK/HPS,HDS,HCS,HLFT,HRGT,HFWD,HBACK,HUP,HDOWN,HTO,
     +              HPAST,HON,HTANTO,HPSTAN,HDYNP,HAERR,HCLDAT,HGERR
C
*COPY IBRKPT
C
C   *** IBRKPT ***
C
      COMMON/IBRKPT/IBRKPT(51)
C
*COPY IBUGG
C
C.... DEBUG FLAGS
C
      INTEGER IBUG,IPCOLC,IPCOLM
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM
C
*COPY IDEF
C
C   ***  14.  IDEF BLOCK  ***
C
C   INVIOLATE INTEGER VARIABLES
C
      INTEGER LDASIZ,IERROR,SURFAD(4),KWRDSZ,IBLK1
C
      COMMON/IDEF/LDASIZ,IERROR,SURFAD,KWRDSZ,IBLK1
C

*COPY IFXCOR
C
C    *** 15.  IFXCOR BLOCK  ***
C
C    INVIOLATE ARELEM INTEGER VARIABLES
C
      INTEGER IAERR,IAUTPS,IBEGIN,IC,ICL,ICS,ICSCNT,ICTDEF,
     +        ICUT,IDS,IER,IGO,IGOTO,IGOUG,IGS,INOPS,IPSDEF,
     +        IPS,IPT1,IS,ISEQNO,ISRCH,ISTRUP,IT,I3DFLG,JBR,
     +        JSW,LSV,LSV1,MOTMOD,MULOUT,MANTAX,NMPNTS,NREC,
     +        NUMAX,NUMCNT,NUMP,NUMPT1,NUMSFS,NUMSUR,NW,
     +        ICHECK,ISEG,NMBSEG,NWDS,MSAV
C
      COMMON/IFXCOR/IAERR,IAUTPS,IBEGIN,IC,ICL,ICS,ICSCNT,ICTDEF,
     +              ICUT,IDS,IER,IGO,IGOTO,IGOUG,IGS,INOPS,IPSDEF,
     +              IPS,IPT1,IS,ISEQNO,ISRCH,ISTRUP,IT,I3DFLG,JBR,
     +              JSW,LSV,LSV1,MOTMOD,MULOUT,MANTAX,NMPNTS,NREC,
     +              NUMAX,NUMCNT,NUMP,NUMPT1,NUMSFS,NUMSUR,NW,
     +              ICHECK,ISEG,NMBSEG,NWDS,MSAV
C
*COPY INCFIL



C...  21. ADDCOM BLOCK
C
        DIMENSION       ADDCOM  (25)
        COMMON /ADDCOM/ ADDCOM
C
        EQUIVALENCE     (ELMAX  ,ADDCOM(  1))
        EQUIVALENCE     (CLNGTH ,ADDCOM(  2))
        EQUIVALENCE     (IBTFLG ,ADDCOM( 23))
        EQUIVALENCE     (JLIN   ,ADDCOM( 24))
        EQUIVALENCE     (KDYNFL ,ADDCOM( 25))
C



      COMMON/ALLBTS/ALLBTS(2),Z9999,ZAAAA,ZCCCC
C



C
      DIMENSION ASSOC(4,200),JASSOC(800)
      CHARACTER*6 CASSOC(200)
C
      COMMON/ASSOC/ASSOC
      COMMON/CASSOC/CASSOC
C
      EQUIVALENCE (ASSOC(1,1),JASSOC(1))
C



C
      COMMON/ATFLG/CSNAME,PSNAME,IATFLG
C



C
C       AVOIDANCE CONTROL PARAMETERS
C
      DOUBLE PRECISION CTANG,BMIN,BMAX,DMAX
      LOGICAL LATYP1,LANPS
C
      COMMON/AVCPRM/CTANG,BMIN,BMAX,DMAX,LATYP1,LANPS
C
C     CTANG    CONSTANT TECHNOLOGICAL ANGLE
C     BMIN     MINIMUM PITCH ANGLE
C     BMAX     MAXIMUM PITCH ANGLE
C     DMAX     MAXIMUM LINEAR LIFT OFF
C     LATYP1   FLAG INDICATING IF TYPE1 (TILT) AVOIDANCE REQUIRED
C     LANPS    FLAG INDICATING TYPE OF LINEAR LIFT OFF
C              .TRUE.  - LIFT OFF NORMAL TO PS
C              .FALSE. - LIFT OFF PARALLEL TO TOOL AXIS
C



C
C     UNLABELLED COMMON
C
C---     SIZE OF BLANK COMMON IS ALLOCATED RIGHT HERE.
C
      INTEGER COMSIZ,SSIZ
      PARAMETER (COMSIZ=36000)
      PARAMETER (SSIZ=20000)
      DOUBLE PRECISION COM
      DIMENSION COM(COMSIZ)
C
      COMMON COM
C
      DOUBLE PRECISION CANON,SSCAN,BCANON,CAN
      DIMENSION CANON(COMSIZ),SSCAN(SSIZ),BCANON(SSIZ),CAN(SSIZ)
      EQUIVALENCE (COM(1),CANON(1))
      EQUIVALENCE (COM(41),SSCAN(1))
      EQUIVALENCE (COM(41),BCANON(1))
      EQUIVALENCE (COM(41),CAN(1))
C



C
C...      12.      LARGE DATA ARRAY STORAGE REQUIREMENTS
C
C...    MODIFIED FOR MV/8000 F77 IMPLEMENTATION P.KRINER 09/30/82
C
      LOGICAL                                       PARDEF,TABCYS
      INTEGER        MAXSIZ(2),CANSIZ(2,100),CANTOP
      COMMON /CFSIZE/MAXSIZ,   CANSIZ,       CANTOP,PARDEF,TABCYS
C



C
      DOUBLE PRECISION TALT,SVGL,SHILF,GFLG,TPG,SPG
      COMMON/CGOUG/TALT(3),SVGL,SHILF,GFLG,TPG(3),SPG(3)
C



C
C---- FLAG INTRODUCED BY VW - USED TO INDICATE IF TE HAS CHANGED
C                             JTENEU = 1 NO CHANGE FOR TE
C                                    = 0 TE HAS CHANGED
C
      INTEGER JTENEU
      COMMON/CHANG/JTENEU
C



C
C---- FLAG INTRODUCED BY VW - USED TO DETERMINE 'CORRECT' SIDE OF CUTTER
C
      INTEGER ICHEKF
      COMMON/CHEKFL/ICHEKF
C



C
C
      LOGICAL CLDFG
      INTEGER ICLTAB(5,100),IPTVEC(9)
      COMMON/CLDT/CLDFG,ICLCOD,ICLCNT,ICLINE,ICLBLK,ICLRCD,ICLTAB,IPTVEC
C
C
      CHARACTER*8 PNTVCT(9)
      COMMON/CHCLDT/PNTVCT
C
C




C
C
C...COMMON/CLERR/ SPLIT INTO /CLERRW/ FOR INTEGERS & /CLERRT/ FOR TEXT
C
C
      INTEGER CERDM,CERCNT,CERAD1(34),CERAD2(34)
C
      COMMON/CLERRW/CERDM,CERCNT,CERAD1,CERAD2

C
C
C
      CHARACTER*4 CERTXT(570)
C
      COMMON/CLERRT/CERTXT
C
C



C
C
C...CL EDITOR ALPHA-NUMERIC LITERAL CONSTANTS.
C
C
      CHARACTER*8   ALL,CIRCLE,FINI,FROM,GODLTA,GOTO,INDIRP,INDIRV,
     1              MODIFY,MIRROR,SAME,TRANSL,XYROT,YZPLAN,ZXPLAN,
     2              XYPLAN,CUT,DNTCNT,INTOL,OUTTOL,KUTTER,OVPLOT,COPY,
     3              ON,OFF,DUMMY5,DUMMY6,DUMMY7,DUMMY8,DUMMY9
C
      COMMON/HOLRTH/ALL,CIRCLE,FINI,FROM,GODLTA,GOTO,INDIRP,INDIRV,
     1              MODIFY,MIRROR,SAME,TRANSL,XYROT,YZPLAN,ZXPLAN,
     2              XYPLAN,CUT,DNTCNT,INTOL,OUTTOL,KUTTER,OVPLOT,COPY,
     3              ON,OFF,DUMMY5,DUMMY6,DUMMY7,DUMMY8,DUMMY9
C
      SAVE /HOLRTH/
C



C
C...     COMMON AREAS FROM SYSTEM 360 APT
C
      INTEGER KCON(14)
      COMMON/A0CON/KCON
      INTEGER I(23)
      COMMON/ATAPTB/ I
      INTEGER J(22)
      COMMON/ASISTM/ J
      DOUBLE PRECISION P(40)
      COMMON/APOSTP/P
      DOUBLE PRECISION T(4)
      COMMON/ATIME/T
      INTEGER JFLAG
      COMMON/AOUTFG/JFLAG
C
      INCLUDE 'SYMFIL.INC'
C
         COMMON/PARLST/JPAR(20)
         COMMON/AENT/KENTRY
         COMMON/CMPTST/ICMTES
C
C...         2.    STACK AND POINTER STORAGE
C
      COMMON/STKLST/STKLST,STACK,ARGSTK
      INTEGER STKLST,STACK,ARGSTK
      DIMENSION STKLST(3),STACK(2,99),ARGSTK(99)
C
C...         5.    PROGRAM CONTROL FLAGS
C
      COMMON/FLAGS/FLAGS
      LOGICAL FLAGS
      DIMENSION FLAGS(4)
C
C
C...         6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION
C
      COMMON/TMP/TXXXX
      INTEGER TXXXX
      DIMENSION TXXXX(2,32)
C
C...     7.   STRING STORAGE AREA
C
         COMMON/INPTR/CNT
C
C
C...      13.      NAMTBL POINTERS TO NEGATIVE NUMBERS
C
      COMMON/NEGPTR/NONEPT
C
C...        11.    SEQUENCE NUMBER STORAGE
C
C                  COMMENT OF  SEQNO AND SEQNUM
C
      INCLUDE 'SEQCOM.INC'
C
C...        12.    LARGE DATA ARRAY STORAGE REQUIREMENTS
C
      COMMON/CFSIZE/CFSIZE,MAXSIZ,CANSIZ,IISC,KSC
      INTEGER CFSIZE,MAXSIZ,CANSIZ,IISC,KSC
      DIMENSION  CFSIZE(3),MAXSIZ(2),CANSIZ(2,100),KSC(3,300)
C
C
C...      14.      I. L. LIST OPTION FLAGS
C
      COMMON/PRT/CILPRT,  ILPRT, INTERP, ASSEMB, TRACFL
     /          ,PRTERR,  MCHDNG
      LOGICAL    CILPRT,  ILPRT, INTERP, ASSEMB, TRACFL
     /          ,PRTERR,  MCHDNG
C
C
C...        15.    ARRAY LIMIT STORAGE
C
      COMMON/SBSCPT/RNGPT,RANGE
      INTEGER RNGPT,RANGE
      DIMENSION RANGE(100)
C
C...        16.    LITERALS FOR I. L. OPERATION CODES
C
      COMMON/IL/IL
      DIMENSION IL(21)
C
C
C...        17.    MODE CODES
C
      COMMON/MODX/MODX
      DIMENSION MODX(32)
C
C
C...        18.    STRING STORAGE AREA
C
      COMMON/CHRX/CHR
      CHARACTER CHR*400
C
C...      19.      INTERMEDIATE LANGUAGE TEXT
C
      COMMON/ILTEXT/ILTEXT,TEXTIN
      INTEGER TEXTIN,ILTEXT
      DIMENSION TEXTIN(90),ILTEXT(4)
C
C
C         22.      MACRO PROCESSING VARIABLES
C
      COMMON/MACXX1/MACXX1
      INTEGER MACXX1
      DIMENSION MACXX1(71)
C
C         23.      MACRO PROCESSING ARRAYS
C
      COMMON/MACXX2/MACXX2
      DIMENSION MACXX2(902)
C
C         24.      MACRO PROCESSING ARRAYS
C
      COMMON/MACXX3/MACXX3
      DIMENSION MACXX3(1430)
C
C         25.      MACRO PROCESSING ARRAYS
C
      COMMON/MACXX4/MACXX4
      DIMENSION MACXX4( 100)
C
C         25A.     MACRO PROCESSING ARRAYS
C
      COMMON/MACXX5/ITMPSV
      DIMENSION ITMPSV(135)
C
C         26.      MACRO PROCESSING ARRAYS
C
      COMMON/MACXX6/MACXX6
      DIMENSION MACXX6(1300)
C
C         26A.     MACRO PROCESSING ARRAYS
C
      COMMON/MACXX7/MACXX7
      DIMENSION MACXX7(182)
C
C...        27.    OPERAND MODIFIERS
C
      COMMON/OPMOD/OPMOD
      INTEGER OPMOD
      DIMENSION    OPMOD(6)
C
C
C
C...        29.    CLASS CODE MODULI
C
      COMMON/MODULI/MODULO,MODHLF
C
C...        30.   NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCK
C
      COMMON/BLKCFS/FIRST
      INTEGER FIRST
      DIMENSION  FIRST(2,3)
C....
C           31.   COMMON BLOCK FOR PRO026 AND MOTION
C....
      COMMON /COMP26/COMP26,TAGTBL
      INTEGER COMP26,TAGTBL
      DIMENSION TAGTBL(3),COMP26(13)
C
C
C           32.   COMMON BLOCK FOR SETBIT AND BITMCH
C
      COMMON/BITCOM/BIT
      INTEGER BIT
      DIMENSION BIT(32)
C...
C ...       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE
C
C
      COMMON/BGEOM/BGEOM
      INTEGER BGEOM
      DIMENSION BGEOM(4)
C
C           36.    SYSTEM MACRO AND SEGMENT READ VARIABLES
C
      COMMON/MACSEG/MACSEG
      DIMENSION     MACSEG(6)
C
C...        37.    INCLUSIVE SUBSCRIPT VARIABLES
C
      COMMON/ISSCOM/ISSCOM,ISSTRM
      DIMENSION ISSTRM(2),ISSCOM(7)
C
C
C...     38.  COMMON BLOCK MACRO CALL STATEMENT
C             INDICATES A MACRO CALL BEING PROCESSED
C
         COMMON/CALFLG/ICALLF
C
C...        39.    COMMON BLOCK LIBRARY PRINTING FLAG
C
      COMMON/LIBPRT/LIBPRT
      LOGICAL       LIBPRT
C
C
      INCLUDE 'SUPER.INC'
C
C...        41.    NUMBER TABLE OVERFLOW VARIABLES
C
      COMMON/NTBL/NTBL
      DIMENSION   NTBL(6)
C
C
C           42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE
C
      COMMON/CANSTR/CANSTR,CANSTK
      INTEGER CANSTR,CANSTK
      DIMENSION CANSTK(16),CANSTR(2)
C
C           43.    COMMON BLOCK FOR LOOP
C
      COMMON/DOLOOP/DOLOOP
      INTEGER DOLOOP
      DIMENSION DOLOOP(8)
C
C
C           44.    COMMON BLOCK FOR ERROR POSITIONS
C
      COMMON/ERRPOS/ERRPOS
      INTEGER ERRPOS(302)
C
      INCLUDE 'OUTBUF.INC'
      INCLUDE 'DARRAY.INC'
      INCLUDE 'SDP.INC'
C
      INTEGER CODE
      COMMON/CODE/CODE(150)
C
      INTEGER SRCTBL
      COMMON/SRCTBL/SRCTBL(1482)
C
      INCLUDE 'GMTY.INC'
C
      INTEGER BCDPTR
      COMMON/BCDPTR/BCDPTR(7)
C
      COMMON/NUMPTR/NUMPTR(12)
C
      INTEGER SUBLST
      COMMON/SUBLST/SUBLST(136)
C
      INCLUDE 'NAMETB.INC'
C
         CHARACTER*8 MEMNAM
         COMMON/CLIBCM/MEMNAM
         COMMON/LIBCOM/IEOF
      INCLUDE 'ADDCOM.INC'
      INCLUDE 'BLANKCOM.INC'
      INCLUDE 'CLDT.INC'
      INCLUDE 'DEF.INC'
      INCLUDE 'DSNAME.INC'
      INCLUDE 'FXCOR.INC'
      INCLUDE 'HOLRTH.INC'
      INCLUDE 'IBRKPT.INC'
      INCLUDE 'IDEF.INC'
      INCLUDE 'IFXCOR.INC'
      INCLUDE 'ISV.INC'
      INCLUDE 'KNUMBR.INC'
      INCLUDE 'LDEF.INC'
      INCLUDE 'SRFNAM.INC'
      INCLUDE 'SSPAD.INC'
C
C
        INTEGER         NTB, FPB, PPB, COMN, CFB, NBLK, NRECRD, NTPARM
        DIMENSION       NRECRD(10),NTPARM(10)
C
        COMMON  /STOR/  NTB, FPB, PPB, COMN, CFB, NBLK, NRECRD, NTPARM
C

      INCLUDE 'SV.INC'
      INCLUDE 'WORK.INC'
      INCLUDE 'XUNITS.INC'
      INCLUDE 'ZNUMBR.INC'
C
      COMMON /APT227/ APT227
C
C...  22. TRACE BLOCK
      COMMON /TRACFL/TRCFLG
      LOGICAL TRCFLG
C
C     25.   COMMON FOR AERR INFORMATION
C
      COMMON /AERCOM/  IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS
      DIMENSION  PCTPTS(3,20), PCTPLN(4), ERRPTS(3,3)
C
C
C          29.  COMMON FOR HOLD INFORMATION
C
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)
C
C
C CONST--COMMON CONTAINING CONSTANTS
C
C
      COMMON/CONST/KCOMT,KCOMF,CILPR,KCBN
      LOGICAL CILPR
C
      COMMON/SSARLM/B(64,4),U(4),V(4),ITOP(6,4,4),IFLAG(4,4),IPNUM(4),
     X  ISEQLS,NLAST,MCAT,JENLAS(4),MODLAS(4),IRRLAS(4),NCALMX,NCMX
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM
      COMMON/MODESS/MODESS,MSSCHK,MSSARL
      COMMON/XDS/DGEOM(4),DLIM(4),TLDIR(3),DOFSET,ITLDIR,IDTOOL,NDS
      COMMON/XPS/PGEOM(4),PSIDE,PTHICK,IPTOOL,NPS
      COMMON/XFEED/CLRPLN(4),FED(4),NCLRPL,NFEED
      COMMON/XSTEPO/SSTEP(4),NSTEPO
      COMMON/XAXIS/AXIS(3),IAXIS,NAXIS
C
      LOGICAL SSPRT,SSTEST
      COMMON/SSPRT/SSPRT,SSTEST
C
      COMMON/SSBOND/SBOND0,SBOND,MMODE,ICON,PTS,JAG
      DIMENSION SBOND(9),PTS(20)
C
      COMMON /HSAVE/ SAVEH(50)
      COMMON/SQNC/ LSEQNO
C
      COMMON/IDDST/IDDST
C
C    MAXLDA CONTAINS THE MAXIMUM SPACE AVAILABLE FOR LDA'S
      COMMON/MAXLDA/MAXLDA
C
C  UEBERGABECOMMON FUER --PARMF--
      COMMON/PARMFC/UA,VA,PNUM,UT,US,FNAM
C
      COMMON/IZEILL/IZEIL
      INTEGER IZEIL
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
C
      COMMON /KFLAGS/ KFLAGS
      DIMENSION  KFLAGS(5)
C
      COMMON /NCFSTO/ NCFSTO,CSCALE
      DIMENSION NCFSTO(60000)
C
      COMMON /VERSON/ NEWSYS,ISTAND,IMACHN,IFIRST,NUM,KONSYS(2)
C
      COMMON /NRECC/ NRECC
      DIMENSION  NRECC(21)
C



C
      DOUBLE PRECISION DIST,UVDIST,SPBOND
      INTEGER ISTART
      DIMENSION SPBOND(40)
C
      COMMON/CSTART/DIST,UVDIST,SPBOND,ISTART
C



C
C   ***  20.  DARRAY BLOCK  ***
C
C   PRINT BUFFER
C
      INTEGER CPL
      PARAMETER (CPL=120)
      CHARACTER DARRAY*(CPL)
C
      COMMON/DARRAY/DARRAY
C



C
C   ***  2.  DEF BLOCK    ***
C
C   REAL VARIABLES USED BY DEFINITION ROUTINES
C   WHICH MUST REMAIN INVIOLATE
C
      DOUBLE PRECISION A(12,2),AHOLD(2,4),C1(8),LN1(5),R(10),REF(2,4)
C
      COMMON/DEF/A,AHOLD,C1,LN1,R,REF
C



C
C   ***  3.  DSHARE BLOCK 3  ***
C
C   USED FOR REAL VARIABLES AND SHARED WITH ARELEM
C
      DOUBLE PRECISION C(7),G(10),L(4),P(16),SC(16),T(12),T1(12),V(10)
C
      COMMON/DSHAR3/C,G,L,P,SC,T,T1,V
C
      SAVE /DSHAR3/
C



C
C   ***  4.  DSHARE BLOCK 4  ***
C
      DOUBLE PRECISION A,B,C,CENDIS,CMOVE(3),COM1,COM4,DIR(3),DP,DPE,
     +                 DPCNT,DPI,DPL,DP1,D1,D2A,FLIPCK,FWD(3),OGLE(3),
     +                 P1(3),P2(3),RDRN,REFPNT(3),TANGL,TES(3),TEW(3),
     +                 UVEC(3),U2(3),V(3),VL,ZL,ZLNORM(3),ZLPNT(3),ZL1,
     +                 PARAM(6),R(6),SAVPAR(4),SEG(9),SLOPE,SQROOT,UNN,
     +                 UPP,VINT,VNN,VPP
C
      COMMON/DSHAR4/A,B,C,CENDIS,CMOVE,COM1,COM4,DIR,DP,DPE,DPCNT,
     +              DPI,DPL,DP1,D1,D2A,FLIPCK,FWD,OGLE,P1,P2,RDRN,
     +              REFPNT,TANGL,TES,TEW,UVEC,U2,V,VL,ZL,ZLNORM,
     +              ZLPNT,ZL1,PARAM,R,SAVPAR,SEG,SLOPE,SQROOT,UNN,
     +              UPP,VINT,VNN,VPP
C
      SAVE /DSHAR4/
C



C
C   ***  5.  DSHARE BLOCK 5  ***
C
      DOUBLE PRECISION CCENTR(3),CEND(3),CENLEN,CHORD,COSTH,CRDIUS,
     +                 CTOOL,ALPHA,DCENTR(3),DRDIUS,DINC,DELMOT(3),
     +                 DNMOT(3),DIF,DIFOUT,DSMOV,D2(3),EL1,EL2,FIPNT(3),
     +                 HCHORD,HAFDIA,OFFSET,PSI,RADNO,RONE,RZERO(3),
     +                 RZEROL,SINTH,STVEC(3),TANMOT(3),THETA,ZDOTC,ZIGN,
     +                 ZGAMMA,ZPNTS
C
      COMMON/DSHAR5/CCENTR,CEND,CENLEN,CHORD,COSTH,CRDIUS,CTOOL,ALPHA,
     +              DCENTR,DRDIUS,DINC,DELMOT,DNMOT,DIF,DIFOUT,DSMOV,
     +              D2,EL1,EL2,FIPNT,HCHORD,HAFDIA,OFFSET,PSI,RADNO,
     +              RONE,RZERO,RZEROL,SINTH,STVEC,TANMOT,THETA,ZDOTC,
     +              ZIGN,ZGAMMA,ZPNTS
C
      SAVE /DSHAR5/
C



C
C   ***  6.  DSHARE BLOCK 6  ***
C
      DOUBLE PRECISION B,C,D(12),DX1,DX2,SB,TEM(3),TEMP,V(3),X2,Y2
C
      COMMON/DSHAR6/B,C,D,DX1,DX2,SB,TEM,TEMP,V,X2,Y2
C
      SAVE /DSHAR6/
C



C        COMMON BLOCKS FOR SURFACE NAME AND SUBSCRIPT STORAGE
C
C     23. DSNAME BLOCK
      COMMON/DSNAME/DSNAME,NAMSUB
C
C



C
      INTEGER ERND,ERRDM
      PARAMETER (ERND=159,ERRDM=1985)
C
      INTEGER ERRAD1,ERRAD2
      DIMENSION ERRAD1(ERND),ERRAD2(ERND)
C
      COMMON/ERRWR/ERRAD1,ERRAD2
C
      CHARACTER*4 ERRTXT
      DIMENSION ERRTXT(ERRDM)
C
      COMMON/ERRTXT/ERRTXT
C



C
C...COMMON/ERRWRD/ SPLIT INTO /EXERRW/ FOR INTEGERS & /EXERRT/ FOR TEXT.
C
      INTEGER ERND,ERRDM
      PARAMETER (ERND=369,ERRDM=6047)
C
      INTEGER ERRAD1,ERRAD2
      DIMENSION ERRAD1(ERND),ERRAD2(ERND)
C
      COMMON/EXERRW/ERRAD1,ERRAD2
C
      CHARACTER*4 ERRTXT(ERRDM)
C
      COMMON/EXERRT/ERRTXT
C



*
*  *  FILE ATTRIBUTES  *
*
*
      CHARACTER FILNAM*16,FILACC*10,FILFMT*11,OPSTAT*7,CLSTAT*6
      INTEGER NUMFIL,U,RL,NXTREC,LSTREC
      PARAMETER (NUMFIL=30)
C
      DIMENSION FILNAM(NUMFIL),FILACC(NUMFIL),FILFMT(NUMFIL),
     1          OPSTAT(NUMFIL),CLSTAT(NUMFIL),U(NUMFIL),RL(NUMFIL),
     2          NXTREC(NUMFIL),LSTREC(NUMFIL)
C
      COMMON/FILTAB/FILNAM,FILACC,FILFMT,OPSTAT,CLSTAT
      COMMON/IFILTB/U,RL,NXTREC,LSTREC
C
      SAVE /FILTAB/
      SAVE /IFILTB/
C



C

C    *** 7.  FXCOR BLOCK  ***
C
C    REAL VARIABLES USED BY ARELEM, WHICH MUST REMAIN INVIOLATE
C
      DOUBLE PRECISION AX4(3),CAGL,CUTDAT(7),GAMMA,HI,PMOVE(3),RA,
     +                 RC1,SAGL,SURD,TA(3),TAK(3),TE(3),TEK(3),TEL(3),
     +                 TEM(10),TEMP(24),TI(3),TIK(3),TIL(3),
     +                 TM(3),VTEM,ALP,TAL(3),DPMAX,STRTNO,TLHIT
C
      COMMON/FXCOR/AX4,CAGL,CUTDAT,GAMMA,HI,PMOVE,RA,RC1,SAGL,SURD,
     +             TA,TAK,TE,TEK,TEL,TEM,TEMP,TI,TIK,TIL,TM,
     +             VTEM,ALP,TAL,DPMAX,STRTNO,TLHIT
C
C
C    SEPARATE /CHARCT/ COMMON BLOCK FOR MODFER, WHICH WAS PART OF FXCOR.
C
      CHARACTER*6 MODFER
      COMMON/CHARCT/MODFER
C
C
C
C    TOOL DATA STORAGE
C
C    NOTE: 'TANHI' AND 'SINL' SHARE LOCATIONS AS DO 'TANLO' AND 'COSL'
C           THIS IS DELIBERATE.
C
      DOUBLE PRECISION TLHITE(8),TANHI(8),SINL(8),TANLO(8),COSL(8),
     +                 UMAX(8),RI(8),CORRAD(8),TCONT(0:8),TLINC(0:8)
C
      COMMON/TLLDAT/TLHITE,TANHI,TANLO,UMAX,RI,CORRAD,TCONT,TLINC
C
      EQUIVALENCE  (TANHI(1),SINL(1))
      EQUIVALENCE  (TANLO(1),COSL(1))
C



C
C.... GOLOFT FLAGS
C
      INTEGER REGFLG,MOTDIR,IAUTOG
      LOGICAL RINGFG
C
      COMMON/GLFLGS/REGFLG,RINGFG,MOTDIR,IAUTOG
C
C     REGFLG:    REGION FLAG
C     RINGFG:    RING CUTTER FLAG
C     MOTDIR:    MOTION DIRECTION FLAG OF TLAXIS
C     IAUTOG:    TLAXIS/...,AUTO FLAG
C



C
      INTEGER GEOLOC,PMIDTB,ARGMXY,GEOMTB
      DIMENSION GEOLOC(  50),PMIDTB( 250),ARGMXY( 250),GEOMTB(2170)
C
      COMMON/GMTY/GEOLOC,PMIDTB,ARGMXY,GEOMTB
C



C
C     *** 8.  HOLRTH BLOCK ***
C
C     ALPHA-NUMERIC LITERAL CONSTANTS.
C
      CHARACTER*8 HPS,HDS,HCS,HLFT,HRGT,HFWD,HBACK,HUP,HDOWN,HTO,
     +            HPAST,HON,HTANTO,HPSTAN,HDYNP,HAERR,HCLDAT,HGERR
C
      COMMON/HBLOCK/HPS,HDS,HCS,HLFT,HRGT,HFWD,HBACK,HUP,HDOWN,HTO,
     +              HPAST,HON,HTANTO,HPSTAN,HDYNP,HAERR,HCLDAT,HGERR
C



C
C   *** IBRKPT ***
C
      COMMON/IBRKPT/IBRKPT(51)
C



C
C.... DEBUG FLAGS
C
      INTEGER IBUG,IPCOLC,IPCOLM
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM
C



C
C   ***  14.  IDEF BLOCK  ***
C
C   INVIOLATE INTEGER VARIABLES
C
      INTEGER LDASIZ,IERROR,SURFAD(4),KWRDSZ,IBLK1
C
      COMMON/IDEF/LDASIZ,IERROR,SURFAD,KWRDSZ,IBLK1
C




C
C    *** 15.  IFXCOR BLOCK  ***
C
C    INVIOLATE ARELEM INTEGER VARIABLES
C
      INTEGER IAERR,IAUTPS,IBEGIN,IC,ICL,ICS,ICSCNT,ICTDEF,
     +        ICUT,IDS,IER,IGO,IGOTO,IGOUG,IGS,INOPS,IPSDEF,
     +        IPS,IPT1,IS,ISEQNO,ISRCH,ISTRUP,IT,I3DFLG,JBR,
     +        JSW,LSV,LSV1,MOTMOD,MULOUT,MANTAX,NMPNTS,NREC,
     +        NUMAX,NUMCNT,NUMP,NUMPT1,NUMSFS,NUMSUR,NW,
     +        ICHECK,ISEG,NMBSEG,NWDS,MSAV
C
      COMMON/IFXCOR/IAERR,IAUTPS,IBEGIN,IC,ICL,ICS,ICSCNT,ICTDEF,
     +              ICUT,IDS,IER,IGO,IGOTO,IGOUG,IGS,INOPS,IPSDEF,
     +              IPS,IPT1,IS,ISEQNO,ISRCH,ISTRUP,IT,I3DFLG,JBR,
     +              JSW,LSV,LSV1,MOTMOD,MULOUT,MANTAX,NMPNTS,NREC,
     +              NUMAX,NUMCNT,NUMP,NUMPT1,NUMSFS,NUMSUR,NW,
     +              ICHECK,ISEG,NMBSEG,NWDS,MSAV
C



C
C.... INTERFERENCE CHECKING INITIAL DATA
C
      DOUBLE PRECISION CXHULL,DULIM,DVLIM,CURMIN,CURMAX
      INTEGER NGP,NCXHUL,MXNP,ICURSF
C
      PARAMETER (MXNP=1000)
C
C.... SPHERICAL SURFACE ENCLOSURES (HULLS)
      DIMENSION CXHULL(4,6,MXNP)
C.... NUMBER OF HULLS
      DIMENSION NCXHUL(MXNP)
C.... DU ITERATION LIMIT FOR PATCHES
      DIMENSION DULIM(MXNP)
C.... DV ITERATION LIMIT FOR PATCHES
      DIMENSION DVLIM(MXNP)
C.... MAXIMUM AND MINIMUM CURVATURE OF PATCHES
      DIMENSION CURMAX(MXNP),CURMIN(MXNP)
C
C     MXNP   -  MAXIMUM NUMBER OF PATCHES PER SURFACE
C     NGP    -  NUMBER OF PATCHES IN CURRENT SURFACE
C     ICURSF -  EXTERNAL LDA FILE RECORD NUMBER FOR CURRENT SURFACE
C
      COMMON/INIDAT/CXHULL,DULIM,DVLIM,CURMAX,CURMIN,NCXHUL,NGP,ICURSF
C



C
C    INTERFERENCE TABLE
C
      INTEGER MAXNP
      PARAMETER (MAXNP=1000)
C
      INTEGER PINTR,LPINTR,NPINTR,LNPINT,ISEG
      DOUBLE PRECISION DINTR,UINTR,VINTR,LDINTR,LUINTR,LVINTR
      DOUBLE PRECISION TPINTR,SPINTR,SNINTR
C
      DIMENSION DINTR(MAXNP),PINTR(MAXNP),UINTR(MAXNP),VINTR(MAXNP)
      DIMENSION LDINTR(MAXNP),LPINTR(MAXNP),LUINTR(MAXNP),LVINTR(MAXNP)
      DIMENSION TPINTR(3,MAXNP),SPINTR(3,MAXNP),SNINTR(3,MAXNP)
      DIMENSION ISEG(MAXNP)
C
      COMMON/INTERF/DINTR,UINTR,VINTR,LDINTR,LUINTR,LVINTR,
     +              TPINTR,SPINTR,SNINTR,PINTR,LPINT,ISEG,NPINTR,LNPINT
C



C     -------------------
      DIMENSION   NB(COMSIZ),   FP(COMSIZ),   CF(COMSIZ),   IA(COMSIZ),
     X          CM(2,COMSIZ), NT(2,COMSIZ), MT(COMSIZ*2), PP(COMSIZ*2)
      DOUBLE PRECISION  NB,        FP,        CF,     IA
      INTEGER           CM,        NT,        MT,     PP
      EQUIVALENCE      (COM(1),    NB(1),    FP(1),  CF(1),  IA(1),
     X                  CM(1,1),   NT(1,1),  MT(1),  PP(1))
C



C
C   *** 16.  ISHARE16 BLOCK ***
C
C   THESE ALL APPEAR TO BE USED AS LOCAL VARIABLES
C
C   I.E.  I,J,K,M,N,J11,L11,M11
C



C
C   *** 17.  ISHARE17 BLOCK  ***
C
C   TABCYL SHARED INTEGER VARIABLES
C   SOME OF THESE MAY BE ONLY USED AS LOCAL VARIABLES
C
      INTEGER I,INC,I1,J,J1,K,L,LIM,L1,M,N,NM1
C
      COMMON/ISHR17/I,INC,I1,J,J1,K,L,LIM,L1,M,N,NM1
C
      SAVE /ISHR17/
C



C
C   *** 18.  ISHARE18 BLOCK  ***
C
C   I,J,K,L,M,N HAVE BEEN REMOVED FROM FRONT OF THIS BLOCK,
C   AS THEY APPEAR TO BE USED AS LOCAL VARIABLES.
C
      INTEGER IAMDCT,IPDPL,IPT,IWS,JCKR,JCNT1,JCNT2,JCNT3,
     +        JCPR,JCR,JDR,JFIND,JGR,JMIN,JMINR,JPR,JPXR,
     +        JTKF,JTR,J10,J12,J13,J54,MDIC
C
      COMMON/ISHR18/IAMDCT,IPDPL,IPT,IWS,JCKR,JCNT1,JCNT2,JCNT3,
     +              JCPR,JCR,JDR,JFIND,JGR,JMIN,JMINR,JPR,JPXR,
     +              JTKF,JTR,J10,J12,J13,J54,MDIC
C
      SAVE /ISHR18/
C



C
C   *** 12.  ISV BLOCK  ***
C
C   INTEGER SURFACE VARIABLES
C
      INTEGER IAFL(5),ICANON(5),INDEX(5),INDIR(5),IOP(5),IOPSET(5),
     +        IPL(5),ISFIDN(5),ISFTYP(5),ISIGCR(5),ISVFL(5),ITLON(5),
     +        ITSEG(5),IUNFL(5),JENT(5),JIOPS(5),JTLFLG(5),JTN(5),
     +        JU1(5),LIMFL(5),ITSEGK(5)
C
      COMMON/ISV/IAFL,ICANON,INDEX,INDIR,IOP,IOPSET,IPL,ISFIDN,ISFTYP,
     +           ISIGCR,ISVFL,ITLON,ITSEG,IUNFL,JENT,JIOPS,JTLFLG,JTN,
     +           JU1,LIMFL,ITSEGK
C
      INTEGER IFAR(5),IFL4(5),J20(5),J21(5),J22(5),J23(5),J50(5),
     +        J51(5),NOTAN(5),JPH(5)
C
      COMMON/ISV1/IFAR,IFL4,J20,J21,J22,J23,J50,J51,NOTAN,JPH
C



C
C   ***  19.  KNUMBR BLOCK  ***
C
C      INTEGER LITERALS
C
      INTEGER          K0,   K1,   K2,   K3,   K4,   K5,   K6,   K7,
     1                 K8,   K9,  K10,  K12,  K13,  K15,  K16,  K18,
     2                K19,  K23,  K24,  K25,  K26,  K27,  K29,  K30,
     3                K31,  K32,  K33,  K34,  K44,  K45,  K46,  K47,
     4                K48,  K50,  K51,  K52,K1013, K1E4, K1E6,  KM1
C
      COMMON/KNUMBR/   K0,   K1,   K2,   K3,   K4,   K5,   K6,   K7,
     1                 K8,   K9,  K10,  K12,  K13,  K15,  K16,  K18,
     2                K19,  K23,  K24,  K25,  K26,  K27,  K29,  K30,
     3                K31,  K32,  K33,  K34,  K44,  K45,  K46,  K47,
     4                K48,  K50,  K51,  K52,K1013, K1E4, K1E6,  KM1
C




C
C   ***  11.  LDEF BLOCK  ***
C
C   LOGICAL VARIABLES WHICH MUST REMAIN INVIOLATE
C
      LOGICAL JCS,PRNTON,REFFLG,SUBFLG,UNFLAG,ZFLAG,JDS,
     1            BOUNDF,PCHLST,CANFLG,BNDERR,TABPRT,REFMOT,ALTMLT
C
      COMMON/LDEF/JCS,PRNTON,REFFLG,SUBFLG,UNFLAG,ZFLAG,JDS,
     1            BOUNDF,PCHLST,CANFLG,BNDERR,TABPRT,REFMOT,ALTMLT
C



C
      LOGICAL ERROR
C
      COMMON/LDSCOM/ERROR,IBKPNT,NUMEL,PRODI,IPROD,BREAK,PDERR,NUMGP,KNT
C



C
      COMMON/LOKAL/PASTIS
C



C
      INTEGER CHARST,CHARND
      DIMENSION NAMTBL(3000)
C
      COMMON/NAMETB/CHARST,CHARND,INAMST,INAMND,NAMEST,NAMMAX,
     1              IFIXST,IFIXND,NUMBST,NUMBND,NAMTBL
C
      CHARACTER*6 CNAMTB(3000)
      CHARACTER*12 CNUMTB(3000)
C
      COMMON/CNAMTB/CNAMTB,CNUMTB
C
      SAVE /NAMETB/
      SAVE /CNAMTB/
C



C
C       45.    NUMBER TABLE INDICES
C
      INTEGER MNMBND,NUMIDX,NMBRS,LSTCHR,MASGND
      COMMON/NUMBLK/MNMBND,NUMIDX,NMBRS,LSTCHR,MASGND
C
C MNMBND:      LAST NAME TABLE ENTRY TO MACRO ASSIGNED NUMBER SECTION
C NUMIDX:      NAMTBL INDEX OF A NUMBER GIVEN IN THE CURRENT STATEMENT
C  NMBRS:      QUANTITY OF NUMBERS IN THE CURRENT STATEMENT
C LSTCHR:      LAST CHARACTER OF A NUMBER
C MASGND:      NAME TABLE INDEX OF SECTION END FOR NUMBERS ASSIGNMENT
C



C
      INTEGER ERND,ERRDM,ERRCNT,ERRAD1,ERRAD2
      DIMENSION ERRAD1(154),ERRAD2(154)
C
      COMMON/ERRWR/ERND,ERRDM,ERRCNT,ERRAD1,ERRAD2
C
      CHARACTER*4 ERRTXT
      DIMENSION ERRTXT(1929)
C
      COMMON/ERRTXT/ERRTXT
C



C
C...COMMON/ERRWRD/ SPLIT INTO /EXERRW/ FOR INTEGERS & /EXERRT/ FOR TEXT.
C
      INTEGER ERND,ERRDM,ERRCNT,ERRAD1,ERRAD2
      DIMENSION ERRAD1(369),ERRAD2(369)
C
      COMMON/EXERRW/ERND,ERRDM,ERRCNT,ERRAD1,ERRAD2
C
      CHARACTER*4 ERRTXT(6047)
C
      COMMON/EXERRT/ERRTXT
C



      COMMON /APT227/ APT227
C
C...  22. TRACE BLOCK
      COMMON /TRACFL/TRACFL
      LOGICAL TRACFL
C
C     25.   COMMON FOR AERR INFORMATION
C
      COMMON /AERCOM/  IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS
      DIMENSION  PCTPTS(3,20), PCTPLN(4), ERRPTS(3,3)
C
C
C          29.  COMMON FOR HOLD INFORMATION
C
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)
C
C
C CONST--COMMON CONTAINING CONSTANTS
C
C
      COMMON/CONST/KCOMT,KCOMF,CILPRT,KCBN
      LOGICAL CILPRT
C
      COMMON/SSARLM/B(64,4),U(4),V(4),ITOP(6,4,4),IFLAG(4,4),IPNUM(4),
     X  ISEQLS,NLAST,MCAT,JENLAS(4),MODLAS(4),IRRLAS(4),NCALMX,NCMX
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM
      COMMON/MODESS/MODESS,MSSCHK,MSSARL
      COMMON/XDS/DGEOM(4),DLIM(4),TLDIR(3),DOFSET,ITLDIR,IDTOOL,NDS
      COMMON/XPS/PGEOM(4),PSIDE,PTHICK,IPTOOL,NPS
      COMMON/XFEED/CLRPLN(4),FED(4),NCLRPL,NFEED
      COMMON/XSTEPO/SSTEP(4),NSTEPO
      COMMON/XAXIS/AXIS(3),IAXIS,NAXIS
C
      LOGICAL SSPRT,SSTEST
      COMMON/SSPRT/SSPRT,SSTEST
C
      COMMON/SSBOND/SBOND0,SBOND,MMODE,ICON,PTS,JAG
      DIMENSION SBOND(9),PTS(20)
C
      COMMON /HSAVE/ SAVEH(50)
      COMMON/SQNC/ LSEQNO
C
      COMMON/IDDST/IDDST
C
C    MAXLDA CONTAINS THE MAXIMUM SPACE AVAILABLE FOR LDA'S
      COMMON/MAXLDA/MAXLDA
C
C  UEBERGABECOMMON FUER --PARMF--
      COMMON/PARMFC/UA,VA,PNUM,UT,US,FNAM
C
      COMMON/IZEILL/IZEIL
      INTEGER IZEIL
C
      COMMON /EDITOR/ EDITOR
      DIMENSION  EDITOR(1500)
C
      COMMON /KFLAGS/ KFLAGS
      DIMENSION  KFLAGS(5)
C
      INCLUDE 'CLHOLRTH.INC'
C
      COMMON /NCFSTO/ NCFSTO,CSCALE
      DIMENSION NCFSTO(60000)
C
      COMMON /VERSON/ NEWSYS,ISTAND,IMACHN,IFIRST,NUM,KONSYS(2)
C
      COMMON /NRECC/ NRECC
      DIMENSION  NRECC(21)
C
      COMMON/R5AXIS/
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,VCUTER,TEST  ,CRADUS
C
      COMMON/I5AXIS/
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV



C
      INTEGER PAGPAK,ISC,ISCARR,ICFORM,IFLOAT,ICOM,MACWDS,PPWRDS,LPAGE
      LOGICAL MACFLG,LABFLG,RSVFLG
      INTEGER BUFFER,LABBUF,IBUF,ILBUF,PPPAGE,MCPAGE
      DIMENSION BUFFER(256),LABBUF(256)
C
      COMMON/OUTBUF/PAGPAK,ISC,ISCARR,ICFORM,IFLOAT,ICOM,MACWDS,PPWRDS,
     +              MACFLG,LABFLG,RSVFLG,LPAGE,
     +              BUFFER,LABBUF,IBUF,ILBUF,PPPAGE,MCPAGE
C



C
      DIMENSION PRODN(6000),PRODA(2000),IPRODB(2000),PROD2(2,3000)
      CHARACTER*6 PRODB(2000)
C
      COMMON/PRODN/PRODN
      COMMON/CPRODN/PRODB
C
      EQUIVALENCE (PRODA(1),PRODN(1))
      EQUIVALENCE (IPRODB(1),PRODN(2001))
      EQUIVALENCE (PROD2(1,1),PRODN(1))
C



C
C.... NEW REGIONAL MILLING FLAGS
C
      LOGICAL LGCHK,LINTCK,LAVCTL,LVAXIS
C
      COMMON/RMFLGS/LGCHK,LINTCK,LAVCTL,LVAXIS
C
C     LGCHK  - GOUGE CHECK FLAG
C     LINTCK - INTERFERENCE CHECKING FLAG
C     LAVCTL - AVOIDANCE CONTROL FLAG
C     LVAXIS - VARIABLE TOOL AXIS FLAG
C



      COMMON/SDP/NBCHAR,NBWRD,IWRD,IFAC
C



C
      INTEGER SEQNO
      CHARACTER*6 SEQNUM
C
      COMMON/SEQCOM/SEQNO
      COMMON/CSEQCM/SEQNUM
C



C     24. SRFNAM BLOCK
      COMMON /SRFNAM/ PSNAME,CS1NAM,CS2NAM,IPSSUB,ICS1SB,ICS2SB
C
C



C
C.... SCULPTURED SURFACES SCRATCH PAD AREA
C
      INTEGER ISCN
      PARAMETER (ISCN=20000)
C
      COMMON/SSPAD/NSCNMX,ISCAN,SCAN(ISCN)
C
      DOUBLE PRECISION SCAN
C



C
C MODULE:       STOR.INC
C PURPOSE:      TO DECLARE STORAGE CONTROL VARIABLES USED BY THE
C               INTERPRETOR
C
C DATE:         03-MAR-85
C AUTHOR:       C. LASHER
C
C
        INTEGER         NTB, FPB, PPB, COMN, CFB, NBLK, NRECRD, NTPARM
        DIMENSION       NRECRD(10),NTPARM(10)
C
        COMMON  /STOR/  NTB, FPB, PPB, COMN, CFB, NBLK, NRECRD, NTPARM
C
C... THESE VARIABLES ARE USED TO CONTROL NUMBER TABLE DIRECT ACCESS
C
C
        EQUIVALENCE   (NTPARM(1),NUMBST), (NTPARM(2),NUMOD ),
     +                (NTPARM(3),NDAFLG), (NTPARM(4),NRECST),
     +                (NTPARM(5),IPAGE )
C
C



C
      CHARACTER*80 IRDSAV
      DIMENSION XTRAS(7),CFLAGS(4),LXTRAS(7)
      INTEGER   ERRX,XTRAS
      LOGICAL   ERR,FINI,XC,CL,ASM,LXTRAS,CFLAGS,PX,END,ABEND
C
      COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS
      COMMON/CSUPER/IRDSAV
C
      EQUIVALENCE (LXTRAS(1),XTRAS(1)),(CFLAGS(1),ERR)
C



C
C   *** 9.  SV BLOCK ***
C
C   REAL SURFACE VARIABLES
C
      DOUBLE PRECISION CC(3,5),EPS1(5),EPS2(5),EPS3(5),EPS4(5),
     +                 EPS6(5),EPS8(5),PAST(5),PLND(5),PLNV(3,5),
     +                 RC(5),S(5),SAVE(5),SFVCT(3,5),SLX(3,5),SN(3,5),
     +                 SNK(3,5),SNL(3,5),SP(3,5),SPK(3,5),SPL(3,5),
     +                 TAU(5),TAU1(5),TAU2(5),TH(5),TN(3,5),TOOLHT(3,5),
     +                 TOOLWD(5),TP(3,5),TPK(3,5),U1(3,5),VNDIR(3,5),
     +                 VT(3,5),Z(5),VARBLE(5),U1K(3,5),SK(3,5)
C
      COMMON/SV/CC,EPS1,EPS2,EPS3,EPS4,EPS6,EPS8,PAST,PLND,PLNV,
     +          RC,S,SAVE,SFVCT,SLX,SN,SNK,SNL,SP,SPK,SPL,TAU,TAU1,
     +          TAU2,TH,TN,TOOLHT,TOOLWD,TP,TPK,U1,VNDIR,VT,Z,
     +          VARBLE,U1K,SK
C
      DOUBLE PRECISION COS1(5),CPLFL(5),CPTST(5),CSD(5),DPLAN(3,5),
     +                 DPMX1(5),PLNCS(5),PLND1(5),PLTST(5),STCK(5),
     +                 STCKN(5),STCK1(5),STCK2(5),TEE(3,5),TNL(3,5)
C
      COMMON/SV1/COS1,CPLFL,CPTST,CSD,DPLAN,DPMX1,PLNCS,PLND1,
     +           PLTST,STCK,STCKN,STCK1,STCK2,TEE,TNL
C



C
C...                SYSTEM I/O FILES
C
      INTEGER CLFILP,CLFILE,CLFIL3,EXFILE,VLFILE,PNCHFL,
     1        XCAN  ,XNUM  ,ELFIL1,ELFIL2,ELFIL3,ELFIL4,
     2        CPFILE,AXFILE,POFILE,ELFILE,TIFILE,PXFILE
C
      COMMON/SYMFIL/CLFILP,CLFILE,CLFIL3,EXFILE,INFILE,
     1              VLFILE,PNCHFL,XCAN  ,MACTXT,XNUM  ,
     2              ELFIL1,ELFIL2,ELFIL3,ELFIL4,CPFILE,
     3              AXFILE,POFILE,ELFILE,LCDATA,TIFILE,
     4              PXFILE,NFIL12,NFIL13,ISPARE(27)
C



C
      DOUBLE PRECISION ALPHA,BETA,COSA,COSB,SINA,SINB
      COMMON/TAC/ALPHA,BETA,COSA,COSB,SINA,SINB,ITAC
C
C     ALPHA  TOOL AXIS SLEW ANGLE WRT SN
C            IN GUIDE SURFACE CRSSPL DIRN. IF PATH IN TANSPL DIRN.
C            AND VICE VERSA
C     BETA   TOOL AXIS TILT ANGLE (CUTANG) WRT SN
C            IN PATH DIRECTION
C     COSA   COS(ALPHA)
C     COSB   COS(BETA)
C     SINA   SIN(ALPHA)
C     SINB   SIN(BETA)
C     ITAC   FLAG INDICATING THAT ATANGL TYPE TOOL AXIS CONTROL
C            IS REQUIRED =1, =0 FOR FIXED OR NORMDS
C



C
C    TOOL DATA STORAGE
C
C    NOTE: 'TANHI' AND 'SINL' SHARE LOCATIONS AS DO 'TANLO' AND 'COSL'
C           THIS IS DELIBERATE.
C
      DOUBLE PRECISION TLHITE(8),TANHI(8),SINL(8),TANLO(8),COSL(8),
     +                 UMAX(8),RI(8),CORRAD(8),TCONT(0:8),TLINC(0:8)
C
      COMMON/TLLDAT/TLHITE,TANHI,TANLO,UMAX,RI,CORRAD,TCONT,TLINC
C
      EQUIVALENCE  (TANHI(1),SINL(1))
      EQUIVALENCE  (TANLO(1),COSL(1))
C



C
C    THE ORIGINAL COMMON-DIMENSION-EQUIVALENCE (CDE) PACKAGE TOTAL
C    HAS BEEN REPLACED BY INDIVIDUAL COMMON BLOCKS, AND EQUIVALENCE
C    STATEMENTS HAVE BEEN ELIMINATED AS FAR AS POSSIBLE.
C



C
C MODULE:       WORK.INC
C PURPOSE:      TO DECLARE THE WORKING VARIABLES USED BY THE SSR1
C               INTERPRETOR.
C
C DATE:         05-MAR-85
C AUTHOR:       C. LASHER
C
C
      DIMENSION     LNA(2,20)
C
      INTEGER       PGC, PGCN, ILC, IXC, SCP, SAP, NSP, IAP, CFP, COMP
      INTEGER       NTP, LNA,  RTP, AC
C
      COMMON /WORK/ PGC, PGCN, ILC, IXC, SCP, SAP, NSP, IAP, CFP, COMP,
     +              NTP, LNA,  RTP, AC
C
C



C
      DOUBLE PRECISION TABEXT,SSEXT
      INTEGER IOLD
      CHARACTER*6 OLDMOD
C
      COMMON/XUNITS/TABEXT,SSEXT,IOLD
      COMMON/XUNITC/OLDMOD
C



C
C   ***  10.  ZNUMBR BLOCK  ***
C
C   REAL LITERALS
C
      DOUBLE PRECISION  Z0,    Z1,    Z2,    Z3,    Z5,
     1                 Z10,   Z90,  Z1E6, Z1E38, Z5EM1,
     2               Z6EM1, Z9EM1,Z11EM1,Z12EM1, Z1EM2,
     3               Z1EM3, Z1EM5, Z5EM6, Z1EM6, Z1EM7,
     4               Z1EM9, Z1EM1,   ZM1,DEGRAD,    PI
C
      COMMON/ZNUMBR/    Z0,    Z1,    Z2,    Z3,    Z5,
     1                 Z10,   Z90,  Z1E6, Z1E38, Z5EM1,
     2               Z6EM1, Z9EM1,Z11EM1,Z12EM1, Z1EM2,
     3               Z1EM3, Z1EM5, Z5EM6, Z1EM6, Z1EM7,
     4               Z1EM9, Z1EM1,   ZM1,DEGRAD,    PI
C
*COPY INIDAT
C
C.... INTERFERENCE CHECKING INITIAL DATA
C
      DOUBLE PRECISION CXHULL,DULIM,DVLIM,CURMIN,CURMAX
      INTEGER NGP,NCXHUL,MXNP,ICURSF
C
      PARAMETER (MXNP=1000)
C
C.... SPHERICAL SURFACE ENCLOSURES (HULLS)
      DIMENSION CXHULL(4,6,MXNP)
C.... NUMBER OF HULLS
      DIMENSION NCXHUL(MXNP)
C.... DU ITERATION LIMIT FOR PATCHES
      DIMENSION DULIM(MXNP)
C.... DV ITERATION LIMIT FOR PATCHES
      DIMENSION DVLIM(MXNP)
C.... MAXIMUM AND MINIMUM CURVATURE OF PATCHES
      DIMENSION CURMAX(MXNP),CURMIN(MXNP)
C
C     MXNP   -  MAXIMUM NUMBER OF PATCHES PER SURFACE
C     NGP    -  NUMBER OF PATCHES IN CURRENT SURFACE
C     ICURSF -  EXTERNAL LDA FILE RECORD NUMBER FOR CURRENT SURFACE
C
      COMMON/INIDAT/CXHULL,DULIM,DVLIM,CURMAX,CURMIN,NCXHUL,NGP,ICURSF
C
*COPY INTERF
C
C    INTERFERENCE TABLE
C
      INTEGER MAXNP
      PARAMETER (MAXNP=1000)
C
      INTEGER PINTR,LPINTR,NPINTR,LNPINT,ISEG
      DOUBLE PRECISION DINTR,UINTR,VINTR,LDINTR,LUINTR,LVINTR
      DOUBLE PRECISION TPINTR,SPINTR,SNINTR
C
      DIMENSION DINTR(MAXNP),PINTR(MAXNP),UINTR(MAXNP),VINTR(MAXNP)
      DIMENSION LDINTR(MAXNP),LPINTR(MAXNP),LUINTR(MAXNP),LVINTR(MAXNP)
      DIMENSION TPINTR(3,MAXNP),SPINTR(3,MAXNP),SNINTR(3,MAXNP)
      DIMENSION ISEG(MAXNP)
C
      COMMON/INTERF/DINTR,UINTR,VINTR,LDINTR,LUINTR,LVINTR,
     +              TPINTR,SPINTR,SNINTR,PINTR,LPINTR,ISEG,NPINTR,LNPINT
C
*COPY INTRPEQ
C     -------------------
      DIMENSION   NB(COMSIZ),   FP(COMSIZ),   CF(COMSIZ),   IA(COMSIZ),
     X          CM(2,COMSIZ), NT(2,COMSIZ), MT(COMSIZ*2), PP(COMSIZ*2)
      DOUBLE PRECISION  NB,        FP,        CF,     IA
      INTEGER           CM,        NT,        MT,     PP
      EQUIVALENCE      (COM(1),    NB(1),    FP(1),  CF(1),  IA(1),
     X                  CM(1,1),   NT(1,1),  MT(1),  PP(1))
C
*COPY ISHR16
C
C   *** 16.  ISHARE16 BLOCK ***
C
C   THESE ALL APPEAR TO BE USED AS LOCAL VARIABLES
C
C   I.E.  I,J,K,M,N,J11,L11,M11
C
*COPY ISHR17
C
C   *** 17.  ISHARE17 BLOCK  ***
C
C   TABCYL SHARED INTEGER VARIABLES
C   SOME OF THESE MAY BE ONLY USED AS LOCAL VARIABLES
C
      INTEGER I,INC,I1,J,J1,K,L,LIM,L1,M,N,NM1
C
      COMMON/ISHR17/I,INC,I1,J,J1,K,L,LIM,L1,M,N,NM1
C
      SAVE /ISHR17/
C
*COPY ISHR18
C
C   *** 18.  ISHARE18 BLOCK  ***
C
C   I,J,K,L,M,N HAVE BEEN REMOVED FROM FRONT OF THIS BLOCK,
C   AS THEY APPEAR TO BE USED AS LOCAL VARIABLES.
C
      INTEGER IAMDCT,IPDPL,IPT,IWS,JCKR,JCNT1,JCNT2,JCNT3,
     +        JCPR,JCR,JDR,JFIND,JGR,JMIN,JMINR,JPR,JPXR,
     +        JTKF,JTR,J10,J12,J13,J54,MDIC
C
      COMMON/ISHR18/IAMDCT,IPDPL,IPT,IWS,JCKR,JCNT1,JCNT2,JCNT3,
     +              JCPR,JCR,JDR,JFIND,JGR,JMIN,JMINR,JPR,JPXR,
     +              JTKF,JTR,J10,J12,J13,J54,MDIC
C
      SAVE /ISHR18/
C
*COPY ISV
C
C   *** 12.  ISV BLOCK  ***
C
C   INTEGER SURFACE VARIABLES
C
      INTEGER IAFL(5),ICANON(5),INDEX(5),INDIR(5),IOP(5),IOPSET(5),
     +        IPL(5),ISFIDN(5),ISFTYP(5),ISIGCR(5),ISVFL(5),ITLON(5),
     +        ITSEG(5),IUNFL(5),JENT(5),JIOPS(5),JTLFLG(5),JTN(5),
     +        JU1(5),LIMFL(5),ITSEGK(5)
C
      COMMON/ISV/IAFL,ICANON,INDEX,INDIR,IOP,IOPSET,IPL,ISFIDN,ISFTYP,
     +           ISIGCR,ISVFL,ITLON,ITSEG,IUNFL,JENT,JIOPS,JTLFLG,JTN,
     +           JU1,LIMFL,ITSEGK
C
      INTEGER IFAR(5),IFL4(5),J20(5),J21(5),J22(5),J23(5),J50(5),
     +        J51(5),NOTAN(5),JPH(5)
C
      COMMON/ISV1/IFAR,IFL4,J20,J21,J22,J23,J50,J51,NOTAN,JPH
C
*COPY KNUMBR
C
C   ***  19.  KNUMBR BLOCK  ***
C
C      INTEGER LITERALS
C
      INTEGER          K0,   K1,   K2,   K3,   K4,   K5,   K6,   K7,
     1                 K8,   K9,  K10,  K12,  K13,  K15,  K16,  K18,
     2                K19,  K23,  K24,  K25,  K26,  K27,  K29,  K30,
     3                K31,  K32,  K33,  K34,  K44,  K45,  K46,  K47,
     4                K48,  K50,  K51,  K52,K1013, K1E4, K1E6,  KM1
C
      COMMON/KNUMBR/   K0,   K1,   K2,   K3,   K4,   K5,   K6,   K7,
     1                 K8,   K9,  K10,  K12,  K13,  K15,  K16,  K18,
     2                K19,  K23,  K24,  K25,  K26,  K27,  K29,  K30,
     3                K31,  K32,  K33,  K34,  K44,  K45,  K46,  K47,
     4                K48,  K50,  K51,  K52,K1013, K1E4, K1E6,  KM1
C

*COPY LDEF
C
C   ***  11.  LDEF BLOCK  ***
C
C   LOGICAL VARIABLES WHICH MUST REMAIN INVIOLATE
C
      LOGICAL JCS,PRNTON,REFFLG,SUBFLG,UNFLAG,ZFLAG,JDS,
     1            BOUNDF,PCHLST,CANFLG,BNDERR,TABPRT,REFMOT,ALTMLT
C
      COMMON/LDEF/JCS,PRNTON,REFFLG,SUBFLG,UNFLAG,ZFLAG,JDS,
     1            BOUNDF,PCHLST,CANFLG,BNDERR,TABPRT,REFMOT,ALTMLT
C
*COPY LDSCOM
C
      LOGICAL ERROR
C
      COMMON/LDSCOM/ERROR,IBKPNT,NUMEL,PRODI,IPROD,BREAK,PDERR,NUMGP,KNT
C
*COPY LIBCOM
C
      COMMON/LIBCOM/IEOF
C
      CHARACTER*11 APTLIB
      CHARACTER*40 FILENM
      CHARACTER*8  MEMNAM
      COMMON/LIBFIL/APTLIB,FILENM,MEMNAM
C
*COPY LOKAL
C
      COMMON/LOKAL/PASTIS
C
*COPY NAMETB
C
      INTEGER CHARST,CHARND
      DIMENSION NAMTBL(3000)
C
      COMMON/NAMETB/CHARST,CHARND,INAMST,INAMND,NAMEST,NAMMAX,
     1              IFIXST,IFIXND,NUMBST,NUMBND,NAMTBL
C
      CHARACTER*6 CNAMTB(3000)
      CHARACTER*12 CNUMTB(3000)
C
      COMMON/CNAMTB/CNAMTB,CNUMTB
C
      SAVE /NAMETB/
      SAVE /CNAMTB/
C
*COPY NUMBLK
C
C       45.    NUMBER TABLE INDICES
C
      INTEGER MNMBND,NUMIDX,NMBRS,LSTCHR,MASGND
      COMMON/NUMBLK/MNMBND,NUMIDX,NMBRS,LSTCHR,MASGND
C
C MNMBND:      LAST NAME TABLE ENTRY TO MACRO ASSIGNED NUMBER SECTION
C NUMIDX:      NAMTBL INDEX OF A NUMBER GIVEN IN THE CURRENT STATEMENT
C  NMBRS:      QUANTITY OF NUMBERS IN THE CURRENT STATEMENT
C LSTCHR:      LAST CHARACTER OF A NUMBER
C MASGND:      NAME TABLE INDEX OF SECTION END FOR NUMBERS ASSIGNMENT
C
*COPY OUTBUF
C
      INTEGER PAGPAK,ISC,ISCARR,ICFORM,IFLOAT,ICOM,MACWDS,PPWRDS,LPAGE
      LOGICAL MACFLG,LABFLG,RSVFLG
      INTEGER BUFFER,LABBUF,IBUF,ILBUF,PPPAGE,MCPAGE
      DIMENSION BUFFER(256),LABBUF(256)
C
      COMMON/OUTBUF/PAGPAK,ISC,ISCARR,ICFORM,IFLOAT,ICOM,MACWDS,PPWRDS,
     +              MACFLG,LABFLG,RSVFLG,LPAGE,
     +              BUFFER,LABBUF,IBUF,ILBUF,PPPAGE,MCPAGE
C
*COPY PRODN
C
      DIMENSION PRODN(6000),PRODA(2000),IPRODB(2000),PROD2(2,3000)
      CHARACTER*6 PRODB(2000)
C
      COMMON/PRODN/PRODN
      COMMON/CPRODN/PRODB
C
      EQUIVALENCE (PRODA(1),PRODN(1))
      EQUIVALENCE (IPRODB(1),PRODN(2001))
      EQUIVALENCE (PROD2(1,1),PRODN(1))
C
*COPY RMFLGS
C
C.... NEW REGIONAL MILLING FLAGS
C
      LOGICAL LGCHK,LINTCK,LAVCTL,LVAXIS
C
      COMMON/RMFLGS/LGCHK,LINTCK,LAVCTL,LVAXIS
C
C     LGCHK  - GOUGE CHECK FLAG
C     LINTCK - INTERFERENCE CHECKING FLAG
C     LAVCTL - AVOIDANCE CONTROL FLAG
C     LVAXIS - VARIABLE TOOL AXIS FLAG
C
*COPY SDP
      COMMON/SDP/NBCHAR,NBWRD,IWRD,IFAC
C
*COPY SEQCOM
C
      INTEGER SEQNO
      CHARACTER*6 SEQNUM
C
      COMMON/SEQCOM/SEQNO
      COMMON/CSEQCM/SEQNUM
C
*COPY SRFNAM
C     24. SRFNAM BLOCK
      COMMON /SRFNAM/ PSNAME,CS1NAM,CS2NAM,IPSSUB,ICS1SB,ICS2SB
C
C
*COPY SSPAD
C
C.... SCULPTURED SURFACES SCRATCH PAD AREA
C
      INTEGER ISCN
      PARAMETER (ISCN=20000)
C
      COMMON/SSPAD/NSCNMX,ISCAN,SCAN(ISCN)
C
      DOUBLE PRECISION SCAN
C
*COPY STOR
C
C MODULE:       STOR.INC
C PURPOSE:      TO DECLARE STORAGE CONTROL VARIABLES USED BY THE
C               INTERPRETOR
C
C DATE:         03-MAR-85
C AUTHOR:       C. LASHER
C
C
        INTEGER         NTB, FPB, PPB, COMN, CFB, NBLK, NRECRD, NTPARM
        DIMENSION       NRECRD(10),NTPARM(10)
C
        COMMON  /STOR/  NTB, FPB, PPB, COMN, CFB, NBLK, NRECRD, NTPARM
C
C... THESE VARIABLES ARE USED TO CONTROL NUMBER TABLE DIRECT ACCESS
C
C
        EQUIVALENCE   (NTPARM(1),NUMBST), (NTPARM(2),NUMOD ),
     +                (NTPARM(3),NDAFLG), (NTPARM(4),NRECST),
     +                (NTPARM(5),IPAGE )
C
C
*COPY SUPER
C
      CHARACTER*80 IRDSAV
      DIMENSION XTRAS(7),CFLAGS(4),LXTRAS(7)
      INTEGER   ERRX,XTRAS
      LOGICAL   ERR,FINI,XC,CL,ASM,LXTRAS,CFLAGS,PX,END,ABEND
C
      COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS
      COMMON/CSUPER/IRDSAV
C
      EQUIVALENCE (LXTRAS(1),XTRAS(1)),(CFLAGS(1),ERR)
C
*COPY SV
C
C   *** 9.  SV BLOCK ***
C
C   REAL SURFACE VARIABLES
C
      DOUBLE PRECISION CC(3,5),EPS1(5),EPS2(5),EPS3(5),EPS4(5),
     +                 EPS6(5),EPS8(5),PAST(5),PLND(5),PLNV(3,5),
     +                 RC(5),S(5),SAVE(5),SFVCT(3,5),SLX(3,5),SN(3,5),
     +                 SNK(3,5),SNL(3,5),SP(3,5),SPK(3,5),SPL(3,5),
     +                 TAU(5),TAU1(5),TAU2(5),TH(5),TN(3,5),TOOLHT(3,5),
     +                 TOOLWD(5),TP(3,5),TPK(3,5),U1(3,5),VNDIR(3,5),
     +                 VT(3,5),Z(5),VARBLE(5),U1K(3,5),SK(3,5)
C
      COMMON/SV/CC,EPS1,EPS2,EPS3,EPS4,EPS6,EPS8,PAST,PLND,PLNV,
     +          RC,S,SAVE,SFVCT,SLX,SN,SNK,SNL,SP,SPK,SPL,TAU,TAU1,
     +          TAU2,TH,TN,TOOLHT,TOOLWD,TP,TPK,U1,VNDIR,VT,Z,
     +          VARBLE,U1K,SK
C
      DOUBLE PRECISION COS1(5),CPLFL(5),CPTST(5),CSD(5),DPLAN(3,5),
     +                 DPMX1(5),PLNCS(5),PLND1(5),PLTST(5),STCK(5),
     +                 STCKN(5),STCK1(5),STCK2(5),TEE(3,5),TNL(3,5)
C
      COMMON/SV1/COS1,CPLFL,CPTST,CSD,DPLAN,DPMX1,PLNCS,PLND1,
     +           PLTST,STCK,STCKN,STCK1,STCK2,TEE,TNL
C
*COPY SYMFIL
C
C...                SYSTEM I/O FILES
C
      INTEGER CLFILP,CLFILE,CLFIL3,EXFILE,VLFILE,PNCHFL,
     1        XCAN  ,XNUM  ,ELFIL1,ELFIL2,ELFIL3,ELFIL4,
     2        CPFILE,AXFILE,POFILE,ELFILE,TIFILE,PXFILE
C
      COMMON/SYMFIL/CLFILP,CLFILE,CLFIL3,EXFILE,INFILE,
     1              VLFILE,PNCHFL,XCAN  ,MACTXT,XNUM  ,
     2              ELFIL1,ELFIL2,ELFIL3,ELFIL4,CPFILE,
     3              AXFILE,POFILE,ELFILE,LDAFIL,TIFILE,
     4              PXFILE,NFIL12,NFIL13,LIBFIL,ISPARE(26)
C
*COPY TAC
C
      DOUBLE PRECISION ALPHA,BETA,COSA,COSB,SINA,SINB
      COMMON/TAC/ALPHA,BETA,COSA,COSB,SINA,SINB,ITAC
C
C     ALPHA  TOOL AXIS SLEW ANGLE WRT SN
C            IN GUIDE SURFACE CRSSPL DIRN. IF PATH IN TANSPL DIRN.
C            AND VICE VERSA
C     BETA   TOOL AXIS TILT ANGLE (CUTANG) WRT SN
C            IN PATH DIRECTION
C     COSA   COS(ALPHA)
C     COSB   COS(BETA)
C     SINA   SIN(ALPHA)
C     SINB   SIN(BETA)
C     ITAC   FLAG INDICATING THAT ATANGL TYPE TOOL AXIS CONTROL
C            IS REQUIRED =1, =0 FOR FIXED OR NORMDS
C
*COPY TLLDAT
C
C    TOOL DATA STORAGE
C
C    NOTE: 'TANHI' AND 'SINL' SHARE LOCATIONS AS DO 'TANLO' AND 'COSL'
C           THIS IS DELIBERATE.
C
      DOUBLE PRECISION TLHITE(8),TANHI(8),SINL(8),TANLO(8),COSL(8),
     +                 UMAX(8),RI(8),CORRAD(8),TCONT(0:8),TLINC(0:8)
C
      COMMON/TLLDAT/TLHITE,TANHI,TANLO,UMAX,RI,CORRAD,TCONT,TLINC
C
      EQUIVALENCE  (TANHI(1),SINL(1))
      EQUIVALENCE  (TANLO(1),COSL(1))
C
*COPY TOTAL
C
C    THE ORIGINAL COMMON-DIMENSION-EQUIVALENCE (CDE) PACKAGE TOTAL
C    HAS BEEN REPLACED BY INDIVIDUAL COMMON BLOCKS, AND EQUIVALENCE
C    STATEMENTS HAVE BEEN ELIMINATED AS FAR AS POSSIBLE.
C
*COPY WORK
C
C MODULE:       WORK.INC
C PURPOSE:      TO DECLARE THE WORKING VARIABLES USED BY THE SSR1
C               INTERPRETOR.
C
C DATE:         05-MAR-85
C AUTHOR:       C. LASHER
C
C
      DIMENSION     LNA(2,20)
C
      INTEGER       PGC, PGCN, ILC, IXC, SCP, SAP, NSP, IAP, CFP, COMP
      INTEGER       NTP, LNA,  RTP, AC
C
      COMMON /WORK/ PGC, PGCN, ILC, IXC, SCP, SAP, NSP, IAP, CFP, COMP,
     +              NTP, LNA,  RTP, AC
C
C
*COPY XUNITS
C
      DOUBLE PRECISION TABEXT,SSEXT
      INTEGER IOLD
      CHARACTER*6 OLDMOD
C
      COMMON/XUNITS/TABEXT,SSEXT,IOLD
      COMMON/XUNITC/OLDMOD
C
*COPY ZNUMBR
C
C   ***  10.  ZNUMBR BLOCK  ***
C
C   REAL LITERALS
C
      DOUBLE PRECISION  Z0,    Z1,    Z2,    Z3,    Z5,
     1                 Z10,   Z90,  Z1E6, Z1E38, Z5EM1,
     2               Z6EM1, Z9EM1,Z11EM1,Z12EM1, Z1EM2,
     3               Z1EM3, Z1EM5, Z5EM6, Z1EM6, Z1EM7,
     4               Z1EM9, Z1EM1,   ZM1,DEGRAD,    PI
C
      COMMON/ZNUMBR/    Z0,    Z1,    Z2,    Z3,    Z5,
     1                 Z10,   Z90,  Z1E6, Z1E38, Z5EM1,
     2               Z6EM1, Z9EM1,Z11EM1,Z12EM1, Z1EM2,
     3               Z1EM3, Z1EM5, Z5EM6, Z1EM6, Z1EM7,
     4               Z1EM9, Z1EM1,   ZM1,DEGRAD,    PI
C
**** MODULE = LOADCOMP ****
**** SOURCE FILE : M0007342.W01   ***
*
C                                                                       M0000100
C          LOAD COMPLEX MAIN PROGRAM                                    M0000200
C                                                                       M0000300
C          SUBSIDIARIES                                                 M0000400
C          TYPE          ENTRY                                          M0000500
C          SUBROUTINE    LOADG                                          M0000600
C          SUBROUTINE    LOADM                                          M0000700
C          SUBROUTINE    LOADP                                          M0000800
C                                                                       M0000900
      IMPLICIT INTEGER (A-Z)                                            M0001000
C                                                                       M0001100
C        1.    NAME TABLE AND TABLE LIMITS                              M0001200
C                                                                       M0001300
      INCLUDE 'NAMETB.INC'                                              M0001410
C  NUMBST:     INDEX OF BEGINNING OF NUMBER SECTION OF CNUMTB           M0001600
C  NUMBND:     INDEX OF END OF NUMBER SECTION OF CNUMTB                 M0001800
C  NAMTBL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY           M0001950
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002050
C  CNUMTB:     NUMBER TABLE                                             M0002060
C                                                                       M0002200
C        6.    SYMBOLIC FILE DEFINITIONS                                M0002300
C                                                                       M0002400
      COMMON/SYMFIL/SYMFIL                                              M0002500
      DIMENSION SYMFIL(6)                                               M0002600
C  LCDATA:     INPUT FILE NUMBER OF PRODUCTION TABLES SEQUEN. MODE      M0002700
      EQUIVALENCE (LCDATA,SYMFIL(5))                                    M0002800
C  VLFILE:     VERIFICATION LISTING FILE                                M0002900
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0003000
C                                                                       M0003100
C        8.    CONTROL FLAGS AND POINTERS                               M0003200
C                                                                       M0003300
      INCLUDE 'LDSCOM.INC'                                              M0003410
C  IBKPNT:     NAMTBL INDEX OF BRKPNT                                   M0003600
C*                                                                      M0003800
C     PURPOSE      TO READ A CONTROL CARD AND DECIDE WHICH BLOCK        M0003900
C                  DATA PROGRAMS IT IS TO GENERATE.                     M0004000
C                                                                       M0004100
C LOCAL                                INITIAL                          M0004200
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0004300
C              IG                 C            READ OFF DATA CARD       M0004400
C              IG1                C    'GEOM'  CHECK DATA CARD          M0004500
C              IP                 C            READ OFF DATA CARD       M0004600
C              IP1                C    'PROC'  CHECK DATA CARD          M0004700
C                                                                       M0004800
C     NOTES        IF THE CONTROL CARD HAS PROC PUNCHED IN COLUMNS      M0004900
C                  1-4 THE PROGRAM WILL CAUSE THE READING OF DATA       M0005000
C                  WHICH WILL ENABLE BLOCK DATA PROGRAMS FOR THE        M0005100
C                  META CLASSES AND BASIC PRODUCTIONS TO BE PRODUCED.   M0005200
C                  IF THE CONTROL CARD HAS GEOM PUNCHED IN COLUMNS      M0005300
C                  11-14 IT WILL CAUSE THE READING OF DATA WHICH WILL   M0005400
C                  ENABLE BLOCK DATA PROGRAMS FOR THE NAME TABLE,       M0005500
C                  POINTERS TO THE NAME TABLE, AND GEOMETRIC            M0005600
C                  PRODUCTIONS TO BE PRODUCED.                          M0005700
C                                                                       M0005800
      CHARACTER*6 BKPNT                                                 M0005900
      CHARACTER*4 IG,IG1,IP,IP1                                         M0005950
      DATA  IP1,IG1/'PROC','GEOM'/,BKPNT/'BRKPNT'/                      M0006000
C**                                                                     M0006100
C...     CLEAR NUMBER TABLE                                             M0006200
C                                                                       M0006300
      DO 1 I=NUMBST,NUMBND                                              M0006400
      CNUMTB(I)=' '                                                     M0006600
    1 CONTINUE                                                          M0006700
C                                                                       M0006800
C...     READ CONTROL CARD.                                             M0006900
C                                                                       M0007000
      READ(LCDATA,2) IP,IG                                              M0007100
    2 FORMAT (1A4,6X,1A4)                                               M0007200
C                                                                       M0007300
C...     CALL LOADM TO READ META-CLASSES.                               M0007400
C                                                                       M0007500
      IF ((IP .NE. IP1) .AND. (IG .NE. IG1))  GO TO 5                   M0007600
      CALL LOADM                                                        M0007700
C                                                                       M0007800
      IBKPNT = NAME(BKPNT)                                              M0007900
      NAMTBL(IBKPNT) = 99000                                            M0008000
C                                                                       M0008100
C...     IS BASIC PRODUCTION TABLE PROCESSING REQUIRED                  M0008200
C                                                                       M0008300
    3 IF(IP.EQ.IP1)CALL LOADP                                           M0008400
C                                                                       M0008500
C...     IS GEOMETRIC PRODUCTION TABLE PROCESSING REQUIRED              M0008600
C                                                                       M0008700
    4 IF(IG.EQ.IG1)CALL LOADG                                           M0008800
C                                                                       M0008900
      STOP                                                              M0009000
C                                                                       M0009100
C...  CONTROL CARD ERROR                                                M0009200
C                                                                       M0009300
    5 WRITE (VLFILE,6)                                                  M0009400
    6 FORMAT (1H ,90HERROR 7002 IN MAIN.  FIRST INPUT CARD DOES NOT CONTM0009500
     *AIN GEOM OR PROC.  NO OUTPUT GENERATED.)                          M0009600
      STOP                                                              M0009700
      END                                                               M0009800
**** SOURCE FILE : M0007343.X01   ***
*
C                                                                       M0000100
C PURPOSE      TO INITIALIZE THE LABELLED COMMON AREA NAMETB, LDXCOM    M0000200
C                                                                       M0000300
      BLOCK DATA                                                        M0000400
C                                                                       M0000500
      IMPLICIT INTEGER (A-Z)                                            M0000600
C                                                                       M0000610
C...      0.SYSTEMS DEPENDENT PARAMETERS                                M0000620
C                                                                       M0000630
      INCLUDE 'SDP.INC'                                                 M0000640
C                                                                       M0000700
C...       1.      NAME TABLE AND TABLE LIMITS                          M0000800
C                                                                       M0000900
      INCLUDE 'NAMETB.INC'                                              M0001010
      DIMENSION ALPHA(68)                                               M0001310
      CHARACTER*6 CALPHA(68)                                            M0001320
      EQUIVALENCE (ALPHA(1),NAMTBL(1))                                  M0001330
      EQUIVALENCE (CALPHA(1),CNAMTB(1))                                 M0001340
C                                                                       M0007200
C          2.    STACK AND POINTER STORAGE                              M0007300
C                                                                       M0007400
      COMMON/STKLST/STKLST                                              M0007500
      DIMENSION STKLST(3002)                                            M0007600
C                                                                       M0007700
C          3.    METALINGUISTIC VARIABLE CLASS CODES                    M0007800
C                                                                       M0007900
      COMMON/CODES/CODES                                                M0008000
      DIMENSION CODES(150)                                              M0008100
C                                                                       M0008200
C          7.    RESTRICTION DATA FOR CAPACITY CONTROL                  M0008300
C                                                                       M0008400
      COMMON/LDXSIZ/QCODE ,QMETA ,QPMIDT,QASSOC,QGEOML,QLENGT,QPRODN,   M0008500
     1              QPROCD,QWORK ,QIAGMX,QPROD2,QSTACK,QLEVPO,QCLSWD,   M0008600
     2              QARGMX,QKDENT,QGEOLO,QIPRMI,QKGRP ,QAPTXX,QAPTYY,   M0008700
     3              QSUBNA,QHOLER,QINMBR,QISUB ,QIHOL ,QNAMTB,QNUMTB    M0008800
C                                                                       M0010200
C          8.    CONTROL FLAGS AND POINTERS                             M0010300
C                                                                       M0010400
      INCLUDE 'LDSCOM.INC'                                              M0010510
C                                                                       M0010700
C          9.    ITEM AND GROUP CONTROL                                 M0010800
C                                                                       M0010900
      INCLUDE 'ASSOC.INC'                                               M0011010
C                                                                       M0011200
C         10.    ITEM AND GROUP CONTROL                                 M0011300
C                                                                       M0011400
      COMMON/LENGTH/LENGTH                                              M0011500
      DIMENSION LENGTH(3,100)                                           M0011600
C                                                                       M0011700
C         11.    GEOMETRIC TABLE LOCATIONS                              M0011800
C                                                                       M0011900
      COMMON/GEOMLC/GEOMLC                                              M0012000
      DIMENSION GEOMLC(50)                                              M0012100
C                                                                       M0012200
C         12.    BIT OUTPUT PATTERS                                     M0012300
C                                                                       M0012400
      COMMON/ELBIT/ELBIT                                                M0012500
      DIMENSION ELBIT(200)                                              M0012600
C                                                                       M0012700
C         13.    SPACE FOR PRODUCTION LISTS                             M0012800
C                                                                       M0012900
      INCLUDE 'PRODN.INC'                                               M0013010
C                                                                       M0013200
C         14.    LEVEL START OF THE PRODUCTIONS IN PRODR                M0013300
C                                                                       M0013400
      COMMON/LEVPOS/LEVPOS                                              M0013500
      DIMENSION LEVPOS(12,250)                                          M0013600
C                                                                       M0013700
C         15.    INTEGER CODE AND LEVPOS COLUMN OF A PRODUCTION         M0013800
C                                                                       M0013900
      COMMON/PROCOD/PROCOD                                              M0014000
      DIMENSION PROCOD(2,1500)                                          M0014100
C                                                                       M0014200
C         16.    RELATION OF ORDINAL NUMBERS TO NAMTBL INDEXES          M0014300
C                                                                       M0014400
      COMMON/CLSWRD/CLSWRD                                              M0014500
      DIMENSION CLSWRD(100)                                             M0014600
C                                                                       M0014700
C         17.    OUTPUT SPACE FOR TRANSFORMED PRODUCTION LIST           M0014800
C                                                                       M0014900
      COMMON/OUTARY/OUTARY                                              M0015000
      CHARACTER*80 OUTARY                                               M0015100
C                                                                       M0015200
C         18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION          M0015300
C                                                                       M0015400
      COMMON/BRANCH/BRANCH,LEVPRD                                       M0015500
      DIMENSION BRANCH(15),LEVPRD(2,250)                                M0015600
C                                                                       M0015800
C         19.    BIT CONSTANTS                                          M0015900
C                                                                       M0016000
      INCLUDE 'ALLBTS.INC'                                              M0016110
C                                                                       M0017000
C     DATA STATEMENTS                                                   M0017100
C                                                                       M0017200
C                                                                       M0100650
C          0. SDP FOR A 32 BIT WORD COMPUTER                            M0100660
C                                                                       M0100661
C     NBYTE:  NO. OF BITS PER BYTE                                      M0100662
      DATA NBCHAR/8/                                                    M0100663
C     NBWRD:  NO. OF BITS PER WORD                                      M0100664
      DATA NBWRD/32/                                                    M0100665
C     IWRD:  NO. OF BYTES PER WORD                                      M0100666
      DATA IWRD/4/                                                      M0100667
C     IFAC: BYTE LEFT SHIFT MULTIPLICATION FACTOR                       M0100668
      DATA IFAC/256/                                                    M0100669
C                                                                       M0100700
C...       1.      NAME TABLE AND TABLE LIMITS                          M0100800
C                                                                       M0100900
      DATA   CHARST /  1/,  CHARND / 56/ ,                              M0101400
     1       INAMST / 57/,  INAMND /169/,                               M0101500
     2       NAMEST /170/,  NAMMAX /3000/,                              M0101600
     3       IFIXST/ 1/,  IFIXND /13/,                                  M0101700
     4       NUMBST/14/,  NUMBND /3000/                                 M0101800
      DATA ALPHA(1),CALPHA(1)/    0,' '/,                               M0101900
     1     ALPHA(2),CALPHA(2)/10000,'0'/,                               M0102000
     2     ALPHA(3),CALPHA(3)/10000,'1'/,                               M0102100
     3     ALPHA(4),CALPHA(4)/10000,'2'/,                               M0102200
     4     ALPHA(5),CALPHA(5)/10000,'3'/,                               M0102300
     5     ALPHA(6),CALPHA(6)/10000,'4'/,                               M0102400
     6     ALPHA(7),CALPHA(7)/10000,'5'/,                               M0102500
     7     ALPHA(8),CALPHA(8)/10000,'6'/,                               M0102600
     8     ALPHA(9),CALPHA(9)/10000,'7'/,                               M0102700
     9     ALPHA(10),CALPHA(10)/10000,'8'/                              M0102800
      DATA ALPHA(11),CALPHA(11)/10000,'9'/,                             M0102900
     1     ALPHA(12),CALPHA(12)/ 8000,'='/,                             M0103000
     2     ALPHA(13),CALPHA(13)/12000,''''/,                            M0103100
     3     ALPHA(14),CALPHA(14)/ 7000,'+'/,                             M0103200
     4     ALPHA(15),CALPHA(15)/11000,'A'/,                             M0103300
     5     ALPHA(16),CALPHA(16)/11000,'B'/,                             M0103400
     6     ALPHA(17),CALPHA(17)/11000,'C'/,                             M0103500
     7     ALPHA(18),CALPHA(18)/11000,'D'/,                             M0103600
     8     ALPHA(19),CALPHA(19)/11000,'E'/,                             M0103700
     9     ALPHA(20),CALPHA(20)/11000,'F'/                              M0103800
      DATA ALPHA(21),CALPHA(21)/11000,'G'/,                             M0103900
     1     ALPHA(22),CALPHA(22)/11000,'H'/,                             M0104000
     2     ALPHA(23),CALPHA(23)/11000,'I'/,                             M0104100
     3     ALPHA(24),CALPHA(24)/21000,'.'/,                             M0104200
     4     ALPHA(25),CALPHA(25)/ 3000,')'/,                             M0104300
     5     ALPHA(26),CALPHA(26)/ 6000,'-'/,                             M0104400
     6     ALPHA(27),CALPHA(27)/11000,'J'/,                             M0104500
     7     ALPHA(28),CALPHA(28)/11000,'K'/,                             M0104600
     8     ALPHA(29),CALPHA(29)/11000,'L'/,                             M0104700
     9     ALPHA(30),CALPHA(30)/11000,'M'/                              M0104800
      DATA ALPHA(31),CALPHA(31)/11000,'N'/,                             M0104900
     1     ALPHA(32),CALPHA(32)/11000,'O'/,                             M0105000
     2     ALPHA(33),CALPHA(33)/11000,'P'/,                             M0105100
     3     ALPHA(34),CALPHA(34)/11000,'Q'/,                             M0105200
     4     ALPHA(35),CALPHA(35)/11000,'R'/,                             M0105300
     5     ALPHA(36),CALPHA(36)/15000,'$'/,                             M0105400
     6     ALPHA(37),CALPHA(37)/ 9000,'*'/,                             M0105500
     7     ALPHA(38),CALPHA(38)/13000,' '/,                             M0105600
     8     ALPHA(39),CALPHA(39)/ 5000,'/'/,                             M0105700
     9     ALPHA(40),CALPHA(40)/11000,'S'/                              M0105800
      DATA ALPHA(41),CALPHA(41)/11000,'T'/,                             M0105900
     1     ALPHA(42),CALPHA(42)/11000,'U'/,                             M0106000
     2     ALPHA(43),CALPHA(43)/11000,'V'/,                             M0106100
     3     ALPHA(44),CALPHA(44)/11000,'W'/,                             M0106200
     4     ALPHA(45),CALPHA(45)/11000,'X'/,                             M0106300
     5     ALPHA(46),CALPHA(46)/11000,'Y'/,                             M0106400
     6     ALPHA(47),CALPHA(47)/11000,'Z'/,                             M0106500
     7     ALPHA(48),CALPHA(48)/ 1000,','/,                             M0106600
     8     ALPHA(49),CALPHA(49)/ 2000,'('/,                             M0106700
     9     ALPHA(50),CALPHA(50)/24000,'LTERM'/                          M0106800
      DATA ALPHA(51),CALPHA(51)/ 4000,'RTERM'/,                         M0106900
     1     ALPHA(52),CALPHA(52)/38000,'MCLTRM'/,                        M0107000
     2     ALPHA(53),CALPHA(53)/32000,'DBLAST'/,                        M0107100
     3     ALPHA(54),CALPHA(54)/25000,'DOT'/,                           M0107110
     4     ALPHA(55),CALPHA(55)/26000,'KREUZ'/,                         M0107120
     5     ALPHA(56),CALPHA(56)/45000,'CONAST'/                         M0107130
C                                                                       M0108200
C          7.    RESTRICTION DATA FOR CAPACITY CONTROL                  M0108300
C                                                                       M0108400
      DATA     QCODE / 150/, QMETA /  50/, QPMIDT/ 250/, QASSOC/ 200/   M0108900
      DATA     QGEOML/  50/, QLENGT/ 100/, QPRODN/6000/, QPROCD/1500/   M0109000
      DATA     QWORK / 100/, QIAGMX/ 250/, QPROD2/3000/, QSTACK/1500/   M0109100
      DATA     QLEVPO/ 250/, QCLSWD/ 100/, QARGMX/ 250/, QKDENT/ 200/   M0109200
      DATA     QGEOLO/  50/, QIPRMI/  35/, QKGRP / 100/, QAPTXX/ 120/   M0109300
      DATA     QAPTYY/   5/, QSUBNA/ 109/, QHOLER/   4/, QINMBR/  13/   M0109400
      DATA     QISUB /  10/, QIHOL /   7/, QNAMTB/3000/, QNUMTB/3000/   M0109500
C                                                                       M0109600
C     NOTE - THE FOLLOWING SETS OF ARRAY SIZES SHOULD BE KEPT IDENTICAL M0109700
C                                                                       M0109800
C          1) GEOLOC (QGEOLO) AND GEOMLC (QGEOML).                      M0109900
C          2) ELBIT (QELBIT) AND ASSOC (QASSOC).                        M0110000
C          3) LENGTH (QLENGT) AND KGRP (QKGRP).                         M0110100
C                                                                       M0115200
C         18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION          M0115300
C                                                                       M0115400
      DATA   BRANCH/1000000,10000,100,1,10*0,1/                         M0115700
C                                                                       M0115800
C         19.    BIT CONSTANTS                                          M0115900
C                                                                       M0116000
C     DATA   ALLBTS/Z7FFFFFFF,ZFFFFFFFF,Z9999,ZAAAA,ZCCCC/              M0116300
      DATA   ALLBTS/2147483647,-1/                                      M0116350
      DATA   Z9999/-1718026240/                                         M0116360
      DATA   ZAAAA/-1431699456/                                         M0116370
      DATA   ZCCCC/-859045888/                                          M0116380
C                                                                       M0116400
      END                                                               M0116500
**** SOURCE FILE : M0000448.V01   ***
*
C                                                                       8BHI0001
C *  BCDBIN  *  FORTRAN 77 SUBROUTINE      E.MCLELLAN  06.85            8BHI0002
C                                                                       8BHI0003
C PURPOSE      TO CONVERT AN INTEGER FROM BCD TO BINARY.                8BHI0010
C                                                                       8BHI0020
C LINKAGE      CALL BCDBIN (WORD, I, COUNT)                             8BHI0030
C                                                                       8BHI0040
C ARGUMENTS    WORD     CONTAINS THE BCD REPRESENTATION OF              8BHI0050
C                       THE NUMBER, LEFT JUSTIFIED.                     8BHI0060
C              I        WILL CONTAIN THE BINARY INTEGER                 8BHI0070
C              COUNT    WILL CONTAIN A COUNT OF THE NUMBER              8BHI0080
C                       OF DIGITS IN THE NUMBER.                        8BHI0090
C                                                                       8BHI0100
C                                                                       8BHI0140
C SUBSIDIARIES TYPE                ENTRY                                8BHI0150
C              SUBROUTINE          HELP                                 8BHI0160
C                                                                       8BHI0170
C                                                                       8BHI0180
      SUBROUTINE BCDBIN(WORD,I,COUNT)                                   8BHI0190
C                                                                       8BHI0200
      INTEGER I,COUNT                                                   8BHI0210
      CHARACTER WORD*8,W*8,CHAR,PERIOD,BLANK,ZERO                       8BHI0221
C                                                                       8BHI0222
      DATA PERIOD/'.'/,BLANK/' '/,ZERO/'0'/                             8BHI0261
C                                                                       8BHI0262
      W=WORD                                                            8BHI0271
      I=0                                                               8BHI0290
      DO 300 J=1,8                                                      8BHI0300
      COUNT=J                                                           8BHI0310
      CHAR=W(J:J)                                                       8BHI0321
      IF( CHAR   .EQ.PERIOD.OR. CHAR   .EQ.BLANK) GOTO 100              8BHI0330
      NUM=ICHAR(CHAR)-ICHAR(ZERO)                                       8BHI0340
      IF(NUM .GT.9.OR.NUM .LT.0) CALL HELP                              8BHI0350
      I=I*10+NUM                                                        8BHI0360
  300 CONTINUE                                                          8BHI0370
  200 RETURN                                                            8BHI0380
  100 COUNT=COUNT-1                                                     8BHI0390
      GOTO 200                                                          8BHI0400
      END                                                               8BHI0410
**** SOURCE FILE : M0000502.V01   ***
*
C                                                                       BIH00001
C *  BINBCD  *  FORTRAN 77 SUBROUTINE   E.MCLELLAN  06.85               BIH00002
C                                                                       BIH00003
      SUBROUTINE BINBCD(JNTGER,SYMBOL,COUNT)                            BIH00020
      INTEGER COUNT,INTGER,TEN                                          BIH00040
      CHARACTER SYMBOL*8,BCD*8,ZERO,BLANK                               BIH00041
      DATA BLANK/' '/,ZERO/'0'/                                         BIH00100
C                                                                       BIH00101
      INTGER=JNTGER                                                     BIH00160
      COUNT=0                                                           BIH00180
      BCD=BLANK                                                         BIH00201
      IF(INTGER.LT.0) THEN                                              BIH00240
        SYMBOL=BCD                                                      BIH00250
      ELSE                                                              BIH00270
        WRITE(BCD,'(I8)') INTGER                                        BIH00290
        DO 10 I=1,8                                                     BIH00310
          IF (BCD(I:I).NE.BLANK) THEN                                   BIH00330
            J=I                                                         BIH00350
            GOTO 20                                                     BIH00370
          ENDIF                                                         BIH00390
   10   CONTINUE                                                        BIH00410
C                                                                       BIH00415
   20   COUNT=9-J                                                       BIH00430
        SYMBOL(1:COUNT)=BCD(J:8)                                        BIH00450
      ENDIF                                                             BIH00470
      RETURN                                                            BIH00480
      END                                                               BIH00500
**** SOURCE FILE : M0000449.ORG   ***
*
C.....COMPUTER DEPENDENT ROUTINE      HELP.......HL GRAY    12/67  *CD* HELP0000
C                                                                       HELP0010
C PURPOSE      TO PROVIDE A TRACE-BACK IN THE CASE OF A                 HELP0020
C              CASTASTROPHIC FAILURE.                                   HELP0030
C                                                                       HELP0040
C LINKAGE      CALL HELP                                                HELP0050
C                                                                       HELP0060
C ARGUMENTS    NONE                                                     HELP0070
C                                                                       HELP0080
C NOTES        THE METHOD USED TO OBTAIN THE TRACE-BACK                 HELP0090
C              MIGHT NEED TO BE CHANGED ON SOME COMPUTERS.              HELP0100
C                                                                       HELP0110
C SUBSIDIARIES NONE                                                     HELP0120
C                                                                       HELP0130
      SUBROUTINE HELP                                                   HELP0140
C                                                                       HELP0150
C...     CATASTROPHIC FAILURE                                           HELP0160
C...     PRODUCE EXECUTION FAILURE SO AS TO OBTAIN AUTOMATIC TRACE-BACK HELP0170
C                                                                       HELP0180
      DIMENSION Y(1)                                                    HELP0190
      DO 10 I=100000,1000000,10                                         HELP0200
      X=Y(I)                                                            HELP0210
   10 Y(I)=X                                                            HELP0220
    1 RETURN                                                            HELP0230
       END                                                              HELP0240
**** SOURCE FILE : M0007340.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE INPUT                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   INPUT                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          INTEGER FCT.  NAME            SUBROUTINE    LOADI            M0000800
C          SUBROUTINE    READ                                           M0000900
C          SUBROUTINE    SHIFT                                          M0001000
C                                                                       M0001100
      SUBROUTINE INPUT                                                  M0001200
C                                                                       M0001300
      IMPLICIT INTEGER (A-Z)                                            M0001400
C                                                                       M0001500
C        1.    NAME TABLE AND TABLE LIMITS                              M0001600
C                                                                       M0001700
      INCLUDE 'NAMETB.INC'                                              M0001850
C  NAMTBL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY           M0001950
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002050
C                                                                       M0002200
C        2.    STACK AND POINTER STORAGE                                M0002300
C                                                                       M0002400
      COMMON/STKLST/STKLST                                              M0002500
      DIMENSION STKLST(3002),STACK(2,1500)                              M0002600
C  TOP:        POINTER TO LAST STACK ENTRY                              M0002700
      EQUIVALENCE (TOP,STKLST(1))                                       M0002800
C  STACK:      WORKING STACK                                            M0002900
      EQUIVALENCE (STACK(1,1),STKLST(3))                                M0003000
C                                                                       M0003100
C        5.    CLASS CODE MODULI                                        M0003200
C                                                                       M0003300
C  MODULO:     NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0003400
      COMMON/MODULI/MODULO                                              M0003500
C                                                                       M0003600
C        6.    SYMBOLIC FILE DEFINITIONS                                M0003700
C                                                                       M0003800
      COMMON/SYMFIL/SYMFIL                                              M0003900
      DIMENSION SYMFIL(6)                                               M0004000
C  VLFILE:     VERIFICATION LISTING FILE                                M0004100
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0004200
C*                                                                      M0004300
C PURPOSE      TO PLACE IN THE FIRST COLUMN OF STACK THE INDEX          M0004400
C              IN NAMTBL OF THE NEXT ITEM IN THE INPUT STREAM.          M0004500
C                                                                       M0004600
C LOCAL                                INITIAL                          M0004700
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0004800
C                                                                       M0004900
C              BLANK              C        ' ' BLANK WORD               M0005000
C              CNT                I            COUNT OF CHARACTERS      M0005100
C                                              FETCHED FROM INCHAR      M0005200
C              ENDFL              L            FLAG FOR LAST ITEM ON    M0005300
C                                              CARD                     M0005400
C              EXPIND             I        66  NAMTBL INDEX FOR END OF  M0005500
C                                              CARD                     M0005600
C              I                  I            MODE OF CHARACTER        M0005700
C              II                 I            NAMTBL POINTER FOR NEXT  M0005800
C                                              CHARACTER                M0005900
C              INCHAR       72    I            FOR READ TO PLACE FIRST  M0006000
C                                              72 CHARS ON A CARD IN    M0006100
C              J                  I            NAMTBL POINTER           M0006200
C              SAVE               L    .FALSE. FLAG IF NEXT ITEM HAS    M0006300
C                                              BEEN SAVED.              M0006400
C              SEQNO              C*8          FOR READ TO PLACE        M0006500
C                                              SEQUENCE NO. IN          M0006600
C              SYM                L            FLAG SET WHEN A SYMBOL   M0006700
C                                              (NOT A NO.) IS BEING     M0006800
C                                              FORMED                   M0006900
C              WDFL               L            FLAG SET WHEN            M0007000
C                                              CONCATINATION IS IN      M0007100
C                                              PROGRESS                 M0007200
C              WORD               C*6          TEMPORARY STORAGE OF     M0007300
C                                              CHARS. WHILE WORD IS     M0007400
C                                              FORMED                   M0007500
C              XI                 I            NAMTBL POINTER           M0007600
C              PTR                I            NAMBTL POINTER           M0007633
C              CLASS              I            CLASS NUMBER             M0007666
C                                                                       M0007700
      LOGICAL   SAVE,SYM,WDFL,ENDFL,ERRFL                               M0007800
      DIMENSION INCHAR(73)                                              M0008000
      CHARACTER SEQNO*8,WORD*6,BLANK                                    M0008010
      DATA ENDFL,SAVE/.TRUE.,.FALSE./                                   M0008150
      DATA INCHAR(73)/1/                                                M0008100
      DATA EXPIND,BLANK/51,' ' /                                        M0008200
C**                                                                     M0008300
C...     IS NEW ITEM REQUIRED                                           M0008400
C                                                                       M0008500
      IF(SAVE) GO TO 10                                                 M0008600
C                                                                       M0008700
C...     YES. IS NEW CARD REQUIRED                                      M0008800
C                                                                       M0008900
      IF(.NOT.ENDFL) GO TO 8                                            M0009000
C                                                                       M0009100
C...     YES. SET FLAGS                                                 M0009200
C                                                                       M0009300
      SAVE = .FALSE.                                                    M0009400
      SYM = .FALSE.                                                     M0009500
      WDFL = .FALSE.                                                    M0009600
      ENDFL = .FALSE.                                                   M0009700
C                                                                       M0009800
C...     READ NEXT CARD                                                 M0009900
C                                                                       M0010000
    2 CALL READ(INCHAR,SEQNO)                                           M0010100
      CNT=0                                                             M0010200
      ERRFL=.TRUE.                                                      M0010300
C                                                                       M0010400
C...     HAVE WE REACHED THE END OF THIS CARD                           M0010500
C                                                                       M0010600
    8 IF(CNT.EQ.72) GO TO 20                                            M0010700
C                                                                       M0010800
C...     NO. FETCH NEXT CHARACTER FROM INCHAR                           M0010900
C                                                                       M0011000
      CNT = CNT + 1                                                     M0011100
      II = INCHAR(CNT)                                                  M0011200
C                                                                       M0011300
C...     IS THIS A VALID CHARACTER                                      M0011400
C                                                                       M0011500
      IF (NAMTBL(II).NE.0) GOTO 7                                       M0011600
C                                                                       M0011700
C...     NO. REJECT CHARACTER AND PRODUCE DIAGNOSTIC                    M0011800
C                                                                       M0011900
      IF(ERRFL)WRITE(VLFILE,3) SEQNO                                    M0012000
    3 FORMAT(1H ,73HERROR NO. 7001 IN SUBROUTINE INPUT. INVALID CHARACTEM0012100
     *R. CARD SEQUENCE NO.=,A8)                                         M0012200
      ERRFL=.FALSE.                                                     M0012300
      GO TO 8                                                           M0012400
    7 I = NAMTBL(II)/MODULO                                             M0012500
C                                                                       M0012600
C...     IS CHARACTER $                                                 M0012700
C                                                                       M0012800
      IF(I.EQ.15) GO TO 400                                             M0012900
C                                                                       M0013000
C...     IS CHARACTER .                                                 M0013100
C                                                                       M0013200
      IF(I.EQ.21)GO TO 1500                                             M0013300
C                                                                       M0013400
C...     TAKE APPROPRIATE ACTION FOR EACH TYPE OF CHARACTER             M0013500
C                                                                       M0013600
      GO TO (100,200,300,400,500,600,700,800,900,1000,1100,1200,1300),I M0013700
      WRITE(VLFILE,4) CNT,SEQNO                                         M0013800
    4 FORMAT(1H ,46HERROR 7037 IN SUBROUTINE INPUT. CHARACTER NO. ,I3,  M0013900
     * 37HILLEGAL, IGNORED.  CARD SEQUENCE NO.=,A8)                     M0014000
      GOTO 8                                                            M0014100
C                                                                       M0014200
C...     PUT NAMTBL INDEX OF ITEM IN PTR                                M0014300
C                                                                       M0014400
   10 PTR = II                                                          M0014500
      SAVE = .FALSE.                                                    M0014600
      GO TO 2000                                                        M0014700
C                                                                       M0014800
C...     END OF CARD REACHED                                            M0014900
C                                                                       M0015000
   20 II=EXPIND                                                         M0015100
      ENDFL=.TRUE.                                                      M0015200
      GO TO 1500                                                        M0015300
C                                                                       M0015400
C...     ,                                                              M0015500
C                                                                       M0015600
  100  GO TO 1500                                                       M0015700
C                                                                       M0015800
C...     (                                                              M0015900
C                                                                       M0016000
  200  GO TO 1500                                                       M0016100
C                                                                       M0016200
C...     )                                                              M0016300
C                                                                       M0016400
  300  GO TO 1500                                                       M0016500
C                                                                       M0016600
C...     $  FETCH NEXT CHARACTER                                        M0016700
C                                                                       M0016800
  400 J = INCHAR(CNT+1)                                                 M0016900
C                                                                       M0017000
C...     IF $ THIS IS END OF CARD                                       M0017100
C                                                                       M0017200
      IF (NAMTBL(J).EQ.15000) GOTO 20                                   M0017300
C                                                                       M0017400
C...     NOT $ - THEREFORE CONTINUED ON NEXT CARD                       M0017500
C                                                                       M0017600
      GO TO 2                                                           M0017700
C                                                                       M0017800
C...     /                                                              M0017900
C                                                                       M0018000
  500  GO TO 1500                                                       M0018100
C                                                                       M0018200
C...     -                                                              M0018300
C                                                                       M0018400
  600  GO TO 1500                                                       M0018500
C                                                                       M0018600
C...     +                                                              M0018700
C                                                                       M0018800
  700  GO TO 1500                                                       M0018900
C                                                                       M0019000
C...     =                                                              M0019100
C                                                                       M0019200
  800  GO TO 1500                                                       M0019300
C                                                                       M0019400
C...     *                                                              M0019500
C                                                                       M0019600
  900 GO TO 1500                                                        M0019700
C                                                                       M0019800
C...     NUMERIC DIGIT                                                  M0019900
C                                                                       M0020000
 1000 GO TO 1600                                                        M0020100
C                                                                       M0020200
C...     LETTER - SET SYMBOL FLAG                                       M0020300
C                                                                       M0020400
 1100 SYM = .TRUE.                                                      M0020500
      GO TO 1600                                                        M0020600
C                                                                       M0020700
C...     '                                                              M0020800
C                                                                       M0020900
 1200 GO TO 1500                                                        M0021000
C                                                                       M0021100
C...     BLANK                                                          M0021200
C                                                                       M0021300
 1300 GO TO 8                                                           M0021400
C                                                                       M0021500
C...     IS AN ITEM PARTIALLY FORMED                                    M0021600
C                                                                       M0021700
 1500 IF(.NOT.WDFL) GO TO 10                                            M0021800
C                                                                       M0021900
C...     YES. SET SAVE MARKER. THEN SET WORD(3) TO CLASS NUMBER IF      M0022000
C...     THIS IS NOT A SYMBOL, TO CLASS IDENT IF IT IS.                 M0022100
C                                                                       M0022200
      SAVE = .TRUE.                                                     M0022300
      IF (.NOT.SYM) CLASS=10000                                         M0022400
      IF (SYM)      CLASS=35000                                         M0022500
C                                                                       M0022600
C...     CLEAR SYMBOL AND WORDFILL FLAGS, AND FIND NAMTBL INDEX OF      M0022700
C...     THIS ITEM. SET COLUMN 1 OF NAMTBL IF THIS IS THE FIRST         M0022800
C...     OCCURRENCE OF THIS ITEM.                                       M0022900
C...     STORE NAMTBL INDEX OF ITEM IN PTR                              M0023000
C                                                                       M0023100
      SYM = .FALSE.                                                     M0023200
      WDFL = .FALSE.                                                    M0023300
      XI = NAME(WORD)                                                   M0023400
      IF (NAMTBL(XI).EQ.0) NAMTBL(XI)=CLASS                             M0023500
      PTR = XI                                                          M0023600
      GO TO 2000                                                        M0023700
C                                                                       M0023800
C...     ITEM NAME IS TO BE FORMED BY CONCATINATION.                    M0023900
C...     HAS THIS STARTED YET                                           M0024000
C                                                                       M0024100
 1600 IF(WDFL) GO TO 1610                                               M0024200
C                                                                       M0024300
C...     NO. CLEAR WORD AND SET WORDFILL FLAG                           M0024400
C                                                                       M0024500
      WORD = BLANK                                                      M0024710
      WDFL = .TRUE.                                                     M0024800
C                                                                       M0024900
C...     PUT CHARACTER IN NEXT VACANT POSITION                          M0025000
C                                                                       M0025100
 1610 CALL SHIFT(WORD,CNAMTB(II))                                       M0025200
      GO TO 8                                                           M0025300
C                                                                       M0025400
C...     PUT NAMTBL POINTER TO ITEM IN STACK AND RETURN                 M0025500
C                                                                       M0025600
 2000 TOP = TOP+1                                                       M0025700
      STACK(1,TOP) = PTR                                                M0025800
      RETURN                                                            M0025900
       END                                                              M0026000
**** SOURCE FILE : M0006720.V03   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOAD0                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOAD0(IPRO,KPRO)                                 M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    SORT            SUBROUTINE    LOADB            M0000800
C                                        SUBROUTINE    LOADT            M0000900
C                                                                       M0001000
      SUBROUTINE LOAD0(IPRO,KPRO)                                       M0001100
C                                                                       M0001200
      IMPLICIT INTEGER (A-Z)                                            M0001300
C                                                                       M0001400
C        9.    ITEM AND GROUP CONTROL                                   M0001500
C                                                                       M0001600
      INCLUDE 'ASSOC.INC'                                               M0001710
C  JASSOC:     STORAGE OF CLASS WORD COLLECTION. TABLE COMPRESSION      M0001900
C                                                                       M0002100
C       10.    ITEM AND GROUP CONTROL                                   M0002200
C                                                                       M0002300
      COMMON/LENGTH/LENGTH                                              M0002400
      DIMENSION LENGTH(3,100)                                           M0002500
C                                                                       M0002600
C       14.    LEVEL START OF THE PRODUCTIONS IN PRODR                  M0002700
C                                                                       M0002800
      COMMON/LEVPOS/LEVPOS                                              M0002900
      DIMENSION LEVPOS(12,250)                                          M0003000
C                                                                       M0003100
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION            M0003200
C                                                                       M0003300
      COMMON/BRANCH/BRANCH                                              M0003400
      DIMENSION BRANCH(515)                                             M0003500
C  IASC:       POINTER TO THE LAST JASSOC ENTRY                         M0003600
      EQUIVALENCE (IASC,BRANCH(10))                                     M0003700
C  STRTPR:     FIRST PRODCTION COLUMN IN ARRAY LEVPOS                   M0003800
      EQUIVALENCE (STRTPR,BRANCH(12))                                   M0003900
C*                                                                      M0004000
C PURPOSE      TO GATHER THE PRODUCTIONS POSSESSING THE SAME PRODUCTION M0004100
C              NUMBERS                                                  M0004200
C**                                                                     M0004300
C     SORT THE LEVPOS TABLE ASCENDING IN FIRST AND SECOND COLUMN        M0004400
C                                                                       M0004500
      JPRO=IPRO                                                         M0004600
      IF(IPRO.EQ.1)GOTO 30                                              M0004700
      CALL SORT(LEVPOS(1,1),12,KPRO,2,1)                                M0004800
      DO 10 I=1,KPRO                                                    M0004900
      IF(LEVPOS(12,I).GT.0)GOTO 20                                      M0005000
   10 CONTINUE                                                          M0005100
   20 JPRO=I                                                            M0005200
      IPRO=I-1                                                          M0005300
      CALL SORT(LEVPOS(1,1),12,IPRO,1,2)                                M0005400
C                                                                       M0005500
   30 KK=KPRO+1-JPRO                                                    M0005600
      CALL SORT(LEVPOS(1,JPRO),12,KK,1,2)                               M0005700
      II=JPRO                                                           M0005800
      JJ=LEVPOS(1,JPRO)                                                 M0005900
      KK=LEVPOS(1,KPRO)                                                 M0006000
      IF(STRTPR.EQ.1)GOTO 36                                            M0006100
C                                                                       M0006200
C     DELETE FOLLOWING LONGER PRODUCTIONS OF THE SAME START STRUCTURE   M0006300
C                                                                       M0006400
      DO 35 I=JPRO,KPRO                                                 M0006500
      IF(LEVPOS(10,I).NE.1)GOTO 35                                      M0006600
      L=I+1                                                             M0006700
      DO 34 J=L,KPRO                                                    M0006800
      IF(LEVPOS(1,J).EQ.LEVPOS(1,I))LEVPOS(1,J)=0                       M0006900
   34 CONTINUE                                                          M0007000
   35 CONTINUE                                                          M0007100
C                                                                       M0007200
C     GATHER THE PRODUCTIONS                                            M0007300
C                                                                       M0007400
   36 DO 70 I=JJ,KK                                                     M0007500
      LENGTH(1,I)=0                                                     M0007600
      LENGTH(2,I)=II                                                    M0007700
      DO 50 J=II,KPRO                                                   M0007800
      IF(LEVPOS(1,J)-I)50,40,60                                         M0007900
   40 LENGTH(1,I)=LENGTH(1,I)+1                                         M0008000
   50 CONTINUE                                                          M0008100
   60 II=J                                                              M0008200
   70 CONTINUE                                                          M0008300
C                                                                       M0008400
      IASC=0                                                            M0008500
      II=KK-1                                                           M0008600
      DO 100 I=JJ,II                                                    M0008700
      IF(LENGTH(1,I).LE.0)GOTO 100                                      M0008800
      K=I+1                                                             M0008900
      N=IASC+1                                                          M0009000
      ASC=IASC+2                                                        M0009100
      JASSOC(ASC)=LEVPOS(1,LENGTH(2,I))                                 M0009200
      L=LENGTH(1,I)                                                     M0009300
      DO 90 J=K,KK                                                      M0009400
      IF(LENGTH(1,J).NE.L)GOTO 90                                       M0009500
      DO 80 M=1,L                                                       M0009600
      IF(LEVPOS(2,LENGTH(2,I)-1+M).NE.LEVPOS(2,LENGTH(2,J)-1+M))GOTO 90 M0009700
   80 CONTINUE                                                          M0009800
      ASC=ASC+1                                                         M0009900
      JASSOC(ASC)=LEVPOS(1,LENGTH(2,J))                                 M0010000
      JASSOC(N)=-ASC                                                    M0010100
      IASC=ASC                                                          M0010200
      LENGTH(1,I)=-N                                                    M0010300
      LENGTH(1,J)=0                                                     M0010400
      DO 85 M=1,L                                                       M0010500
   85 LEVPOS(1,LENGTH(2,J)-1+M)=0                                       M0010600
   90 CONTINUE                                                          M0010700
  100 CONTINUE                                                          M0010800
C                                                                       M0010900
C     ZERO ALL PRODUCTIONS BUT ONE WHICH ARE BELONGING TO A GROUP       M0011000
C     OF SAME PRODUCTION PATTERNS                                       M0011100
C                                                                       M0011200
      KK=JPRO-1                                                         M0011300
      DO 120 L=JPRO,KPRO                                                M0011400
      IF(LEVPOS(1,L).EQ.0)GOTO 120                                      M0011500
      KK=KK+1                                                           M0011600
      IF(LEVPOS(10,L).EQ.1)LENGTH(2,LEVPOS(1,L))=-LEVPOS(2,L)           M0011700
      DO 110 J=1,12                                                     M0011800
  110 LEVPOS(J,KK)=LEVPOS(J,L)                                          M0011900
  120 CONTINUE                                                          M0012000
      KPRO=KK                                                           M0012100
C                                                                       M0012200
      RETURN                                                            M0012300
      END                                                               M0012400
**** SOURCE FILE : M0006721.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOAD1                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOAD1                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    SORT            SUBROUTINE    LOADU            M0000800
C          SUBROUTINE    SPILL                                          M0000900
C                                                                       M0001000
      SUBROUTINE LOAD1                                                  M0001100
C                                                                       M0001200
      IMPLICIT INTEGER (A-Z)                                            M0001300
C                                                                       M0001400
C        2.    STACK AND POINTER STORAGE                                M0001500
C                                                                       M0001600
      COMMON/STKLST/STKLST                                              M0001700
      DIMENSION STKLST(3002),PRODR(3000)                                M0001800
C  PRODR:      ORDINAL NUMBERS OF THE PRD. TABLES IN SEQUENT. MODE      M0001900
      EQUIVALENCE (PRODR(1),STKLST(3))                                  M0002000
C                                                                       M0002100
C        6.    SYMBOLIC FILE DEFINITIONS                                M0002200
C                                                                       M0002300
      COMMON/SYMFIL/SYMFIL                                              M0002400
      DIMENSION SYMFIL(6)                                               M0002500
C  VLFILE      VERIFICATION LISTING FILE                                M0002600
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0002700
C                                                                       M0002800
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0002900
C                                                                       M0003000
      COMMON/LDXSIZ/LDXSIZ                                              M0003100
      DIMENSION LDXSIZ(28)                                              M0003200
C  QPROCD:     DIMENSION OF ARRAY PROCOD                                M0003300
      EQUIVALENCE (QPROCD,LDXSIZ(8))                                    M0003400
C                                                                       M0003500
C       14.    LEVEL START OF THE PRODUCTIONS IN PRODR                  M0003600
C                                                                       M0003700
      COMMON/LEVPOS/LEVPOS                                              M0003800
      DIMENSION LEVPOS(12,250)                                          M0003900
C                                                                       M0004000
C       15.    INTEGER CODE AND LEVPOS COLUMN OF A PRODUCTION           M0004100
C                                                                       M0004200
      COMMON/PROCOD/PROCOD                                              M0004300
      DIMENSION PROCOD(2,1500)                                          M0004400
C                                                                       M0004500
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION            M0004600
C                                                                       M0004700
      COMMON/BRANCH/BRANCH                                              M0004800
      DIMENSION BRANCH(515)                                             M0004900
C  MILION:     CONTAINS DIVISOR 1000000                                 M0005000
      EQUIVALENCE (MILION,BRANCH(1))                                    M0005100
C  TENMIL:     CONTAINS DIVISOR 10000                                   M0005200
      EQUIVALENCE (TENMIL,BRANCH(2))                                    M0005300
C  CENT:       CONTAINS DIVISOR 100                                     M0005400
      EQUIVALENCE (CENT,BRANCH(3))                                      M0005500
C  LEVEL:      ACTUALLY PROCESSED PRODUCTION LEVEL                      M0005600
      EQUIVALENCE (LEVEL,BRANCH(5))                                     M0005700
C  ID1:        BEGIN OF A REGION IN ARRAY PROCOD TO BE PROCESSED        M0005800
      EQUIVALENCE (ID1,BRANCH(8))                                       M0005900
C  ID2:        END OF A REGION IN ARRAY PROCOD TO BE PROCESSED          M0006000
      EQUIVALENCE (ID2,BRANCH(9))                                       M0006100
C*                                                                      M0006200
C PURPOSE      TO LOAD INTEGER CODE OF LEVELS TWO,THREE, FOUR AND FIVE  M0006300
C              INTO THE ARRAY PROCOD.                                   M0006400
C                                                                       M0006500
      DIMENSION JD(8),SAVE(50)                                          M0006600
      EQUIVALENCE(JD(1),J1),(JD(2),J2),(JD(3),J3),(JD(4),J4),(JD(5),J5),M0006700
     *          (JD(6),J6),(JD(7),J7),(JD(8),J8)                        M0006800
C**                                                                     M0006900
C     FIND ALL POSSIBLE VARIATIONS OF A STARTING CLASS WORD             M0007000
C                                                                       M0007100
      LVA=LEVEL                                                         M0007200
      LVE=LEVEL+3                                                       M0007300
      PSTRT=0                                                           M0007400
      IF(LEVEL.NE.6)GOTO 50                                             M0007500
      IF((ID2-ID1).LT.50)GOTO 20                                        M0007600
      WRITE(VLFILE,10)                                                  M0007700
   10 FORMAT('   ERROR: ARRAY SAVE IN SUBROUTINE LOAD1 EXCEEDED. REDEFINM0007800
     *E ARRAY SAVE')                                                    M0007900
      STOP                                                              M0008000
   20 PSTRT=PEND                                                        M0008100
      N=0                                                               M0008200
      DO 30 I=ID1,ID2                                                   M0008300
      N=N+1                                                             M0008400
   30 SAVE(N)=PROCOD(2,I)                                               M0008500
      CALL SORT(SAVE(1),1,N,1,1)                                        M0008600
      II=1                                                              M0008700
      DO 40 I=2,N                                                       M0008800
      IF(SAVE(I).EQ.SAVE(I-1))GOTO 40                                   M0008900
      II=II+1                                                           M0009000
      SAVE(II)=SAVE(I)                                                  M0009100
   40 CONTINUE                                                          M0009200
      ID2=ID1+II-1                                                      M0009300
   50 NN=PSTRT                                                          M0009400
      II=0                                                              M0009500
      DO 80 N=ID1,ID2                                                   M0009600
      II=II+1                                                           M0009700
      I=N                                                               M0009800
      IF(LEVEL.EQ.6)I=SAVE(II)                                          M0009900
      LVL=LEVPOS(10,I)                                                  M0010000
      IF(LVL.LT.LVA)GOTO 80                                             M0010100
      DO 60 MM=LVA,LVE                                                  M0010200
      JD(MM-LVA+1)=LEVPOS(MM,I)                                         M0010300
      JD(MM-LVA+5)=LEVPOS(MM+1,I)-1                                     M0010400
      IF(JD(MM-LVA+1).LT.1)JD(MM-LVA+1)=1                               M0010500
      IF(JD(MM-LVA+5).LT.JD(MM-LVA+1))JD(MM-LVA+5)=JD(MM-LVA+1)         M0010600
   60 CONTINUE                                                          M0010700
      IF(LVE.EQ.9)J8=J4                                                 M0010800
      DO 70 J=J1,J5                                                     M0010900
      JJ=IABS(PRODR(J))*MILION                                          M0011000
      DO 70 K=J2,J6                                                     M0011100
      KK=JJ                                                             M0011200
      IF(LVL.GT.LVA)KK=KK+IABS(PRODR(K))*TENMIL                         M0011300
      DO 70 L=J3,J7                                                     M0011400
      LL=KK                                                             M0011500
      IF(LVL.GT.LVA+1)LL=LL+IABS(PRODR(L))*CENT                         M0011600
      DO 70 M=J4,J8                                                     M0011700
      MM=LL                                                             M0011800
      IF(LVL.GT.LVA+2.AND.LVE.LT.9)MM=MM+IABS(PRODR(M))                 M0011900
      IF(MM.EQ.0)GOTO 70                                                M0012000
      IF(NN.EQ.QPROCD)CALL SPILL(8,'LOAD1   ')                          M0012100
      NN=NN+1                                                           M0012200
      PROCOD(1,NN)=MM                                                   M0012300
      PROCOD(2,NN)=I                                                    M0012400
   70 CONTINUE                                                          M0012500
   80 CONTINUE                                                          M0012600
      ID1=PSTRT+1                                                       M0012700
      CALL SORT(PROCOD(1,ID1),2,NN-PSTRT,1,2)                           M0012800
C                                                                       M0012900
C     DELETE A FOLLOWING PRODUCTION OF THE SAME FORMAT                  M0013000
C                                                                       M0013100
      ID2=PSTRT                                                         M0013200
      MM=-1                                                             M0013300
      LL=6                                                              M0013400
      DO 100 I=ID1,NN                                                   M0013500
      IF(MM.NE.PROCOD(1,I))GOTO 90                                      M0013600
      J2=PROCOD(2,I)                                                    M0013700
      IF(LEVPOS(10,J2).LT.6.AND.LEVPOS(10,LL).LT.6)GOTO 100             M0013800
      IF(LEVPOS(10,J2).EQ.LEVPOS(10,LL).AND.                            M0013900
     *   LEVPOS(12,J2).EQ.LEVPOS(12,LL))GOTO 100                        M0014000
   90 ID2=ID2+1                                                         M0014100
      MM=PROCOD(1,I)                                                    M0014200
      LL=PROCOD(2,I)                                                    M0014300
      PROCOD(1,ID2)=MM                                                  M0014400
      PROCOD(2,ID2)=LL                                                  M0014500
  100 CONTINUE                                                          M0014600
      IF(LEVEL.EQ.2)PEND=NN                                             M0014700
C                                                                       M0014800
      RETURN                                                            M0014900
      END                                                               M0015000
**** SOURCE FILE : M0006722.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOAD2                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOAD2(FROM)                                      M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    SORT            SUBROUTINE    LOADU            M0000800
C          SUBROUTINE    SPILL                                          M0000900
C                                                                       M0001000
      SUBROUTINE LOAD2(FROM)                                            M0001100
C                                                                       M0001200
      IMPLICIT INTEGER (A-Z)                                            M0001300
C                                                                       M0001400
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0001500
C                                                                       M0001600
      COMMON/LDXSIZ/LDXSIZ                                              M0001700
      DIMENSION LDXSIZ(28)                                              M0001800
C  QASSOC:     DIMENSION OF ARRAY ASSOC                                 M0001900
      EQUIVALENCE (QASSOC,LDXSIZ(4))                                    M0002000
C  QPROD2:     DIMENSION OF ARRAY PROD2                                 M0002100
      EQUIVALENCE (QPROD2,LDXSIZ(11))                                   M0002200
C                                                                       M0002300
C        8.    CONTROL FLAGS AND POINTERS                               M0002400
C                                                                       M0002500
      INCLUDE 'LDSCOM.INC'                                              M0002610
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0002800
C  PDERR:      NAMTBL INDEX OF '28' = PROD. NOT FOUND                   M0003000
C  KNT:        NAMTBL INDEX OF ALL                                      M0003200
C                                                                       M0003400
C        9.    ITEM AND GROUP CONTROL                                   M0003500
C                                                                       M0003600
      INCLUDE 'ASSOC.INC'                                               M0003710
C  JASSOC:     STORAGE OF CLASS WORD COLLECTION. TABLE COMPRESSION      M0003900
C                                                                       M0004100
C       13.    SPACE FOR PRODUCTION LISTS                               M0004200
C                                                                       M0004300
      INCLUDE 'PRODN.INC'                                               M0004410
C  PROD2:      CONTAINS PRODUCTION TABLES IN JUMP MODE                  M0004600
C                                                                       M0004800
C       14.    LEVEL START OF THE PRODUCTIONS IN PRODR                  M0004900
C                                                                       M0005000
      COMMON/LEVPOS/LEVPOS                                              M0005100
      DIMENSION LEVPOS(12,250)                                          M0005200
C                                                                       M0005300
C       15.    INTEGER CODE AND LEVPOS COLUMN OF A PRODUCTION           M0005400
C                                                                       M0005500
      COMMON/PROCOD/PROCOD                                              M0005600
      DIMENSION PROCOD(2,1500)                                          M0005700
C                                                                       M0005800
C       16.    RELATION OF ORDINAL NUMBERS TO NAMTBL INDEXES            M0005900
C                                                                       M0006000
      COMMON/CLSWRD/CLSWRD                                              M0006100
      DIMENSION CLSWRD(100)                                             M0006200
C                                                                       M0006300
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION            M0006400
C                                                                       M0006500
      COMMON/BRANCH/BRANCH                                              M0006600
      DIMENSION BRANCH(515),LEVPRD(2,250)                               M0006700
C  TENMIL:     CONTAINS DIVISOR 10000                                   M0006800
      EQUIVALENCE (TENMIL,BRANCH(2))                                    M0006900
C  LEVEL:      ACTUALLY PROCESSED PRODUCTION LEVEL                      M0007000
      EQUIVALENCE (LEVEL,BRANCH(5))                                     M0007100
C  MAXCLS:     NUMBER OF DEFINITIONS IN A TRANSFORMATION SECTIION       M0007200
      EQUIVALENCE (MAXCLS,BRANCH(6))                                    M0007300
C  IADRES:     CODE DESCRIBES LEVEL NUMBER AND LEADING CLASS WORD       M0007400
      EQUIVALENCE (IADRES,BRANCH(7))                                    M0007500
C  ID1:        BEGIN OF A REGION IN ARRAY PROCOD TO BE PROCESSED        M0007600
      EQUIVALENCE (ID1,BRANCH(8))                                       M0007700
C  ID2:        END OF A REGION IN ARRAY PROCOD TO BE PROCESSED          M0007800
      EQUIVALENCE (ID2,BRANCH(9))                                       M0007900
C  IASC:       POINTER TO THE LAST JASSOC ENTRY                         M0008000
      EQUIVALENCE (IASC,BRANCH(10))                                     M0008100
C  IRET:       ALL LEVELS ARE PROCESSED                                 M0008200
      EQUIVALENCE (IRET,BRANCH(11))                                     M0008300
C  STRTPR:     FIRST PRODCTION COLUMN IN ARRAY LEVPOS                   M0008400
      EQUIVALENCE (STRTPR,BRANCH(12))                                   M0008500
C  ENDPRD:     LAST PRODCTION COLUMN IN ARRAY LEVPOS                    M0008600
      EQUIVALENCE (ENDPRD,BRANCH(13))                                   M0008700
C  LGT:        POINTER TO LAST ENTRY IN LENGTH                          M0008800
      EQUIVALENCE (LGT,BRANCH(14))                                      M0008900
C  LEVPRD:     CONTAINS THE PRODUCTION NUMBERS FOR A FAILED SEARCH      M0009000
      EQUIVALENCE (LEVPRD(1,1),BRANCH(16))                              M0009100
C*                                                                      M0009200
      DIMENSION LVL(2,400)                                              M0009300
C                                                                       M0009400
C PURPOSE      TO LOAD PRODUCTION LEVELS TWO,THREE, FOUR AND FIVE       M0009500
C              INTO THE PRODUCTION TABLES (PROD2).                      M0009600
C**                                                                     M0009700
      DIVIS=BRANCH(LEVEL-1)                                             M0009800
      IF(LEVEL.GT.5)DIVIS=BRANCH(LEVEL-5)                               M0009900
C                                                                       M0010000
C     SEARCH FOR PARTICULAR AND ENDING PRODUCTIONS.                     M0010100
C                                                                       M0010200
      IRET=1                                                            M0010300
      LPROD=IPROD                                                       M0010400
      I1=0                                                              M0010500
      PP=-PDERR                                                         M0010600
      DO 90 I=ID1,ID2                                                   M0010700
      J1=PROCOD(1,I)/DIVIS                                              M0010800
      IF(I1.EQ.J1)GOTO 80                                               M0010900
      I1=J1                                                             M0011000
      IPROD=IPROD+2                                                     M0011100
      IF(IPROD.GE.QPROD2)CALL SPILL(11,'LOAD2   ')                      M0011200
      PROD2(1,IPROD-1)=IADRES                                           M0011300
      PROD2(2,IPROD-1)=I1                                               M0011400
      PROD2(1,IPROD)=I                                                  M0011500
   80 PROD2(2,IPROD)=I                                                  M0011600
      L=PROCOD(2,I)                                                     M0011700
      IF(PP.EQ.-PDERR)PP=-IABS(LEVPOS(11,L))                            M0011800
      IF(LEVPRD(2,L).LT.LEVEL)PP=-LEVPRD(1,L)                           M0011900
   90 CONTINUE                                                          M0012000
C                                                                       M0012100
C         FADE OUT ENDING OR PARTICULAR PRODUCTIONS                     M0012200
C                                                                       M0012300
      KK=LPROD+2                                                        M0012400
      DO 110 I=KK,IPROD,2                                               M0012500
      ID1=PROD2(1,I)                                                    M0012600
      ID2=PROD2(2,I)                                                    M0012700
      IF(ID2.GT.ID1)GOTO 110                                            M0012800
      PROD2(2,I)=PROCOD(2,ID2)                                          M0012900
      IF(LEVPOS(10,PROD2(2,I)).GT.LEVEL)GOTO 100                        M0013000
      PROD2(1,I)=0                                                      M0013100
      GOTO 110                                                          M0013200
  100 PROD2(1,I)=-LEVEL-1                                               M0013300
  110 CONTINUE                                                          M0013400
C                                                                       M0013500
C         COLLECT CLASS WORDS WITH SAME FINAL PRODUCTIONS               M0013600
C               WHICH REMAINING IN THE LEVEL SECTION                    M0013700
C                                                                       M0013800
      KPROD=IPROD                                                       M0013900
      IPROD=LPROD                                                       M0014000
      DO 210 I=KK,KPROD,2                                               M0014100
      IF(PROD2(1,I-1).EQ.PROD2(2,I-1))GOTO 210                          M0014200
      K1=PROD2(1,I)                                                     M0014300
      IF(K1.LE.0)GOTO 200                                               M0014400
      K2=PROD2(2,I)                                                     M0014500
      IF(I.EQ.KPROD)GOTO 160                                            M0014600
      LL=I+2                                                            M0014700
      ASC=IASC+2                                                        M0014800
      JASC=IASC                                                         M0014900
      NN=IASC+1                                                         M0015000
      JASSOC(ASC)=PROD2(2,I-1)                                          M0015100
      DO 130 L=LL,KPROD,2                                               M0015200
      L1=PROD2(1,L)                                                     M0015300
      IF(L1.LE.0)GOTO 130                                               M0015400
      L2=PROD2(2,L)                                                     M0015500
      IF((K2-K1).NE.(L2-L1))GOTO 130                                    M0015600
      K=K2-K1+1                                                         M0015700
      DO 120 J=1,K                                                      M0015800
      IF(PROCOD(2,K1-1+J).NE.PROCOD(2,L1-1+J))GOTO 130                  M0015900
  120 CONTINUE                                                          M0016000
      ASC=ASC+1                                                         M0016100
      IF(ASC.GT.4*QASSOC)CALL SPILL(4,'LOAD2   ')                       M0016200
      JASSOC(NN)=-ASC                                                   M0016300
      JASSOC(ASC)=PROD2(2,L-1)                                          M0016400
      IASC=ASC                                                          M0016500
      PROD2(2,L-1)=PROD2(1,L-1)                                         M0016600
      PROD2(2,I-1)=TENMIL+NN                                            M0016700
  130 CONTINUE                                                          M0016800
      IF(NN.GT.IASC.OR.JASC.EQ.0)GOTO 160                               M0016900
      K=IASC-NN                                                         M0017000
      DO 150 J=1,JASC                                                   M0017100
      IF(JASSOC(J).GE.0)GOTO 150                                        M0017200
      IF(K.NE.(-JASSOC(J)-J))GOTO 150                                   M0017300
      DO 140 L=1,K                                                      M0017400
      IF(JASSOC(J+L).NE.JASSOC(NN+L))GOTO 150                           M0017500
  140 CONTINUE                                                          M0017600
      IASC=JASC                                                         M0017700
      PROD2(2,I-1)=TENMIL+J                                             M0017800
      GOTO 160                                                          M0017900
  150 CONTINUE                                                          M0018000
      JASC=IASC                                                         M0018100
  160 LL=PROCOD(2,K1)                                                   M0018200
      K1=K1+1                                                           M0018300
      DO 170 J=K1,K2                                                    M0018400
      IF(PROCOD(2,J).NE.LL)GOTO 200                                     M0018500
  170 CONTINUE                                                          M0018600
      IF(LEVPOS(10,LL).GT.LEVEL)GOTO 190                                M0018700
      PROD2(1,I)=0                                                      M0018800
      PROD2(2,I)=-LEVPOS(12,LL)                                         M0018900
      GOTO 200                                                          M0019000
  190 PROD2(1,I)=-LEVEL-1                                               M0019100
      PROD2(2,I)=LL                                                     M0019200
  200 IPROD=IPROD+2                                                     M0019300
      PROD2(1,IPROD-1)=PROD2(1,I-1)                                     M0019400
      PROD2(2,IPROD-1)=PROD2(2,I-1)                                     M0019500
      PROD2(1,IPROD)=PROD2(1,I)                                         M0019600
      PROD2(2,IPROD)=PROD2(2,I)                                         M0019700
  210 CONTINUE                                                          M0019800
C                                                                       M0019900
C     COMPRESS ARRAY PROCOD AND SEARCH FOR ALTERNATIV PROD. NUMBER      M0020000
C                                                                       M0020100
      KPROD=IPROD                                                       M0020200
      DO 300 I=KK,KPROD,2                                               M0020300
      IF(PROD2(1,I).LE.0)GOTO 300                                       M0020400
      ID1=PROD2(1,I)                                                    M0020500
      ID2=PROD2(2,I)                                                    M0020600
      IF(LEVEL.NE.5)GOTO 230                                            M0020700
C                                                                       M0020800
      DO 220 J=ID1,ID2                                                  M0020900
      IF(LEVPOS(10,PROCOD(2,J)).EQ.5)GOTO 221                           M0021000
  220 CONTINUE                                                          M0021100
      GOTO 260                                                          M0021200
  221 LL=PROCOD(2,J)                                                    M0021300
      DO 223 L=ID1,ID2                                                  M0021400
      IF(LL.NE.PROCOD(2,L))GOTO 222                                     M0021500
      PROCOD(1,L)=0                                                     M0021600
      GOTO 223                                                          M0021700
  222 LEVPRD(1,PROCOD(2,L))=LEVPOS(12,LL)                               M0021800
      LEVPRD(2,PROCOD(2,L))=LEVEL                                       M0021900
  223 CONTINUE                                                          M0022000
      GOTO 260                                                          M0022100
C                                                                       M0022200
  230 DO 250 J=ID1,ID2                                                  M0022300
      K1=PROCOD(1,J)                                                    M0022400
      IF(MOD(K1,DIVIS).NE.0)GOTO 250                                    M0022500
      LL=J+1                                                            M0022600
      IF(LL.GT.ID2)GOTO 250                                             M0022700
      K1=K1/DIVIS                                                       M0022800
      L1=PROCOD(2,J)                                                    M0022900
      DO 240 L=LL,ID2                                                   M0023000
      K2=PROCOD(1,L)/DIVIS                                              M0023100
      IF(K2.GT.K1)GOTO 250                                              M0023200
      L2=PROCOD(2,L)                                                    M0023300
      LEVPRD(1,L2)=LEVPOS(12,L1)                                        M0023400
      LEVPRD(2,L2)=LEVEL                                                M0023500
      PROCOD(1,J)=0                                                     M0023600
  240 CONTINUE                                                          M0023700
  250 PROCOD(1,J)=MOD(PROCOD(1,J),DIVIS)                                M0023800
  260 LL=ID2                                                            M0023900
      ID2=ID1-1                                                         M0024000
      I1=0                                                              M0024100
      DO 270 J=ID1,LL                                                   M0024200
      IF(PROCOD(1,J).LE.0)GOTO 270                                      M0024300
      ID2=ID2+1                                                         M0024400
      IF(ID1.EQ.ID2)NN=PROCOD(2,J)                                      M0024500
      IF(PROCOD(2,J).NE.NN)I1=I1+1                                      M0024600
      PROCOD(1,ID2)=PROCOD(1,J)                                         M0024700
      PROCOD(2,ID2)=PROCOD(2,J)                                         M0024800
  270 CONTINUE                                                          M0024900
      IF(ID2.LE.ID1.OR.I1.LE.0)GOTO 280                                 M0025000
      PROD2(1,I)=ID1                                                    M0025100
      PROD2(2,I)=ID2                                                    M0025200
      IRET=0                                                            M0025300
      GOTO 300                                                          M0025400
  280 IF(LEVPOS(10,PROCOD(2,ID1)).EQ.LEVEL)GOTO 290                     M0025500
      PROD2(1,I)=-LEVEL-1                                               M0025600
      PROD2(2,I)=PROCOD(2,ID1)                                          M0025700
      GOTO 300                                                          M0025800
  290 PROD2(1,I)=0                                                      M0025900
      PROD2(2,I)=-LEVPOS(12,PROCOD(2,ID1))                              M0026000
  300 CONTINUE                                                          M0026100
C                                                                       M0026200
C         SEARCH FOR UNIFORM PARTICULAR PRODUCTION                      M0026300
C                                                                       M0026400
      DO 340 I=KK,KPROD,2                                               M0026500
      IF(PROD2(1,I).GE.0)GOTO 340                                       M0026600
      L2=PROD2(2,I)                                                     M0026700
      L1=-PROD2(1,I)                                                    M0026800
      DO 320 K2=STRTPR,ENDPRD                                           M0026900
      IF(LEVPOS(L1,K2).NE.LEVPOS(L1,L2))GOTO 320                        M0027000
      IF(LEVPOS(11,K2).GT.0.OR.L2.EQ.K2)GOTO 320                        M0027100
      IF(IABS(LEVPOS(11,K2)).NE.IABS(LEVPOS(11,L2)))GOTO 320            M0027200
      IF(LEVPRD(1,K2).NE.LEVPRD(1,L2))GOTO 320                          M0027300
      PROD2(2,I)=K2                                                     M0027400
      GOTO 340                                                          M0027500
  320 CONTINUE                                                          M0027600
      IF(LEVPOS(11,L2).GT.0)LEVPOS(11,L2)=-LEVPOS(11,L2)                M0027700
  340 CONTINUE                                                          M0027800
C                                                                       M0027900
C         COLLECT CLASS WORDS WITH SAME FINAL PRODUCTIONS               M0028000
C                   OF THE PARTICULAR PRODUCTIONS                       M0028100
C                                                                       M0028200
  350 IPROD=LPROD                                                       M0028300
      DO 460 I=KK,KPROD,2                                               M0028400
      IF(PROD2(1,I-1).EQ.PROD2(2,I-1))GOTO 460                          M0028500
      IF(PROD2(1,I).GT.0)GOTO 450                                       M0028600
      LL=I+2                                                            M0028700
      IF(LL.GT.KPROD)GOTO 440                                           M0028800
      ASC=IASC+2                                                        M0028900
      JASC=IASC                                                         M0029000
      NN=IASC+1                                                         M0029100
      I1=0                                                              M0029200
      JASSOC(ASC)=PROD2(2,I-1)                                          M0029300
      IF(JASSOC(ASC).GT.TENMIL)I1=1                                     M0029400
      DO 360 L=LL,KPROD,2                                               M0029500
      IF(PROD2(1,L).NE.PROD2(1,I))GOTO 360                              M0029600
      IF(PROD2(2,L).NE.PROD2(2,I))GOTO 360                              M0029700
      ASC=ASC+1                                                         M0029800
      IF(ASC.GT.4*QASSOC)CALL SPILL(4,'LOAD2   ')                       M0029900
      JASSOC(NN)=-ASC                                                   M0030000
      JASSOC(ASC)=PROD2(2,L-1)                                          M0030100
      IF(JASSOC(ASC).GT.TENMIL)I1=1                                     M0030200
      IASC=ASC                                                          M0030300
      PROD2(2,L-1)=PROD2(1,L-1)                                         M0030400
      PROD2(2,I-1)=TENMIL+NN                                            M0030500
  360 CONTINUE                                                          M0030600
      IF(NN.GT.IASC.OR.JASC.EQ.0)GOTO 440                               M0030700
      IF(I1.EQ.0)GOTO 410                                               M0030800
      L1=NN+1                                                           M0030900
      L2=-JASSOC(NN)                                                    M0031000
      LL=L2                                                             M0031100
      DO 390 J=L1,L2                                                    M0031200
      IF(JASSOC(J).GT.TENMIL)GOTO 370                                   M0031300
      LL=LL+1                                                           M0031400
      JASSOC(LL)=JASSOC(J)                                              M0031500
      GOTO 390                                                          M0031600
  370 K=JASSOC(J)-TENMIL+1                                              M0031700
      L=-JASSOC(K-1)                                                    M0031800
      DO 380 I1=K,L                                                     M0031900
      LL=LL+1                                                           M0032000
  380 JASSOC(LL)=JASSOC(I1)                                             M0032100
  390 CONTINUE                                                          M0032200
      CALL SORT(JASSOC(L2+1),1,LL-L2,1,1)                               M0032300
      IASC=NN+1                                                         M0032400
      L2=L2+2                                                           M0032500
      JASSOC(IASC)=JASSOC(L2-1)                                         M0032600
      DO 400 I1=L2,LL                                                   M0032700
      IF(JASSOC(I1).LE.JASSOC(I1-1))GOTO 400                            M0032800
      IASC=IASC+1                                                       M0032900
      JASSOC(IASC)=JASSOC(I1)                                           M0033000
  400 CONTINUE                                                          M0033100
      JASSOC(NN)=-IASC                                                  M0033200
  410 K=IASC-NN                                                         M0033300
      DO 430 J=1,JASC                                                   M0033400
      IF(JASSOC(J).GE.0)GOTO 430                                        M0033500
      IF(K.NE.(-JASSOC(J)-J))GOTO 430                                   M0033600
      DO 420 L=1,K                                                      M0033700
      IF(JASSOC(J+L).NE.JASSOC(NN+L))GOTO 430                           M0033800
  420 CONTINUE                                                          M0033900
      IASC=JASC                                                         M0034000
      PROD2(2,I-1)=TENMIL+J                                             M0034100
      GOTO 440                                                          M0034200
  430 CONTINUE                                                          M0034300
      JASC=IASC                                                         M0034400
  440 IF(PROD2(1,I).LT.0)GOTO 450                                       M0034500
      PROD2(2,I)=-LEVPOS(12,PROD2(2,I))                                 M0034600
  450 IPROD=IPROD+2                                                     M0034700
      PROD2(1,IPROD-1)=PROD2(1,I-1)                                     M0034800
      PROD2(2,IPROD-1)=PROD2(2,I-1)                                     M0034900
      PROD2(1,IPROD)=PROD2(1,I)                                         M0035000
      PROD2(2,IPROD)=PROD2(2,I)                                         M0035100
  460 CONTINUE                                                          M0035200
C                                                                       M0035300
C     SORT SO THAT PARTICULAR PRODUCTIONS STAND AT THE END OF THE COLUMNM0035400
C                                                                       M0035500
      L2=IPROD                                                          M0035600
      DO 462 I=KK,IPROD,2                                               M0035700
      IF(PROD2(1,I).GE.0)GOTO 462                                       M0035800
      L2=L2+2                                                           M0035900
      IF(L2.GE.QPROD2)CALL SPILL(11,'LOAD2   ')                         M0036000
      PROD2(2,L2-1)=PROD2(2,I-1)                                        M0036100
      PROD2(1,L2)=PROD2(1,I)                                            M0036200
      PROD2(2,L2)=PROD2(2,I)                                            M0036300
  462 CONTINUE                                                          M0036400
      IF(L2.EQ.IPROD)GOTO 469                                           M0036500
      LL=LPROD                                                          M0036600
      DO 464 I=KK,IPROD,2                                               M0036700
      IF(PROD2(1,I).LT.0)GOTO 464                                       M0036800
      LL=LL+2                                                           M0036900
      PROD2(2,LL-1)=PROD2(2,I-1)                                        M0037000
      PROD2(1,LL)=PROD2(1,I)                                            M0037100
      PROD2(2,LL)=PROD2(2,I)                                            M0037200
  464 CONTINUE                                                          M0037300
      L1=IPROD+2                                                        M0037400
      K2=L1                                                             M0037500
      IF(L2.EQ.L1)GOTO 467                                              M0037600
  465 K1=0                                                              M0037700
      DO 466 I=L1,L2,2                                                  M0037800
      IF(PROD2(2,I).LE.K1)GOTO 466                                      M0037900
      K1=PROD2(2,I)                                                     M0038000
      K2=I                                                              M0038100
  466 CONTINUE                                                          M0038200
  467 LL=LL+2                                                           M0038300
      PROD2(2,LL-1)=PROD2(2,K2-1)                                       M0038400
      PROD2(1,LL  )=PROD2(1,K2  )                                       M0038500
      PROD2(2,LL  )=PROD2(2,K2  )                                       M0038600
      PROD2(2,K2)=0                                                     M0038700
      IF(LL.LT.IPROD)GOTO 465                                           M0038800
C                                                                       M0038900
C     END OF THE LEVEL                                                  M0039000
C                                                                       M0039100
  469 J=PROD2(2,IPROD-1)                                                M0039200
      IF(J.LT.1.OR.J.GT.MAXCLS)GOTO 470                                 M0039300
      IF(CLSWRD(J).EQ.KNT)GOTO 480                                      M0039400
  470 IPROD=IPROD+1                                                     M0039500
      IF(IPROD.GE.QPROD2)CALL SPILL(11,'LOAD2   ')                      M0039600
      PROD2(1,IPROD)=0                                                  M0039700
      PROD2(2,IPROD)=PP                                                 M0039800
C                                                                       M0039900
  480 IF(STRTPR.EQ.1)GOTO 560                                           M0040000
C                                                                       M0040100
C     COMPRESS LEVEL SECTION IF BASIC PRODUCTIONS                       M0040200
C                                                                       M0040300
      IF(LGT.EQ.0)GOTO 550                                              M0040400
      K=0                                                               M0040500
      L=0                                                               M0040600
  490 K=K+1                                                             M0040700
      IF(K.GT.LGT)GOTO 530                                              M0040800
      IF(LVL(2,K).NE.LEVEL)GOTO 490                                     M0040900
      I=LVL(1,K)+1                                                      M0041000
      J=IPROD+1                                                         M0041100
  500 I=I-1                                                             M0041200
      J=J-1                                                             M0041300
      IF(J.LE.LPROD)GOTO 540                                            M0041400
      IF(PROD2(1,J).GT.TENMIL)GOTO 510                                  M0041500
      IF(PROD2(1,J).GT.0)GOTO 520                                       M0041600
      IF(PROD2(1,J).NE.PROD2(1,I))GOTO 520                              M0041700
  510 IF(PROD2(2,J).NE.PROD2(2,I))GOTO 520                              M0041800
      GOTO 500                                                          M0041900
  520 N=IPROD-J                                                         M0042000
      IF(N.LT.3.OR.N.LE.L)GOTO 490                                      M0042100
      L=N                                                               M0042200
      M=LVL(1,K)-L+1                                                    M0042300
      GOTO 490                                                          M0042400
  530 IF(L.EQ.0)GOTO 550                                                M0042500
      IPROD=IPROD-L+1                                                   M0042600
      IF(PROD2(1,IPROD).GT.TENMIL)GOTO 535                              M0042700
      IPROD=IPROD+1                                                     M0042800
      M=M+1                                                             M0042900
  535 PROD2(1,IPROD)=0                                                  M0043000
      PROD2(2,IPROD)=TENMIL+4*M                                         M0043100
      GOTO 560                                                          M0043200
C                                                                       M0043300
  540 PROD2(1,FROM+1)=0                                                 M0043400
      PROD2(2,FROM+1)=TENMIL+4*(I+1)                                    M0043500
      IPROD=LPROD                                                       M0043600
      IRET=1                                                            M0043700
      GOTO 560                                                          M0043800
C                                                                       M0043900
  550 IF(LGT.GE.400)GOTO 560                                            M0044000
      LGT=LGT+1                                                         M0044100
      LVL(1,LGT)=IPROD                                                  M0044200
      LVL(2,LGT)=LEVEL                                                  M0044300
C                                                                       M0044400
  560 RETURN                                                            M0044500
      END                                                               M0044600
**** SOURCE FILE : M0006710.V08   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADA                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADA                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    BINBCD          SUBROUTINE    LOADB            M0000800
C          SUBROUTINE    CFORM           SUBROUTINE    LOADT            M0000900
C                                                                       M0001000
      SUBROUTINE LOADA                                                  M0001100
C                                                                       M0001200
      IMPLICIT INTEGER (A-Z)                                            M0001300
C                                                                       M0001400
C        1.    NAME TABLE AND TABLE LIMITS                              M0001500
C                                                                       M0001600
      INCLUDE 'NAMETB.INC'                                              M0001710
C  NAMBTL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY           M0001850
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0001950
C                                                                       M0002100
C        2.    STACK AND POINTER STORAGE                                M0002200
C                                                                       M0002300
      COMMON/STKLST/STKLST                                              M0002400
      DIMENSION STKLST(3002),PRODR(3000)                                M0002500
C  PRODR:      ORDINAL NUMBERS OF THE PRD. TABLES IN SEQUENT. MODE      M0002600
      EQUIVALENCE (PRODR(1),STKLST(3))                                  M0002700
C                                                                       M0002800
C        6.    SYMBOLIC FILE DEFINITIONS                                M0002900
C                                                                       M0003000
      COMMON/SYMFIL/SYMFIL                                              M0003100
      DIMENSION SYMFIL(6)                                               M0003200
C  ELFILE:     I/O FILE NUMBER OF TRANSFORMED PRODUCTION TABLE          M0003300
      EQUIVALENCE (ELFILE,SYMFIL(4))                                    M0003400
C                                                                       M0003500
C        8.    CONTROL FLAGS AND POINTERS                               M0003600
C                                                                       M0003700
      INCLUDE 'LDSCOM.INC'                                              M0003810
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0004000
C  BREAK:      VALUE OF POSTN FOR BRKPNT                                M0004200
C                                                                       M0004400
C        9.    ITEM AND GROUP CONTROL                                   M0004500
C                                                                       M0004600
      INCLUDE 'ASSOC.INC'                                               M0004810
C  JASSOC:     STORAGE OF CLASS WORD COLLECTION. TABLE COMPRESSION      M0004900
C                                                                       M0005100
C       13.    SPACE FOR PRODUCTION LISTS                               M0005200
C                                                                       M0005300
      INCLUDE 'PRODN.INC'                                               M0005410
C  PROD2:      CONTAINS PRODUCTION TABLES IN JUMP MODE                  M0005600
C                                                                       M0005800
C       16.    RELATION OF ORDINAL NUMBERS TO NAMTBL INDEXES            M0005900
C                                                                       M0006000
      COMMON/CLSWRD/CLSWRD                                              M0006100
      DIMENSION CLSWRD(100)                                             M0006200
C                                                                       M0006300
C       17.    OUTPUT SPACE FOR TRANSFORMED PRODUCTION LIST             M0006400
C                                                                       M0006500
      COMMON/OUTARY/OUTARY                                              M0006600
      CHARACTER*80 OUTARY                                               M0006700
C                                                                       M0006800
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION            M0006900
C                                                                       M0007000
      COMMON/BRANCH/BRANCH                                              M0007100
      DIMENSION BRANCH(515)                                             M0007200
C  TENMIL:     CONTAINS DIVISOR 10000                                   M0007300
      EQUIVALENCE (TENMIL,BRANCH(2))                                    M0007400
C  MAXCLS:     NUMBER OF DEFINITIONS IN A TRANSFORMATION SECTIION       M0007500
      EQUIVALENCE (MAXCLS,BRANCH(6))                                    M0007600
C*                                                                      M0007700
C PURPOSE      TO OUTPUT THE BASIC PRODUCTION TABLE AND THE             M0007800
C              GEOMETRIC PRODUCTION TABLE ON A TEMPORARY FILE           M0007900
C**                                                                     M0008000
      IF(BREAK.EQ.0)GOTO 165                                            M0008100
      DO 160 I=1,BREAK                                                  M0008200
      OUTARY(1:72)=' '                                                  M0008400
      L=TENMIL+4*I                                                      M0008500
      CALL BINBCD(L,OUTARY(73:80),N)                                    M0008600
      J1=PROD2(1,I)                                                     M0008700
      J2=PROD2(2,I)                                                     M0008800
      IF(J1.EQ.0)GOTO 140                                               M0008900
      IF(J2.GT.MAXCLS)GOTO 110                                          M0009000
C                                                                       M0009100
C     OUTPUT OF A PARTICULAR CLASS WORD                                 M0009200
C                                                                       M0009300
      J2=CLSWRD(J2)                                                     M0009400
      CALL CFORM(CNAMTB(J2),OUTARY,8,6)                                 M0009500
      GOTO 160                                                          M0009600
C                                                                       M0009700
C     OUTPUT OF A GROUP OF CLASS WORDS                                  M0009800
C                                                                       M0009900
  110 J2=J2-TENMIL+1                                                    M0010000
      J1=IABS(JASSOC(J2-1))                                             M0010100
      K=0                                                               M0010200
      DO 130 J=J2,J1                                                    M0010300
      K=K+1                                                             M0010400
      LL=JASSOC(J)                                                      M0010500
      LL=CLSWRD(LL)                                                     M0010600
      CALL CFORM(CNAMTB(LL),OUTARY,8*K,6)                               M0010700
      IF(J.EQ.J1)GOTO 160                                               M0010800
      CALL CFORM(',',OUTARY,8*K+7,1)                                    M0010900
      IF(K.LT.7)GOTO 130                                                M0011000
      CALL CFORM(',$',OUTARY,62,2)                                      M0011100
      WRITE(ELFILE,999)OUTARY                                           M0011200
      OUTARY(1:72)=' '                                                  M0011400
      K=0                                                               M0011500
  130 CONTINUE                                                          M0011600
      GOTO 160                                                          M0011700
C                                                                       M0011800
  140 IF(J2.GT.TENMIL)GOTO 150                                          M0011900
C                                                                       M0012000
C     OUTPUT OF A PRODUCTION NUMBER OR BRKPNT                           M0012100
C                                                                       M0012200
      CALL CFORM(CNAMTB(-J2),OUTARY,8,6)                                M0012300
      GOTO 160                                                          M0012400
C                                                                       M0012500
C     OUTPUT OF A GOTO ADDRESS                                          M0012600
C                                                                       M0012700
  150 CALL BINBCD(J2,OUTARY(9:16),N)                                    M0012800
  160 WRITE(ELFILE,999)OUTARY                                           M0012900
C                                                                       M0013000
C     OUTPUT OF THE PARTICULAR PRODUCTION SECTION                       M0013100
C                                                                       M0013200
  165 BREAK=BREAK+1                                                     M0013300
      IF(BREAK.GE.IPROD)GOTO 250                                        M0013400
      DO 230 I=BREAK,IPROD                                              M0013500
      OUTARY(1:72)=' '                                                  M0013700
      L=TENMIL+4*I                                                      M0013800
      CALL BINBCD(L,OUTARY(73:80),N)                                    M0013900
      J1=PROD2(1,I)                                                     M0014000
      J2=PROD2(2,I)                                                     M0014100
      IF(J2.GE.0)GOTO 180                                               M0014200
C                                                                       M0014300
C     OUTPUT OF THE PRODUCTION NUMBER                                   M0014400
C                                                                       M0014500
      CALL CFORM(CNAMTB(-J2),OUTARY,8,6)                                M0014600
      GOTO 230                                                          M0014700
C                                                                       M0014800
C     OUTPUT OF A GROUP OF CLASS WORDS                                  M0014900
C                                                                       M0015000
  180 K=0                                                               M0015100
      DO 200 J=J1,J2                                                    M0015200
      K=K+1                                                             M0015300
      LL=IABS(PRODR(J))                                                 M0015400
      LL=CLSWRD(LL)                                                     M0015500
      CALL CFORM(CNAMTB(LL),OUTARY,8*K,6)                               M0015600
      IF(J.EQ.J2)GOTO 230                                               M0015700
      CALL CFORM(',',OUTARY,8*K+7,1)                                    M0015800
      IF(K.LT.7)GOTO 200                                                M0015900
      CALL CFORM(',$',OUTARY,62,2)                                      M0016000
      WRITE(ELFILE,999)OUTARY                                           M0016100
      OUTARY(1:72)=' '                                                  M0016300
      K=0                                                               M0016400
  200 CONTINUE                                                          M0016500
  230 WRITE(ELFILE,999)OUTARY                                           M0016600
C                                                                       M0016700
  250 RETURN                                                            M0016800
  999 FORMAT(A80)                                                       M0016900
      END                                                               M0017000
**** SOURCE FILE : M0006711.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADB                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADB                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    BINBCD          SUBROUTINE    LOADP            M0000800
C          SUBROUTINE    LOADA                                          M0000900
C          SUBROUTINE    LOADI                                          M0001000
C          SUBROUTINE    LOADU                                          M0001100
C          SUBROUTINE    LOAD0                                          M0001200
C          SUBROUTINE    CFORM                                          M0001300
C          SUBROUTINE    SORT                                           M0001400
C          SUBROUTINE    SPILL                                          M0001500
C                                                                       M0001600
      SUBROUTINE LOADB                                                  M0001700
C                                                                       M0001800
      IMPLICIT INTEGER (A-Z)                                            M0001900
C                                                                       M0002000
C        1.    NAME TABLE AND TABLE LIMITS                              M0002100
C                                                                       M0002200
      INCLUDE 'NAMETB.INC'                                              M0002310
C  NAMTBL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY           M0002450
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002550
C                                                                       M0002700
C        2.    STACK AND POINTER STORAGE                                M0002800
C                                                                       M0002900
      COMMON/STKLST/STKLST                                              M0003000
      DIMENSION STKLST(3002),PRODR(3000)                                M0003100
C  PRODR:      ORDINAL NUMBERS OF THE PRD. TABLES IN SEQUENT. MODE      M0003200
      EQUIVALENCE (PRODR(1),STKLST(3))                                  M0003300
C                                                                       M0003400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0003500
C                                                                       M0003600
      COMMON/CODES/CODES                                                M0003700
      DIMENSION CODES(150),DIGIT(2)                                     M0003800
C  DIGIT:      (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '        M0003900
      EQUIVALENCE (DIGIT(1),CODES(19))                                  M0004000
C                                                                       M0004100
C        6.    SYMBOLIC FILE DEFINITIONS                                M0004200
C                                                                       M0004300
      COMMON/SYMFIL/SYMFIL                                              M0004400
      DIMENSION SYMFIL(6)                                               M0004500
C  ELFILE:     I/O FILE NUMBER OF TRANSFORMED PRODUCTION TABLE          M0004600
      EQUIVALENCE (ELFILE,SYMFIL(4))                                    M0004700
C  LCDATA      INPUT FILE NUMBER OF PRODUCTION TABLES SEQUEN. MODE      M0004800
      EQUIVALENCE (LCDATA,SYMFIL(5))                                    M0004900
C  VLFILE:     VERIFICATION LISTING FILE                                M0005000
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0005100
C                                                                       M0005200
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0005300
C                                                                       M0005400
      COMMON/LDXSIZ/LDXSIZ                                              M0005500
      DIMENSION LDXSIZ(28)                                              M0005600
C  QLENGT:     DIMENSION OF ARRAY LENGTH                                M0005700
      EQUIVALENCE (QLENGT,LDXSIZ(6))                                    M0005800
C  QSTACK:     DIMENSION OF ARRAY PRODR                                 M0005900
      EQUIVALENCE (QSTACK,LDXSIZ(12))                                   M0006000
C  QLEVPO:     DIMENSION OF ARRAY LEVPOS                                M0006100
      EQUIVALENCE (QLEVPO,LDXSIZ(13))                                   M0006200
C                                                                       M0006300
C        8.    CONTROL FLAGS AND POINTERS                               M0006400
C                                                                       M0006500
      INCLUDE 'LDSCOM.INC'                                              M0006610
C  ERROR:      FLAG SET IF ERROR IN PRODUCTION TABLE                    M0006900
C  IBKPNT:     NAMTBL INDEX OF BRKPNT                                   M0007100
C  PRODI:      POINTER TO LAST ENTRY IN PRODN TABLE                     M0007300
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0007500
C  BREAK:      VALUE OF POSTN FOR BRKPNT                                M0007700
C  KNT:        NAMTBL INDEX OF ALL                                      M0007900
C                                                                       M0008100
C        9.    ITEM AND GROUP CONTROL                                   M0008200
C                                                                       M0008300
      INCLUDE 'ASSOC.INC'                                               M0008410
C                                                                       M0008600
C       10.    ITEM AND GROUP CONTROL                                   M0008700
C                                                                       M0008800
      COMMON/LENGTH/LENGTH                                              M0008900
C  LENGTH:     TABLE OF GROUPS AND NUMBER OF CONTAINED ELEMENTS         M0009000
      DIMENSION LENGTH(3,100)                                           M0009100
C                                                                       M0009200
C       13.    SPACE FOR PRODUCTION LISTS                               M0009300
C                                                                       M0009400
      INCLUDE 'PRODN.INC'                                               M0009510
C  PROD2:      CONTAINS PRODUCTION TABLES IN JUMP MODE                  M0009700
C                                                                       M0009900
C       14.    LEVEL START OF THE PRODUCTIONS IN PRODR                  M0010000
C                                                                       M0010100
      COMMON/LEVPOS/LEVPOS                                              M0010200
      DIMENSION LEVPOS(12,250)                                          M0010300
C                                                                       M0010400
C       16.    RELATION OF ORDINAL NUMBERS TO NAMTBL INDEXES            M0010500
C                                                                       M0010600
      COMMON/CLSWRD/CLSWRD                                              M0010700
      DIMENSION CLSWRD(100)                                             M0010800
C                                                                       M0010900
C       17.    OUTPUT SPACE FOR TRANSFORMED PRODUCTION LIST             M0011000
C                                                                       M0011100
      COMMON/OUTARY/OUTARY                                              M0011200
      CHARACTER*80 OUTARY                                               M0011300
C                                                                       M0011400
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION            M0011500
C                                                                       M0011600
      COMMON/BRANCH/BRANCH                                              M0011700
      DIMENSION BRANCH(515)                                             M0011800
C  TENMIL:     CONTAINS DIVISOR 10000                                   M0011900
      EQUIVALENCE (TENMIL,BRANCH(2))                                    M0012000
C  LEVEL:      ACTUALLY PROCESSED PRODUCTION LEVEL                      M0012100
      EQUIVALENCE (LEVEL,BRANCH(5))                                     M0012200
C  MAXCLS:     NUMBER OF DEFINITIONS IN A TRANSFORMATION SECTIION       M0012300
      EQUIVALENCE (MAXCLS,BRANCH(6))                                    M0012400
C  CONCAT:     =1 IF TRANSFORMATION OF THE CONCATENATING PRODUCTIONS    M0012500
      EQUIVALENCE (CONCAT,BRANCH(15))                                   M0012600
C*                                                                      M0012700
C PURPOSE      TO CHANGE THE BASIC PRODUCTION TABLE FROM                M0012800
C              SEQUENTIAL READ FORMAT TO A JUMP MODE TABLE.             M0012900
C                                                                       M0013000
      CHARACTER*6 JALL,IDIGIT                                           M0013100
      LOGICAL ERRPRT                                                    M0013200
      DATA IDIGIT/'DIGIT'/,ERRPRT/.FALSE./,JALL/'ALL'/                  M0013300
      CHARACTER*6  MACPRD(25)                                           M0013400
      DATA   MACPRD           /'RTERM'   ,'10028'   ,'MCLTRM'  ,        M0013500
     *  '10060'    ,'ALL'     ,'10080'   ,'MCLTRM'  ,'56'      ,        M0013600
     *  'TERMAC'   ,'10048'   ,'10088'   ,'MCLTRM'  ,'54'      ,        M0013700
     *  '10104'    ,'MCLTRM'  ,'58'      ,'ALL'     ,'10096'   ,        M0013800
     *  'MACVBL'   ,'MCLTRM'  ,'60'      ,'ALL'     ,'10096'   ,        M0013900
     *  'MCLTRM'   ,'55'      /                                         M0014000
C**                                                                     M0014100
      QPRODR=QSTACK*2                                                   M0014200
      CNAMTB(KNT)=JALL                                                  M0014350
C                                                                       M0014500
      CLSWRD(MAXCLS)=KNT                                                M0014600
C                                                                       M0014700
C     SAVE CONTENT OF PRODN IN PRODR AFTER HAVING REPLACED THE NAMTBL-  M0014800
C     ADDRESSES OF THE CLASS WORDS BY THE PRIORITY NUMBER.              M0014900
C     FILL THE ARRAY LEVPOS (LEVEL POSITION). IT IS                     M0015000
C     LEVPOS( 1,X)   PRIORITY NUMBER                                    M0015100
C     LEVPOS( 2,X)   START ADDRESS (IN PRODR) OF THE 2ND LEVEL          M0015200
C     LEVPOS( 3,X)   START ADDRESS (IN PRODR) OF THE 3RD LEVEL          M0015300
C     LEVPOS( 4,X)   START ADDRESS (IN PRODR) OF THE 4TH LEVEL          M0015400
C     LEVPOS( 5,X)   START ADDRESS (IN PRODR) OF THE 5TH LEVEL          M0015500
C     LEVPOS( 6,X)   START ADDRESS (IN PRODR) OF THE 6TH LEVEL          M0015600
C     LEVPOS( 7,X)   START ADDRESS (IN PRODR) OF THE 7TH LEVEL          M0015700
C     LEVPOS( 8,X)   START ADDRESS (IN PRODR) OF THE 8TH LEVEL          M0015800
C     LEVPOS( 9,X)   START ADDRESS (IN PRODR) OF THE 9TH LEVEL          M0015900
C     LEVPOS(10,X)   NUMBER OF LEVELS OF THE PRODUCTION                 M0016000
C     LEVPOS(11,X)   PRODUCTION NUMBER (NAMTBL ADDR.) AT FAILING SEARCH M0016100
C     LEVPOS(12,X)   PRODUCTION NUMBER (NAMTBL ADDR.)                   M0016200
C                                                                       M0016300
      DO 11 J=1,QLEVPO                                                  M0016400
      DO 10 I=1,11                                                      M0016500
   10 LEVPOS(I,J)=0                                                     M0016600
   11 CONTINUE                                                          M0016700
      DO 15 J=1,QLENGT                                                  M0016800
   15 LENGTH(1,J)=0                                                     M0016900
C                                                                       M0017000
      M=1                                                               M0017100
      IPRO=0                                                            M0017200
      NSIGN=-1                                                          M0017300
      LEVPOS(1,1)=1                                                     M0017400
      DO 60 I=1,PRODI                                                   M0017500
      J=PRODN(I)                                                        M0017600
      K=IABS(J)                                                         M0017700
      IF(I.GE.IPROD)NSIGN=1                                             M0017800
      IF(NAMTBL(K).EQ.DIGIT(1).AND.CNAMTB(K).NE.IDIGIT)GOTO 50          M0017900
      DO 20 L=1,MAXCLS                                                  M0018000
      IF(K.EQ.CLSWRD(L))GOTO 30                                         M0018100
   20 CONTINUE                                                          M0018200
      ERROR=.TRUE.                                                      M0018300
      ERRPRT=.TRUE.                                                     M0018400
      CASSOC(1)=CNAMTB(K)                                               M0018500
      GOTO 60                                                           M0018700
   30 IPRO=IPRO+1                                                       M0018800
      IF(IPRO.GT.QPRODR)CALL SPILL(12,'LOADB   ')                       M0018900
      PRODR(IPRO)=L*ISIGN(1,J)                                          M0019000
      IF(J.NE.K)LEVEL=LEVEL+1                                           M0019100
      IF(LEVEL.GT.8.OR.LEVEL.LT.1)GOTO 60                               M0019200
      IF(LEVPOS(LEVEL+1,M).EQ.0)LEVPOS(LEVEL+1,M)=IPRO+1                M0019300
      GOTO 60                                                           M0019400
   50 IF(ERRPRT)WRITE(VLFILE,98)CNAMTB(K),CASSOC(1)                     M0019500
   98 FORMAT(36H ERROR NO. 7045  IN SUBROUTINE LOADB/1H ,14HIN PRODUCTIOM0019700
     *N ,   A6/1H ,   A6,67H  IS AN INVALID CLASS WORD OR A CLASS WORD WM0019800
     *ITHOUT A PRIORITY VALUE)                                          M0019900
      ERRPRT=.FALSE.                                                    M0020000
      IPRO=IPRO+1                                                       M0020100
      IF(IPRO.GT.QPRODR)CALL SPILL(12,'LOADB   ')                       M0020200
      PRODR(IPRO)=J                                                     M0020300
      LEVPOS(10,M)=LEVEL                                                M0020400
      LEVPOS(12,M)=K*NSIGN                                              M0020500
      IF(LEVEL.EQ.0)M=M-1                                               M0020600
      LEVEL=0                                                           M0020700
      M=M+1                                                             M0020800
      IF(M.GT.QLEVPO)CALL SPILL(13,'LOADB   ')                          M0020900
      LEVPOS(1,M)=IPRO+1                                                M0021000
   60 CONTINUE                                                          M0021100
      M=M-1                                                             M0021200
C                                                                       M0021300
C                                                                       M0021400
C     EXTEND LEVPOS ARRAY IN A WAY, THAT ONLY ONE PRIORITY NUMBER (CLASSM0021500
C     WORD) IS LEADING A TOTAL LINE OF LEVPOS                           M0021600
C                                                                       M0021700
      KPRO=M                                                            M0021800
      DO 90 I=1,M                                                       M0021900
      KK=LEVPOS(1,I)                                                    M0022000
      LL=LEVPOS(2,I)-1                                                  M0022100
      LEVPOS(1,I)=IABS(PRODR(KK))                                       M0022200
      IF(KK.EQ.LL)GOTO 90                                               M0022300
      KK=KK+1                                                           M0022400
      DO 80 J=KK,LL                                                     M0022500
      IF(KPRO.GE.QLEVPO)CALL SPILL(13,'LOADB   ')                       M0022600
      KPRO=KPRO+1                                                       M0022700
      DO 70 L=2,12                                                      M0022800
   70 LEVPOS(L,KPRO)=LEVPOS(L,I)                                        M0022900
   80 LEVPOS(1,KPRO)=IABS(PRODR(J))                                     M0023000
   90 CONTINUE                                                          M0023100
C                                                                       M0023200
      CALL LOAD0(IPRO,KPRO)                                             M0023300
C                                                                       M0023400
C     START POSITION AND NUMBER OF 'ALL' PRODUCTIONS                    M0023500
C                                                                       M0023600
      JPRO=IPRO+1                                                       M0023700
      DO 100 KK=1,KPRO                                                  M0023800
      NN=KPRO+1-KK                                                      M0023900
      IF(LEVPOS(1,NN).NE.MAXCLS)GOTO 110                                M0024000
  100 CONTINUE                                                          M0024100
  110 LL=NN+1                                                           M0024200
      JJ=KPRO                                                           M0024300
C                                                                       M0024400
C     'ALL' IS INCLUDING THE OTHER CLASS WORDS, IF THE CLASS WORDS      M0024500
C     DO NOT END IN A PRODUCTION NUMBER AHEAD OF 'ALL'                  M0024600
C                                                                       M0024700
      L=LEVPOS(1,JPRO)                                                  M0024800
      N=LEVPOS(1,NN)                                                    M0024900
      DO 130 J=L,N                                                      M0025000
      IF(LENGTH(1,J).EQ.0)GOTO 130                                      M0025100
      BREAK=PRODI                                                       M0025200
      IF(LENGTH(2,J).LT.0)BREAK=-LENGTH(2,J)                            M0025300
      DO 120 I=LL,JJ                                                    M0025400
      IF(LEVPOS(2,I).GT.BREAK)GOTO 130                                  M0025500
      KPRO=KPRO+1                                                       M0025600
      IF(KPRO.GT.QLEVPO)CALL SPILL(13,'LOADB   ')                       M0025700
      DO 115 K=2,12                                                     M0025800
  115 LEVPOS(K,KPRO)=LEVPOS(K,I)                                        M0025900
      LEVPOS(1,KPRO)=J                                                  M0026000
  120 CONTINUE                                                          M0026100
  130 CONTINUE                                                          M0026200
C                                                                       M0026300
      CALL SORT(LEVPOS(1,JPRO),12,KPRO-IPRO,1,2)                        M0026400
C                                                                       M0026500
C     LOAD ONE LEVEL PRODUCTION NUMBER FOR SECOND PRODUCTION NUMBER     M0026600
C     DELETE ONE LEVEL PRODUCTIONS NOT STANDING ALLONE                  M0026700
C                                                                       M0026800
      KPRO=KPRO+NN-JJ                                                   M0026900
      N=2                                                               M0027000
      J=1                                                               M0027100
  131 DO 140 I=N,IPRO                                                   M0027200
      IF(LEVPOS(10,I).NE.1)GOTO 140                                     M0027300
      LL=LEVPOS(1,I)                                                    M0027400
      NN=I-1                                                            M0027500
      DO 135 L=J,NN                                                     M0027600
      IF(LEVPOS(1,L).NE.LL)GOTO 135                                     M0027700
      LEVPOS(1,I)=0                                                     M0027800
      LEVPOS(11,L)=IABS(LEVPOS(12,I))                                   M0027900
  135 CONTINUE                                                          M0028000
  140 CONTINUE                                                          M0028100
      IF(J.NE.1)GOTO 150                                                M0028200
      N=JPRO+1                                                          M0028300
      J=JPRO                                                            M0028400
      IPRO=KPRO                                                         M0028500
      GOTO 131                                                          M0028600
C                                                                       M0028700
C     COMPRESS LEVPOS TABLE                                             M0028800
C                                                                       M0028900
  150 N=KPRO                                                            M0029000
      KPRO=0                                                            M0029100
      IPRO=0                                                            M0029200
      DO 170 I=1,N                                                      M0029300
      IF(LEVPOS(1,I).EQ.0)GOTO 170                                      M0029400
      IF(LEVPOS(12,I).LT.0)IPRO=IPRO+1                                  M0029500
      KPRO=KPRO+1                                                       M0029600
      DO 160 K=1,11                                                     M0029700
  160 LEVPOS(K,KPRO)=LEVPOS(K,I)                                        M0029800
      LEVPOS(12,KPRO)=IABS(LEVPOS(12,I))                                M0029900
  170 CONTINUE                                                          M0030000
C                                                                       M0030100
C         START DATA FOR CONCATENATING PRODUCTIONS                      M0030200
C                                                                       M0030300
      IPROD=0                                                           M0030400
      LL=1                                                              M0030500
      CONCAT=1                                                          M0030600
      CALL LOADU(LL,IPRO)                                               M0030700
C                                                                       M0030800
C         END OF THE CONCATENATING PRODUCTIONS                          M0030900
C                                                                       M0031000
      PROD2(1,IPROD)=0                                                  M0031100
      PROD2(2,IPROD)=-IBKPNT                                            M0031200
      CALL LOADA                                                        M0031300
C                                                                       M0031400
C     OUTPUT OF THE MACRO TEXT TRANSFER PRODUCTIONS                     M0031500
C                                                                       M0031600
      DO 350 J=1,25                                                     M0031700
      OUTARY(1:72)=' '                                                  M0031900
      L=TENMIL+4*J                                                      M0032000
      CALL BINBCD(L,OUTARY(73:80),N)                                    M0032100
      CALL CFORM(MACPRD(J),OUTARY,8,6)                                  M0032200
  350 WRITE(ELFILE,999)OUTARY                                           M0032300
      CALL CFORM('BRKPNT  ',OUTARY,8,8)                                 M0032400
      CALL CFORM('        ',OUTARY,73,8)                                M0032500
      WRITE(ELFILE,999)OUTARY                                           M0032600
C                                                                       M0032700
C         START FOR THE BASIC PRODUCTIONS                               M0032800
C                                                                       M0032900
      LL=IPRO+1                                                         M0033000
      IPROD=0                                                           M0033100
      CONCAT=0                                                          M0033200
      CALL LOADU(LL,KPRO)                                               M0033300
C                                                                       M0033400
C     OUTPUT OF THE BASIC PRODUCTIONS                                   M0033500
C                                                                       M0033600
      CALL LOADA                                                        M0033700
C                                                                       M0033800
C                                                                       M0033900
      OUTARY=' '                                                        M0034100
      CALL CFORM('FINI',OUTARY,8,4)                                     M0034200
      WRITE(ELFILE,999)OUTARY                                           M0034300
      REWIND ELFILE                                                     M0034400
      KK=1                                                              M0034500
      LL=LCDATA                                                         M0034600
      LCDATA=ELFILE                                                     M0034700
      CALL LOADI(KK)                                                    M0034800
      LCDATA=LL                                                         M0034900
C                                                                       M0035000
      RETURN                                                            M0035100
  999 FORMAT(A80)                                                       M0035200
      END                                                               M0035300
**** SOURCE FILE : M0006712.X01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADG                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADG                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    LOADI                         MAIN             M0000800
C          SUBROUTINE    LOADN                                          M0000900
C          SUBROUTINE    LOADS                                          M0001000
C          SUBROUTINE    LOADT                                          M0001100
C          INTEGER FCT.  NAME                                           M0001200
C          SUBROUTINE    BCDBIN                                         M0001300
C          SUBROUTINE    SORT                                           M0001400
C          SUBROUTINE    SPILL                                          M0001500
C                                                                       M0001600
      SUBROUTINE LOADG                                                  M0001700
C                                                                       M0001800
      IMPLICIT INTEGER (A-Z)                                            M0001900
C                                                                       M0002000
C        1.    NAME TABLE AND TABLE LIMITS                              M0002100
C                                                                       M0002200
      INCLUDE 'NAMETB.INC'                                              M0002310
C  CHARST:     BEGINNING OF BASIC CHARACTER SECTION OF NAMTBL           M0002500
C  CHARND:     END OF BASIC CHARACTER SECTION OF NAMTBL                 M0002700
C  INAMST:     BEGIN GEOMETRIC DEFINITION ROUTINE NAME SECTION(NAMTBL)  M0002900
C  INAMND:     END OF GEOMETRIC DEFINITION ROUTINE NAME SECTION(NAMTBL) M0003100
C  NAMEST:     NAMTBL INDEX OF BEGIN OF THE PART PROGRAM NAME  SECTION  M0003300
C  NAMMAX:     NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0003500
C  IFIXST:     INDEX OF BEGINNING OF FIXED POINT NUMBER SECTION,CNUMTB  M0003700
C  IFIXND:     INDEX OF START OF FIXED POINT NUMBER SECTION OF CNUMTB   M0003900
C  NUMBST:     INDEX OF BEGINNING OF NUMBER SECTION OF CNUMTB           M0004100
C  NUMBND:     INDEX OF END OF NUMBER SECTION OF CNUMTB                 M0004300
C  NAMTBL:     INTEGER CODES FOR CORRESPONDING NAME TABLE ENTRIES       M0004450
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0004550
C  CNUMTB:     NUMBER TABLE                                             M0004560
C                                                                       M0004700
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0004800
C                                                                       M0004900
      COMMON/CODES/CODES                                                M0005000
      DIMENSION CODES(150),DIGIT(2),IDENT(2)                            M0005100
C  DIGIT:      (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '        M0005200
      EQUIVALENCE (DIGIT(1),CODES(19))                                  M0005300
C  IDENT:      (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        M0005400
      EQUIVALENCE (IDENT(1),CODES(69))                                  M0005500
C                                                                       M0005600
C        5.    CLASS CODE MODULI                                        M0005700
C                                                                       M0005800
C  MODULO:     NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0005900
      COMMON/MODULI/MODULO                                              M0006000
C                                                                       M0006100
C        6.    SYMBOLIC FILE DEFINITIONS                                M0006200
C                                                                       M0006300
      COMMON/SYMFIL/SYMFIL                                              M0006400
      DIMENSION SYMFIL(6)                                               M0006500
C  NTFILE:     BLOCK DATA OUTPUT OF NAMTBL AND NAMTBL POINTERS          M0006600
      EQUIVALENCE (NTFILE,SYMFIL(2))                                    M0006700
C  GPFILE:     BLOCK DATA OUTPUT OF GEOMETRIC PRODUCTIONS               M0006800
      EQUIVALENCE (GPFILE,SYMFIL(3))                                    M0006900
C                                                                       M0007000
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0007100
C                                                                       M0007200
      COMMON/LDXSIZ/LDXSIZ                                              M0007300
      DIMENSION LDXSIZ(28)                                              M0007400
C  QPMIDT:     DIMENSION OF ARRAY PMIDTB                                M0007500
      EQUIVALENCE (QPMIDT,LDXSIZ(3))                                    M0007600
C  QGEOML:     DIMENSION OF ARRAY GEOMLC                                M0007700
      EQUIVALENCE (QGEOML,LDXSIZ(5))                                    M0007800
C  QPRODN:     DIMENSION OF ARRAY PRODN                                 M0007900
      EQUIVALENCE (QPRODN,LDXSIZ(7))                                    M0008000
C  QIAGMX:     DIMENSION OF ARRAY IAGMXY                                M0008100
      EQUIVALENCE (QIAGMX,LDXSIZ(10))                                   M0008200
C  QARGMX:     DIMENSION OF ARRAY ARGMXY (OUTPUT)                       M0008300
      EQUIVALENCE (QARGMX,LDXSIZ(15))                                   M0008400
C  QGEOLO:     DIMENSION OF ARRAY GEOLOC                                M0008500
      EQUIVALENCE (QGEOLO,LDXSIZ(17))                                   M0008600
C  QIPRMI:     DIMENSION OF ARRAY IPRMID                                M0008700
      EQUIVALENCE (QIPRMI,LDXSIZ(18))                                   M0008800
C  QNAMTB:     DIMENSION OF ARRAY NAMTBL(OUTPUT)                        M0008900
      EQUIVALENCE (QNAMTB,LDXSIZ(27))                                   M0009000
C  QNUMTB:     DIMENSION OF ARRAY CNUMTB(OUTPUT)                        M0009010
      EQUIVALENCE (QNUMTB,LDXSIZ(28))                                   M0009020
C                                                                       M0009100
C        8.    CONTROL FLAGS AND POINTERS                               M0009200
C                                                                       M0009300
      INCLUDE 'LDSCOM.INC'                                              M0009419
C  ERROR:      FLAG SET IF ERROR IN PRODUCTION TABLE                    M0009700
C IBKPNT:      NAMTBL INDEX OF BRKPNT                                   M0009810
C  NUMEL:      NUMBER OF ELEMENTS IN ASSOC TABLE                        M0009900
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0010100
C  PDERR:      NAMTBL INDEX OF '28' = PROD. NOT FOUND                   M0010300
C                                                                       M0010500
C        9.    ITEM AND GROUP CONTROL                                   M0010600
C                                                                       M0010700
      INCLUDE 'ASSOC.INC'                                               M0010910
C                                                                       M0011000
C       11.    GEOMETRIC TABLE LOCATIONS                                M0011100
C                                                                       M0011200
C  GEOMLC:     START POSITION FOR A SRF TYPE IN THE GEOMETRIC TABLE     M0011300
      COMMON/GEOMLC/GEOMLC                                              M0011400
      DIMENSION GEOMLC(50)                                              M0011500
C                                                                       M0011600
C       12.    BIT OUTPUT PATTERNS                                      M0011700
C                                                                       M0011800
      COMMON/ELBIT/ELBIT                                                M0011900
      DIMENSION ELBIT(200)                                              M0012000
C                                                                       M0012100
C       13.    SPACE FOR PRODUCTION LISTS                               M0012200
C                                                                       M0012300
      INCLUDE 'PRODN.INC'                                               M0012410
C                                                                       M0012600
C       19.    BIT CONSTANTS                                            M0012700
C                                                                       M0012800
      INCLUDE 'ALLBTS.INC'                                              M0012910
C  Z9999:      SIGNALIZES START OF A SURFACE PRODUCTION SEQUENCE        M0013100
C  ZAAAA:      SIGNALIZES JUMP ADDRESSES IN THE PRODUCTION TABLE        M0013300
C  ZCCCC:      SIGNALIZES A PRODUCTION NUMBER IN THE TABLE              M0013500
C*                                                                      M0013700
C PURPOSE      TO CAUSE THE READING OF DATA TO BE LOADED INTO           M0013800
C              NAMTBL, AND THE GEOMETRIC PRODUCTION TABLES,             M0013900
C              AND TO PRODUCE FORTRAN BLOCK DATA PROGRAMS FOR           M0014000
C              VARIOUS PRESET POINTERS TO ITEMS IN NAMTBL,              M0014100
C              FOR THE LOADING OF NAMTBL, AND FOR THE LOADING           M0014200
C              OF THE GEOMETRIC TABLES.                                 M0014300
C                                                                       M0014400
C LOCAL                                INITIAL                          M0014500
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0014600
C                                                                       M0014700
C              I                  I            GENERAL                  M0014800
C              IAGMXY      250    I            FOR STORAGE OF ARGMXY    M0014900
C                                              TABLE                    M0015000
C              IPRMID     3*35    I            CORRESPONDENCE BETWEEN   M0015100
C                                              PERMID'S AND INTEGERS.   M0015200
C                                              SEE 7LDG FOR INITIAL     M0015300
C                                              VALUE                    M0015400
C              I200               C            CONTAINS 200 IN BCD      M0015500
C              J                  I            USED FOR PRODUCTION NO.  M0015700
C              K                  I            PARAMETER TO LOADI       M0015800
C              L                  I            USED IN DO LOOP          M0015900
C              L1                 I            USED IN DO LOOP          M0016000
C              M                  I            COUNTER FOR DECK NAME    M0016100
C                                              NUMBERS                  M0016200
C              N                  I            USED FOR NO. OF CHARS.   M0016300
C                                              IN CALL TO BCDBIN        M0016400
C                                                                       M0016430
C    CHARACTER FUNCTION TO CONVERT INTEGER TO HEXADECIMAL STRING        M0016440
      CHARACTER*8 HEX                                                   M0016450
C                                                                       M0016460
      DIMENSION IAGMXY(250)                                             M0016500
      CHARACTER*6 I200,TEMP,BKPNT                                       M0016510
      CHARACTER*6 CPRMID(35)                                            M0016690
      DIMENSION IPRMID(35)                                              M0016700
      DATA I200/'200'/,BKPNT/'BRKPNT'/                                  M0016750
      DATA CPRMID(1),IPRMID(1)/'XLARGE',1/,                             M0016800
     1     CPRMID(2),IPRMID(2)/'YLARGE',2/,                             M0016900
     2     CPRMID(3),IPRMID(3)/'ZLARGE',3/,                             M0017000
     3     CPRMID(4),IPRMID(4)/'XSMALL',4/,                             M0017100
     4     CPRMID(5),IPRMID(5)/'YSMALL',5/,                             M0017200
     5     CPRMID(6),IPRMID(6)/'ZSMALL',6/,                             M0017300
     6     CPRMID(7),IPRMID(7)/'XYPLAN',1/,                             M0017400
     7     CPRMID(8),IPRMID(8)/'YZPLAN',2/,                             M0017500
     8     CPRMID(9),IPRMID(9)/'ZXPLAN',3/                              M0017600
      DATA CPRMID(10),IPRMID(10)/'RIGHT', 1/,                           M0017700
     1     CPRMID(11),IPRMID(11)/'LEFT ', 2/,                           M0017800
     2     CPRMID(12),IPRMID(12)/'ATANGL',1/,                           M0017900
     3     CPRMID(13),IPRMID(13)/'SLOPE', 2/,                           M0018000
     4     CPRMID(14),IPRMID(14)/'LARGE', 1/,                           M0018100
     5     CPRMID(15),IPRMID(15)/'SMALL', 2/,                           M0018200
     6     CPRMID(16),IPRMID(16)/'IN   ', 1/,                           M0018300
     7     CPRMID(17),IPRMID(17)/'OUT  ', 2/,                           M0018400
     8     CPRMID(18),IPRMID(18)/'INTAN', 1/,                           M0018500
     9     CPRMID(19),IPRMID(19)/'OUTAN', 2/                            M0018600
      DATA CPRMID(20),IPRMID(20)/'POSX ', 1/,                           M0018700
     1     CPRMID(21),IPRMID(21)/'POSY ', 2/,                           M0018800
     2     CPRMID(22),IPRMID(22)/'POSZ ', 3/,                           M0018900
     3     CPRMID(23),IPRMID(23)/'NEGX ', 4/,                           M0019000
     4     CPRMID(24),IPRMID(24)/'NEGY ', 5/,                           M0019100
     5     CPRMID(25),IPRMID(25)/'NEGZ ', 6/,                           M0019200
     6     CPRMID(26),IPRMID(26)/'XYROT', 1/,                           M0019300
     7     CPRMID(27),IPRMID(27)/'YZROT', 2/,                           M0019400
     8     CPRMID(28),IPRMID(28)/'ZXROT', 3/,                           M0019500
     9     CPRMID(29),IPRMID(29)/'XAXIS', 1/                            M0019600
      DATA CPRMID(30),IPRMID(30)/'YAXIS', 2/,                           M0019700
     1     CPRMID(31),IPRMID(31)/'5PT  ', 1/,                           M0019800
     2     CPRMID(32),IPRMID(32)/'4PT1SL',2/,                           M0019900
     3     CPRMID(33),IPRMID(33)/'3PT2SL',3/,                           M0020000
     4     CPRMID(34),IPRMID(34)/'TANTO ',1/,                           M0020100
     5     CPRMID(35),IPRMID(35)/'PERPTO',2/                            M0020200
C**                                                                     M0020300
C...     CALL LOADN TO READ ITEMS INTO NAMTBL                           M0020400
C                                                                       M0020500
      CALL LOADN                                                        M0020600
      PDERR=NAME(I200)                                                  M0020700
      NAMTBL(PDERR)=DIGIT(1)                                            M0020710
      IBKPNT=NAME(BKPNT)                                                M0020720
      NAMTBL(IBKPNT)=99000                                              M0020730
      DO 300 I=1,QGEOML                                                 M0020800
  300 GEOMLC(I) = 0                                                     M0020900
      K=2                                                               M0021000
C                                                                       M0021100
C...     CALL LOADI TO READ GEOMETRY TABLES                             M0021200
C                                                                       M0021300
      CALL LOADI(K)                                                     M0021400
      IF(ERROR)RETURN                                                   M0021500
      CALL LOADT                                                        M0021600
      DO 301 I=1,QIAGMX                                                 M0021700
C                                                                       M0021800
C...     SET UP IAGMXY AS FOLLOWS - IAGMXY(K) = L                       M0021900
C...     WHERE   K = MODE OF GEOMETRIC MODIFIER                         M0022000
C...     AND     L = NAMTBL INDEX OF INTEGER ASSOCIATED WITH IT         M0022100
C                                                                       M0022200
  301 IAGMXY(I)=0                                                       M0022300
      DO 22  I=1,QIPRMI                                                 M0022400
      K = NAME(CPRMID(I))                                               M0022500
      IF (NAMTBL(K).EQ.0) GOTO 22                                       M0022600
      K = NAMTBL(K)-IDENT(1)                                            M0022700
      IF (K.GT.QIAGMX) CALL SPILL(10,'LOADG   ')                        M0022800
      IAGMXY(K) = IFIXST + IPRMID(I)                                    M0022900
   22 CONTINUE                                                          M0023000
C                                                                       M0023100
C...     PRODUCE LISTING OF NAMTBL LOADING AND BLOCK DATA PROGRAMS      M0023200
C...     TO SET UP NAMTBL.                                              M0023300
C                                                                       M0023400
      L=CHARST                                                          M0023500
      L1 = INAMST+100                                                   M0023600
C                                                                       M0023700
C...     WRITE HEADING FOR BLOCK DATA PROGRAM                           M0023800
C                                                                       M0023900
      WRITE(NTFILE,401) QNAMTB ,QNAMTB ,QNUMTB                          M0024000
  401 FORMAT(6X,17HBLOCK DATA BDNAME,57X/                               M0024100
     *35HC     BLOCK DATA PROGRAM FOR NAMETB,45X/                       M0024110
     16X,22HIMPLICIT INTEGER (A-Z),52X/                                 M0024120
     26X,65HCOMMON /NAMETB/ CHARST,CHARND,INAMST,INAMND,NAMEST,NAMMAX,IFM0024200
     3IXST, 9X/                                                         M0024300
     45X,29H/ IFIXND,NUMBST,NUMBND,NAMTBL,46X/                          M0024400
     56X,27HCOMMON/CNAMTB/CNAMTB,CNUMTB ,47X/                           M0024510
     66X,17HDIMENSION NAMTBL( ,I4,1H) ,52X/                             M0024540
     76X,19HCHARACTER*6 CNAMTB( ,I4,1H) ,50X/                           M0024550
     86X,20HCHARACTER*12 CNUMTB( ,I4,1H) ,49X)                          M0024560
      WRITE(NTFILE,500) CHARST,CHARND,INAMST,INAMND,NAMEST,NAMMAX,      M0024700
     1             IFIXST,IFIXND,NUMBST,NUMBND,QNAMTB,QNAMTB,QNUMTB     M0024800
  500 FORMAT(6X,47HDATA CHARST,CHARND,INAMST,INAMND,NAMEST,NAMMAX/,27X/ M0024900
     1       5X,1H1,5X,  I6,1H, I6,1H, I6,1H, I6,1H, I6,1H, I6,2H/,26X/ M0025000
     25X,1H2,5X,28HIFIXST,IFIXND,NUMBST,NUMBND/,41X/                    M0025100
     3       5X,1H3,5X,  I6,1H, I6,1H, I6,1H, I6,1H/,41X/               M0025200
     4       6X,12HDATA NAMTBL/,I5,3H*0/,54X/                           M0025300
     5       6X,12HDATA CNAMTB/,I5,5H*' '/,52X/                         M0025310
     6       6X,12HDATA CNUMTB/,I5,5H*' '/,52X)                         M0025320
      NAMTBL(IBKPNT)=0                                                  M0025330
   23 DO 50 I=L,L1                                                      M0025400
C                                                                       M0025500
C...     IS THIS CELL FILLED                                            M0025600
C                                                                       M0025700
      IF ((NAMTBL(I).EQ.0).OR.(NAMTBL(I).EQ.DIGIT(1).AND.I.GT.CHARND    M0025800
     1 )) GOTO 50                                                       M0025900
C                                                                       M0026000
C...     YES. OUTPUT TO LIST AND BLOCK DATA PROGRAM.                    M0026100
C                                                                       M0026200
C... CHECK FOR QUOTE                                                    M0026210
      IF (CNAMTB(I).EQ.'''') THEN                                       M0026220
        TEMP=''''''                                                     M0026230
        WRITE(NTFILE,4)CNAMTB(I),I,I,NAMTBL(I),TEMP                     M0026240
      ELSE                                                              M0026250
        WRITE(NTFILE,4)CNAMTB(I),I,I,NAMTBL(I),CNAMTB(I)                M0026300
      ENDIF                                                             M0026350
    4 FORMAT(28HC          NAMTBL ENTRY FOR ,A6,46X/                    M0026400
     *6X,12HDATA NAMTBL(,I4,12H),   CNAMTB(,I4,1H),41X/                 M0026510
     *5X,10H*        /,I5,10H   ,     ',A6,2H'/,42X)                    M0026610
   50 CONTINUE                                                          M0026700
C                                                                       M0026800
C...     HAVE WE REACHED NAMMAX YET                                     M0026900
C                                                                       M0027000
      IF (L1.LT.NAMMAX) GOTO 51                                         M0027100
C                                                                       M0027200
C...     YES. OUTPUT FIXED POINT AREA OF CNUMTB TO LIST AND B.D.PROGRAM M0027300
C                                                                       M0027400
      WRITE(NTFILE,52)                                                  M0027500
   52 FORMAT (42HC     CNUMTB ENTRIES FROM IFIXST TO IFIXND,38X)        M0027600
      DO 55 I=IFIXST,IFIXND                                             M0027700
      WRITE(NTFILE,54)I,CNUMTB(I)                                       M0027800
   54 FORMAT(6X,12HDATA CNUMTB(,I4,4H) /',A12,2H'/,40X)                 M0028030
   55 CONTINUE                                                          M0028200
   51 CONTINUE                                                          M0028300
C                                                                       M0028400
C...     END OF THIS PROGRAM. RETURN TO PRODUCE ANOTHER IF ALL OF       M0028500
C...     NAMTBL HAS NOT BEEN COVERED                                    M0028600
C                                                                       M0028700
    6 FORMAT (7X,3HEND,70X)                                             M0028800
      L=L1+1                                                            M0028900
      IF(L.GT.NAMMAX)GO TO 60                                           M0029000
      L1=L+99                                                           M0029100
      IF(L1.GT.NAMMAX)L1=NAMMAX                                         M0029200
      GO TO 23                                                          M0029300
   60 CONTINUE                                                          M0029400
      WRITE(NTFILE,6)                                                   M0029500
C                                                                       M0029600
C...     IF THERE WAS NO ERROR IN THE GEOMETRIC PRODUCTION TABLES       M0029700
C...     CALL LOADS TO ASSIGN BIT PATTERNS AND PRODUCE INTERNAL         M0029800
C...     GEOMETRIC PRODUCTION TABLES                                    M0029900
C                                                                       M0030000
      CALL LOADS                                                        M0030100
      QGEOMT=(IPROD+QGEOLO)/10*10                                       M0030200
      J=QGEOMT+QGEOLO+QPMIDT+QARGMX                                     M0030300
C                                                                       M0030400
C...     PRODUCE BLOCK DATA PROGRAMS TO SET UP GEOMETRY TABLES          M0030500
C                                                                       M0030600
      WRITE(GPFILE,3000)                                                M0030700
 3000 FORMAT(6X,17HBLOCK DATA BDGMTY,57X/1HC,79X/                       M0030800
     16X,22HIMPLICIT INTEGER (A-Z),52X/                                 M0030900
     26X,16HCOMMON/GMTY/GMTY,58X)                                       M0031000
      WRITE(GPFILE,3001) J,QGEOMT,QGEOLO,QPMIDT,QARGMX                  M0031200
 3001 FORMAT(6X,15HDIMENSION GMTY(I4, 9H),GEOMTB(,I4, 9H),GEOLOC(,I4,   M0031300
     1 9H),PMIDTB(,I4,2H),,14X/5X,10H1  ARGMXY(,I4,1H),60X)             M0031400
      I=QGEOLO+1                                                        M0031500
      II=QPMIDT+I                                                       M0031600
      JJ=QARGMX+II                                                      M0031700
      WRITE(GPFILE,3009)I,II,JJ                                         M0031800
 3009 FORMAT(6X,32HEQUIVALENCE (GEOLOC(1),GMTY(1)),,42X/                M0031900
     1       5X,29H1            (PMIDTB(1),GMTY(I3,3H)),,40X/           M0032000
     2       5X,29H2            (ARGMXY(1),GMTY(I3,3H)),,40X/           M0032100
     3       5X,29H3            (GEOMTB(1),GMTY(I3,3H)) ,40X)           M0032200
      WRITE(GPFILE,3010)QIAGMX                                          M0032400
 3010 FORMAT(1HC,79X/6X,12HDATA ARGMXY/,I3,3H*0/,56X)                   M0032500
C                                                                       M0032600
C...     ARGMXY CONTAINS NAMTBL POINTERS TO THE INTEGERS ASSOCIATED     M0032700
C...     WITH PERMANENT IDENTIFIERS                                     M0032800
C                                                                       M0032900
      DO 1 I=1,QIAGMX                                                   M0033000
      IF (IAGMXY(I).EQ.0)GOTO 1                                         M0033100
      WRITE(GPFILE,3050)I,IAGMXY(I)                                     M0033200
    1 CONTINUE                                                          M0033300
 3050 FORMAT (6X,12HDATA ARGMXY(,I3,2H)/,I4,1H/,52X)                    M0033400
C                                                                       M0033500
C...     PMIDTB CONTAINS THE INTERNAL REPRESENTATION OF IDENTIFIERS     M0033600
C...     AND GEOMETRICS. THE I.R. IS STORED IN THE CELL CORRESPONDING   M0033700
C...     TO THE MODE OF GEOMETRICS, THE MODE+25 OF IDENTIFIERS          M0033800
C...     USE ARRAY IAGMXY TO RECORD ENTRIES MADE IN PMIDTB.             M0033900
C                                                                       M0034000
      WRITE(GPFILE,3020)QPMIDT,ALLBTS(1)                                M0034100
 3020 FORMAT(33HC                     /Z7FFFFFFF/,47X/                  M0034200
     *       6X,12HDATA PMIDTB/,I3,1H*,I11,1H/,47X)                     M0034300
      DO 2 I=1,NUMEL                                                    M0034400
      K=ASSOC(1,I)                                                      M0034500
      L = MOD(NAMTBL(K),MODULO)                                         M0034600
      IF ((NAMTBL(K)-L).EQ.IDENT(1)) L=L+50                             M0034700
      IF(L.GT.QPMIDT) CALL SPILL(3,'LOADG   ')                          M0034800
    2 WRITE(GPFILE,3002)HEX(ELBIT(I)),L,ELBIT(I)                        M0034900
 3002 FORMAT(25HC                     / Z,A8,1H/,46X/                   M0035000
     *       6X,12HDATA PMIDTB(,I3,2H)/,I11,1H/,46X)                    M0035100
      DO 30 I=1,QGEOLO                                                  M0035200
      WRITE(GPFILE,3062) I                                              M0035300
 3062 FORMAT (1HC,10X,12HSURFACE TYPE,I2,55X)                           M0035400
C                                                                       M0035500
C...     GEOLOC CONTAINS FOR EACH SURFACE TYPE THE POSITION IN THE      M0035600
C...     GEOMTB TO START SEARCHING                                      M0035700
C                                                                       M0035800
   30 WRITE(GPFILE,3003)I,GEOMLC(I)                                     M0035900
 3003 FORMAT(6X,12HDATA GEOLOC(,I2,2H)/,I4,1H/,53X)                     M0036000
C                                                                       M0036100
C                                                                       M0036200
C...     WRITE DATA STATEMENTS TO PRODUCE GEOMETRIC TABLE               M0036300
C                                                                       M0036400
      L1=0                                                              M0036500
      DO 90 I=1,50                                                      M0036600
      IF(GEOMLC(I).EQ.0)GOTO 90                                         M0036700
      L1=L1+1                                                           M0036800
      GEOMLC(L1)=GEOMLC(I)                                              M0036900
   90 CONTINUE                                                          M0037000
      L1=L1+1                                                           M0037100
      GEOMLC(L1)=QPRODN                                                 M0037200
      CALL SORT(GEOMLC(1),1,L1,1,1)                                     M0037300
      JJ=0                                                              M0037400
      L1=1                                                              M0037500
      WRITE(GPFILE,3012)                                                M0037600
 3012 FORMAT(1HC,79X)                                                   M0037700
C                                                                       M0037800
      DO 100 I=1,IPROD                                                  M0037900
      JJ=JJ+1                                                           M0038000
C                                                                       M0038100
C...     IF NEXT ITEM IS NEGATIVE IT IS THE TERMINATOR OF THIS          M0038200
C...     PRODUCTION. IS IT NEGATIVE                                     M0038300
C                                                                       M0038400
      IF(JJ.LT.GEOMLC(L1))GOTO 502                                      M0038500
      K=4*(JJ-1)                                                        M0038600
      WRITE(GPFILE,3008)K,JJ,(Z9999+K)                                  M0038700
 3008 FORMAT(36HC                         /Z9999/ + ,I4,40X/            M0038800
     *       6X,12HDATA GEOMTB(,I6,3H) /I11,1H/,42X)                    M0038910
      JJ=JJ+1                                                           M0039000
      L1=L1+1                                                           M0039100
      IF(JJ.LT.GEOMLC(L1))GOTO 502                                      M0039200
      JJ=JJ-1                                                           M0039300
      GO TO 100                                                         M0039400
  502 IF(PRODN(I).LT.0)GOTO 98                                          M0039500
C                                                                       M0039600
C...     NO. WRITE DATA STATEMENT ASSIGNING BIT PATTERN                 M0039700
   97 WRITE(GPFILE,3004)HEX(PRODN(I)),JJ,PRODN(I)                       M0039800
 3004 FORMAT(29HC                         / Z,A8,1H/,42X/               M0039900
     *       6X,12HDATA GEOMTB(,I6,3H) /I11,1H/,42X)                    M0040000
      GO TO 100                                                         M0040100
C                                                                       M0040200
C...     THIS ITEM IS NEGATIVE, -(NO. OF PRODUCTION).                   M0040300
C...     FETCH BCD OF ITS MODULUS FROM THE NAMTBL AND WRITE             M0040400
C...     DATA STATEMENT FOR NEGATIVE INTEGER.                           M0040500
C                                                                       M0040600
   98 J=-PRODN(I)                                                       M0040700
      CALL BCDBIN(CNAMTB(J),K,M)                                        M0040800
      IF(K.GE.10000)GOTO 99                                             M0040900
      WRITE(GPFILE,3005)K,JJ,(ZCCCC+K)                                  M0041000
 3005 FORMAT(36HC                         /ZCCCC/ + ,I4,40X/            M0041100
     *       6X,12HDATA GEOMTB(,I6,3H) /I11,1H/,42X)                    M0041210
      GOTO 100                                                          M0041300
   99 K=K-10000                                                         M0041400
      WRITE(GPFILE,3006)K,JJ,(ZAAAA+K)                                  M0041500
 3006 FORMAT(36HC                         /ZAAAA/ + ,I4,40X/            M0041600
     *       6X,12HDATA GEOMTB(,I6,3H) /I11,1H/,42X)                    M0041710
  100 CONTINUE                                                          M0041800
C                                                                       M0041900
C...     BLOCK DATA PROGRAM IS NOW WRITTEN.                             M0042000
C...     WRITE END CARD AND RETURN.                                     M0042100
C                                                                       M0042200
      WRITE(GPFILE,3007)                                                M0042300
 3007 FORMAT(7X,3HEND,70X)                                              M0042400
      RETURN                                                            M0042500
       END                                                              M0042600
**** SOURCE FILE : M0006713.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADI                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADI(SWITCH)                                    M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    INPUT           SUBROUTINE    LOADB            M0000800
C          SUBROUTINE    SPILL           SUBROUTINE    LOADG            M0000900
C                                        SUBROUTINE    LOADP            M0001000
C                                        SUBROUTINE    LOADT            M0001100
C                                                                       M0001200
      SUBROUTINE LOADI(SWITCH)                                          M0001300
C                                                                       M0001400
      IMPLICIT INTEGER (A-Z)                                            M0001500
C                                                                       M0001600
C        1.    NAME TABLE AND TABLE LIMITS                              M0001700
C                                                                       M0001800
      INCLUDE 'NAMETB.INC'                                              M0001910
C  NAMTBL:INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY                M0002050
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002150
C                                                                       M0002300
C        2.    STACK AND POINTER STORAGE                                M0002400
C                                                                       M0002500
      COMMON/STKLST/STKLST                                              M0002600
      DIMENSION STKLST(3002),STACK(2,1500)                              M0002700
C  TOP:        POINTER TO LAST STACK ENTRY                              M0002800
      EQUIVALENCE (TOP,STKLST(1))                                       M0002900
C  MCTOP:      VALUE OF POSTN FOR MBKPNT                                M0003000
      EQUIVALENCE (MCTOP,STKLST(2))                                     M0003100
C  STACK:      WORKING STACK                                            M0003200
      EQUIVALENCE (STACK(1,1),STKLST(3))                                M0003300
C                                                                       M0003400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0003500
C                                                                       M0003600
      COMMON/CODES/CODES                                                M0003700
      DIMENSION CODES(150),RTERM(2),SLASH(2),DIGIT(2),IDENT(2),CONGEO(2 M0003800
     *          ),CONBIG(2)                                             M0003900
C  RTERM:      (1)=CODE CLASS  4000,(2)=NAMTBL INDEX OF 'RTERM '        M0004000
      EQUIVALENCE (RTERM(1),CODES(7))                                   M0004100
C  SLASH:      (1)=CODE CLASS  5000,(2)=NAMTBL INDEX OF '/     '        M0004200
      EQUIVALENCE (SLASH(1),CODES(9))                                   M0004300
C  DIGIT:      (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '        M0004400
      EQUIVALENCE (DIGIT(1),CODES(19))                                  M0004500
C  IDENT:      (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        M0004600
      EQUIVALENCE (IDENT(1),CODES(69))                                  M0004700
C  CONGEO:     (1)=CODE CLASS 39000,(2)=NAMTBL INDEX OF 'CONGEO'        M0004800
      EQUIVALENCE (CONGEO(1),CODES(77))                                 M0004900
C  CONBIG:     (1)=CODE CLASS 43000,(2)=NAMTBL INDEX OF 'CONBIG'        M0005000
      EQUIVALENCE (CONBIG(1),CODES(85))                                 M0005100
C                                                                       M0005200
C        5.    CLASS CODE MODULI                                        M0005300
C                                                                       M0005400
C  MODULO:     NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0005500
      COMMON/MODULI/MODULO                                              M0005600
C                                                                       M0005700
C        6.    SYMBOLIC FILE DEFINITIONS                                M0005800
C                                                                       M0005900
      COMMON/SYMFIL/SYMFIL                                              M0006000
      DIMENSION SYMFIL(6)                                               M0006100
C  ELFILE:     I/O FILE NUMBER OF TRANSFORMED PRODUCTION TABLE          M0006200
      EQUIVALENCE (ELFILE,SYMFIL(4))                                    M0006300
C  LCDATA:     INPUT FILE NUMBER OF PRODUCTION TABLES SEQUEN. MODE      M0006400
      EQUIVALENCE (LCDATA,SYMFIL(5))                                    M0006500
C  VLFILE:     VERIFICATION LISTING FILE                                M0006600
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0006700
C                                                                       M0006800
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0006900
C                                                                       M0007000
      COMMON/LDXSIZ/LDXSIZ                                              M0007100
      DIMENSION LDXSIZ(28)                                              M0007200
C  QASSOC:     DIMENSION OF ARRAY ASSOC                                 M0007300
      EQUIVALENCE (QASSOC,LDXSIZ(4))                                    M0007400
C  QGEOML:     DIMENSION OF ARRAY GEOMLC                                M0007500
      EQUIVALENCE (QGEOML,LDXSIZ(5))                                    M0007600
C  QLENGT:     DIMENSION OF ARRAY LENGTH                                M0007700
      EQUIVALENCE (QLENGT,LDXSIZ(6))                                    M0007800
C  QPRODN:     DIMENSION OF ARRAY PRODN                                 M0007900
      EQUIVALENCE (QPRODN,LDXSIZ(7))                                    M0008000
C  QWORK:      DIMENSION OF ARRAY WORK AND LEVPOS                       M0008100
      EQUIVALENCE (QWORK,LDXSIZ(9))                                     M0008200
C  QKDENT:     DIMENSION OF ARRAY KDENT                                 M0008300
      EQUIVALENCE (QKDENT,LDXSIZ(16))                                   M0008400
C                                                                       M0008500
C        8.    CONTROL FLAGS AND POINTERS                               M0008600
C                                                                       M0008700
      INCLUDE 'LDSCOM.INC'                                              M0008810
C  ERROR:      FLAG SET IF ERROR IN PRODUCTION TABLE                    M0009100
C  IBKPNT:     NAMTBL INDEX OF BRKPNT                                   M0009300
C  NUMEL:      NUMBER OF ELEMENTS IN ASSOC TABLE                        M0009500
C  PRODI:      POINTER TO LAST ENTRY IN PRODN TABLE                     M0009700
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0009900
C  BREAK:      VALUE OF POSTN FOR BRKPNT                                M0010100
C  PDERR:      NAMTBL INDEX OF '28' = PROD. NOT FOUND                   M0010300
C  NUMGP:      NUMBER OF GROUPS IN PRODUCTION TABLE                     M0010500
C  KNT:        NAMTBL INDEX OF ALL                                      M0010700
C                                                                       M0010900
C        9.    ITEM AND GROUP CONTROL                                   M0011000
C                                                                       M0011100
      INCLUDE 'ASSOC.INC'                                               M0011210
C                                                                       M0011400
C       10.    TABLE OF GROUPS AND NUMBER OF CONTAINED ELEMENTS         M0011500
C                                                                       M0011600
      COMMON/LENGTH/LENGTH                                              M0011700
      DIMENSION LENGTH(3,100)                                           M0011800
C                                                                       M0011900
C       11.    GEOMETRIC TABLE LOCATIONS                                M0012000
C                                                                       M0012100
C  GEOMLC:     START POSITION FOR A SRF TYPE IN THE GEOMETRIC TABLE     M0012200
      COMMON/GEOMLC/GEOMLC                                              M0012300
      DIMENSION GEOMLC(50)                                              M0012400
C                                                                       M0012500
C       13.    NAMTBL INDEXES OF THE PROD. TABLES IN SEQUENT. MODE      M0012600
C                                                                       M0012700
      INCLUDE 'PRODN.INC'                                               M0012810
C                                                                       M0013000
C       14.    LEVEL START OF THE PRODUCTIONS IN PRODR                  M0013100
C                                                                       M0013200
      COMMON/LEVPOS/LEVPOS                                              M0013300
      DIMENSION LEVPOS(12,250),WORK(2,100)                              M0013400
C  WORK        WORKING AREA FOR STORAGE OF ELEMENT IN ONE SET           M0013500
      EQUIVALENCE (WORK(1,1),LEVPOS(1,1))                               M0013600
C                                                                       M0013700
C       17.    OUTPUT SPACE FOR TRANSFORMED PRODUCTION LIST             M0013800
C                                                                       M0013900
      COMMON/OUTARY/OUTARY                                              M0014000
      CHARACTER*80 OUTARY                                               M0014100
C                                                                       M0014200
C       19.    BIT CONSTANTS                                            M0014300
C                                                                       M0014400
      INCLUDE 'ALLBTS.INC'                                              M0014510
C*                                                                      M0014700
C PURPOSE      TO READ A LIST OF EITHER BASIC OR GEOMETRIC              M0014800
C              PRODUCTIONS, PERFORM SOME FORMAT CHECKING                M0014900
C              AND ASSIGN GROUP NUMBERS.                                M0015000
C                                                                       M0015100
C ARGUMENTS    SWITCH = 1 IF BASIC PRODUCTION LIST                      M0015200
C                     = 2 IF GEOMETRIC PRODUCTION LIST                  M0015300
C                                                                       M0015400
C NOTES        LOGICAL VARIABLE ERROR IS SET.TRUE. IF AN ERROR          M0015500
C              IN FORMATTING HAS BEEN DETECTED.                         M0015600
C                                                                       M0015700
C LOCAL                                INITIAL                          M0015800
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0015900
C                                                                       M0016000
C              FINI               C            CONTAINS FINI ('FINI')   M0016100
C              ICOD               I            CLASS OR MODE OF THIS    M0016200
C                                              ITEM                     M0016300
C              IDIGIT             C            CONTAINS DIGIT ('DIGIT') M0016400
C              I                  I            FOR USE IN DO LOOPS      M0016500
C              INTCNT             I            GROUP NO. COUNT          M0016600
C              ITMP               I            NAMTBL INDEX OF THIS ITEMM0016700
C              J                  I            CLASS OF ITEM/GROUP NO.  M0016800
C              K                  I            MODE OF ITEM/GROUP NO.   M0016900
C              KDENT       200    I         0  NAMTBL POINTER FOR EACH  M0017000
C                                              MODE OF IDENT.           M0017100
C              L                  I            FOR USE IN DO LOOPS      M0017200
C              M                  I            NAMTBL INDEX OF NEXT     M0017300
C                                              (TERMINATING) CHARACTER  M0017400
C              M1                 I            TEMPORARY STORAGE OF     M0017500
C                                              ELEMENT IN LENGTH        M0017600
C              M2                 I            TEMPORARY STORAGE OF     M0017700
C                                              ELEMENT IN LENGTH        M0017800
C              N                  I            FOR USE IN DO LOOPS      M0017900
C              NUMBR              I            NO. OF ITEMS IN THIS SET M0018000
C              POSTN              I            POSITION IN PRODUCTION   M0018100
C                                              TABLES                   M0018200
C              SWITCH             I            ARGUMENT OF LOADI =1     M0018300
C                                              IF BASIC, =2 IF GEOM.    M0018400
C                                              PRODUCTION               M0018500
C                                                                       M0018600
      DIMENSION KDENT(200)                                              M0018700
      CHARACTER*6 IDIGIT,FINI,IBK*8                                     M0018710
      DATA IDIGIT/'DIGIT'/                                              M0018800
      DATA FINI/'FINI'/,IBK/' '/                                        M0018900
C**                                                                     M0019000
      DO 100 I=1,QKDENT                                                 M0019100
  100 KDENT(I)=0                                                        M0019200
      ERROR=.FALSE.                                                     M0019300
      OUTARY(1:8)=IBK                                                   M0019400
      NUMEL=0                                                           M0019600
      KNT = 0                                                           M0019700
      LL = 0                                                            M0019800
    1 INTCNT=0                                                          M0019900
      POSTN=0                                                           M0020000
      PRODI=0                                                           M0020100
C                                                                       M0020200
C...     UPDATE GROUP NUMBER COUNT                                      M0020300
C                                                                       M0020400
    2 INTCNT=INTCNT+1                                                   M0020500
C                                                                       M0020600
C...     UPDATE POSITION-IN-TABLE COUNT                                 M0020700
C                                                                       M0020800
    3 POSTN=POSTN+1                                                     M0020900
C                                                                       M0021000
C...     ZERO TOP AND NUMBR READY FOR NEW CARD                          M0021100
C                                                                       M0021200
    4 TOP=0                                                             M0021300
      NUMBR=0                                                           M0021400
C                                                                       M0021500
C...     FETCH NEXT ITEM AND ITS TERMINATOR                             M0021600
C                                                                       M0021700
    5 CALL INPUT                                                        M0021800
      CALL INPUT                                                        M0021900
      ITMP=STACK(1,TOP-1)                                               M0022000
C                                                                       M0022100
C...     IS IT FINI. IF SO THIS IS THE END OF THIS SET OF TABLES        M0022200
C                                                                       M0022300
      IF(CNAMTB(ITMP).EQ.FINI)GOTO 30                                   M0022410
  105 ICOD = NAMTBL(ITMP)                                               M0022600
      M=STACK(1,TOP)                                                    M0022700
      IF(CNAMTB(M).NE.FINI)GOTO 106                                     M0022810
C                                                                       M0023000
      WRITE(VLFILE,2055)CNAMTB(M)                                       M0023100
 2055 FORMAT(1H ,36HERROR NO. 7040 IN SUBROUTINE LOADI. ,A6   ,48H IS INM0023200
     * A WRONG POSITION. SEARCH FOR DOUPLE COMMA)                       M0023300
      GOTO 7                                                            M0023400
C                                                                       M0023500
C...     BRANCH ON SWITCH - TO 6 IF THESE ARE BASIC PRODUCTIONS,        M0023600
C...                        TO 9 IF THEY ARE GEOMETRIC ONES.            M0023700
C                                                                       M0023800
  106 GO TO(6,9),SWITCH                                                 M0023900
C                                                                       M0024000
C...     IF CLASS AND MODE ARE BOTH ZERO, THIS CANNOT BE A META-CLASS,  M0024100
C...     SO SET ERROR FLAG AND GIVE DIAGNOSTIC                          M0024200
C                                                                       M0024300
    6 IF(ICOD.NE.0)GO TO 8                                              M0024400
      WRITE(VLFILE,2001)CNAMTB(M)                                       M0024500
 2001 FORMAT(1H ,36HERROR NO. 7011 IN SUBROUTINE LOADI. ,A6   ,46H IS NOM0024600
     *T A META-LINGUISTIC CLASS, CARD IGNORED.)                         M0024700
    7 ERROR=.TRUE.                                                      M0024800
      IF(SWITCH.EQ.2)GOTO 37                                            M0024900
      GO TO 4                                                           M0025000
C                                                                       M0025100
C...     ITEM IS AN IDENTIFIER. SHOULD HAVE NON-ZERO MODE - OTHERWISE   M0025200
C...     ISSUE DIAGNOSTIC                                               M0025300
C                                                                       M0025400
  201 K=ICOD-J                                                          M0025500
      IF (K.GT.QKDENT) GOTO 209                                         M0025600
      IF(K.EQ.0)GO TO 5004                                              M0025700
C                                                                       M0025800
C...     HAS AN IDENTIFIER OF THIS MODE APPEARED PREVIOUSLY             M0025900
C                                                                       M0026000
      IF(KDENT(K).NE.0)GO TO 5001                                       M0026100
C                                                                       M0026200
C...     NO. STORE ITS NAMTBL POINTER IN KDENT, AND CONTINUE PROCESSING M0026300
C                                                                       M0026400
      GOTO 220                                                          M0026500
  209 WRITE (VLFILE,210) CNAMTB(M), ICOD                                M0026600
  210 FORMAT(74H0ERROR NO. 7038 THE SIZE OF THE KDENT ARRAY IN LOADI MUSM0026700
     1T BE EXPANDED. ***/101H KDENT CONTAINS POINTERS TO THE NAMTBL ENTRM0026800
     2IES OF IDENTIFIERS USED IN BASIC OR GEOMETRIC PRODUCTIONS./57H THEM0026900
     3 IDENTIFIER THAT CAUSED THE LIMITS TO BE EXCEEDED IS , A6,20H WHOSM0027000
     4E CLASS-MODE = ,I5)                                               M0027100
      STOP                                                              M0027200
  220 KDENT(K) = ITMP                                                   M0027300
      GO TO 12                                                          M0027400
C                                                                       M0027500
C...     YES. SET ITMP TO CONTENTS OF KDENT AND EXAMINE WORK TO SEE     M0027600
C...     IF AN IDENTIFIER OF THIS MODE HAS ALREADY APPEARED IN THIS SET M0027700
C...     IF ONE HAS, SKIP EXAMINATION OF ASSOC AND CONTINUE PROCESSING. M0027800
C                                                                       M0027900
 5001 ITMP=KDENT(K)                                                     M0028000
      IF(NUMBR.EQ.0)GO TO 12                                            M0028100
      DO 5002 L=1,NUMBR                                                 M0028200
      IF(WORK(1,L).EQ.ITMP)GO TO 5003                                   M0028300
 5002 CONTINUE                                                          M0028400
      GO TO 12                                                          M0028500
C                                                                       M0028600
C...     IS ITEM BRKPNT                                                 M0028700
C                                                                       M0028800
    8 IF(IBKPNT.EQ.ITMP)GO TO 25                                        M0028900
C                                                                       M0029000
C...     NO. IS IT ALL                                                  M0029100
C                                                                       M0029200
      IF (NAMTBL(ITMP).NE.9999000) GOTO 11                              M0029300
C                                                                       M0029400
C...     YES. IS THERE ANYTHING ELSE ON THE CARD                        M0029500
C                                                                       M0029600
      IF (NUMBR.EQ.0) GO TO 202                                         M0029700
C                                                                       M0029800
C...     YES. OUTPUT DIAGNOSTIC.                                        M0029900
C                                                                       M0030000
      WRITE(VLFILE,3001)                                                M0030100
 3001 FORMAT (1H ,63HERROR NO. 7013 IN SUBROUTINE LOADI.  ALL DOES NOT AM0030200
     *PPEAR ALONE.)                                                     M0030300
       GO TO 7                                                          M0030400
C                                                                       M0030500
C...     CARD CONTAINS ALL                                              M0030600
C                                                                       M0030700
  202 KNT  = ITMP                                                       M0030800
      GO TO 18                                                          M0030900
C                                                                       M0031000
C...     GEOMETRIC PROCESSING                                           M0031100
C                                                                       M0031200
    9 J = MODULO*(ICOD/MODULO)                                          M0031300
C                                                                       M0031400
C...     IS ITEM AN IDENTIFIER                                          M0031500
C                                                                       M0031600
      IF (J.EQ.IDENT(1)) GO TO 201                                      M0031700
C                                                                       M0031800
C...     NO. IS IT A CONDITIONAL GEOMETRIC OR LARGE GEOMETRIC           M0031900
C                                                                       M0032000
      IF (J .NE. CONGEO(1) .AND. J .NE. CONBIG(1))  GO TO 10            M0032100
C                                                                       M0032200
C...     YES. IS NEXT ITEM /                                            M0032300
C                                                                       M0032400
      IF (NAMTBL(M).EQ.SLASH(1)) GOTO 26                                M0032500
C                                                                       M0032600
C...     NO.                                                            M0032700
C                                                                       M0032800
      GO TO 12                                                          M0032900
C                                                                       M0033000
C...     IS ITEM A NUMBER                                               M0033100
C                                                                       M0033200
   10 IF(J.EQ.DIGIT(1))GO TO 24                                         M0033300
C                                                                       M0033400
C...     NO. IT IS NEITHER IDENT,NOR CONGEO,NOR CONBIG,NOR NUMBER.      M0033500
C...     OUTPUT DIAGNOSTIC                                              M0033600
C                                                                       M0033700
 5004 WRITE(VLFILE,2002) CNAMTB(ITMP),NAMTBL(ITMP)                      M0033800
 2002 FORMAT(1H ,36HERROR NO. 7012 IN SUBROUTINE LOADI. ,A6,   10H OF CLM0033900
     *ASS ,I6,48H IS NOT A VALID GEOM. FORMAT NAME. CARD IGNORED.)      M0034000
      GO TO 7                                                           M0034100
C                                                                       M0034200
C...     ITEM IS NOT BRKPNT OR ALL. IS IT A NUMBER.                     M0034300
C                                                                       M0034400
   11 IF((ICOD.EQ.DIGIT(1)).AND.(CNAMTB(ITMP).NE.IDIGIT))GOTO 24        M0034510
C                                                                       M0034700
C...     UPDATE NO. OF ITEMS ON CARD AND TEST IF THIS EXCEEDS LIMIT     M0034800
C                                                                       M0034900
   12 NUMBR=NUMBR+1                                                     M0035000
      IF (NUMBR.GT.QWORK) CALL SPILL(9,'LOADI   ')                      M0035100
      GO TO 14                                                          M0035200
C                                                                       M0035300
C...     TOO MANY ITEMS FOR TABLE - OUTPUT DIAGNOSTIC                   M0035400
C                                                                       M0035500
   13 WRITE(VLFILE,2003)                                                M0035600
 2003 FORMAT(1H ,66HERROR NO. 7014 IN SUBROUTINE LOADI. LOAD TABLE FULL.M0035700
     * CARD IGNORED.)                                                   M0035800
      GO TO 7                                                           M0035900
C                                                                       M0036000
C...     STORE NAMTBL POINTER TO ITEM IN FIRST COLUMN OF WORK           M0036100
C                                                                       M0036200
   14 WORK(1,NUMBR)=ITMP                                                M0036300
C                                                                       M0036400
C...     IF THIS IS NOT THE FIRST ITEM, SEARCH ASSOC TO SEE IF THIS     M0036500
C...     ITEM HAS BEEN USED PREVIOUSLY.                                 M0036600
C                                                                       M0036700
      IF(NUMEL.EQ.0)GO TO 16                                            M0036800
      DO 15 I=1,NUMEL                                                   M0036900
      IF(ITMP.EQ.ASSOC(1,I))GO TO 17                                    M0037000
   15 CONTINUE                                                          M0037100
C                                                                       M0037200
C...     THIS IS ITS FIRST APPEARENCE. STORE NAMTBL POINTER AND INTCNT  M0037300
C...     IN ASSOC, AND INTCNT IN SECOND COLUMN OF WORK                  M0037400
C                                                                       M0037500
   16 NUMEL=NUMEL+1                                                     M0037600
C                                                                       M0037700
C...     IS TABLE FULL                                                  M0037800
C                                                                       M0037900
      IF (NUMEL.GT.QASSOC) CALL SPILL(4,'LOADI   ')                     M0038000
C                                                                       M0038100
C...     NO.                                                            M0038200
C                                                                       M0038300
      ASSOC(1,NUMEL)=ITMP                                               M0038400
      ASSOC(2,NUMEL)=INTCNT                                             M0038500
      ASSOC(3,NUMEL)=ITMP                                               M0038600
      WORK(2,NUMBR)=INTCNT                                              M0038700
      L=MOD(NAMTBL(ITMP),MODULO)                                        M0038800
      IF((NAMTBL(ITMP)-L).EQ.IDENT(1))L=L+50                            M0038900
      GO TO 18                                                          M0039000
C                                                                       M0039100
C...     ITEM HAS BEEN USED BEFORE - STORE VALUE ALREADY ASSIGNED IN    M0039200
C...     ASSOC IN SECOND COLUMN OF WORK                                 M0039300
C                                                                       M0039400
   17 WORK(2,NUMBR)=ASSOC(2,I)                                          M0039500
      IF(NUMBR.GT.1)ASSOC(3,I)=0                                        M0039600
C                                                                       M0039700
C...     UPDATE PRODUCTION TABLE POINTER AND CHECK IF IT EXCEEDS LIMIT  M0039800
C                                                                       M0039900
   18 PRODI=PRODI+1                                                     M0040000
      IF (PRODI.GT.QPRODN) CALL SPILL(7,'LOADI   ')                     M0040100
C                                                                       M0040200
C...     NO. STORE NAMTBL POINTER IN NEXT CELL OF PRODN                 M0040300
C                                                                       M0040400
      PRODN(PRODI)=ITMP                                                 M0040500
C                                                                       M0040600
C...     IF TERMINATING CHARACTER IS NOT RTERM, RETURN FOR NEXT ITEM    M0040700
C                                                                       M0040800
 5003 IF (NAMTBL(M).NE.RTERM(1)) GOTO 5                                 M0040900
C                                                                       M0041000
C...     THIS WAS LAST ITEM OF SET - PUT IT IN PRODN NEGATIVELY         M0041100
C                                                                       M0041200
      PRODN(PRODI)=-PRODN(PRODI)                                        M0041300
C                                                                       M0041400
C...     IF THIS WAS ONLY ITEM IN SET GO BACK FOR NEXT CARD             M0041500
C                                                                       M0041600
      IF(NUMBR.EQ.0)GO TO 3                                             M0041700
      K=INTCNT                                                          M0041800
      J=INTCNT                                                          M0041900
C                                                                       M0042000
C...     THIS LOOP SETS THE SECOND COLUMN OF ASSOC TO THE SAME VALUE    M0042100
C...     FOR ALL ALTERNATIVES IN THIS SET, AND FOR ALL ITEMS WHICH ARE  M0042200
C...     ALTERNATIVES IN ANY OTHER SET TO AN ITEM IN THIS SET.          M0042300
C                                                                       M0042400
      DO 23 L=1,NUMBR                                                   M0042500
      IF(WORK(2,L)-K)19,23,20                                           M0042600
C                                                                       M0042700
C...     J IS THE GROUP NO. OF THIS ITEM IF IT IS LESS THAN K           M0042800
C                                                                       M0042900
   19 J=WORK(2,L)                                                       M0043000
      GO TO 21                                                          M0043100
C                                                                       M0043200
C...     K IS THE MAXIMUM GROUP NO. SO FAR ENCOUNTERED IN THIS SET      M0043300
C                                                                       M0043400
   20 K=WORK(2,L)                                                       M0043500
   21 DO 22 N=1,NUMEL                                                   M0043600
C                                                                       M0043700
C...     TEST FOR ANY ITEMS IN ASSOC WITH GROUP NO. EQUAL TO MAX. SO    M0043800
C...     FAR IN THIS SET, AND CHANGE THEM TO MINIMUM SO FAR IN THIS SET M0043900
C                                                                       M0044000
      IF(ASSOC(2,N).EQ.K)ASSOC(2,N)=J                                   M0044100
   22 CONTINUE                                                          M0044200
C                                                                       M0044300
C...     SET K TO THE MINIMUM GROUP NO. IN THIS SET                     M0044400
C                                                                       M0044500
   23 K=J                                                               M0044600
C                                                                       M0044700
C...     ON EXIT ALL ITEMS HAVE GROUP NO. K, THE LOWEST POSSIBLE.       M0044800
C...     IF THIS IS GREATER THAN THE CURRENT MAX. VALUE - DIAGNOSTIC,   M0044900
C...     IF IT IS EQUAL TO THE CURRENT MAXIMUM - UPDATE MAXIMUM AND     M0045000
C...     FETCH NEXT CARD,                                               M0045100
C...     IF IT IS LESS THAN CURRENT MAXIMUM - FETCH NEXT CARD.          M0045200
C                                                                       M0045300
      IF(K-INTCNT) 3,2,13                                               M0045400
C                                                                       M0045500
C...     NUMBER - SHOULD BE ONLY ITEM ON CARD                           M0045600
C                                                                       M0045700
   24 IF ((NUMBR.EQ.0).AND.(NAMTBL(M).EQ.RTERM(1))) GOTO 18             M0045800
C                                                                       M0045900
C...     IT IS NOT - SO DIAGNOSTIC                                      M0046000
C                                                                       M0046100
      WRITE(VLFILE,2004) CNAMTB(ITMP)                                   M0046200
 2004 FORMAT(1H ,36HERROR NO. 7015 IN SUBROUTINE LOADI. ,A6   ,37H APPEAM0046300
     *RS INCORRECTLY IN A PRODUCTION.)                                  M0046400
      GO TO 7                                                           M0046500
C                                                                       M0046600
C...     BREAK-POINT. STORE ITS POSITION. SHOULD BE ONLY ITEM ON CARD.  M0046700
C                                                                       M0046800
   25 BREAK=MCTOP                                                       M0046900
      MCTOP=POSTN                                                       M0047000
      IPROD=PRODI+1                                                     M0047100
      IF ((NUMBR.EQ.0).AND.(NAMTBL(M).EQ.RTERM(1))) GOTO 4              M0047200
      WRITE(VLFILE,2005)                                                M0047300
 2005 FORMAT(1H ,79HERROR NO. 7016 IN SUBROUTINE LOADI. BREAKPOINT INDICM0047400
     *ATOR DOES NOT APPEAR ALONE.)                                      M0047500
      GO TO 7                                                           M0047600
C                                                                       M0047700
C...     CONGEO OR CONBIG FOLLOWED BY /. SHOULD BE FIRST AND ONLY       M0047800
C...     APPEARANCE FOR THIS MODE. TEST GEOMLC TO FIND OUT.             M0047900
C                                                                       M0048000
   26 L=ICOD-J                                                          M0048100
      IF (L.GT.QGEOML) CALL SPILL(5,'LOADI   ')                         M0048200
      IF(LL.GT.0)GO TO 27                                               M0048300
      IF(GEOMLC(L).EQ.0)GO TO 27                                        M0048400
C                                                                       M0048500
C...     GEOMLC(MODE) IS NON-ZERO - I.E. THIS SURFACE TYPE HAS ALREADY  M0048600
C...     BEEN USED. ISSUE DIAGNOSTIC.                                   M0048700
C                                                                       M0048800
      WRITE(VLFILE,2006) CNAMTB(ITMP)                                   M0048900
 2006 FORMAT (1H ,60HERROR NO. 7017 IN SUBROUTINE LOADI. TWO SETS OF FORM0049000
     *MATS FOR ,A6)                                                     M0049100
      GO TO 7                                                           M0049200
C                                                                       M0049300
C...     CONGEO OR CONBIG SHOULD BE ALONE.3CHECK IT.                    M0049400
C                                                                       M0049500
   27 IF( NUMBR.EQ.0)GO TO 28                                           M0049600
C                                                                       M0049700
C...     NO.                                                            M0049800
C                                                                       M0049900
      WRITE(VLFILE,2007) CNAMTB(ITMP)                                   M0050000
 2007 FORMAT(1H ,36HERROR NO. 7018 IN SUBROUTINE LOADI. ,A6   ,41H FORMAM0050100
     *T IDENTIFIER DOES NOT APPEAR ALONE.)                              M0050200
      GO TO 7                                                           M0050300
C                                                                       M0050400
C...     SKIP ITEMS UNTIL RTERM IS REACHED                              M0050500
C                                                                       M0050600
   28 CALL INPUT                                                        M0050700
      K=STACK(1,TOP)                                                    M0050800
      IF (NAMTBL(K).NE.RTERM(1)) GOTO 28                                M0050900
C                                                                       M0051000
C...     IS THIS FIRST PRODUCTION                                       M0051100
C                                                                       M0051200
      IF(PRODI.EQ.0)GO TO 29                                            M0051300
C                                                                       M0051400
C...     NO. UPDATE PRODUCTION TABLE POINTER, STORE MARER IN PRODUCTION M0051500
C...     TABLE, AND POSITION IN GEOMLC. THEN RETURN FOR NEXT CARD.      M0051600
C                                                                       M0051700
      IF(ELFILE.EQ.LCDATA)GOTO 39                                       M0051800
      PRODI=PRODI+1                                                     M0051900
      PRODN(PRODI)=-PDERR                                               M0052000
   39 IF(NAMTBL(IBKPNT).NE.CONGEO(1))GOTO 38                            M0052100
      GEOMLC(L)=POSTN+1                                                 M0052200
      GO TO 3                                                           M0052300
   38 LL=LL+1                                                           M0052400
      GEOMLC(LL)=ITMP                                                   M0052500
      IF(LL.EQ.1)GOTO 4                                                 M0052600
      GO TO 3                                                           M0052700
C                                                                       M0052800
C...     FIRST PRODUCTION. SET GEOMLC(1).                               M0052900
C                                                                       M0053000
   29 IF(NAMTBL(IBKPNT).NE.CONGEO(1))GOTO 38                            M0053100
      GEOMLC(L)=1                                                       M0053200
      GO TO 4                                                           M0053300
C                                                                       M0053400
C...     FINI REACHED. SHOULD BE ALONE - IF NOT ISSUE DIAGNOSTIC        M0053500
C...     BUT ACCEPT FINI AS VALID                                       M0053600
C                                                                       M0053700
   30 IF ((NUMBR.EQ.0).AND.(NAMTBL(M).EQ.RTERM(1))) GOTO 31             M0053800
      WRITE(VLFILE,2008)                                                M0053900
 2008 FORMAT(1H ,89HERROR NO. 7019 IN SUBROUTINE LOADI. PRODUCTION LIST M0054000
     * TERMINATOR INCORRECT. ERROR IGNORED.)                            M0054100
C                                                                       M0054200
C...     SET MARKER IN PRODN AND DECREASE GROUP NO. BY ONE              M0054300
C                                                                       M0054400
   31 IF(ELFILE.EQ.LCDATA)GOTO 40                                       M0054500
      PRODI=PRODI+1                                                     M0054600
      PRODN(PRODI)=-PDERR                                               M0054700
   40 INTCNT=INTCNT-1                                                   M0054800
C                                                                       M0054900
C...     CLEAR LENGTH                                                   M0055000
C                                                                       M0055100
      DO 36 I=1,QLENGT                                                  M0055200
      LENGTH(1,I) = 0                                                   M0055300
   36 LENGTH(2,I) = 0                                                   M0055400
      NUMGP=0                                                           M0055500
C                                                                       M0055600
C...     THIS LOOP SETS UP THE ARRAY LENGTH SO THAT COL.1 CONTAINS THE  M0055700
C...     SET NUMBERS, COL.2 THE NO. OF ITEMS IN THAT SET.               M0055800
C...     IT IS ARRANGED IN DESCENDING  ORDER OF MAGNITUDE IN COL.2      M0055900
C                                                                       M0056000
      DO 35 I=1,INTCNT                                                  M0056100
      I1=I                                                              M0056200
C                                                                       M0056300
C...     COUNT NO. OF ITEMS IN ASSOC WITH GROUP NO. I                   M0056400
C                                                                       M0056500
      K=0                                                               M0056600
      DO 32 L=1,NUMEL                                                   M0056700
      IF(ASSOC(2,L).EQ.I)K=K+1                                          M0056800
   32 CONTINUE                                                          M0056900
      IF(K.EQ.0)GO TO 35                                                M0057000
      NUMGP=NUMGP+1                                                     M0057100
C                                                                       M0057200
C...     TEST VALID NO. OF GROUPS. IF TOO LARGE ISSUE DIAGNOSTIC.       M0057300
C                                                                       M0057400
      IF(NUMGP.GT.QLENGT)GO TO 13                                       M0057500
C                                                                       M0057600
C...     SET L TO THE POSITION IN LENGTH WHERE THE FIRST GROUP WITH     M0057700
C...     LESS MEMBERS THAN THIS ONE OCCURS.                             M0057800
C                                                                       M0057900
      DO 33 L=1,NUMGP                                                   M0058000
      IF(K.GT.LENGTH(2,L))GO TO 34                                      M0058100
   33 CONTINUE                                                          M0058200
      L=NUMGP                                                           M0058300
C                                                                       M0058400
C...     STORE GROUP NO. AND NUMBER OF ELENTS IN GROUP AT THIS POINT    M0058500
C...     IN LENGTH, AND MOVE DOWN SUBSEQUENT ENTRIES.                   M0058600
C                                                                       M0058700
   34 M1=LENGTH(1,L)                                                    M0058800
      M2=LENGTH(2,L)                                                    M0058900
      LENGTH(1,L)=I1                                                    M0059000
      LENGTH(2,L)=K                                                     M0059100
      IF(L.EQ.NUMGP)GO TO 35                                            M0059200
      I1=M1                                                             M0059300
      K=M2                                                              M0059400
      L=L+1                                                             M0059500
      GO TO 34                                                          M0059600
   35 CONTINUE                                                          M0059700
C                                                                       M0059800
C...     IF BASIC PRODUCTION PROCESSING AND ALL APPEARED AT LEAST       M0059900
C...     ONCE - SET SECOND COL. OF NAMTBL ENTRY FOR ALL TO ALL BITS SET M0060000
C     ***************************************************************** M0060100
      IF((SWITCH.NE.1).OR.(KNT.EQ.0))GOTO 37                            M0060200
      CNAMTB(KNT)='******'                                              M0060300
   37 RETURN                                                            M0060500
       END                                                              M0060600
**** SOURCE FILE : M0006714.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADM                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADM                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          INTEGER FCT.  NAME                          MAIN             M0000800
C          SUBROUTINE    SPILL                                          M0000900
C                                                                       M0001000
      SUBROUTINE LOADM                                                  M0001100
C                                                                       M0001200
      IMPLICIT INTEGER (A-Z)                                            M0001300
C                                                                       M0001400
C        1.    NAME TABLE AND TABLE LIMITS                              M0001500
C                                                                       M0001600
      INCLUDE 'NAMETB.INC'                                              M0001710
C  CHARST:     BEGINNING OF BASIC CHARACTER SECTION OF NAMTBL           M0001900
C  CHARND:     END OF BASIC CHARACTER SECTION OF NAMTBL                 M0002100
C  NAMEST:     NAMTBL INDEX OF BEGIN OF THE PART PROGRAM NAME  SECTION  M0002300
C  NAMMAX:     NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0002500
C  NAMTBL:     NAME TABLE OR DICTIONARY                                 M0002700
C                                                                       M0002900
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0003000
C                                                                       M0003100
      COMMON/CODES/CODES                                                M0003200
C  CODES:      SPACE FOR ALL CLASS CODES                                M0003300
      DIMENSION CODES(150)                                              M0003400
C                                                                       M0003500
C        6.    SYMBOLIC FILE DEFINITIONS                                M0003600
C                                                                       M0003700
      COMMON/SYMFIL/SYMFIL                                              M0003800
      DIMENSION SYMFIL(6)                                               M0003900
C  BPFILE:     BLOCK DATA OUTPUT OF CODE TABLE AND BASIC PRODUCTIONS    M0004000
      EQUIVALENCE (BPFILE,SYMFIL(1))                                    M0004100
C  LCDATA:     INPUT FILE NUMBER OF PRODUCTION TABLES SEQUEN. MODE      M0004200
      EQUIVALENCE (LCDATA,SYMFIL(5))                                    M0004300
C  VLFILE:     VERIFICATION LISTING FILE                                M0004400
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0004500
C                                                                       M0004600
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0004700
C                                                                       M0004800
      COMMON/LDXSIZ/LDXSIZ                                              M0004900
      DIMENSION LDXSIZ(28)                                              M0005000
C  QCODE:      DIMENSION OF ARRAY CODE                                  M0005100
      EQUIVALENCE (QCODE,LDXSIZ(1))                                     M0005200
C  QCLSWD:     DIMENSION OF ARRAY CLSWRD                                M0005300
      EQUIVALENCE (QCLSWD,LDXSIZ(14))                                   M0005400
C                                                                       M0005500
C        8.    CONTROL FLAGS AND POINTERS                               M0005600
C                                                                       M0005700
      INCLUDE 'LDSCOM.INC'                                              M0005810
C  ERROR:      FLAG SET IF ERROR IN PRODUCTION TABLE                    M0006100
C                                                                       M0006400
C       16.    RELATION OF ORDINAL NUMBERS TO NAMTBL INDEXES            M0006500
C                                                                       M0006600
      COMMON/CLSWRD/CLSWRD                                              M0006700
      DIMENSION CLSWRD(100)                                             M0006800
C                                                                       M0006900
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION            M0007000
C                                                                       M0007100
      COMMON/BRANCH/BRANCH                                              M0007200
      DIMENSION BRANCH(515)                                             M0007300
C  MAXCLS:     NUMBER OF DEFINITIONS IN A TRANSFORMATION SECTIION       M0007400
      EQUIVALENCE (MAXCLS,BRANCH(6))                                    M0007500
C*                                                                      M0007600
C PURPOSE      TO READ THE META-LINQUISTIC CLASSES AND TO               M0007700
C              PRODUCE A BLOCK DATA PROGRAM FOR THEM.                   M0007800
      CHARACTER*6 I                                                     M0007900
C LOCAL                                INITIAL                          M0008000
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0008100
C                                                                       M0008200
C              I                  C            META-NAME                M0008300
C              J                  I            CLASS                    M0008400
C              JJ                 I            CODE SUBSCRIPT           M0008500
C              JJJ                I            CODE SUBSCRIP (JJ+1)     M0008600
C              K                  I            NAMTBL POINTER           M0008700
C              L                  I            NAMTBL INDEX OF J        M0008800
C**                                                                     M0008900
C                                                                       M0009000
C...     WRITE HEADING FOR BLOCK DATA PROGRAM                           M0009100
C                                                                       M0009200
      WRITE(VLFILE,17)                                                  M0009300
   17 FORMAT(1H1,5X,35HCODES TABLE LOADING OF META CLASSES/4X,5HENTRY,5XM0009400
     /,4HCODE)                                                          M0009500
      WRITE(BPFILE,1) QCODE                                             M0009600
    1 FORMAT(6X,17HBLOCK DATA BDCODE,57X/                               M0009700
     16X,22HIMPLICIT INTEGER (A-Z),52X/                                 M0009800
     26X,16HCOMMON/CODE/CODE,58X/                                       M0009900
     36X,15HDIMENSION CODE(I4, 1H),54X)                                 M0010000
C                                                                       M0010100
C...     INITIALIZE SUBSCRIPTS FOR BLOCK DATA                           M0010200
C                                                                       M0010300
      JJ = 1                                                            M0010400
      JJJ = 2                                                           M0010500
C                                                                       M0010600
C...     CLEAR NAMTBL                                                   M0010700
C                                                                       M0010800
      DO 7 K = NAMEST,NAMMAX                                            M0010900
    7 NAMTBL(K) = 0                                                     M0011000
      II=0                                                              M0011100
      DO 27 K=1,QCLSWD                                                  M0011200
   27 CLSWRD(K)=0                                                       M0011300
C                                                                       M0011400
C...     READ NEXT CARD - I = META-NAME                                 M0011500
C...                      J = ITS CLASS                                 M0011600
C                                                                       M0011700
    2 READ(LCDATA,3)I,J,IPRIOR                                          M0011800
    3 FORMAT(A6,7X,I6,5X,I3)                                            M0011900
C                                                                       M0012000
C...     LIST IT                                                        M0012100
C                                                                       M0012200
      WRITE(VLFILE,13)I,J,IPRIOR                                        M0012300
   13 FORMAT(1X,A6,7X,I6,5X,I3)                                         M0012400
C                                                                       M0012500
C...     THIS SET OF CARDS IS TERMINATED BY A NEGATIVE NUMBER IN        M0012600
C...     THE CLASS FIELD. IS J NEGATIVE                                 M0012700
C                                                                       M0012800
      IF (J.LT.0) GO TO 5                                               M0012900
C                                                                       M0013000
C...     NO. PUT META-NAME IN NAMTBL WITH CORRECT CLASS,                M0013100
C...     AND PUT CLASS INTO ARRAY CODE.                                 M0013200
C                                                                       M0013300
      K = NAME(I)                                                       M0013400
      NAMTBL(K) = J                                                     M0013500
      IF (JJ.GT.QCODE) CALL SPILL(1,'LOADM   ')                         M0013600
   12 CODES(JJ) = J                                                     M0013700
C                                                                       M0013800
C...     IS THERE A CHARACTER IN CHARACTER PART OF NAMTBL WITH THIS     M0013900
C...     CLASS. IF THERE IS, STORE THE INDEX OF THE FIRST SUCH          M0014000
C...     CHARACTER IN CODE, IF NOT STORE INDEX OF LAST ITEM IN THE      M0014100
C...     CHARACTER PORTION.                                             M0014200
C                                                                       M0014300
      DO 8 L=CHARST,CHARND                                              M0014400
      IF (NAMTBL(L).EQ.J) GOTO 9                                        M0014500
    8 CONTINUE                                                          M0014600
      L = CHARND                                                        M0014700
    9 CODES(JJJ) = L                                                    M0014800
C                                                                       M0014900
C...     OUTPUT NEXT LINE OF BLOCK DATA PROGRAM TOGETHER WITH COMMENT   M0015000
C                                                                       M0015100
      WRITE(BPFILE,4)I,JJ,JJJ,J,L                                       M0015200
    4 FORMAT(29HC   META LINGUISTIC CLASS    ,A6,45X/6X,10HDATA CODE(   M0015300
     1,I3,7H),CODE(,I3,2H)/,I5,1H,I6,1H/,36X)                           M0015400
C                                                                       M0015500
      IF(IPRIOR.GE.QCLSWD)CALL SPILL(14,'LOADM   ')                     M0015600
      IF(IPRIOR)20,10,22                                                M0015700
   22 IF(CLSWRD(IPRIOR).EQ.0)GOTO 23                                    M0015800
   20 WRITE(VLFILE,21)                                                  M0015900
   21 FORMAT(1H ,74HERROR NO. 7025 IN SUBROUTINE LOADM.  INVALID OR MULTM0016000
     *IPLE DEFINED PRIORITY.)                                           M0016100
      ERROR=.TRUE.                                                      M0016200
      GOTO 10                                                           M0016300
   23 CLSWRD(IPRIOR)=K                                                  M0016400
      IF(L.GT.49.OR.L.EQ.2.OR.L.EQ.15.OR.L.EQ.36)GOTO 10                M0016500
      CLSWRD(IPRIOR)=L                                                  M0016600
C                                                                       M0016700
C...     UPDATE CODE SUBSCRIPTS AND RETURN FOR NEXT CARD                M0016800
C                                                                       M0016900
   10 JJ = JJ+2                                                         M0017000
      JJJ = JJJ+2                                                       M0017100
      GO TO 2                                                           M0017200
C                                                                       M0017300
C...     TERMINATING CARD READ. OUTPUT END CARD AND RETURN              M0017400
C                                                                       M0017500
    5 WRITE(BPFILE,6)                                                   M0017600
    6 FORMAT (7X,3HEND,70X)                                             M0017700
      K=0                                                               M0017800
      DO 25 L=1,QCLSWD                                                  M0017900
      IF(CLSWRD(L).EQ.0)GOTO 25                                         M0018000
      K=K+1                                                             M0018100
      CLSWRD(K)=CLSWRD(L)                                               M0018200
   25 CONTINUE                                                          M0018300
      MAXCLS=K+1                                                        M0018400
      RETURN                                                            M0018500
       END                                                              M0018600
**** SOURCE FILE : M0006715.X01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADN                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADN                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          INTEGER FCT.  NAME            SUBROUTINE    LOADG            M0000800
C                                                                       M0001000
      SUBROUTINE LOADN                                                  M0001100
C                                                                       M0001200
      IMPLICIT INTEGER (A-Z)                                            M0001300
C                                                                       M0001400
C        1.    NAME TABLE AND TABLE LIMITS                              M0001500
C                                                                       M0001600
      INCLUDE 'NAMETB.INC'                                              M0001710
C  INAMST:     BEGIN GEOMETRIC DEFINITION ROUTINE NAME SECTION(NAMTBL)  M0001900
C  NAMMAX:     NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0002100
C  IFIXST:     INDEX OF BEGINNING OF FIXED POINT NUMBER SECTION,CNUMTB  M0002300
C  NAMBTL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY           M0002450
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002550
C  CNUMTB:     NUMBER TABLE                                             M0002560
C                                                                       M0002700
C        6.    SYMBOLIC FILE DEFINITIONS                                M0002800
C                                                                       M0002900
      COMMON/SYMFIL/SYMFIL                                              M0003000
      DIMENSION SYMFIL(6)                                               M0003100
C  NTFILE:     BLOCK DATA OUTPUT OF NAMTBL AND NAMTBL POINTERS          M0003200
      EQUIVALENCE (NTFILE,SYMFIL(2))                                    M0003300
C  LCDATA:     INPUT FILE NUMBER OF PRODUCTION TABLES SEQUEN. MODE      M0003400
      EQUIVALENCE (LCDATA,SYMFIL(5))                                    M0003500
C  VLFILE:     VERIFICATION LISTING FILE                                M0003600
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0003700
C                                                                       M0003800
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0003900
C                                                                       M0004000
      COMMON/LDXSIZ/LDXSIZ                                              M0004100
      DIMENSION LDXSIZ(28)                                              M0004200
C  QAPTXX:     DIMENSION OF ARRAY APTXXX (OUTPUT)                       M0004300
      EQUIVALENCE (QAPTXX,LDXSIZ(20))                                   M0004400
C  QAPTYY:     DIMENSION OF ARRAY APTYYY (OUTPUT)                       M0004500
      EQUIVALENCE (QAPTYY,LDXSIZ(21))                                   M0004600
C  QSUBNA:     DIMENSION OF ARRAY SUBNAM                                M0004700
      EQUIVALENCE (QSUBNA,LDXSIZ(22))                                   M0004800
C  QHOLER:     DIMENSION OF ARRAY HOLER                                 M0004900
      EQUIVALENCE (QHOLER,LDXSIZ(23))                                   M0005000
C  QINMBR:     DIMENSION OF COMMON/NUMPTR/ DATA                         M0005100
      EQUIVALENCE (QINMBR,LDXSIZ(24))                                   M0005200
C  QISUB:      DIMENSION OF COMMON/SUBLST/ DATA                         M0005300
      EQUIVALENCE (QISUB,LDXSIZ(25))                                    M0005400
C  QIHOL:      DIMENSION OF COMMON/BCDPTR/ DATA                         M0005500
      EQUIVALENCE (QIHOL,LDXSIZ(26))                                    M0005600
C                                                                       M0005700
C        8.    CONTROL FLAGS AND POINTERS                               M0005800
C                                                                       M0005900
      COMMON/LDSCOM/LDSCOM                                              M0006000
      DIMENSION LDSCOM(9)                                               M0006100
C  PRODI:      POINTER TO LAST ENTRY IN PRODN TABLE                     M0006200
      EQUIVALENCE (PRODI,LDSCOM(4))                                     M0006300
C                                                                       M0006400
C       13.    SPACE FOR PRODUCTION LISTS                               M0006500
C                                                                       M0006600
      INCLUDE 'PRODN.INC'                                               M0006710
C  PRODA:      CONTAINS NAMTBL INDICES OF THOSE NAMES                   M0006900
C              TO BE PRE-LOADED INTO NAMTBL                             M0006910
C  IPRODB:     NAMTBL INDEXES ASSOCIATED WITH PRODB ENTRIES             M0007050
C  PRODB:      PRE-LOADED NAMES ALPHABETICALLY SORTED                   M0007100
C*                                                                      M0007300
C PURPOSE      TO READ ALL THOSE NAMES TO BE PRE-LOADED INTO            M0007400
C              NAMTBL, AND TO PRODUCE A BLOCK DATA PROGRAM              M0007500
C              FOR VARIOUS POINTERS TO NAMTBL.                          M0007600
C                                                                       M0007700
C LOCAL                                INITIAL                          M0007800
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0007900
C                                                                       M0008000
C              HOL         3      C*6  CONTAINS BCD NAMES FOR PUTTING   M0008100
C                                              IN BLOCK DATA            M0008200
C              HOLER       4      C*6          CONTAINS SPECIAL NAMES,  M0008300
C              IHOLER      4      I            CLASS CODES FOR NAMTBL   M0008400
C              I                  I            INDEX OF DO-LOOP         M0008500
C              II                 C*6          CONTAINS NAME            M0008600
C              I1                 I            SUBSCRIPT IN DO LOOP     M0008700
C              J                  I            CLASS/MODE               M0008800
C              K                  I            NAMTBL INDEX             M0008900
C              K1                 I            NAMTBL INDEX             M0009000
C              NAMSUB      5      I            CONTAINS BCD NAMES FOR   M0009100
C                                              B.D. ORG.                M0009200
C              NUMBRS      14     C*6          CONTAINS BCD NUMBERS FOR M0009300
C                                              NAMTBL                   M0009400
C              SUBNAM     109     C*6          CONTAINS SUBROUTINE NAMESM0009500
C              ISUBNM     109     I            + ASSOC. CLASS CODES FOR M0009600
C                                              NAMTBL                   M0009700
C              SUBPTR       113   I            TO SPECIFY ORDER OF ITEMSM0009800
C                                              IN B.D. FOR SUBLST       M0009900
C              TEMP               C*6          TEMPORARY STORAGE FOR    M0009910
C                                              NAME DURING SORTING      M0009920
C              ITEMP              I            TEMPORARY STORAGE FOR    M0009930
C                                              NAMTBL INDEX DURING SORT M0009940
C                                                                       M0010000
      CHARACTER*6 SUBNAM(109),HOLER(4),NUMBRS(14),HOL(3),II,NAMSUB(5)   M0010050
      CHARACTER*6 TEMP                                                  M0010060
      DIMENSION  ISUBNM(109),IHOLER(4),SUBPTR(113)                      M0010100
      DATA SUBNAM(1)/'UNDEF '/,ISUBNM(1)/19100/,                        M0010200
     1     SUBNAM(2)/'APT001'/,ISUBNM(2)/19101/,                        M0010300
     2     SUBNAM(3)/'APT003'/,ISUBNM(3)/19102/,                        M0010400
     3     SUBNAM(4)/'APT004'/,ISUBNM(4)/19103/,                        M0010500
     4     SUBNAM(5)/'APT005'/,ISUBNM(5)/19104/,                        M0010600
     5     SUBNAM(6)/'APT006'/,ISUBNM(6)/19105/,                        M0010700
     6     SUBNAM(7)/'APT007'/,ISUBNM(7)/19106/,                        M0010800
     7     SUBNAM(8)/'APT008'/,ISUBNM(8)/19107/,                        M0010900
     8     SUBNAM(9)/'APT009'/,ISUBNM(9)/19108/                         M0011000
      DATA SUBNAM(10)/'APT010'/ISUBNM(10)/19109/,                       M0011100
     1     SUBNAM(11)/'APT011'/,ISUBNM(11)/19110/,                      M0011200
     2     SUBNAM(12)/'APT012'/,ISUBNM(12)/19111/,                      M0011300
     3     SUBNAM(13)/'APT014'/,ISUBNM(13)/19112/,                      M0011400
     4     SUBNAM(14)/'APT015'/,ISUBNM(14)/19113/,                      M0011500
     5     SUBNAM(15)/'APT016'/,ISUBNM(15)/19114/,                      M0011600
     6     SUBNAM(16)/'APT017'/,ISUBNM(16)/19115/,                      M0011700
     7     SUBNAM(17)/'APT018'/,ISUBNM(17)/19116/,                      M0011800
     8     SUBNAM(18)/'APT019'/,ISUBNM(18)/19117/,                      M0011900
     9     SUBNAM(19)/'APT020'/,ISUBNM(19)/19118/                       M0012000
      DATA SUBNAM(20)/'APT021'/,ISUBNM(20)/19119/,                      M0012100
     1     SUBNAM(21)/'APT022'/,ISUBNM(21)/19120/,                      M0012200
     2     SUBNAM(22)/'APT023'/,ISUBNM(22)/19121/,                      M0012300
     3     SUBNAM(23)/'APT024'/,ISUBNM(23)/19122/,                      M0012400
     4     SUBNAM(24)/'APT025'/,ISUBNM(24)/19123/,                      M0012500
     5     SUBNAM(25)/'APT026'/,ISUBNM(25)/19124/,                      M0012600
     6     SUBNAM(26)/'APT027'/,ISUBNM(26)/19125/,                      M0012700
     7     SUBNAM(27)/'APT028'/,ISUBNM(27)/19126/,                      M0012800
     8     SUBNAM(28)/'APT029'/,ISUBNM(28)/19127/,                      M0012900
     9     SUBNAM(29)/'APT030'/,ISUBNM(29)/19128/                       M0013000
      DATA SUBNAM(30)/'APT031'/,ISUBNM(30)/19129/,                      M0013100
     1     SUBNAM(31)/'APT032'/,ISUBNM(31)/19130/,                      M0013200
     2     SUBNAM(32)/'APT033'/,ISUBNM(32)/19131/,                      M0013300
     3     SUBNAM(33)/'APT035'/,ISUBNM(33)/19132/,                      M0013400
     4     SUBNAM(34)/'APT036'/,ISUBNM(34)/19133/,                      M0013500
     5     SUBNAM(35)/'APT037'/,ISUBNM(35)/19134/,                      M0013600
     6     SUBNAM(36)/'APT038'/,ISUBNM(36)/19135/,                      M0013700
     7     SUBNAM(37)/'APT039'/,ISUBNM(37)/19136/,                      M0013800
     8     SUBNAM(38)/'APT040'/,ISUBNM(38)/19137/,                      M0013900
     9     SUBNAM(39)/'APT044'/,ISUBNM(39)/19138/                       M0014000
      DATA SUBNAM(40)/'APT045'/,ISUBNM(40)/19139/,                      M0014100
     1     SUBNAM(41)/'APT046'/,ISUBNM(41)/19140/,                      M0014200
     2     SUBNAM(42)/'APT047'/,ISUBNM(42)/19141/,                      M0014300
     3     SUBNAM(43)/'APT048'/,ISUBNM(43)/19142/,                      M0014400
     4     SUBNAM(44)/'APT049'/,ISUBNM(44)/19143/,                      M0014500
     5     SUBNAM(45)/'APT050'/,ISUBNM(45)/19144/,                      M0014600
     6     SUBNAM(46)/'APT051'/,ISUBNM(46)/19145/,                      M0014700
     7     SUBNAM(47)/'APT052'/,ISUBNM(47)/19146/,                      M0014800
     8     SUBNAM(48)/'APT053'/,ISUBNM(48)/19147/,                      M0014900
     9     SUBNAM(49)/'APT054'/,ISUBNM(49)/19148/                       M0015000
      DATA SUBNAM(50)/'APT055'/,ISUBNM(50)/19149/,                      M0015100
     1     SUBNAM(51)/'APT056'/,ISUBNM(51)/19150/,                      M0015200
     2     SUBNAM(52)/'APT057'/,ISUBNM(52)/19151/,                      M0015300
     3     SUBNAM(53)/'APT058'/,ISUBNM(53)/19152/,                      M0015400
     4     SUBNAM(54)/'APT060'/,ISUBNM(54)/19153/,                      M0015500
     5     SUBNAM(55)/'APT061'/,ISUBNM(55)/19154/,                      M0015600
     6     SUBNAM(56)/'APT062'/,ISUBNM(56)/19155/,                      M0015700
     7     SUBNAM(57)/'APT063'/,ISUBNM(57)/19156/,                      M0015800
     8     SUBNAM(58)/'APT064'/,ISUBNM(58)/19157/,                      M0015900
     9     SUBNAM(59)/'APT065'/,ISUBNM(59)/19158/                       M0016000
      DATA SUBNAM(60)/'APT066'/,ISUBNM(60)/19159/,                      M0016100
     1     SUBNAM(61)/'APT067'/,ISUBNM(61)/19160/,                      M0016200
     2     SUBNAM(62)/'APT068'/,ISUBNM(62)/19161/,                      M0016300
     3     SUBNAM(63)/'APT073'/,ISUBNM(63)/19162/,                      M0016400
     4     SUBNAM(64)/'APT075'/,ISUBNM(64)/19163/,                      M0016500
     5     SUBNAM(65)/'APT077'/,ISUBNM(65)/19164/,                      M0016600
     6     SUBNAM(66)/'APT078'/,ISUBNM(66)/19165/,                      M0016700
     7     SUBNAM(67)/'APT079'/,ISUBNM(67)/19166/,                      M0016800
     8     SUBNAM(68)/'APT081'/,ISUBNM(68)/19167/,                      M0016900
     9     SUBNAM(69)/'APT083'/,ISUBNM(69)/19168/                       M0017000
      DATA SUBNAM(70)/'APT085'/,ISUBNM(70)/19169/,                      M0017100
     1     SUBNAM(71)/'APT087'/,ISUBNM(71)/19170/,                      M0017200
     2     SUBNAM(72)/'APT088'/,ISUBNM(72)/19171/,                      M0017300
     3     SUBNAM(73)/'APT090'/,ISUBNM(73)/19172/,                      M0017400
     4     SUBNAM(74)/'APT092'/,ISUBNM(74)/19173/,                      M0017500
     5     SUBNAM(75)/'APT093'/,ISUBNM(75)/19174/,                      M0017600
     6     SUBNAM(76)/'APT094'/,ISUBNM(76)/19175/,                      M0017700
     7     SUBNAM(77)/'APT100'/,ISUBNM(77)/19176/,                      M0017800
     8     SUBNAM(78)/'APT200'/,ISUBNM(78)/19177/,                      M0017900
     9     SUBNAM(79)/'APT201'/,ISUBNM(79)/19178/                       M0018000
      DATA SUBNAM(80)/'APT298'/,ISUBNM(80)/19179/,                      M0018100
     1     SUBNAM(81)/'APT299'/,ISUBNM(81)/19180/,                      M0018200
     2     SUBNAM(82)/'APT041'/,ISUBNM(82)/19193/,                      M0018300
     3     SUBNAM(83)/'APT043'/,ISUBNM(83)/19195/,                      M0018400
     4     SUBNAM(84)/'APT295'/,ISUBNM(84)/19196/,                      M0018500
     5     SUBNAM(85)/'APT042'/,ISUBNM(85)/19194/,                      M0018600
     6     SUBNAM(86)/'APT069'/,ISUBNM(86)/19198/,                      M0018700
     7     SUBNAM(87)/'APT070'/,ISUBNM(87)/19199/,                      M0018800
     8     SUBNAM(88)/'APT071'/,ISUBNM(88)/19200/,                      M0018900
     9     SUBNAM(89)/'APT072'/,ISUBNM(89)/19201/                       M0019000
      DATA SUBNAM(90)/'APT074'/,ISUBNM(90)/19203/,                      M0019100
     1     SUBNAM(91)/'APT034'/,ISUBNM(91)/19204/,                      M0019200
     2     SUBNAM(92)/'DEFEXT'/,ISUBNM(92)/19202/,                      M0019300
     3     SUBNAM(93)/'APT101'/,ISUBNM(93)/19207/,                      M0019400
     4     SUBNAM(94)/'NDTEST'/,ISUBNM(94)/19011/,                      M0019500
     5     SUBNAM(95)/'COMP3D'/,ISUBNM(95)/19012/,                      M0019600
     6     SUBNAM(96)/'TLON  '/,ISUBNM(96)/19003/,                      M0019700
     7     SUBNAM(97)/'GOTOPN'/,ISUBNM(97)/19208/,                      M0019800
     8     SUBNAM(98)/'APT105'/,ISUBNM(98)/19209/,                      M0019900
     9     SUBNAM(99)/'APT106'/,ISUBNM(99)/19211/                       M0020000
      DATA SUBNAM(100)/'TRANSF'/,ISUBNM(100)/19212/,                    M0020100
     1     SUBNAM(101)/'APT104'/,ISUBNM(101)/19213/,                    M0020200
     2     SUBNAM(102)/'APT102'/,ISUBNM(102)/19214/,                    M0020300
     3     SUBNAM(103)/'APT103'/,ISUBNM(103)/19215/                     M0020400
     4    ,SUBNAM(104)/'APT107'/,ISUBNM(104)/19216/                     M0020500
     5    ,SUBNAM(105)/'APT013'/,ISUBNM(105)/19217/                     M0020600
     6    ,SUBNAM(106)/'APT108'/,ISUBNM(106)/19218/                     M0020700
     7    ,SUBNAM(107)/'APT109'/,ISUBNM(107)/19219/                     M0020800
     8    ,SUBNAM(108)/'APT110'/,ISUBNM(108)/19247/                     M0020900
     9    ,SUBNAM(109)/'LOGIF '/,ISUBNM(109)/19248/                     M0021000
      DATA HOLER(1)/'.AC.  '/,IHOLER(1)/31000/,                         M0021100
     1     HOLER(2)/'APTER'/,IHOLER(2)/31000/,                          M0021200
     2     HOLER(3)/'$21T$1'/,IHOLER(3)/31000/,                         M0021300
     3     HOLER(4)/'$$TAB'/,IHOLER(4)/31000/                           M0021400
      DATA NUMBRS                                                       M0021500
C        1   2   3   4   5   6   7   8   9  10   11   12   13   14      M0021600
     * /'0','1','2','3','4','5','6','7','8','9','0.','1.','10.',' '/    M0021700
C                                                                       M0021800
      DATA HOL(1)/'FEDRAT'/,                                            M0022000
     1     HOL(2)/'TO'/,                                                M0022100
     2     HOL(3)/'DS'/                                                 M0022200
C                                                                       M0022300
      DATA SUBPTR( 1)/ 2/,SUBPTR( 2)/ 5/,SUBPTR( 3)/ 6/,SUBPTR( 4)/ 8/, M0022500
     1     SUBPTR( 5)/11/,SUBPTR( 6)/10/,SUBPTR( 7)/12/,SUBPTR( 8)/16/, M0022600
     2     SUBPTR( 9)/17/,SUBPTR(10)/19/,SUBPTR(11)/20/,SUBPTR(12)/43/, M0022700
     3     SUBPTR(13)/23/,SUBPTR(14)/24/,SUBPTR(15)/25/,SUBPTR(16)/32/, M0022800
     4     SUBPTR(17)/21/,SUBPTR(18)/22/,SUBPTR(19)/34/,SUBPTR(20)/35/, M0022900
     5     SUBPTR(21)/32/,SUBPTR(22)/36/,SUBPTR(23)/37/,SUBPTR(24)/38/, M0023000
     6     SUBPTR(25)/39/,SUBPTR(26)/40/,SUBPTR(27)/97/,SUBPTR(28)/42/, M0023100
     7     SUBPTR(29)/44/,SUBPTR(30)/45/,SUBPTR(31)/46/,SUBPTR(32)/47/, M0023200
     8     SUBPTR(33)/48/,SUBPTR(34)/49/,SUBPTR(35)/50/,SUBPTR(36)/51/, M0023300
     9     SUBPTR(37)/52/,SUBPTR(38)/53/,SUBPTR(39)/55/,SUBPTR(40)/56/  M0023400
      DATA SUBPTR(41)/59/,SUBPTR(42)/60/,SUBPTR(43)/61/,SUBPTR(44)/-1/, M0023500
     1     SUBPTR(45)/98/,SUBPTR(46)/ 4/,SUBPTR(47)/ 7/,SUBPTR(48)/ 9/, M0023600
     2     SUBPTR(49)/ 1/,SUBPTR(50)/13/,SUBPTR(51)/14/,SUBPTR(52)/15/, M0023700
     3     SUBPTR(53)/18/,SUBPTR(54)/26/,SUBPTR(55)/27/,SUBPTR(56)/28/, M0023800
     4     SUBPTR(57)/29/,SUBPTR(58)/30/,SUBPTR(59)/31/,SUBPTR(60)/33/, M0023900
     5     SUBPTR(61)/ 9/,SUBPTR(62)/41/,SUBPTR(63)/57/,SUBPTR(64)/58/, M0024000
     6     SUBPTR(65)/ 3/,SUBPTR(66)/33/,SUBPTR(67)/71/,SUBPTR(68)/75/, M0024100
     7     SUBPTR(69)/54/,SUBPTR(70)/11/,SUBPTR(71)/54/,SUBPTR(72)/70/, M0024200
     8     SUBPTR(73)/76/,SUBPTR(74)/ 0/,SUBPTR(75)/81/,SUBPTR(76)/82/, M0024300
     9     SUBPTR(77)/84/,SUBPTR(78)/85/,SUBPTR(79)/86/,SUBPTR(80)/87/  M0024400
      DATA SUBPTR(81)/88/,SUBPTR(82)/91/,SUBPTR(83)/89/,SUBPTR(84)/90/, M0024500
     1     SUBPTR(85)/67/,SUBPTR(86)/68/,SUBPTR(87)/65/,SUBPTR(88)/64/, M0024600
     2     SUBPTR(89)/66/,SUBPTR(90)/69/,SUBPTR(91)/77/,SUBPTR(92)/78/, M0024700
     3     SUBPTR(93)/83/,SUBPTR(94)/79/,SUBPTR(95)/80/,SUBPTR(96)/92/, M0024800
     4     SUBPTR(97)/93/,SUBPTR(98)/94/,SUBPTR(99)/95/,                M0024900
     5     SUBPTR(100)/96/,SUBPTR(101)/72/,SUBPTR(102)/97/,             M0025000
     6     SUBPTR(103)/98/,SUBPTR(104)/99/,SUBPTR(105)/100/,            M0025100
     7     SUBPTR(106)/101/,SUBPTR(107)/102/,SUBPTR(108)/103/           M0025200
     8    ,SUBPTR(109)/104/,SUBPTR(110)/105/,SUBPTR(111)/106/           M0025300
     9    ,SUBPTR(112)/107/,SUBPTR(113)/108/                            M0025400
      DATA NAMSUB(1)/'ZSURF'/,                                          M0025500
     1     NAMSUB(2)/'ERROR'/,                                          M0025600
     2     NAMSUB(3)/'PSIS'/,                                           M0025700
     3     NAMSUB(4)/'REFSYS'/,                                         M0025800
     4     NAMSUB(5)/'TLAXIS'/                                          M0025900
C**                                                                     M0026000
      WRITE(VLFILE,110)                                                 M0026100
  110 FORMAT (1H1,5X,32HEXTERNAL NAME TABLE LOADING DATA/4X,4HNAME,10X, M0026200
     /5HCLASS,10X,4HNAME,7X,6HNAMTBL)                                   M0026300
C                                                                       M0026400
C...     CLEAR NAMTBL                                                   M0026500
C                                                                       M0026600
      DO 10 I=INAMST,NAMMAX                                             M0026700
   10 NAMTBL(I) = 0                                                     M0026800
      L=0                                                               M0026900
C                                                                       M0027000
C...     READ NEXT CARD,II = NAME, J = ITS CLASS AND MODE               M0027100
C                                                                       M0027200
   20 READ(LCDATA,30)II,J                                               M0027300
   30 FORMAT(A6,7X,I6)                                                  M0027400
C                                                                       M0027500
C...     THIS SET OF CARDS IS TERMINATED BY A NEGATIVE NUMBER           M0027600
C...     IN THE CLASS FIELD. IS J NEGATIVE                              M0027700
C                                                                       M0027800
      IF (J.LT.0) GOTO 40                                               M0027900
C                                                                       M0028000
C...     NO. PUT NAME AND ITS CLASS IN NAMTBL,                          M0028100
C...     THEN RETURN FOR NEXT CARD.                                     M0028200
C                                                                       M0028300
      K=NAME(II)                                                        M0028400
      NAMTBL(K) = J                                                     M0028500
      L=L+1                                                             M0028600
      PRODA(L)=K                                                        M0028700
      IPRODB(L)=K                                                       M0028800
      PRODB(L)=CNAMTB(K)                                                M0028900
      GOTO 20                                                           M0029000
C                                                                       M0029100
C...     TERMINATING CARD READ. PUT SUBROUTINE NAMES AND CLASSES        M0029200
C...     INTO NAMTBL FROM INAMST UPWARDS.                               M0029300
C                                                                       M0029400
   40 PRODI=J                                                           M0029500
      DO 50 I=1,QSUBNA                                                  M0029600
      J = INAMST+I-1                                                    M0029700
      NAMTBL(J) = ISUBNM(I)                                             M0029800
      CNAMTB(J)=SUBNAM(I)                                               M0029910
   50 CONTINUE                                                          M0030010
C                                                                       M0030100
C...  PUT .AC.,APTER,$21T$1,AND, ..TAB INTO NAMTBL IMMEDIATELY          M0030200
C...     ABOVE THE SUBROUTINE NAMES.                                    M0030300
C                                                                       M0030400
      DO 60 I=1,QHOLER                                                  M0030500
      J = J+1                                                           M0030600
      NAMTBL(J) = IHOLER(I)                                             M0030700
      CNAMTB(J)=HOLER(I)                                                M0030810
   60 CONTINUE                                                          M0030910
C                                                                       M0031000
C...     PUT 0-9,0.,1.,10. INTO NUMBER TABLE, CNUMTB, STARTING AT IFIXSTM0031100
C                                                                       M0031200
      DO 70 I=1,13                                                      M0031300
      J = IFIXST+I-1                                                    M0031400
      CNUMTB(J)=NUMBRS(I)                                               M0031610
   70 CONTINUE                                                          M0031700
C                                                                       M0031800
C...     WRITE CARDS BEING SORTED TO LISTING                            M0031900
C                                                                       M0032000
C... SORT PRE-LOADED NAMES ALPHABETICALLY                               M0032105
      LM1=L-1                                                           M0032110
      DO 71 I=1,LM1                                                     M0032115
        IP1=I+1                                                         M0032120
        IK=I                                                            M0032125
        DO 72 J=IP1,L                                                   M0032130
          IF (LGT(PRODB(IK),PRODB(J))) THEN                             M0032135
            IK=J                                                        M0032140
          ENDIF                                                         M0032145
   72   CONTINUE                                                        M0032150
        IF (IK.NE.I) THEN                                               M0032155
          TEMP=PRODB(IK)                                                M0032160
          ITEMP=IPRODB(IK)                                              M0032161
          PRODB(IK)=PRODB(I)                                            M0032165
          IPRODB(IK)=IPRODB(I)                                          M0032166
          PRODB(I)=TEMP                                                 M0032170
          IPRODB(I)=ITEMP                                               M0032171
        ENDIF                                                           M0032175
   71 CONTINUE                                                          M0032180
C                                                                       M0032185
      DO 75 I=1,L                                                       M0032200
      J=PRODA(I)                                                        M0032300
      K=IPRODB(I)                                                       M0032400
   75 WRITE(VLFILE,120)CNAMTB(J),NAMTBL(J),                             M0032500
     *                 CNAMTB(K),K                                      M0032600
  120 FORMAT(4X,A6,7X,I6,10X,A6,7X,I4)                                  M0032700
      WRITE(VLFILE,130)PRODI                                            M0032800
  130 FORMAT(17X,I6)                                                    M0032900
C                                                                       M0033000
C...     NAMTBL IS NOW LOADED. GENERATE BLOCK DATA PROGRAMS CONTAINING  M0033100
C...     POINTERS TO SUBROUTINE NAMES, CONTENTS OF IFIXST-IFIXND, AND   M0033200
C...     CERTAIN SPECIAL NAMES THAT CAN BE USED IN I.L. WITHOUT         M0033300
C...     APPEARING EXPLICITLY IN THE PART PROGRAM.                      M0033400
C...     FIRST WRITE HEADING FOR BCDPTR BLOCK DATA PROGRAM.             M0033500
C                                                                       M0033600
      WRITE(NTFILE,1) QIHOL                                             M0033700
    1 FORMAT(6X,17HBLOCK DATA BDBCDP,57X/                               M0033800
     1,35HC     BLOCK DATA PROGRAM FOR BCDPTR,45X/                      M0033900
     26X,22HIMPLICIT INTEGER (A-Z),52X/                                 M0034000
     36X,20HCOMMON/BCDPTR/BCDPTR,54X/                                   M0034100
     46X,17HDIMENSION BCDPTR(I4,1H),52X/                                M0034200
     56X,48HEQUIVALENCE(DOTAC ,BCDPTR(1)),(FEDRAT,BCDPTR(2)),26X/       M0034300
     66X,48HEQUIVALENCE(TO    ,BCDPTR(3)),(DS    ,BCDPTR(4)),26X/       M0034400
     76X,48HEQUIVALENCE(ERASB ,BCDPTR(5)),(ITDOT1,BCDPTR(6)),26X/       M0034500
     86X,29HEQUIVALENCE(DOTTAB,BCDPTR(7)),45X)                          M0034600
      K=INAMST+QSUBNA                                                   M0034700
      I = 1                                                             M0034800
C                                                                       M0034900
C...     WRITE POINTER TO .AC.                                          M0035000
C                                                                       M0035100
      WRITE(NTFILE,2) HOLER(1),I,K                                      M0035200
    2 FORMAT (23HC   NAMTBL POINTER FOR , A6,51X/                       M0035300
     16X,12HDATA BCDPTR(,I1,2H)/,I4,1H/,54X)                            M0035400
C                                                                       M0035500
C...     WRITE POINTERS TO FEDRAT, TO, DS                               M0035600
C                                                                       M0035700
      DO 80 I=2,4                                                       M0035800
      K1=NAME(HOL(I-1))                                                 M0035900
   80 WRITE(NTFILE,2) HOL(I-1),I,K1                                     M0036000
C                                                                       M0036100
C...     WRITE POINTERS TO APTER,$21T$1, $$TAB                          M0036200
C                                                                       M0036300
      DO 90 I=5,7                                                       M0036400
      K = K+1                                                           M0036500
   90 WRITE(NTFILE,2) HOLER(I-3),I,K                                    M0036600
C                                                                       M0036610
C...     TERMINATE BLOCK DATA PROGRAM                                   M0036620
      WRITE(NTFILE,9)                                                   M0036630
C                                                                       M0036700
C...     WRITE BLOCK DATA PROGRAM FOR NUMPTR                            M0036800
C                                                                       M0036900
      WRITE(NTFILE,3) QINMBR                                            M0037000
    3 FORMAT (6X,17HBLOCK DATA BDNUMP,57X/                              M0037100
     *35HC     BLOCK DATA PROGRAM FOR NUMPTR,45X/                       M0037110
     *6X,22HIMPLICIT INTEGER (A-Z),52X/                                 M0037120
     *6X,20HCOMMON/NUMPTR/NUMPTR,54X/                                   M0037130
     16X,17HDIMENSION NUMPTR(,I4,1H),52X/                               M0037200
     26X,50HEQUIVALENCE(ZERO  ,NUMPTR( 1)),(ZEROPT,NUMPTR( 2)),24X/     M0037300
     36X,50HEQUIVALENCE(ONE   ,NUMPTR( 3)),(ONEPT ,NUMPTR( 4)),24X/     M0037400
     46X,50HEQUIVALENCE(TWO   ,NUMPTR( 5)),(THREE ,NUMPTR( 6)),24X/     M0037500
     56X,50HEQUIVALENCE(FOUR  ,NUMPTR( 7)),(FIVE  ,NUMPTR( 8)),24X/     M0037600
     66X,50HEQUIVALENCE(SIX   ,NUMPTR( 9)),(SEVEN ,NUMPTR(10)),24X/     M0037700
     76X,50HEQUIVALENCE(EIGHT ,NUMPTR(11)),(NINE  ,NUMPTR(12)),24X/     M0037800
     *6X,50HEQUIVALENCE(TENPT ,NUMPTR(13))                    ,24X/     M0037810
     81HC,79X)                                                          M0037900
C                                                                       M0038000
C...     WRITE POINTERS TO 0, 0., 1, 1.                                 M0038100
C                                                                       M0038200
      DO 200 I=1,2                                                      M0038300
      K = NAMMAX+IFIXST+I-1                                             M0038400
      J = 2*I - 1                                                       M0038500
      WRITE(NTFILE,4) NUMBRS(I),J,K                                     M0038600
    4 FORMAT (23HC   NAMTBL POINTER FOR ,A3,54X/                        M0038700
     16X,12HDATA NUMPTR(,I2,2H)/,I4,1H/,53X)                            M0038800
      I1 = I+10                                                         M0038900
      K = K+10                                                          M0039000
      J = J+1                                                           M0039100
  200 WRITE(NTFILE,4) NUMBRS(I1),J,K                                    M0039200
C                                                                       M0039300
C...     WRITE POINTERS TO 2-9                                          M0039400
C                                                                       M0039500
      DO 210 I=5,12                                                     M0039600
      K = NAMMAX+IFIXST+I-3                                             M0039700
  210 WRITE(NTFILE,4) NUMBRS(I-2),I,K                                   M0039800
C                                                                       M0039801
C...     WRITE POINTER FOR 10.                                          M0039802
C                                                                       M0039803
      K=NAMMAX+IFIXST+12                                                M0039804
      I=13                                                              M0039805
      WRITE(NTFILE,4) NUMBRS(I),I,K                                     M0039806
C                                                                       M0039810
C...     TERMINATE BLOCK DATA PROGRAM                                   M0039820
      WRITE(NTFILE,9)                                                   M0039830
C                                                                       M0039900
C...     WRITE BLOCK DATA PROGRAM FOR SUBLST.                           M0040000
C...     IN THIS BLOCK SUBROUTINES ARE NOT LISTED IN NUMERICAL ORDER,   M0040100
C...     BUT IN THE ORDER DETERMINED BY APTXXX IN PRO026.               M0040200
C                                                                       M0040300
      QSBLST=QAPTXX+QAPTYY+QISUB+1                                      M0040400
      WRITE(NTFILE,5) QSBLST,QAPTXX,QAPTYY,QISUB                        M0040500
    5 FORMAT(6X,17HBLOCK DATA BDSUBL,57X/                               M0040600
     *35HC     BLOCK DATA PROGRAM FOR SUBLST,45X/                       M0040610
     *6X,22HIMPLICIT INTEGER (A-Z),52X/                                 M0040620
     *6X,20HCOMMON/SUBLST/SUBLST,54X/                                   M0040630
     16X,17HDIMENSION SUBLST(I4,9H),APTXXX(I4,9H),APTYYY(I4,7H),ISUB(I4,M0040700
     31H),15X/,1HC,79X/                                                 M0040800
     46X,34HEQUIVALENCE(SUBLST(  1),APTXXX(1)),40X/                     M0040900
     56X,34HEQUIVALENCE(SUBLST(121),APTYYY(1)),40X/                     M0041000
     66X,32HEQUIVALENCE(SUBLST(126),ISUB(1)),42X/                       M0041100
     76X,29HEQUIVALENCE (APT085,ISUB( 1)),45X/                          M0041200
     86X,29HEQUIVALENCE (APT200,ISUB( 2)),45X/                          M0041300
     96X,29HEQUIVALENCE (APT201,ISUB( 3)),45X/                          M0041400
     A6X,29HEQUIVALENCE (APT298,ISUB( 5)),45X/                          M0041500
     B6X,29HEQUIVALENCE (APT299,ISUB( 6)),45X/                          M0041600
     C6X,29HEQUIVALENCE (ERROR ,ISUB( 7)),45X/                          M0041700
     D6X,29HEQUIVALENCE (PSIS  ,ISUB( 8)),45X/                          M0041800
     E6X,29HEQUIVALENCE (REFSYS,ISUB( 9)),45X/                          M0041900
     F6X,29HEQUIVALENCE (TLAXIS,ISUB(10)),45X)                          M0042000
C                                                                       M0042100
C...     WRITE POINTERS TO SUBROUTINES IN APTXXX                        M0042200
C                                                                       M0042300
      DO 220 I=1,43                                                     M0042400
      J = SUBPTR(I)                                                     M0042500
      K = INAMST+J                                                      M0042600
  220 WRITE(NTFILE,6)SUBNAM(J+1),I,K                                    M0042700
    6 FORMAT (23HC   NAMTBL POINTER FOR ,A6,51X/                        M0042800
     16X,12HDATA APTXXX(,I3,2H)/,I4,1H/,52X)                            M0042900
C                                                                       M0043000
C...     INSERT POINTER TO ZSURF AT THIS POINT                          M0043100
C                                                                       M0043200
      I = 44                                                            M0043300
      K=NAME(NAMSUB(1))                                                 M0043400
      WRITE(NTFILE,6) NAMSUB(1),I,K                                     M0043500
C                                                                       M0043600
C...     WRITE POINTERS TO REMAINING SUBROUTINES IN APTXXX              M0043700
C                                                                       M0043800
      DO 225 I = 45,84                                                  M0043900
      J = SUBPTR(I)                                                     M0044000
      K = INAMST+J                                                      M0044100
  225 WRITE(NTFILE,6) SUBNAM(J+1),I,K                                   M0044200
      DO 230 I=85,92                                                    M0044300
      J=SUBPTR(I+20)                                                    M0044400
      K=INAMST+J                                                        M0044500
  230 WRITE(NTFILE,6) SUBNAM(J+1),I,K                                   M0044600
      DO 231 I=95,103                                                   M0044700
      J=SUBPTR(I+1)                                                     M0044800
      K = INAMST+J                                                      M0044900
  231 WRITE(NTFILE,6) SUBNAM(J+1),I,K                                   M0045000
C                                                                       M0045100
C...     INSERT POINTER TO LOGIF AT THIS POINT                          M0045200
C                                                                       M0045300
      I = 104                                                           M0045400
      J = SUBPTR(113)                                                   M0045500
      K= INAMST+J                                                       M0045600
      WRITE(NTFILE,6) SUBNAM(J+1),I,K                                   M0045700
C                                                                       M0045800
C...     WRITE POINTERS TO SUBROUTINES IN APTYYY                        M0045900
C                                                                       M0046000
      DO 240 I=1,QAPTYY                                                 M0046100
      J=SUBPTR(I+84)                                                    M0046200
      K = INAMST+J                                                      M0046300
  240 WRITE(NTFILE,7) SUBNAM(J+1),I,K                                   M0046400
    7 FORMAT (23HC   NAMTBL POINTER FOR ,A6,51X/                        M0046500
     16X,12HDATA APTYYY(,I1,2H)/,I4,1H/,54X)                            M0046600
C                                                                       M0046700
C...     WRITE POINTERS TO APT085,APT200,APT201,APT295,APT298,APT299    M0046800
C                                                                       M0046900
      DO 250 I=1,6                                                      M0047000
      J=SUBPTR(I+89)                                                    M0047100
      K = INAMST+J                                                      M0047200
  250 WRITE(NTFILE,8) SUBNAM(J+1),I,K                                   M0047300
    8 FORMAT (23HC   NAMTBL POINTER FOR ,A6,51X/                        M0047400
     16X,10HDATA ISUB(,I2,2H)/,I4,1H/,55X)                              M0047500
C                                                                       M0047600
C...     WRITE POINTERS TO ERROR,PSIS,REFSYS,TLAXIS                     M0047700
C                                                                       M0047800
      DO 260 I=7,QISUB                                                  M0047900
      K=NAME(NAMSUB(I-5))                                               M0048000
  260 WRITE(NTFILE,8) NAMSUB(I-5),I,K                                   M0048100
C                                                                       M0048200
C...     BLOCK DATA PROGRAM IS NOW COMPLETE.                            M0048300
C...     WRITE END CARD AND RETURN                                      M0048400
C                                                                       M0048500
      WRITE(NTFILE,9)                                                   M0048600
    9 FORMAT (7X,3HEND,70X)                                             M0048700
      RETURN                                                            M0048800
       END                                                              M0048900
**** SOURCE FILE : M0006716.X01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADP                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADP                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    LOADB                         MAIN             M0000800
C          SUBROUTINE    LOADI                                          M0000900
C          SUBROUTINE    LOADS                                          M0001000
C          INTEGER FCT.  NAME                                           M0001100
C          SUBROUTINE    BCDBIN                                         M0001200
C          SUBROUTINE    SPILL                                          M0001300
C                                                                       M0001400
      SUBROUTINE LOADP                                                  M0001500
C                                                                       M0001600
      IMPLICIT INTEGER (A-Z)                                            M0001700
C                                                                       M0001800
C        1.    NAME TABLE AND TABLE LIMITS                              M0001900
C                                                                       M0002000
      INCLUDE 'NAMETB.INC'                                              M0002110
C  NAMTBL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY           M0002250
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002350
C                                                                       M0002500
C        2.    STACK AND POINTER STORAGE                                M0002600
C                                                                       M0002700
      COMMON/STKLST/STKLST                                              M0002800
      DIMENSION STKLST(3002)                                            M0002900
C  MCTOP:      VALUE OF POSTN FOR MBKPNT                                M0003000
      EQUIVALENCE (MCTOP,STKLST(2))                                     M0003100
C                                                                       M0003200
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0003300
C                                                                       M0003400
      COMMON/CODES/CODES                                                M0003500
      DIMENSION CODES(150),DIGIT(2)                                     M0003600
C  DIGIT       (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '        M0003700
      EQUIVALENCE (DIGIT(1),CODES(19))                                  M0003800
C                                                                       M0003900
C        5.    CLASS CODE MODULI                                        M0004000
C                                                                       M0004100
C  MODULO:     NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    M0004200
      COMMON/MODULI/MODULO                                              M0004300
C                                                                       M0004400
C        6.    SYMBOLIC FILE DEFINITIONS                                M0004500
C                                                                       M0004600
      COMMON/SYMFIL/SYMFIL                                              M0004700
      DIMENSION SYMFIL(6)                                               M0004800
C  BPFILE:     BLOCK DATA OUTPUT OF CODE TABLE AND BASIC PRODUCTIONS    M0004900
      EQUIVALENCE (BPFILE,SYMFIL(1))                                    M0005000
C  VLFILE:     VERIFICATION LISTING FILE                                M0005100
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0005200
C                                                                       M0005300
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0005400
C                                                                       M0005500
      COMMON/LDXSIZ/LDXSIZ                                              M0005600
      DIMENSION LDXSIZ(28)                                              M0005700
C  QMETA:      DIMENSION OF ARRAY META (OUTPUT)                         M0005800
      EQUIVALENCE (QMETA,LDXSIZ(2))                                     M0005900
C                                                                       M0006000
C        8.    CONTROL FLAGS AND POINTERS                               M0006100
C                                                                       M0006200
      INCLUDE 'LDSCOM.INC'                                              M0006310
C  ERROR:      FLAG SET IF ERROR IN PRODUCTION TABLE                    M0006600
C  NUMEL:      NUMBER OF ELEMENTS IN ASSOC TABLE                        M0006800
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0007000
C  BREAK:      VALUE OF POSTN FOR BRKPNT                                M0007200
C  PDERR:      NAMTBL INDEX OF '28' = PROD. NOT FOUND                   M0007400
C                                                                       M0007600
C        9.    ITEM AND GROUP CONTROL                                   M0007700
C                                                                       M0007800
      INCLUDE 'ASSOC.INC'                                               M0007910
C                                                                       M0008100
C       12.    BIT OUTPUT PATTERNS                                      M0008200
C                                                                       M0008300
      COMMON/ELBIT/ELBIT                                                M0008400
      DIMENSION ELBIT(200)                                              M0008500
C                                                                       M0008600
C       13.    NAMTBL INDEXES OF THE PROD. TABLES                       M0008700
C                                                                       M0008800
      INCLUDE 'PRODN.INC'                                               M0008910
C                                                                       M0009100
C       19.    BIT CONSTANTS                                            M0009200
C                                                                       M0009300
      INCLUDE 'ALLBTS.INC'                                              M0009410
C  Z9999       SIGNALIZES START OF A SURFACE PRODUCTION SEQUENCE        M0009600
C  ZAAAA       SIGNALIZES JUMP ADDRESSES IN THE PRODUCTION TABLE        M0009800
C  ZCCCC       SIGNALIZES A PRODUCTION NUMBER IN THE TABLE              M0010000
C*                                                                      M0010200
C PURPOSE      TO CAUSE THE READING OF THE META CLASSES AND             M0010300
C              THE BASIC PRODUCTION TABLES, AND TO PRODUCE              M0010400
C              FORTRAN BLOCK DATA PROGRAMS FOR THE META CLASSES,        M0010500
C              AND FOR THE LOADING OF THE PRODUCTION TABLE.             M0010600
C                                                                       M0010700
C LOCAL                                INITIAL                          M0010800
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0010900
C                                                                       M0011000
C              I                  I            COUNTER FOR DO LOOPS     M0011100
C              IANY               C*6          CONTAINS ALL ('ALL')     M0011200
C              I28                C*6          CONTAINS ('28')          M0011300
C              J                  I            NAMTBL INDEX OF PROD. NO.M0011400
C              K                  I            GENERAL VARIABLE         M0011500
C              L                  I            NAMTBL INDEX             M0011600
C              M                  I            NUMBER OF CHARACTERS IN 3M0011700
C                                                                       M0011800
C   CHARACTER FUNCTION TO CONVERT INTEGER TO HEXADECIMAL STRING         M0011840
      CHARACTER*8 HEX                                                   M0011850
                                                                        M0011860
      CHARACTER*6 IANY,I28                                              M0011900
      DATA I28/'28'/,IANY/'ALL'/                                        M0012000
C**                                                                     M0012100
C...     PUT ALL, 28 INTO NAMTBL                                        M0012200
C                                                                       M0012300
      K = NAME (IANY)                                                   M0012400
      NAMTBL(K) = 9999000                                               M0012500
      PDERR=NAME(I28)                                                   M0012600
      NAMTBL(PDERR) = DIGIT(1)                                          M0012700
      K=1                                                               M0012800
      WRITE(VLFILE,4001)                                                M0012900
 4001 FORMAT (1H1,5X,27HBASIC PRODUCTION PROCESSING)                    M0013000
C                                                                       M0013100
C...     CALL LOADI TO READ PRODUCTION TABLES                           M0013200
C                                                                       M0013300
      CALL LOADI(K)                                                     M0013400
C                                                                       M0013500
C...     IF THERE WAS A FORMATTING ERROR IN THE PRODUCTION TABLES       M0013600
C...     RETURN, OTHERWISE CALL LOADS TO ASSIGN BIT-PATTERNS            M0013700
C...     AND TO PRODUCE THE INTERNAL PRODUCTION TABLES.                 M0013800
C                                                                       M0013900
      IF(ERROR)RETURN                                                   M0014000
      CALL LOADB                                                        M0014100
      CALL LOADS                                                        M0014200
      QPRODT=(IPROD+12)/10*10                                           M0014300
      I=QMETA+3                                                         M0014400
      J=QPRODT+QMETA+2                                                  M0014500
C                                                                       M0014600
C...     WRITE HEADING FOR BLOCK DATA PROGRAM                           M0014700
C                                                                       M0014800
      WRITE(BPFILE,3000)                                                M0014900
 3000 FORMAT(6X,17HBLOCK DATA BDSCRT,57X/                               M0015000
     11HC,79X/                                                          M0015010
     26X,22HIMPLICIT INTEGER (A-Z),52X/                                 M0015020
     36X,20HCOMMON/SRCTBL/SRCTBL,54X)                                   M0015100
      WRITE(BPFILE,3001) J,QPRODT,QMETA,I                               M0015300
 3001 FORMAT(6X,17HDIMENSION SRCTBL(,I4,9H),PRODTB(,I4,7H),META(,I2,1H) M0015400
     1,30X/                                                             M0015500
     26X,31HEQUIVALENCE (BRKPNT,SRCTBL(1)),,43X/                        M0015600
     35X,32H1            (MBKPNT,SRCTBL(2)),,43X/                       M0015700
     35X,33H2            (META(1),SRCTBL(3)),,42X/                      M0015800
     45X,31H3            (PRODTB(1),SRCTBL(,I2,3H)) ,39X)               M0015900
C                                                                       M0016100
C...     WRITE DATA STATEMENTS TO ASSIGN BIT-PATTERS TO EACH ITEM       M0016200
C...     THAT OCCURRED IN THE PRODUCTION TABLES, I.E. THE META-CLASSES. M0016300
C                                                                       M0016400
      DO 2 I=1,NUMEL                                                    M0016500
      K=ASSOC(1,I)                                                      M0016600
      L = NAMTBL(K)/MODULO                                              M0016700
      IF (L.GT.QMETA) CALL SPILL(2,'LOADP   ')                          M0016800
    2 WRITE(BPFILE,3002)CNAMTB(K),NAMTBL(K),HEX(ELBIT(I)),L,ELBIT(I)    M0016900
 3002 FORMAT(20HC    META ENTRY FOR ,A6,7H CLASS ,I5,5H  / Z,A8,1H/,    M0017100
     * 28X/6X,10HDATA META(,I3,22H)                    /,I11,1H/,28X)   M0017200
C                                                                       M0017300
C...     WRITE BREAKPOINT DATA STATEMENT                                M0017400
C                                                                       M0017500
      BREAK=BREAK+1                                                     M0017600
      MCTOP=MCTOP+2                                                     M0017700
      WRITE(BPFILE,3003)MCTOP,BREAK                                     M0017800
 3003 FORMAT(6X,19HDATA BRKPNT,MBKPNT/,I2,1H,,I2,1H/,49X)               M0017900
C                                                                       M0018000
C...     WRITE DATA STATEMENTS TO PRODUCE PRODUCTION TABLE              M0018100
C                                                                       M0018200
      K=0                                                               M0018300
      JJ=1                                                              M0018400
      WRITE(BPFILE,3008)K,JJ,(Z9999+K)                                  M0018500
      DO 100 I=1,IPROD                                                  M0018600
      JJ=JJ+1                                                           M0018700
C                                                                       M0018800
C...     IF NEXT ITEM IS NEGATIVE IT IS THE TERMINATOR OF THIS          M0018900
C...     PRODUCTION. IS IT NEGATIVE                                     M0019000
C                                                                       M0019100
      IF(PRODN(I).LT.0)GOTO 98                                          M0019200
      IF (PRODN(I).EQ.0) PRODN(I)=ALLBTS(1)                             M0019210
      IF(JJ.NE.BREAK.AND.JJ.NE.MCTOP) GOTO 97                           M0019300
      K=4*I                                                             M0019400
      WRITE(BPFILE,3008)K,JJ,(Z9999+K)                                  M0019500
 3008 FORMAT(36HC                         /Z9999/ + ,I4,40X/            M0019600
     *       6X,12HDATA PRODTB(,I6,3H) /I11,1H/,42X)                    M0019710
      JJ=JJ+1                                                           M0019800
C                                                                       M0019900
C...     NO. WRITE DATA STATEMENT WITH OCTAL VALUE.                     M0020000
   97 WRITE(BPFILE,3004)HEX(PRODN(I)),JJ,PRODN(I)                       M0020100
 3004 FORMAT(29HC                         / Z,A8,1H/,42X/               M0020200
     *       6X,12HDATA PRODTB(,I6,3H) /I11,1H/,42X)                    M0020300
      GO TO 100                                                         M0020400
C                                                                       M0020500
C...     THIS ITEM IS NEGATIVE, -(NO. OF PRODUCTION).                   M0020600
C...     FETCH BCD OF ITS MODULUS FROM THE NAMTBL AND WRITE             M0020700
C...     DATA STATEMENT FOR NEGATIVE INTEGER.                           M0020800
C                                                                       M0020900
   98 J=-PRODN(I)                                                       M0021000
      CALL BCDBIN(CNAMTB(J),K,M)                                        M0021100
      IF(K.GE.10000)GOTO 99                                             M0021200
      WRITE(BPFILE,3005)K,JJ,(ZCCCC+K)                                  M0021300
 3005 FORMAT(36HC                         /ZCCCC/ + ,I4,40X/            M0021400
     *       6X,12HDATA PRODTB(,I6,3H) /I11,1H/,42X)                    M0021510
      GOTO 100                                                          M0021600
   99 K=K-10000                                                         M0021700
      WRITE(BPFILE,3006)K,JJ,(ZAAAA+K)                                  M0021800
 3006 FORMAT(36HC                         /ZAAAA/ + ,I4,40X/            M0021900
     *       6X,12HDATA PRODTB(,I6,3H) /I11,1H/,42X)                    M0022010
  100 CONTINUE                                                          M0022100
C                                                                       M0022200
C...     BLOCK DATA PROGRAM IS NOW WRITTEN.                             M0022300
C...     WRITE END CARD AND RETURN.                                     M0022400
C                                                                       M0022500
      WRITE(BPFILE,3007)                                                M0022600
 3007 FORMAT(7X,3HEND,70X)                                              M0022700
      RETURN                                                            M0022800
       END                                                              M0022900
**** SOURCE FILE : M0006717.W02   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADS                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADS                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    SPILL           SUBROUTINE    LOADG            M0000800
C                                        SUBROUTINE    LOADP            M0000900
C                                                                       M0001000
      SUBROUTINE LOADS                                                  M0001100
C                                                                       M0001200
      IMPLICIT INTEGER (A-Z)                                            M0001300
C                                                                       M0001310
C        0.    SYSTEM DEPENDENT PARAMETERS                              M0001320
C                                                                       M0001330
      INCLUDE 'SDP.INC'                                                 M0001340
C  NBWRD:      NO OF BITS PER COMPUTER WORD                             M0001350
C                                                                       M0001400
C        1.    NAME TABLE AND TABLE LIMITS                              M0001500
C                                                                       M0001600
      INCLUDE 'NAMETB.INC'                                              M0001710
C  NAMTBL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY           M0001910
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002050
C                                                                       M0002200
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0002300
C                                                                       M0002400
      COMMON/CODES/CODES                                                M0002500
      DIMENSION CODES(150),DIGIT(2),NUMBER(2),TEMP(2)                   M0002600
C  DIGIT:      (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '        M0002700
      EQUIVALENCE (DIGIT(1),CODES(19))                                  M0002800
C  NUMBER:     (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        M0002900
      EQUIVALENCE (NUMBER(1),CODES(27))                                 M0003000
C  TEMP:       (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        M0003100
      EQUIVALENCE (TEMP(1),CODES(33))                                   M0003200
C                                                                       M0003300
C        4.    BIT COMBINATION TABLE                                    M0003400
C                                                                       M0003500
C  BIT:        CONTAINS THE ELEMENTARY BIT PATTERNS                     M0003600
      COMMON/BITCOM/BIT                                                 M0003700
      DIMENSION BIT(32)                                                 M0003900
C                                                                       M0004000
C        6.    SYMBOLIC FILE DEFINITIONS                                M0004100
C                                                                       M0004200
      COMMON/SYMFIL/SYMFIL                                              M0004300
      DIMENSION SYMFIL(6)                                               M0004400
C  VLFILE:     VERIFICATION LISTING FILE                                M0004500
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0004600
C                                                                       M0004700
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0004800
C                                                                       M0004900
      COMMON/LDXSIZ/LDXSIZ                                              M0005000
      DIMENSION LDXSIZ(28)                                              M0005100
C  QLENGT:     DIMENSION OF ARRAY LENGTH                                M0005200
      EQUIVALENCE (QLENGT,LDXSIZ(6))                                    M0005300
C  QKGRP:      DIMENSION OF ARRAY KGRP                                  M0005400
      EQUIVALENCE (QKGRP,LDXSIZ(19))                                    M0005500
C                                                                       M0005600
C        8.    CONTROL FLAGS AND POINTERS                               M0005700
C                                                                       M0005800
      INCLUDE 'LDSCOM.INC'                                              M0005810
C  NUMEL:      NUMBER OF ELEMENTS IN ASSOC TABLE                        M0006100
C  PRODI:      POINTER TO LAST ENTRY IN PRODN TABLE                     M0006300
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0006500
C  NUMGP:      NUMBER OF GROUPS IN PRODUCTION TABLE                     M0006700
C                                                                       M0006900
C        9.    ITEM AND GROUP CONTROL                                   M0007000
C                                                                       M0007100
      INCLUDE 'ASSOC.INC'                                               M0007210
C                                                                       M0007400
C       10.    TABLE OF GROUPS AND NUMBER OF CONTAINED ELEMENTS         M0007500
C                                                                       M0007600
      COMMON/LENGTH/LENGTH                                              M0007700
      DIMENSION LENGTH(3,100)                                           M0007800
C                                                                       M0007900
C       12.    BIT OUTPUT PATTERNS                                      M0008000
C                                                                       M0008100
      COMMON/ELBIT/ELBIT                                                M0008200
      DIMENSION ELBIT(200),LBIT(200)                                    M0008400
C  LBIT:       BIT PATTERNS FOR ELEMENTS OF ASSOC TABLE                 M0008500
      EQUIVALENCE (LBIT(1),ELBIT(1))                                    M0008600
C                                                                       M0008700
C       13.    NAMTBL INDEXES OF THE PROD. TABLES                       M0008800
C                                                                       M0008900
      INCLUDE 'PRODN.INC'                                               M0009010
C  PRODN:      NAMTBL INDEXES OF THE PROD. TABLES IN SEQUENT. MODE      M0009300
C*                                                                      M0009500
C NOTES        THE INTEGER VARIABLE IBITS IS A COMPUTER DE-             M0009600
C              PENDENT WORD.  IT SHOULD CONTAIN THE NUMBER OF           M0009700
C              BITS (EXCLUDING THE SIGN BIT) IN A COMPUTER              M0009800
C              WORD.  IT IS USED IN ASSIGINING UNIQUE BIT-PATTERNS      M0009900
C              TO EACH ITEM IN THE VARIOUS TABLES.                      M0010000
C                                                                       M0010100
C LOCAL                                INITIAL                          M0010200
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0010300
C                                                                       M0010400
C              I                  I            DO LOOP INDEX            M0010500
C              IBITS              I            NUMBER OF USEFULL BITS INM0010600
C                                              A COMPUTER WORD          M0010700
C              IDGIT              I            NAMTBL INDEX OF DIGIT    M0010800
C              IDIGIT             C*6          CONTAINS DIGIT ('DIGIT') M0010900
C              IELT               I            POSITION OF ELEMENT BIT  M0011000
C              IEND               I            PRODI+1                  M0011100
C              IGRP               I            NUMBER OF ITEMS IN EACH  M0011200
C                                              GROUP                    M0011300
C              II                 I            GENERAL VARIABLE         M0011400
C              INMBR              I            NAMTBL INDEX OF NUMBER   M0011500
C              INUMBR             C*6          CONTAINS NUMBER          M0011600
C                                              ('NUMBER')               M0011700
C              J                  I            GENERAL VARIABLE         M0011800
C              JDFCIT             I            DIFFERENCE BETWEEN       M0011900
C                                              MAXIMUM POSSIBLE NO. OF  M0012000
C                                              COMBINATIONS AND NO. OF  M0012100
C                                              ELEMENTS                 M0012200
C              JEXCES             I            DIFFERENCES BETWEEN NO.  M0012300
C                                              OF GROUPS AND NO. OF BITSM0012400
C              JJ                 I            GENERAL VARIABLE         M0012500
C              K                  I            DO LOOP INDEX            M0012600
C              KERP         75    I            ZONE NUMBER FOR EACH     M0012700
C                                              GROUP                    M0012800
C              KJ                 I            NEXT ZONE NUMBER         M0012900
C              L                  I            NAMTBL INDEX             M0013000
C              LENTH3             L            FLAG USED DURING ATTEMPTSM0013100
C                                              TO MERGE GROUPS          M0013200
C              MAXLTH             I            MAXIMUM NUMBER OF        M0013300
C                                              ELEMENTS IN ANY ONE SET  M0013400
C              MORE               L            FLAG TO SAY IF MORE ITEMSM0013500
C                                              TO COME IN THIS SET OF   M0013600
C                                              ALTERNATIVES             M0013700
C              NUMZAV             I            IBITS-MAXLTM=NO. BITS    M0013800
C                                              AVAILABLE FOR ZONE BITS  M0013900
C              TEMP               I            USED FOR TEMPORARY       M0014000
C                                              STORAGE OF---            M0014100
C                                              1) SUM OF NO. OF ELEMENTSM0014200
C                                                IN 2 GROUPS            M0014300
C                                              2) NAMTBL INDEX OF NEXT  M0014400
C                                                ITEM IN PRODUCTION     M0014500
C                                                TABLE                  M0014600
C              NEMTBL     3000    I            ARRAY HOLDING BIT        M0014650
C                                              PATTERNS                 M0014660
C...           ASSOC IS A TWO COLUMN ARRAY OF GROUP ELEMENTS            M0014700
C...           THE FIRST COLUMN CONTAINS THE NAME TABLE POINTER         M0014800
C...           AND THE SECOND COLUMN HAS THE GROUP NUMBER OF THE        M0014900
C...           ELEMENTS (NOTE..THE THIRD COLUMN IS A WORKING AREA)      M0015000
C...           ELBIT IS A ONE COLUMN ARRAY WITH THE BIT PATTERNS OF THE M0015100
C...           ELEMENTS IN ASSOC TABLE                                  M0015200
C...           LENGTH IS A THREE COLUMN ARRAY OF GROUPS.                M0015300
C...           THE FIRST COLUMN IN LENGTH IS THE GROUP NUMBER,          M0015400
C...           THE SECOND COLUMN HAS THE NUMBER OF ELEMENTS IN          M0015500
C...           THIS GROUP, AND THE THIRD COLUMN HAS THE TOTAL           M0015600
C...           NUMBER OF ALL ELEMENTS IF THIS GROUP CONTAINS OTHERS     M0015700
C...           OF  THE THIRD COLUMN IS -INDEX OF LENGTH WITH            M0015800
C...           WHICH THIS GROUP IS COMBINED.                            M0015900
C...           NUMEL IS THE TOTAL NUMBER OF ELEMENTS IN ASSOC           M0016000
C...           NUMGP IS THE TOTAL NUMBER OF GROUPS IN THE LENGTH TABLE  M0016100
C                                                                       M0016200
      DIMENSION KGRP(100),IGRP(100),NEMTBL(3000)                        M0016300
      CHARACTER*6 INUMBR,IDIGIT                                         M0016350
      LOGICAL LENTH3,LENTH4,MORE                                        M0016360
      DATA INUMBR/'NUMBER'/,                                            M0016400
     1     IDIGIT/'DIGIT'/                                              M0016500
      DATA    LENTH3/.TRUE./,LENTH4/.FALSE./                            M0016700
C                                                                       M0016900
C...  **********************************************************        M0017000
C...  *                                                        *        M0017100
C...  *  IBITS IS COMPUTER DEPENDENT.                          *        M0017200
C...  *  IT IS SET EQUAL TO THE NUMBER OF BITS (EXCLUDING THE  *        M0017300
C...  *  SIGN BIT) IN A COMPUTER WORD.                         *        M0017400
C...  *                                                        *        M0017500
C...  **********************************************************        M0017600
C**                                                                     M0017700
      IBITS = NBWRD-1                                                   M0017800
C                                                                       M0017900
C...     CLEAR KGRP,IGRP, AND 3RD COLUMN OF LENGTH.                     M0018000
C                                                                       M0018100
      DO 2 I=1,QKGRP                                                    M0018200
      KGRP(I) = 0                                                       M0018300
    2 IGRP(I) = 0                                                       M0018400
      IF (NUMGP.GT.QLENGT) CALL SPILL(6,'LOADS   ')                     M0018500
      DO  3 I=1,NUMGP                                                   M0018600
    3 LENGTH(3,I) = 0                                                   M0018700
      MAXLTH = LENGTH(2,1)                                              M0018800
      NUMZAV = IBITS - MAXLTH                                           M0018900
C                                                                       M0019000
C...     ARE THERE ENOUGH ZONE BITS TO ASSIGN A UNIQUE ONE              M0019100
C...     TO EACH SET OF ELEMENTS                                        M0019200
C                                                                       M0019300
      IF(NUMZAV.GE.NUMGP) GO TO 100                                     M0019400
C                                                                       M0019500
C...     NO. TRY TO COMBINE SETS SO AS TO ELIMINATE EXCESS SETS.        M0019600
C...     JEXCES = NO. OF EXCESS SETS TO BE ELIMINATED,                  M0019700
C...     JDFCIT = (MAX. NO. OF BITS AVAILABLE FOR ZONE BITS)*(MAX. NO.  M0019800
C...               OF BITS REQUIRED FOR ELEMENT BITS) - TOTAL NO.       M0019900
C...               OF ELEMENTS.                                         M0020000
C...     IF JDFCIT IS LESS THAN ZERO THE EXCESS CANNOT BE ELIMINATED.   M0020100
C                                                                       M0020200
      JEXCES = NUMGP - NUMZAV                                           M0020300
      JDFCIT = NUMZAV*MAXLTH- NUMEL                                     M0020400
      IF(JDFCIT.GE.0) GO TO 1                                           M0020500
C                                                                       M0020600
C...     NOT ENOUGH BITS AVAILABLE.                                     M0020700
C...     SET LENTH3 .FALSE. AND OUTPUT DIAGNOSTIC.                      M0020800
C                                                                       M0020900
      JDFCIT = 0                                                        M0021000
      LENTH3 = .FALSE.                                                  M0021100
      GO TO 13                                                          M0021200
C                                                                       M0021300
C...     MERGING OF GROUPS MAY BE POSSIBLE. TRY TO ELIMINATE EXCESS SETSM0021400
C                                                                       M0021500
    1 II = NUMGP-1                                                      M0021600
C                                                                       M0021700
C...     THIS LOOP ATTEMPTS TO COMBINE GROUPS                           M0021800
C                                                                       M0021900
      DO 12 I = 2,II                                                    M0022000
C                                                                       M0022100
C...     IF THIS SET HAS BEEN PROCESSED, 3RD COL. OF LENGTH WILL        M0022200
C...     BE NON-ZERO. TEST THIS                                         M0022300
C                                                                       M0022400
      IF(LENGTH(3,I).NE.0) GO TO 12                                     M0022500
C                                                                       M0022600
C...     STORE NO. OF ELEMENTS IN THIS GROUP IN 3RD COL. OF LENGTH.     M0022700
C                                                                       M0022800
      LENGTH(3,I) = LENGTH(2,I)                                         M0022900
      J = I+1                                                           M0023000
C                                                                       M0023100
C...     SEARCH REST OF GROUPS FOR ONE THAT CAN BE COMBINED WITH THIS.  M0023200
C                                                                       M0023300
      DO 10 JJ = J,NUMGP                                                M0023400
C                                                                       M0023500
C...     HAS THIS GROUP ALREADY BEEN PROCESSED.                         M0023600
C                                                                       M0023700
      IF(LENGTH(3,JJ).NE.0) GO TO 10                                    M0023800
C                                                                       M0023900
C...     NO. PUT TOTAL NO. OF ELEMENTS IN THIS GROUP AND THE ONE WE ARE M0024000
C...     ATTEMPTING TO COMBINE IT WITH IN TEMP AND TEST IF TOTAL IS     M0024100
C...     GREATER THAN MAX. NO ALLOWED (= LENGTH(2,1))                   M0024200
C                                                                       M0024300
      TEMP(1)=LENGTH(3,I)+LENGTH(2,JJ)                                  M0024400
      IF (TEMP(1).GT.MAXLTH) GO TO 10                                   M0024500
C                                                                       M0024600
C...     NO. SO PUT NEW TOTAL LENGTH IN 3RD COL. OF ORIGINAL GROUP,     M0024700
C...     AND NEGATIVE POINTER TO THAT GROUP IN 3RD COL. OF MERGED GROUP.M0024800
C...     ALSE SET LENTH3 .FALSE. IF WE CANNOT MERGE ANY MORE GROUPS     M0024900
C...     WITH THIS ONE.                                                 M0025000
C                                                                       M0025100
      IF ((TEMP(1)+JDFCIT).LT.MAXLTH) LENTH3 = .FALSE.                  M0025200
      LENGTH(3,I) = TEMP(1)                                             M0025300
      LENGTH(3,JJ) = -I                                                 M0025400
C                                                                       M0025500
C...     REDUCE EXCESS BY ONE AND SEE IF ALL NECCESSARY ELIMINATION     M0025600
C...     HAS BEEN DONE YET.                                             M0025700
C                                                                       M0025800
      JEXCES = JEXCES - 1                                               M0025900
      IF(JEXCES.EQ.0) GO TO 100                                         M0026000
C                                                                       M0026100
C...     NO. IF LENTH3 IS .TRUE. TRY TO MERGE ANOTHER GROUP WITH THIS.  M0026200
C                                                                       M0026300
      IF(.NOT.LENTH3) GO TO 11                                          M0026400
   10 CONTINUE                                                          M0026500
C                                                                       M0026600
C...     RESET IDFCIT AND TRY TO PERFORM A FURTHER MERGE.               M0026700
C                                                                       M0026800
   11 JDFCIT = JDFCIT + LENGTH(3,I)-MAXLTH                              M0026900
      LENTH3 = .TRUE.                                                   M0027000
   12 CONTINUE                                                          M0027100
C                                                                       M0027200
C...     CANNOT REDUCE EXCESS SETS TO ZERO. OUTPUT DIAGNOSTIC           M0027300
C                                                                       M0027400
   13 WRITE(VLFILE,14)                                                  M0027500
   14 FORMAT (1H ,61HERROR NO. 7031 IN SUBROUTINE LOADS. UNABLE TO COMBIM0027600
     *NE GROUPS.)                                                       M0027700
C                                                                       M0027800
C...     IF WE HAVE NOT YET ATTEMPTED A MERGE, DO SO, OTHERWISE START   M0027900
C...     FORMING INTERNAL REPRESENTATIONS.                              M0028000
C                                                                       M0028100
      IF(LENTH3) GO TO 100                                              M0028200
      LENTH3 = .TRUE.                                                   M0028300
      GO TO 1                                                           M0028400
C                                                                       M0028500
C...     THE FOLLOWING LOOPS SET UP ELBIT WITH THE INTERNAL             M0028600
C...     REPRESENTATIONS OF THE ELEMENTS IN ASSOC.                      M0028700
C                                                                       M0028800
  100 KJ = 1                                                            M0028900
C                                                                       M0029000
C...     THIS LOOP EXAMINES EACH ITEM IN ASSOC, ONE AT A TIME.          M0029100
C                                                                       M0029200
      DO  107 I=1,NUMEL                                                 M0029300
C                                                                       M0029400
C...     THIS LOOP EXAMINES THE CORRESPONDING ITEM IN LENGTH.           M0029500
C                                                                       M0029600
      DO 103 K = 1,NUMGP                                                M0029700
      J = K                                                             M0029800
C                                                                       M0029900
C...     FIND ITEM IN LENGTH CORRESPONDING TO SET NO. OF THIS ELEMENT.  M0030000
C                                                                       M0030100
      IF(ASSOC(2,I).NE.LENGTH(1,J)) GO TO 103                           M0030200
C                                                                       M0030300
C...     TEST IF 3RD COL. IS A POINTER TO ANOTHER GROUP.                M0030400
C                                                                       M0030500
      IF(LENGTH(3,J)) 101,102,102                                       M0030600
C                                                                       M0030700
C...     YES. SET J TO POINT TO THAT GROUP - I.E. TO GROUP WHICH NOW    M0030800
C...     CONTAINS THE ELEMENT IN ASSOC.                                 M0030900
C                                                                       M0031000
  101 J = -LENGTH(3,J)                                                  M0031100
C                                                                       M0031200
C...     INCREASE CORRESPONDING ITEM OF IGRP - CONTAINS NO. OF ELEMENTS M0031300
C...     IN THIS GROUP - AND SET IELT TO POSITION FOR ELEMENT BIT.      M0031400
C                                                                       M0031500
  102 IGRP(J) = IGRP(J)+1                                               M0031600
      IELT = NUMZAV+1+IGRP(J)                                           M0031700
C                                                                       M0031800
C...     ARE THERE MORE THAN MAX. ALLOWABLE NO. OF ELEMENTS IN GROUP    M0031900
C                                                                       M0032000
      IF (IGRP(J).GT.MAXLTH)        GO TO 105                           M0032100
C                                                                       M0032200
C...     IS THIS FIRST ELEMENT ENCOUNTERED IN THIS GROUP                M0032300
C                                                                       M0032400
      IF (KGRP(J).NE.0) GO TO 108                                       M0032500
C                                                                       M0032600
C...     YES. HAVE WE HAD MAX. NO. OF GROUPS YET                        M0032700
C                                                                       M0032800
      IF(KJ.GT.NUMZAV) GO TO 110                                        M0032900
C                                                                       M0033000
C...     NO. INCREASE KJ BY 1 - KJ = ZONE NO. OF THIS GROUP             M0033100
C...     STORE ZONE NO. IN KGRP                                         M0033200
C                                                                       M0033300
      KJ = KJ+1                                                         M0033400
      KGRP(J) = KJ                                                      M0033500
C                                                                       M0033600
C...     FORM INTERNAL REPRESENTATION IN LBIT                           M0033700
C                                                                       M0033800
  108 J = KGRP(J)                                                       M0033900
      LBIT(I) = ORF(BIT(J),BIT(IELT))                                   M0034000
      GO TO 107                                                         M0034100
C                                                                       M0034200
C...     MORE THAN MAX. NO. OF GROUPS - ISSUE DIAGNOSTIC                M0034300
C                                                                       M0034400
  110 WRITE(VLFILE,111)KJ                                               M0034500
  111 FORMAT (1H ,54HERROR NO. 7032 IN SUBROUTINE LOADS. TOO MANY GROUPSM0034600
     *...,I5)                                                           M0034700
C                                                                       M0034800
C...     END OF LOOP                                                    M0034900
C                                                                       M0035000
  103 CONTINUE                                                          M0035100
C                                                                       M0035200
C...     THIS ELEMENT HAS NO ENTRY IN LENGTH TABLE - ISSUE DIAGNOSTIC   M0035300
C                                                                       M0035400
      L = ASSOC(1,I)                                                    M0035500
      WRITE(VLFILE,104) CNAMTB(L)                                       M0035600
  104 FORMAT(1H ,46HERROR NO. 7033 IN SUBROUTINE LOADS.  ELEMENT  ,A6,  M0035700
     * 24H HAS NO GROUP ASSIGNMENT)                                     M0035800
      GO TO 107                                                         M0035900
C                                                                       M0036000
C...     MORE THAN MAX. NO. OF ELEMENTS ALLOWABLE IN ONE GROUP -        M0036100
C...     ISSUE DIAGNOSTIC                                               M0036200
C                                                                       M0036300
  105 WRITE(VLFILE,106) J                                               M0036400
  106 FORMAT (1H ,64HERROR NO. 7034 IN SUBROUTINE LOADS.  TOO MANY ELEMEM0036500
     *NTS IN GROUP ,I5)                                                 M0036600
      IGRP(J) = 0                                                       M0036700
C                                                                       M0036800
C...     END OF LOOP TO SET UP ELBIT                                    M0036900
C                                                                       M0037000
  107 CONTINUE                                                          M0037100
C                                                                       M0037200
C...                                                                    M0037300
C                                                                       M0037400
      INMBR = 0                                                         M0037500
      IDGIT = 0                                                         M0037600
C                                                                       M0037700
C...     THIS LOOP PUTS BCD OF EACH ELEMENT IN ASSOC IN CASSOC, AND     M0037800
C...     PUTS THE INTERNAL REPRESENTATION IN NEMTBL LOCATION CORRES.    M0037900
C...     TO ENTRY IN NAMTBL, AND SETS IDGIT AND INMBR TO THE NAMTBL     M0038000
C...     POINTERS OF DIGIT AND NUMBER RESPECTIVELY.                     M0038100
C                                                                       M0038200
      DO 140 I= 1,NUMEL                                                 M0038300
      L = ASSOC(1,I)                                                    M0038400
      CASSOC(I) = CNAMTB(L)                                             M0038910
      IF(CNAMTB(L).EQ.IDIGIT)IDGIT=L                                    M0038920
      IF(CNAMTB(L).EQ.INUMBR)INMBR=L                                    M0038930
      NEMTBL(L) = ELBIT(I)                                              M0038940
  140 CONTINUE                                                          M0038950
C...                                                                    M0039000
      MORE = .TRUE.                                                     M0039100
      TEMP(1) = PRODN(1)                                                M0039200
      PRODN(1) = 0                                                      M0039300
      IPROD = 1                                                         M0039400
      JEND = PRODI+1                                                    M0039500
C                                                                       M0039600
C...     THIS LOOP FORMS THE INTERNAL PRODUCTION TABLES IN PRODN.       M0039700
C...     TEMP CONTAINS NEXT ITEM, IPROD CONTAINS NEXT VACANT POSITION.  M0039800
C                                                                       M0039900
      DO 154 I = 2,JEND                                                 M0040000
C                                                                       M0040100
C...     IS NEXT ITEM NEGATIVE - I.E. THE LAST ELEMENT FOR THIS         M0040200
C...     SET OF ALTERNATIVES, OR THE PRODUCTION NUMBER.                 M0040300
C                                                                       M0040400
      IF (TEMP(1) .GT. 0) GO TO 152                                     M0040500
      TEMP(1) = -TEMP(1)                                                M0040600
C                                                                       M0040700
C...     IS IT POINTER TO PRODUCTION NUMBER                             M0040800
C                                                                       M0040900
      IF (((NAMTBL(TEMP(1)).NE.DIGIT(1))                                M0041000
     /   .OR. (IDGIT.EQ.TEMP(1)))                                       M0041100
     /   .AND.                                                          M0041200
     /   ((NAMTBL(TEMP(1)).NE.NUMBER(1))                                M0041300
     /   .OR. (INMBR.EQ.TEMP(1))))        GO TO 151                     M0041400
C                                                                       M0041500
C...     YES. IF LAST GROUP OF ALTERNATIVES HAS NOT BEEN TERMINATED,    M0041600
C...     ISSUE DIAGNOSTIC                                               M0041700
C                                                                       M0041800
      IF(PRODN(IPROD).NE.0) WRITE(VLFILE,150)                           M0041900
  150 FORMAT (1H ,61HERROR NO. 7035 IN SUBROUTINE LOADS.  INCOMPLETE GROM0042000
     *UP IGNORED)                                                       M0042100
C                                                                       M0042200
C...     STORE NEGATIVE NAMTBL POINTER IN PRODN(IPROD), AND NEXT        M0042300
C...     ITEM IN TEMP.                                                  M0042400
C                                                                       M0042500
      PRODN(IPROD) = -TEMP(1)                                           M0042600
      TEMP(1) = PRODN(I)                                                M0042700
      GO TO 153                                                         M0042800
C                                                                       M0042900
C...     END OF GROUP OF ALTERNATIVES. SET FLAG FOR NO MORE, OR THIS    M0043000
C...     ITEM INTO CURRENT WORD AND FETCH NEXT ITEM INTO TEMP.          M0043100
C                                                                       M0043200
  151 MORE = .FALSE.                                                    M0043300
  152 PRODN(IPROD) = ORF(PRODN(IPROD),NEMTBL(TEMP(1)))                  M0043400
      TEMP(1) =PRODN(I)                                                 M0043500
C                                                                       M0043600
C...     ARE THERE MORE ALTERNATIVES IN THIS GROUP                      M0043700
C                                                                       M0043800
      IF(MORE) GO TO 154                                                M0043900
C                                                                       M0044000
C...     NO. UPDATE POINTER TO NEXT VACANT POSITION, AND CLEAR THAT     M0044100
C...     WORD. SET FLAG FOR MORE ITEMS.                                 M0044200
C                                                                       M0044300
  153 IPROD = IPROD+1                                                   M0044400
      PRODN(IPROD) = 0                                                  M0044500
      MORE = .TRUE.                                                     M0044600
C                                                                       M0044700
C...     END OF LOOP                                                    M0044800
C                                                                       M0044900
  154   CONTINUE                                                        M0045000
C                                                                       M0045100
C...     SET IPROD TO NO. OF WORDS IN PRODUCTION TABLE,                 M0045200
C...     AND RETURN.                                                    M0045300
C                                                                       M0045400
      IPROD = IPROD-1                                                   M0045500
      RETURN                                                            M0046000
      END                                                               M0046100
**** SOURCE FILE : M0006718.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADT                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADT                                            M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    CFORM           SUBROUTINE    LOADG            M0000800
C          SUBROUTINE    LOADA                                          M0000900
C          SUBROUTINE    LOADI                                          M0001000
C          SUBROUTINE    LOADU                                          M0001100
C          SUBROUTINE    LOAD0                                          M0001200
C          SUBROUTINE    SPILL                                          M0001300
C                                                                       M0001400
      SUBROUTINE LOADT                                                  M0001500
C                                                                       M0001600
      IMPLICIT INTEGER (A-Z)                                            M0001700
C                                                                       M0001800
C        1.    NAME TABLE AND TABLE LIMITS                              M0001900
C                                                                       M0002000
      INCLUDE 'NAMETB.INC'                                              M0002110
C  NAMTBL:     INTEGER CORRESPONDING TO NAME TABLE ENTRY                M0002250
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002350
C                                                                       M0002500
C        2.    STACK AND POINTER STORAGE                                M0002600
C                                                                       M0002700
      COMMON/STKLST/STKLST                                              M0002800
      DIMENSION STKLST(3002),PRODR(3000)                                M0002900
C  PRODR:      ORDINAL NUMBERS OF THE PRD. TABLES IN SEQUENT. MODE      M0003000
      EQUIVALENCE (PRODR(1),STKLST(3))                                  M0003100
C                                                                       M0003200
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      M0003300
C                                                                       M0003400
      COMMON/CODES/CODES                                                M0003500
      DIMENSION CODES(150),DIGIT(2),CONGEO(2)                           M0003600
C  DIGIT:      (1)=CODE CLASS 10000,(2)=NAMTBL INDEX OF 'DIGIT '        M0003700
      EQUIVALENCE (DIGIT(1),CODES(19))                                  M0003800
C  CONGEO:     (1)=CODE CLASS 39000,(2)=NAMTBL INDEX OF 'CONGEO'        M0003900
      EQUIVALENCE (CONGEO(1),CODES(77))                                 M0004000
C                                                                       M0004100
C        6.    SYMBOLIC FILE DEFINITIONS                                M0004200
C                                                                       M0004300
      COMMON/SYMFIL/SYMFIL                                              M0004400
      DIMENSION SYMFIL(6)                                               M0004500
C  ELFILE:     I/O FILE NUMBER OF TRANSFORMED PRODUCTION TABLE          M0004600
      EQUIVALENCE (ELFILE,SYMFIL(4))                                    M0004700
C  LCDATA:     INPUT FILE NUMBER OF PRODUCTION TABLES SEQUEN. MODE      M0004800
      EQUIVALENCE (LCDATA,SYMFIL(5))                                    M0004900
C                                                                       M0005000
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0005100
C                                                                       M0005200
      COMMON/LDXSIZ/LDXSIZ                                              M0005300
      DIMENSION LDXSIZ(28)                                              M0005400
C  QSTACK:     DIMENSION OF ARRAY PRODR                                 M0005500
      EQUIVALENCE (QSTACK,LDXSIZ(12))                                   M0005600
C  QLEVPO:     DIMENSION OF ARRAY LEVPOS                                M0005700
      EQUIVALENCE (QLEVPO,LDXSIZ(13))                                   M0005800
C  QCLSWD:     DIMENSION OF ARRAY LENGTH                                M0005900
      EQUIVALENCE (QCLSWD,LDXSIZ(14))                                   M0006000
C                                                                       M0006100
C        8.    CONTROL FLAGS AND POINTERS                               M0006200
C                                                                       M0006300
      INCLUDE 'LDSCOM.INC'                                              M0006410
C  IBKPNT:     NAMTBL INDEX OF BRKPNT                                   M0006600
C  PRODI:      POINTER TO LAST ENTRY IN PRODN TABLE                     M0006800
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0007000
C  PDERR:      NAMTBL INDEX OF '28' = PROD. NOT FOUND                   M0007200
C                                                                       M0007400
C       11.    GEOMETRIC TABLE LOCATIONS                                M0007500
C                                                                       M0007600
C  GEOMLC:     START POSITION FOR A SRF TYPE IN THE GEOMETRIC TABLE     M0007700
      COMMON/GEOMLC/GEOMLC                                              M0007800
      DIMENSION GEOMLC(50)                                              M0007900
C                                                                       M0008000
C       13.    SPACE FOR PRODUCTION LISTS                               M0008100
C                                                                       M0008200
      INCLUDE 'PRODN.INC'                                               M0008310
C                                                                       M0008500
C       14.    LEVEL START OF THE PRODUCTIONS IN PRODR                  M0008600
C                                                                       M0008700
      COMMON/LEVPOS/LEVPOS                                              M0008800
      DIMENSION LEVPOS(12,250)                                          M0008900
C                                                                       M0009000
C       15.    INTEGER CODE AND LEVPOS COLUMN OF A PRODUCTION           M0009100
C                                                                       M0009200
      COMMON/PROCOD/PROCOD                                              M0009300
      DIMENSION PROCOD(2,1500)                                          M0009400
C                                                                       M0009500
C       16.    RELATION OF ORDINAL NUMBERS TO NAMTBL INDEXES            M0009600
C                                                                       M0009700
      COMMON/CLSWRD/CLSWRD                                              M0009800
      DIMENSION CLSWRD(100)                                             M0009900
C                                                                       M0010000
C       17.    OUTPUT SPACE FOR TRANSFORMED PRODUCTION LIST             M0010100
C                                                                       M0010200
      COMMON/OUTARY/OUTARY                                              M0010300
      CHARACTER*80 OUTARY                                               M0010400
C                                                                       M0010500
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION            M0010600
C                                                                       M0010700
      COMMON/BRANCH/BRANCH                                              M0010800
      DIMENSION BRANCH(515)                                             M0010900
C  LEVEL:      ACTUALLY PROCESSED PRODUCTION LEVEL                      M0011000
      EQUIVALENCE (LEVEL,BRANCH(5))                                     M0011100
C  MAXCLS:     NUMBER OF DEFINITIONS IN A TRANSFORMATION SECTIION       M0011200
      EQUIVALENCE (MAXCLS,BRANCH(6))                                    M0011300
C*                                                                      M0011400
C PURPOSE      TO CHANGE THE GEOMETRIC PRODUCTION TABLE FROM            M0011500
C              SEQUENTIAL READ FORMAT TO A BRANCHING MODE TABLE.        M0011600
C                                                                       M0011700
      CHARACTER*6 IDIGIT                                                M0011750
      DATA IDIGIT/'DIGI'/                                               M0011800
C**                                                                     M0011900
      QPRODR=QSTACK*2                                                   M0012000
      NAMTBL(IBKPNT)=CONGEO(1)                                          M0012100
      KK=0                                                              M0012200
C                                                                       M0012300
C     SAVE CONTENT OF PRODN IN PRODR                                    M0012400
C                                                                       M0012500
      MM=PRODI-1                                                        M0012600
C                                                                       M0012700
      DO 1 I=1,MM                                                       M0012800
      IF(I.GT.QPRODR)CALL SPILL(12,'LOADT   ')                          M0012900
    1 PRODR(I)=PRODN(I)                                                 M0013000
C                                                                       M0013100
C     ORDINAL NUMBERS REPLACE THE NAMTBL ADDRESSES OF THE CLASS WORDS   M0013200
C                                                                       M0013300
      REWIND ELFILE                                                     M0013400
      M=1                                                               M0013500
   10 MAXCLS=0                                                          M0013600
      CLSWRD(1)=0                                                       M0013700
      DO 60 IPRO=M,MM                                                   M0013800
      J=PRODR(IPRO)                                                     M0013900
      IF(J.EQ.-PDERR)GOTO 70                                            M0014000
      K=IABS(J)                                                         M0014100
      IF(NAMTBL(K).EQ.DIGIT(1).AND.CNAMTB(K).NE.IDIGIT)GOTO 60          M0014200
      DO 20 L=1,MAXCLS                                                  M0014300
      IF(K.EQ.CLSWRD(L))GOTO 30                                         M0014400
   20 CONTINUE                                                          M0014500
      MAXCLS=MAXCLS+1                                                   M0014600
      IF(MAXCLS.GT.QCLSWD)CALL SPILL(14,'LOADT   ')                     M0014700
      CLSWRD(MAXCLS)=K                                                  M0014800
      L=MAXCLS                                                          M0014900
   30 PRODR(IPRO)=L*ISIGN(1,J)                                          M0015000
   60 CONTINUE                                                          M0015100
      PRODR(IPRO)=-PDERR                                                M0015200
   70 IPRO=IPRO-1                                                       M0015300
C                                                                       M0015400
C     FILL THE ARRAY LEVPOS (LEVEL POSITION). IT IS                     M0015500
C     LEVPOS( 1,X)   PRIORITY NUMBER                                    M0015600
C     LEVPOS( 2,X)   START ADDRESS (IN PRODR) OF THE 2ND LEVEL          M0015700
C     LEVPOS( 3,X)   START ADDRESS (IN PRODR) OF THE 3RD LEVEL          M0015800
C     LEVPOS( 4,X)   START ADDRESS (IN PRODR) OF THE 4TH LEVEL          M0015900
C     LEVPOS( 5,X)   START ADDRESS (IN PRODR) OF THE 5TH LEVEL          M0016000
C     LEVPOS( 6,X)   START ADDRESS (IN PRODR) OF THE 6TH LEVEL          M0016100
C     LEVPOS( 7,X)   START ADDRESS (IN PRODR) OF THE 7TH LEVEL          M0016200
C     LEVPOS( 8,X)   START ADDRESS (IN PRODR) OF THE 8TH LEVEL          M0016300
C     LEVPOS( 9,X)   START ADDRESS (IN PRODR) OF THE 9TH LEVEL          M0016400
C     LEVPOS(10,X)   NUMBER OF LEVELS OF THE PRODUCTION                 M0016500
C     LEVPOS(11,X)   PRODUCTION NUMBER (NAMTBL ADDR.) AT FAILING SEARCH M0016600
C     LEVPOS(12,X)   PRODUCTION NUMBER (NAMTBL ADDR.)                   M0016700
C                                                                       M0016800
      DO 81 J=1,QLEVPO                                                  M0016900
      DO 80 I=1,11                                                      M0017000
   80 LEVPOS(I,J)=0                                                     M0017100
   81 CONTINUE                                                          M0017200
      DO 85 I=14,15                                                     M0017300
   85 BRANCH(I)=0                                                       M0017400
      LEVEL=0                                                           M0017500
C                                                                       M0017600
      KPRO=1                                                            M0017700
      LEVPOS(1,1)=M                                                     M0017800
      DO 100 I=M,IPRO                                                   M0017900
      J=PRODR(I)                                                        M0018000
      K=IABS(J)                                                         M0018100
      IF(K.GT.MAXCLS)GOTO 90                                            M0018200
      IF(J.NE.K)LEVEL=LEVEL+1                                           M0018300
      IF(LEVEL.GT.8.OR.LEVEL.LT.1)GOTO 100                              M0018400
      IF(LEVPOS(LEVEL+1,KPRO).EQ.0)LEVPOS(LEVEL+1,KPRO)=I+1             M0018500
      GOTO 100                                                          M0018600
   90 LEVPOS(10,KPRO)=LEVEL                                             M0018700
      LEVPOS(12,KPRO)=K                                                 M0018800
      IF(LEVEL.EQ.0)KPRO=KPRO-1                                         M0018900
      LEVEL=0                                                           M0019000
      KPRO=KPRO+1                                                       M0019100
      IF(KPRO.GT.QLEVPO)CALL SPILL(13,'LOADT   ')                       M0019200
      LEVPOS(1,KPRO)=I+1                                                M0019300
  100 CONTINUE                                                          M0019400
      KPRO=KPRO-1                                                       M0019500
      IF(KPRO.LT.2)GOTO 390                                             M0019600
C                                                                       M0019700
C     EXTEND LEVPOS ARRAY IN A WAY, THAT ONLY ONE PRIORITY NUMBER (CLASSM0019800
C     WORD) IS LEADING A TOTAL LINE OF LEVPOS                           M0019900
C                                                                       M0020000
      K=KPRO                                                            M0020100
      DO 140 I=1,K                                                      M0020200
      L=LEVPOS(1,I)                                                     M0020300
      N=LEVPOS(2,I)-1                                                   M0020400
      LEVPOS(1,I)=IABS(PRODR(L))                                        M0020500
      IF(L.EQ.N)GOTO 140                                                M0020600
      L=L+1                                                             M0020700
      DO 130 J=L,N                                                      M0020800
      IF(KPRO.GT.QLEVPO)CALL SPILL(13,'LOADT   ')                       M0020900
      KPRO=KPRO+1                                                       M0021000
      DO 120 LL=2,12                                                    M0021100
  120 LEVPOS(LL,KPRO)=LEVPOS(LL,I)                                      M0021200
  130 LEVPOS(1,KPRO)=IABS(PRODR(J))                                     M0021300
  140 CONTINUE                                                          M0021400
C                                                                       M0021500
      LL=1                                                              M0021600
      CALL LOAD0(LL,KPRO)                                               M0021700
C                                                                       M0021800
C                                                                       M0021900
C     LOAD ONE LEVEL PRODUCTION NUMBER FOR SECOND PRODUCTION NUMBER     M0022000
C                                                                       M0022100
      DO 155 I=2,KPRO                                                   M0022200
      IF(LEVPOS(10,I).NE.1)GOTO 155                                     M0022300
      J=LEVPOS(1,I)                                                     M0022400
      N=I-1                                                             M0022500
      DO 150 L=1,N                                                      M0022600
      IF(LEVPOS(1,L).NE.J)GOTO 150                                      M0022700
      LEVPOS(1,I)=0                                                     M0022800
      LEVPOS(11,L)=LEVPOS(12,I)                                         M0022900
  150 CONTINUE                                                          M0023000
  155 CONTINUE                                                          M0023100
C                                                                       M0023200
C         DELETE  SINGLE LEVEL PRODUCTIONS                              M0023300
C                                                                       M0023400
      K=KPRO                                                            M0023500
      KPRO=0                                                            M0023600
      DO 170 I=1,K                                                      M0023700
      IF(LEVPOS(1,I).EQ.0)GOTO 170                                      M0023800
      KPRO=KPRO+1                                                       M0023900
      DO 160 L=1,12                                                     M0024000
  160 LEVPOS(L,KPRO)=LEVPOS(L,I)                                        M0024100
  170 CONTINUE                                                          M0024200
C                                                                       M0024300
  390 KK=KK+1                                                           M0024400
      LL=GEOMLC(KK)                                                     M0024500
      GEOMLC(KK)=0                                                      M0024600
      OUTARY=' '                                                        M0024800
      CALL CFORM(CNAMTB(LL),OUTARY,8,6)                                 M0024900
      CALL CFORM('/$$',OUTARY,14,3)                                     M0025000
      WRITE(ELFILE,999)OUTARY                                           M0025100
      LL=1                                                              M0025200
      IPROD=0                                                           M0025300
      CALL LOADU(LL,KPRO)                                               M0025400
C                                                                       M0025500
C         OUTPUT OF A GEOMETRIC PRODUCTION GROUP                        M0025600
C                                                                       M0025700
      CALL LOADA                                                        M0025800
      M=IPRO+2                                                          M0025900
      OUTARY=' '                                                        M0026100
      IF(M.LT.MM)GOTO 10                                                M0026200
C                                                                       M0026300
      CALL CFORM('FINI',OUTARY,8,4)                                     M0026400
      WRITE(ELFILE,999)OUTARY                                           M0026500
      REWIND ELFILE                                                     M0026600
      KK=2                                                              M0026700
      LL=LCDATA                                                         M0026800
      LCDATA=ELFILE                                                     M0026900
      CALL LOADI(KK)                                                    M0027000
      LCDATA=LL                                                         M0027100
C                                                                       M0027200
      RETURN                                                            M0027300
  999 FORMAT(A80)                                                       M0027400
      END                                                               M0027500
**** SOURCE FILE : M0006719.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE LOADU                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   LOADU(LL,KK)                                     M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    LOAD1           SUBROUTINE    LOADB            M0000800
C          SUBROUTINE    LOAD2           SUBROUTINE    LOADT            M0000900
C          SUBROUTINE    SORT                                           M0001000
C          SUBROUTINE    SPILL                                          M0001100
C                                                                       M0001200
      SUBROUTINE LOADU(LL,KK)                                           M0001300
C                                                                       M0001400
      IMPLICIT INTEGER (A-Z)                                            M0001500
C                                                                       M0001600
C        2.    STACK AND POINTER STORAGE                                M0001700
C                                                                       M0001800
      COMMON/STKLST/STKLST                                              M0001900
      DIMENSION STKLST(3002),PRODR(3000)                                M0002000
C  PRODR:      ORDINAL NUMBERS OF THE PRD. TABLES IN SEQUENT. MODE      M0002100
      EQUIVALENCE (PRODR(1),STKLST(3))                                  M0002200
C                                                                       M0002300
C        6.    SYMBOLIC FILE DEFINITIONS                                M0002400
C                                                                       M0002500
      COMMON/SYMFIL/SYMFIL                                              M0002600
      DIMENSION SYMFIL(6)                                               M0002700
C  VLFILE:     VERIFICATION LISTING FILE                                M0002800
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0002900
C                                                                       M0003000
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0003100
C                                                                       M0003200
      COMMON/LDXSIZ/LDXSIZ                                              M0003300
      DIMENSION LDXSIZ(28)                                              M0003400
C  QLENGT:     DIMENSION OF ARRAY LENGTH                                M0003500
      EQUIVALENCE (QLENGT,LDXSIZ(6))                                    M0003600
C  QPRODN:     DIMENSION OF ARRAY PRODN                                 M0003700
      EQUIVALENCE (QPRODN,LDXSIZ(7))                                    M0003800
C                                                                       M0003900
C        8.    CONTROL FLAGS AND POINTERS                               M0004000
C                                                                       M0004100
      INCLUDE 'LDSCOM.INC'                                              M0004210
C  ERROR:      FLAG SET IF ERROR IN PRODUCTION TABLE                    M0004500
C  IPROD:      NUMBER OF ITEMS IN PRODUCTION TABLES                     M0004700
C  BREAK:      VALUE OF POSTN FOR BRKPNT                                M0004900
C  PDERR:      NAMTBL INDEX OF '28' = PROD. NOT FOUND                   M0005100
C  KNT:        NAMTBL INDEX OF ALL                                      M0005300
C                                                                       M0005500
C        9.    ITEM AND GROUP CONTROL                                   M0005600
C                                                                       M0005700
      INCLUDE 'ASSOC.INC'                                               M0005810
C  JASSOC:     STORAGE OF CLASS WORD COLLECTION. TABLE COMPRESSION      M0006000
C                                                                       M0006200
C       10.    ITEM AND GROUP CONTROL                                   M0006300
C                                                                       M0006400
      COMMON/LENGTH/LENGTH                                              M0006500
      DIMENSION LENGTH(3,100)                                           M0006600
C                                                                       M0006700
C       13.    SPACE FOR PRODUCTION LISTS                               M0006800
C                                                                       M0006900
      INCLUDE 'PRODN.INC'                                               M0007010
C  PROD2:      CONTAINS PRODUCTION TABLES IN JUMP MODE                  M0007200
C                                                                       M0007400
C       14.    LEVEL START OF THE PRODUCTIONS IN PRODR                  M0007500
C                                                                       M0007600
      COMMON/LEVPOS/LEVPOS                                              M0007700
      DIMENSION LEVPOS(12,250)                                          M0007800
C                                                                       M0007900
C       16.    RELATION OF ORDINAL NUMBERS TO NAMTBL INDEXES            M0008000
C                                                                       M0008100
      COMMON/CLSWRD/CLSWRD                                              M0008200
      DIMENSION CLSWRD(100)                                             M0008300
C                                                                       M0008400
C       18.    CONTROL FLAGS AND POINTERS FOR TRANSFORMATION            M0008500
C                                                                       M0008600
      COMMON/BRANCH/BRANCH                                              M0008700
      DIMENSION BRANCH(515),LEVPRD(2,250)                               M0008800
C  TENMIL:     CONTAINS DIVISOR 10000                                   M0008900
      EQUIVALENCE (TENMIL,BRANCH(2))                                    M0009000
C  LEVEL:      ACTUALLY PROCESSED PRODUCTION LEVEL                      M0009100
      EQUIVALENCE (LEVEL,BRANCH(5))                                     M0009200
C  MAXCLS:     NUMBER OF DEFINITIONS IN A TRANSFORMATION SECTIION       M0009300
      EQUIVALENCE (MAXCLS,BRANCH(6))                                    M0009400
C  IADRES:     CODE DESCRIBES LEVEL NUMBER AND LEADING CLASS WORD       M0009500
      EQUIVALENCE (IADRES,BRANCH(7))                                    M0009600
C  ID1:        BEGIN OF A REGION IN ARRAY PROCOD TO BE PROCESSED        M0009700
      EQUIVALENCE (ID1,BRANCH(8))                                       M0009800
C  ID2:        END OF A REGION IN ARRAY PROCOD TO BE PROCESSED          M0009900
      EQUIVALENCE (ID2,BRANCH(9))                                       M0010000
C  IRET:       ALL LEVELS ARE PROCESSED                                 M0010100
      EQUIVALENCE (IRET,BRANCH(11))                                     M0010200
C  STRTPR:     FIRST PRODCTION COLUMN IN ARRAY LEVPOS                   M0010300
      EQUIVALENCE (STRTPR,BRANCH(12))                                   M0010400
C  ENDPRD:     LAST PRODCTION COLUMN IN ARRAY LEVPOS                    M0010500
      EQUIVALENCE (ENDPRD,BRANCH(13))                                   M0010600
C  LGT:        POINTER TO LAST ENTRY IN LENGTH                          M0010700
      EQUIVALENCE (LGT,BRANCH(14))                                      M0010800
C  CONCAT:     =1 IF TRANSFORMATION OF THE CONCATENATING PRODUCTIONS    M0010900
      EQUIVALENCE (CONCAT,BRANCH(15))                                   M0011000
C  LEVPRD:     CONTAINS THE PRODUCTION NUMBERS FOR A FAILED SEARCH      M0011100
      EQUIVALENCE (LEVPRD(1,1),BRANCH(16))                              M0011200
C*                                                                      M0011300
C PURPOSE    TO CONTROL THE LEVEL GENERATION AND CONNECTION             M0011400
C            TO HANDLE THE PARTICULAR PRODUCTIONS                       M0011500
C                                                                       M0011600
C     HANDLING OF THE FIRST LEVEL, SEARCH FOR PARTICULAR PRODUCTIONS    M0011700
C                                                                       M0011800
C     PROD2(1,X)   PROD2(2,X)                                           M0011900
C     N*TENMIL+I1  IN              I1  =CLASS WORD ORDINAL NUMBER       M0012000
C                                  IN  =CLASS WORD ORDINAL NUMBER OF    M0012100
C                                       LEVEL N , N =LEVEL NUMBER       M0012200
C     TENMIL +I1   TENMIL+A        A   =ADDRESS OF JASSOC FOR A COLLEC- M0012300
C                                       TED GROUP OF CLASS WORDS        M0012400
C     0            -LEVPOS(10,Y)   PRODUCTION NUMBER.END OF PRODUCTION  M0012500
C     GT.0         GT.PROD2(1,X)   POSITIONS OF HIGHER LEVELLED CLASS   M0012600
C                                  WORDS IN ARRAY PROCOD                M0012700
C     LT.0         GT.0            PARTICULAR HIGHER LEVELLED PRODUCTIONM0012800
C                                  STARTING ON AT PRODR(-PROD2(1,X),    M0012900
C**                                                      PROD2(2,X))    M0013000
      IF(KK.LT.2)GOTO 580                                               M0013100
      CALL SORT(LEVPOS(1,LL),12,KK+1-LL,1,2)                            M0013200
      LGT=0                                                             M0013300
      STRTPR=LL                                                         M0013400
      ENDPRD=KK                                                         M0013500
      II=IPROD                                                          M0013600
      III=IPROD+1                                                       M0013700
      I1=0                                                              M0013800
      M=0                                                               M0013900
      DO 120 I=LL,KK                                                    M0014000
      IF(LEVPOS(11,I).EQ.0)LEVPOS(11,I)=PDERR                           M0014100
      LEVPRD(1,I)=0                                                     M0014200
      LEVPRD(2,I)=PDERR                                                 M0014300
      IF(I1.EQ.LEVPOS(1,I))GOTO 110                                     M0014400
      I1=LEVPOS(1,I)                                                    M0014500
      J1=I                                                              M0014600
      IPROD=IPROD+2                                                     M0014700
      IF(IPROD.GT.QPRODN/2)CALL SPILL(7,'LOADU   ')                     M0014800
      PROD2(1,IPROD-1)=TENMIL+I1                                        M0014900
      PROD2(2,IPROD-1)=I1                                               M0015000
      IF(CONCAT.EQ.1)GOTO 100                                           M0015100
      IF(LENGTH(1,I1).LT.0)PROD2(2,IPROD-1)=TENMIL-LENGTH(1,I1)         M0015200
  100 IF(LEVPOS(10,I).GT.1)GOTO 110                                     M0015300
      PROD2(1,IPROD)=0                                                  M0015400
      PROD2(2,IPROD)=-LEVPOS(12,I)                                      M0015500
      GOTO 120                                                          M0015600
  110 PROD2(1,IPROD)=J1                                                 M0015700
      PROD2(2,IPROD)=I                                                  M0015800
  120 CONTINUE                                                          M0015900
      IF(CLSWRD(I1).EQ.KNT)GOTO 130                                     M0016000
      IPROD=IPROD+1                                                     M0016100
      IF(IPROD.GT.QPRODN/2)CALL SPILL(7,'LOADU   ')                     M0016200
      PROD2(1,IPROD)=0                                                  M0016300
      PROD2(2,IPROD)=-PDERR                                             M0016400
C                                                                       M0016500
C     FIND ALL POSSIBLE VARIATIONS OF A STARTING CLASS WORD             M0016600
C                                                                       M0016700
  130 LPROD=IPROD                                                       M0016800
  140 II=II+1                                                           M0016900
      IF(II.GT.LPROD)GOTO 240                                           M0017000
      IF(PROD2(1,II).LT.TENMIL)GOTO 140                                 M0017100
      IF(PROD2(1,II+1).LT.1)GOTO 140                                    M0017200
      I1=PROD2(2,II)                                                    M0017300
      IF(I1.GT.TENMIL)I1=JASSOC(I1+1-TENMIL)                            M0017400
      ID1=PROD2(1,II+1)                                                 M0017500
      ID2=PROD2(2,II+1)                                                 M0017600
      IF(ID2.GT.ID1)GOTO 150                                            M0017700
      PROD2(1,II+1)=-2                                                  M0017800
      LEVPOS(11,ID1)=-LEVPOS(11,ID1)                                    M0017900
      GOTO 140                                                          M0018000
C                                                                       M0018100
C         SECOND LEVEL PROCESSING                                       M0018200
C         PREPARE PRODUCTION CODE OF LEVEL 2 TO 5                       M0018300
C                                                                       M0018400
  150 LEVEL=2                                                           M0018500
      CALL LOAD1                                                        M0018600
      J1=IPROD                                                          M0018700
      IADRES=LEVEL*TENMIL+I1                                            M0018800
      CALL LOAD2(II)                                                    M0018900
      J2=IPROD                                                          M0019000
      IF(IRET.EQ.1)GOTO 140                                             M0019100
C                                                                       M0019200
  160 J1=J1+1                                                           M0019300
      IF(J1.GT.J2)GOTO 140                                              M0019400
      IF(PROD2(1,J1).LT.TENMIL)GOTO 160                                 M0019500
      IF(PROD2(1,J1+1).LT.1)GOTO 160                                    M0019600
C                                                                       M0019700
C         THIRD LEVEL PROCESSING                                        M0019800
C                                                                       M0019900
      ID1=PROD2(1,J1+1)                                                 M0020000
      ID2=PROD2(2,J1+1)                                                 M0020100
      LEVEL=3                                                           M0020200
      IADRES=LEVEL*TENMIL+I1                                            M0020300
      J3=IPROD                                                          M0020400
      CALL LOAD2(J1)                                                    M0020500
      J4=IPROD                                                          M0020600
      IF(IRET.EQ.1)GOTO 160                                             M0020700
C                                                                       M0020800
  170 J3=J3+1                                                           M0020900
      IF(J3.GT.J4)GOTO 160                                              M0021000
      IF(PROD2(1,J3).LT.TENMIL)GOTO 170                                 M0021100
      IF(PROD2(1,J3+1).LT.1)GOTO 170                                    M0021200
C                                                                       M0021300
C         FORTH LEVEL PROCESSING                                        M0021400
C                                                                       M0021500
      ID1=PROD2(1,J3+1)                                                 M0021600
      ID2=PROD2(2,J3+1)                                                 M0021700
      LEVEL=4                                                           M0021800
      IADRES=LEVEL*TENMIL+I1                                            M0021900
      J5=IPROD                                                          M0022000
      CALL LOAD2(J3)                                                    M0022100
      J6=IPROD                                                          M0022200
      IF(IRET.EQ.1)GOTO 170                                             M0022300
C                                                                       M0022400
  180 J5=J5+1                                                           M0022500
      IF(J5.GT.J6)GOTO 170                                              M0022600
      IF(PROD2(1,J5).LT.TENMIL)GOTO 180                                 M0022700
      IF(PROD2(1,J5+1).LT.1)GOTO 180                                    M0022800
C                                                                       M0022900
C         FIFTH LEVEL PROCESSING                                        M0023000
C                                                                       M0023100
      ID1=PROD2(1,J5+1)                                                 M0023200
      ID2=PROD2(2,J5+1)                                                 M0023300
      LEVEL=5                                                           M0023400
      IADRES=LEVEL*TENMIL+I1                                            M0023500
      J7=IPROD                                                          M0023600
      CALL LOAD2(J5)                                                    M0023700
      J8=IPROD                                                          M0023800
      IF(IRET.EQ.1)GOTO 180                                             M0023900
C                                                                       M0024000
C         PREPARE PRODUCTION CODE OF LEVEL 6 TO 9                       M0024100
C                                                                       M0024200
  190 J7=J7+1                                                           M0024300
      IF(J7.GT.J8)GOTO 180                                              M0024400
      IF(PROD2(1,J7).LT.TENMIL)GOTO 190                                 M0024500
      IF(PROD2(1,J7+1).LT.1)GOTO 190                                    M0024600
      LEVEL=6                                                           M0024700
      ID1=PROD2(1,J7+1)                                                 M0024800
      ID2=PROD2(2,J7+1)                                                 M0024900
      CALL LOAD1                                                        M0025000
C                                                                       M0025100
C         SIXTH LEVEL PROCESSING                                        M0025200
C                                                                       M0025300
      J9=IPROD                                                          M0025400
      IADRES=LEVEL*TENMIL+I1                                            M0025500
      CALL LOAD2(J7)                                                    M0025600
      J10=IPROD                                                         M0025700
      IF(IRET.EQ.1)GOTO 190                                             M0025800
C                                                                       M0025900
  200 J9=J9+1                                                           M0026000
      IF(J9.GT.J10)GOTO 190                                             M0026100
      IF(PROD2(1,J9).LT.TENMIL)GOTO 200                                 M0026200
      IF(PROD2(1,J9+1).LT.1)GOTO 200                                    M0026300
C                                                                       M0026400
C         SEVENTH LEVEL PROCESSING                                      M0026500
C                                                                       M0026600
      ID1=PROD2(1,J9+1)                                                 M0026700
      ID2=PROD2(2,J9+1)                                                 M0026800
      LEVEL=7                                                           M0026900
      IADRES=LEVEL*TENMIL+I1                                            M0027000
      J11=IPROD                                                         M0027100
      CALL LOAD2(J9)                                                    M0027200
      J12=IPROD                                                         M0027300
      IF(IRET.EQ.1)GOTO 200                                             M0027400
C                                                                       M0027500
  210 J11=J11+1                                                         M0027600
      IF(J11.GT.J12)GOTO 200                                            M0027700
      IF(PROD2(1,J11).LT.TENMIL)GOTO 210                                M0027800
      IF(PROD2(1,J11+1).LT.1)GOTO 210                                   M0027900
C                                                                       M0028000
C         8TH LEVEL PROCESSING                                          M0028100
C                                                                       M0028200
      ID1=PROD2(1,J11+1)                                                M0028300
      ID2=PROD2(2,J11+1)                                                M0028400
      LEVEL=8                                                           M0028500
      IADRES=LEVEL*TENMIL+I1                                            M0028600
      CALL LOAD2(J11)                                                   M0028700
      IF(IRET.EQ.1)GOTO 210                                             M0028800
C                                                                       M0028900
      WRITE(VLFILE,230)                                                 M0029000
  230 FORMAT(1H ,99HERROR NO. 7049 IN SUBROUTINE LOADU. THE SUBROUTINE MM0029100
     *UST BE EXTENDED TO DISSOLVE LONGER PRODUCTIONS.)                  M0029200
      ERROR=.TRUE.                                                      M0029300
      GOTO 570                                                          M0029400
C                                                                       M0029500
C     CONNECT THE LEVELS BY INSERTING THE ADDRESSES (GOTO)              M0029600
C                                                                       M0029700
  240 DO 280 I=III,IPROD                                                M0029800
      J1=PROD2(1,I)                                                     M0029900
      IF(J1.LE.TENMIL)GOTO 280                                          M0030000
      PROD2(1,I)=TENMIL                                                 M0030100
      IF(PROD2(1,I+1).LT.1)GOTO 280                                     M0030200
      J1=J1+TENMIL                                                      M0030300
      J=I+2                                                             M0030400
      DO 250 M=J,IPROD                                                  M0030500
      IF(J1.EQ.PROD2(1,M).AND.PROD2(2,M+1).NE.0)GOTO 260                M0030600
  250 CONTINUE                                                          M0030700
      GOTO 280                                                          M0030800
  260 PROD2(1,I+1)=0                                                    M0030900
      PROD2(2,I+1)=TENMIL+4*M                                           M0031000
  270 IF(PROD2(1,M+1).GT.0)PROD2(2,M+1)=0                               M0031100
      IF(PROD2(1,M+1).LT.1)PROD2(1,M)=TENMIL                            M0031200
      M=M+2                                                             M0031300
      IF(J1.NE.PROD2(1,M))GOTO 280                                      M0031400
      GOTO 270                                                          M0031500
  280 CONTINUE                                                          M0031600
C                                                                       M0031700
C     SEARCH FOR UNIFORM END SECTIONS OF THE PRODUCTIONS                M0031800
C                                                                       M0031900
      J1=IPROD+1                                                        M0032000
      J3=STRTPR-1                                                       M0032100
  290 J2=J1                                                             M0032200
  300 J3=J3+1                                                           M0032300
      IF(J3.GE.ENDPRD)GOTO 450                                          M0032400
      IF(LEVPOS(11,J3).GT.0)GOTO 300                                    M0032500
      LEVPOS(11,J3)=IABS(LEVPOS(11,J3))                                 M0032600
      PROD2(1,J2)=J3                                                    M0032700
      J4=J3+1                                                           M0032800
      DO 310 I=J4,ENDPRD                                                M0032900
      IF(LEVPOS(11,I).GT.0)GOTO 310                                     M0033000
      IF(LEVPOS(12,I).NE.LEVPOS(12,J3))GOTO 310                         M0033100
      IF(IABS(LEVPOS(11,I)).NE.IABS(LEVPOS(11,J3)))GOTO 310             M0033200
      IF(LEVPRD(1,I).NE.LEVPRD(1,J3))GOTO 310                           M0033300
      LEVPOS(11,I)=IABS(LEVPOS(11,I))                                   M0033400
      J2=J2+1                                                           M0033500
      PROD2(1,J2)=I                                                     M0033600
  310 CONTINUE                                                          M0033700
      IF(J1.EQ.J2)GOTO 300                                              M0033800
      J4=0                                                              M0033900
      DO 340 I=1,IPROD                                                  M0034000
      IF(PROD2(1,I).GE.0)GOTO 340                                       M0034100
      DO 320 J=J1,J2                                                    M0034200
      IF(PROD2(2,I).EQ.PROD2(1,J))GOTO 330                              M0034300
  320 CONTINUE                                                          M0034400
      GOTO 340                                                          M0034500
  330 IF(J4.GE.QLENGT)GOTO 340                                          M0034600
      J4=J4+1                                                           M0034700
      LENGTH(1,J4)=-PROD2(1,I)                                          M0034800
      LENGTH(2,J4)=PROD2(2,I)                                           M0034900
      LENGTH(3,J4)=I                                                    M0035000
  340 CONTINUE                                                          M0035100
  350 J5=-1                                                             M0035200
      J6=0                                                              M0035300
      DO 360 I=1,J4                                                     M0035400
      IF(LENGTH(2,I).LT.0)GOTO 360                                      M0035500
      J7=LEVPOS(10,LENGTH(2,I))-LENGTH(1,I)                             M0035600
      IF(J5-J7)355,354,360                                              M0035700
  354 IF(LEVPOS(10,LENGTH(2,I)).LE.J6)GOTO 360                          M0035800
  355 J5=J7                                                             M0035900
      J6=LEVPOS(10,LENGTH(2,I))                                         M0036000
      J11=I                                                             M0036100
  360 CONTINUE                                                          M0036200
      IF(J5.LT.0)GOTO 290                                               M0036300
      J7=LENGTH(2,J11)                                                  M0036400
      J8=LEVPOS(10,J7)+1                                                M0036500
      IF(J8.LT.10)GOTO 380                                              M0036600
      J8=LEVPOS(9,J7)                                                   M0036700
  370 J8=J8+1                                                           M0036800
      K=IABS(PRODR(J8))                                                 M0036900
      IF(K.GT.MAXCLS)GOTO 390                                           M0037000
      GOTO 370                                                          M0037100
  380 J8=LEVPOS(J8,J7)                                                  M0037200
  390 DO 440 I=1,J4                                                     M0037300
      J9=LENGTH(2,I)                                                    M0037400
      IF(J7.EQ.J9.OR.J9.LT.0)GOTO 440                                   M0037500
      J6=LEVPOS(10,J9)+1                                                M0037600
      IF(J6.LT.10)GOTO 410                                              M0037700
      J6=LEVPOS(9,J9)                                                   M0037800
  400 J6=J6+1                                                           M0037900
      K=IABS(PRODR(J6))                                                 M0038000
      IF(K.GT.MAXCLS)GOTO 420                                           M0038100
      GOTO 400                                                          M0038200
  410 J6=LEVPOS(J6,J9)                                                  M0038300
  420 J2=LEVPOS(LENGTH(1,I),J9)                                         M0038400
      J10=J8                                                            M0038500
  430 J10=J10-1                                                         M0038600
      J6 =J6 -1                                                         M0038700
      IF(PRODR(J6).NE.PRODR(J10))GOTO 440                               M0038800
      IF(J6.GT.J2)GOTO 430                                              M0038900
      J=LENGTH(3,I)                                                     M0039000
      PROD2(1,J)=PROD2(1,J)+LEVPOS(10,J9)-LEVPOS(10,J7)                 M0039100
      PROD2(2,J)=J7                                                     M0039200
      LENGTH(2,I)=-1                                                    M0039300
  440 CONTINUE                                                          M0039400
C                                                                       M0039500
      LENGTH(2,J11)=-1                                                  M0039600
      GOTO 350                                                          M0039700
  450 LEVPOS(11,ENDPRD)=IABS(LEVPOS(11,ENDPRD))                         M0039800
      BREAK=IPROD                                                       M0039900
      IF(CONCAT.EQ.1)GOTO 570                                           M0040000
C                                                                       M0040100
C     COLLECT THE FINAL PART OF ALL PARTICULAR PRODUCTIONS IN 'LENGTH'  M0040200
C                                                                       M0040300
      J10=BREAK-1                                                       M0040400
      DO 560 I=III,J10                                                  M0040500
      IF(PROD2(1,I).GE.0)GOTO 560                                       M0040600
      J1=1                                                              M0040700
      J2=PROD2(2,I)                                                     M0040800
      J3=I+1                                                            M0040900
      J4=-PROD2(1,I)                                                    M0041000
      J5=LEVPOS(10,J2)                                                  M0041100
      LENGTH(1,J1)=I                                                    M0041200
      LENGTH(2,J1)=J4                                                   M0041300
C                                                                       M0041400
      DO 490 K=J3,BREAK                                                 M0041500
      IF(PROD2(1,K).GE.0)GOTO 490                                       M0041600
      IF(PROD2(2,K).NE.J2)GOTO 490                                      M0041700
      J1=J1+1                                                           M0041800
      LENGTH(1,J1)=K                                                    M0041900
      LENGTH(2,J1)=-PROD2(1,K)                                          M0042000
      J4=MIN(LENGTH(2,J1),J4)                                           M0042100
  490 CONTINUE                                                          M0042200
C                                                                       M0042300
      DO 500 K=1,J1                                                     M0042400
      J3=LENGTH(1,K)                                                    M0042500
      PROD2(1,J3)=0                                                     M0042600
  500 PROD2(2,J3)=TENMIL+4*(IPROD+LENGTH(2,K)-J4+1)                     M0042700
C                                                                       M0042800
      J6=MIN(8,J5)                                                      M0042900
      DO 510 K=J4,J6                                                    M0043000
      IPROD=IPROD+1                                                     M0043100
      PROD2(1,IPROD)=LEVPOS(K,J2)                                       M0043200
  510 PROD2(2,IPROD)=LEVPOS(K+1,J2)-1                                   M0043300
      IF(J5.LT.9)GOTO 550                                               M0043400
      J6=LEVPOS(9,J2)-1                                                 M0043500
  520 J6=J6+1                                                           M0043600
      IF(IABS(PRODR(J6)).GT.MAXCLS)GOTO 550                             M0043700
      J7=J6                                                             M0043800
      IF(PRODR(J7).LT.0)GOTO 540                                        M0043900
  530 J7=J7+1                                                           M0044000
      IF(PRODR(J7).GT.0)GOTO 530                                        M0044100
  540 IPROD=IPROD+1                                                     M0044200
      PROD2(1,IPROD)=J6                                                 M0044300
      PROD2(2,IPROD)=J7                                                 M0044400
      J6=J7                                                             M0044500
      GOTO 520                                                          M0044600
C                                                                       M0044700
  550 IPROD=IPROD+2                                                     M0044800
      PROD2(1,IPROD)=0                                                  M0044900
      PROD2(1,IPROD-1)=0                                                M0045000
      PROD2(2,IPROD)=-IABS(LEVPOS(11,J2))                               M0045100
      IF(LEVPRD(2,J2).LT.PDERR)PROD2(2,IPROD)=-LEVPRD(1,J2)             M0045200
      PROD2(2,IPROD-1)=-LEVPOS(12,J2)                                   M0045300
  560 CONTINUE                                                          M0045400
C                                                                       M0045500
  570 RETURN                                                            M0045600
C                                                                       M0045700
  580 BREAK=0                                                           M0045800
      IF(MAXCLS.EQ.0)GOTO 620                                           M0045900
      J6=LEVPOS(10,1)                                                   M0046000
      J5=MIN(8,J6)                                                      M0046100
      DO 590 I=1,J5                                                     M0046200
      IPROD=IPROD+1                                                     M0046300
      PROD2(1,IPROD)=LEVPOS(IPROD, 1)                                   M0046400
  590 PROD2(2,IPROD)=LEVPOS(IPROD+1,1)-1                                M0046500
      IF(J6.LT.9)GOTO 620                                               M0046600
      J5=PROD2(2,IPROD)                                                 M0046700
      DO 610 I=9,J6                                                     M0046800
      IPROD=IPROD+1                                                     M0046900
      J5=J5+1                                                           M0047000
      PROD2(1,IPROD)=J5                                                 M0047100
  600 IF(PRODR(J5).LT.0)GOTO 610                                        M0047200
      J5=J5+1                                                           M0047300
      GOTO 600                                                          M0047400
  610 PROD2(2,IPROD)=J5                                                 M0047500
  620 IPROD=IPROD+2                                                     M0047600
      PROD2(1,IPROD)=0                                                  M0047700
      PROD2(1,IPROD-1)=0                                                M0047800
      PROD2(2,IPROD)=-PDERR                                             M0047900
      PROD2(2,IPROD-1)=-LEVPOS(12,1)                                    M0048000
      GOTO 570                                                          M0048100
C                                                                       M0048200
      END                                                               M0048300
**** SOURCE FILE : M0006724.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE NAME                                  M0000200
C                                                                       M0000300
C LINKAGE       CALL    NAME  (STR)                                     M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    HELP            SUBROUTINE    LOADG            M0000800
C                                        SUBROUTINE    LOADM            M0000900
C                                        SUBROUTINE    LOADN            M0001000
C                                        SUBROUTINE    LOADP            M0001100
C                                        SUBROUTINE    INPUT            M0001200
C                                                                       M0001300
      INTEGER  FUNCTION  NAME  (STR)                                    M0001400
C                                                                       M0001500
      IMPLICIT INTEGER (A-Z)                                            M0001600
C                                                                       M0001700
C        1.    NAME TABLE AND TABLE LIMITS                              M0001800
C                                                                       M0001900
      INCLUDE 'NAMETB.INC'                                              M0002010
C  NAMEST:     NAMTBL INDEX OF BEGIN OF THE PART PROGRAM NAME  SECTION  M0002200
C  NAMMAX:     NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     M0002400
C  NAMTBL:     INTEGER CODE CORRESPONDING TO NAME TABLE ENTRY           M0002550
C  CNAMTB:     NAME TABLE OR DICTIONARY                                 M0002650
C                                                                       M0002800
C        6.    SYMBOLIC FILE DEFINITIONS                                M0002900
C                                                                       M0003000
      COMMON/SYMFIL/SYMFIL                                              M0003100
      DIMENSION SYMFIL(6)                                               M0003200
C  VLFILE:     VERIFICATION LISTING FILE                                M0003300
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0003400
C*                                                                      M0003500
C PURPOSE      TO FIND THE POSITION IN NAMTBL OF A BCD NAME,            M0003600
C              AND TO PUT THE NAME INTO NAMTBL IF IT IS NOT             M0003700
C              ALREADY THERE.                                           M0003800
C ARGUMENTS    STR     CHARACTER STRING CONTAINING THE                  M0003900
C              SYMBOLIC NAME.                                           M0004000
C NOTES        THE NAMTBL IS SEARCHED USING A HASH TECHNIQUE.           M0004100
C                                                                       M0004200
C LOCAL                                INITIAL                          M0004300
C VARIABLES    NAME   DIMENSION  TYPE  VALUE   DESCRIPTION              M0004400
C              STR                C            ARGUMENT OF FUNCTION =   M0004500
C                                              SYMBOLIC NAME            M0004600
C              BCD                I            BCD OF NAME              M0004650
C              I                  I            INDEX OF DO LOOP         M0004700
C              J                  I            MASK TABLE SEARCH        M0004800
C                                              STARTING POINT           M0004900
C              NAME               I            FUNCTION NAME            M0005000
C                                                                       M0005100
      CHARACTER*6 STR                                                   M0005200
C**                                                                     M0005300
C**   CALCULATE BCD                                                     M0005305
C                                                                       M0005310
      BCD=BCDF(STR(1:4))                                                M0005320
C                                                                       M0005360
C...     FIND STARTING PLACE IN TABLE.                                  M0005400
C                                                                       M0005500
   10 J=MOD(BCD,NAMMAX-NAMEST)                                          M0005600
      IF (J.LT.0) THEN                                                  M0005610
        J=J+NAMMAX                                                      M0005620
      ELSE                                                              M0005630
        J=J+NAMEST                                                      M0005640
      ENDIF                                                             M0005650
C                                                                       M0005700
C...     SEARCH FROM THERE UP TO TOP OF TABLE.                          M0005800
C                                                                       M0005900
      DO 20 I = J,NAMMAX                                                M0006000
C                                                                       M0006100
C...     IS THERE AN ENTRY AT THIS LOCATION                             M0006200
C                                                                       M0006300
      IF (NAMTBL(I).EQ.0) GOTO 40                                       M0006400
C                                                                       M0006500
C...     YES. IS IT THIS NAME                                           M0006600
C                                                                       M0006700
      IF(CNAMTB(I).EQ.STR)GOTO 100                                      M0006800
C                                                                       M0006900
C...     NO. CONTINUE SEARCH.                                           M0007000
C                                                                       M0007100
   20 CONTINUE                                                          M0007200
C                                                                       M0007300
C...     NOT IN THAT PART OF TABLE - SEARCH FROM BOTTOM TO STARTING PT. M0007400
C                                                                       M0007500
      DO 30 I = NAMEST,J                                                M0007600
C                                                                       M0007700
C...     IS THERE AN ENTRY AT THIS LOCATION                             M0007800
C                                                                       M0007900
      IF (NAMTBL(I).EQ.0) GOTO 40                                       M0008000
C                                                                       M0008100
C...     YES. IS IT THIS NAME                                           M0008200
C                                                                       M0008300
      IF(CNAMTB(I).EQ.STR)GOTO 100                                      M0008400
C                                                                       M0008500
C...     NO. CONTINUE SEARCH.                                           M0008600
C                                                                       M0008700
   30 CONTINUE                                                          M0008800
C                                                                       M0008900
C...     TABLE FULL - ISSUE DIAGNOSTIC                                  M0009000
C                                                                       M0009100
      WRITE(VLFILE,999)                                                 M0009200
  999 FORMAT (1H ,54HERROR NO. 3001 IN SUBROUTINE NAME. NAME TABLE OVERFM0009300
     *LOW)                                                              M0009400
      CALL HELP                                                         M0009500
      RETURN                                                            M0009600
C                                                                       M0009700
C...     NAME IS NOT IN TABLE - PUT IT IN                               M0009800
C                                                                       M0009900
   40 CNAMTB(I) = STR                                                   M0010000
C                                                                       M0010200
C...     ENTRY IF NAME FOUND.                                           M0010300
C...     IS THIS A SYNONYM                                              M0010400
C                                                                       M0010500
  100 IF (NAMTBL(I).LT.0) GOTO 110                                      M0010600
C                                                                       M0010700
C...     NO. RETURN INDEX.                                              M0010800
C                                                                       M0010900
      NAME = I                                                          M0011000
      RETURN                                                            M0011100
C                                                                       M0011200
C...     YES. RETURN INDEX OF SYNONYM                                   M0011300
C                                                                       M0011400
  110 NAME = -NAMTBL(I)                                                 M0011500
      RETURN                                                            M0011600
       END                                                              M0011700
**** SOURCE FILE : M0006728.V01   ***
*
      INTEGER FUNCTION  ORF(A,B)                                        ORF00100
C                                                                       ORF00190
C. THIS ROUTINE IS COMPILER DEPENDENT.                                  ORF00200
C                                                                       ORF00210
C  THREE POSSIBLE VERSIONS ARE OUTLINED HERE                            ORF00220
C                                                                       ORF00230
C-IBM-VERSION                                                           ORF00240
C                                                                       ORF00250
C   THE TRICK USED HERE WILL WORK ON                                    ORF00260
C   FORTRAN(G) AND (H), IT MAY NOT WORK ON OTHER COMPILERS.             ORF00300
C      LOGICAL  AL,BL,ORL                                               ORF00400
C      INTEGER AI,BI,ORI                                                ORF00500
C      EQUIVALENCE (AL,AI),(BL,BI),(ORI,ORL)                            ORF00600
C      AI=A                                                             ORF00700
C      BI=B                                                             ORF00800
C      ORL=AL.OR.BL                                                     ORF00900
C      ORF=ORI                                                          ORF01000
C                                                                       ORF02000
C-VAX-VERSION                                                           ORF02100
C                                                                       ORF02200
      INTEGER A,B                                                       ORF02300
      ORF=IOR(A,B)                                                      ORF02400
C                                                                       ORF02500
C                                                                       ORF03000
C-PRIME-VERSION                                                         ORF03100
C                                                                       ORF03200
C      INTEGER A,B                                                      ORF03300
C      ORF=OR(A,B)                                                      ORF03400
C                                                                       ORF03500
      RETURN                                                            ORF10000
      END                                                               ORF11000
**** SOURCE FILE : M0006725.V02   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE READ                                  M0000200
C                                                                       M0000300
C LINKAGE       CALL   READ(INCHAR,SEQNO)                               M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          TYPE          ENTRY           TYPE          ENTRY            M0000700
C          SUBROUTINE    HELP            SUBROUTINE    INPUT            M0000800
C                                                                       M0000900
      SUBROUTINE READ(INCHAR,SEQNO)                                     M0001000
C                                                                       M0001100
      IMPLICIT INTEGER (A-Z)                                            M0001200
C                                                                       M0001300
C        6.    SYMBOLIC FILE DEFINITIONS                                M0001400
C                                                                       M0001500
      COMMON/SYMFIL/SYMFIL                                              M0001600
      DIMENSION SYMFIL(6)                                               M0001700
C  LCDATA:     INPUT FILE NUMBER OF PRODUCTION TABLES SEQUEN. MODE      M0001800
      EQUIVALENCE (LCDATA,SYMFIL(5))                                    M0001900
C  VLFILE:     VERIFICATION LISTING FILE                                M0002000
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0002100
C*                                                                      M0002200
C PURPOSE      TO READ AND LIST A CARD IMAGE, AND PLACE IN A 72 WORD    M0002300
C              ARRAY THE INDEX TO THE NAMTBL OF THE CHARACTERS          M0002400
C              CONTAINED IN THE RECORD, ONE INDEX PER CHARACTER.        M0002500
C                                                                       M0002600
C ARGUMENTS    ARRAY     A 72 WORD ARRAY INTO WHICH IS PLACED INDICES   M0002700
C                        TO THE NAMTBL OF THE FIRST 72 CHARACTERS       M0002800
C                        OF THE RECORD.                                 M0002900
C              SEQNO     A DOUBLE WORD INTO WHICH IS PLACED THE         M0003000
C                        SEQUENCE NUMBER OF THE RECORD.                 M0003100
C                                                                       M0003200
C     VARIABLES                    INITIAL                              M0003300
C         NAME  DIMENSION TYPE     VALUE  EQUIV  DESCRIPTION            M0003400
C                                                                       M0003500
C         I               I                      DO LOOP INDEX          M0003600
C                                                                       M0003700
C         II              I        0             POINTER TO LOCATION    M0003800
C                                                OF CHARACTER IN LIST   M0003900
C                                                OF VALID CHARACTERS    M0004000
C                                                                       M0004210
C         VALIDC          C*NVLD                 LIST OF VALID          M0004220
C                                                CHARACTERS             M0004230
C                                                                       M0004300
C         CONV   NVLD     I        DATA          INDEX OF VALID         M0004400
C                                  DEF           CHARACTERS IN NAMTBL   M0004500
C                                                                       M0005000
C         RDCHAR          C*80                   READ AREA              M0005100
C                                                                       M0005110
C         INCHAR 72       I                      INDEX TO NAMTBL FOR    M0005400
C                                                EACH CHARACTER READ    M0005500
C                                                                       M0005600
C         SEQNO           C*8                    SEQUENCE NUMBER        M0005700
C                                                OF RECORD              M0005800
C                                                                       M0005900
      DIMENSION INCHAR(76)                                              M0006000
      PARAMETER (NVLD=53)                                               M0006510
      CHARACTER RDCHAR*80,SEQNO*8,VALIDC*(NVLD)                         M0006520
      DIMENSION CONV(NVLD)                                              M0006522
C                                                                       M0006530
      DATA          II/0/                                               M0006600
C                                                                       M0006610
C    LIST OF VALID NUMBERS                                              M0006620
C                                                                       M0006630
      DATA VALIDC( 1:10)/'0123456789'/                                  M0006640
      DATA VALIDC(11:36)/'ABCDEFGHIJKLMNOPQRSTUVWXYZ'/                  M0006650
      DATA VALIDC(37:48)/' +-*/=.,''()$'/                               M0006660
C  ASCII/EBCDIC REPRESENTATION OF BCDIC CHARACTERS ()+='                M0006670
      DATA VALIDC(49:53)/'%<&#@'/                                       M0006680
C                                                                       M0006700
C                   CONV TABLE                                          M0006800
C                                                                       M0006900
C                 0   1   2   3   4   5   6   7   8   9                 M0008910
      DATA CONV/  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,                M0008912
C                 A   B   C   D   E   F   G   H   I                     M0008914
     1           15, 16, 17, 18, 19, 20, 21, 22, 23,                    M0008916
C                 J   K   L   M   N   O   P   Q   R                     M0008918
     2           27, 28, 29, 30, 31, 32, 33, 34, 35,                    M0008920
C                 S   T   U   V   W   X   Y   Z                         M0008922
     3           40, 41, 42, 43, 44, 45, 46, 47,                        M0008924
C                SP   +   -   *   /   =   .   ,   '   (   )   $         M0008926
     4           38, 14, 26, 37, 39, 12, 24, 48, 13, 49, 25, 36,        M0008928
C                 %   <   &   #   @                                     M0008930
     5           49, 25, 26, 12, 13/                                    M0008932
C                                                                       M0008990
C**                                                                     M0009000
C                   READ CARD IMAGE                                     M0009100
      READ(LCDATA,20,END=50) RDCHAR                                     M0009200
   20 FORMAT (A80)                                                      M0009300
      WRITE(VLFILE,30) RDCHAR                                           M0009400
   30 FORMAT (1H ,4X,A80)                                               M0009500
C                                                                       M0009600
C...                SET UP INDEX TO CHAR PORTION OF NAMTBL              M0009700
C                                                                       M0009800
      DO 40 I=1,72                                                      M0009900
C                    ONE CHARACTER                                      M0010000
      II=INDEX(VALIDC,RDCHAR(I:I))                                      M0010110
C                    LOC OF CHARACTER IN NAMTBL                         M0010300
      IF (II.EQ.O) THEN                                                 M0010510
         INCHAR(I)=0                                                    M0010520
      ELSE                                                              M0010530
         INCHAR(I)=CONV(II)                                             M0010540
      ENDIF                                                             M0010550
   40 CONTINUE                                                          M0010560
C                                                                       M0010570
      SEQNO=RDCHAR(73:80)                                               M0010710
C                                                                       M0010720
      RETURN                                                            M0010800
C        ......... MODIFY FOR THE REAL WORLD...........                 M0010900
   50 CALL HELP                                                         M0011000
      RETURN                                                            M0011100
      END                                                               M0011200
**** SOURCE FILE : M0006200.V02   ***
*
      SUBROUTINE SORT(F,L,N,IS,IL)                                      M0000100
      INTEGER F(L,N),TEMP                                               M0000200
      LOGICAL EQULTY                                                    M0000250
C    'N' RECORDS OF LENGTH 'L' IN ARRAY 'F' ARE SORTED IN ASCENDING     M0000300
C    ORDER ACCORDING TO THE VALUE OF 'IL' ITEMS STARTING FROM THE       M0000400
C    'IS'TH IN EACH RECORD)                                             M0000500
C    INDEX FOR LAST WORD TO BE SORTED ON                                M0000550
      IT=IS+IL-1                                                        M0000560
C    FOR EACH RECORD EXCEPT THE LAST                                    M0000590
      NM1=N-1                                                           M0000600
      DO 1 I=1,NM1                                                      M0000700
      IP1=I+1                                                           M0000800
C    RECORD WITH LOWEST CHARACTER-STRING VALUE                          M0000900
      IK=I                                                              M0001000
      DO 2 J=IP1,N                                                      M0001100
        EQULTY=.TRUE.                                                   M0001210
        DO 3 K=IS,IT                                                    M0001220
          IF (EQULTY) THEN                                              M0001230
            IF (F(K,IK).GT.F(K,J)) THEN                                 M0001240
              IK=J                                                      M0001250
              EQULTY=.FALSE.                                            M0001260
            ELSE IF (F(K,IK).LT.F(K,J)) THEN                            M0001270
              EQULTY=.FALSE.                                            M0001280
            ELSE                                                        M0001290
              EQULTY=.TRUE.                                             M0001300
            ENDIF                                                       M0001310
          ENDIF                                                         M0001320
    3   CONTINUE                                                        M0001330
    2 CONTINUE                                                          M0001400
      IF (IK.NE.I) THEN                                                 M0001500
C   INTERCHANGE RECORDS                                                 M0001510
        DO 4 J=1,L                                                      M0001520
          TEMP=F(J,IK)                                                  M0001530
          F(J,IK)=F(J,I)                                                M0001540
          F(J,I)=TEMP                                                   M0001550
    4   CONTINUE                                                        M0001560
      ENDIF                                                             M0001570
C                                                                       M0001580
    1 CONTINUE                                                          M0001600
      RETURN                                                            M0001700
      END                                                               M0001800
**** SOURCE FILE : M0006727.W01   ***
*
C                                                                       M0000100
C              FORTRAN SUBROUTINE SPILL                                 M0000200
C                                                                       M0000300
C LINKAGE       CALL   SPILL(INDEX,SUBNAM)                              M0000400
C                                                                       M0000500
C          SUBSIDIARIES                  CALLED FROM                    M0000600
C          NONE                          TYPE          ENTRY            M0000700
C                                        SUBROUTINE    LOADB            M0000800
C                                        SUBROUTINE    LOADG            M0000900
C                                        SUBROUTINE    LOADI            M0001000
C                                        SUBROUTINE    LOADM            M0001100
C                                        SUBROUTINE    LOADP            M0001200
C                                        SUBROUTINE    LOADS            M0001300
C                                        SUBROUTINE    LOADT            M0001400
C                                        SUBROUTINE    LOADU            M0001500
C                                        SUBROUTINE    LOAD1            M0001600
C                                        SUBROUTINE    LOAD2            M0001700
C                                                                       M0001800
      SUBROUTINE SPILL(INDEX,SUBNAM)                                    M0001900
C                                                                       M0002000
      IMPLICIT INTEGER (A-Z)                                            M0002100
C                                                                       M0002200
C        6.    SYMBOLIC FILE DEFINITIONS                                M0002300
C                                                                       M0002400
      COMMON/SYMFIL/SYMFIL                                              M0002500
      DIMENSION SYMFIL(6)                                               M0002600
C  VLFILE:     VERIFICATION LISTING FILE                                M0002700
      EQUIVALENCE (VLFILE,SYMFIL(6))                                    M0002800
C                                                                       M0002900
C        7.    RESTRICTION DATA FOR CAPACITY CONTROL                    M0003000
C                                                                       M0003100
      COMMON/LDXSIZ/LDXSIZ                                              M0003200
      DIMENSION LDXSIZ(28)                                              M0003300
C  QCODE       DIMENSION OF ARRAY CODE                                  M0003400
      EQUIVALENCE (QCODE,LDXSIZ(1))                                     M0003500
C  QMETA       DIMENSION OF ARRAY META (OUTPUT)                         M0003600
      EQUIVALENCE (QMETA,LDXSIZ(2))                                     M0003700
C  QPMIDT      DIMENSION OF ARRAY PMIDTB                                M0003800
      EQUIVALENCE (QPMIDT,LDXSIZ(3))                                    M0003900
C  QASSOC      DIMENSION OF ARRAY ASSOC                                 M0004000
      EQUIVALENCE (QASSOC,LDXSIZ(4))                                    M0004100
C  QGEOML      DIMENSION OF ARRAY GEOMLC                                M0004200
      EQUIVALENCE (QGEOML,LDXSIZ(5))                                    M0004300
C  QLENGT      DIMENSION OF ARRAY LENGTH                                M0004400
      EQUIVALENCE (QLENGT,LDXSIZ(6))                                    M0004500
C  QPRODN      DIMENSION OF ARRAY PRODN                                 M0004600
      EQUIVALENCE (QPRODN,LDXSIZ(7))                                    M0004700
C  QPROCD      DIMENSION OF ARRAY PROCOD                                M0004800
      EQUIVALENCE (QPROCD,LDXSIZ(8))                                    M0004900
C  QWORK       DIMENSION OF ARRAY WORK                                  M0005000
      EQUIVALENCE (QWORK,LDXSIZ(9))                                     M0005100
C  QIAGMX      DIMENSION OF ARRAY IAGMXY                                M0005200
      EQUIVALENCE (QIAGMX,LDXSIZ(10))                                   M0005300
C  QPROD2      DIMENSION OF ARRAY PROD2                                 M0005400
      EQUIVALENCE (QPROD2,LDXSIZ(11))                                   M0005500
C  QSTACK      DIMENSION OF ARRAY STKLST                                M0005600
      EQUIVALENCE (QSTACK,LDXSIZ(12))                                   M0005700
C  QLEVPO      DIMENSION OF ARRAY LEVPOS                                M0005800
      EQUIVALENCE (QLEVPO,LDXSIZ(13))                                   M0005900
C  QCLSWD      DIMENSION OF ARRAY CLSWRD                                M0006000
      EQUIVALENCE (QCLSWD,LDXSIZ(14))                                   M0006100
C*                                                                      M0006200
C     PURPOSE       TO PRINT DIAGNOSTICS CONCERNING ARRAY CAPACITY      M0006300
C                   OVERFLOW                                            M0006400
C...  ARGUMENTS     INDEX     POINTER TO THE LOCATION IN THE COMMON     M0006500
C...                          BLOCK LDXSIZ CONTAINING THE DIMENSION     M0006600
C...                          REPRESENTING THE CAPACITY OF THE          M0006700
C...                          OVERFLOWED ARRAY.                         M0006800
      CHARACTER*6 SUBNAM                                                M0006900
      CHARACTER*6 ARRAY(14),WHERE(14)*16                                M0007410
C                                                                       M0007420
      DATA ARRAY(1)/'CODES'/,WHERE(1)/'COMMON/CODES/'/                  M0010310
      DATA ARRAY(2)/'META'/,WHERE(2)/'COMMON/SCRTBL/'/                  M0010315
      DATA ARRAY(3)/'PMIDTB'/,WHERE(3)/'COMMON/GMTY/'/                  M0010320
      DATA ARRAY(4)/'ASSOC'/,WHERE(4)/'COMMON/ASSOC/'/                  M0010325
      DATA ARRAY(5)/'GEOMLC'/,WHERE(5)/'COMMON/GEOMLC/'/                M0010330
      DATA ARRAY(6)/'LENGTH'/,WHERE(6)/'COMMON/LENGTH/'/                M0010335
      DATA ARRAY(7)/'PRODN'/,WHERE(7)/'COMMON/PRODN/'/                  M0010340
      DATA ARRAY(8)/'PROCOD'/,WHERE(8)/'COMMON/PROCOD/'/                M0010345
      DATA ARRAY(9)/'WORK'/,WHERE(9)/'COMMON/LEVPOS/'/                  M0010350
      DATA ARRAY(10)/'IAGMXY'/,WHERE(10)/'SUBRTN. LOADG'/               M0010355
      DATA ARRAY(11)/'PROD2'/,WHERE(11)/'COMMON/PRODN/'/                M0010360
      DATA ARRAY(12)/'PRODR'/,WHERE(12)/'COMMON/STKLST/'/               M0010365
      DATA ARRAY(13)/'LEVPOS'/,WHERE(13)/'COMMON/LEVPOS/'/              M0010370
      DATA ARRAY(14)/'CLSWRD'/,WHERE(14)/'COMMON/CLSWRD/'/              M0010375
C**                                                                     M0010400
      WRITE (VLFILE,1000) SUBNAM,ARRAY(INDEX),WHERE(INDEX),LDXSIZ(INDEX)M0010500
 10000FORMAT(1H ,30HERROR NO. 7036  IN SUBROUTINE ,A6,1H./1H ,          M0010600
     122HTHE CAPACITY OF ARRAY ,A6,4H IN ,A6,   9H, SET AT ,I4,         M0010700
     2 54H HAS BEEN EXCEEDED. REVISE INPUT OR REDIMENSION ARRAY.)       M0010800
      STOP                                                              M0010900
      END                                                               M0011000
**** SOURCE FILE : CFORM000.ORG   ***
*
*                                                                       00000010
*  * CFORM *  FORTRAN 77 SUBROUTINE  26.10.84  E.MCLELLAN               00000020
*                                                                       00000030
*  PURPOSE:  TO INSERT A CHARACTER STRING IN A CHARACTER BUFFER         00000040
*            AT LOCATION POSN.                                          00000050
*            THE LENGTH OF THE STRING IS RETURNED IF THE ARGUMENT       00000060
*            LENGTH IS ZERO ON INPUT.                                   00000070
*                                                                       00000080
*  CALLING SEQUENCE:                                                    00000090
*                   CALL CFORM(STRING,BUFFER,POSN,LENGTH)               00000100
*                                                                       00000110
*  ARGUMENTS:                                                           00000120
*                   TYPE       DESCRIPTION                              00000130
*       STRING      CHARACTER  CHARACTER STRING TO BE INSERTED          00000140
*       BUFFER      CHARACTER  CHARACTER BUFFER INTO WHICH              00000150
*                              STRING IS TO BE INSERTED                 00000160
*       POSN        INTEGER    LOCATION IN CHARACTER BUFFER             00000170
*                              AT WHICH STRING IS TO BE INSERTED        00000180
*       LENGTH      INTEGER    LENGTH OF STRING                         00000190
*                              IF = 0 ON INPUT, ACTUAL LENGTH           00000200
*                              IS RETURNED TO CALLING ROUTINE           00000210
*                                                                       00000220
*  GLOBAL VARIABLES:  NONE                                              00000230
*                                                                       00000240
*  LOCAL VARIABLES:  NONE                                               00000250
*                                                                       00000260
*  FILES:  NONE                                                         00000270
*                                                                       00000280
*  SUBSIDIARIES:  NONE                                                  00000290
*                                                                       00000300
      SUBROUTINE CFORM(STRING,BUFFER,POSN,LENGTH)                       00000310
C                                                                       00000320
      CHARACTER STRING*(*),BUFFER*(*)                                   00000330
      INTEGER POSN,LENGTH                                               00000340
C                                                                       00000350
C.....IF LENGTH IS ZERO ON INPUT RETURN ACTUAL LENGTH OF STRING         00000360
C                                                                       00000370
      IF (LENGTH.EQ.0) THEN                                             00000380
         LENGTH=LEN(STRING)                                             00000390
      ENDIF                                                             00000400
C                                                                       00000410
C.....INSERT CHARACTER STRING IN PRINT BUFFER                           00000420
C                                                                       00000430
      BUFFER(POSN:POSN+LENGTH-1)=STRING(1:LENGTH)                       00000440
C                                                                       00000450
      RETURN                                                            00000460
      END                                                               00000470
**** SOURCE FILE : HEX00000.ORG   ***
*
*                                                                       00000010
*  * HEX *  FORTRAN 77 CHARACTER FUNCTION   6.11.85  E.MCLELLAN         00000020
*                                                                       00000030
*  PURPOSE:  TO CONVERT AN INTEGER VALUE TO A CHARACTER STRING          00000040
*            REPRESENTING THE EQUIVALENT HEXADECIMAL NUMBER             00000050
*                                                                       00000060
*  CALLING SEQUENCE:                                                    00000070
*                   STRING=HEX(VALUE)                                   00000080
*                                                                       00000090
*  ARGUMENTS:                                                           00000100
*                   TYPE       DESCRIPTION                              00000110
*       VALUE       INTEGER    INTEGER VALUE TO BE CONVERTED            00000120
*                              TO HEX CHARACTER STRING                  00000130
*                                                                       00000140
*  GLOBAL VARIABLES:  NONE                                              00000150
*                                                                       00000160
*  LOCAL VARIABLES:                                                     00000170
*                   TYPE       DESCRIPTION                              00000180
*       DIV         INTEGER    DIVISORS FOR EACH HALF BYTE              00000190
*                              POSITION (POWERS OF 16)                  00000200
*       J           INTEGER    INTEGRAL QUOTIENT                        00000210
*       V           INTEGER    DIVIDEND                                 00000220
*       H           CHARACTER  HEX CHARACTERS (0-F)                     00000230
*                                                                       00000240
*  FILES:  NONE                                                         00000250
*                                                                       00000260
*  SUBSIDIARIES:  NONE                                                  00000270
*                                                                       00000280
      CHARACTER*8 FUNCTION HEX(VALUE)                                   00000290
C                                                                       00000300
      INTEGER VALUE,DIV(7),J,V                                          00000310
      CHARACTER H(0:15)                                                 00000320
C                                                                       00000330
      DATA DIV / 268435456, 16777216, 1048576,                          00000340
     1           65536,  4096,  256,   16    /                          00000350
C                                                                       00000360
      DATA H / '0','1','2','3','4','5','6','7',                         00000370
     1         '8','9','A','B','C','D','E','F'/                         00000380
C                                                                       00000390
      V=VALUE                                                           00000400
      DO 10 I=1,7                                                       00000410
        J=V/DIV(I)                                                      00000420
        V=V-J*DIV(I)                                                    00000430
        HEX(I:I)=H(J)                                                   00000440
  10  CONTINUE                                                          00000450
      HEX(8:8)=H(V)                                                     00000460
C                                                                       00000470
      RETURN                                                            00000480
      END                                                               00000490
**** SOURCE FILE : SHIFT000.ORG   ***
*
      SUBROUTINE SHIFT(WORD,JCHAR)                                      00000010
*                                                                       00000020
*  *  SHIFT  *  VAX11 VERSION   4.10.85    E.MCLELLAN                   00000030
*                                                                       00000040
*  PURPOSE     TO APPEND A SINGLE CHARACTER 'JCHAR' TO THE CHARACTER    00000050
*              STRING BEING SET UP IN 'WORD' TO FORM A LEFT-JUSTIFIED   00000060
*              'NAME' IN 'WORD'                                         00000070
*                                                                       00000080
*  CALLING SEQUENCE                                                     00000090
*              CALL SHIFT(WORD,JCHAR)                                   00000100
*  ARGUMENTS   WORD   CHARACTER STRING IN WHICH A 'NAME'                00000110
*                     IS BEING BUILT UP                                 00000120
*              JCHAR  CONTAINS THE NEXT CHARACTER (LEFT JUSTIFIED)      00000130
*                     TO BE PLACED IN WORD                              00000140
*                                                                       00000150
      CHARACTER*6 WORD,JCHAR,TEMP                                       00000160
C                                                                       00000170
      J=INDEX(WORD(1:),' ')                                             00000180
      IF(J.NE.0) THEN                                                   00000190
       WORD(J:J)=JCHAR(1:1)                                             00000200
      ELSE                                                              00000210
C  LEFT SHIFT CONTENTS OF WORD AND APPEND CHARACTER                     00000220
       TEMP=WORD(2:6)//JCHAR(1:1)                                       00000230
       WORD=TEMP                                                        00000240
      ENDIF                                                             00000250
      RETURN                                                            00000260
      END                                                               00000270
**** SOURCE FILE : BCDF0000.W01   ***
*
*                                                                       00000100
*  * BCDF *  FORTRAN 77 INTEGER FUNCTION  19-DEC-1985  E.MCLELLAN       00000200
*            MODIFIED                      2-FEB-1988  E.MCLELLAN       00000250
*                                                                       00000300
*  PURPOSE:  CONVERT A STRING OF CHARACTERS WHICH OCCUPY THE SAME       00000400
*            NUMBER OF BYTES AS AN INTEGER WORD INTO AN EQUIVALENT      00000500
*            INTEGER VALUE                                              00000600
*                                                                       00000700
*  CALLING SEQUENCE:                                                    00000800
*                   VALUE=BCDF(STR)                                     00000900
*                                                                       00001000
*  ARGUMENTS:                                                           00001100
*                   TYPE       DESCRIPTION                              00001200
*       STR         CHARACTER  STRING TO BE CONVERTED                   00001300
*                                                                       00001400
*  GLOBAL VARIABLES:                                                    00001500
*                                                                       00001600
*---------------------------------------------------                    00001700
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00001800
*---------------------------------------------------                    00001900
*   IWRD            SDP       INTEGER    NO. OF BYTES PER WORD          00002000
*   NBCHAR          SDP       INTEGER    NO. OF BITS PER BYTE           00002100
*                                                                       00002300
*  LOCAL VARIABLES:                                                     00002400
*                   TYPE       DESCRIPTION                              00002500
*        I          INTEGER    LOOP COUNT                               00002600
*        BCD        INTEGER    VARIABLE FOR BUILDING UP BCD VALUE       00002650
*        TSTR       CHARACTER  TEMPORARY STORAGE FOR STRING             00002660
*                                                                       00002700
*  FILES:  NONE                                                         00002800
*                                                                       00002900
*  SUBSIDIARIES:  NONE                                                  00003000
*                                                                       00003100
      INTEGER FUNCTION BCDF(STR)                                        00003200
C                                                                       00003300
      INCLUDE 'SDP.INC'                                                 00003400
C                                                                       00003500
      INTEGER  BCD                                                      00003550
      CHARACTER*(*) STR,TSTR*10                                         00003600
C                                                                       00003700
      BCD=0                                                             00003800
      TSTR=STR//' '                                                     00003850
      DO 10 I=1,IWRD                                                    00003900
      BCD=ISHFT(BCD,NBCHAR)+ICHAR(TSTR(I:I))                            00004000
  10  CONTINUE                                                          00004100
C                                                                       00004200
      BCDF=BCD                                                          00004300
C                                                                       00004400
      RETURN                                                            00004500
      END                                                               00004600
**** MODULE = SUPERVIS ****
**** SOURCE FILE : SSV3.ORG   ***
*
      PROGRAM SSV3                                                      00000100
      INCLUDE 'COMMONS.INC'                                             00000150
      CALL SPRVIS                                                       00000200
      STOP                                                              00000300
      END                                                               00000400
**** SOURCE FILE : M0001353.V04   ***
*
C                                                                       ABKD0001
C....    FORTRAN BLOCK DATA ROUTINE...   ABLKDATA...     12/69   RC     ABKD0002
      BLOCK DATA ABLK                                                   ABKD0010
C                                                                       ABKD0020
C...     COMMON AREAS FROM SYSTEM 360 APT                               ABKD0030
C                                                                       ABKD0040
      COMMON/A0CON/K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,IBLANK     ABKD0050
      COMMON/ATAPTB/ I                                                  ABKD0080
      INTEGER I(23)                                                     ABKD0090
      COMMON/ASISTM/ J                                                  ABKD0100
      INTEGER  J(22)                                                    ABKD0110
      COMMON/APOSTP/P                                                   ABKD0112
      DOUBLE PRECISION P(40)                                            ABKD0114
      COMMON/ATIME/T                                                    ABKD0115
      DOUBLE PRECISION T(4)                                             ABKD0116
      COMMON/AOUTFG/IFLAG                                               ABKD0117
      INTEGER IFLAG                                                     ABKD0118
      DATA   K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10,K11,K12,IBLANK           ABKD0120
     1      / 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,4H    /          ABKD0130
      DATA I/0,6,0,6, 0,3,0,6, 0,6,0,6, 0,6,0,6, 0,4,0,6, 5,6,7/        ABKD0140
      DATA J/22*0/                                                      ABKD0150
      DATA P/40*0.0D0/                                                  ABKD0160
      DATA T/4*0.0D0/                                                   ABKD0170
      DATA IFLAG/0/                                                     ABKD0180
      END                                                               ABKD0190
**** SOURCE FILE : CRTN0000.V01   ***
*
      SUBROUTINE CRTN(COND)                                             00000100
*                                                                       00000200
*  *  CRTN  *   TEMPORARY VAX11 VERSION   13.5.81    E.MCLELLAN         00000300
*                                                                       00000400
      INTEGER COND                                                      00000500
      IF (COND.EQ.0) THEN                                               00000600
        STOP 'PROCESSING COMPLETED OK'                                  00000610
      ELSE IF (COND.EQ.4) THEN                                          00000620
        STOP 'PROCESSING COMPLETED - WARNINGS HAVE OCCURRED'            00000630
      ELSE                                                              00000640
        STOP 'ABNORMAL END - ERRORS HAVE OCCURRED'                      00000700
      ENDIF                                                             00000710
      END                                                               00000800
**** SOURCE FILE : FLTAB000.W01   ***
*
*                                                                       00000100
*  *  BLOCK DATA PROGRAM DEFINING FILE ATTRIBUTES  *                    00000200
*                                                                       00000300
*                  NEW VERSION   17.07.85   E.MCLELLAN                  00000400
*                                                                       00000500
*---------------------------------------------------                    00000600
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00000700
*---------------------------------------------------                    00000800
*                                                                       00000900
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00001000
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00001100
*                                         (DIRECT OR SEQUENTIAL)        00001200
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00001300
*                                         (FORMATTED OR UNFORMATTED)    00001400
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00001500
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00001600
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00001700
*   U               IFILTB    INTEGER    UNIT NUMBER                    00001800
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00001900
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00002000
*                                        READ OR WRITTEN (DIRECT ACCESS)00002100
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00002200
*                                         (DIRECT ACCESS)               00002300
      BLOCK DATA FLTAB                                                  00002400
C                                                                       00002500
      INCLUDE 'FILTAB.INC'                                              00002600
C                                                                       00002700
      DATA FILNAM(1)/'CLFILP'/,FILACC(1)/'DIRECT '/,                    00002800
     1     FILFMT(1)/'UNFORMATTED'/,                                    00002900
     2     OPSTAT(1)/'UNKNOWN'/,CLSTAT(1)/'KEEP'/,                      00003000
     3     U(1)/1/,RL(1)/516/,NXTREC(1)/1/,LSTREC(1)/0/                 00003100
      DATA FILNAM(2)/'CLFILE'/,FILACC(2)/'DIRECT '/,                    00003200
     1     FILFMT(2)/'UNFORMATTED'/,                                    00003300
     2     OPSTAT(2)/'UNKNOWN'/,CLSTAT(2)/'KEEP'/,                      00003400
     3     U(2)/2/,RL(2)/516/,NXTREC(2)/1/,LSTREC(2)/0/                 00003500
      DATA FILNAM(3)/'CLFIL3'/,FILACC(3)/'SEQUENTIAL'/,                 00003600
     1     FILFMT(3)/'UNFORMATTED'/,                                    00003700
     2     OPSTAT(3)/'UNKNOWN'/,CLSTAT(3)/'KEEP'/,                      00003800
     3     U(3)/3/,RL(3)/512/,NXTREC(3)/1/,LSTREC(3)/0/                 00003900
      DATA FILNAM(4)/'EXFILE'/,FILACC(4)/'DIRECT '/,                    00004000
     1     FILFMT(4)/'UNFORMATTED'/,                                    00004100
     2     OPSTAT(4)/'SCRATCH'/,CLSTAT(4)/'DELETE'/,                    00004200
     3     U(4)/4/,RL(4)/516/,NXTREC(4)/1/,LSTREC(4)/0/                 00004300
      DATA FILNAM(5)/'INFILE'/,FILACC(5)/'SEQUENTIAL'/,                 00004400
     1     FILFMT(5)/'FORMATTED'/,                                      00004500
     2     OPSTAT(5)/'OLD'/,CLSTAT(5)/'KEEP'/,                          00004600
     3     U(5)/5/,RL(5)/80/,NXTREC(5)/1/,LSTREC(5)/0/                  00004700
      DATA FILNAM(6)/'VLFILE'/,FILACC(6)/'SEQUENTIAL'/,                 00004800
     1     FILFMT(6)/'FORMATTED'/,                                      00004900
     2     OPSTAT(6)/'NEW'/,CLSTAT(6)/'KEEP'/,                          00005000
     3     U(6)/6/,RL(6)/120/,NXTREC(6)/1/,LSTREC(6)/0/                 00005100
      DATA FILNAM(7)/'PNCHFL'/,FILACC(7)/'SEQUENTIAL'/,                 00005200
     1     FILFMT(7)/'FORMATTED'/,                                      00005300
     2     OPSTAT(7)/'NEW'/,CLSTAT(7)/'KEEP'/,                          00005400
     3     U(7)/7/,RL(7)/80/,NXTREC(7)/1/,LSTREC(7)/0/                  00005500
      DATA FILNAM(8)/'XCAN'/,FILACC(8)/'DIRECT '/,                      00005600
     1     FILFMT(8)/'UNFORMATTED'/                                     00005700
     2     OPSTAT(8)/'SCRATCH'/,CLSTAT(8)/'DELETE'/,                    00005800
     3     U(8)/8/,RL(8)/256/,NXTREC(8)/1/,LSTREC(8)/0/                 00005900
      DATA FILNAM(9)/'MAXTXT'/,FILACC(9)/'DIRECT '/,                    00006000
     1     FILFMT(9)/'UNFORMATTED'/,                                    00006100
     2     OPSTAT(9)/'SCRATCH'/,CLSTAT(9)/'DELETE'/,                    00006200
     3     U(9)/9/,RL(9)/350/,NXTREC(9)/1/,LSTREC(9)/0/                 00006300
      DATA FILNAM(10)/'XNUM'/,FILACC(10)/'DIRECT '/,                    00006400
     1     FILFMT(10)/'UNFORMATTED'/,                                   00006500
     2     OPSTAT(10)/'SCRATCH'/,CLSTAT(10)/'DELETE'/,                  00006600
     3     U(10)/10/,RL(10)/540/,NXTREC(10)/1/,LSTREC(10)/0/            00006700
      DATA FILNAM(11)/'ELFIL1'/,FILACC(11)/'DIRECT '/,                  00006800
     1     FILFMT(11)/'UNFORMATTED'/,                                   00006900
     2     OPSTAT(11)/'SCRATCH'/,CLSTAT(11)/'DELETE'/,                  00007000
     3     U(11)/11/,RL(11)/256/,NXTREC(11)/1/,LSTREC(11)/0/            00007100
      DATA FILNAM(12)/'ELFIL2'/,FILACC(12)/'DIRECT '/,                  00007200
     1     FILFMT(12)/'UNFORMATTED'/,                                   00007300
     2     OPSTAT(12)/'SCRATCH'/,CLSTAT(12)/'DELETE'/,                  00007400
     3     U(12)/12/,RL(12)/256/,NXTREC(12)/1/,LSTREC(12)/0/            00007500
      DATA FILNAM(13)/'ELFIL3'/,FILACC(13)/'DIRECT '/,                  00007600
     1     FILFMT(13)/'UNFORMATTED'/,                                   00007700
     2     OPSTAT(13)/'SCRATCH'/,CLSTAT(13)/'DELETE'/,                  00007800
     3     U(13)/13/,RL(13)/256/,NXTREC(13)/1/,LSTREC(13)/0/            00007900
      DATA FILNAM(14)/'ELFIL4'/,FILACC(14)/'SEQUENTIAL'/,               00008000
     1     FILFMT(14)/'UNFORMATTED'/,                                   00008100
     2     OPSTAT(14)/'SCRATCH'/,CLSTAT(14)/'DELETE'/,                  00008200
     3     U(14)/14/,RL(14)/256/,NXTREC(14)/1/,LSTREC(14)/0/            00008300
      DATA FILNAM(15)/'CPFILE'/,FILACC(15)/'SEQUENTIAL'/,               00008400
     1     FILFMT(15)/'UNFORMATTED'/,                                   00008500
     2     OPSTAT(15)/'UNKNOWN'/,CLSTAT(15)/'DELETE'/,                  00008600
     3     U(15)/15/,RL(15)/48/,NXTREC(15)/1/,LSTREC(15)/0/             00008700
      DATA FILNAM(16)/'AXFILE'/,FILACC(16)/'DIRECT'/,                   00008800
     1     FILFMT(16)/'UNFORMATTED'/,                                   00008900
     2     OPSTAT(16)/'SCRATCH'/,CLSTAT(16)/'DELETE'/,                  00009000
     3     U(16)/16/,RL(16)/256/,NXTREC(16)/1/,LSTREC(16)/0/            00009100
      DATA FILNAM(17)/'POFILE'/,FILACC(17)/'DIRECT '/,                  00009200
     1     FILFMT(17)/'UNFORMATTED'/,                                   00009300
     2     OPSTAT(17)/'SCRATCH'/,CLSTAT(17)/'DELETE'/,                  00009400
     3     U(17)/17/,RL(17)/24/,NXTREC(17)/1/,LSTREC(17)/0/             00009500
      DATA FILNAM(18)/'ELFILE'/,FILACC(18)/' '/,                        00009600
     1     FILFMT(18)/' '/,                                             00009700
     2     OPSTAT(18)/' '/,CLSTAT(18)/' '/,                             00009800
     3     U(18)/18/,RL(18)/0/,NXTREC(18)/0/,LSTREC(18)/0/              00009900
      DATA FILNAM(19)/'LDAFIL'/,FILACC(19)/'SEQUENTIAL'/,               00010000
     1     FILFMT(19)/'UNFORMATTED'/,                                   00010100
     2     OPSTAT(19)/'OLD'/,CLSTAT(19)/'KEEP'/,                        00010200
     3     U(19)/ 8/,RL(19)/80/,NXTREC(19)/1/,LSTREC(19)/0/             00010300
      DATA FILNAM(20)/'TIFILE'/,FILACC(20)/'SEQUENTIAL'/,               00010400
     1     FILFMT(20)/'FORMATTED'/,                                     00010500
     2     OPSTAT(20)/'UNKNOWN'/,CLSTAT(20)/'KEEP'/,                    00010600
     3     U(20)/20/,RL(20)/80/,NXTREC(20)/1/,LSTREC(20)/0/             00010700
      DATA FILNAM(21)/'PXFILE'/,FILACC(21)/' '/,                        00010800
     1     FILFMT(21)/' '/,                                             00010900
     2     OPSTAT(21)/' '/,CLSTAT(21)/' '/,                             00011000
     3     U(21)/0/,RL(21)/0/,NXTREC(21)/0/,LSTREC(21)/0/               00011100
      DATA FILNAM(22)/'FILE12'/,FILACC(22)/' '/,                        00011200
     1     FILFMT(22)/' '/,                                             00011300
     2     OPSTAT(22)/' '/,CLSTAT(22)/' '/,                             00011400
     3     U(22)/0/,RL(22)/0/,NXTREC(22)/0/,LSTREC(22)/0/               00011500
      DATA FILNAM(23)/'FILE13'/,FILACC(23)/' '/,                        00011600
     1     FILFMT(23)/' '/,                                             00011700
     2     OPSTAT(23)/' '/,CLSTAT(23)/' '/,                             00011800
     3     U(23)/0/,RL(23)/0/,NXTREC(23)/0/,LSTREC(23)/0/               00011900
      DATA FILNAM(24)/'APTLIB'/,FILACC(24)/'SEQUENTIAL'/,               00012000
     1     FILFMT(24)/'FORMATTED'/,                                     00012100
     2     OPSTAT(24)/'UNKNOWN'/,CLSTAT(24)/'KEEP'/,                    00012200
     3     U(24)/24/,RL(24)/80/,NXTREC(24)/0/,LSTREC(24)/0/             00012300
      DATA FILNAM(25)/' '/,FILACC(25)/' '/,                             00012400
     1     FILFMT(25)/' '/,                                             00012500
     2     OPSTAT(25)/' '/,CLSTAT(25)/' '/,                             00012600
     3     U(25)/0/,RL(25)/0/,NXTREC(25)/0/,LSTREC(25)/0/               00012700
      DATA FILNAM(26)/' '/,FILACC(26)/' '/,                             00012800
     1     FILFMT(26)/' '/,                                             00012900
     2     OPSTAT(26)/' '/,CLSTAT(26)/' '/,                             00013000
     3     U(26)/0/,RL(26)/0/,NXTREC(26)/0/,LSTREC(26)/0/               00013100
      DATA FILNAM(27)/' '/,FILACC(27)/' '/,                             00013200
     1     FILFMT(27)/' '/,                                             00013300
     2     OPSTAT(27)/' '/,CLSTAT(27)/' '/,                             00013400
     3     U(27)/0/,RL(27)/0/,NXTREC(27)/0/,LSTREC(27)/0/               00013500
      DATA FILNAM(28)/' '/,FILACC(28)/' '/,                             00013600
     1     FILFMT(28)/' '/,                                             00013700
     2     OPSTAT(28)/' '/,CLSTAT(28)/' '/,                             00013800
     3     U(28)/0/,RL(28)/0/,NXTREC(28)/0/,LSTREC(28)/0/               00013900
      DATA FILNAM(29)/' '/,FILACC(29)/' '/,                             00014000
     1     FILFMT(29)/' '/,                                             00014100
     2     OPSTAT(29)/' '/,CLSTAT(29)/' '/,                             00014200
     3     U(29)/0/,RL(29)/0/,NXTREC(29)/0/,LSTREC(29)/0/               00014300
      DATA FILNAM(30)/' '/,FILACC(30)/' '/,                             00014400
     1     FILFMT(30)/' '/,                                             00014500
     2     OPSTAT(30)/' '/,CLSTAT(30)/' '/,                             00014600
     3     U(30)/0/,RL(30)/0/,NXTREC(30)/0/,LSTREC(30)/0/               00014700
C                                                                       00014800
      END                                                               00014900
**** SOURCE FILE : GETPRM00.ORG   ***
*
      SUBROUTINE GETPRM                                                 00000100
C     DUMMY GETPRM                                                      00000200
      RETURN                                                            00000300
      END                                                               00000400
**** SOURCE FILE : LINKF000.V01   ***
*
*                                                                       00000100
*  *  LINKF  *   FORTRAN 77 SUBROUTINE   6-DEC-85   E.MCLELLAN          00000200
*                                                                       00000300
*  PURPOSE:     TO CALL NEXT PHASE                                      00000400
*                                                                       00000500
*  CALLING SEQUENCE:                                                    00000600
*                   CALL LINKF(PHASE)                                   00000700
*  ARGUMENTS:                                                           00000800
*                   TYPE       DESCRIPTION                              00000900
*           PHASE   CHARACTER  PHASE NAME                               00001000
*                                                                       00001100
*  GLOBAL VARIABLES: NONE                                               00001200
*                                                                       00001300
*  LOCAL VARIABLES: NONE                                                00001400
*                                                                       00001500
*  FILES: NONE                                                          00001600
*                                                                       00001700
*  SUBSIDIARIES: NONE                                                   00001800
*                                                                       00001900
      SUBROUTINE LINKF(PHASE)                                           00002000
C                                                                       00002100
      CHARACTER*8 PHASE                                                 00002200
C                                                                       00002300
      INCLUDE 'DARRAY.INC'                                              00002400
C                                                                       00002500
      IF (PHASE.EQ.'TRANSLAT') THEN                                     00002600
         CALL START                                                     00002700
      ELSE IF (PHASE.EQ.'XECUTION') THEN                                00002800
         CALL EXEC                                                      00002900
      ELSE IF (PHASE.EQ.'CLEDITOR') THEN                                00003000
         CALL CLED                                                      00003100
      ELSE IF (PHASE.EQ.'POSTEXEC') THEN                                00003200
         CALL ACNTRL                                                    00003300
      ELSE                                                              00003400
         CALL CFORM('  *** FAILURE IN LINKF - ',DARRAY,1,25)            00003500
         CALL CFORM('REQUESTED PHASE = ',DARRAY,26,18)                  00003600
         CALL CFORM(PHASE,DARRAY,43,8)                                  00003700
         CALL CPRINT(DARRAY)                                            00003800
         CALL ABNEND                                                    00003900
      END IF                                                            00004000
C                                                                       00004100
      RETURN                                                            00004200
      END                                                               00004300
**** SOURCE FILE : M0006631.W02   ***
*
*                MODIFIED                 9-MAY-1989  E.MCLELLAN        SUPV0001
       SUBROUTINE SPRVIS                                                SUPV0010
C... PURPOSE,  CALLS EACH PHASE OF APT4 AND EXECUTES IT.  IN ADDITION   SUPV0020
C    IT CHECKS FOR ERROR CONDITIONS AND FLAGS WHICH CAN TERMINATE A     SUPV0030
C    PART PROGRAM BEFORE ALL PHASES ARE COMPLETE.  BATCH PROCESSING     SUPV0040
C    IS POSSIBLE USING THIS SUPERVISOR.                                 SUPV0050
C                                                                       SUPV0060
C CALLS  LOAD MODULES   TRANSLAT,XECUTION,CLEDITOR,POSTEXEC.            SUPV0070
C                                                                       SUPV0080
C                                                                       SUPV0090
C... DICTIONARY                                                         SUPV0100
C                                                                       SUPV0110
C ABEND  - FLAG INDICATING ABNORMAL TERMINATION                         SUPV0120
C ASM    - FLAG TO INDICATE IF ASSEMBLY APPROACH IS TO BE USED          SUPV0130
C CFLAGS - SEE ERR,XC,CL,PX                                             SUPV0140
C CL     - FLAG INDICATING EXECUTION TO TERMINATE AT PHASE 3            SUPV0150
C CX     - HOLDS CURRENT STRING OF EIGHT CHARACTERS                     SUPV0160
C END      FLAG SET FALSE WHEN IT IS DETERMINED THAT ANOTHER PART       SUPV0170
C            PROGRAM FOLLOWS                                            SUPV0175
C ERR    - FLAG INDICATING ERRORS ARE NOT TO TERMINATE PROGRAM          SUPV0180
C ERRX   - ERROR LEVEL                                                  SUPV0190
C ETIME  - ELAPSED TIME                                                 SUPV0200
C FINI   - FLAG TO INDICATE IF A FINI CARD HAS BEEN READ                SUPV0210
C INFILE - INPUT FILE                                                   SUPV0220
C LXTRAS - SAME AS XTRAS                                                SUPV0230
C PHASE  - NAME OF PHASE BEING EXECUTED                                 SUPV0240
C PX     - FLAG INDICATING EXECUTION TO TERMINATE AT PHASE 4            SUPV0250
C START  - TIME AT WHICH A PART PROGRAM BEGINS EXECUTION                SUPV0260
C TIME0  - TIME AT WHICH A PHASE STARTS                                 SUPV0270
C TIME1  - CURRENT TIME                                                 SUPV0280
C VLFILE - VARIFACATION LISTING(PRINTER) FILE                           SUPV0290
C WX     - EQUIVALENT TO CX                                             SUPV0300
C X      - HOLDS CARD IMAGE                                             SUPV0310
C XC     - FLAG INDICATING EXECUTION TO TERMINATE AT PHASE 2            SUPV0320
C XTRAS(1)- CONTAINS NUMBER OF ERRORS                                   SUPV0330
C                                                                       SUPV0340
C                                                                       SUPV0350
C                                                                       SUPV0360
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR                        SUPV0370
C                                                                       SUPV0380
      INCLUDE 'SUPER.INC'                                               SUPV0385
C                                                                       SUPV0440
      INCLUDE 'SYMFIL.INC'                                              SUPV0485
C                                                                       SUPV0500
      DOUBLE PRECISION ETIME                                            SUPV0505
      INTEGER START,TIME0,TIME1                                         SUPV0510
      DIMENSION  DIAGS(33)                                              SUPV0520
      CHARACTER  X(80),CX(8),T,XXXX*80                                  SUPV0530
      CHARACTER*4 WX,XFINI,XBLNK,BLANK                                  SUPV0535
      EQUIVALENCE (T,XBLNK)                                             SUPV0544
      EQUIVALENCE (WX,CX(1))                                            SUPV0550
C                                                                       SUPV0552
C........SET UP PARAMETERS FOR ASSEMBLY APPROACH                        SUPV0554
      CHARACTER LXPARM*21,PARASM*16,IRDS*80                             SUPV0560
C                                                                       SUPV0618
      CHARACTER*8 PHASE(4)                                              SUPV0620
      CHARACTER*8 PHAS1(5)                                              SUPV0622
      EQUIVALENCE (PHAS1(2),PHASE(1))                                   SUPV0624
      CHARACTER*8 ACTION(3)                                             SUPV0630
      COMMON/PARLST/JPAR                                                SUPV0645
      CHARACTER*4 KPAR(4),JPAR(20)                                      SUPV0646
C                                                                       SUPV0650
      COMMON /AENT/ KENTRY                                              SUPV0651
      COMMON /CMPTST/ICMTES                                             SUPV0652
C                                                                       SUPV0653
      CHARACTER*132 DARRAY                                              SUPV0654
      CHARACTER LARRAY(132),LPCOMP*4                                    SUPV0655
      EQUIVALENCE (DARRAY,LARRAY(1))                                    SUPV0656
C                                                                       SUPV0657
      DATA  WX/'    '/, XFINI/'FINI'/                                   SUPV0658
      DATA  XBLNK,BLANK/'    ','    '/                                  SUPV0659
      DATA  LXPARM/'OVLY,NOLIST,NOMAP,LET'/                             SUPV0660
      DATA  PARASM/'LOAD,NODECK,LIST'/                                  SUPV0661
      DATA IRDS/'REMARK'/                                               SUPV0662
      DATA PHASE/'TRANSLAT','XECUTION','CLEDITOR','POSTEXEC'/           SUPV0663
      DATA PHAS1(1)/'SUPERVIS'/                                         SUPV0664
      DATA ACTION/' CONTINU','TERMINAT','TERMINAT'/                     SUPV0665
      DATA KPAR/'TR  ','XC  ','CL  ','PX  '/                            SUPV0667
      DATA DARRAY/' '/                                                  SUPV0668
      DATA LPCOMP/'COMP'/                                               SUPV0669
C  ------------------- INITIALIZE FOR PART PROGRAM ----------------     SUPV0670
      IABND=0                                                           SUPV0676
      ICNT=0                                                            SUPV0677
      CALL GETPRM                                                       SUPV0678
      CALL ARTIME                                                       SUPV0679
C                                                                       SUPV0680
      IRDSAV=IRDS                                                       SUPV0682
      END= .TRUE.                                                       SUPV0684
   50 FINI=.FALSE.                                                      SUPV0686
C                                                                       SUPV0690
C START THE CLOCK                                                       SUPV0700
  100 CALL CLOCF4(START)                                                SUPV0710
      TIME0 = START                                                     SUPV0720
C                                                                       SUPV0730
C INTERPRETIVE METHOD IS THE DEFAULT.                                   SUPV0860
      ASM  = .FALSE.                                                    SUPV0870
      JJEX = 0                                                          SUPV0871
      JEX = 0                                                           SUPV0872
C---      DEFAULT- OUTPUT PRINT NOT COMPRESSED                          SUPV0875
      ICMTES=0                                                          SUPV0877
C                                                                       SUPV0880
C ERRORS ARE TO TERMINATE PROGRAM,ALL PHASES WILL BE PROCESSED.         SUPV0890
      ERR=.FALSE.                                                       SUPV0900
      XC=.FALSE.                                                        SUPV0910
      CL=.FALSE.                                                        SUPV0915
      PX=.FALSE.                                                        SUPV0920
      I=1                                                               SUPV0921
      IF(ICNT.EQ.0) GO TO 106                                           SUPV0922
      IF(JPAR(1).EQ.KPAR(1)) I=1                                        SUPV0924
      IF(JPAR(1).EQ.KPAR(2)) I=2                                        SUPV0926
      IF(JPAR(1).EQ.KPAR(3)) I=3                                        SUPV0927
      IF(JPAR(1).EQ.KPAR(4)) I=4                                        SUPV0928
  106 CONTINUE                                                          SUPV0929
C                                                                       SUPV0930
C---       TEST FOR COMP IN PARM LIST                                   SUPV0933
      IF(JPAR(1).EQ.LPCOMP) ICMTES=1                                    SUPV0937
C START NEW PAGE ON PRINTER.                                            SUPV0940
      CALL CFORM ('1',DARRAY,1,1)                                       SUPV0950
      CALL CFORM('CAM-I SCULPTURED SURFACE SSV3  SYSTEM.',DARRAY,5,38)  SUPV0952
      CALL CFORM(' CAM-I INC., ARLINGTON,TEXAS  MAY,89 ',DARRAY,43,37)  SUPV0953
      CALL CPRINT(DARRAY)                                               SUPV0954
      CALL CPRINT (DARRAY)                                              SUPV0960
C                                                                       SUPV0970
C                                                                       SUPV1000
C  EXECUTE PHASE I                                                      SUPV1040
C                                                                       SUPV1050
  119 CONTINUE                                                          SUPV1060
C                                                                       SUPV1070
C SET ERROR LEVEL AT 0.                                                 SUPV1080
      ERRX = 0                                                          SUPV1090
C                                                                       SUPV1100
C SET ERROR COUNT AT 0.                                                 SUPV1110
      XTRAS(1) = 0                                                      SUPV1120
      XTRAS(2) = 0                                                      SUPV1125
C                                                                       SUPV1130
C ASSUME ABNORMAL TERMINATION.                                          SUPV1140
      ABEND= .TRUE.                                                     SUPV1150
C                                                                       SUPV1160
C TEST FOR ASSEMBLY APPROACH AND PHASE TWO.                             SUPV1170
      J=1                                                               SUPV1175
      IF(ASM.AND.I.EQ.2) GO TO 999                                      SUPV1180
      IF ( JPAR(1) .EQ. KPAR(2)) ASM = .TRUE.                           SUPV1185
C                                                                       SUPV1190
C LOAD AND EXECUTE PHASE (I).                                           SUPV1200
  120 CALL LINKF (PHASE(I))                                             SUPV1210
C...     SET J - DETERMINE IF PROCESSING SHOULD CONTINUE                SUPV1248
      J = 1                                                             SUPV1250
C                                                                       SUPV1260
C IF ERR LEVEL GREATER THAN 4 AND CONTINUE NOT INDICATED, END PART PROG.SUPV1270
      IF(ERRX.GT.JJEX) JJEX = ERRX                                      SUPV1272
      IF(JEX.EQ.2.AND.I.EQ.3) J=2                                       SUPV1275
      IF(.NOT.ERR.AND.(ERRX.GT.4).AND.(I.NE.2)) J=2                     SUPV1280
      IF(.NOT.ERR.AND.(ERRX.GT.4).AND.(I.EQ.2)) JEX=2                   SUPV1285
C                                                                       SUPV1290
C IF ABEND NOT TURNED OFF OR ERR LEVEL GREATER THAN 8, TERMINATE.       SUPV1300
      IF(ABEND.OR.ERRX.GT.8) J=3                                        SUPV1310
C IF NO ERRORS, CONTINUE.                                               SUPV1320
      IF(ERRX.EQ.0) GOTO 110                                            SUPV1330
C                                                                       SUPV1340
C PRINT NUMBER OF ERRS AND ACTION TO BE TAKEN.                          SUPV1350
  130 CALL ICONV(XTRAS(1),DARRAY,5,3)                                   SUPV1360
      CALL CFORM('0***',DARRAY,1,4)                                     SUPV1362
      CALL CFORM(' ERROR(S) AND     WARNING(S) IN THIS PHASE. PROCESSINGSUPV1365
     / ',DARRAY,9,55)                                                   SUPV1366
      CALL ICONV(XTRAS(2),DARRAY,23,3)                                  SUPV1368
      CALL CFORM(ACTION(J),DARRAY,64,8)                                 SUPV1370
      CALL CFORM('ED.***',DARRAY,72,6)                                  SUPV1375
      CALL CPRINT (DARRAY)                                              SUPV1380
C                                                                       SUPV1390
C PRINT ELAPSED TIME.                                                   SUPV1400
  110 CALL CLOCF4(TIME1)                                                SUPV1410
      ETIME = IABS(TIME1-TIME0)/100.0                                   SUPV1420
      CALL CFORM('0APT-IV   SSV3 ',DARRAY,1,15)                         SUPV1425
      CALL CFORM(PHASE(I),DARRAY,19,8)                                  SUPV1430
      CALL CFORM('PHASE - CPU TIME=',DARRAY,29,17)                      SUPV1435
      CALL FCONV(ETIME,DARRAY,47,6,2)                                   SUPV1440
      CALL CFORM('SECS.',DARRAY,55,5)                                   SUPV1445
      CALL CPRINT (DARRAY)                                              SUPV1450
C                                                                       SUPV1460
C  IF J=1, PROCESSING CONTINUES.  IF J=2, PROCESSING TERMINATES.        SUPV1470
C        IF J=3, ABNORMAL TERMINATION.                                  SUPV1480
      GO TO (140,800,900), J                                            SUPV1490
C                                                                       SUPV1500
C WAS THERE A REQUEST TO TERMINATE AT THE END OF THIS PHASE.            SUPV1510
  140 CONTINUE                                                          SUPV1520
C                                                                       SUPV1530
      TIME0 = TIME1                                                     SUPV1540
      IF (I.EQ.4) GO TO 800                                             SUPV1548
      I=I+1                                                             SUPV1550
      IF(.NOT.CFLAGS(I))GOTO 119                                        SUPV1551
C                                                                       SUPV1560
C                                                                       SUPV1740
C                                                                       SUPV1750
C  XC,CL OR PX APPEARS IN CONTRL/ STATEMENT OR NOPOST=CNTRL/PX          SUPV1760
C                                                                       SUPV1770
  600 CALL CFORM('0***PROGRAM TERMINATED AT REQUESTED PHASE***',        SUPV1780
     C         DARRAY,1,44)                                             SUPV1785
      CALL CPRINT (DARRAY)                                              SUPV1790
      J=4                                                               SUPV1800
C                                                                       SUPV1810
C  END OF A PART PROGRAM PROCESSING.                                    SUPV1820
C                                                                       SUPV1830
  800 ETIME = IABS(TIME1-START)/100.0                                   SUPV1840
      CALL FCONV(ETIME,DARRAY,47,6,2)                                   SUPV1845
      CALL CFORM('0',DARRAY,1,1)                                        SUPV1850
      CALL CFORM('TOTAL - CPU TIME=',DARRAY,29,17)                      SUPV1860
      CALL CFORM('SECS.',DARRAY,55,5)                                   SUPV1865
      CALL CPRINT (DARRAY)                                              SUPV1870
C                                                                       SUPV1875
C                                                                       SUPV1880
      CALL CFORM('0APT-IV    ERROR LEVEL IN THIS PART PROGRAM =',       SUPV1900
     C  DARRAY,1,45)                                                    SUPV1910
      CALL ICONV(JJEX,DARRAY,45,3)                                      SUPV1920
      CALL CPRINT (DARRAY)                                              SUPV1930
      IF (IABND.EQ.1) GO TO 999                                         SUPV1935
C                                                                       SUPV1940
C                                                                       SUPV1950
C CHECK FOR END OF DATA - THAT IS, NO MORE PART PROGRAMS                SUPV1960
  850 IF (ASM) GO TO 999                                                SUPV1970
      IF (.NOT. END) GO TO 999                                          SUPV1974
      CALL CREAD(IRDSAV,IRET)                                           SUPV1976
      IF(IRET.EQ.1) GO TO 999                                           SUPV1980
      END=.FALSE.                                                       SUPV1985
      CALL TAPOP(CLFIL3,-3)                                             SUPV1986
      CALL TAPOP(EXFILE,-3)                                             SUPV1987
      CALL TAPOP(MACTXT,-3)                                             SUPV1988
      CALL TAPOP(XNUM,-3)                                               SUPV1989
      CALL CFORM('0*** ONLY ONE PART PROGRAM PERMITTED***',DARRAY,1,39) SUPV1990
      CALL CPRINT(DARRAY)                                               SUPV1991
      GOTO 999                                                          SUPV1992
C                                                                       SUPV2000
C                                                                       SUPV2002
      ENTRY ABNEND                                                      SUPV2003
C                                                                       SUPV2004
      IABND=1                                                           SUPV2005
C                                                                       SUPV2010
C  PHASE DID NOT HAVE A NORMAL ENDING.                                  SUPV2020
C                                                                       SUPV2030
  900 CALL CFORM('0***ABNORMAL TERMINATION OF ',DARRAY,1,28)            SUPV2040
      CALL CFORM(PHASE(I),DARRAY,28,8)                                  SUPV2050
      CALL CFORM('PHASE***',DARRAY,37,8)                                SUPV2055
      CALL CPRINT(DARRAY)                                               SUPV2056
      JJEX = 16                                                         SUPV2058
      IF(IABND.EQ.1) GO TO 800                                          SUPV2059
C                                                                       SUPV2060
      IF(FINI) GOTO 800                                                 SUPV2070
C                                                                       SUPV2080
C  NO FINI.  SKIP TO END OF PART PROGRAM.                               SUPV2090
  905 CALL CREAD(XXXX,IRET)                                             SUPV2100
      WX=BLANK                                                          SUPV2105
      IF(IRET.EQ.1) GO TO 999                                           SUPV2110
      J=1                                                               SUPV2120
      K=0                                                               SUPV2130
  920 K=K+1                                                             SUPV2140
      T=X(K)                                                            SUPV2144
      IF (XBLNK .EQ. BLANK) GO TO 920                                   SUPV2146
      CX(J) = X(K)                                                      SUPV2150
      J=J+1                                                             SUPV2160
      IF (J.LE.4) GO TO 920                                             SUPV2170
      IF (WX .EQ. XFINI) GO TO 800                                      SUPV2180
      GOTO 905                                                          SUPV2190
C                                                                       SUPV2200
C                                                                       SUPV2210
C  END OF ALL PART PROGRAM PROCESSING.                                  SUPV2220
C                                                                       SUPV2230
  999 JRTN=JJEX                                                         SUPV2240
      IF ( J.EQ.1 .AND. ERRX.LT.4 ) JRTN = 0                            SUPV2242
      CALL CPUCLO                                                       SUPV2243
      CALL CRTN(JRTN)                                                   SUPV2245
      GO TO 999                                                         SUPV2250
C                                                                       SUPV2260
      END                                                               SUPV2270
**** SOURCE FILE : M0000486.W01   ***
*
C....  SYMFIL BLOCK   .....  MEMBER NAME = SSYMFIL                      SYMF0000
      BLOCK DATA SYMFL                                                  SYMF0005
      INCLUDE 'SYMFIL.INC'                                              SYMF0012
C                                                                       SYMF0020
      DATA CLFILP,CLFILE,CLFIL3,EXFILE,INFILE/                          SYMF0030
     1          1,     2,     3,     4,     5/,                         SYMF0040
     2     VLFILE,PNCHFL,XCAN  ,MACTXT,XNUM  /                          SYMF0050
     3          6,     7,     8,     9,    10/,                         SYMF0060
     4     ELFIL1,ELFIL2,ELFIL3,ELFIL4,CPFILE/                          SYMF0070
     5         11,    12,    13,    14,    15/,                         SYMF0080
     6     AXFILE,POFILE,ELFILE,LDAFIL,TIFILE/                          SYMF0090
     7         16,    17,    18,    19,    20/                          SYMF0100
     8     PXFILE,NFIL12,NFIL13,LIBFIL/                                 SYMF0110
     9         21,    22,    23,    24/                                 SYMF0120
      END                                                               SYMF0130
**** MODULE = TRANSLAT ****
**** SOURCE FILE : M0004609.W03   ***
*
C                                                                       ALM00100
C              RENTRAN SUBROUTINE ALARM                                 ALM00200
C                                                                       ALM00300
C LINKAGE      SUBROUTINE ALARM(NUMBER,IPOS,ERLV,SUBNAM)                ALM00400
C                                                                       ALM00500
C          SUBSIDIARIES                  CALLED BY                      ALM00600
C          TYPE          ENTRY           TYPE          ENTRY            ALM00700
C          SUBROUTINE    BINBCD          SUBROUTINE    BOOLIF           ALM00800
C          SUBROUTINE    FOUTXX          SUBROUTINE    COMSTR           ALM00900
C          SUBROUTINE    MCXTRN          SUBROUTINE    GOLO             ALM01000
C          ASM ROUT.     CFORM           SUBROUTINE    GOPAT            ALM01100
C          ASM ROUT.     MOVE            SUBROUTINE    ICMPRS           ALM01200
C          ASM ROUT.     IVERGL          SUBROUTINE    INPAT            ALM01300
C                                        SUBROUTINE    INPUT            ALM01400
C                                        SUBROUTINE    ISSCOD           ALM01500
C                                        SUBROUTINE    LABCON           ALM01600
C                                        SUBROUTINE    LARGES           ALM01700
C                                        SUBROUTINE    LCANON           ALM01800
C                                        SUBROUTINE    LOOP             ALM01900
C                                        SUBROUTINE    MACLBL           ALM02000
C                                        SUBROUTINE    MACREC           ALM02100
C                                        SUBROUTINE    MATCH            ALM02200
C                                        SUBROUTINE    MCXTRN           ALM02300
C                                        SUBROUTINE    MNPROC           ALM02400
C                                        SUBROUTINE    MOTION           ALM02500
C                                        INTEGER FCT.  NAME             ALM02600
C                                        SUBROUTINE    ONEARG           ALM02700
C                                        SUBROUTINE    OPCODE           ALM02800
C                                        SUBROUTINE    PRO020           ALM02900
C                                        SUBROUTINE    PRO021           ALM03000
C                                        SUBROUTINE    PRO026           ALM03100
C                                        SUBROUTINE    PRO027           ALM03200
C                                        SUBROUTINE    READ             ALM03300
C                                        SUBROUTINE    RECOG            ALM03400
C                                        SUBROUTINE    RECOGN           ALM03500
C                                        SUBROUTINE    REFREF           ALM03600
C                                        SUBROUTINE    REPLAC           ALM03700
C                                        SUBROUTINE    RESERV           ALM03800
C                                        SUBROUTINE    RESRED           ALM03900
C                                        SUBROUTINE    SSDEF            ALM04000
C                                        SUBROUTINE    SUBCOD           ALM04100
C                                        SUBROUTINE    TSSMIL           ALM04200
C                                        SUBROUTINE    TWOARG           ALM04300
C                                                                       ALM04400
      SUBROUTINE ALARM(NUMBER,IPOS,ERLV,SUBNAM)                         ALM04500
C                                                                       ALM04600
      IMPLICIT INTEGER (A-Z)                                            ALM04700
C                                                                       ALM04800
C                                                                       ALM04900
C        1.    NAME TABLE AND TABLE LIMITS                              ALM05000
C                                                                       ALM05100
      INCLUDE 'NAMETB.INC'                                              ALM05210
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                ALM05250
C CNAMTB:      NAME TABLE OR DICTIONARY                                 ALM05350
C CNUMTB:      NUMBER TABLE                                             ALM05360
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     ALM05400
C                                                                       ALM05800
C        2.    STACK AND POINTER STORAGE                                ALM05900
C                                                                       ALM06000
      COMMON/STKLST/STKLST                                              ALM06100
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      ALM06200
C TOP:         POINTER TO LAST STACK ENTRY                              ALM06300
      EQUIVALENCE (TOP,STKLST(1))                                       ALM06400
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             ALM06500
      EQUIVALENCE (ARGTOP,STKLST(2))                                    ALM06600
C STACK:       WORKING STACK                                            ALM06700
      EQUIVALENCE (STACK(1,1),STKLST(4))                                ALM06800
C ARGSTK:      ARGUMENT STACK                                           ALM06900
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               ALM07000
C                                                                       ALM07100
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      ALM07200
C                                                                       ALM07300
      COMMON/CODE/CODE                                                  ALM07400
      DIMENSION CODE(150),RTERM(2)                                      ALM07500
C RTERM:       (1)=CODE CLASS  4000,(2)=NAMTBL INDEX OF 'RTERM '        ALM07600
      EQUIVALENCE (RTERM(1),CODE(7))                                    ALM07700
C                                                                       ALM07800
C        7.    STRING STORAGE AREA                                      ALM07900
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT   ALM08000
      COMMON/INPTR/CNT                                                  ALM08100
C                                                                       ALM08200
C       11.    SEQUENCE NUMBER STORAGE                                  ALM08300
C                                                                       ALM08400
      INCLUDE 'SEQCOM.INC'                                              ALM08510
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    ALM08700
C SEQNUM:      ALPHANUMERIC REPRESENTATION OF CURRRENT STATEMENT NUMBER ALM08900
C                                                                       ALM09100
C       14.    I. L. LIST OPTION FLAGS                                  ALM09200
C                                                                       ALM09300
      COMMON/PRT/PRT                                                    ALM09400
      LOGICAL PRTERR                                                    ALM09500
      DIMENSION PRT(7)                                                  ALM09600
C PRTERR:      TRUE IF PPOPTN/PRTER,ON. PRINTOUT OF STACK OR ARGSTK     ALM09700
      EQUIVALENCE (PRTERR,PRT(6))                                       ALM09800
C                                                                       ALM09900
C       21.    ERROR TEXT TABLE                                         ALM10000
C                                                                       ALM10100
      INCLUDE 'ERRTXT.INC'                                              ALM10310
C ERND:        DIMENSION OF ERRAD1 AND ERRAD2 (PARTS OF ERRTXT)         ALM10400
C ERRDM:       DIMENSION OF ERRTXT                                      ALM10600
C ERRTXT:      STORAGE OF ERROR MESSAGES                                ALM11000
C ERRAD1:      TRANSLATOR ERROR AND WARNING NUMBERS                     ALM11110
C ERRAD2:      START POSITIONS OF ERROR MESSAGES IN ERRTXT              ALM11120
C                                                                       ALM11200
C       22.    MACRO PROCESSING VARIABLES                               ALM11300
C                                                                       ALM11400
      COMMON/MACXX1/MACXX1                                              ALM11500
      LOGICAL ILHLT,FINMAC                                              ALM11600
      DIMENSION MACXX1(71)                                              ALM11700
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              ALM11800
      EQUIVALENCE (ILHLT,MACXX1(14))                                    ALM11900
C FINMAC:      TRUE DURING FINAL MACRO PROCESSING                       ALM12000
      EQUIVALENCE (FINMAC,MACXX1(24))                                   ALM12100
C                                                                       ALM12200
C       33.    SYMBOLIC FILE DEFINITIONS                                ALM12300
C                                                                       ALM12400
      INCLUDE 'SYMFIL.INC'                                              ALM12510
C VLFILE:      VERIFICATION LISTING FILE                                ALM12700
C                                                                       ALM12900
C       40.    PARAMETERS REQUIRED BY SUPERVISOR                        ALM13000
C                                                                       ALM13100
      COMMON/SUPER/SUPER                                                ALM13200
      DIMENSION SUPER(36),XTRAS(7)                                      ALM13300
C ERRX:        ERROR LEVEL USED FOR SUPERVISOR                          ALM13400
      EQUIVALENCE (ERRX,SUPER(5))                                       ALM13500
C XTRAS:       SPACE FOR ADDITIONAL PARAMETERS                          ALM13600
      EQUIVALENCE (XTRAS(1),SUPER(10))                                  ALM13700
C                                                                       ALM13800
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          ALM13900
C                                                                       ALM14000
      COMMON/NTBL/NTBL                                                  ALM14100
      DIMENSION NTBL(6)                                                 ALM14200
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE ALM14300
      EQUIVALENCE (NLAST,NTBL(4))                                       ALM14400
C                                                                       ALM14500
C       44.    ERROR POSITION TABLE                                     ALM14600
C                                                                       ALM14700
      COMMON/ERRPOS/ERRPOS                                              ALM14800
      INTEGER ERRPOS,ERRPNT,ESTACK,ERGSTK                               ALM14900
      LOGICAL NOWARN                                                    ALM15000
      DIMENSION ERRPOS(302),ERRPNT(100),ESTACK(100),ERGSTK(100)         ALM15100
C NOWARN:      FLAG TRUE IS SUPPRESSING OUTPUT OF WARNING NR. 50        ALM15200
      EQUIVALENCE (NOWARN,ERRPOS(1))                                    ALM15300
C ERRPNT:      CONTAINS POINTERS TO INPUT STATEMENT TEXT POSITION       ALM15400
      EQUIVALENCE (ERRPNT(1),ERRPOS(3))                                 ALM15500
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    ALM15600
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               ALM15700
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   ALM15800
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               ALM15900
C*                                                                      ALM16000
C ARGUMENTS    NUMBER     INTEGER ERROR NUMBER                          ALM16100
C              SUBNAM     NAME OF THE CALLING SUBROUTINE                ALM16200
C              IPOS       ERROR POSITION IN STACK OR ARGSTK             ALM16300
C                                                                       ALM16400
C... INITILIZE ARRAY INDICATING WHICH ERRORS ARE OF SEVERITY LEVEL FOUR.ALM16500
C                                                                       ALM16600
      CHARACTER B*92,HERRNO*8,HEQU*16,HWARN*8,NOTEXT*52,FROM*16,SUBNAM*8ALM16910
      CHARACTER*4 ASTRT,ESTRT,WSTRT,BLK,ISNCDE                          ALM16920
      DATA B/' '/                                                       ALM17000
      DATA ASTRT/'**  '/,ESTRT/'*$$*'/,WSTRT/'*$*$'/,BLK/'    '/        ALM17100
      DATA HERRNO/'ERR.NO. '/,HEQU/' EQUIVALENT TO  '/,HWARN/'WARNING '/ALM17200
      DATA NOTEXT                                                       ALM17300
     *     /'THERE IS NO DIAGNOSTIC MESSAGE FOR THIS ERROR NUMBER'/     ALM17400
      DATA ISNCDE/'ISN '/,ISEQ,INUM/2*0/                                ALM17500
      DATA FROM /'FROM SUBROUTINE '/                                    ALM17600
C**                                                                     ALM17700
C...     CONVERT ERROR NO. TO BCD AND OUTPUT ERROR MESSAGE              ALM17800
C                                                                       ALM17900
C...     IF MACRO PROCESSING, ONLY OUTPUT ERROR DURING FINAL PASS       ALM18000
      IF((NUMBER.GE.20).AND.(NUMBER.LT.50))GO TO 5                      ALM18100
      IF(ILHLT)GO TO 10                                                 ALM18200
      IF(NUMBER.EQ.50.AND.NOWARN)GOTO 10                                ALM18300
C                                                                       ALM18400
C...     POSITION OF ERROR IN THE INPUT STATEMENT                       ALM18500
C                                                                       ALM18600
    5 IF(IPOS)510,550,520                                               ALM18700
  510 KK=ERGSTK(-IPOS)                                                  ALM18800
      GOTO 530                                                          ALM18900
  520 IF(IPOS.LT.2)IPOS=2                                               ALM19000
      KK=ESTACK(IPOS)                                                   ALM19100
  530 IF(FINMAC)GOTO 600                                                ALM19200
      JJ=KK/100+1                                                       ALM19300
      KK=MOD(KK,100)+12                                                 ALM19400
      IF(JJ.EQ.1)GOTO 820                                               ALM19500
      CALL ICONV(JJ,B,KK+2,2)                                           ALM19600
      GOTO 820                                                          ALM19700
  600 JJ=TOP                                                            ALM19800
      IF(STACK(1,TOP).EQ.RTERM(2))JJ=JJ-1                               ALM19900
      IF(IPOS.GT.0)JJ=MIN(IPOS+2,JJ)                                    ALM20000
      K=2                                                               ALM20100
      KK=0                                                              ALM20200
  605 B(1:88)=BLK                                                       ALM20410
      J=12                                                              ALM20500
C                                                                       ALM20600
      DO 650 I=K,JJ                                                     ALM20700
      II=STACK(1,I)                                                     ALM20800
      IF(II.LE.NAMMAX)GOTO 610                                          ALM20900
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           ALM20910
      II=II-NAMMAX                                                      ALM20920
      IF(NLAST.GT.0)CALL MCXTRN(5,II,IDUMMY)                            ALM21000
      B(J:J+11)=CNUMTB(II)                                              ALM21100
      GOTO 620                                                          ALM21200
  610 IF(II.LT.0)II=-NAMTBL(II)                                         ALM21300
      B(J:J+5)=CNAMTB(II)                                               ALM21400
  620 IF(I.EQ.IPOS)KK=J-1                                               ALM21500
      L=INDEX(B(J:J+11),' ')                                            ALM21910
      IF (L.EQ.0) THEN                                                  ALM21920
        J=J+13                                                          ALM21930
      ELSE                                                              ALM21940
        J=J+L                                                           ALM21950
      ENDIF                                                             ALM21960
      IF(J.GT.68)GOTO 660                                               ALM22000
  650 CONTINUE                                                          ALM22100
C                                                                       ALM22200
  660 IF(KK.GT.0)GOTO 790                                               ALM22300
      IF(I.GE.JJ)GOTO 670                                               ALM22400
      CALL FOUTXX(VLFILE,B,88)                                          ALM22500
      K=I+1                                                             ALM22600
      GOTO 605                                                          ALM22700
C                                                                       ALM22800
  670 IF(IPOS.GT.0)GOTO 550                                             ALM22900
      LL=-IPOS                                                          ALM23000
      K=1                                                               ALM23100
      GOTO 700                                                          ALM23200
C                                                                       ALM23300
  680 B(1:88)=BLK                                                       ALM23510
      J=12                                                              ALM23600
C                                                                       ALM23700
  700 DO 750 I=K,ARGTOP                                                 ALM23800
      B(J:J+1)=', '                                                     ALM23910
      J=J+2                                                             ALM24000
      L=ARGTOP+1-I                                                      ALM24100
      II=ARGSTK(L)                                                      ALM24200
      IF(II.LE.NAMMAX)GOTO 710                                          ALM24300
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           ALM24310
      II=II-NAMMAX                                                      ALM24320
      IF(NLAST.GT.0)CALL MCXTRN(5,II,IDUMMY)                            ALM24400
      B(J:J+11)=CNUMTB(II)                                              ALM24500
      GOTO 720                                                          ALM24600
  710 IF(II.LT.0)II=-NAMTBL(II)                                         ALM24700
      B(J:J+5)=CNAMTB(II)                                               ALM24800
  720 IF(L.NE.LL)GOTO 725                                               ALM24900
      KK=J-1                                                            ALM25000
      GOTO 790                                                          ALM25100
  725 L=INDEX(B(J:J+11),' ')                                            ALM25510
      IF (L.EQ.0) THEN                                                  ALM25520
        J=J+13                                                          ALM25530
      ELSE                                                              ALM25540
        J=J+L                                                           ALM25550
      ENDIF                                                             ALM25560
      IF(J.GT.68)GOTO 760                                               ALM25600
  750 CONTINUE                                                          ALM25700
C                                                                       ALM25800
  760 IF(KK.GT.0)GOTO 790                                               ALM25900
      IF(I.GE.ARGTOP)GOTO 550                                           ALM26000
      CALL FOUTXX(VLFILE,B,88)                                          ALM26100
      K=I+1                                                             ALM26200
      GOTO 680                                                          ALM26300
C                                                                       ALM26400
  790 CALL FOUTXX(VLFILE,B,88)                                          ALM26500
      B(1:88)=BLK                                                       ALM26710
  820 CALL CFORM('A',B,KK,1)                                            ALM26800
      CALL FOUTXX(VLFILE,B,88)                                          ALM26900
      CALL CFORM('    ',B,KK,4)                                         ALM27000
C                                                                       ALM27100
C...     POSITION OF THE CURRENT ERROR NUMBER                           ALM27200
C                                                                       ALM27300
  550 I=0                                                               ALM27400
      NUMMIN=1                                                          ALM27500
      NUMMAX=ERND                                                       ALM27600
  200 NUMMER=(NUMMIN+NUMMAX)/2                                          ALM27700
      NUMB=ERRAD1(NUMMER)                                               ALM27800
      IF(I.GT.ERND)GOTO 230                                             ALM27900
      I=I+1                                                             ALM28000
      IF(NUMBER-NUMB)220,230,210                                        ALM28100
  210 NUMMIN=NUMMER+1                                                   ALM28200
      GOTO 200                                                          ALM28300
  220 NUMMAX=NUMMER-1                                                   ALM28400
      GOTO 200                                                          ALM28500
  230 B(1:4)=ESTRT                                                      ALM28600
      B(5:8)=ESTRT                                                      ALM28700
      B(9:12)=ASTRT                                                     ALM28800
      B(13:20)=HERRNO                                                   ALM28900
      CALL BINBCD(NUMBER,B(21:),N)                                      ALM29100
      B(29:32)=BLK                                                      ALM29200
      B(33:36)=ISNCDE                                                   ALM29300
      B(37:44)=SEQNUM                                                   ALM29510
      B(45:48)=BLK                                                      ALM29600
      B(49:64)=FROM                                                     ALM29810
      B(65:72)=SUBNAM                                                   ALM30010
C                                                                       ALM30100
C... SET ERROR LEVEL INDICATOR FOR THE SUPERVISOR.                      ALM30200
C                                                                       ALM30300
      I=2-ERLV/8                                                        ALM30400
      XTRAS(I)=XTRAS(I)+1                                               ALM30500
      IF(ERLV.GT.ERRX)ERRX=ERLV                                         ALM30600
      IF(ERLV.EQ.8)GOTO 8                                               ALM30700
      B(1:4)=WSTRT                                                      ALM30800
      B(5:8)=WSTRT                                                      ALM30900
      B(13:20)=HWARN                                                    ALM31110
    8 CALL FOUTXX(VLFILE,B,88)                                          ALM31200
C                                                                       ALM31300
      IF(ISEQ.EQ.SEQNO.AND.INUM.EQ.NUMBER)GOTO 150                      ALM31400
      IF(I.LE.ERND)GOTO 235                                             ALM31500
      B(13:64)=NOTEXT                                                   ALM31810
      GOTO 245                                                          ALM31900
  235 KK=ERRAD2(NUMMER)                                                 ALM32000
      IF (NUMMER.EQ.1) THEN                                             ALM32310
        II=NUMMER                                                       ALM32330
      ELSE                                                              ALM32340
        II=ERRAD2(NUMMER-1)+1                                           ALM32350
      ENDIF                                                             ALM32360
  237 K=12                                                              ALM32400
      DO 240 I=II,KK                                                    ALM32500
      IF(K.GE.92)GOTO 245                                               ALM32600
      K=K+4                                                             ALM32700
  240 B(K-3:K)=ERRTXT(I)                                                ALM32800
  245 IF (NUMBER.EQ.2058) THEN                                          ALM32810
        B(49:56)=CNAMTB(STACK(1,TOP+2))//'  '                           ALM32820
        B(69:76)=CNAMTB(STACK(1,TOP+1))//'  '                           ALM32830
        SEQNO=0                                                         ALM32840
      ENDIF                                                             ALM32850
      CALL FOUTXX(VLFILE,B,K)                                           ALM32900
      IF((KK-II).LT.20)GOTO 150                                         ALM33000
      II=I                                                              ALM33100
      GOTO 237                                                          ALM33200
C                                                                       ALM33300
  150 IF (.NOT. PRTERR) GO TO 250                                       ALM33400
      I=NUMBER/1000+1                                                   ALM33500
      J = 1                                                             ALM33600
      B(1:44)=BLK                                                       ALM33810
C                                                                       ALM33900
C...     BRANCH ON ERROR TYPE (= NUMBER/1000) TO SET UP DUMP LIMITS     ALM34000
C                                                                       ALM34100
      GO TO(250,20,30,40),I                                             ALM34200
C                                                                       ALM34300
C...     1000 SERIES - DUMP STACK (FROM 1 TO TOP)                       ALM34400
C                                                                       ALM34500
   20 K=TOP                                                             ALM34600
      IF(NUMBER.EQ.1028) K=TOP-1                                        ALM34700
      GO TO 50                                                          ALM34800
C                                                                       ALM34900
C...     2000 SERIES - DUMP ARGSTK (FROM 1 TO ARGTOP)                   ALM35000
C                                                                       ALM35100
   30 K=ARGTOP                                                          ALM35200
      GO TO 50                                                          ALM35300
C                                                                       ALM35400
C...     3000 SERIES - DUMP NAME PORTION OF NAMTBL (FROM 1 TO NAMMAX)   ALM35500
C                                                                       ALM35600
   40 K=NAMMAX                                                          ALM35700
      GOTO 50                                                           ALM35800
C                                                                       ALM35900
C...     THIS LOOP DUMPS APPROPRIATE TABLE                              ALM36000
C                                                                       ALM36100
   50 DO 120 L=J,K                                                      ALM36200
C                                                                       ALM36300
C...     BRANCH ON ERROR TYPE TO DUMP APPROPRIATE TABLE                 ALM36400
C                                                                       ALM36500
      GO TO(250,70,80,90),I                                             ALM36600
C                                                                       ALM36700
C...     1000 SERIES - EXTRACT NAMTBL POINTER FROM STACK                ALM36800
C                                                                       ALM36900
   70 M=STACK(1,L)                                                      ALM37000
      GO TO 60                                                          ALM37100
C                                                                       ALM37200
C...     2000 SERIES - EXTRACT NAMTBL POINTER FROM ARGSTK               ALM37300
C                                                                       ALM37400
   80 M=ARGTOP+1-L                                                      ALM37500
      M=ARGSTK(M)                                                       ALM37600
      GO TO 60                                                          ALM37700
C                                                                       ALM37800
C...     3000 SERIES - USE NAMTBL POINTER                               ALM37900
C                                                                       ALM38000
   90 M=L                                                               ALM38100
C                                                                       ALM38200
C...     BRANCH IF ITEM IS NOT A NUMBER                                 ALM38300
C                                                                       ALM38400
   60 IF (M.LE.NAMMAX) GOTO 61                                          ALM38500
C                                                                       ALM38600
C...     STORE BCD OF NUMBER                                            ALM38700
C                                                                       ALM38800
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           ALM38810
      M=M-NAMMAX                                                        ALM38820
      IF(NLAST.GT.0)CALL MCXTRN(5,M,IDUMMY)                             ALM38900
      B(5:16) = CNUMTB(M)                                               ALM39000
      B(17:20)=B(1:4)                                                   ALM39300
      GOTO 62                                                           ALM39400
C                                                                       ALM39500
C...     STORE BCD OF NAME                                              ALM39600
C                                                                       ALM39700
   61 B(5:10) =CNAMTB(M)                                                ALM39800
C                                                                       ALM40000
C...     IS IT A SYNONYM                                                ALM40100
C                                                                       ALM40200
      IF(NAMTBL(M).LT.0) GO TO 105                                      ALM40300
C                                                                       ALM40400
C...     NO. CONVERT CLASS/MODE TO BCD.                                 ALM40500
C                                                                       ALM40600
      CALL BINBCD(NAMTBL(M),B(13:),N)                                   ALM40700
C                                                                       ALM40800
C...     OUTPUT LINE                                                    ALM40900
C                                                                       ALM41000
   62 IF(PRTERR) CALL FOUTXX(VLFILE,B,20)                               ALM41100
      GOTO 110                                                          ALM41200
C                                                                       ALM41300
C...     SYNONYM - FIND EQUIVALENT NAME, CONVERT TO BCD AND OUTPUT      ALM41400
C                                                                       ALM41500
  105 M = -NAMTBL(M)                                                    ALM41600
      B(13:28)=HEQU                                                     ALM42010
      B(29:34) = CNAMTB(M)                                              ALM42100
      CALL BINBCD(NAMTBL(M),B(37:),N)                                   ALM42300
      IF(PRTERR) CALL FOUTXX(VLFILE,B,44)                               ALM42400
  110 CONTINUE                                                          ALM42500
C                                                                       ALM42600
C.....   END OF LOOP                                                    ALM42700
C                                                                       ALM42800
  120 CONTINUE                                                          ALM42900
C                                                                       ALM43000
C...     ALL OF RELEVANT INFORMATION HAS BEEN PRINTED - RETURN          ALM43100
C                                                                       ALM43200
  250 B(1:88)=BLK                                                       ALM43410
      CALL FOUTXX(VLFILE,B,88)                                          ALM43500
      ISEQ=SEQNO                                                        ALM43600
      INUM=NUMBER                                                       ALM43700
   10 RETURN                                                            ALM43800
      END                                                               ALM43900
**** SOURCE FILE : ANDF0000.ORG   ***
*
      INTEGER FUNCTION ANDF(A,B)                                        00000100
C                                                                       00000200
C.   THIS ROUTINE IS COMPILER DEPENDENT.                                00000300
C                                                                       00000400
C    TWO POSSIBLE SOLUTIONS ARE OUTLINED HERE                           00000500
C                                                                       00000600
C-VAX-VERSION                                                           00000700
C                                                                       00000800
      INTEGER A,B                                                       00000900
      ANDF=IAND(A,B)                                                    00001000
C                                                                       00001100
C-PRIME=VERSION                                                         00001200
C                                                                       00001300
C      INTEGER                                                          00001400
C      ANDF=AND(A,B)                                                    00001500
C                                                                       00001600
      RETURN                                                            00001700
      END                                                               00001800
**** SOURCE FILE : M0006616.V03   ***
*
C                                                                       ARC00100
C              FORTRAN SUBROUTINE ARGCVT                                ARC00200
C                                                                       ARC00300
C LINKAGE      SUBROUTINE ARGCVT(INDEX)                                 ARC00400
C                                                                       ARC00500
C          SUBSIDIARIES                  CALLED BY                      ARC00600
C          TYPE          ENTRY           TYPE          ENTRY            ARC00700
C          SUBROUTINE    TWOARG          SUBROUTINE    ARGGEN           ARC00800
C                                        SUBROUTINE    ASNADZ           ARC00900
C                                        SUBROUTINE    BOOLIF           ARC01000
C                                        SUBROUTINE    GOLO             ARC01100
C                                        SUBROUTINE    GOPAT            ARC01200
C                                        SUBROUTINE    INPAT            ARC01300
C                                        SUBROUTINE    ISSCOD           ARC01400
C                                        SUBROUTINE    LARGES           ARC01500
C                                        SUBROUTINE    LCANON           ARC01600
C                                        SUBROUTINE    LOOP             ARC01700
C                                        SUBROUTINE    MACREC           ARC01800
C                                        SUBROUTINE    MOTION           ARC01900
C                                        SUBROUTINE    PRO020           ARC02000
C                                        SUBROUTINE    PRO021           ARC02100
C                                        SUBROUTINE    PRO026           ARC02200
C                                        SUBROUTINE    PRO027           ARC02300
C                                        SUBROUTINE    RECOG            ARC02400
C                                        SUBROUTINE    RECOGN           ARC02500
C                                        SUBROUTINE    REFGEN           ARC02600
C                                        SUBROUTINE    REFREF           ARC02700
C                                        SUBROUTINE    REPLAC           ARC02800
C                                        SUBROUTINE    SSDEF            ARC02900
C                                        SUBROUTINE    SUBCOD           ARC03000
C                                        SUBROUTINE    TSSMIL           ARC03100
C                                                                       ARC03200
      SUBROUTINE ARGCVT(INDEX)                                          ARC03300
C                                                                       ARC03400
      IMPLICIT INTEGER (A-Z)                                            ARC03500
C                                                                       ARC03600
C        1.    NAME TABLE AND TABLE LIMITS                              ARC03700
C                                                                       ARC03800
      INCLUDE 'NAMETB.INC'                                              ARC03910
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                ARC03950
C CNAMTB:      NAME TABLE OR DICTIONARY                                 ARC04050
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     ARC04100
C                                                                       ARC04500
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      ARC04600
C                                                                       ARC04700
      COMMON/CODE/CODE                                                  ARC04800
      DIMENSION CODE(150),TEMP(2),LABEL(2),IMPLAB(2),VBL(2)             ARC04900
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        ARC05000
      EQUIVALENCE (TEMP(1),CODE(33))                                    ARC05100
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        ARC05200
      EQUIVALENCE (LABEL(1),CODE(43))                                   ARC05300
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        ARC05400
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  ARC05500
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        ARC05600
      EQUIVALENCE (VBL(1),CODE(61))                                     ARC05700
C                                                                       ARC05800
C       27.    OPERAND MODIFIERS                                        ARC05900
C                                                                       ARC06000
      COMMON/OPMOD/OPMOD                                                ARC06100
      DIMENSION OPMOD(6)                                                ARC06200
C NOUGHT:      CONTAINS OPERAND TYPE 0                                  ARC06300
      EQUIVALENCE (NOUGHT,OPMOD(1))                                     ARC06400
C DLR:         CONTAINS OPERAND TYPE CODE 1                             ARC06500
      EQUIVALENCE (DLR,OPMOD(2))                                        ARC06600
C DBLDLR:      CONTAINS OPERAND TYPE CODE 2                             ARC06700
      EQUIVALENCE (DBLDLR,OPMOD(3))                                     ARC06800
C TRPDLR:      CONTAINS OPERAND TYPE CODE 3                             ARC06900
      EQUIVALENCE (TRPDLR,OPMOD(4))                                     ARC07000
C                                                                       ARC07100
C       29.    CLASS CODE MODULI                                        ARC07200
C                                                                       ARC07300
      COMMON/MODULI/MODULI                                              ARC07400
      DIMENSION MODULI(2)                                               ARC07500
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    ARC07600
      EQUIVALENCE (MODULO,MODULI(1))                                    ARC07700
C MODHLF:      NORMAL MODE CODE LIMIT 500                               ARC07800
      EQUIVALENCE (MODHLF,MODULI(2))                                    ARC07900
C*                                                                      ARC08000
C PURPOSE      TO DETERMINE THE LITERAL DESIGNATION OF AN               ARC08100
C              ARGUMENT AND OUTPUT THE APPROPRIATE ARGUMENT-            ARC08200
C              PAIR TO THE I.L. INTERNAL RECORD IMAGE                   ARC08300
C              (ILFILE)                                                 ARC08400
C                                                                       ARC08500
C ARGUMENTS    INDEX    NAME TABLE (NAMTBL) INDEX OF ARGUMENT.          ARC08600
C**                                                                     ARC08700
C...     IS INDEX A POINTER TO A NUMBER                                 ARC08800
C                                                                       ARC08900
      IF(INDEX.GT.NAMMAX) GOTO 20                                       ARC09000
C                                                                       ARC09100
C...     NO. CALCULATE CLASS OF THIS ITEM.                              ARC09200
C                                                                       ARC09300
      L = MODULO*(NAMTBL(INDEX)/MODULO)                                 ARC09400
C                                                                       ARC09500
C...     IS MODE OF ITEM GREATER THAN MODHLF                            ARC09600
C...     I.E. IS IT AN INDIRECT ADDRESS                                 ARC09700
C                                                                       ARC09800
      IF((NAMTBL(INDEX)-L).LT.MODHLF) GO TO 10                          ARC09900
C                                                                       ARC10000
C...     YES. CALL TWOARG WITH MODIFIER OF 3 ($$$)                      ARC10100
C                                                                       ARC10200
      CALL TWOARG(TRPDLR,INDEX)                                         ARC10300
      GO TO 100                                                         ARC10400
C                                                                       ARC10500
C...     NOT AN INDIRECT ADDRESS.                                       ARC10600
C...     IS IT OF CLASS VBL, TEMP, LABEL, OR IMPLAB.                    ARC10700
C                                                                       ARC10800
   10 IF ((L.NE.VBL(1)).AND.(L.NE.TEMP(1)).AND.(L.NE.LABEL(1))          ARC10900
     / .AND.(L.NE.IMPLAB(1))) GOTO 30                                   ARC11000
C                                                                       ARC11100
C...     YES. CALL TWOARG WITH MODIFIER OF 0                            ARC11200
C                                                                       ARC11300
      CALL TWOARG(NOUGHT,INDEX)                                         ARC11400
      GO TO 100                                                         ARC11500
C                                                                       ARC11600
C...     NUMBER. CALL TWOARG WITH MODIFIER OF 1 ($)                     ARC11700
C                                                                       ARC11800
   20 CALL TWOARG(DLR,INDEX)                                            ARC11900
      GO TO 100                                                         ARC12000
C                                                                       ARC12100
C...     BCD CHARACTER INDEX. CALL TWOARG WITH MODIFIER OF 2 ($$)       ARC12200
C                                                                       ARC12300
   30 CALL TWOARG(DBLDLR,INDEX)                                         ARC12400
  100 RETURN                                                            ARC12500
       END                                                              ARC12600
**** SOURCE FILE : M0006617.V01   ***
*
C                                                                       ARG00100
C              FORTRAN SUBROUTINE ARGGEN                                ARG00200
C                                                                       ARG00300
C LINKAGE      SUBROUTINE ARGGEN                                        ARG00400
C                                                                       ARG00500
C          SUBSIDIARIES                  CALLED BY                      ARG00600
C          TYPE          ENTRY           TYPE          ENTRY            ARG00700
C          SUBROUTINE    ARGCVT          SUBROUTINE    PRO020           ARG00800
C                                        SUBROUTINE    PRO021           ARG00900
C                                        SUBROUTINE    PRO026           ARG01000
C                                        SUBROUTINE    RECOG            ARG01100
C                                                                       ARG01200
      SUBROUTINE ARGGEN                                                 ARG01300
C                                                                       ARG01400
      IMPLICIT INTEGER (A-Z)                                            ARG01500
C                                                                       ARG01600
C        2.    STACK AND POINTER STORAGE                                ARG01700
C                                                                       ARG01800
      COMMON/STKLST/STKLST                                              ARG01900
      DIMENSION STKLST(300),ARGSTK(99)                                  ARG02000
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             ARG02100
      EQUIVALENCE (ARGTOP,STKLST(2))                                    ARG02200
C ARGSTK:      ARGUMENT STACK                                           ARG02300
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               ARG02400
C*                                                                      ARG02500
C PURPOSE      OUTPUTS ENTIRE CONTENTS OF THE ARGUMENT                  ARG02600
C              STACK (ARGSTK) TO THE I.L. INTERNAL RECORD               ARG02700
C              IMAGE (ILFILE).                                          ARG02800
C NOTES        THE ARGUMENTS ARE PLACED IN ILFILE IN THE                ARG02900
C              REVERSE ORDER IN WHICH THEY ARE STORED IN                ARG03000
C              ARGSTK.                                                  ARG03100
C**                                                                     ARG03200
C...     FETCH ITEMS FROM ARGSTK IN REVERSE ORDER TO THAT IN WHICH      ARG03300
C...     THEY WERE INSERTED, AND OUTPUT TO ILFILE USING ARGCVT.         ARG03400
C                                                                       ARG03500
      DO 1 II = 1,ARGTOP                                                ARG03600
      I = ARGTOP-II+1                                                   ARG03700
      K = ARGSTK(I)                                                     ARG03800
    1 CALL ARGCVT(K)                                                    ARG03900
C                                                                       ARG04000
C...     SET ARGTOP TO ZERO (I.E. CLEAR ARGSTK) AND RETURN              ARG04100
C                                                                       ARG04200
      ARGTOP = 0                                                        ARG04300
      RETURN                                                            ARG04400
       END                                                              ARG04500
**** SOURCE FILE : M0006618.V01   ***
*
C                                                                       ASA00100
C              FORTRAN SUBROUTINE ASNADZ                                ASA00200
C                                                                       ASA00300
C LINKAGE      SUBROUTINE ASNADZ(IADD,ITAKE)                            ASA00400
C                                                                       ASA00500
C          SUBSIDIARIES                  CALLED BY                      ASA00600
C          TYPE          ENTRY           TYPE          ENTRY            ASA00700
C          SUBROUTINE    ARGCVT          SUBROUTINE    COMSTR           ASA00800
C          SUBROUTINE    ONEARG          SUBROUTINE    MACREC           ASA00900
C          SUBROUTINE    OPCODE                                         ASA01000
C          SUBROUTINE    RLSLIN                                         ASA01100
C                                                                       ASA01200
      SUBROUTINE ASNADZ(IADD,ITAKE)                                     ASA01300
C                                                                       ASA01400
      IMPLICIT INTEGER (A-Z)                                            ASA01500
C                                                                       ASA01600
C       16.    LITERALS FOR I. L. OPERATION CODES                       ASA01700
C                                                                       ASA01800
      COMMON/IL/IL                                                      ASA01900
      DIMENSION IL(21)                                                  ASA02000
C ASNADD:      CONTAINS COMMAND CODE (15) FOR ASNADD COMMAND            ASA02100
      EQUIVALENCE (ASNADD,IL(15))                                       ASA02200
C*                                                                      ASA02300
C PURPOSE      TO GENERATE AND OUTPUT TO THE I.L. INTERNAL              ASA02400
C              RECORD IMAGE (ILFILE) THE ASNADD I.L. COMMAND            ASA02500
C              THAT STORES THE ADDRESS OF AN ASSIGNED VALUE             ASA02600
C              AS THE VALUE OF A MACRO VARIABLE.                        ASA02700
C                                                                       ASA02800
C ARGUMENTS    IADD     NAME TABLE (NAMTBL) INDEX OF MACRO VARIABLE     ASA02900
C              ITAKE    NAME TABLE INDEX OF ASSIGNED VALUE.             ASA03000
C                                                                       ASA03100
C NOTES        INDIRECT ADDRESSING EMPLOYED TO RETRIEVE                 ASA03200
C              ASSIGNED VALUE.                                          ASA03300
C**                                                                     ASA03400
      CALL OPCODE(ASNADD)                                               ASA03500
      CALL ONEARG(IADD)                                                 ASA03600
      CALL ARGCVT(ITAKE)                                                ASA03700
      CALL RLSLIN                                                       ASA03800
       RETURN                                                           ASA03900
       END                                                              ASA04000
**** SOURCE FILE : M0006619.V01   ***
*
C                                                                       ASJ00100
C              FORTRAN SUBROUTINE ASNJPZ                                ASJ00200
C                                                                       ASJ00300
C LINKAGE      SUBROUTINE ASNJPZ(ILBL,ITAKE)                            ASJ00400
C                                                                       ASJ00500
C          SUBSIDIARIES                  CALLED BY                      ASJ00600
C          TYPE          ENTRY           TYPE          ENTRY            ASJ00700
C          SUBROUTINE    OPCODE          SUBROUTINE    COMSTR           ASJ00800
C          SUBROUTINE    RLSLIN                                         ASJ00900
C          SUBROUTINE    TWOARG                                         ASJ01000
C                                                                       ASJ01100
      SUBROUTINE ASNJPZ(ILBL,ITAKE)                                     ASJ01200
C                                                                       ASJ01300
      IMPLICIT INTEGER (A-Z)                                            ASJ01400
C                                                                       ASJ01500
C       16.    LITERALS FOR I. L. OPERATION CODES                       ASJ01600
C                                                                       ASJ01700
      COMMON/IL/IL                                                      ASJ01800
      DIMENSION IL(21)                                                  ASJ01900
C ASNJMP:      CONTAINS COMMAND CODE (16) FOR ASNJMP COMMAND            ASJ02000
      EQUIVALENCE (ASNJMP,IL(16))                                       ASJ02100
C*                                                                      ASJ02200
C PURPOSE      TO GENERATE AND OUTPUT TO THE I.L. INTERNAL              ASJ02300
C              RECORD IMAGE (ILFILE) THE ASNJPZ I.L.                    ASJ02400
C              COMMAND THAT STORES THE ADDRESS OF A LABEL               ASJ02500
C              AS THE VALUE OF A MACRO VARIABLE.                        ASJ02600
C                                                                       ASJ02700
C ARGUMENTS    ILBL    NAME TABLE (NAMTBL) INDEX OF MACRO VARIABLE.     ASJ02800
C              ITAKE   NAME TABLE (NAMTBL) INDEX OF LABEL.              ASJ02900
C**                                                                     ASJ03000
      CALL OPCODE(ASNJMP)                                               ASJ03100
      CALL TWOARG(ILBL,ITAKE)                                           ASJ03200
      CALL RLSLIN                                                       ASJ03300
       RETURN                                                           ASJ03400
       END                                                              ASJ03500
**** SOURCE FILE : M0000500.V03   ***
*
C                                                                       BHI00001
C.....IMPLEMENTATION DEPENDENT SUBROUTINE ...BCDBIN   8/68          HG  BHI00002
C.... IMPLEMENTATION DEPENDENT   ....BCDBIN....   HLG  12/67      ..CD. BHI00020
C PURPOSE      TO CONVERT AN INTEGER FROM BCD TO BINARY.                BHI00040
C                                                                       BHI00060
C LINKAGE      CALL BCDBIN (WORD, I, COUNT)                             BHI00080
C                                                                       BHI00100
C ARGUMENTS    WORD     CONTAINS THE BCD REPRESENTATION OF              BHI00120
C                       THE NUMBER, LEFT JUSTIFIED.                     BHI00140
C              I        WILL CONTAIN THE BINARY INTEGER                 BHI00160
C              COUNT    WILL CONTAIN A COUNT OF THE NUMBER              BHI00180
C                       OF DIGITS IN THE NUMBER.                        BHI00200
C                                                                       BHI00220
C                                                                       BHI00300
C SUBSIDIARIES TYPE                ENTRY                                BHI00320
C              SUBROUTINE          HELP                                 BHI00340
C                                                                       BHI00360
C                                                                       BHI00380
      SUBROUTINE BCDBIN(WORD,I,COUNT)                                   BHI00400
C                                                                       BHI00420
      INTEGER I,COUNT,NUM                                               BHI00440
      CHARACTER WORD*8,W*8,CHAR,ZERO,PERIOD,BLANK                       BHI00460
C                                                                       BHI00520
      DATA PERIOD/'.'/,BLANK/' '/,ZERO/'0'/                             BHI00540
C                                                                       BHI00550
      W=WORD                                                            BHI00560
      I=0                                                               BHI00600
      DO 300 J=1,8                                                      BHI00620
      COUNT=J                                                           BHI00640
      CHAR=W(J:J)                                                       BHI00660
      IF( CHAR   .EQ.PERIOD.OR. CHAR   .EQ.BLANK) GOTO 100              BHI00680
      NUM=ICHAR(CHAR)-ICHAR(ZERO)                                       BHI00700
      IF(NUM.GT.9.OR.NUM.LT.0) GOTO 400                                 BHI00720
      I=I*10+NUM                                                        BHI00740
  300 CONTINUE                                                          BHI00760
  200 RETURN                                                            BHI00780
  100 COUNT=COUNT-1                                                     BHI00800
      GOTO 200                                                          BHI00820
  400 COUNT = -1                                                        BHI00840
      GOTO 200                                                          BHI00860
      END                                                               BHI00880
**** SOURCE FILE : M0006641.V06   ***
*
C                                                                       IPL00100
C...  FORTRAN BLOCK DATA ROUTINE       IPL       8/81      FE353        IPL00200
C                                                                       IPL00300
      BLOCK DATA BDIPL                                                  IPL00400
C                                                                       IPL00500
      IMPLICIT INTEGER (A-Z)                                            IPL00600
C                                                                       IPL00700
C...        34.    COMMON BLOCK FOR INTERPRETIVE C.I.L. OUTPUT          IPL00800
C                                                                       IPL00900
      INCLUDE 'OUTBUF.INC'                                              IPL01010
C                                                                       IPL02700
C...        20.    IO - ARRAY                                           IPL02800
C                                                                       IPL02900
      INCLUDE 'DARRAY.INC'                                              IPL03150
C                                                                       IPL03400
C...        34.    COMMON BLOCK FOR INTERPRETIVE C.I.L. OUTPUT          IPL03500
C                                                                       IPL03600
      DATA PPPAGE,MCPAGE,PAGPAK,ISC,ISCARR,ICFORM,MACWDS,IBUF,ILBUF,    IPL03700
     1PPWRDS,LPAGE,MACFLG,LABFLG,RSVFLG/0,0,65536,8*0,3*.FALSE./,       IPL03800
     2 IFLOAT,ICOM/2*0/                                                 IPL03900
C                                                                       IPL04000
C...        20.    IO - ARRAY                                           IPL04100
C                                                                       IPL04200
      DATA DARRAY/' '/                                                  IPL04300
      END                                                               IPL04400
**** SOURCE FILE : BDSDP000.ORG   ***
*
      BLOCK DATA BDSDP                                                  00000100
C                                                                       00000200
C  PURPOSE TO INITIALIZE SYSTEM DEPENDENT PARAMETERS                    00000300
C                                                                       00000400
      INCLUDE 'SDP.INC'                                                 00000500
C                                                                       00000600
C     NBCHAR:  NO. OF BITS PER BYTE                                     00000700
      DATA NBCHAR/8/                                                    00000800
C     NBWRD:   NO OF BITS PER WORD                                      00000900
      DATA NBWRD/32/                                                    00001000
C     IWRD:    NO OF BYTES PER WORD                                     00001100
      DATA IWRD/4/                                                      00001200
C     IFAC:    BYTE LEFT SHIFT MULTIPLICATION FACTOR                    00001300
      DATA IFAC/256/                                                    00001400
C                                                                       00001500
      END                                                               00001600
**** SOURCE FILE : M0000502.W01   ***
*
C                                                                       BIH00001
C *  BINBCD  *  FORTRAN 77 SUBROUTINE   E.MCLELLAN  06.85               BIH00002
C                                                                       BIH00003
      SUBROUTINE BINBCD(JNTGER,SYMBOL,COUNT)                            BIH00020
      INTEGER COUNT,INTGER                                              BIH00040
      CHARACTER SYMBOL*(*),BCD*8,ZERO,BLANK                             BIH00041
      DATA BLANK/' '/,ZERO/'0'/                                         BIH00100
C                                                                       BIH00101
      INTGER=JNTGER                                                     BIH00160
      COUNT=0                                                           BIH00180
      BCD=BLANK                                                         BIH00201
      IF(INTGER.LT.0) THEN                                              BIH00240
        SYMBOL=BCD                                                      BIH00250
      ELSE                                                              BIH00270
        WRITE(BCD,'(I8)') INTGER                                        BIH00290
        DO 10 I=1,8                                                     BIH00310
          IF (BCD(I:I).NE.BLANK) THEN                                   BIH00330
            J=I                                                         BIH00350
            GOTO 20                                                     BIH00370
          ENDIF                                                         BIH00390
   10   CONTINUE                                                        BIH00410
C                                                                       BIH00415
   20   COUNT=9-J                                                       BIH00430
        SYMBOL=BCD(J:8)//BLANK                                          BIH00450
      ENDIF                                                             BIH00470
      RETURN                                                            BIH00480
      END                                                               BIH00500
**** SOURCE FILE : M0006621.W02   ***
*
C                                                                       BCK00100
C              FORTRAN SUBROUTINE BINCHK                                BCK00200
C                                                                       BCK00300
C LINKAGE      SUBROUTINE BINCHK(I)                                     BCK00400
C                                                                       BCK00500
C          SUBSIDIARIES                  CALLED BY                      BCK00600
C          TYPE          ENTRY           TYPE          ENTRY            BCK00700
C          SUBROUTINE    BCDBIN          SUBROUTINE    ICMPRS           BCK00800
C                                                                       BCK00900
      SUBROUTINE BINCHK(I)                                              BCK01000
C                                                                       BCK01100
      IMPLICIT INTEGER (A-Z)                                            BCK01200
C                                                                       BCK01300
C        1.    NAME TABLE AND TABLE LIMITS                              BCK01400
C                                                                       BCK01500
      INCLUDE 'NAMETB.INC'                                              BCK01610
C CNAMTB:      NAME TABLE OR DICTIONARY                                 BCK01650
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                BCK01750
C IFIXST:      NAMTBL INDEX OF BEGINNING OF FIXED POINT NUMBER SECTION  BCK01800
C                                                                       BCK02200
C       19.    INTERMEDIATE LANGUAGE TEXT                               BCK02300
C                                                                       BCK02400
      COMMON/ILTEXT/ILTEXT                                              BCK02500
      DIMENSION ILTEXT(94),TEXTIN(90)                                   BCK02600
C OPTEXT:      CONTAINS COMMAND CODE FOR CURRENT I.L. COMMAND           BCK02610
      EQUIVALENCE (OPTEXT,ILTEXT(4))                                    BCK02620
C TEXTIN:      STORAGE FOR CURRENTLY GENERATED I.L. COMMAND ARGUM.LIST  BCK02700
      EQUIVALENCE (TEXTIN(1),ILTEXT(5))                                 BCK02800
C                                                                       BCK02810
      INCLUDE 'NUMBLK.INC'                                              BCK02820
C                                                                       BCK02830
C**                                                                     BCK02900
C...     IS ARGUMENT MODIFIER 1 OR 6                                    BCK03000
C                                                                       BCK03100
      IF (TEXTIN(I).EQ.6) GOTO 5                                        BCK03110
      IF (TEXTIN(I).NE.1) RETURN                                        BCK03200
C                                                                       BCK03300
C...     YES. IS INDEX A POINTER TO AN INTEGER                          BCK03400
C                                                                       BCK03500
      IF (TEXTIN(I+1).GT.(IFIXST+9)) RETURN                             BCK03600
C                                                                       BCK03700
C...     YES. STORE MODIFIER OF 5 AND BINARY INTEGER                    BCK03800
C                                                                       BCK03900
      TEXTIN(I) = 5                                                     BCK04000
    5 J = TEXTIN(I+1)-NAMMAX                                            BCK04100
      CALL BCDBIN(CNUMTB(J),KK,K)                                       BCK04200
      IF (KK.GT.32767) THEN                                             BCK04210
        TEXTIN(I)=7                                                     BCK04220
        NMBRS=NMBRS+1                                                   BCK04230
      ELSE                                                              BCK04240
        TEXTIN(I+1)=KK                                                  BCK04250
      ENDIF                                                             BCK04270
      RETURN                                                            BCK04300
       END                                                              BCK04400
**** SOURCE FILE : M0006623.V01   ***
*
C                                                                       BIT00100
C              FORTRAN SUBROUTINE BITMCH                                BIT00200
C                                                                       BIT00300
C LINKAGE      LOGICAL FUNCTION BITMCH(WORD,N)                          BIT00400
C                                                                       BIT00500
C          SUBSIDIARIES                  CALLED BY                      BIT00600
C          NONE                          TYPE          ENTRY            BIT00700
C                                        SUBROUTINE    COMSTR           BIT00800
C                                                                       BIT00900
      LOGICAL FUNCTION BITMCH(WORD,N)                                   BIT01000
C                                                                       BIT01100
      IMPLICIT INTEGER (A-Z)                                            BIT01200
C                                                                       BIT01300
C       32.    COMMON BLOCK FOR SETBIT AND BITMCH                       BIT01400
C              CONTAINS ONE WORD FOR EACH BIT WITH ONLY THAT BIT SET    BIT01500
      COMMON/BITCOM/BIT                                                 BIT01600
      DIMENSION BIT(32)                                                 BIT01700
C*                                                                      BIT01800
C PURPOSE      TO DETERMINE WHETHER THE BIT POSITION DESIGNATED         BIT01900
C              BY THE SECOND ARGUMENT N IS SET IN THE FIRST             BIT02000
C              ARGUMENT WORD.                                           BIT02100
C                                                                       BIT02200
C ARGUMENTS    WORD    ELEMENT WHOSE BIT POSITION IS BEING EXAMINED     BIT02300
C              N       BIT POSITION                                     BIT02400
C**                                                                     BIT02500
      BITMCH=.FALSE.                                                    BIT02600
      IF (MOD(WORD/BIT(N+1),2) .EQ. 1) BITMCH= .TRUE.                   BIT02700
   2  RETURN                                                            BIT02800
       END                                                              BIT02900
**** SOURCE FILE : M0006624.W03   ***
*
C                                                                       BLF00100
C              FORTRAN SUBROUTINE BOOLIF                                BLF00200
C                                                                       BLF00300
C LINKAGE      SUBROUTINE  BOOLIF(PROD)                                 BLF00400
C                                                                       BLF00500
C          SUBSIDIARIES                  CALLED BY                      BLF00600
C          TYPE          ENTRY           TYPE          ENTRY            BLF00700
C          SUBROUTINE    ARGCVT          SUBROUTINE    RECOG            BLF00800
C          SUBROUTINE    MACLBL          SUBROUTINE    INPUT            BLF00900
C          LOGICAL FCT.  IFTMP                                          BLF01000
C          INTEGER FCT.  MODE                                           BLF01100
C          SUBROUTINE    ONEARG                                         BLF01200
C          SUBROUTINE    OPCODE                                         BLF01300
C          INTEGER FCT.  GETTMP                                         BLF01400
C          SUBROUTINE    CALLZZ                                         BLF01500
C          SUBROUTINE    PUTTMP                                         BLF01600
C          SUBROUTINE    RLSLIN                                         BLF01700
C          SUBROUTINE    LABELZ                                         BLF01800
C          SUBROUTINE    ALARM                                          BLF01900
C          SUBROUTINE    TWOARG                                         BLF02000
C                                                                       BLF02100
      SUBROUTINE  BOOLIF(PROD)                                          BLF02200
C                                                                       BLF02300
      IMPLICIT INTEGER (A-Z)                                            BLF02400
C                                                                       BLF02500
C              FUNCTION DECLARATION                                     BLF02600
      LOGICAL IFTMP                                                     BLF02700
C                                                                       BLF02800
C        1.    NAME TABLE AND TABLE LIMITS                              BLF02900
C                                                                       BLF03000
      INCLUDE 'NAMETB.INC'                                              BLF03110
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                BLF03120
C                                                                       BLF03500
C        2.    STACK AND POINTER STORAGE                                BLF03600
C                                                                       BLF03700
      COMMON/STKLST/STKLST                                              BLF03800
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      BLF03900
C TOP:         POINTER TO LAST STACK ENTRY                              BLF04000
      EQUIVALENCE (TOP,STKLST(1))                                       BLF04100
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             BLF04200
      EQUIVALENCE (ARGTOP,STKLST(2))                                    BLF04300
C STACK:       WORKING STACK                                            BLF04400
      EQUIVALENCE (STACK(1,1),STKLST(4))                                BLF04500
C ARGSTK:      ARGUMENT STACK                                           BLF04600
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               BLF04700
C                                                                       BLF04800
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      BLF04900
C                                                                       BLF05000
      COMMON/CODE/CODE                                                  BLF05100
      DIMENSION CODE(150),NUMBER(2),LABEL(2),IMPLAB(2),RELAT(2),AND(2)  BLF05200
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        BLF05300
      EQUIVALENCE (NUMBER(1),CODE(27))                                  BLF05400
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        BLF05500
      EQUIVALENCE (LABEL(1),CODE(43))                                   BLF05600
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        BLF05700
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  BLF05800
C RELAT:       (1)=CODE CLASS 27000,(2)=NAMTBL INDEX OF 'RELAT '        BLF05900
      EQUIVALENCE (RELAT(1),CODE(53))                                   BLF06000
C AND:         (1)=CODE CLASS 29000,(2)=NAMTBL INDEX OF 'AND   '        BLF06100
      EQUIVALENCE (AND(1),CODE(57))                                     BLF06200
C                                                                       BLF06300
C        4.    PRODUCTION TABLE                                         BLF06400
C                                                                       BLF06500
      COMMON/SRCTBL/SRCTBL                                              BLF06600
      DIMENSION SRCTBL(501),META(50)                                    BLF06700
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   BLF06800
      EQUIVALENCE (META(1),SRCTBL(3))                                   BLF06900
C                                                                       BLF08000
C       16.    LITERALS FOR I. L. OPERATION CODES                       BLF08100
C                                                                       BLF08200
      COMMON/IL/IL                                                      BLF08300
      DIMENSION IL(21)                                                  BLF08400
C CONJMP:      CONTAINS COMMAND CODE (11) FOR CONJMP COMMAND            BLF08500
      EQUIVALENCE (CONJMP,IL(11))                                       BLF08600
C                                                                       BLF08700
C       17.    MODE CODES                                               BLF08800
C                                                                       BLF08900
      COMMON/MODX/MODX                                                  BLF09000
      DIMENSION MODX(32)                                                BLF09100
C REAL:        MODE CODE (21) FOR A SCALAR                              BLF09200
      EQUIVALENCE (REAL,MODX(21))                                       BLF09300
C BOOL:        MODE CODE (23) FOR BOOLEAN                               BLF09400
      EQUIVALENCE (BOOL,MODX(23))                                       BLF09500
C                                                                       BLF09600
C       22.    MACRO PROCESSING VARIABLES                               BLF09700
C                                                                       BLF09800
      COMMON/MACXX1/MACXX1                                              BLF09900
      LOGICAL FINMAC                                                    BLF10000
      DIMENSION MACXX1(71)                                              BLF10100
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING            BLF10200
      EQUIVALENCE (FINMAC,MACXX1(24))                                   BLF10300
C WHCHMN:      EQUAL TO NUMBER OF CURRENT MACRO BEING PROCESSED         BLF10400
      EQUIVALENCE (WHCHMN,MACXX1(63))                                   BLF10500
C                                                                       BLF10600
C       27.    OPERAND MODIFIERS                                        BLF10700
C                                                                       BLF10800
      COMMON/OPMOD/OPMOD                                                BLF10900
      DIMENSION OPMOD(6)                                                BLF11000
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             BLF11100
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     BLF11200
C                                                                       BLF11300
C       28.    OPERAND MODIFIERS                                        BLF11400
C                                                                       BLF11500
      COMMON/SUBLST/SUBLST                                              BLF11600
      DIMENSION SUBLST(136)                                             BLF11700
C LOGIF:       NAMTBL POINTER TO EXECUTION SUBROUTINE RELAT             BLF11800
      EQUIVALENCE (LOGIF,SUBLST(104))                                   BLF11900
C                                                                       BLF12000
C       29.    CLASS CODE MODULI                                        BLF12100
C                                                                       BLF12200
      COMMON/MODULI/MODULI                                              BLF12300
      DIMENSION MODULI(2)                                               BLF12400
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    BLF12500
      EQUIVALENCE (MODULO,MODULI(1))                                    BLF12600
C MODHLF:      NORMAL MODE CODE LIMIT 500                               BLF12700
      EQUIVALENCE (MODHLF,MODULI(2))                                    BLF12800
C                                                                       BLF12900
C       43.    DO LOOP CONTROL VALUES                                   BLF13000
C                                                                       BLF13100
      COMMON/DOLOOP/DOLOOP                                              BLF13200
      LOGICAL IFFLAG                                                    BLF13250
      DIMENSION DOLOOP(9)                                               BLF13300
C JUMPTO:      MARKER SET AFTER JUMPTO OR IF FOR LABEL CONTROL          BLF13400
      EQUIVALENCE (JUMPTO,DOLOOP(1))                                    BLF13500
C IFFLAG:      FLAG ON WHEN LOGICAL IF OCCURS                           BLF13510
      EQUIVALENCE (IFFLAG,DOLOOP(9))                                    BLF13520
C                                                                       BLF13600
C       44.    ERROR POSITION TABLE                                     BLF13700
C                                                                       BLF13800
      COMMON/ERRPOS/ERRPOS                                              BLF13900
      INTEGER ERRPOS,ESTACK,ERGSTK                                      BLF14000
      DIMENSION ERRPOS(302),ESTACK(100),ERGSTK(100)                     BLF14100
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    BLF14200
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               BLF14300
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   BLF14400
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               BLF14500
C*                                                                      BLF14600
      DIMENSION LGSTK(50)                                               BLF14610
      LOGICAL BOLFLG                                                    BLF14700
      DATA KK/20000/,LASTMN/-1/                                         BLF14800
C**                                                                     BLF14900
      IF(PROD.GT.0)GOTO 5                                               BLF15000
      IF(LASTMN.NE.WHCHMN) GOTO 300                                     BLF15100
      IFFLAG=.FALSE.                                                    BLF15200
      LASTMN=-1                                                         BLF15210
      CALL LABELZ(LBL)                                                  BLF15300
      JUMPTO=0                                                          BLF15400
      GOTO 300                                                          BLF15500
C                                                                       BLF15600
    5 IF(ARGTOP.EQ.0)BOLFLG=.FALSE.                                     BLF15700
      GOTO(10,20,50,70,70),PROD                                         BLF15800
C                                                                       BLF15900
C     PRODUKTION 34:  ALL $ VBL $ NOT                                   BLF16000
C                                                                       BLF16100
   10 K=STACK(1,TOP-1)                                                  BLF16200
      IF(IFTMP(K))GOTO 310                                              BLF16300
      IF(MOD(NAMTBL(K),MODHLF).NE.BOOL)                                 BLF16400
     *CALL ALARM(1008,TOP-1,8,'BOOLIF  ')                               BLF16500
      RSLT=GETTMP(BOOL)                                                 BLF16600
      CALL CALLZZ(LOGIF)                                                BLF16700
      CALL ARGCVT(RSLT)                                                 BLF16800
      CALL TWOARG(QUIDLR,7)                                             BLF16900
      CALL ARGCVT(K)                                                    BLF17000
      CALL ARGCVT(K)                                                    BLF17100
      ARGTOP=ARGTOP+1                                                   BLF17200
      ARGSTK(ARGTOP)=RSLT                                               BLF17300
      BOLFLG=.TRUE.                                                     BLF17400
      STACK(1,TOP-2)=RSLT                                               BLF17500
      STACK(2,TOP-2)=META(NAMTBL(RSLT)/MODULO)                          BLF17600
      STACK(1,TOP-1)=STACK(1,TOP)                                       BLF17700
      STACK(2,TOP-1)=STACK(2,TOP)                                       BLF17800
      ERGSTK(ARGTOP)=ESTACK(TOP-1)                                      BLF17900
      TOP=TOP-1                                                         BLF18000
      GOTO 40                                                           BLF18100
C                                                                       BLF18200
C     PRODUKTION 35: ALL $ VBL,TEMP,NUMBER $ RELAT $ VBL,TEMP,NUMBER    BLF18300
C                                                                       BLF18400
   20 DO 30 I=1,3,2                                                     BLF18500
      J=MODE(STACK(1,TOP-I))                                            BLF18600
   30 IF(J.NE.REAL)CALL ALARM(1008,TOP-I,8,'BOOLIF  ')                  BLF18700
      ART=NAMTBL(STACK(1,TOP-2))-RELAT(1)                               BLF18800
      RSLT=GETTMP(BOOL)                                                 BLF18900
      CALL CALLZZ(LOGIF)                                                BLF19000
      CALL ARGCVT(RSLT)                                                 BLF19100
      CALL TWOARG(QUIDLR,ART)                                           BLF19200
      CALL ARGCVT(STACK(1,TOP-3))                                       BLF19300
      CALL ARGCVT(STACK(1,TOP-1))                                       BLF19400
      ARGTOP=ARGTOP+1                                                   BLF19500
      ARGSTK(ARGTOP)=RSLT                                               BLF19600
      BOLFLG=.TRUE.                                                     BLF19700
      STACK(1,TOP-3)=RSLT                                               BLF19800
      STACK(2,TOP-3)=META(NAMTBL(RSLT)/MODULO)                          BLF19900
      STACK(1,TOP-2)=STACK(1,TOP)                                       BLF20000
      STACK(2,TOP-2)=STACK(2,TOP)                                       BLF20100
      ERGSTK(ARGTOP)=ESTACK(TOP-2)                                      BLF20200
      TOP=TOP-2                                                         BLF20300
   40 CALL RLSLIN                                                       BLF20400
      GOTO 300                                                          BLF20500
C                                                                       BLF20600
C     PRODUKTION 36:  ALL $ VBL,TEMP $ AND,OR $ VBL,TEMP                BLF20700
C                                                                       BLF20800
   50 IF(BOLFLG)GOTO 60                                                 BLF20900
      K=STACK(1,TOP-1)                                                  BLF21000
      IF(MOD(NAMTBL(K),MODHLF).NE.BOOL)                                 BLF21100
     *CALL ALARM(1008,TOP-1,8,'BOOLIF  ')                               BLF21200
      ARGTOP=ARGTOP+1                                                   BLF21300
      ARGSTK(ARGTOP)=STACK(1,TOP-1)                                     BLF21400
      ERGSTK(ARGTOP)=ESTACK(TOP-1)                                      BLF21500
   60 BOLFLG=.FALSE.                                                    BLF21600
      ARGTOP=ARGTOP+1                                                   BLF21700
      ARGSTK(ARGTOP)=STACK(1,TOP-2)                                     BLF21800
      ERGSTK(ARGTOP)=ESTACK(TOP-2)                                      BLF21900
      STACK(1,TOP-2)=STACK(1,TOP)                                       BLF22000
      STACK(2,TOP-2)=STACK(2,TOP)                                       BLF22100
      TOP=TOP-2                                                         BLF22200
      GOTO 300                                                          BLF22300
C                                                                       BLF22400
C     PRODUKTION 32:    ( $ VBL,TEMP,NUMBER $ ) $ IF $ LTERM            BLF22500
C     PRODUKTION 23,24: RTERM $ VBL,TEMP,NUMBER  $ = .......            BLF22550
C                                                                       BLF22600
   70 IF(BOLFLG)GOTO 80                                                 BLF22700
      ARGTOP=ARGTOP+1                                                   BLF22800
      ARGSTK(ARGTOP)=STACK(1,TOP-1)                                     BLF22900
      ERGSTK(ARGTOP)=ESTACK(TOP-1)                                      BLF23000
      BOLFLG=.TRUE.                                                     BLF23100
   80 RSLT=STACK(1,TOP-1)                                               BLF23200
      IF(ARGTOP.LE.1)GOTO 200                                           BLF23300
      ART=AND(1)/MODULO                                                 BLF23400
      TP=0                                                              BLF23500
      I=0                                                               BLF23600
  100 RSLT=0                                                            BLF23700
  110 I=I+2                                                             BLF23800
      IF(I.GE.ARGTOP)GOTO 170                                           BLF23900
      K=ARGSTK(I)                                                       BLF24000
      L=ARGSTK(I-1)                                                     BLF24100
      IF(NAMTBL(K)/MODULO.EQ.ART)GOTO 130                               BLF24200
      IF(.NOT.BOLFLG)GOTO 120                                           BLF24300
      TP=TP+1                                                           BLF24400
      LGSTK(TP)=L                                                       BLF24500
  120 BOLFLG=.TRUE.                                                     BLF24600
      GOTO 100                                                          BLF24700
C                                                                       BLF24800
C     HANDLING OF OTHER TEMPORARY RESULTS IN STACK                      BLF24900
C                                                                       BLF25000
  130 J=ARGSTK(I+1)                                                     BLF25100
      IF(RSLT.GT.0)GOTO 150                                             BLF25200
      IF(IFTMP(L))RSLT=L                                                BLF25300
      IF(RSLT.GT.0)GOTO 140                                             BLF25400
      IF(IFTMP(J))RSLT=J                                                BLF25500
      IF(RSLT.GT.0)GOTO 140                                             BLF25600
      RSLT=GETTMP(BOOL)                                                 BLF25700
  140 TP=TP+1                                                           BLF25800
      LGSTK(TP)=RSLT                                                    BLF25900
      CALL CALLZZ(LOGIF)                                                BLF26000
      CALL ARGCVT(RSLT)                                                 BLF26100
      CALL TWOARG(QUIDLR,9)                                             BLF26200
      CALL ARGCVT(J)                                                    BLF26300
      CALL ARGCVT(L)                                                    BLF26400
      GOTO 160                                                          BLF26500
  150 CALL CALLZZ(LOGIF)                                                BLF26600
      CALL ARGCVT(RSLT)                                                 BLF26700
      CALL TWOARG(QUIDLR,9)                                             BLF26800
      CALL ARGCVT(RSLT)                                                 BLF26900
      CALL ARGCVT(J)                                                    BLF27000
  160 CALL RLSLIN                                                       BLF27100
      BOLFLG=.FALSE.                                                    BLF27200
      GOTO 100                                                          BLF27300
C                                                                       BLF27400
  170 IF(.NOT.BOLFLG)GOTO 180                                           BLF27500
      TP=TP+1                                                           BLF27600
      LGSTK(TP)=ARGSTK(ARGTOP)                                          BLF27700
C                                                                       BLF27800
C    PROCESSING OF OR                                                   BLF27900
C                                                                       BLF28000
  180 RSLT=LGSTK(1)                                                     BLF28100
      IF(TP.EQ.2)GOTO 200                                               BLF28200
      K=RSLT                                                            BLF28300
      IF(IFTMP(RSLT))GOTO 185                                           BLF28400
      RSLT=GETTMP(BOOL)                                                 BLF28500
  185 DO 190 I=2,TP                                                     BLF28600
      CALL CALLZZ(LOGIF)                                                BLF28700
      CALL ARGCVT(RSLT)                                                 BLF28800
      CALL TWOARG(QUIDLR,8)                                             BLF28900
      CALL ARGCVT(K)                                                    BLF29000
      CALL ARGCVT(LGSTK(I))                                             BLF29100
      CALL RLSLIN                                                       BLF29200
  190 K=RSLT                                                            BLF29300
C                                                                       BLF29400
C     WORKING UP OF IF(BOOL) LAB1,LAB1,LAB2                             BLF29500
C                                                                       BLF29600
  200 IF (PROD.NE.5)GOTO 210                                            BLF29610
      STACK(1,TOP-1)=RSLT                                               BLF29620
      STACK(2,TOP-1)=META(NAMTBL(RSLT)/MODULO)                          BLF29630
      GOTO 300                                                          BLF29640
  210 CALL OPCODE(CONJMP)                                               BLF29700
      CALL ARGCVT(RSLT)                                                 BLF29800
      L=WHCHMN                                                          BLF29900
      IF(L.EQ.0)L=MSEQDM+3                                              BLF30000
      KK=KK+50000                                                       BLF30100
      CALL MACLBL(KK,-L,JJ)                                             BLF30200
      NAMTBL(JJ)=JJ                                                     BLF30300
      KK=KK+50000                                                       BLF30400
      CALL MACLBL(KK,-L,K)                                              BLF30500
      IF((.NOT.FINMAC).AND.(WHCHMN.NE.0))GOTO 220                       BLF30600
      NAMTBL(JJ)=LABEL(1)+WHCHMN                                        BLF30700
      NAMTBL(K)=LABEL(1)+WHCHMN                                         BLF30800
      GOTO 230                                                          BLF30900
C                                                                       BLF31000
C     WORKING UP OF IF-LABELS                                           BLF31100
C                                                                       BLF31200
  220 NAMTBL(JJ)=IMPLAB(1)+WHCHMN                                       BLF31300
      NAMTBL(K)=IMPLAB(1)+WHCHMN                                        BLF31400
  230 CALL ONEARG(JJ)                                                   BLF31500
      CALL ONEARG(JJ)                                                   BLF31600
      CALL ONEARG(K)                                                    BLF31700
      CALL RLSLIN                                                       BLF31800
      CALL LABELZ(K)                                                    BLF31900
      IF (IFFLAG)GOTO 290                                               BLF31910
      LBL=JJ                                                            BLF31920
      LASTMN=WHCHMN                                                     BLF31930
      IFFLAG=.TRUE.                                                     BLF32000
  290 BOLFLG=.FALSE.                                                    BLF32100
      TOP=0                                                             BLF32200
  300 RETURN                                                            BLF32400
C                                                                       BLF32500
  310 CALL ALARM(1007,TOP-1,8,'BOOLIF  ')                               BLF32600
      TOP=-1                                                            BLF32700
      GOTO 300                                                          BLF33100
C                                                                       BLF33200
      END                                                               BLF33300
**** SOURCE FILE : M0006622.V01   ***
*
C                                                                       CZZ00100
C              FORTRAN SUBROUTINE CALLZZ                                CZZ00200
C                                                                       CZZ00300
C LINKAGE      SUBROUTINE CALLZZ(INDEX)                                 CZZ00400
C                                                                       CZZ00500
C          SUBSIDIARIES                  CALLED BY                      CZZ00600
C          TYPE          ENTRY           TYPE          ENTRY            CZZ00700
C          SUBROUTINE    ONEARG          SUBROUTINE    BOOLIF           CZZ00800
C          SUBROUTINE    OPCODE          SUBROUTINE    COMSTR           CZZ00900
C                                        SUBROUTINE    GOLO             CZZ01000
C                                        SUBROUTINE    GOPAT            CZZ01100
C                                        SUBROUTINE    INPAT            CZZ01200
C                                        SUBROUTINE    LARGES           CZZ01300
C                                        SUBROUTINE    LCANON           CZZ01400
C                                        SUBROUTINE    MACREC           CZZ01500
C                                        SUBROUTINE    MOTION           CZZ01600
C                                        SUBROUTINE    PRO020           CZZ01700
C                                        SUBROUTINE    PRO021           CZZ01800
C                                        SUBROUTINE    PRO026           CZZ01900
C                                        SUBROUTINE    PRO027           CZZ02000
C                                        SUBROUTINE    RECOG            CZZ02100
C                                        SUBROUTINE    RECOGN           CZZ02200
C                                        SUBROUTINE    REFGEN           CZZ02300
C                                        SUBROUTINE    REFREF           CZZ02400
C                                        SUBROUTINE    SSDEF            CZZ02500
C                                        SUBROUTINE    TSSMIL           CZZ02600
C                                                                       CZZ02700
      SUBROUTINE CALLZZ(INDEX)                                          CZZ02800
C                                                                       CZZ02900
      IMPLICIT INTEGER (A-Z)                                            CZZ03000
C                                                                       CZZ03100
C       16.    LITERALS FOR I. L. OPERATION CODES                       CZZ03200
C                                                                       CZZ03300
      COMMON/IL/IL                                                      CZZ03400
      DIMENSION IL(21)                                                  CZZ03500
C CALL:        CONTAINS COMMAND CODE (18) FOR CALL COMMAND              CZZ03600
      EQUIVALENCE (CALL,IL(18))                                         CZZ03700
C*                                                                      CZZ03800
C PURPOSE      TO GENERATE THE I.L. FOR A CALL OPCODE AND               CZZ03900
C              THE PROCEDURE INDEX.                                     CZZ04000
C                                                                       CZZ04100
C ARGUMENTS    INDEX  NAME TABLE (NAMTBL) INDEX OF THE PROCEDURE NAME.  CZZ04200
C**                                                                     CZZ04300
C...     GENERATE CALL OPCODE, AND FIRST ARGUMENT (PROCEDURE INDEX)     CZZ04400
C                                                                       CZZ04500
      CALL OPCODE(CALL)                                                 CZZ04600
      CALL ONEARG(INDEX)                                                CZZ04700
      RETURN                                                            CZZ04800
       END                                                              CZZ04900
**** SOURCE FILE : M0006625.V01   ***
*
C                                                                       CAL00100
C              FORTRAN SUBROUTINE CALMCX                                CAL00200
C                                                                       CAL00300
C LINKAGE      SUBROUTINE CALMCX(NPNTR,LEV,INDX)                        CAL00400
C                                                                       CAL00500
C          SUBSIDIARIES                  CALLED BY                      CAL00600
C          TYPE          ENTRY           TYPE          ENTRY            CAL00700
C          SUBROUTINE    ONEARG          SUBROUTINE    INPUT            CAL00800
C          SUBROUTINE    OPCODE          SUBROUTINE    MACREC           CAL00900
C          SUBROUTINE    RLSLIN          SUBROUTINE    PATH             CAL01000
C          SUBROUTINE    TWOARG                                         CAL01100
C                                                                       CAL01200
      SUBROUTINE CALMCX(NPNTR,LEV,INDX)                                 CAL01300
C                                                                       CAL01400
      IMPLICIT INTEGER (A-Z)                                            CAL01500
C                                                                       CAL01600
C       16.    LITERALS FOR I. L. OPERATION CODES                       CAL01700
C                                                                       CAL01800
      COMMON/IL/IL                                                      CAL01900
      DIMENSION IL(21)                                                  CAL02000
C CALMC:       CONTAINS COMMAND CODE (14) FOR CALMC COMMAND             CAL02100
      EQUIVALENCE (CALMC,IL(14))                                        CAL02200
C*                                                                      CAL02300
C PURPOSE      TO GENERATE AND OUTPUT TO THE I.L. INTERNAL              CAL02400
C              RECORD IMAGE (ILFILE) THE CALMC I.L. COMMAND             CAL02500
C              THAT ESTABLISHES LINKAGE WITH REMOTE APT                 CAL02600
C              MACRO I.L..                                              CAL02700
C                                                                       CAL02800
C ARGUMENTS    NPNTR  NAME TABLE (NAMTBL) INDEX OF LABEL.               CAL02900
C              LEV    LEVEL OF CALL TO MACRO.                           CAL03000
C**            INDX   INDEX REGISTER NUMBER.                            CAL03100
C                                                                       CAL03200
C...     GENERATE I.L. CALMC COMMAND                                    CAL03300
C                                                                       CAL03400
      CALL OPCODE(CALMC)                                                CAL03500
      CALL ONEARG(NPNTR)                                                CAL03600
      CALL TWOARG(LEV,INDX)                                             CAL03700
      CALL RLSLIN                                                       CAL03800
      RETURN                                                            CAL03900
       END                                                              CAL04000
**** SOURCE FILE : M0006627.V03   ***
*
C                                                                       CLM00100
C              FORTRAN SUBROUTINE CLMODE                                CLM00200
C                                                                       CLM00300
C LINKAGE      INTEGER FUNCTION CLMODE (WHERE)                          CLM00400
C                                                                       CLM00500
C          SUBSIDIARIES                  CALLED BY                      CLM00600
C          NONE                          TYPE          ENTRY            CLM00700
C                                        SUBROUTINE    GOLO             CLM00800
C                                        SUBROUTINE    PRO026           CLM00900
C                                                                       CLM01000
      INTEGER FUNCTION CLMODE (WHERE)                                   CLM01100
C                                                                       CLM01200
      IMPLICIT INTEGER (A-Z)                                            CLM01300
C                                                                       CLM01400
C        1.    NAME TABLE AND TABLE LIMITS                              CLM01500
C                                                                       CLM01600
      INCLUDE 'NAMETB.INC'                                              CLM01710
C CNAMTB:      NAME TABLE OR DICTIONARY                                 CLM01750
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                CLM01850
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     CLM01900
C                                                                       CLM02300
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      CLM02400
C                                                                       CLM02500
      COMMON/CODE/CODE                                                  CLM02600
      DIMENSION CODE(150),NUMBER(2),TEMP(2),PERMID(2),VBL(2)            CLM02700
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        CLM02800
      EQUIVALENCE (NUMBER(1),CODE(27))                                  CLM02900
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        CLM03000
      EQUIVALENCE (TEMP(1),CODE(33))                                    CLM03100
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        CLM03200
      EQUIVALENCE (PERMID(1),CODE(39))                                  CLM03300
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        CLM03400
      EQUIVALENCE (VBL(1),CODE(61))                                     CLM03500
C                                                                       CLM03600
C       29.    CLASS CODE MODULI                                        CLM03700
C                                                                       CLM03800
      COMMON/MODULI/MODULI                                              CLM03900
      DIMENSION MODULI(2)                                               CLM04000
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    CLM04100
      EQUIVALENCE (MODULO,MODULI(1))                                    CLM04200
C MODHLF:      NORMAL MODE CODE LIMIT 500                               CLM04300
      EQUIVALENCE (MODHLF,MODULI(2))                                    CLM04400
C*                                                                      CLM04500
C PURPOSE      TO FIND THE CLMODE OF AN ARGUMENT FOR USE BY             CLM04600
C              THE CLTAPE EDITOR IN PROCESSING POST-PRO-                CLM04700
C              CESSOR AND CLTAPE EDITOR COMMANDS.                       CLM04800
C                                                                       CLM04900
C ARGUMENTS    WHERE    NAMTBL INDEX OF ARGUMENT                        CLM05000
C**                                                                     CLM05100
      IF(WHERE.GT.NAMMAX)GO TO 50                                       CLM05200
C                                                                       CLM05300
C...     SET WHAT TO CLASS OF WHERE                                     CLM05400
C                                                                       CLM05500
      WHAT=MODULO*(NAMTBL(WHERE)/MODULO)                                CLM05600
C                                                                       CLM05700
C...     TEST FOR NUMBER                                                CLM05800
C                                                                       CLM05900
      IF(WHAT.NE.NUMBER(1))GO TO 100                                    CLM06000
C                                                                       CLM06100
C...     NUMBER - SET CLMODE TO 1                                       CLM06200
C                                                                       CLM06300
   50 CLMODE=1                                                          CLM06400
      RETURN                                                            CLM06500
C                                                                       CLM06600
C...     TEST FOR CLASS PERMANENT IDENTIFIER                            CLM06700
C                                                                       CLM06800
  100 IF(WHAT.NE.PERMID(1))GO TO 200                                    CLM06900
C                                                                       CLM07000
C...     PERMID - SET CLMODE TO 2                                       CLM07100
C                                                                       CLM07200
      CLMODE = 2                                                        CLM07300
      RETURN                                                            CLM07400
C                                                                       CLM07500
C...     TEST FOR CLASS VARIABLE OR TEMPORARY                           CLM07600
C                                                                       CLM07700
  200 IF ((WHAT.NE.VBL(1)).AND.(WHAT.NE.TEMP(1))) GOTO 9999             CLM07800
C                                                                       CLM07900
C...     VBL OR TEMP - SET CLMODE TO (TRANSLATOR MODE + 2)              CLM08000
C                                                                       CLM08100
      CLMODE = MOD(NAMTBL(WHERE),MODHLF) + 2                            CLM08200
      IF(CLMODE.EQ.23) CLMODE=1                                         CLM08300
      RETURN                                                            CLM08400
C                                                                       CLM08500
C...     ILLEGAL META-LINGUISTIC CLASS - SET CLMODE TO ZERO.            CLM08600
C                                                                       CLM08700
 9999 CLMODE = 0                                                        CLM08800
      RETURN                                                            CLM08900
       END                                                              CLM09000
**** SOURCE FILE : M0006628.V04   ***
*
C              FORTRAN SUBROUTINE COMSTR                                COM00100
C                                                                       COM00200
C LINKAGE      SUBROUTINE COMSTR                                        COM00300
C                                                                       COM00400
C          SUBSIDIARIES                  CALLED BY                      COM00500
C          TYPE          ENTRY           TYPE          ENTRY            COM00600
C          SUBROUTINE    ASNADZ          SUBROUTINE    MACREC           COM00700
C          SUBROUTINE    ASNJPZ                                         COM00800
C          LOGICAL FCT.  BITMCH                                         COM00900
C          SUBROUTINE    CALLZZ                                         COM01000
C          SUBROUTINE    JUMPZZ                                         COM01100
C          SUBROUTINE    ALARM                                          COM01200
C          SUBROUTINE    LABELZ                                         COM01300
C          SUBROUTINE    MACLBL                                         COM01400
C          INTEGER FCT.  NAME                                           COM01500
C          SUBROUTINE    RETMCX                                         COM01600
C          SUBROUTINE    RLSLIN                                         COM01700
C                                                                       COM01800
      SUBROUTINE COMSTR                                                 COM01900
C                                                                       COM02000
      IMPLICIT INTEGER (A-Z)                                            COM02100
C                                                                       COM02200
C              FUNCTION DECLARATION                                     COM02300
C                                                                       COM02400
      LOGICAL BITMCH                                                    COM02500
C                                                                       COM02600
C        1.    NAME TABLE AND TABLE LIMITS                              COM02700
C                                                                       COM02800
      INCLUDE 'NAMETB.INC'                                              COM02910
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE                      COM02950
C CNAMTB:      NAME TABLE OR DICTIONARY                                 COM03050
C                                                                       COM03300
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      COM03400
C                                                                       COM03500
      COMMON/CODE/CODE                                                  COM03600
      DIMENSION CODE(150),LABEL(2)                                      COM03700
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        COM03800
      EQUIVALENCE (LABEL(1),CODE(43))                                   COM03900
C                                                                       COM04000
C       22.    MACRO PROCESSING VARIABLES                               COM04100
C                                                                       COM04200
      COMMON/MACXX1/MACXX1                                              COM04300
      DIMENSION MACXX1(71)                                              COM04400
C MCSAVP:      PRESENT NEST LEVEL DURING MACRO PROCESSING               COM04500
      EQUIVALENCE (MCSAVP,MACXX1(5))                                    COM04600
C MAXSPS:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            COM04700
      EQUIVALENCE (MAXSPS,MACXX1(21))                                   COM04800
C NUMCAL:      CONTAINS NUMBER OF CALLS FOR CURRENT MACRO               COM04900
      EQUIVALENCE (NUMCAL,MACXX1(28))                                   COM05000
C BITWDS:      NUMBER OF WORDS NEEDED FOR ALL CALL QUALITIES OF MACRO   COM05100
      EQUIVALENCE (BITWDS,MACXX1(29))                                   COM05200
C MACTOP:      POINTER TO EXPRESSION NUMBER IN MACSPD TABLE             COM05300
      EQUIVALENCE (MACTOP,MACXX1(42))                                   COM05400
C NUMBIT:      CONTAINS NUMBER OF BITS IN A FIXED POINT WORD            COM05500
      EQUIVALENCE (NUMBIT,MACXX1(56))                                   COM05600
C MCSPDP:      POINTER TO LAST ENTRY IN MACSPD TABLE                    COM05700
      EQUIVALENCE (MCSPDP,MACXX1(57))                                   COM05800
C MCSRCH:      AT FINAL MACRO PRECESSING MACDF1 POINTER                 COM05900
      EQUIVALENCE (MCSRCH,MACXX1(59))                                   COM06000
C NUMARG:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            COM06100
      EQUIVALENCE (NUMARG,MACXX1(61))                                   COM06200
C                                                                       COM06300
C       24.    MACRO PROCESSING ARRAYS                                  COM06400
C                                                                       COM06500
      COMMON/MACXX3/MACXX3                                              COM06600
      DIMENSION MACXX3(1430),MACDF1(400)                                COM06700
C MACDF1:      STORES MACRO NAME AND ALL MACRO VBL NAMTBL POINTERS      COM06800
      EQUIVALENCE (MACDF1(1),MACXX3(1))                                 COM06900
C                                                                       COM07000
C      25A.    TEMPORARY STORAGE DURING FINAL MACRO PROCESSING          COM07100
C                                                                       COM07200
      COMMON/MACXX5/ITMPSV                                              COM07300
      DIMENSION ITMPSV(135)                                             COM07400
C                                                                       COM07500
C       26.    NAMTBL POINTERS OF THE ASSIGNED VALUES FOR MACRO CALL    COM07600
C                                                                       COM07700
      COMMON/MACXX6/MACSPD                                              COM07800
      DIMENSION MACSPD(1300)                                            COM07900
C*                                                                      COM08000
C PURPOSE      FOR EACH CALL AND NORMAL VALUE INITIALIZATION            COM08100
C              TO GENERATE AND OUTPUT I.L. COMMANDS THAT                COM08200
C              MOVE ASSIGNED VALUE AND BRANCHING LABEL                  COM08300
C              ADDRESSES INTO THE APPROPRIATE MACRO                     COM08400
C              VARIABLE AND LINKAGE LOCATIONS.                          COM08500
C                                                                       COM08600
C NOTES        1.  COMSTR IS ACCESSED AFTER ALL BRANCHING               COM08700
C                  AND COMMON I.L. TEXT HAS BEEN GENERATED              COM08800
C                  FOR A MACRO.                                         COM08900
C              2.  FOR EACH ACTUAL BRANCHING SITUATION THE              COM09000
C                  MACSPD TABLE CONTAINS THE FOLLOWING                  COM09100
C                  INFORMATION STREAM.                                  COM09200
C                   M = NUMBER OF WORDS NEEDED FOR CALL                 COM09300
C                       QUALITIES.                                      COM09400
C                   N = NUMBER OF DIFFERENT BRANCHES.                   COM09500
C                  1)         NEGATIVE OF BRANCHING EXPRESSION          COM09600
C                             NUMBER.                                   COM09700
C                  2          CALL QUALITY WORDS.  QUALITIES            COM09800
C                  THRU       SET FOR CALLS ASSOCIATED WITH             COM09900
C                  M+1)       THE FOLLOWING BRANCH LABEL.               COM10000
C                  M+2)       1ST BRANCH LABEL.  NEGATIVE               COM10100
C                             IF ONLY NORMAL VALUES USED.               COM10200
C                  (N-1) (M+2)+2 CALL QUALITY WORDS.                    COM10300
C                  THRU N(M+1))                                         COM10400
C                  N(M+1)+1)    NTH BRANCH LABEL.  NEGATIVE IF          COM10500
C                               ONLY NORMAL VALUES USED.                COM10600
C                                                                       COM10700
      CHARACTER*6 I297                                                  COM10800
      DATA I297,J297/'APT297',19206/                                    COM10900
C**                                                                     COM11000
      I=NAME(I297)                                                      COM11100
      NAMTBL(I)=J297                                                    COM11200
      CALL CALLZZ(I)                                                    COM11300
      CALL RLSLIN                                                       COM11400
C                                                                       COM11500
C...     GENERATE RETURN TERMINATOR FOR MACRO COMMON TEXT.              COM11600
C                                                                       COM11700
      CALL RETMCX(1)                                                    COM11800
      IF (NUMARG.EQ.0) RETURN                                           COM11900
C                                                                       COM12000
C...     INITIALIZE NORMAL VALUE STORAGE.                               COM12100
C                                                                       COM12200
      DO 80 I=1,MAXSPS                                                  COM12300
   80 ITMPSV(I)=0                                                       COM12400
C                                                                       COM12500
C...     ARGCNT=NUMBER OF MACRO VARIABLES FOR CORRENT MACRO.            COM12600
C                                                                       COM12700
      ARGCNT=NUMARG-1                                                   COM12800
C                                                                       COM12900
C...     ONE ITERATION PER CALL.                                        COM13000
C                                                                       COM13100
      DO 200 I=1,NUMCAL                                                 COM13200
C                                                                       COM13300
C...     COMPUTE WORD POSITION (WDCAL) AND QUALITY (BITCAL) ASSOCIATED  COM13400
C...     WITH THIS CALL.                                                COM13500
C                                                                       COM13600
      WDCAL=(I-1)/NUMBIT                                                COM13700
      BITCAL=I-WDCAL*NUMBIT                                             COM13800
C                                                                       COM13900
C...     CALCULATE LABEL  FOR CALL INITIALIZATION. LABEL NAME BASED ON  COM14000
C...     MACRO NAMTBL POINTER AND CALL NUMBER.                          COM14100
C                                                                       COM14200
      CALL MACLBL(MACDF1(MCSRCH),-I,J)                                  COM14300
      NAMTBL(J) = LABEL(1)                                              COM14400
C                                                                       COM14500
C...     GENERATE LABEL COMMAND.                                        COM14600
C                                                                       COM14700
   20 CALL LABELZ(J)                                                    COM14800
C                                                                       COM14900
C...     ONE ITERATION PER MACRO VARIABLE.                              COM15000
C                                                                       COM15100
   30 DO 1 J=1,ARGCNT                                                   COM15200
      NUMARG=NUMARG+1                                                   COM15300
C                                                                       COM15400
C...     IF NEGATIVE, ASSIGNED VALUE=NORMAL VALUE.                      COM15500
C                                                                       COM15600
      IF(MACSPD(NUMARG))40,1,41                                         COM15700
C                                                                       COM15800
C...     SAVE IN VBLSAV(J) USED NORMAL VALUE ASSIGNED TO JTH MACRO VAR..COM15900
C                                                                       COM16000
   40 ITMPSV(J)=-MACSPD(NUMARG)                                         COM16100
      GO TO 1                                                           COM16200
C                                                                       COM16300
C...     I.L. TO PLACE ADDRESS OF ASSIGNED VALUE IN MACRO VARIABLE WORD.COM16400
C                                                                       COM16500
   41 CALL ASNADZ(MACSPD(J),MACSPD(NUMARG))                             COM16600
    1 CONTINUE                                                          COM16700
C                                                                       COM16800
C...     BEGIN SEARCH IN THE APPROPRIATE SECTION OF THE MACSPD TABLE    COM16900
C...     (MACCNT) FOR BRANCHING LABELS ASSOCIATED WITH THIS CALL.       COM17000
C                                                                       COM17100
      MACCNT=MCSPDP                                                     COM17200
C                                                                       COM17300
C...     ARGSCR KEEPS TRACK OF CURRENT BRANCHING SITUATION.             COM17400
C                                                                       COM17500
      ARGSCR=ARGCNT+2                                                   COM17600
    2 MACCNT=MACCNT+1                                                   COM17700
C                                                                       COM17800
C...     BRANCH IF ALL LABELS HAVE BEEN ASSIGNED FOR THIS CALL.         COM17900
C                                                                       COM18000
      IF(ARGSCR.GT.MAXSPS)GO TO 11                                      COM18100
   50 K=MACCNT+WDCAL                                                    COM18200
      MACCNT = MACCNT+BITWDS+1                                          COM18300
C                                                                       COM18400
C...     FOR CURRENT BRANCHING SITUATION IF BRANCHING LABEL FOR CURRENT COM18500
C...     CALL IS FOUND BITMCH=.TRUE.. IF LOOP IS EXHAUSTED WITHOUT      COM18600
C...     LOCATING LABEL ISSUE DIAGNOSTIC.                               COM18700
C                                                                       COM18800
      IF(BITMCH(MACSPD(K+1),BITCAL))GO TO 10                            COM18900
      IF((MACCNT.LT.MACTOP).AND.(MACSPD(MACCNT+1).GE.0))GO TO 50        COM19000
C                                                                       COM19100
C...     1021 - ERROR IN FINAL MACRO PROCESSING                         COM19200
C                                                                       COM19300
      CALL ALARM(1021,0,8,'COMSTR  ')                                   COM19400
      GO TO 11                                                          COM19500
C                                                                       COM19600
C...     IF CALL BRANCHING LABEL DOES NOT INVOLVE ONLY NORMAL VALUES    COM19700
C...     THEN BRANCH.                                                   COM19800
C                                                                       COM19900
   10 IF(MACSPD(MACCNT).GT.0)GO TO 6                                    COM20000
C                                                                       COM20100
C...     SAVE BRANCHING LABEL FOR BRANCH INVOLVING ONLY NORMAL VALUES INCOM20200
C...     POSITION OF VBLSAV ARRAY CORRESPONDING TO CURRENT BRANCHING    COM20300
C...     SITUATION.                                                     COM20400
C                                                                       COM20500
      ITMPSV(ARGSCR)=-MACSPD(MACCNT)                                    COM20600
      GO TO 7                                                           COM20700
C                                                                       COM20800
C...     CALCULATE LABEL NAME BASED ON MACRO NEST LEVEL AND NUMBER OF   COM20900
C...     CURRENT BRANCHING SITUATION.                                   COM21000
C                                                                       COM21100
    6 CALL MACLBL(-MCSAVP,-ARGSCR,J)                                    COM21200
      NAMTBL(J)=LABEL(1)                                                COM21300
      CALL ASNJPZ(J,MACSPD(MACCNT))                                     COM21400
C                                                                       COM21500
C...     I.L. TO PLACE CALL BRANCHING LABEL IN APPROPRIATE LINKAGE CELL COM21600
C...     SO THAT CORRECT BRANCH FOR THIS BRANCHING SITUATION IS         COM21700
C...     SELECTED WHEN EXECUTING MACRO FOR THIS CALL.                   COM21800
C                                                                       COM21900
    7 ARGSCR=ARGSCR+1                                                   COM22000
    8 IF(MACCNT.GE.MACTOP)GO TO 11                                      COM22100
      IF(MACSPD(MACCNT+1).LT.0)GO TO 2                                  COM22200
C                                                                       COM22300
C...     LOCATE NEXT BRANCHING SITUATION INFORMATION.                   COM22400
C                                                                       COM22500
      MACCNT=MACCNT+BITWDS+1                                            COM22600
      GO TO 8                                                           COM22700
C                                                                       COM22800
C...     CALCULATE LABEL NAME OF MACRO COMMON TEXT AND GENERATE A       COM22900
C...     TRANSFER TO IT AS A CALL INITIALIZATION TERMINATOR.            COM23000
C                                                                       COM23100
   11 CALL MACLBL(-1,MACDF1(MCSRCH),J)                                  COM23200
      NAMTBL(J)=LABEL(1)                                                COM23300
      CALL JUMPZZ(J)                                                    COM23400
  200 NUMARG=NUMARG+1                                                   COM23500
C                                                                       COM23600
C...     GENERATE LABEL FOR NORMAL VALUE INITIALIZATION.                COM23700
C                                                                       COM23800
      CALL LABELZ(MACDF1(MCSRCH))                                       COM23900
C                                                                       COM24000
C...     FOR EACH MACRO VARIABLE AND EACH BRANCHING SITUATION USING     COM24100
C...     NORMAL VALUES (VBLSAV(J).GT.0) ASSIGN NORMAL VALUE AND LABEL   COM24200
C...     ADDRESSES TO THE CORRESPONDING MACRO VARIABLE AND LINKAGE CELLSCOM24300
C                                                                       COM24400
      DO 100 I=1,MAXSPS                                                 COM24500
      IF(ITMPSV(I).EQ.0)GO TO 100                                       COM24600
      IF(I-ARGCNT)110,110,120                                           COM24700
  110 CALL ASNADZ(MACSPD(I),ITMPSV(I))                                  COM24800
      GO TO 100                                                         COM24900
  120 CALL MACLBL(-MCSAVP,-I,J)                                         COM25000
      NAMTBL(J)=1                                                       COM25100
      CALL ASNJPZ(J,ITMPSV(I))                                          COM25200
  100 CONTINUE                                                          COM25300
C                                                                       COM25400
C...     GENERATE RETURN TERMINATOR FOR NORMAL VALUE INITIALIZATION.    COM25500
C                                                                       COM25600
      CALL RETMCX(2)                                                    COM25700
      RETURN                                                            COM25800
       END                                                              COM25900
**** SOURCE FILE : CONCAT00.ORG   ***
*
      SUBROUTINE CONCAT(CHR,BCD)                                        00000100
C                                                                       00000200
C.....INSERT A SINGLE CHARACTER, BCD, INTO NEXT AVAILABLE POSITION      00000300
C.....IN STRING OF CHARACTERS, CHR                                      00000400
C                                                                       00000500
C.....THE NUMBER OF CHARACTERS IN THE STRING IS HELD IN THE FIRST 3 CHAR00000600
C.....LOCATIONS OF CHR                                                  00000700
C                                                                       00000800
      CHARACTER*(*) CHR,BCD                                             00000900
      INTEGER NCHR,K                                                    00001000
C                                                                       00001100
      READ(CHR,'(I3)') NCHR                                             00001200
      NCHR = NCHR+1                                                     00001300
      WRITE(CHR(1:3),'(I3)') NCHR                                       00001400
      K = NCHR+3                                                        00001500
      CHR(K:K) = BCD(1:1)                                               00001600
C                                                                       00001700
      RETURN                                                            00001800
      END                                                               00001900
                                                                        00002000
**** SOURCE FILE : M0006632.V02   ***
*
C                                                                       FXX00100
C              FORTRAN SUBROUTINE FOUTXX                                FXX00200
C                                                                       FXX00300
C LINKAGE      SUBROUTINE FOUTXX (IFILE,ARRAY,COUNT)                    FXX00400
C                                                                       FXX00500
C          SUBSIDIARIES                  CALLED BY                      FXX00600
C          TYPE          ENTRY           TYPE          ENTRY            FXX00700
C          SUBROUTINE    CPRINT          SUBROUTINE    ALARM            FXX00800
C                                        SUBROUTINE    PRO027           FXX00900
C                                        SUBROUTINE    PRTIL            FXX01000
C                                        SUBROUTINE    PUTTMP           FXX01100
C                                        SUBROUTINE    RLSLIN           FXX01200
C                                        SUBROUTINE    START            FXX01300
C                                                                       FXX01400
      SUBROUTINE FOUTXX (IFILE,ARRAY,COUNT)                             FXX01500
C                                                                       FXX01600
      IMPLICIT INTEGER (A-Z)                                            FXX01700
C                                                                       FXX01800
C       20.    IO - ARRAY                                               FXX01900
C                                                                       FXX02000
      INCLUDE 'DARRAY.INC'                                              FXX02050
      CHARACTER*(*) ARRAY                                               FXX02200
C**                                                                     FXX02300
      DARRAY(1:COUNT)=ARRAY(1:COUNT)                                    FXX02600
      CALL CPRINT (DARRAY)                                              FXX02700
      RETURN                                                            FXX02800
      END                                                               FXX02900
**** SOURCE FILE : M0006633.V05   ***
*
C                                                                       GTP00100
C              FORTRAN SUBROUTINE GETTMP                                GTP00200
C                                                                       GTP00300
C LINKAGE      INTEGER FUNCTION GETTMP(MODE)                            GTP00400
C                                                                       GTP00500
C          SUBSIDIARIES                  CALLED BY                      GTP00600
C          TYPE          ENTRY           TYPE          ENTRY            GTP00700
C          INTEGER FCT.  NAME            SUBROUTINE    BOOLIF           GTP00800
C          SUBROUTINE    RESRVZ          SUBROUTINE    INPAT            GTP00900
C          SUBROUTINE    SHIFT           SUBROUTINE    ISSCOD           GTP01000
C          SUBROUTINE    BINBCD          SUBROUTINE    LARGES           GTP01100
C                                        SUBROUTINE    LCANON           GTP01200
C                                        SUBROUTINE    LOOP             GTP01300
C                                        SUBROUTINE    PRO020           GTP01400
C                                        SUBROUTINE    PRO021           GTP01500
C                                        SUBROUTINE    PRO026           GTP01600
C                                        SUBROUTINE    PRO027           GTP01700
C                                        SUBROUTINE    RECOG            GTP01800
C                                        SUBROUTINE    RECOGN           GTP01900
C                                        SUBROUTINE    SSDEF            GTP02000
C                                        SUBROUTINE    SUBCOD           GTP02100
C                                                                       GTP02200
      INTEGER FUNCTION GETTMP(MODE)                                     GTP02300
C                                                                       GTP02400
      IMPLICIT INTEGER (A-Z)                                            GTP02500
C                                                                       GTP02600
C        1.    NAME TABLE AND TABLE LIMITS                              GTP02700
C                                                                       GTP02800
      INCLUDE 'NAMETB.INC'                                              GTP02910
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                GTP02950
C CNAMTB:      NAME TABLE OR DICTIONARY                                 GTP03050
C                                                                       GTP03300
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      GTP03400
C                                                                       GTP03500
      COMMON/CODE/CODE                                                  GTP03600
      DIMENSION CODE(150),TEMP(2)                                       GTP03700
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        GTP03800
      EQUIVALENCE (TEMP(1),CODE(33))                                    GTP03900
C                                                                       GTP04000
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         GTP04100
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    GTP04200
      COMMON/TMP/TXXXX                                                  GTP04300
      DIMENSION TXXXX(2,32)                                             GTP04400
C*                                                                      GTP04500
C PURPOSE      THIS ROUTINE RETURNS THE NAME TABLE (NAMTBL)             GTP04600
C              INDEX FOR THE CURRENT TEMPORARY NAME OF THIS             GTP04700
C              MODE.                                                    GTP04800
C                                                                       GTP04900
C ARGUMENTS    MODE    THE MODE OF THE SURFACE REQUIRING                GTP05000
C                      TEMPORARY STORAGE.                               GTP05100
C                                                                       GTP05200
C ARGUMENTS    MODE    THE MODE OF THE SURFACE REQUIRING                GTP05300
C                      TEMPORARY STORAGE.                               GTP05400
C                                                                       GTP05500
      CHARACTER SYMBOL*6,SYMI*8,BLK*1                                   GTP05610
      DATA BLK/' '/                                                     GTP05700
C**                                                                     GTP05800
C...     INCREMENT COUNTER FOR THIS MODE                                GTP05900
C                                                                       GTP06000
      TXXXX(2,MODE)=TXXXX(2,MODE)+1                                     GTP06100
C                                                                       GTP06200
C...     GENERATE NAME OF TEMPORARY LOCATION                            GTP06300
C                                                                       GTP06400
      SYMBOL = BLK                                                      GTP06500
C                                                                       GTP06700
C...           START SYMBOL WITH A $                                    GTP06800
C                                                                       GTP06900
      CALL SHIFT(SYMBOL,'$')                                            GTP07000
C                                                                       GTP07100
C...     IS MODE .GT. 9                                                 GTP07200
C                                                                       GTP07300
      IF (MODE/10 .EQ. 0) GO TO 10                                      GTP07400
C                                                                       GTP07500
C...     YES. CONVERT TENS DIGIT OF MODE TO BCD AND SHIFT INTO SYMBOL   GTP07600
C                                                                       GTP07700
      CALL BINBCD(MODE/10,SYMI,COUNT)                                   GTP07800
      CALL SHIFT(SYMBOL,SYMI)                                           GTP07900
C                                                                       GTP08000
C...     CONVERT UNITS DIGIT TO BCD AND SHIFT INTO SYMBOL               GTP08100
C                                                                       GTP08200
   10 CALL BINBCD(MOD(MODE,10),SYMI,COUNT)                              GTP08300
      CALL SHIFT(SYMBOL,SYMI)                                           GTP08400
C                                                                       GTP08500
C...           SHIFT T$ INTO SYMBOL                                     GTP08600
C                                                                       GTP08700
      CALL SHIFT(SYMBOL,'T')                                            GTP08800
      CALL SHIFT(SYMBOL,'$')                                            GTP08900
C                                                                       GTP09000
C...     IS COUNTER FOR THIS MODE .GT. 9                                GTP09100
C                                                                       GTP09200
      IF (TXXXX(2,MODE)/10 .EQ. 0)  GO  TO  20                          GTP09300
C                                                                       GTP09400
C...     YES. CONVERT TENS DIGIT TO BCD AND SHIFT INTO SYMBOL           GTP09500
C                                                                       GTP09600
      CALL BINBCD(TXXXX(2,MODE)/10,SYMI,COUNT)                          GTP09700
      CALL SHIFT(SYMBOL,SYMI)                                           GTP09800
C                                                                       GTP09900
C...     CONVERT UNITS DIGIT OF POINTER TO BCD AND SHIFT INTO SYMBOL    GTP10000
C                                                                       GTP10100
   20 CALL BINBCD(MOD(TXXXX(2,MODE),10),SYMI,COUNT)                     GTP10200
      CALL SHIFT(SYMBOL,SYMI)                                           GTP10300
C                                                                       GTP10400
C...     FIND NAMTBL INDEX OF NAME JUST CREATED AND STORE AS GETTMP     GTP10500
C                                                                       GTP10600
      GETTMP=NAME(SYMBOL)                                               GTP10700
C                                                                       GTP10800
C...     IS FIRST COLUMN OF NAMTBL ZERO.                                GTP10900
C...     IF SO, THEN THIS IS THE FIRST APPEARENCE OF THIS NAME.         GTP11000
C...     IF NOT, IT HAS BEEN USED BEFORE, SO RETURN.                    GTP11100
C                                                                       GTP11200
      IF (NAMTBL(GETTMP).NE.0) RETURN                                   GTP11300
C                                                                       GTP11400
C...     FIRST APPEARENCE - GENERATE RESRV CODE AND SET CORRECT CLASS   GTP11500
C...     AND MODE IN COLUMN 1 OF NAMTBL. THEN RETURN.                   GTP11600
C                                                                       GTP11700
      CALL RESRVZ(GETTMP,MODE,TXXXX(1,MODE),1)                          GTP11800
      NAMTBL(GETTMP) = TEMP(1)+MODE                                     GTP11900
      RETURN                                                            GTP12000
       END                                                              GTP12100
**** SOURCE FILE : M0006635.W01   ***
*
C                                                                       GOP00100
C              FORTRAN SUBROUTINE GOPAT                                 GOP00200
C                                                                       GOP00300
C LINKAGE      SUBROUTINE GOPAT                                         GOP00400
C                                                                       GOP00500
C          SUBSIDIARIES                  CALLED BY                      GOP00600
C          TYPE          ENTRY           TYPE          ENTRY            GOP00700
C          SUBROUTINE    CALLZZ          SUBROUTINE    PRO026           GOP00800
C          SUBROUTINE    ALARM                                          GOP00900
C          INTEGER FCT.  NAME                                           GOP01000
C          SUBROUTINE    OPCODE                                         GOP01100
C          SUBROUTINE    ARGCVT                                         GOP01200
C          SUBROUTINE    RESRVZ                                         GOP01300
C          SUBROUTINE    RLSLIN                                         GOP01400
C          INTEGER FCT.  SEARCH                                         GOP01500
C          SUBROUTINE    TWOARG                                         GOP01600
C                                                                       GOP01700
      SUBROUTINE GOPAT                                                  GOP01800
C                                                                       GOP01900
      IMPLICIT INTEGER (A-Z)                                            GOP02000
C                                                                       GOP02100
C        1.    NAME TABLE AND TABLE LIMITS                              GOP02200
C                                                                       GOP02300
      INCLUDE 'NAMETB.INC'                                              GOP02410
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                GOP02450
C CNAMTB:      NAME TABLE OR DICTIONARY                                 GOP02550
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     GOP02600
C                                                                       GOP03000
C        2.    STACK AND POINTER STORAGE                                GOP03100
C                                                                       GOP03200
      COMMON/STKLST/STKLST                                              GOP03300
      DIMENSION STKLST(300),ARGSTK(99)                                  GOP03400
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             GOP03500
      EQUIVALENCE (ARGTOP,STKLST(2))                                    GOP03600
C ARGSTK:      ARGUMENT STACK                                           GOP03700
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               GOP03800
C                                                                       GOP03900
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      GOP04000
C                                                                       GOP04100
      COMMON/CODE/CODE                                                  GOP04200
      DIMENSION CODE(150),NUMBER(2),TEMP(2),PERMID(2),VBL(2),IDENT(2)   GOP04300
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        GOP04400
      EQUIVALENCE (NUMBER(1),CODE(27))                                  GOP04500
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        GOP04600
      EQUIVALENCE (TEMP(1),CODE(33))                                    GOP04700
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        GOP04800
      EQUIVALENCE (PERMID(1),CODE(39))                                  GOP04900
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        GOP05000
      EQUIVALENCE (VBL(1),CODE(61))                                     GOP05100
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        GOP05200
      EQUIVALENCE (IDENT(1),CODE(69))                                   GOP05300
C                                                                       GOP05400
C        9.    NAME TABLE POINTERS TO NUMBERS                           GOP05500
C                                                                       GOP05600
      COMMON/NUMPTR/NUMPTR                                              GOP05700
      DIMENSION NUMPTR(12),ZERO(1)                                      GOP05800
C ZERO:        NAMTBL POINTER TO '0     '                               GOP05900
      EQUIVALENCE (ZERO(1),NUMPTR(1))                                   GOP06000
C ZEROPT:      NAMTBL POINTER TO '0.    '                               GOP06100
      EQUIVALENCE (ZEROPT,NUMPTR(2))                                    GOP06200
C ONE:         NAMTBL POINTER TO '1     '                               GOP06300
      EQUIVALENCE (ONE,NUMPTR(3))                                       GOP06400
C                                                                       GOP06500
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           GOP06600
C                                                                       GOP06700
      INCLUDE 'GMTY.INC'                                                GOP06800
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            GOP07000
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  GOP07200
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    GOP07400
C                                                                       GOP07600
C       16.    LITERALS FOR I. L. OPERATION CODES                       GOP07700
C                                                                       GOP07800
      COMMON/IL/IL                                                      GOP07900
      DIMENSION IL(21)                                                  GOP08000
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              GOP08100
      EQUIVALENCE (MOVE,IL(19))                                         GOP08200
C                                                                       GOP08300
C       17.    MODE CODES                                               GOP08400
C                                                                       GOP08500
      COMMON/MODX/MODX                                                  GOP08600
      DIMENSION MODX(32)                                                GOP08700
C REAL:        MODE CODE (24) FOR A SCALAR                              GOP08800
      EQUIVALENCE (REAL,MODX(21))                                       GOP08900
C PATERN:      MODE CODE (26) FOR PATTERN                               GOP09000
      EQUIVALENCE (PATERN,MODX(26))                                     GOP09100
C                                                                       GOP09200
C       27.    OPERAND MODIFIERS                                        GOP09300
C                                                                       GOP09400
      COMMON/OPMOD/OPMOD                                                GOP09500
      DIMENSION OPMOD(6)                                                GOP09600
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             GOP09700
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     GOP09800
C                                                                       GOP09900
C       28.    OPERAND MODIFIERS                                        GOP10000
C                                                                       GOP10100
      COMMON/SUBLST/SUBLST                                              GOP10200
      DIMENSION SUBLST(136),APTXXX(120)                                 GOP10300
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            GOP10400
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 GOP10500
C                                                                       GOP10600
C       29.    CLASS CODE MODULI                                        GOP10700
C                                                                       GOP10800
      COMMON/MODULI/MODULI                                              GOP10900
      DIMENSION MODULI(2)                                               GOP11000
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    GOP11100
      EQUIVALENCE (MODULO,MODULI(1))                                    GOP11200
C MODHLF:      NORMAL MODE CODE LIMIT 500                               GOP11300
      EQUIVALENCE (MODHLF,MODULI(2))                                    GOP11400
C*                                                                      GOP11500
C PURPOSE      TO VALIDATE GO/PATERN STATEMENTS AND GENERATE            GOP11600
C              APPROPRIATE INTERMEDIATE LANGUAGE.                       GOP11700
C                                                                       GOP11800
      DIMENSION BIGSTK(10),NUMREC(5),OMTLST(18),AVDLST(18)              GOP11900
      LOGICAL LOMIT,LRETAI                                              GOP12000
      CHARACTER*6 HDOLSC,HDOLPC                                         GOP12050
      DATA NUMREC/1,5,4,3,2/                                            GOP12100
      DATA KOMIT /64/, KRETAI /65/, KINVER /35/, KZIGZA /61/            GOP12200
      DATA HDOLSC,HDOLPC /'$SCRTH','$PCRTH'/                            GOP12400
C**                                                                     GOP12500
C......             INITIALIZE                                          GOP12600
C                                                                       GOP12700
      IARG1=ZERO(1)                                                     GOP12800
      IARG2=ZERO(1)                                                     GOP12900
      IO=0                                                              GOP13000
      IA=0                                                              GOP13100
      KMOVO=-1                                                          GOP13200
      KMOVA=-1                                                          GOP13300
      KSCRTH=NAME(HDOLSC)                                               GOP13400
      KPCRTH=NAME(HDOLPC)                                               GOP13500
      ASSIGN 15 TO IEND                                                 GOP13600
C                             POINTER FOR ARGSTK, 1 BELOW PATERN        GOP13700
      IARG=ARGTOP-1                                                     GOP13800
C                             POINTER FOR BIGSTK                        GOP13900
      IBIG=5                                                            GOP14000
C                             FLAGS FOR OMIT AND RETAIN                 GOP14100
      LOMIT=.FALSE.                                                     GOP14200
      LRETAI=.FALSE.                                                    GOP14300
C                             NUMBER OF ARGS TO DELETE FROM BIGSTK      GOP14400
      IGET=5                                                            GOP14500
      IF(IARG.EQ.0)GO TO 40                                             GOP14600
C                                                                       GOP14700
C......             SETUP BIGSTK CORRESPONDING TO TOP 5 ARGUMENTS OF    GOP14800
C......             ARGSTK, IN FORMAT TO BE RECOGNIZED BY PATERN        GOP14900
C......             GEOMETRIC PRODUCTIONS                               GOP15000
C                                                                       GOP15100
      ASSIGN 10 TO ISETUP                                               GOP15200
      GO TO 1000                                                        GOP15300
C                                                                       GOP15400
C......             LOOK FOR PATERN                                     GOP15500
C                                                                       GOP15600
   10 J=GEOLOC(PATERN)                                                  GOP15700
      ERRPT=IBIG                                                        GOP15800
      KSERCH=SEARCH(BIGSTK,10,GEOMTB(J),ERRPT)                          GOP15900
C......             ERROR IF NO MATCH ON CORRECT TYPE                   GOP16000
C                                                                       GOP16100
      IF(KSERCH.LE.12 .OR. KSERCH.GE.18)GO TO 1258                      GOP16200
C                                                                       GOP16300
C......             DETERMINE NUMBER OF ELEMENTS RECOGNIZED             GOP16400
C                                                                       GOP16500
      I=KSERCH-12                                                       GOP16600
      IGET=NUMREC(I)                                                    GOP16700
C                                                                       GOP16800
      NAMX=BIGSTK(9)                                                    GOP16900
      IF(NAMX.GT.NAMMAX)GO TO 12                                        GOP17000
      KMODE=MOD(NAMTBL(NAMX),MODULO)                                    GOP17100
C                                                                       GOP17200
C                   BRANCH TO PROCESS RECOGNIZED ELEMENTS               GOP17300
C                                                                       GOP17400
   12 GO TO(100,210,300,200,300),I                                      GOP17500
C                                                                       GOP17600
C                   INVERS OR ZIGZAG                                    GOP17700
C                                                                       GOP17800
  100 IF(KMODE.EQ.KINVER)IARG1=ONE                                      GOP17900
      IF(KMODE.EQ.KZIGZA)IARG2=ONE                                      GOP18000
      GO TO 15                                                          GOP18100
C                                                                       GOP18200
C                   AVOID                                               GOP18300
C                                                                       GOP18400
  200 AVDSAV=BIGSTK(7)                                                  GOP18500
  210 AVDLST(IA+1)=BIGSTK(7)                                            GOP18600
      AVDLST(IA+2)=BIGSTK(5)                                            GOP18700
      IF(KSERCH.NE.14)GO TO 215                                         GOP18800
      AVDLST(IA+3)=BIGSTK(1)                                            GOP18900
      GO TO 220                                                         GOP19000
  215 AVDLST(IA+3)=ZEROPT                                               GOP19100
  220 IA=IA+3                                                           GOP19200
      IF(IA.LT.18)GO TO 15                                              GOP19300
C                   IF NOT ALREADY DONE,DECLARE ARRAY OF SCRATCH        GOP19400
C                   STORAGE IN PART PROGRAM.  MOVE AVOID INFORMATION    GOP19500
C                   INTO LOCATIONS 1 THRU 102 OF THIS ARRAY.            GOP19600
  250 IF(NAMTBL(KSCRTH).NE.0)GO TO 255                                  GOP19700
      NAMTBL(KSCRTH)=VBL(1)                                             GOP19800
      CALL RESRVZ(KSCRTH,0,102,1)                                       GOP19900
  255 IF((KMOVA-IA).LT.(-102))GO TO 2010                                GOP20000
      CALL OPCODE(MOVE)                                                 GOP20100
      CALL TWOARG(KMOVA,KSCRTH)                                         GOP20200
      DO 260 I=1,IA                                                     GOP20300
  260 CALL ARGCVT(AVDLST(I))                                            GOP20400
      CALL RLSLIN                                                       GOP20500
      KMOVA=KMOVA-IA                                                    GOP20600
      IA=0                                                              GOP20700
      GO TO IEND,(15,35,40)                                             GOP20800
C                                                                       GOP20900
C                   OMIT OR RETAIN                                      GOP21000
C                                                                       GOP21100
  300 LOMIT=KMODE.EQ.KOMIT. OR. LOMIT                                   GOP21200
      LRETAI=KMODE.EQ.KRETAI. OR. LRETAI                                GOP21300
      IF(LOMIT.AND.LRETAI)GO TO 2000                                    GOP21400
      OMTLST(IO+1)=BIGSTK(7)                                            GOP21500
      IF(KSERCH.NE.15)GO TO 315                                         GOP21600
      OMTLST(IO+2)=BIGSTK(3)                                            GOP21700
      GO TO 320                                                         GOP21800
  315 OMTLST(IO+2)=OMTLST(IO+1)                                         GOP21900
  320 IO=IO+2                                                           GOP22000
      IF(IO.LT.18)GO TO 15                                              GOP22100
C                   IF NOT ALREADY DONE, DECLARE ARRAY OF SCRATCH       GOP22200
C                   STORAGE IN PART PROGRAM.  MOVE OMIT OR RETAIN       GOP22300
C                   INFORMATION INTO LOCATIONS 1 THRU 98 OF THIS ARRAY. GOP22400
  350 IF(NAMTBL(KPCRTH).NE.0)GO TO 355                                  GOP22500
      NAMTBL(KPCRTH)=VBL(1)                                             GOP22600
      CALL RESRVZ(KPCRTH,0,98,1)                                        GOP22700
  355 IF((KMOVO-IO).LT.(-98))GO TO 2010                                 GOP22800
      CALL OPCODE(MOVE)                                                 GOP22900
      CALL TWOARG(KMOVO,KPCRTH)                                         GOP23000
      DO 360 I=1,IO                                                     GOP23100
  360 CALL ARGCVT(OMTLST(I))                                            GOP23200
      CALL RLSLIN                                                       GOP23300
      KMOVO=KMOVO-IO                                                    GOP23400
      IO=0                                                              GOP23500
      GO TO IEND,(15,35,40)                                             GOP23600
C                                                                       GOP23700
C                   BRANCH IF ARGSTK ALL EXAMINED                       GOP23800
C                                                                       GOP23900
   15 IF(IARG+IBIG-IGET.EQ.0)GO TO 30                                   GOP24000
C                                                                       GOP24100
C                   RESET BIGSTK                                        GOP24200
C                                                                       GOP24300
      ASSIGN 20 TO ISETUP                                               GOP24400
      GO TO 1000                                                        GOP24500
C                                                                       GOP24600
C                   LOOP IF REAL LIST CANNOT FOLLOW                     GOP24700
C                                                                       GOP24800
   20 IF(KSERCH.LE.15)GO TO 10                                          GOP24900
C                                                                       GOP25000
C                   PROCESS ELEMENT OF REAL LIST IF PRESENT             GOP25100
C                                                                       GOP25200
      NAMX=BIGSTK(9)                                                    GOP25300
      IGET=1                                                            GOP25400
      IF(NAMX.GT.NAMMAX)GO TO 17                                        GOP25500
      KCLASS=NAMTBL(NAMX)/MODULO                                        GOP25600
      IF(KCLASS.EQ.NUMBER(1))GO TO 17                                   GOP25700
      KMODE=MOD(NAMTBL(NAMX),MODHLF)                                    GOP25800
      IF(KMODE.NE.REAL)GO TO 10                                         GOP25900
   17 IF(KSERCH.EQ.17)GO TO 18                                          GOP26000
C                   ELEMENT OF AVOID LIST                               GOP26100
      AVDLST(IA+1)=AVDSAV                                               GOP26200
      AVDLST(IA+2)=BIGSTK(9)                                            GOP26300
      GO TO 215                                                         GOP26400
C                   ELEMENT OF OMIT OR RETAIN LIST                      GOP26500
   18 OMTLST(IO+1)=BIGSTK(9)                                            GOP26600
      GO TO 315                                                         GOP26700
C                                                                       GOP26800
C                   MOVE ANY ELEMENTS REMAINING IN OMTLST OR            GOP26900
C                   AVDLST TO $SCRTH                                    GOP27000
C                                                                       GOP27100
   30 IF(IO.EQ.0)GO TO 35                                               GOP27200
      ASSIGN 35 TO IEND                                                 GOP27300
      GO TO 350                                                         GOP27400
   35 IF(IA.EQ.0)GO TO 40                                               GOP27500
      ASSIGN 40 TO IEND                                                 GOP27600
      GO TO 250                                                         GOP27700
C                   DETERMINE NUMBER OF TWO-ELEMENT ENTRIES IN          GOP27800
C                   OMIT/RETAIN TABLE, OMTLST.                          GOP27900
C                   IF RETAIN, SET NUMBER NEGATIVE.                     GOP28000
   40 IARG3=-(KMOVO+1)/2                                                GOP28100
      IF(LRETAI)IARG3=IARG3+1000                                        GOP28200
C                   DETERMINE NUMBER OF THREE-ELEMENT ENTRIES           GOP28300
C                   IN AVOID TABLE, AVDLST.                             GOP28400
      IARG4=-(KMOVA+1)/3                                                GOP28500
C                   GENERATE CALL TO XECUTION SUBROUTINE GOTOPN         GOP28600
   50 CALL CALLZZ(APTXXX(99))                                           GOP28700
      CALL ARGCVT(ARGSTK(ARGTOP))                                       GOP28800
      CALL ARGCVT(IARG1)                                                GOP28900
      CALL ARGCVT(IARG2)                                                GOP29000
      CALL TWOARG(QUIDLR,IARG3)                                         GOP29100
      CALL TWOARG(QUIDLR,IARG4)                                         GOP29200
      IF(NAMTBL(KPCRTH).EQ.0)GO TO 52                                   GOP29300
      CALL TWOARG(0,KPCRTH)                                             GOP29400
      GO TO 53                                                          GOP29500
   52 CALL ARGCVT(ZEROPT)                                               GOP29600
   53 IF(NAMTBL(KSCRTH).EQ.0)GO TO 54                                   GOP29700
      CALL TWOARG(0,KSCRTH)                                             GOP29800
      GO TO 60                                                          GOP29900
   54 CALL ARGCVT(ZEROPT)                                               GOP30000
   60 CALL RLSLIN                                                       GOP30100
C                                                                       GOP30200
      RETURN                                                            GOP30300
C-----------------------------------------------------------------------GOP30400
C                                                                       GOP30500
C     PURPOSE       TO MOVE INTERNAL BIT CONFIGURATIONS CORRESPONDING TOGOP30600
C                   ELEMENTS OF ARGSTK INTO BIGSTK, FOR RECOGNITION BY  GOP30700
C                   PATERN GEOMETRIC PRODUCTIONS                        GOP30800
C                                                                       GOP30900
C     ARGUMENTS     IARG      INDEX OF NEXT ELEMENT OF ARGSTK.          GOP31000
C                   IGET      NUMBER OF RECOGNIZED ELEMENTS TO BE POPPEDGOP31100
C                             FROM BIGSTK.                              GOP31200
C                   ISETUP    RETURN INDEX.                             GOP31300
C                                                                       GOP31400
C                             POP RECOGNIZED ELEMENTS                   GOP31500
 1000 IIN=10                                                            GOP31600
      IIOUT=10-2*IGET                                                   GOP31700
      IBIG=IBIG-IGET                                                    GOP31800
 1005 IF (IIOUT.EQ.0) GO TO 1010                                        GOP31900
      BIGSTK(IIN)=BIGSTK(IIOUT)                                         GOP32000
      BIGSTK(IIN-1)=BIGSTK(IIOUT-1)                                     GOP32100
      IIN=IIN-2                                                         GOP32200
      IIOUT=IIOUT-2                                                     GOP32300
      GO TO 1005                                                        GOP32400
C                             CONVERT STACK ELEMENTS                    GOP32500
 1010 DO 1250 I=1,IGET                                                  GOP32600
      IF(IARG.NE.0)GO TO 1200                                           GOP32700
      J=10-2*IBIG                                                       GOP32800
      BIGSTK(J)=-1                                                      GOP32900
      GO TO 1255                                                        GOP33000
 1200 NAMX=ARGSTK(IARG)                                                 GOP33100
      ERRPT=IARG                                                        GOP33200
      IF(NAMX.GT.NAMMAX)GO TO 1205                                      GOP33300
      KCLASS=MODULO*(NAMTBL(NAMX)/MODULO)                               GOP33400
      KMODE =NAMTBL(NAMX)-KCLASS                                        GOP33500
      IF(KMODE.GE.MODHLF) KMODE=KMODE-MODHLF                            GOP33600
      IF(KMODE.EQ.0)GOTO 1260                                           GOP33700
      IF (KCLASS.EQ.VBL(1) .OR. KCLASS.EQ.TEMP(1)) GO TO 1220           GOP33800
     0IF (KCLASS.EQ.IDENT(1)) NAMTBL(NAMX)=NAMTBL(NAMX)-IDENT(1)        GOP33900
     1                                      +PERMID(1)                  GOP34000
      IF (KCLASS.EQ.IDENT(1).OR.KCLASS.EQ.PERMID(1)) GO TO 1210         GOP34100
      IF (KCLASS.NE.NUMBER(1)) GO TO 1260                               GOP34200
 1205 KMODE=REAL                                                        GOP34300
      GO TO 1220                                                        GOP34400
 1210 KMODE=KMODE+50                                                    GOP34500
 1220 J=10-2*IBIG                                                       GOP34600
      BIGSTK(J)=PMIDTB(KMODE)                                           GOP34700
      BIGSTK(J-1)=NAMX                                                  GOP34800
      IARG=IARG-1                                                       GOP34900
      IBIG=IBIG+1                                                       GOP35000
 1250 CONTINUE                                                          GOP35100
C                             RETURN                                    GOP35200
 1255 GO TO ISETUP,(10,20)                                              GOP35300
C                             IMPROPER ARGUMENT IN GOTO/PATERN STATEMENTGOP35400
 1258 ERRPT=MAX(IARG+1,IARG+ERRPT)                                      GOP35500
 1260 IERROR=2036                                                       GOP35600
      GO TO 3000                                                        GOP35700
C                             BOTH OMIT AND RETAIN SPECIFIED IN GOTO/   GOP35800
C                             PATERN STATEMENT                          GOP35900
 2000 IERROR=2037                                                       GOP36000
      ERRPT=IARG+IBIG                                                   GOP36100
      GO TO 3000                                                        GOP36200
C                   TOO MANY OMIT, RETAIN OR AVOID POINTS IN GOTO/      GOP36300
C                             PATERN STATEMENT                          GOP36400
 2010 IERROR=2038                                                       GOP36500
      ERRPT=IARG+1                                                      GOP36600
 3000 CALL ALARM(IERROR,-ERRPT,8,'GOPAT   ')                            GOP36700
      RETURN                                                            GOP36800
C                                                                       GOP36900
C                                                                       GOP37000
      END                                                               GOP37100
**** SOURCE FILE : M0000449.ORG   ***
*
C.....COMPUTER DEPENDENT ROUTINE      HELP.......HL GRAY    12/67  *CD* HELP0000
C                                                                       HELP0010
C PURPOSE      TO PROVIDE A TRACE-BACK IN THE CASE OF A                 HELP0020
C              CASTASTROPHIC FAILURE.                                   HELP0030
C                                                                       HELP0040
C LINKAGE      CALL HELP                                                HELP0050
C                                                                       HELP0060
C ARGUMENTS    NONE                                                     HELP0070
C                                                                       HELP0080
C NOTES        THE METHOD USED TO OBTAIN THE TRACE-BACK                 HELP0090
C              MIGHT NEED TO BE CHANGED ON SOME COMPUTERS.              HELP0100
C                                                                       HELP0110
C SUBSIDIARIES NONE                                                     HELP0120
C                                                                       HELP0130
      SUBROUTINE HELP                                                   HELP0140
C                                                                       HELP0150
C...     CATASTROPHIC FAILURE                                           HELP0160
C...     PRODUCE EXECUTION FAILURE SO AS TO OBTAIN AUTOMATIC TRACE-BACK HELP0170
C                                                                       HELP0180
      DIMENSION Y(1)                                                    HELP0190
      DO 10 I=100000,1000000,10                                         HELP0200
      X=Y(I)                                                            HELP0210
   10 Y(I)=X                                                            HELP0220
    1 RETURN                                                            HELP0230
       END                                                              HELP0240
**** SOURCE FILE : M0006638.V03   ***
*
C                                                                       IFT00100
C              FORTRAN SUBROUTINE IFTMP                                 IFT00200
C                                                                       IFT00300
C LINKAGE      LOGICAL FUNCTION IFTMP(A)                                IFT00400
C                                                                       IFT00500
C          SUBSIDIARIES                  CALLED BY                      IFT00600
C          NONE                          TYPE          ENTRY            IFT00700
C                                        SUBROUTINE    BOOLIF           IFT00800
C                                        SUBROUTINE    INPAT            IFT00900
C                                        SUBROUTINE    MACREC           IFT01000
C                                        SUBROUTINE    PRO020           IFT01100
C                                        SUBROUTINE    RECOG            IFT01200
C                                        SUBROUTINE    RECOGN           IFT01300
C                                        SUBROUTINE    REPLAC           IFT01400
C                                        SUBROUTINE    SSDEF            IFT01500
C                                        SUBROUTINE    SUBCOD           IFT01600
C                                                                       IFT01700
      LOGICAL FUNCTION IFTMP(A)                                         IFT01800
C                                                                       IFT01900
      IMPLICIT INTEGER (A-Z)                                            IFT02000
C                                                                       IFT02100
C        1.    NAME TABLE AND TABLE LIMITS                              IFT02200
C                                                                       IFT02300
      INCLUDE 'NAMETB.INC'                                              IFT02410
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                IFT02450
C CNAMTB:      NAME TABLE OR DICTIONARY                                 IFT02550
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     IFT02600
C                                                                       IFT03000
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      IFT03100
C                                                                       IFT03200
      COMMON/CODE/CODE                                                  IFT03300
      DIMENSION CODE(150),TEMP(2)                                       IFT03400
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        IFT03500
      EQUIVALENCE (TEMP(1),CODE(33))                                    IFT03600
C                                                                       IFT03700
C       29.    CLASS CODE MODULI                                        IFT03800
C                                                                       IFT03900
      COMMON/MODULI/MODULI                                              IFT04000
      DIMENSION MODULI(2)                                               IFT04100
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    IFT04200
      EQUIVALENCE (MODULO,MODULI(1))                                    IFT04300
C MODHLF:      NORMAL MODE CODE LIMIT 500                               IFT04400
      EQUIVALENCE (MODHLF,MODULI(2))                                    IFT04500
C**                                                                     IFT04600
C                                                                       IFT04700
C...     IS A THE NAMTBL INDEX OF A TEMPORARY LOCATION                  IFT04800
C                                                                       IFT04900
      IF(A.GT.NAMMAX)GO TO 5                                            IFT05000
      IF((NAMTBL(A)/MODULO.EQ.TEMP(1)/MODULO).AND.                      IFT05100
     /  ((NAMTBL(A)-MODULO*(NAMTBL(A)/MODULO)).LT.MODHLF))GO TO 10      IFT05200
C                                                                       IFT05300
C...     NO. RETURN IFTMP AS .FALSE.                                    IFT05400
C                                                                       IFT05500
    5 IFTMP=.FALSE.                                                     IFT05600
      RETURN                                                            IFT05700
C                                                                       IFT05800
C...     YES. RETURN IFTMP AS .TRUE.                                    IFT05900
C                                                                       IFT06000
   10 IFTMP=.TRUE.                                                      IFT06100
      RETURN                                                            IFT06200
       END                                                              IFT06300
**** SOURCE FILE : M0006639.W01   ***
*
C                                                                       INA00100
C              FORTRAN SUBROUTINE INPAT                                 INA00200
C                                                                       INA00300
C LINKAGE      SUBROUTINE INPAT(IACT,BIGCNT)                            INA00400
C                                                                       INA00500
C          SUBSIDIARIES                  CALLED BY                      INA00600
C          TYPE          ENTRY           TYPE          ENTRY            INA00700
C          SUBROUTINE    ALARM           SUBROUTINE    RECOG            INA00800
C          SUBROUTINE    CALLZZ                                         INA00900
C          INTEGER FCT.  GETTMP                                         INA01000
C          SUBROUTINE    BCDBIN                                         INA01100
C          LOGICAL FCT.  IFTMP                                          INA01200
C          SUBROUTINE    MCXTRN                                         INA01300
C          SUBROUTINE    ARGCVT                                         INA01400
C          INTEGER FCT.  NAME                                           INA01500
C          INTEGER FCT.  NUMB                                           INA01600
C          SUBROUTINE    OPCODE                                         INA01700
C          SUBROUTINE    PUTTMP                                         INA01800
C          SUBROUTINE    RESRVZ                                         INA01900
C          SUBROUTINE    RLSLIN                                         INA02000
C          INTEGER FCT.  SEARCH                                         INA02100
C          SUBROUTINE    TWOARG                                         INA02200
C          SUBROUTINE    BINBCD                                         INA02300
C                                                                       INA02400
      SUBROUTINE INPAT(IACT,BIGCNT)                                     INA02500
C                                                                       INA02600
      IMPLICIT INTEGER (A-Z)                                            INA02700
C                                                                       INA02800
C              FUNCTION DECLARATION                                     INA02900
C                                                                       INA03000
      LOGICAL IFTMP                                                     INA03100
C                                                                       INA03200
C        1.    NAME TABLE AND TABLE LIMITS                              INA03300
C                                                                       INA03400
      INCLUDE 'NAMETB.INC'                                              INA03510
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                INA03550
C CNAMTB:      NAME TABLE OR DICTIONARY                                 INA03650
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     INA03700
C                                                                       INA04100
C        2.    STACK AND POINTER STORAGE                                INA04200
C                                                                       INA04300
      COMMON/STKLST/STKLST                                              INA04400
      DIMENSION STKLST(300),STACK(2,99)                                 INA04500
C TOP:         POINTER TO LAST STACK ENTRY                              INA04600
      EQUIVALENCE (TOP,STKLST(1))                                       INA04700
C STACK:       WORKING STACK                                            INA04800
      EQUIVALENCE (STACK(1,1),STKLST(4))                                INA04900
C                                                                       INA05000
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      INA05100
C                                                                       INA05200
      COMMON/CODE/CODE                                                  INA05300
      DIMENSION CODE(150),COMMA(2),NUMBER(2),TEMP(2),PERMID(2),VBL(2),IDINA05400
     *          ENT(2)                                                  INA05500
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF ',     '        INA05600
      EQUIVALENCE (COMMA(1),CODE(1))                                    INA05700
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        INA05800
      EQUIVALENCE (NUMBER(1),CODE(27))                                  INA05900
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        INA06000
      EQUIVALENCE (TEMP(1),CODE(33))                                    INA06100
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        INA06200
      EQUIVALENCE (PERMID(1),CODE(39))                                  INA06300
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        INA06400
      EQUIVALENCE (VBL(1),CODE(61))                                     INA06500
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        INA06600
      EQUIVALENCE (IDENT(1),CODE(69))                                   INA06700
C                                                                       INA06800
C        4.    PRODUCTION TABLE                                         INA06900
C                                                                       INA07000
      COMMON/SRCTBL/SRCTBL                                              INA07100
      DIMENSION SRCTBL(502),META(50)                                    INA07200
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   INA07300
      EQUIVALENCE (META(1),SRCTBL(3))                                   INA07400
C                                                                       INA07500
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      INA07600
C                                                                       INA07700
      COMMON/BCDPTR/BCDPTR                                              INA07800
      DIMENSION BCDPTR(7)                                               INA07900
C DOTTAB:      NAMTBL POINTER TO ALPHAMERIC LITERAL '$$TAB'             INA08000
      EQUIVALENCE (DOTTAB,BCDPTR(7))                                    INA08100
C                                                                       INA08200
C        9.    NAME TABLE POINTERS TO NUMBERS                           INA08300
C                                                                       INA08400
      COMMON/NUMPTR/NUMPTR                                              INA08500
      DIMENSION NUMPTR(12),ZERO(1)                                      INA08600
C ZERO:        NAMTBL POINTER TO '0     '                               INA08700
      EQUIVALENCE (ZERO(1),NUMPTR(1))                                   INA08800
C ZEROPT:      NAMTBL POINTER TO '0.    '                               INA08900
      EQUIVALENCE (ZEROPT,NUMPTR(2))                                    INA09000
C ONE:         NAMTBL POINTER TO '1     '                               INA09100
      EQUIVALENCE (ONE,NUMPTR(3))                                       INA09200
C TWO:         NAMTBL POINTER TO '2     '                               INA09300
      EQUIVALENCE (TWO,NUMPTR(5))                                       INA09400
C FOUR:        NAMTBL POINTER TO '4     '                               INA09500
      EQUIVALENCE (FOUR,NUMPTR(7))                                      INA09600
C                                                                       INA09700
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           INA09800
C                                                                       INA09900
      INCLUDE 'GMTY.INC'                                                INA10000
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            INA10200
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  INA10400
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    INA10600
C                                                                       INA10800
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    INA10900
C                                                                       INA11000
      COMMON/CFSIZE/CFSIZE                                              INA11100
      DIMENSION CFSIZE(205),MAXSIZ(2),CANSIZ(2,100)                     INA11200
C CANTOP:      POINTER TO THE LAST CANSIZ ENTRY                         INA11300
      EQUIVALENCE (CANTOP,CFSIZE(1))                                    INA11400
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                INA11500
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 INA11600
C CANSIZ:      NUMBER OF ITEMS A. NAMTBL INDEX OF EACH LARGE DATA ARRAY INA11700
      EQUIVALENCE (CANSIZ(1,1),CFSIZE(6))                               INA11800
C                                                                       INA11900
C       16.    LITERALS FOR I. L. OPERATION CODES                       INA12000
C                                                                       INA12100
      COMMON/IL/IL                                                      INA12200
      DIMENSION IL(21)                                                  INA12300
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              INA12400
      EQUIVALENCE (MOVE,IL(19))                                         INA12500
C                                                                       INA12600
C       17.    MODE CODES                                               INA12700
C                                                                       INA12800
      COMMON/MODX/MODX                                                  INA12900
      DIMENSION MODX(32)                                                INA13000
C POINT:       MODE CODE (19) FOR POINT                                 INA13100
      EQUIVALENCE (POINT,MODX(19))                                      INA13200
C REAL:        MODE CODE (24) FOR A SCALAR                              INA13300
      EQUIVALENCE (REAL,MODX(21))                                       INA13400
C PATERN:      MODE CODE (26) FOR PATTERN                               INA13500
      EQUIVALENCE (PATERN,MODX(26))                                     INA13600
C                                                                       INA13700
C       22.    MACRO PROCESSING VARIABLES                               INA13800
C                                                                       INA13900
      COMMON/MACXX1/MACXX1                                              INA14000
      DIMENSION MACXX1(71)                                              INA14100
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        INA14200
      EQUIVALENCE (INTMED,MACXX1(22))                                   INA14300
C                                                                       INA14400
C       27.    OPERAND MODIFIERS                                        INA14500
C                                                                       INA14600
      COMMON/OPMOD/OPMOD                                                INA14700
      DIMENSION OPMOD(6)                                                INA14800
C DLR:         CONTAINS OPERAND TYPE CODE 1                             INA14900
      EQUIVALENCE (DLR,OPMOD(2))                                        INA15000
C                                                                       INA15100
C       28.    OPERAND MODIFIERS                                        INA15200
C                                                                       INA15300
      COMMON/SUBLST/SUBLST                                              INA15400
      DIMENSION SUBLST(136),APTXXX(120)                                 INA15500
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            INA15600
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 INA15700
C                                                                       INA15800
C       29.    CLASS CODE MODULI                                        INA15900
C                                                                       INA16000
      COMMON/MODULI/MODULI                                              INA16100
      DIMENSION MODULI(2)                                               INA16200
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    INA16300
      EQUIVALENCE (MODULO,MODULI(1))                                    INA16400
C                                                                       INA16500
C       41.    NUMBER TABLE OVERFLOW VARIABLES                          INA16600
C                                                                       INA16700
      COMMON/NTBL/NTBL                                                  INA16800
      DIMENSION NTBL(6)                                                 INA16900
C NLAST:       LAST NEW BLOCK NUMBER OF NUMBER TABLE ON THE EXTERN FILE INA17000
      EQUIVALENCE (NLAST,NTBL(4))                                       INA17100
C*                                                                      INA17200
C     PURPOSE       TO VALIDATE THE FORMAT OF PATTERN DEFINITION        INA17300
C                   STATEMENTS AND GENERATE APPROPRIATE INTER-          INA17400
C                   MEDIATE LANGUAGE                                    INA17500
C                                                                       INA17600
C     RESTRICTIONS  CURRENTLY CANNOT HANDLE NESTED DEFINITIONS          INA17700
C                   OR SUBSTITUTION OF MACRO VARIABLES FOR              INA17800
C                   MINOR WORDS.                                        INA17900
C                                                                       INA18000
      DIMENSION BIGSTK(20)                                              INA18100
      LOGICAL FOULUP,INCLST                                             INA18200
      CHARACTER*6 HDOLSC                                                INA18300
      CHARACTER*4 HPERI,XLANK                                           INA18350
      DIMENSION ARGS(5)                                                 INA18360
      CHARACTER BUFF*12,DECPT*1                                         INA18370
      DIMENSION KTYPES(12)                                              INA18500
C                   LINEAR    LINEAR    LINEAR    ARC       ARC         INA18600
C                   POINT     POINT     POINT     CIRCLE    CIRCLE      INA18700
C                   POINT     VECTOR    VECTOR    REAL      REAL        INA18800
C                   REAL      REAL      INCR      REAL      CLW,CCLW    INA18900
C                                                 CLW,CCLW  INCR        INA19000
C                                                 REAL                  INA19100
     0DATA KTYPES  /      101,      102,      103,      201,      202,  INA19200
C                                                                       INA19300
C                   GRID      GRID      GRID      RANDOM    PERIM       INA19400
C                   PATERN    PATERN    PATERN    POINT,    PATERN      INA19500
C                   PATERN    VECTOR    VECTOR      PATERN  PATERN      INA19600
C                             REAL      INCR                            INA19700
     1                    301,      302,      303,      401,      501,  INA19800
C                                                                       INA19900
C                   PERIM     PERIM                                     INA20000
C                   PATERN    PATERN                                    INA20100
C                   VECTOR    VECTOR                                    INA20200
C                   REAL      INCR                                      INA20300
     2                    502,      503/                                INA20400
C                                                                       INA20500
      DATA HPERI/'PERI'/, HDOLSC/'$SCRTH'/,XLANK/'    '/                INA20950
      DATA DECPT/'.'/                                                   INA21000
C**                                                                     INA21200
C                                                                       INA21300
C.......                      IF FIRST TIME THROUGH FOR THIS DEFINITION,INA21400
C.......                      DO INITIALIZATIONS                        INA21500
C                                                                       INA21600
      IF (BIGCNT.NE.1) GO TO 100                                        INA21700
C                             INITIALIZE INDEX FOR NEXT BIGSTK ENTRY    INA21800
      BIGNXT=20                                                         INA21900
C                             SET LOCAL FLAG - NO FORMAT ERRORS YET     INA22000
      FOULUP=.FALSE.                                                    INA22100
C                             INITIALIZE WORD COUNT FOR EXTERNAL FORM   INA22200
      NWDS=4                                                            INA22300
C                             SET LOCAL FLAG - NOT PROCESSING INCR LIST INA22400
C                             YET                                       INA22500
      INCLST=.FALSE.                                                    INA22600
C                             MOVE FIRST ARGUMENT INTO BIGSTK           INA22700
      ASSIGN 100 TO IPUSH                                               INA22800
      ERRPT=TOP-3                                                       INA22900
      ELMENT=STACK(1,ERRPT)                                             INA23000
      GO TO 1000                                                        INA23100
C                                                                       INA23200
C.......            BRANCH IF END OF DEFINITION                         INA23300
C                                                                       INA23400
  100 IF(IACT.GE.103) GO TO 200                                         INA23500
C                             IF ERROR HAS ALREADY OCCURRED, SKIP       INA23600
C                             PROCESSING                                INA23700
      IF (FOULUP) GOTO 2020                                             INA23800
C                                                                       INA23900
C.......            PROCESS ELEMENT OF ARGUMENT LIST                    INA24000
C                                                                       INA24100
C                             MOVE LATEST ARGUMENT INTO BIGSTK          INA24200
      ASSIGN 110 TO IPUSH                                               INA24300
      ERRPT=TOP-1                                                       INA24400
      ELMENT=STACK(1,ERRPT)                                             INA24500
      GO TO 1000                                                        INA24600
C                             SEARCH FOR MATCHING PATERN GEOMETRIC      INA24700
C                             PRODUCTION IN BIGSTK.                     INA24800
  110 J=GEOLOC(PATERN)                                                  INA24900
      EPT=10                                                            INA25000
      KSERCH=SEARCH(BIGSTK,20,GEOMTB(J),EPT)                            INA25100
C                             IF ACTION NUMBER=200, NO MATCHING PRODUC- INA25200
C                             TION WAS FOUND.  RETURN FOR MORE OF ARG   INA25300
C                             LIST, UNLES 6 ELEMENTS ARE ACCUMULATED.   INA25400
      IF (KSERCH.LE.11 ) GO TO 120                                      INA25500
      IF (BIGNXT.LT.(2*EPT)) GOTO 1990                                  INA25600
      IF (BIGNXT.GT.8) GOTO 2020                                        INA25700
      GO TO 1990                                                        INA25800
C                             BRANCH IF PROCESSING INCREMENT LIST       INA25900
  120 IF (INCLST) GO TO 170                                             INA26000
C                             DETERMINE TYPE CODE FROM ACTION NUMBER    INA26100
C                             AND FIRST WORD FOLLOWING SLASH            INA26200
      IFIRST=BIGSTK(19)                                                 INA26300
      K=KSERCH                                                          INA26400
      IF(CNAMTB(IFIRST)(1:4).EQ.HPERI)GO TO 1980                        INA26500
      KTYPE=KTYPES(K)                                                   INA26600
C                             SAVE ARGUMENTS FOR CALL TO DEFINITION     INA26700
C                             REDUCTION ROUTINE                         INA26800
      DO 130 I=1,5                                                      INA26900
      J=19-2*I                                                          INA27000
      ARGS(I)=BIGSTK(J)                                                 INA27100
      IF (J.LE.BIGNXT) ARGS(I)=ZEROPT                                   INA27200
  130 CONTINUE                                                          INA27300
C                                                                       INA27400
C.......            TAKE APPROPRIATE BRANCH-                            INA27500
C.......                 FOR RANDOM TYPE, GO PROCESS ARG.               INA27600
C.......                 FOR INCR TYPE, GO SET UP INCR.                 INA27700
C.......                 FOR OTHERS, GO DETERMINE SIZE OF EXTERNAL      INA27800
C.......                 CANONICAL FORM.                                INA27900
C       KTYPE 101  102  103  201  202  301  302  303  401  501  502  503INA28000
     0GO TO (3010,3010,3020,3030,3025,3040,3050,3060, 140,3040,3050,3060INA28100
     1      ),K                                                         INA28200
C                             LINEAR PATERN-INITIAL BLOCK               INA28300
C                                            POINT AND VECTOR           INA28400
 3010 NWDS=NWDS+6                                                       INA28500
C                             INCREMENTS                                INA28600
 3012 INAMTB=BIGSTK(BIGNXT+1)                                           INA28700
      ASSIGN 3015 TO IRET                                               INA28800
      GO TO 4000                                                        INA28900
C                             RETURN, EXPECT END OF DEFINITION          INA29000
 3015 BIGNXT=18                                                         INA29100
      GOTO 2020                                                         INA29200
C                             LINEAR PATERNS- ADD STORAGE FOR INITIAL   INA29300
C                                    BLOCK AND BRANCH TO PROCESS INCR   INA29400
C                                    LIST                               INA29500
 3020 NWDS=NWDS+6                                                       INA29600
      GO TO 150                                                         INA29700
C                             ARC PATERNS- ADD STORAGE FOR INITIAL BLOCKINA29800
C                                    AND BRANCH TO PROCESS INCR LIST    INA29900
 3025 NWDS=NWDS+6                                                       INA30000
      GO TO 150                                                         INA30100
C                             ARC PATERNS-INITIAL BLOCK                 INA30200
 3030 NWDS=NWDS+6                                                       INA30300
C                             BRANCH TO ADD INCREMENTS                  INA30400
      GO TO 3012                                                        INA30500
C                             GRID/PERIM PATERNS-ADD STORAGE FOR TWO    INA30600
C                                                COMPONENT PATERNS      INA30700
 3040 INAMTB=BIGSTK(15)                                                 INA30800
      ASSIGN 3042 TO IRET                                               INA30900
      GO TO 5000                                                        INA31000
 3042 NWDS=NWDS+CANSIZ(1,ICANX)                                         INA31100
 3043 INAMTB=BIGSTK(17)                                                 INA31200
      ASSIGN 3044 TO IRET                                               INA31300
      GO TO 5000                                                        INA31400
 3044 NWDS=NWDS+CANSIZ(1,ICANX)+1                                       INA31500
      GO TO 3015                                                        INA31600
C                             GRID/PERIM PATERNS- ADD STORAGE FOR ONE   INA31700
C                                    COMPONENT PATERN AND ONE INCREMENT INA31800
 3050 INAMTB=BIGSTK(13)                                                 INA31900
      ASSIGN 3052 TO IRET                                               INA32000
      GO TO 4000                                                        INA32100
 3052 GO TO 3043                                                        INA32200
C                             GRID/PERIM PATERNS- ADD STORAGE FOR ONE   INA32300
C                                    COMPONENT PATERN AND BRANCH TO     INA32400
C                                    PROCESS INCREMENT LIST             INA32500
 3060 INAMTB=BIGSTK(17)                                                 INA32600
      ASSIGN 3062 TO IRET                                               INA32700
      GO TO 5000                                                        INA32800
 3062 NWDS=NWDS+12+CANSIZ(1,ICANX)                                      INA32900
      GO TO 150                                                         INA33000
C                                                                       INA33100
C...                PROCESS RANDOM TYPE ARGUMENT                        INA33200
C                                                                       INA33300
C                             IF FIRST TIME THROUGH FOR THIS DEFINITION,INA33400
C                             GENERATE INITIALIZATION CALL TO APT100    INA33500
  140 IF(BIGCNT.NE.1) GO TO 145                                         INA33600
      CALL CALLZZ(APTXXX(73))                                           INA33700
      CALL TWOARG(1,ZERO)                                               INA33800
      CALL TWOARG(1,ZERO)                                               INA33900
      CALL RLSLIN                                                       INA34000
C                             INITIALIZE ARGUMENT COUNTER               INA34100
      IRANDG=0                                                          INA34200
C                             GENERATE CALL TO PRE-PATERN DEFINTION     INA34300
C                             ROUTINE APT 100                           INA34400
  145 CALL CALLZZ(APTXXX(73))                                           INA34500
C                             SET FLAG FOR POINT OR PATERN              INA34600
      IF(BIGSTK(BIGNXT+2).EQ.PMIDTB(POINT)) K=ONE                       INA34700
      IF(BIGSTK(BIGNXT+2).EQ.PMIDTB(PATERN)) K=TWO                      INA34800
      CALL TWOARG(1,K)                                                  INA34900
      CALL ARGCVT(ELMENT)                                               INA35000
      CALL RLSLIN                                                       INA35100
      IF(IFTMP(ELMENT))CALL PUTTMP(MOD(NAMTBL(ELMENT),MODULO))          INA35200
C                             UPDATE EXTERNAL CANONICAL FORM WORD COUNT INA35300
      IF (K.EQ.ONE) GO TO 148                                           INA35400
      INAMTB=BIGSTK(17)                                                 INA35500
      ASSIGN 147 TO IRET                                                INA35600
      GO TO 5000                                                        INA35700
  147 NWDS=NWDS+CANSIZ(1,ICANX)                                         INA35800
      GO TO 149                                                         INA35900
C                                                                       INA36000
  148 NWDS=NWDS+4                                                       INA36100
  149 CONTINUE                                                          INA36200
C                             INCREMENT ARGUMENT COUNTER                INA36300
      IRANDG=IRANDG+1                                                   INA36400
C                             COMPRESS LAST ARG OUT OF BIGSTK           INA36500
      BIGNXT=BIGNXT+2                                                   INA36600
      BIGSTK(BIGNXT)=-1                                                 INA36700
C                             RETURN                                    INA36800
      GOTO 2020                                                         INA36900
C                                                                       INA37000
C...                SET UP FOR INCR LIST PROCESSING                     INA37100
C                                                                       INA37200
C                             SET FLAG                                  INA37300
  150 INCLST=.TRUE.                                                     INA37400
C                             IF NOT ALREADY DONE, DECLARE ARRAY OF     INA37500
C                             SCRATCH STORAGE IN PART PROGRM, OF LENGTH INA37600
C                             102 AND NAME $SCRTH                       INA37700
      KSCRTH=NAME(HDOLSC)                                               INA37800
      IF (NAMTBL(KSCRTH).NE.0) GO TO 160                                INA37900
      NAMTBL(KSCRTH)=VBL(1)                                             INA38000
      CALL RESRVZ(KSCRTH,0,102,1)                                       INA38100
C                             SET PROPER ARG TO SCRATCH STORAGE ARRAY   INA38200
  160 IARG=(20-BIGNXT)/2                                                INA38300
      ARGS(IARG)=KSCRTH                                                 INA38400
C                             INITIALIZE COUNTER FOR INCR LIST          INA38500
      INCCNT=0                                                          INA38600
C                             PUT INCR AT TOP OF BIGSTK                 INA38700
      BIGSTK(20)=BIGSTK(BIGNXT+2)                                       INA38800
      BIGSTK(18)=-1                                                     INA38900
      BIGNXT=18                                                         INA39000
C                             RETURN                                    INA39100
      GOTO 2020                                                         INA39200
C                                                                       INA39300
C......             PROCESS TERM OF INCR LIST                           INA39400
C                                                                       INA39500
C                             BRANCH IF REAL-AT-REAL TYPE               INA39600
  170 IF (KSERCH.EQ.11) GO TO 180                                       INA39700
C                             BRANCH IF EXCESS INCR ARGS                INA39800
      IF(INCCNT+1.GE.102)GO TO 195                                      INA39900
C                             GENERATE CODE TO MOVE FIRST REAL ARG      INA40000
C                               MOVE   HDOLSC(INCCNT+1),ARG             INA40100
      CALL OPCODE(MOVE)                                                 INA40200
      CALL TWOARG(-(INCCNT+2),KSCRTH)                                   INA40300
      CALL ARGCVT(BIGSTK(17))                                           INA40400
      CALL RLSLIN                                                       INA40500
C                             COMPRESS BIGSTK                           INA40600
      BIGSTK(18)=BIGSTK(16)                                             INA40700
      BIGSTK(17)=BIGSTK(15)                                             INA40800
      BIGNXT=16                                                         INA40900
C                             UPDATE INCR TERM COUNTER                  INA41000
      INCCNT=INCCNT+1                                                   INA41100
C                             UPDATE EXTERNAL CANONICAL FORM WORD COUNT INA41200
      NWDS=NWDS+1                                                       INA41300
C                             RETURN                                    INA41400
      GOTO 2020                                                         INA41500
C                             BRANCH IF EXCESS INCR ARGS                INA41600
  180 IF(INCCNT+3.GE.102)GO TO 195                                      INA41700
C                             GENERATE CODE TO MOVE ARGS                INA41800
      CALL OPCODE(MOVE)                                                 INA41900
      CALL TWOARG(-(INCCNT+2),KSCRTH)                                   INA42000
      DO 190 I=1,3                                                      INA42100
      J=19-2*I                                                          INA42200
      CALL ARGCVT(BIGSTK(J))                                            INA42300
  190 CONTINUE                                                          INA42400
      CALL RLSLIN                                                       INA42500
C                             UPDATE EXTERNAL CANONICAL FORM WORD COUNT INA42600
      INAMTB=BIGSTK(17)                                                 INA42700
      ASSIGN 197 TO IRET                                                INA42800
      GO TO 4000                                                        INA42900
  197 CONTINUE                                                          INA43000
C                             COMPRESS BIGSTK                           INA43100
      BIGNXT=18                                                         INA43200
      BIGSTK(18)=-1                                                     INA43300
C                             UPDATE INCR TERM COUNTER                  INA43400
      INCCNT=INCCNT+3                                                   INA43500
C                             RETURN                                    INA43600
      GOTO 2020                                                         INA43700
C                             ERROR - EXCESS INCR ARGS                  INA43800
  195 IERROR= 2041                                                      INA43900
      GO TO 2000                                                        INA44000
C                                                                       INA44100
C......             PROCESS END OF DEFINITION                           INA44200
C                                                                       INA44300
C                             FIND NAME TABLE INDEX OF RESULT.          INA44400
C                             IF AN UNNAMED NESTED DEF, SET UP TEMPORARYINA44500
  200 IF (IACT.NE.105) GO TO 210                                        INA44600
      RESULT=GETTMP(PATERN)                                             INA44700
      GO TO 222                                                         INA44800
C                             IF CLASS NOT PERMANENTLY SET, DEFINE NOW  INA44900
  210 RESULT=STACK(1,TOP-5)                                             INA45000
      ICLASS=MODULO*(NAMTBL(RESULT)/MODULO)                             INA45100
      IF (ICLASS.EQ.VBL(1) .OR. ICLASS.EQ.TEMP(1)) GOTO 220             INA45200
      NAMTBL(RESULT)=VBL(1)+PATERN                                      INA45300
      CALL RESRVZ(RESULT,PATERN,2,1)                                    INA45400
C...                          IF THIS VARIABLE HAS BEEN PREVIOUSLY      INA45500
C...                          DEFINED WITH ANOTHER MODE, ISSUE          INA45600
C...                          ERROR AND TERMINATE PROCESSING            INA45700
  220 IF(MODE(RESULT).EQ.PATERN) GO TO 221                              INA45800
      IERROR=1001                                                       INA45900
      ERRPT=TOP-6                                                       INA46000
      GOTO 2045                                                         INA46100
C...                          IF THIS VARIABLE HAS BEEN PREVIOUSLY      INA46200
C...                          DEFINED WITH THE SAME MODE, ISSUE         INA46300
C...                          WARNING AND CONTINUE PROCESSING           INA46400
  221 IF(ICLASS.EQ.VBL(1).AND.INTMED.EQ.0)CALL ALARM(50,TOP-5,4,        INA46500
     * 'INPAT   ')                                                      INA46600
C                             IF WE WERE PROCESSING AN INCR LIST, CHECK INA46700
C                             FORMAT OF RESIDUE IN BIGSTK, AND MOVE     INA46800
C                             FINAL ARG IF NECESSARY.                   INA46900
  222 IF(.NOT.INCLST)GO TO 230                                          INA47000
      IF (BIGNXT.EQ.18) GO TO 225                                       INA47100
      IF (BIGNXT.NE.16 .OR. BIGSTK(18).NE.PMIDTB(REAL)) GO TO 2030      INA47200
      CALL OPCODE(MOVE)                                                 INA47300
      CALL TWOARG(-(INCCNT+2),KSCRTH)                                   INA47400
      CALL ARGCVT(BIGSTK(17))                                           INA47500
      CALL RLSLIN                                                       INA47600
      INCCNT=INCCNT+1                                                   INA47700
C                             UPDATE EXTERNAL CANONICAL FORM WORD COUNT INA47800
      NWDS=NWDS+1                                                       INA47900
      BIGNXT=18                                                         INA48000
C                             GENERATE CODE TO STORE INCR LIST COUNT    INA48100
  225 BUFF=XLANK                                                        INA48420
      CALL BINBCD(INCCNT,BUFF,ICNT)                                     INA48500
      BUFF (ICNT+1:ICNT+1)=DECPT                                        INA48600
      INUMB=NUMB(BUFF)+NAMMAX                                           INA48700
      CALL OPCODE(MOVE)                                                 INA48800
      CALL TWOARG(-1,KSCRTH)                                            INA48900
      CALL ARGCVT(INUMB)                                                INA49000
      CALL RLSLIN                                                       INA49100
C                             IF RANDOM TYPE, SET ARG1 TO THE NUMBER    INA49200
C                             OF ARGUMENTS                              INA49300
  230 IF (KTYPE.NE.401) GO TO 250                                       INA49400
      BUFF=XLANK                                                        INA49710
      CALL BINBCD (IRANDG,BUFF,ICNT)                                    INA49800
      BUFF(ICNT+1:ICNT+1)=DECPT                                         INA49900
      INUMB=NUMB(BUFF)+NAMMAX                                           INA50000
      ARGS(1)=INUMB                                                     INA50100
      DO 235 I=2,5                                                      INA50200
      ARGS(I)=ZEROPT                                                    INA50300
  235 CONTINUE                                                          INA50400
C                             VERIFY BIGSTK CLEANED UP AT THIS POINT    INA50500
  250 IF (BIGNXT.NE.18) GO TO 2030                                      INA50600
C                             IF NO ERRORS ENCOUNTERED PREVIOUSLY,      INA50700
C                             GENERATE CALL TO PATERN DEFINITION ROUTINEINA50800
      IF (FOULUP) GO TO 2050                                            INA50900
      CALL CALLZZ(APTXXX(100))                                          INA51000
      CALL TWOARG(5,1)                                                  INA51100
      CALL ARGCVT(RESULT)                                               INA51200
      CALL TWOARG(5,KTYPE)                                              INA51300
      DO 310 I=1,5                                                      INA51400
      CALL ARGCVT(ARGS(I))                                              INA51500
      K=ARGS(I)                                                         INA51600
      IF(IFTMP(K))CALL PUTTMP(MOD(NAMTBL(K),MODULO))                    INA51700
  310 CONTINUE                                                          INA51800
      CALL RLSLIN                                                       INA51900
C                             STORE THE NUMBER OF WORDS IN THE EXTERNAL INA52000
C                             CANONICAL FORM IN CANSIZ.                 INA52100
      IF (NWDS.LE.0) NWDS=200                                           INA52200
      INAMTB=RESULT                                                     INA52300
      ASSIGN 311 TO IRET                                                INA52400
      GO TO 5000                                                        INA52500
  311 CANSIZ(1,ICANX)=NWDS                                              INA52600
      CANSIZ(2,ICANX)=RESULT                                            INA52700
C                             UPDATE SIZES OF TWO LARGEST EXTERNAL FORMSINA52800
      IF(NWDS.LE.(IABS(MAXSIZ(2))))GO TO 315                            INA52900
      IF(NWDS.LE.(IABS(MAXSIZ(1))))GO TO 312                            INA53000
      MAXSIZ(2)=MAXSIZ(1)                                               INA53100
      MAXSIZ(1)=NWDS                                                    INA53200
      GO TO 315                                                         INA53300
  312 MAXSIZ(2)=NWDS                                                    INA53400
C                                                                       INA53500
C                             ADJUST THE STACK AND RETURN               INA53600
  315 IF (IACT-104) 335,320,340                                         INA53700
  320 TOP=TOP-6                                                         INA53800
  330 STACK(1,TOP) = RESULT                                             INA53900
      K=NAMTBL(RESULT)/MODULO                                           INA54000
      STACK(2,TOP) = META(K)                                            INA54100
  335 RETURN                                                            INA54200
  340 TOP=TOP-4                                                         INA54300
      GO TO 330                                                         INA54400
C                                                                       INA54500
C                                                                       INA54600
C                                                                       INA54700
C-----------------------------------------------------------------------INA54800
C                                                                       INA54900
C              PURPOSE   TO ADD ELEMENT TO BIGSTK                       INA55000
C                                       FIND CORRECT INDEX TO USE WHEN  INA55100
C                                       ACCESSING TABLE OF INTERNAL BIT INA55200
C                                       REPRESENTATIONS FOR GEOMETRIC   INA55300
C                                       PRODUCTIONS.                    INA55400
C                                       IF NOT IN NAME PORTION, INDEX ISINA55500
C                                       MODE REAL                       INA55600
C                                                                       INA55700
 1000 IF(ELMENT.GT.NAMMAX) GO TO 1030                                   INA55800
      IERROR=1008                                                       INA55900
C                                       CLASS                           INA56000
      ICLASS=MODULO*(NAMTBL(ELMENT)/MODULO)                             INA56100
C                                       MODE                            INA56200
      IMODE = NAMTBL(ELMENT)-ICLASS                                     INA56300
C                                       STRIP OFF INDIRECT ADDRESS      INA56400
C                                       INCREMENT IF PRESENT            INA56500
      IF(IMODE.GE.500) IMODE=IMODE-500                                  INA56600
      IF(IMODE.EQ.0) GOTO 2010                                          INA56700
      IF (ICLASS.NE.IDENT(1)) GO TO 1025                                INA56800
      ICLASS=PERMID(1)                                                  INA56900
      NAMTBL(ELMENT)=NAMTBL(ELMENT)-IDENT(1)+PERMID(1)                  INA57000
C                                       ADD PERMANENT IDENTIFIER INCRE- INA57100
C                                       MENT IF APPROPRIATE             INA57200
 1025 IF (ICLASS.EQ.PERMID(1)) IMODE=IMODE+50                           INA57300
     0 IF (ICLASS.EQ.VBL(1)    .OR.                                     INA57400
     1    ICLASS.EQ.PERMID(1).OR.                                       INA57500
     2    ICLASS.EQ.TEMP(1)  ) GO TO 1050                               INA57600
      IF (ICLASS.NE.NUMBER(1)) GO TO 2010                               INA57700
 1030 IMODE=REAL                                                        INA57800
C                                                                       INA57900
C...                          STORE INTERNAL REPRESENTATION IN BIGSTK   INA58000
C                                                                       INA58100
 1050 BIGSTK(BIGNXT)=PMIDTB(IMODE)                                      INA58200
C                             STORE NAMTABL INDEX                       INA58300
      BIGSTK(BIGNXT-1)=ELMENT                                           INA58400
C                                       RESET STACK POINTER             INA58500
      BIGNXT=BIGNXT-2                                                   INA58600
C                                       STORE DUMMY VALUE TO TERMINATE  INA58700
C                                       SCANS                           INA58800
      BIGSTK(BIGNXT)=-1                                                 INA58900
C                                       RETURN                          INA59000
      GO TO IPUSH,(100,110)                                             INA59100
C                                                                       INA59200
C...                          INVALID FORMAT- ISSUE DIAGNOSTIC AND SET  INA59300
C...                          LOCAL FLAG                                INA59400
C                                                                       INA59500
 1980 ERRPT=TOP-3                                                       INA59600
 1990 IERROR=1041                                                       INA59700
C                                                                       INA59800
C......             ERROR- ISSUE DIAGNOSTIC, SET LOCAL FLAG, AND RETURN INA59900
C                                                                       INA60000
 2000 IF(FOULUP)GOTO 2020                                               INA60100
      FOULUP=.TRUE.                                                     INA60200
 2010 CALL ALARM(IERROR,ERRPT,8,'INPAT   ')                             INA60300
C                             COMPRESS LAST ARGUMENT AND PRECEEDING     INA60400
C                             DELIMITER FROM STACK.                     INA60500
 2020 STACK(1,TOP-2)=STACK(1,TOP)                                       INA60600
      STACK(2,TOP-2)=STACK(2,TOP)                                       INA60700
      TOP=TOP-2                                                         INA60800
      RETURN                                                            INA60900
C                                                                       INA61000
C...                FINAL ERROR PROCESSING, GENERATE CALL TO APT094     INA61100
C...                TO UNDEFINE THE SUFACE                              INA61200
C                                                                       INA61300
 2030 ERRPT=TOP+1                                                       INA61400
      STACK(1,TOP)=COMMA(2)                                             INA61500
 2040 IF(FOULUP)GOTO 2050                                               INA61600
      IERROR=1041                                                       INA61700
 2045 TOP=TOP+1                                                         INA61800
      CALL ALARM(IERROR,ERRPT,8,'INPAT   ')                             INA61900
      TOP=TOP-1                                                         INA62000
 2050 CALL CALLZZ(APTXXX(68))                                           INA62100
      CALL TWOARG(DLR,FOUR)                                             INA62200
      CALL ARGCVT(RESULT)                                               INA62300
      CALL TWOARG(0,DOTTAB)                                             INA62400
      CALL RLSLIN                                                       INA62500
      GO TO 315                                                         INA62600
C-----------------------------------------------------------------------INA62700
C                                                                       INA62800
C     PURPOSE  TO COMPUTE NUMBER OF INCREMENTS STORED WITH CANONICAL    INA62900
C              FORM OF A PATERN, ARC OR LINEAR, AND ADD TO NWDS         INA63000
C                                                                       INA63100
C     ARGUMENTS     INAMTB    NAMTBL INDEX OF FINAL ARGUMENT OF PATERN  INA63200
C                             DEFINITION                                INA63300
C                                                                       INA63400
C                             IF LAST ARG NOT A NUMERIC, FLAG BY SETTINGINA63500
C                                NWDS-10000. LATER A STANDARD MAX INSERTINA63600
 4000 IF(INAMTB.LE.NAMMAX) GO TO 4010                                   INA63700
C.... DECREMENT BY NAMMAX FOR ADDRESS IN NUMBER TABLE, CNUMTB           INA63710
      INAMTB=INAMTB-NAMMAX                                              INA63720
      IF(NLAST.GT.0)CALL MCXTRN(5,INAMTB,IDUMMY)                        INA63800
      CALL BCDBIN(CNUMTB(INAMTB),I,IDUM)                                INA63900
      GO TO 4020                                                        INA64000
C                                                                       INA64100
 4010 I=-10000-NWDS                                                     INA64200
 4020 NWDS=NWDS+I                                                       INA64300
      GO TO IRET,(3015,3052,197)                                        INA64400
C-----------------------------------------------------------------------INA64500
C                                                                       INA64600
C     PURPOSE  TO LOOK UP A PATERN IN THE CANSIZ TABLE, RETURN THE INDEXINA64700
C              OF THE LOCATION WHERE IT IS FOUND (OR WILL BE PLACED).   INA64800
C                                                                       INA64900
C     ARGUMENTS     INAMTB    NAMTBL INDEX OF THE PATERN                INA65000
C                                                                       INA65100
 5000 ICANX=1+MOD(INAMTB,CANTOP)                                        INA65200
      DO 5010 I=1,CANTOP                                                INA65300
      IF (CANSIZ(1,ICANX).EQ.0 .OR. CANSIZ(2,ICANX).EQ.INAMTB) GOTO 5020INA65400
      ICANX=1+MOD(ICANX,CANTOP)                                         INA65500
 5010 CONTINUE                                                          INA65600
C                             TABLE FULL, ISSUE DIAGNOSTIC              INA65700
      IERROR=53                                                         INA65800
      ERRPT=TOP-5                                                       INA65900
      GO TO 2010                                                        INA66000
 5020 GO TO IRET,(3042,3044,3060,147,311,3062)                          INA66100
      END                                                               INA66200
**** SOURCE FILE : M0006640.W01   ***
*
C                                                                       INP00100
C              FORTRAN SUBROUTINE INPUT                                 INP00200
C                                                                       INP00300
C LINKAGE      SUBROUTINE INPUT                                         INP00400
C                                                                       INP00500
C          SUBSIDIARIES                  CALLED BY                      INP00600
C          TYPE          ENTRY           TYPE          ENTRY            INP00700
C          SUBROUTINE    ALARM           SUBROUTINE    RECOG            INP00800
C          SUBROUTINE    BOOLIF                                         INP00900
C          SUBROUTINE    CALMCX                                         INP01000
C          SUBROUTINE    HELP                                           INP01100
C          SUBROUTINE    MACLBL                                         INP01400
C          SUBROUTINE    MACTAB                                         INP01500
C          SUBROUTINE    MATCH                                          INP01600
C          SUBROUTINE    MCXTRN                                         INP01700
C          INTEGER FCT.  NAME                                           INP01800
C          SUBROUTINE    PATH                                           INP01900
C          SUBROUTINE    READ                                           INP02000
C                                                                       INP02100
      SUBROUTINE INPUT                                                  INP02200
C                                                                       INP02300
      IMPLICIT INTEGER (A-Z)                                            INP02400
C                                                                       INP02500
C                                                                       INP02600
C        1.    NAME TABLE AND TABLE LIMITS                              INP02700
C                                                                       INP02800
      INCLUDE 'NAMETB.INC'                                              INP02910
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                INP02950
C CNAMTB:      NAME TABLE OR DICTIONARY                                 INP03050
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     INP03100
C                                                                       INP03500
C        2.    STACK AND POINTER STORAGE                                INP03600
C                                                                       INP03700
      COMMON/STKLST/STKLST                                              INP03800
      DIMENSION STKLST(300),STACK(2,99),ARGSTK(99)                      INP03900
C TOP:         POINTER TO LAST STACK ENTRY                              INP04000
      EQUIVALENCE (TOP,STKLST(1))                                       INP04100
C ARGTOP:      POINTER TO LAST ARGSTK ENTRY                             INP04200
      EQUIVALENCE (ARGTOP,STKLST(2))                                    INP04300
C STACK:       WORKING STACK                                            INP04400
      EQUIVALENCE (STACK(1,1),STKLST(4))                                INP04500
C ARGSTK:      ARGUMENT STACK                                           INP04600
      EQUIVALENCE (ARGSTK(1),STKLST(202))                               INP04700
C                                                                       INP04800
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      INP04900
C                                                                       INP05000
      COMMON/CODE/CODE                                                  INP05100
      DIMENSION CODE(150),RTERM(2),SLASH(2),NUMBER(2),LABEL(2),IMPLAB(  INP05200
     *          2),MACNAM(2),MCLTRM(2)                                  INP05300
C RTERM:       (1)=CODE CLASS  4000,(2)=NAMTBL INDEX OF 'RTERM '        INP05400
      EQUIVALENCE (RTERM(1),CODE(7))                                    INP05500
C SLASH:       (1)=CODE CLASS  5000,(2)=NAMTBL INDEX OF '/     '        INP05600
      EQUIVALENCE (SLASH(1),CODE(9))                                    INP05700
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        INP05800
      EQUIVALENCE (NUMBER(1),CODE(27))                                  INP05900
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        INP06000
      EQUIVALENCE (LABEL(1),CODE(43))                                   INP06100
C IMPLAB:      (1)=CODE CLASS 23000,(2)=NAMTBL INDEX OF 'IMPLAB'        INP06200
      EQUIVALENCE (IMPLAB(1),CODE(45))                                  INP06300
C MACNAM:      (1)=CODE CLASS 34000,(2)=NAMTBL INDEX OF 'MACNAM'        INP06400
      EQUIVALENCE (MACNAM(1),CODE(67))                                  INP06500
C MCLTRM:      (1)=CODE CLASS 38000,(2)=NAMTBL INDEX OF 'MCLTRM'        INP06600
      EQUIVALENCE (MCLTRM(1),CODE(75))                                  INP06700
C                                                                       INP06800
C        4.    PRODUCTION TABLE                                         INP06900
C                                                                       INP07000
      COMMON/SRCTBL/SRCTBL                                              INP07100
      DIMENSION SRCTBL(502),META(50)                                    INP07200
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   INP07300
      EQUIVALENCE (META(1),SRCTBL(3))                                   INP07400
C                                                                       INP07500
C        5.    PROGRAM CONTROL FLAGS                                    INP07600
C                                                                       INP07700
      COMMON/FLAGS/FLAGS                                                INP07800
      LOGICAL ENDFLG,NEWSTM                                             INP07900
      DIMENSION FLAGS(4)                                                INP08000
C ENDFLG:      TRUE WHEN  SOURCE STATEMENT TOTALLY IN STACK             INP08100
      EQUIVALENCE (ENDFLG,FLAGS(1))                                     INP08200
C NEWSTM:      TRUE WHEN NEXT SOURCE STATEMENT REQUESTED FOR PROCESS    INP08300
      EQUIVALENCE (NEWSTM,FLAGS(2))                                     INP08400
C                                                                       INP08500
C        7.    STRING STORAGE AREA                                      INP08600
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT   INP08700
      COMMON/INPTR/CNT                                                  INP08800
C                                                                       INP08900
C       22.    MACRO PROCESSING VARIABLES                               INP09000
C                                                                       INP09100
      COMMON/MACXX1/MACXX1                                              INP09200
      LOGICAL CALLON,CALLMV,MACRED,FINMAC,ENTRY,SHOULD                  INP09300
      DIMENSION MACXX1(71)                                              INP09400
C MCHSTP:      POINTER TO LAST MACHST ENTRY                             INP09500
      EQUIVALENCE (MCHSTP,MACXX1(3))                                    INP09600
C MCSAVP:      PRESENT NEST LEVEL DURING MACRO PROCESSING               INP09700
      EQUIVALENCE (MCSAVP,MACXX1(5))                                    INP09800
C CALLON:      TRUE AT A NESTED CALL DURING INTERMED. MACRO PROCESSING  INP09900
      EQUIVALENCE (CALLON,MACXX1(10))                                   INP10000
C CALLMV:      TRUE IF A CALL/MACRO VARIABLE STATEMENT IS ENCOUNTERED   INP10100
      EQUIVALENCE (CALLMV,MACXX1(11))                                   INP10200
C MVSEG:       CONTAINS POSITION NUMBER OF MACRO VBL IF CALLMV IS TRUE  INP10300
      EQUIVALENCE (MVSEG,MACXX1(12))                                    INP10400
C CALLPT:      MACTXT INDEX OF CURRENT CALL STATEMENT                   INP10500
      EQUIVALENCE (CALLPT,MACXX1(13))                                   INP10600
C TEXTST:      POINTER TO MCBUFF OF MACRO TEXT WORD BEING PROCESSED     INP10700
      EQUIVALENCE (TEXTST,MACXX1(15))                                   INP10800
C MVPNT:       CONTAINS POINTER-1 OF FIRST MACRO VARIABLE VBLSAV        INP10900
      EQUIVALENCE (MVPNT,MACXX1(16))                                    INP11000
C MACRED:      SET TRUE TO INDICATE INPUT FROM MCBUFF TABLE             INP11100
      EQUIVALENCE (MACRED,MACXX1(18))                                   INP11200
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        INP11300
      EQUIVALENCE (INTMED,MACXX1(22))                                   INP11400
C FINMAC:      TRUE IF SECOND FINAL PASS OF MACRO PROCESSING            INP11500
      EQUIVALENCE (FINMAC,MACXX1(24))                                   INP11600
C WAY:         INDICATES TYPE OF MACRO PROCESSING                       INP11700
      EQUIVALENCE (WAY,MACXX1(26))                                      INP11800
C MHSTDM:      CONTAINS DIMENSION OF ARRAY MACHST                       INP11900
      EQUIVALENCE (MHSTDM,MACXX1(33))                                   INP12000
C ENTRY:       FALSE ON FIRST ENTRY TO MATCH FOR A MACRO EXPRESSION     INP12100
      EQUIVALENCE (ENTRY,MACXX1(40))                                    INP12200
C MCSTRT:      INDEX IN MACSPD OF CURRENT CALL BEING EXAMINED           INP12300
      EQUIVALENCE (MCSTRT,MACXX1(43))                                   INP12400
C MCSRCH:      AT FINAL MACRO PRECESSING MACDF1 POINTER                 INP12500
      EQUIVALENCE (MCSRCH,MACXX1(59))                                   INP12600
C NUMARG:      NUMBER OF MACRO VARIABLES+1 FOR CURRENT MACRO            INP12700
      EQUIVALENCE (NUMARG,MACXX1(61))                                   INP12800
C SHOULD:      MACRO INDICATOR. NORMALLY FALSE                          INP12900
      EQUIVALENCE (SHOULD,MACXX1(70))                                   INP13000
C                                                                       INP13100
C       24.    MACRO PROCESSING ARRAYS                                  INP13200
C                                                                       INP13300
      COMMON/MACXX3/MACXX3                                              INP13400
      DIMENSION MACXX3(2630),MACDF1(400),MACDF2(400),MACHST(1800),MACSV1INP13500
     *          (10)                                                    INP13600
C MACDF1:      STORES MACRO NAME AND ALL MACRO VBL NAMTBL POINTERS      INP13700
      EQUIVALENCE (MACDF1(1),MACXX3(1))                                 INP13800
C MACDF2:      STORES NORMAL VALUES FOR ALL MACRO VARIABLES             INP13900
      EQUIVALENCE (MACDF2(1),MACXX3(401))                               INP14000
C MACHST:      MACRO CALL HISTORY TABLE                                 INP14100
      EQUIVALENCE (MACHST(1),MACXX3(801))                               INP14200
C MACSV1:      CONTAINS MACRO NEST LEVEL INFORMATIONS                   INP14300
      EQUIVALENCE (MACSV1(1),MACXX3(2601))                              INP14400
C                                                                       INP14500
C       25.    MACRO PROCESSING ARRAYS                                  INP14600
C                                                                       INP14700
      COMMON/MACXX6/MACXX6                                              INP14800
      DIMENSION MACXX6(1300),MACTBL(400),MACSPD(1300),VBLSAV(900)       INP14900
C MACTBL:      NAMTBL POINTERS OF THE ASSIGNED VALUES FOR MACRO CALL    INP15000
      EQUIVALENCE (MACTBL(1),MACXX6(1))                                 INP15100
C MACSPD:      NAMTBL POINTERS OF THE ASSIGNED VALUES FOR MACRO CALL    INP15200
      EQUIVALENCE (MACSPD(1),MACXX6(1))                                 INP15300
C VBLSAV:      SAVES MACRO VBL ASSIGNED VALUES DURING INTERMED. PROCESS INP15400
      EQUIVALENCE (VBLSAV(1),MACXX6(401))                               INP15500
C                                                                       INP15600
C       29.    CLASS CODE MODULI                                        INP15700
C                                                                       INP15800
      COMMON/MODULI/MODULI                                              INP15900
      DIMENSION MODULI(2)                                               INP16000
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    INP16100
      EQUIVALENCE (MODULO,MODULI(1))                                    INP16200
C                                                                       INP16300
C       36.    SYSTEM MACRO AND SEGMENT READ VARIABLES                  INP16400
C                                                                       INP16500
      COMMON/MACSEG/MACSEG                                              INP16600
      LOGICAL LMRSTR                                                    INP16700
      DIMENSION MACSEG(6)                                               INP16800
C LMRSTR:      FLAG ON STARTS READING IN A SYSTEM MACRO                 INP16900
      EQUIVALENCE (LMRSTR,MACSEG(4))                                    INP17000
C                                                                       INP17900
C       43.    DO LOOP CONTROL VALUES                                   INP18000
C                                                                       INP18100
      COMMON/DOLOOP/DOLOOP                                              INP18200
      LOGICAL DLRFLG                                                    INP18300
      DIMENSION DOLOOP(8)                                               INP18400
C DLRFLG:      FLAG IS ON WHEN CONTINUATION CARD EXPECTED               INP18700
      EQUIVALENCE (DLRFLG,DOLOOP(8))                                    INP18800
C                                                                       INP18900
C       44.    ERROR POSITION TABLE                                     INP19000
C                                                                       INP19100
      COMMON/ERRPOS/ERRPOS                                              INP19200
      INTEGER ERRPOS,ERRPNT,ESTACK,ERGSTK                               INP19300
      DIMENSION ERRPOS(302),ERRPNT(100),ESTACK(100),ERGSTK(100)         INP19400
C ERRPNT:      CONTAINS POINTERS TO INPUT STATEMENT TEXT POSITIONS      INP19500
      EQUIVALENCE (ERRPNT(1),ERRPOS(3))                                 INP19600
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    INP19700
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               INP19800
C ERGSTK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN ARGSTK   INP19900
      EQUIVALENCE (ERGSTK(1),ERRPOS(203))                               INP20000
C*                                                                      INP20100
C PURPOSE      TO PLACE THE NEXT CHARACTER OR WORD FROM                 INP20200
C              THE INPUT STREAM INTO THE WORKING STACK                  INP20300
C              (STACK) AND TO HANDLE THE PROCESSING OF                  INP20400
C              CALL STATEMENTS IMBEDDED IN MACROS.                      INP20500
C                                                                       INP20600
C NOTES        1.  MACRED=.FALSE. IF SINGLE CHARACTERS                  INP20700
C                  ARE SELECTED FROM THE SOURCE INPUT                   INP20800
C                  FILE.                                                INP20900
C                  MACRED=.TRUE. IF SINGLE WORDS ARE                    INP21000
C                  SELECTED FROM THE MACTXT TABLE, AN                   INP21100
C                  INTERNAL FILE CONTAINING MACRO TEXT.                 INP21200
C              2.  IT IS ASSUMED THAT THE CHARACTER POR-                INP21300
C                  TION OF THE NAME TABLE (NAMTBL) IS                   INP21400
C                  ARRANGED SO THAT THE VALUE OF EACH                   INP21500
C                  CHARACTER IS EQUAL TO ONE LESS THAN ITS              INP21600
C                  INDEX IN THE NAME TABLE (NAMTBL).                    INP21700
C                                                                       INP21800
      DIMENSION INCHAR(80)                                              INP21900
      CHARACTER NCALL*6                                                 INP22110
      LOGICAL ERRFLG                                                    INP22115
      DATA NCALL/'CALL  '/,ERRFLG/.FALSE./                              INP22150
C**                                                                     INP22200
C                                                                       INP23400
C...     BRANCH IF MACRO TEXT REQUIRED.                                 INP23500
C                                                                       INP23600
    5 IF(MACRED)GO TO 400                                               INP23700
C                                                                       INP23800
      IF((.NOT.ENDFLG).AND.(.NOT.LMRSTR))GO TO 100                      INP23900
   10 CALL READ (INCHAR)                                                INP24000
C                                                                       INP24100
C...               FETCH CHARACTER CODE                                 INP24200
C                                                                       INP24300
  100 CNT = CNT+1                                                       INP24400
      II=INCHAR(CNT)                                                    INP24500
      ESTACK(TOP+1)=ERRPNT(CNT)                                         INP24600
  150 ENDFLG = .FALSE.                                                  INP24700
      IF(II.GT.NAMMAX)GO TO 160                                         INP24800
      IF(II.NE.0)GO TO 170                                              INP24900
C                                                                       INP25000
C...               IGNORE INVALID CHARACTER                             INP25100
C                                                                       INP25200
      CALL ALARM(1,TOP+1,8,'INPUT   ')                                  INP25300
      GO  TO  100                                                       INP25400
C                                                                       INP25500
  160 ICROD=NUMBER(1)                                                   INP25600
      GO TO 300                                                         INP25700
  170 IF(II.LT.0)GO TO 300                                              INP25800
      ICROD=NAMTBL(II)                                                  INP25900
      IF(ICROD.NE.RTERM(1))GOTO 300                                     INP26000
      ENDFLG=.TRUE.                                                     INP26100
      ESTACK(TOP+1)=ESTACK(TOP)                                         INP26200
C                                                                       INP26300
C...               PLACE CHARACTER IN STACK                             INP26400
C                                                                       INP26500
  300 TOP = TOP +1                                                      INP26600
      IF (TOP-100) 320,310,315                                          INP26700
  310 IF (.NOT.ERRFLG)CALL ALARM(1028,99,8,'INPUT   ')                  INP26800
      ERRFLG=.TRUE.                                                     INP26805
  315 TOP=99                                                            INP26810
      IF( ENDFLG) GOTO 318                                              INP26820
      IF (DLRFLG) GOTO 10                                               INP26830
      IF (.NOT.MACRED) GOTO 317                                         INP26840
  316 TEXTST=TEXTST+1                                                   INP26850
      CALL MCXTRN(2,TEXTST,II)                                          INP26860
      IF (II.NE.RTERM(2)) GOTO 316                                      INP26870
  317 ICROD = RTERM(1)                                                  INP26880
      II = RTERM(2)                                                     INP26890
      ENDFLG=.TRUE.                                                     INP26900
  318 TOP=2                                                             INP27000
  320 STACK(1,TOP) = II                                                 INP27100
      IF(II.LT.0)GOTO 355                                               INP27200
      ICROD = ICROD/MODULO                                              INP27300
      STACK(2,TOP) = META(ICROD)                                        INP27400
  350 RETURN                                                            INP27500
  355 STACK(2,TOP)=0                                                    INP27600
      GOTO 350                                                          INP27700
  400 TEXTST = TEXTST+1                                                 INP27800
      CALL MCXTRN(2,TEXTST,MCTXWD)                                      INP27900
      IF(MCTXWD)410,460,440                                             INP28000
C                                                                       INP28100
C...     MACRO VARIABLE ENCOUNTERED. BRANCH IF NESTED CALL IS BEING     INP28200
C...     EXAMINED DURING INTERMEDIATE MACRO PROCESSING.                 INP28300
C                                                                       INP28400
  410 IF(CALLON) GO TO 450                                              INP28500
      IF(INTMED) 420,420,430                                            INP28600
C                                                                       INP28700
C...     SUBSTITUTE ASSIGNED VALUE FOR MACRO VARIABLE DURING            INP28800
C...     INTERMEDIATE MACRO PROCESSING.                                 INP28900
C                                                                       INP29000
  420 II=MVPNT-MCTXWD                                                   INP29100
      II = VBLSAV(II)                                                   INP29200
      GO TO  150                                                        INP29300
C                                                                       INP29400
C...     SUBSTITUTE SPECIAL MACRO VARIABLE NAME (BASED ON MACRO NAME ANDINP29500
C...     POSITION OF MACRO VARIABLE) FOR MACRO VARIABLE DURING FINAL    INP29600
C...     MACRO PROCESSING.                                              INP29700
C                                                                       INP29800
  430 II=-MCTXWD                                                        INP29900
      II = MACSPD(II)                                                   INP30000
      GO TO 150                                                         INP30100
C                                                                       INP30200
C...     PICK UP NEXT WORD FROM MACTXT TABLE.                           INP30300
C                                                                       INP30400
  440 II=MCTXWD                                                         INP30500
      GO TO 150                                                         INP30600
C                                                                       INP30700
C...     PICK UP MACRO VARIABLE NAME FROM MACDF1 TABLE. NESTED CALL IS  INP30800
C...     BEING EXAMINED DURING INTERMEDIATE MACRO PROCESSING.           INP30900
C                                                                       INP31000
  450 II=MACSV1(MCSAVP)-MCTXWD                                          INP31100
      II = IABS(MACDF1(II+2))                                           INP31200
      GO TO 150                                                         INP31300
C                                                                       INP31400
C...     CALL ENCOUNTERED IN MACRO TEXT.                                INP31500
C                                                                       INP31600
  460 IF(INTMED) 470,470,570                                            INP31700
  470 II = MACSV1(MCSAVP)                                               INP31800
      IF(MACTBL(II)) 480, 480, 540                                      INP31900
C                                                                       INP32000
C...     CURRENT MACRO HAS NOT PREVIOUSLY UNDERGONE INTERMEDIATE MACRO  INP32100
C...     PROCESSING.PREPARE TO PERFORM SUCH PROCESSING ON NESTED CALL.  INP32200
C                                                                       INP32300
  480 CALLON = .TRUE.                                                   INP32400
      CALLPT = TEXTST                                                   INP32500
      STACK(1,TOP+1)=NAME(NCALL)                                        INP32600
      STACK(1,TOP+2) = SLASH(2)                                         INP32700
      CALL MCXTRN(2,TEXTST+2,MCTXWD)                                    INP32800
      IF(MCTXWD)490,490,500                                             INP32900
C                                                                       INP33000
C...     NAME FOLLOWING CALL/ IS A MACRO VARIABLE.                      INP33100
C                                                                       INP33200
  490 MVSEG=-MCTXWD                                                     INP33300
      CALLMV = .TRUE.                                                   INP33400
      II = MVPNT+MVSEG                                                  INP33500
C                                                                       INP33600
C...     SUBSTITUTE ASSIGNED MACRO NAME FOR MACRO VARIABLE IN NESTED    INP33700
C...     CALL.                                                          INP33800
C                                                                       INP33900
      STACK(1,TOP+3) = VBLSAV(II)                                       INP34000
      GO TO 510                                                         INP34100
C                                                                       INP34200
C...     PLACE MACRO NAME IN STACK FOR NESTED CALL.                     INP34300
C                                                                       INP34400
  500 STACK(1,TOP+3)=MCTXWD                                             INP34500
C                                                                       INP34600
C...     PREPARE STACK TO BEGIN INTERMEDIATE MACRO PROCESSING OF NESTED INP34700
C...     CALL.                                                          INP34800
C                                                                       INP34900
  510 DO  520 I = 1,3                                                   INP35000
      TOP = TOP+1                                                       INP35100
      II = STACK(1,TOP)                                                 INP35200
      II = NAMTBL(II)/MODULO                                            INP35300
  520 STACK(2,TOP) = META(II)                                           INP35400
      II=STACK(1,TOP)                                                   INP35500
      IF((NAMTBL(II)/MODULO).EQ.(MACNAM(1)/MODULO))GO TO 530            INP35600
      CALLON=.FALSE.                                                    INP35700
      CALLMV=.FALSE.                                                    INP35800
      CALL MCXTRN(1,TEXTST,STACK(1,TOP-2))                              INP35900
  530 TEXTST=TEXTST+2                                                   INP36000
      GO TO 350                                                         INP36100
C                                                                       INP36200
C...     CURRENT MACRO IS UNDERGOING INTERMEDIATE MACRO REPROCESSING.   INP36300
C...     DETERMINE WHETHER OR NOT MACRO NAMED IN NESTED CALL REQUIRES   INP36400
C...     INTERMEDIATE MACRO REPROCESSING.                               INP36500
C                                                                       INP36600
  540 CALL MCXTRN(2,TEXTST+1,MCTXWD)                                    INP36700
      IF(MCTXWD)550,560,550                                             INP36800
C                                                                       INP36900
C  NO INTERMEDIATE MACRO PROCESSING OF CALLED MACRO REQUIRED.           INP37000
  550 CALL MCXTRN(2,TEXTST+3,TEXTST)                                    INP37100
  551 STACK(1,TOP)=RTERM(2)                                             INP37200
      NEWSTM = .TRUE.                                                   INP37300
      ARGTOP=0                                                          INP37400
C  MODIFY STACK TO INDICATE INTERMEDIATE MACRO. REPROCESSING OF CALLED  INP37500
C  MACRO REQUIRED.                                                      INP37600
      GO TO 350                                                         INP37700
  560 II = MCLTRM(1)/MODULO                                             INP37800
      TOP = 2                                                           INP37900
      STACK(1,1) = MCLTRM(2)                                            INP38000
      STACK(1,2) = MCLTRM(2)                                            INP38100
      STACK(2,1) = META(II)                                             INP38200
      STACK(2,2) = META(II)                                             INP38300
C  CALL ENCOUNTERED DURING FINAL MACRO PROCESSING.                      INP38400
      GO TO 350                                                         INP38500
C  CALLED MACRO A MACRO VARIABLE AND/OR MACRO VARIABLE =MACRO VARIABLE  INP38600
C  IN ARGUMENT LIST.                                                    INP38700
  570 CALL MCXTRN(2,TEXTST+1,MCTXWD)                                    INP38800
      IF(MCTXWD)580,580,750                                             INP38900
  580 CALL MCXTRN(2,TEXTST+2,MCTXWD)                                    INP39000
      ICROD=-MCTXWD                                                     INP39100
      WAY=5                                                             INP39200
      II=TEXTST+3                                                       INP39300
C  FIRST PASS OF FINAL MACRO PROCESSING IN EFFECT. ALL ELEMENTS OF CALL INP39400
C  STATEMENT WHICH ARE CALL MACRO VARIABLES ARE PLACED IN ARGSTK FOR    INP39500
C  ANALYSIS TO DETERMINE IF BRANCHING I.L. REQUIRED.                    INP39600
      IF(FINMAC)GO TO 740                                               INP39700
      IF(ICROD.LT.0)GO TO 600                                           INP39800
      ARGSTK(1)=MACSPD(ICROD)                                           INP39900
      ARGTOP=1                                                          INP40000
  600 CALL MCXTRN(2,II,MCTXWD)                                          INP40100
      IF(MCTXWD/100000)610,630,620                                      INP40200
  610 J=-MCTXWD+100000*(MCTXWD/100000)                                  INP40300
      ARGTOP=ARGTOP+1                                                   INP40400
      ARGSTK(ARGTOP)=IABS(MACSPD(J))                                    INP40500
  620 II=II+1                                                           INP40600
      GO TO 600                                                         INP40700
  630 ERGSTK(100)=-ARGTOP                                               INP40800
      CALL MATCH                                                        INP40900
C  BRANCH IF ALL REQUIRED BRANCHING CODE FOR CALL STATEMENT HAS BEEN    INP41000
C  GENERATED.                                                           INP41100
      M=MCSTRT                                                          INP41200
      IF(.NOT.ENTRY)GO TO 735                                           INP41300
  635 IF(ICROD.LT.0)GO TO 640                                           INP41400
      K=M+ICROD                                                         INP41500
      K=IABS(MACSPD(K))                                                 INP41600
      J=1                                                               INP41700
      CALL MACTAB(K,J)                                                  INP41800
      GO TO 650                                                         INP41900
C  COMPRESSED CALL INFORMATION FOR THE CALLED MACRO INVOLVED IN THE     INP42000
C  CURRENT BRANCH IS PLACED IN THE MACHST TABLE.                        INP42100
  640 J=-ICROD                                                          INP42200
  650 MCHSTP=MCHSTP+3                                                   INP42300
      IF(MCHSTP.LE.MHSTDM)GO TO 655                                     INP42400
  652 CALL ALARM(22,0,8,'INPUT   ')                                     INP42500
      CALL HELP                                                         INP42600
  655 MACHST(MCHSTP-2)=MCSRCH                                           INP42700
      MACHST(MCHSTP-1)=J                                                INP42800
      MACDF2(J+2)=MACDF2(J+2)+1                                         INP42900
      MACHST(MCHSTP)=MACDF2(J+2)                                        INP43000
      II=TEXTST+3                                                       INP43100
  660 CALL MCXTRN(2,II,MCTXWD)                                          INP43200
      ICRAD=100000*(MCTXWD/100000)                                      INP43300
      IF(ICRAD)670,710,680                                              INP43400
  670 I=-MCTXWD+ICRAD+M                                                 INP43500
      I=IABS(MACSPD(I))                                                 INP43600
      GO TO 690                                                         INP43700
  680 I=MCTXWD-ICRAD                                                    INP43800
  690 K=J+IABS(ICRAD/100000)                                            INP43900
      IF(I.EQ.MACDF2(K+2))GO TO 700                                     INP44000
      MCHSTP=MCHSTP+1                                                   INP44100
      IF(MCHSTP.GT.MHSTDM)GO TO 652                                     INP44200
      MACHST(MCHSTP)=IABS(ICRAD)+I                                      INP44300
  700 II=II+1                                                           INP44400
      GO TO 660                                                         INP44500
C  BRANCH IF CALLED MACRO HAS NO MACRO VARIABLES.                       INP44600
  710 K=MACDF2(J+2)                                                     INP44700
  720 IF(MACDF1(J+2).EQ.0)GO TO 800                                     INP44800
      CALL CALMCX(MACDF1(J),0,2)                                        INP44900
C  GENERATE I.L. CODE WHICH PROVIDES LINKAGE WITH CALLED MACRO.         INP45000
      CALL MACLBL(MACDF1(J),-K,I)                                       INP45100
      NAMTBL(I) = IMPLAB(1)                                             INP45200
      CALL CALMCX( I,MCSAVP,1)                                          INP45300
  810 CALL MCXTRN(2,TEXTST+1,MCTXWD)                                    INP45400
      IF(MCTXWD)730,730,736                                             INP45500
  730 IF(.NOT.FINMAC)GO TO 630                                          INP45600
  735 CALL MCXTRN(2,II,TEXTST)                                          INP45700
C  SECOND PASS OF FINAL MACRO PROCESSING.                               INP45800
      GO TO 551                                                         INP45900
  740 CALL PATH                                                         INP46000
C  BRANCH TO GENERATE CALL I.L. IF NO SUCH CODE WAS GENERATED DURING    INP46100
C  FIRST PASS OF FINAL MACRO PROCESSING.                                INP46200
      M=NUMARG                                                          INP46300
      IF(SHOULD)GO TO 635                                               INP46400
  736 CALL MCXTRN(2,II,MCTXWD)                                          INP46500
      IF((MCTXWD/100000).EQ.0)GO TO 735                                 INP46600
      II=II+1                                                           INP46700
      GO TO 736                                                         INP46800
  750 II=TEXTST+3                                                       INP46900
      IF(.NOT.FINMAC)GO TO 736                                          INP47000
      K=MCTXWD                                                          INP47100
      CALL MCXTRN(2,TEXTST+2,J)                                         INP47200
C  GENERATE CALL I.L. FOR MACRO EMPLOYING NO MACRO VARIABLES.           INP47300
      GO TO 720                                                         INP47400
  800 CALL MACLBL(-1,MACDF1(J),I)                                       INP47500
      NAMTBL(I)=LABEL(1)                                                INP47600
      CALL CALMCX(I,MCSAVP,1)                                           INP47700
      GO TO 810                                                         INP47800
       END                                                              INP47900
**** SOURCE FILE : M0006643.V06   ***
*
C                                                                       ISS00100
C              FORTRAN SUBROUTINE ISSCOD                                ISS00200
C                                                                       ISS00300
C LINKAGE      SUBROUTINE ISSCOD                                        ISS00400
C                                                                       ISS00500
C          SUBSIDIARIES                  CALLED BY                      ISS00600
C          TYPE          ENTRY           TYPE          ENTRY            ISS00700
C          SUBROUTINE    ALARM           SUBROUTINE    INPUT            ISS00800
C          SUBROUTINE    CONCAT                                         ISS00900
C          SUBROUTINE    BINBCD                                         ISS01000
C          INTEGER FCT.  GETTMP                                         ISS01100
C          INTEGER FCT.  NUMB                                           ISS01200
C          SUBROUTINE    ONEARG                                         ISS01300
C          SUBROUTINE    OPCODE                                         ISS01400
C          SUBROUTINE    RLSLIN                                         ISS01500
C          SUBROUTINE    ARGCVT                                         ISS01600
C                                                                       ISS01700
      SUBROUTINE ISSCOD                                                 ISS01800
C                                                                       ISS01900
      IMPLICIT INTEGER (A-Z)                                            ISS02000
C                                                                       ISS02100
C        1.    NAME TABLE AND TABLE LIMITS                              ISS02200
C                                                                       ISS02300
      INCLUDE 'NAMETB.INC'                                              ISS02410
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                ISS02450
C CNAMTB:      NAME TABLE OR DICTIONARY                                 ISS02550
C                                                                       ISS02800
C        2.    STACK AND POINTER STORAGE                                ISS02900
C                                                                       ISS03000
      COMMON/STKLST/STKLST                                              ISS03100
      DIMENSION STKLST(300),STACK(2,99)                                 ISS03200
C TOP:         POINTER TO LAST STACK ENTRY                              ISS03300
      EQUIVALENCE (TOP,STKLST(1))                                       ISS03400
C STACK:       WORKING STACK                                            ISS03500
      EQUIVALENCE (STACK(1,1),STKLST(4))                                ISS03600
C                                                                       ISS03700
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      ISS03800
C                                                                       ISS03900
      COMMON/CODE/CODE                                                  ISS04000
      DIMENSION CODE(150),COMMA(2),TEMP(2)                              ISS04100
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF ',     '        ISS04200
      EQUIVALENCE (COMMA(1),CODE(1))                                    ISS04300
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        ISS04400
      EQUIVALENCE (TEMP(1),CODE(33))                                    ISS04500
C                                                                       ISS04600
C        4.    PRODUCTION TABLE                                         ISS04700
C                                                                       ISS04800
      COMMON/SRCTBL/SRCTBL                                              ISS04900
      DIMENSION SRCTBL(502),META(50)                                    ISS05000
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   ISS05100
      EQUIVALENCE (META(1),SRCTBL(3))                                   ISS05200
C                                                                       ISS05300
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         ISS05400
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    ISS05500
      COMMON/TMP/TXXXX                                                  ISS05600
      DIMENSION TXXXX(2,32)                                             ISS05700
C                                                                       ISS05800
C        7.    STRING STORAGE AREA                                      ISS05900
C              POINTER TO THE LAST PROCESSED CHARACTER OF A STATEMENT   ISS06000
      COMMON/INPTR/CNT                                                  ISS06100
C                                                                       ISS06200
C       16.    LITERALS FOR I. L. OPERATION CODES                       ISS06300
C                                                                       ISS06400
      COMMON/IL/IL                                                      ISS06500
      DIMENSION IL(21)                                                  ISS06600
C CVTSUB:      CONTAINS COMMAND CODE (13) FOR CVTSUB COMMAND            ISS06700
      EQUIVALENCE (CVTSUB,IL(13))                                       ISS06800
C                                                                       ISS06900
C       17.    MODE CODES                                               ISS07000
C                                                                       ISS07100
      COMMON/MODX/MODX                                                  ISS07200
      DIMENSION MODX(32)                                                ISS07300
C SUBSCR:      MODE CODE (24) FOR SUBSCRIPT                             ISS07400
      EQUIVALENCE (SUBSCR,MODX(24))                                     ISS07500
C                                                                       ISS07600
C       29.    CLASS CODE MODULI                                        ISS07700
C                                                                       ISS07800
      COMMON/MODULI/MODULI                                              ISS07900
      DIMENSION MODULI(2)                                               ISS08000
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    ISS08100
      EQUIVALENCE (MODULO,MODULI(1))                                    ISS08200
C MODHLF:      NORMAL MODE CODE LIMIT 500                               ISS08300
      EQUIVALENCE (MODHLF,MODULI(2))                                    ISS08400
C                                                                       ISS08500
C       37.    INCLUSIVE SUBSCRIPT VARIABLES                            ISS08600
C                                                                       ISS08700
      COMMON/ISSCOM/ISSCOM                                              ISS08800
      LOGICAL ISSFL,ISSEND                                              ISS08900
      DIMENSION ISSCOM(9),ISSTRM(2)                                     ISS09000
C ISSA:        LOWEST SUBSCRIPT OF AN INCLUSIVE SUBSCRIPT STRING        ISS09100
      EQUIVALENCE (ISSA,ISSCOM(1))                                      ISS09200
C ISSB:        HIGHEST SUBSCRIPT OF AN INCLUSIVE SUBSCRIPT STRING       ISS09300
      EQUIVALENCE (ISSB,ISSCOM(2))                                      ISS09400
C ISSC:        INCREMENT OR DECREMENT FOR INCLUSIVE SUBSCRIPT STRING    ISS09500
      EQUIVALENCE (ISSC,ISSCOM(3))                                      ISS09600
C ISSVBL:      NAMTBL POINTER TO THE INCLUSIVE SUBSCRIPTED VARIABLE     ISS09700
      EQUIVALENCE (ISSVBL,ISSCOM(4))                                    ISS09800
C ISSMOD:      MODE OF THE INCLUSIVE SUBSCRIPTED VARIABLE               ISS09900
      EQUIVALENCE (ISSMOD,ISSCOM(5))                                    ISS10000
C ISSFL:       TRUE DURING INCLUSIVE SUBSCRIPT PROCESSING               ISS10100
      EQUIVALENCE (ISSFL,ISSCOM(6))                                     ISS10200
C ISSEND:      END OF INCLUSIVE SUBSCRIPT PROCESSING                    ISS10300
      EQUIVALENCE (ISSEND,ISSCOM(7))                                    ISS10400
C ISSTRM:      SAVES THE STACK TOP ITEMS DURING SUBSCRIPT PROCESSING    ISS10500
      EQUIVALENCE (ISSTRM(1),ISSCOM(8))                                 ISS10600
C                                                                       ISS10700
C       44.    ERROR POSITION TABLE                                     ISS10800
C                                                                       ISS10900
      COMMON/ERRPOS/ERRPOS                                              ISS11000
      INTEGER ERRPOS,ERRPNT,ESTACK                                      ISS11100
      DIMENSION ERRPOS(302),ERRPNT(100),ESTACK(100)                     ISS11200
C ERRPNT:      CONTAINS POINTERS TO INPUT STATEMENT TEXT POSITIONS      ISS11300
      EQUIVALENCE (ERRPNT(1),ERRPOS(3))                                 ISS11400
C ESTACK:      INPUT STATEMENT ERROR POSITION WHEN DETECTED IN STACK    ISS11500
      EQUIVALENCE (ESTACK(1),ERRPOS(103))                               ISS11600
C**                                                                     ISS11700
      CHARACTER IBUFF*15,IHBLK*4                                        ISS11800
      DATA IHBLK/'    '/                                                ISS11900
C                                                                       ISS12000
C...     CHECK FOR SPACE IN STACK                                       ISS12100
C                                                                       ISS12200
      IERROR=0                                                          ISS12300
      IF(TOP+2.LE.97)GO TO 10                                           ISS12400
      IERROR=1028                                                       ISS12500
C                                                                       ISS12600
C...     ENTER NEW SUBSCRIPT IN NAMTBL                                  ISS12700
C                                                                       ISS12800
   10 IBUFF(12:15)=IHBLK                                                ISS12900
      CALL BINBCD(ISSA,IBUFF(4:),I)                                     ISS13000
      WRITE(IBUFF(1:3),'(I3)') I                                        ISS13010
      CALL CONCAT(IBUFF,'.')                                            ISS13100
      INUMB=NUMB(IBUFF(4:15))+NAMMAX                                    ISS13200
C                                                                       ISS13300
C...     GENERATE SUBSCRIPT I.L. AND PLACE TEMPORARY IN STACK           ISS13400
C                                                                       ISS13500
      IRSLT=GETTMP(SUBSCR)                                              ISS13600
      NAMTBL(IRSLT)=TEMP(1)+SUBSCR                                      ISS13700
      CALL OPCODE(CVTSUB)                                               ISS13800
      CALL ARGCVT(IRSLT)                                                ISS13900
      CALL ARGCVT(ISSVBL)                                               ISS14000
      CALL ARGCVT(INUMB)                                                ISS14100
      CALL ONEARG(TXXXX(1,ISSMOD))                                      ISS14200
      CALL RLSLIN                                                       ISS14300
      NAMTBL(IRSLT)=TEMP(1)+ISSMOD+MODHLF                               ISS14400
      STACK(1,TOP+1)=IRSLT                                              ISS14500
      I=TEMP(1)/MODULO                                                  ISS14600
      STACK(2,TOP+1)=META(I)                                            ISS14700
      TOP=TOP+2                                                         ISS14800
      ESTACK(TOP)=ERRPNT(CNT-2)                                         ISS14900
C                                                                       ISS15000
C...     UPDATE ISSA AND CHECK FOR END OF SUBSCRIPT STRING              ISS15100
C                                                                       ISS15200
      ISSA=ISSA+ISSC                                                    ISS15300
      IF((ISSC.LT.0 .AND. ISSA.LT.ISSB) .OR.                            ISS15400
     /   (ISSC.GT.0 .AND. ISSA.GT.ISSB)) GO TO 500                      ISS15500
      IF(IERROR.NE.0)GO TO 400                                          ISS15600
C                                                                       ISS15700
C...     PLACE COMMA IN TOP OF STACK AND CONTINUE                       ISS15800
C                                                                       ISS15900
      STACK(1,TOP)=COMMA(2)                                             ISS16000
      I=COMMA(1)/MODULO                                                 ISS16100
      STACK(2,TOP)=META(I)                                              ISS16200
      GO TO 600                                                         ISS16300
C                                                                       ISS16400
C...     END OF INCLUSIVE SUBSCRIPT STRING - RESTORE TOP ITEM           ISS16500
C          OF STACK AND SET FLAGS                                       ISS16600
C                                                                       ISS16700
  400 CALL ALARM(IERROR,TOP,8,'ISSCOD  ')                               ISS16800
  500 DO 550 I=1,2                                                      ISS16900
      STACK(I,TOP)=ISSTRM(I)                                            ISS17000
  550 CONTINUE                                                          ISS17100
      ISSEND=.TRUE.                                                     ISS17200
      ISSFL=.FALSE.                                                     ISS17300
C                                                                       ISS17400
  600 RETURN                                                            ISS17500
      END                                                               ISS17600
**** SOURCE FILE : M0006644.V01   ***
*
C                                                                       JZZ00100
C              FORTRAN SUBROUTINE JUMPZZ                                JZZ00200
C                                                                       JZZ00300
C LINKAGE      SUBROUTINE JUMPZZ(INDEX)                                 JZZ00400
C                                                                       JZZ00500
C          SUBSIDIARIES                  CALLED BY                      JZZ00600
C          TYPE          ENTRY           TYPE          ENTRY            JZZ00700
C          SUBROUTINE    ONEARG          SUBROUTINE    COMSTR           JZZ00800
C          SUBROUTINE    OPCODE          SUBROUTINE    PRO026           JZZ00900
C          SUBROUTINE    RLSLIN                                         JZZ01000
C                                                                       JZZ01100
      SUBROUTINE JUMPZZ(INDEX)                                          JZZ01200
C                                                                       JZZ01300
      IMPLICIT INTEGER (A-Z)                                            JZZ01400
C                                                                       JZZ01500
C       16.    LITERALS FOR I. L. OPERATION CODES                       JZZ01600
C                                                                       JZZ01700
      COMMON/IL/IL                                                      JZZ01800
      DIMENSION IL(21)                                                  JZZ01900
C JUMP:        CONTAINS COMMAND CODE ( 8) FOR JUMP COMMAND              JZZ02000
      EQUIVALENCE (JUMP,IL(8))                                          JZZ02100
C*                                                                      JZZ02200
C PURPOSE      TO GENERATE  AND OUTPUT TO THE I.L. INTERNAL             JZZ02300
C              RECORD IMAGE (ILFILE) THE JUMP I.L. COMMAND.             JZZ02400
C                                                                       JZZ02500
C ARGUMENTS    INDEX    NAME TABLE (NAMTBL) INDEX OF A LABEL.           JZZ02600
C**                                                                     JZZ02700
C...     GENERATE I.L. FOR JUMP COMMAND.                                JZZ02800
C                                                                       JZZ02900
      CALL OPCODE(JUMP)                                                 JZZ03000
      CALL ONEARG(INDEX)                                                JZZ03100
      CALL RLSLIN                                                       JZZ03200
      RETURN                                                            JZZ03300
       END                                                              JZZ03400
**** SOURCE FILE : M0006629.V01   ***
*
C                                                                       KNT00100
C              FORTRAN SUBROUTINE KONAST                                KNT00200
C                                                                       KNT00300
C LINKAGE      SUBROUTINE  KONAST(TENPT)                                KNT00400
C                                                                       KNT00500
C          SUBSIDIARIES                  CALLED BY                      KNT00600
C          TYPE          ENTRY           TYPE          ENTRY            KNT00700
C          SUBROUTINE    SETCHR          SUBROUTINE    RECOG            KNT00800
C                                                                       KNT00900
      SUBROUTINE  KONAST(TENPT)                                         KNT01000
C                                                                       KNT01100
      IMPLICIT INTEGER (A-Z)                                            KNT01200
C                                                                       KNT01300
C        2.    STACK AND POINTER STORAGE                                KNT01400
C                                                                       KNT01500
      COMMON/STKLST/STKLST                                              KNT01600
      DIMENSION STKLST(300),STACK(2,99)                                 KNT01700
C TOP:         POINTER TO LAST STACK ENTRY                              KNT01800
      EQUIVALENCE (TOP,STKLST(1))                                       KNT01900
C STACK:       WORKING STACK                                            KNT02000
      EQUIVALENCE (STACK(1,1),STKLST(4))                                KNT02100
C                                                                       KNT02200
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      KNT02300
C                                                                       KNT02400
      COMMON/CODE/CODE                                                  KNT02500
      DIMENSION CODE(150),ASTER(2),NUMBER(2),DBLAST(2)                  KNT02600
C ASTER:       (1)=CODE CLASS  9000,(2)=NAMTBL INDEX OF '*     '        KNT02700
      EQUIVALENCE (ASTER(1),CODE(17))                                   KNT02800
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        KNT02900
      EQUIVALENCE (NUMBER(1),CODE(27))                                  KNT03000
C DBLAST:      (1)=CODE CLASS 32000,(2)=NAMTBL INDEX OF 'DBLAST'        KNT03100
      EQUIVALENCE (DBLAST(1),CODE(63))                                  KNT03200
C**                                                                     KNT03300
      TOP=TOP+2                                                         KNT03400
      STACK(1,TOP)=STACK(1,TOP-2)                                       KNT03500
      STACK(2,TOP)=STACK(2,TOP-2)                                       KNT03600
      STACK(1,TOP-1)=STACK(1,TOP-3)                                     KNT03700
      STACK(2,TOP-1)=STACK(2,TOP-3)                                     KNT03800
      CALL SETCHR(TOP-2,DBLAST)                                         KNT03900
      CALL SETCHR(TOP-3,NUMBER)                                         KNT04000
      STACK(1,TOP-3)=TENPT                                              KNT04100
      CALL SETCHR(TOP-4,ASTER)                                          KNT04200
C                                                                       KNT04300
      RETURN                                                            KNT04400
      END                                                               KNT04500
**** SOURCE FILE : M0006645.W01   ***
*
C                                                                       LCN00100
C              FORTRAN SUBROUTINE LABCON                                LCN00200
C                                                                       LCN00300
C LINKAGE      SUBROUTINE LABCON(K)                                     LCN00400
C                                                                       LCN00500
C          SUBSIDIARIES                  CALLED BY                      LCN00600
C          TYPE          ENTRY           TYPE          ENTRY            LCN00700
C          SUBROUTINE    BINBCD          SUBROUTINE    PRO026           LCN00800
C          SUBROUTINE    ALARM           SUBROUTINE    RECOG            LCN00900
C                                                                       LCN01000
      SUBROUTINE LABCON(K)                                              LCN01100
C                                                                       LCN01200
      IMPLICIT INTEGER (A-Z)                                            LCN01300
C                                                                       LCN01400
C        1.    NAME TABLE AND TABLE LIMITS                              LCN01500
C                                                                       LCN01600
      INCLUDE 'NAMETB.INC'                                              LCN01710
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                LCN01750
C CNAMTB:      NAME TABLE OR DICTIONARY                                 LCN01850
C                                                                       LCN02100
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      LCN02200
C                                                                       LCN02300
      COMMON/CODE/CODE                                                  LCN02400
      DIMENSION CODE(150),LABEL(2)                                      LCN02500
C LABEL:       (1)=CODE CLASS 22000,(2)=NAMTBL INDEX OF 'LABEL '        LCN02600
      EQUIVALENCE (LABEL(1),CODE(43))                                   LCN02700
C                                                                       LCN02800
C       11.    SEQUENCE NUMBER STORAGE                                  LCN02900
C                                                                       LCN03000
      COMMON/SEQCOM/SEQCOM                                              LCN03100
      DIMENSION SEQCOM(3),SEQNUM(2)                                     LCN03200
C SEQNO:       INTERNALLY GENERATED STATEMENT NUMBER                    LCN03300
      EQUIVALENCE (SEQNO,SEQCOM(1))                                     LCN03400
C SEQNUM:      ALPHANUMERIC REPRESENTATION OF CURRRENT STATEMENT NUMBER LCN03500
      EQUIVALENCE (SEQNUM(1),SEQCOM(2))                                 LCN03600
C                                                                       LCN03700
C       14.    I. L. LIST OPTION FLAGS                                  LCN03800
C                                                                       LCN03900
      COMMON/PRT/PRT                                                    LCN04000
      LOGICAL PRTERR                                                    LCN04100
      DIMENSION PRT(7)                                                  LCN04200
C PRTERR:      TRUE IF PPOPTN/PRTER,ON. PRINTOUT OF STACK OR ARGSTK     LCN04300
      EQUIVALENCE (PRTERR,PRT(6))                                       LCN04400
C                                                                       LCN04500
C       22.    MACRO PROCESSING VARIABLES                               LCN04600
C                                                                       LCN04700
      COMMON/MACXX1/MACXX1                                              LCN04800
      LOGICAL ILHLT                                                     LCN04900
C ILHLT:       TRUE IF I.L. SHOULD NOT BE PLACED IN ILFILE              LCN05000
      EQUIVALENCE (ILHLT,MACXX1(14))                                    LCN05100
      DIMENSION MACXX1(71)                                              LCN05200
C                                                                       LCN05300
C       29.    CLASS CODE MODULI                                        LCN05400
C                                                                       LCN05500
      COMMON/MODULI/MODULI                                              LCN05600
      DIMENSION MODULI(2)                                               LCN05700
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    LCN05800
      EQUIVALENCE (MODULO,MODULI(1))                                    LCN05900
C                                                                       LCN06000
C       43.    DO LOOP CONTROL VALUES                                   LCN06100
C                                                                       LCN06200
      COMMON/DOLOOP/DOLOOP                                              LCN06300
      DIMENSION DOLOOP(8)                                               LCN06400
C JUMPTO:      MARKER SET AFTER JUMPTO OR IF FOR LABEL CONTROL          LCN06500
      EQUIVALENCE (JUMPTO,DOLOOP(1))                                    LCN06600
C*                                                                      LCN06700
      DIMENSION     LABARY(2,150)                                       LCN06800
      LOGICAL    PRTER                                                  LCN06900
      DATA ISEQ,LABCNT,LABARY/302*0/,LABDM/151/                         LCN07000
C**                                                                     LCN07100
      IF(ILHLT)GOTO 150                                                 LCN07200
      L=IABS(K)                                                         LCN07300
      IF (L.GT.0) THEN                                                  LCN07310
      M=MODULO*(NAMTBL(L)/MODULO)                                       LCN07400
      ENDIF                                                             LCN07410
      IF(K)50,100,10                                                    LCN07500
C                                                                       LCN07600
C     JUMPTO STATEMENT,SEARCH FOR FORMER LABEL                          LCN07700
C                                                                       LCN07800
   10 IF(M.EQ.LABEL(1))GOTO 40                                          LCN07900
C                                                                       LCN08000
C     NO FORMER LABEL, SEARCH FOR FORMER JUMPTO                         LCN08100
C                                                                       LCN08200
      DO 20 I=1,LABCNT                                                  LCN08300
      IF(LABARY(1,I).NE.K)GOTO 20                                       LCN08400
      IF(LABARY(2,I).EQ.0)GOTO 40                                       LCN08500
   20 CONTINUE                                                          LCN08600
      LABCNT=LABCNT+1                                                   LCN08700
      IF(LABCNT-LABDM)30,160,40                                         LCN08800
   30 LABARY(1,LABCNT)=K                                                LCN08900
      LABARY(2,LABCNT)=SEQNO                                            LCN09000
   40 IF(ISEQ.EQ.SEQNO)GOTO 150                                         LCN09100
      ISEQ=SEQNO                                                        LCN09200
      GOTO 130                                                          LCN09300
C                                                                       LCN09400
C     LABEL STATEMENT, SEARCH FOR FORMER JUMPTO                         LCN09500
C                                                                       LCN09600
   50 DO 60 I=1,LABCNT                                                  LCN09700
      IF(LABARY(1,I).EQ.L)LABARY(2,I)=0                                 LCN09800
   60 CONTINUE                                                          LCN09900
      GOTO 140                                                          LCN10000
C                                                                       LCN10100
C     FINI OR TERMAC HAS COME                                           LCN10200
C                                                                       LCN10300
  100 IF(LABCNT.EQ.0)GOTO 130                                           LCN10400
      IF(LABCNT.GE.LABDM)LABCNT=LABDM-1                                 LCN10500
      L=SEQNUM(1)                                                       LCN10600
      M=SEQNUM(2)                                                       LCN10700
      PRTER=PRTERR                                                      LCN10800
      PRTERR=.FALSE.                                                    LCN10900
      DO 110 I=1,LABCNT                                                 LCN11000
      IF(LABARY(2,I).EQ.0)GOTO 110                                      LCN11100
      CALL BINBCD(LABARY(2,I),SEQNUM,N)                                 LCN11200
      LABARY(2,I)=0                                                     LCN11300
      CALL ALARM(1002,0,4,'LABCON  ')                                   LCN11400
  110 CONTINUE                                                          LCN11500
      LABCNT=0                                                          LCN11600
      SEQNUM(1)=L                                                       LCN11700
      SEQNUM(2)=M                                                       LCN11800
      PRTERR=PRTER                                                      LCN11900
  130 IF(JUMPTO.NE.0)CALL ALARM(1009,0,4,'LABCON  ')                    LCN12000
  140 JUMPTO=0                                                          LCN12100
      IF(K.GT.0)JUMPTO=SEQNO+2                                          LCN12200
C                                                                       LCN12300
  150 RETURN                                                            LCN12400
  160 CALL ALARM(40,0,4,'LABCON  ')                                     LCN12500
      GOTO 130                                                          LCN12600
      END                                                               LCN12700
**** SOURCE FILE : M0006646.V01   ***
*
C                                                                       LBZ00100
C              FORTRAN SUBROUTINE LABELZ                                LBZ00200
C                                                                       LBZ00300
C LINKAGE      SUBROUTINE LABELZ(INDEX)                                 LBZ00400
C                                                                       LBZ00500
C          SUBSIDIARIES                  CALLED BY                      LBZ00600
C          TYPE          ENTRY           TYPE          ENTRY            LBZ00700
C          SUBROUTINE    ONEARG          SUBROUTINE    BOOLIF           LBZ00800
C          SUBROUTINE    OPCODE          SUBROUTINE    COMSTR           LBZ00900
C          SUBROUTINE    RLSLIN          SUBROUTINE    LOOP             LBZ01000
C                                        SUBROUTINE    MACREC           LBZ01100
C                                        SUBROUTINE    MATCH            LBZ01200
C                                        SUBROUTINE    RECOG            LBZ01300
C                                                                       LBZ01400
      SUBROUTINE LABELZ(INDEX)                                          LBZ01500
C                                                                       LBZ01600
      IMPLICIT INTEGER (A-Z)                                            LBZ01700
C                                                                       LBZ01800
C       16.    LITERALS FOR I. L. OPERATION CODES                       LBZ01900
C                                                                       LBZ02000
      COMMON/IL/IL                                                      LBZ02100
      DIMENSION IL(21)                                                  LBZ02200
C LABELX:      CONTAINS COMMAND CODE ( 6) FOR LABEL COMMAND             LBZ02300
      EQUIVALENCE (LABELX,IL(6))                                        LBZ02400
C*                                                                      LBZ02500
C PURPOSE      TO GENERATE AND OUTPUT TO THE I.L. RECORD IMAGE          LBZ02600
C              (ILFILE) THE LABEL I.L. COMMAND.                         LBZ02700
C                                                                       LBZ02800
C ARGUMENTS    INDEX    NAME TABLE (NAMTBL) INDEX OF LABEL.             LBZ02900
C**                                                                     LBZ03000
      CALL OPCODE(LABELX)                                               LBZ03100
      CALL ONEARG(INDEX)                                                LBZ03200
      CALL RLSLIN                                                       LBZ03300
      RETURN                                                            LBZ03400
       END                                                              LBZ03500
**** SOURCE FILE : M0006647.W01   ***
*
C                                                                       LAR00100
C              FORTRAN SUBROUTINE LARGES                                LAR00200
C                                                                       LAR00300
C LINKAGE      SUBROUTINE  LARGES (ACTNO,BIGCNT)                        LAR00400
C                                                                       LAR00500
C          SUBSIDIARIES                  CALLED BY                      LAR00600
C          TYPE          ENTRY           TYPE          ENTRY            LAR00700
C          INTEGER FCT.  GETTMP          SUBROUTINE    RECOG            LAR00800
C          SUBROUTINE    HELP                                           LAR00900
C          SUBROUTINE    ARGCVT                                         LAR01000
C          INTEGER FCT.  MODE                                           LAR01100
C          SUBROUTINE    ONEARG                                         LAR01200
C          SUBROUTINE    OPCODE                                         LAR01300
C          SUBROUTINE    CALLZZ                                         LAR01400
C          SUBROUTINE    PUTTMP                                         LAR01500
C          SUBROUTINE    RESRVZ                                         LAR01600
C          SUBROUTINE    RLSLIN                                         LAR01700
C          INTEGER FCT.  SEARCH                                         LAR01800
C          SUBROUTINE    SETMOD                                         LAR01900
C          SUBROUTINE    ALARM                                          LAR02000
C          SUBROUTINE    TWOARG                                         LAR02100
C                                                                       LAR02200
      SUBROUTINE  LARGES (ACTNO,BIGCNT)                                 LAR02300
C                                                                       LAR02400
      IMPLICIT INTEGER (A-Z)                                            LAR02500
C                                                                       LAR02600
C        1.    NAME TABLE AND TABLE LIMITS                              LAR02700
C                                                                       LAR02800
      INCLUDE 'NAMETB.INC'                                              LAR02910
C NAMTBL:      INTEGER CORRESPONDING TO NAME TABLE ENTRY                LAR02950
C CNAMTB:      NAME TABLE OR DICTIONARY                                 LAR03050
C NAMMAX:      NAMTBL INDEX OF END OF THE PART PROGRAM NAME SECTION     LAR03100
C                                                                       LAR03500
C        2.    STACK AND POINTER STORAGE                                LAR03600
C                                                                       LAR03700
      COMMON/STKLST/STKLST                                              LAR03800
      DIMENSION STKLST(300),STACK(2,99)                                 LAR03900
C TOP:         POINTER TO LAST STACK ENTRY                              LAR04000
      EQUIVALENCE (TOP,STKLST(1))                                       LAR04100
C STACK:       WORKING STACK                                            LAR04200
      EQUIVALENCE (STACK(1,1),STKLST(4))                                LAR04300
C                                                                       LAR04400
C        3.    METALINGUISTIC VARIABLE CLASS CODES                      LAR04500
C                                                                       LAR04600
      COMMON/CODE/CODE                                                  LAR04700
      DIMENSION CODE(150),COMMA(2),BLANK(2),NUMBER(2),TEMP(2),PERMID(2),LAR04800
     *          VBL(2),IDENT(2)                                         LAR04900
C COMMA:       (1)=CODE CLASS  1000,(2)=NAMTBL INDEX OF ',     '        LAR05000
      EQUIVALENCE (COMMA(1),CODE(1))                                    LAR05100
C BLANK:       (1)=CODE CLASS 13000,(2)=NAMTBL INDEX OF '      '        LAR05200
      EQUIVALENCE (BLANK(1),CODE(25))                                   LAR05300
C NUMBER:      (1)=CODE CLASS 14000,(2)=NAMTBL INDEX OF 'NUMBER'        LAR05400
      EQUIVALENCE (NUMBER(1),CODE(27))                                  LAR05500
C TEMP:        (1)=CODE CLASS 17000,(2)=NAMTBL INDEX OF 'TEMP  '        LAR05600
      EQUIVALENCE (TEMP(1),CODE(33))                                    LAR05700
C PERMID:      (1)=CODE CLASS 20000,(2)=NAMTBL INDEX OF 'PERMID'        LAR05800
      EQUIVALENCE (PERMID(1),CODE(39))                                  LAR05900
C VBL:         (1)=CODE CLASS 31000,(2)=NAMTBL INDEX OF 'VBL   '        LAR06000
      EQUIVALENCE (VBL(1),CODE(61))                                     LAR06100
C IDENT:       (1)=CODE CLASS 35000,(2)=NAMTBL INDEX OF 'IDENT '        LAR06200
      EQUIVALENCE (IDENT(1),CODE(69))                                   LAR06300
C                                                                       LAR06400
C        4.    PRODUCTION TABLE                                         LAR06500
C                                                                       LAR06600
      COMMON/SRCTBL/SRCTBL                                              LAR06700
      DIMENSION SRCTBL(502),META(50)                                    LAR06800
C META:        CONTAINS INTERNAL BIT CODES FOR METALINGUISTIC CLASSES   LAR06900
      EQUIVALENCE (META(1),SRCTBL(3))                                   LAR07000
C                                                                       LAR07100
C        6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION         LAR07200
C              LENGTH AND CURRENT NUMBER OF ACTIVE TEMPORARY STORAGE    LAR07300
      COMMON/TMP/TXXXX                                                  LAR07400
      DIMENSION TXXXX(2,32)                                             LAR07500
C                                                                       LAR07600
C        8.    NAME TABLE POINTERS TO BCD LITERALS                      LAR07700
C                                                                       LAR07800
      COMMON/BCDPTR/BCDPTR                                              LAR07900
      DIMENSION BCDPTR(7)                                               LAR08000
C DOTTAB:      NAMTBL POINTER TO ALPHAMERIC LITERAL '$$TAB'             LAR08100
      EQUIVALENCE (DOTTAB,BCDPTR(7))                                    LAR08200
C                                                                       LAR08300
C        9.    NAME TABLE POINTERS TO NUMBERS                           LAR08400
C                                                                       LAR08500
      COMMON/NUMPTR/NUMPTR                                              LAR08600
      DIMENSION NUMPTR(12),ZERO(12)                                     LAR08700
C ZERO:        NAMTBL POINTER TO '0     '                               LAR08800
      EQUIVALENCE (ZERO(1),NUMPTR(1))                                   LAR08900
C ONE:         NAMTBL POINTER TO '1     '                               LAR09000
      EQUIVALENCE (ONE,NUMPTR(3))                                       LAR09100
C TWO:         NAMTBL POINTER TO '2     '                               LAR09200
      EQUIVALENCE (TWO,NUMPTR(5))                                       LAR09300
C FOUR:        NAMTBL POINTER TO '4     '                               LAR09400
      EQUIVALENCE (FOUR,NUMPTR(7))                                      LAR09500
C                                                                       LAR09600
C       10.    TABLE STORAGE FOR GEOMETRIC FUNCTION PROCESSOR           LAR09700
C                                                                       LAR09800
      INCLUDE 'GMTY.INC'                                                LAR09900
C GEOLOC:      GEOMETRIC PRODUCTION STARTING INDEX IN GEOMTB            LAR10100
C PMIDTB:      INTERNAL BIT REPRESENTATIONS FOR EACH ELEMENT OF GEOMTB  LAR10300
C GEOMTB:      GEOMETRIC FORMAT PRODUCTIONS ARRANGED BY SURFACE TYPE    LAR10500
C                                                                       LAR10700
C       12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                    LAR10800
C                                                                       LAR10900
      COMMON/CFSIZE/CFSIZE                                              LAR11000
      LOGICAL TABCYS                                                    LAR11100
      DIMENSION CFSIZE(205),MAXSIZ(2),CANSIZ(2,100)                     LAR11200
C CANTOP:      POINTER TO THE LAST CANSIZ ENTRY                         LAR11300
      EQUIVALENCE (CANTOP,CFSIZE(1))                                    LAR11400
C TABCYS:      TRUE WHEM PART PROGRAM CONTAINS TABCYLS                  LAR11500
      EQUIVALENCE (TABCYS,CFSIZE(3))                                    LAR11600
C MAXSIZ:      SIZE OF THE LAST LARGEST LARGE DATA ARRAY                LAR11700
      EQUIVALENCE (MAXSIZ(1),CFSIZE(4))                                 LAR11800
C CANSIZ:      NUMBER OF ITEMS A. NAMTBL INDEX OF EACH LARGE DATA ARRAY LAR11900
      EQUIVALENCE (CANSIZ(1,1),CFSIZE(6))                               LAR12000
C                                                                       LAR12100
C       16.    LITERALS FOR I. L. OPERATION CODES                       LAR12200
C                                                                       LAR12300
      COMMON/IL/IL                                                      LAR12400
      DIMENSION IL(21)                                                  LAR12500
C REPL:        CONTAINS COMMAND CODE (17) FOR REPL COMMAND              LAR12600
      EQUIVALENCE (REPL,IL(17))                                         LAR12700
C MOVE:        CONTAINS COMMAND CODE (19) FOR MOVE COMMAND              LAR12800
      EQUIVALENCE (MOVE,IL(19))                                         LAR12900
C                                                                       LAR13000
C       17.    MODE CODES                                               LAR13100
C                                                                       LAR13200
      COMMON/MODX/MODX                                                  LAR13300
      DIMENSION MODX(32)                                                LAR13400
C TABCYL:      MODE CODE (11) FOR TABULATED CYLINDER                    LAR13500
      EQUIVALENCE (TABCYL,MODX(11))                                     LAR13600
C POINT:       MODE CODE (19) FOR POINT                                 LAR13700
      EQUIVALENCE (POINT,MODX(19))                                      LAR13800
C REAL:        MODE CODE (24) FOR A SCALAR                              LAR13900
      EQUIVALENCE (REAL,MODX(21))                                       LAR14000
C SUBSCR:      MODE CODE (24) FOR SUBSCRIPT                             LAR14100
      EQUIVALENCE (SUBSCR,MODX(24))                                     LAR14200
C                                                                       LAR14300
C       22.    MACRO PROCESSING VARIABLES                               LAR14400
C                                                                       LAR14500
      COMMON/MACXX1/MACXX1                                              LAR14600
      DIMENSION MACXX1(71)                                              LAR14700
      LOGICAL NESTG                                                     LAR14800
C INTMED:      0=NO -,-1=INTERMEDIATE-,+1=FINAL MACRO PROCESSING        LAR14900
      EQUIVALENCE (INTMED,MACXX1(22))                                   LAR15000
C NESTG:       TRUE WHEN A NESTED GEOMETRIC EXPRESSION ENCOUNTERED      LAR15100
      EQUIVALENCE (NESTG,MACXX1(45))                                    LAR15200
C                                                                       LAR15300
C       27.    OPERAND MODIFIERS                                        LAR15400
C                                                                       LAR15500
      COMMON/OPMOD/OPMOD                                                LAR15600
      DIMENSION OPMOD(6)                                                LAR15700
C NOUGHT:      CONTAINS OPERAND TYPE 0                                  LAR15800
      EQUIVALENCE (NOUGHT,OPMOD(1))                                     LAR15900
C DLR:         CONTAINS OPERAND TYPE CODE 1                             LAR16000
      EQUIVALENCE (DLR,OPMOD(2))                                        LAR16100
C TRPDLR:      CONTAINS OPERAND TYPE CODE 3                             LAR16200
      EQUIVALENCE (TRPDLR,OPMOD(4))                                     LAR16300
C QUIDLR:      CONTAINS OPERAND TYPE CODE 5                             LAR16400
      EQUIVALENCE (QUIDLR,OPMOD(6))                                     LAR16500
C                                                                       LAR16600
C       28.    OPERAND MODIFIERS                                        LAR16700
C                                                                       LAR16800
      COMMON/SUBLST/SUBLST                                              LAR16900
      DIMENSION SUBLST(136),APTXXX(120)                                 LAR17000
C APTXXX:      NAMTBL POINTERS FOR XECUTION SUBROUTINE NAMES            LAR17100
      EQUIVALENCE (APTXXX(1),SUBLST(1))                                 LAR17200
C                                                                       LAR17300
C       29.    CLASS CODE MODULI                                        LAR17400
C                                                                       LAR17500
      COMMON/MODULI/MODULI                                              LAR17600
      DIMENSION MODULI(2)                                               LAR17700
C MODULO:      NAMTBL CLASS AND CODE FACTOR 1000 TO DEVIDE OUT CLASS    LAR17800
      EQUIVALENCE (MODULO,MODULI(1))                                    LAR17900
C MODHLF:      NORMAL MODE CODE LIMIT 500                               LAR18000
      EQUIVALENCE (MODHLF,MODULI(2))                                    LAR18100
C*                                                                      LAR18200
C PURPOSE      TO VALIDATE THE FORMAT OF LARGE DATA ARRAY DEFINITION    LAR18300
C              STATEMENTS AND TO GENERATE THE APPROPRIATE INTERMEDIATE  LAR18400
C              LANGUAGE.                                                LAR18500
C                                                                       LAR18600
C ARGUMENTS    ACTNO          MATCHING BASIC PRODUCTION ACTION NUMBER.  LAR18700
C              BIGCNT         DEFINITION ARGUMENT NUMBER + 1            LAR18800
C                                                                       LAR18900
C NOTES        DESCRIPTION OF THE CANSIZ ARRAY IN CDE PACKAGE NO. 12    LAR19000
C                  CANSIZ(1,I) = NUMBER OF WORDS IN THE EXTERNAL        LAR19100
C                                CANONICAL FORM OF A LARGE DATA ARRAY.  LAR19200
C                  CANSIZ(2,I) = THE NAME TABLE POINTER OF THE RESULT.  LAR19300
C              ALSO SEE NOTES FOR PRO020.                               LAR19400
C                                                                       LAR19500
C                                                                       LAR19600
      LOGICAL  FOULUP,NOMORE                                            LAR19700
      DIMENSION BIGSTK(12)                                              LAR19800
      CHARACTER*6 NORMAL                                                LAR19900
      DATA  NORMAL /'NORMAL'/                                           LAR20000
C                                                                       LAR20100
C***********************************************************************LAR20200
C                                                                       LAR20300
C... IF THIS IS THE FIRST TIME THRU FOR A GEOMETRIC DEFINITION,         LAR20400
C... INITIALIZE BIGSTK AND DO OTHER HOUSEKEEPING.                       LAR20500
C                                                                       LAR20600
      IF (BIGCNT .NE. 1)  GO TO 100                                     LAR20700
      FOULUP = .FALSE.                                                  LAR20800
      PNTCNT = 0                                                        LAR20900
      SLOPCT = 0                                                        LAR21000
      EP = 0                                                            LAR21100
      MATRX = BLANK(2)                                                  LAR21200
      VECTR = BLANK(2)                                                  LAR21300
      NOMORE = .FALSE.                                                  LAR21400
      INDEX = -18                                                       LAR21500
      FIRST = ZERO(1)                                                   LAR21600
      SECOND = ZERO(1)                                                  LAR21700
      TRFORM = ZERO(1)                                                  LAR21800
C                                                                       LAR21900
      BIGSTK(2) = -1                                                    LAR22000
      ERRPT=TOP-3                                                       LAR22100
      L = STACK(1,ERRPT)                                                LAR22200
      XYZ=MOD(NAMTBL(L),MODHLF)                                         LAR22300
      IF(L.GT.NAMMAX)GO TO 5                                            LAR22400
      IF(NAMTBL(L)/MODULO.EQ.IDENT(1)/MODULO)CALL SETMOD(TOP-3,PERMID)  LAR22500
    5 M=6                                                               LAR22600
      ASSIGN 10 TO N                                                    LAR22700
      GO TO 1000                                                        LAR22800
   10 BIGTOP = 6                                                        LAR22900
C                                                                       LAR23000
C... CHECK IF THIS IS FINAL PROCESSING FOR THIS DEFINITION.             LAR23100
C                                                                       LAR23200
  100 IF (ACTNO .NE. 102)   GO TO 500                                   LAR23300
C                                                                       LAR23400
C **********************************************************************LAR23500
C... PRODUCTION 102  ***************************************************LAR23600
C                                                                       LAR23700
C... IF AN ERROR WAS PREVIOUSLY ENCOUNTERED,SUPPRESS I.L. GENERATION    LAR23800
C                                                                       LAR23900
      IF(.NOT.FOULUP)GO TO 102                                          LAR24000
      LK=STACK(1,TOP-1)                                                 LAR24100
      KL=2                                                              LAR24200
      GO TO 3000                                                        LAR24300
(uafhcx) 183% 