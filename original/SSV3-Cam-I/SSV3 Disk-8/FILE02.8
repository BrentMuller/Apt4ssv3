cat afile02.8
      RINGFG=.FALSE.                                                    M0007100
      JCSEG=0                                                           M0007200
C                                                                       M0007300
C FIND THE NUMBER OF VALID SEGMENTS, ==> NCSEG                          M0007400
      DO 801 I=0,7                                                      M0007500
      IF(TCONT(I).NE.-1.D0) GOTO 801                                    M0007600
      N=I+1                                                             M0007700
      GOTO 802                                                          M0007800
  801 CONTINUE                                                          M0007900
C                                                                       M0008000
  802 DO 800 J=N,8                                                      M0008100
      IF(TCONT(J).EQ.0.D0) GOTO 800                                     M0008200
      NCSEG=NCSEG+1                                                     M0008300
C                                                                       M0008400
C NUMBER OF RELATET SEGMENT IN TLLDAT                                   M0008500
      ICSEG(NCSEG)=J                                                    M0008600
C                                                                       M0008700
C SEGMENT LINE OR CIRCLE                                                M0008800
      NLIOCI(NCSEG)=TLINC(J)                                            M0008900
C                                                                       M0009000
      IF(TLINC(J).NE.0.D0) GOTO 10                                      M0009100
C                                                                       M0009200
C SEGMENT IS AN ARC (CIRCLE)                                            M0009300
      IF(TANHI(J).GT.-1.D38) GOTO 11                                    M0009400
      SINAL(NCSEG)=0.D0                                                 M0009500
      GOTO 12                                                           M0009600
   11 SINAL(NCSEG)=1.D0/DSQRT(1.D0+(TANHI(J)*TANHI(J)))                 M0009700
C                                                                       M0009800
   12 IF(TANHI(J).GT.-1.D38) GOTO 13                                    M0009900
      COSAL(NCSEG)=-1.D0                                                M0010000
      GOTO 14                                                           M0010100
   13 COSAL(NCSEG)=TANHI(J)*SINAL(NCSEG)                                M0010200
C                                                                       M0010300
   14 CUTY(NCSEG)=TLHITE(J)                                             M0010400
      CUTX(NCSEG)=RI(J)                                                 M0010500
      CUTL(NCSEG)=CORRAD(J)                                             M0010600
      GOTO 800                                                          M0010700
C                                                                       M0010800
   10 IF(TLINC(J).NE.1.D0) GOTO 20                                      M0010900
C                                                                       M0011000
C SEGMENT IS A LINE                                                     M0011100
      SINAL(NCSEG)=SINL(J)                                              M0011200
      COSAL(NCSEG)=COSL(J)                                              M0011300
      CUTY(NCSEG)=TLHITE(J)                                             M0011400
      CUTX(NCSEG)=RI(J)                                                 M0011500
      CUTL(NCSEG)=UMAX(J)                                               M0011600
      GOTO 800                                                          M0011700
C                                                                       M0011800
C WRONG DATA IN TLINC, VALUE NOT LINE OR NOT CIRCLE                     M0011900
   20 CALL AERR(22218,'TLCONV  ')                                       M0012000
  800 CONTINUE                                                          M0012100
C                                                                       M0012200
C TEST PRINT-OUT OF THE CONVERTET AND CALCUALTED VALUES                 M0012300
      IF(.NOT.SSTEST) GOTO 999                                          M0012400
      CALL RECORD(NSEQ)                                                 M0012500
      BADMSG=' NEW CUTTER:'                                             M0012600
      CALL CPRINT(BADMSG)                                               M0012652
      CALL BAD (-1,0,'ISN ',NSEQ)                                       M0012700
C                                                                       M0012800
      DO 808 I=1,NCSEG                                                  M0012900
      LIOC=NLIOCI(I)                                                    M0013000
      CALL BAD ( 1,0,'LIOC',LIOC)                                       M0013100
      CALL BAD ( 1,1,'COAL',COSAL(I))                                   M0013200
      CALL BAD ( 1,1,'SIAL',SINAL(I))                                   M0013300
      CALL BAD ( 1,1,'CUTY',CUTY(I))                                    M0013400
      CALL BAD ( 1,1,'CUTX',CUTX(I))                                    M0013500
      CALL BAD (-1,1,'CUTL',CUTL(I))                                    M0013600
  808 CONTINUE                                                          M0013700
C                                                                       M0013800
  999 RETURN                                                            M0013900
      END                                                               M0014000
**** MODULE = INTCHECK ****
**** SOURCE FILE : ALGO1.ORG   ***
*
      SUBROUTINE ALGO1(T,R,RN,RU,RV,DU,DV)                              00000100
C                                                                       00000200
C     PURPOSE: CALCULATE DU,DV USING ALGORITHM 1                        00000300
C                                                                       00000400
C              GIVEN A SURFACE POINT R AND SURFACE NORMAL RN            00000500
C              AND A POINT ON THE TOOL T WITH SAME NORMAL               00000600
C              CALCULATE POINT B WHERE THIS TOOL NORMAL INTERSECTS      00000700
C              THE TANGENT PLANE AT R.                                  00000800
C              THE INDUCED PARAMETERIZATION OF THE TANGENT PLANE        00000900
C              IS USED TO DETERINE DU AND DV                            00001000
C                                                                       00001100
C                                                                       00001200
C     CALC. UVSTEP AS STEP ON TANGENT PLANE AT POINT R                  00001300
C                                                                       00001400
      DOUBLE PRECISION T,R,RN,RU,RV,UVSTEP,A,V4,S,DU,DV                 00001500
      DIMENSION T(3),R(3),RN(3),RU(3),RV(3),UVSTEP(3),V4(3)             00001600
C                                                                       00001700
      DO 100 I=1,3                                                      00001800
        V4(I)=T(I)-R(I)                                                 00001900
100   CONTINUE                                                          00002000
      CALL DOTF(A,V4,RN)                                                00002100
      DO 200 I=1,3                                                      00002200
        UVSTEP(I)=V4(I)-A*RN(I)                                         00002300
200   CONTINUE                                                          00002400
C                                                                       00002500
C.... S IS STEP LENGTH                                                  00002600
C                                                                       00002700
      CALL VECMOD(UVSTEP,S)                                             00002800
C                                                                       00002900
C.... COMPUTE DU,DV FROM INDUCED PARAMETERIZATION OF TANGENT PLANE      00003000
C                                                                       00003100
      CALL DEGSOL(UVSTEP,RU,RV,DU,DV,ISF)                               00003200
C                                                                       00003300
      END                                                               00003400
**** SOURCE FILE : ALGO2.ORG   ***
*
      SUBROUTINE ALGO2(TN,RU,RV,RUU,RUV,RVV,DU,DV,IOK)                  00000100
C                                                                       00000200
C     PURPOSE: CALCULATE DU,DV USING ALGORITHM 2                        00000300
C                                                                       00000400
C              GIVEN AN INITIAL SURFACE POINT, AND THE TOOL NORMAL TN   00000500
C              AT THE 'NEAREST' POINT ON THE TOOL,                      00000600
C              USING  A LOCAL QUADRATIC APPROXIMATION TO THE SURFACE    00000700
C              DETERMINE DU,DV OF POINT S WITH SAME NORMAL TN           00000800
C                                                                       00000900
C     ARGUMENTS:                                                        00001000
C                                                                       00001100
C            TN  - TOOL NORMAL AT 'NEAREST' POINT ON TOOL               00001200
C            RU,RV - FIRST DERIVATIVES AT R                             00001300
C            RUU,RUV,RVV - SECOND DERIVATIVES AT R                      00001400
C            DU,DV - ESTIMATED DU,DV USING ALGORITHM 2                  00001500
C            IOK   - FLAG INDICATING THAT DU,DV HAVE BEEN CALCULATED    00001600
C                                                                       00001700
      DOUBLE PRECISION TN,RU,RV,RUU,RUV,RVV,DU,DV                       00001800
      DIMENSION TN(3),RU(3),RV(3),RUU(3),RUV(3),RVV(3)                  00001900
      LOGICAL IOK                                                       00002000
C                                                                       00002100
C     LOCAL VARIABLES:                                                  00002200
C                                                                       00002300
      DOUBLE PRECISION A,B,C,D,E,F,ETA6                                 00002400
C                                                                       00002500
      PARAMETER (ETA6=1.D-6)                                            00002600
C                                                                       00002700
C.... COMPUTE DETERMINANT OF SECOND FUNDAMENTAL MATRIX OF SURFACE AT R  00002800
C                                                                       00002900
      CALL DOTF(A,TN,RUU)                                               00003000
      CALL DOTF(B,TN,RUV)                                               00003100
      CALL DOTF(C,TN,RVV)                                               00003200
C                                                                       00003300
      F=B*B-A*C                                                         00003400
C                                                                       00003500
      IF (ABS(F).LT.ETA6) THEN                                          00003600
C.... AT LEAST ONE CURVATURE IS ZERO, SURFACE IS LCALLY A RULED SURFACE 00003700
C     THEREFORE UNABLE TO COMPUTE DU,DV USING ALGORITHM 2               00003800
        IOK=.FALSE.                                                     00003900
      ELSE                                                              00004000
        IOK=.TRUE.                                                      00004100
C                                                                       00004200
        CALL DOTF(D,TN,RU)                                              00004300
        CALL DOTF(E,TN,RV)                                              00004400
C                                                                       00004500
        DU=(D*C-B*E)/F                                                  00004600
        DV=(A*E-B*D)/F                                                  00004700
      ENDIF                                                             00004800
C                                                                       00004900
      END                                                               00005000
**** SOURCE FILE : AVCTRL.ORG   ***
*
      SUBROUTINE AVCTRL(DONOFF,DAVTP1,G,BMN,BMX,DAVTP2,DMX)             00000100
C                                                                       00000200
C     PURPOSE: TO PROCESS THE AVCTRL STATEMENT                          00000300
C              SET FLAGS AND STORE PARAMETERS                           00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C               DONOFF   D.P.   ON OR OFF                               00000700
C                               INVOKES OR CANCELS AVOIDANCE CONTROL    00000800
C               DAVTP1   D.P.   TYPE1 AVOIDANCE CONTROL                 00000900
C                               (MODIFICATION OF TOOL AXIS)             00001000
C                                 CUTANG - MODIFY PITCH ANGLE           00001100
C                                 NULL   - NO MODIFICATION OF TOOL AXIS 00001200
C               G        D.P.   CONSTANT TECHNOLOGICAL ANGLE (DEGREES)  00001300
C               BMN      D.P.   MINIMUM PITCH ANGLE (DEGREES)           00001400
C               BMX      D.P.   MAXIMUM PITCH ANGLE (DEGREES)           00001500
C               DAVTP2   D.P.   TYPE2 AVOIDANCE CONTROL (LIFT OFF)      00001600
C                                 NORMPS - LIFT OFF NORMAL TO PS        00001700
C                                 AXIS   - LIFT OFF PARLLEL TO TOOL AXIS00001800
C                                 NULL   - NONE SPECIFIED (AXIS ASSUMED)00001900
C               DMX      D.P.   MAXIMUM LIFT OFF DISTANCE               00002000
C                                                                       00002100
C     LOCAL VARIABLES:                                                  00002200
C                                                                       00002300
C               ONOFF    C*6    CHARACTER VERSION OF DONOFF             00002400
C               AVTYP1   C*6        "        "    "  DAVTP1             00002500
C               AVTYP2   C*6        "        "    "  DAVTP2             00002600
C               NWD      I      NO OF INTEGER WORDS OCCUPIED BY         00002700
C                               ENCODED CHARACTER STRING                00002800
C               MSG      C*30   DEBUG PRINT MESSAGE                     00002900
C                                                                       00003000
      DOUBLE PRECISION DONOFF,DAVTP1,DAVTP2,G,BMN,BMX,DMX               00003100
      CHARACTER*6       ONOFF,AVTYP1,AVTYP2                             00003200
      INTEGER NWD                                                       00003300
      CHARACTER*30 MSG                                                  00003400
C                                                                       00003500
      INCLUDE 'RMFLGS.INC'                                              00003600
      INCLUDE 'AVCPRM.INC'                                              00003700
      INCLUDE 'ZNUMBR.INC'                                              00003800
      INCLUDE 'FXCOR.INC'                                               00003900
      INCLUDE 'IBUGG.INC'                                               00004000
C                                                                       00004100
      CALL HOLFRM(DONOFF,ONOFF,1,6,NWD)                                 00004200
      CALL HOLFRM(DAVTP1,AVTYP1,1,6,NWD)                                00004300
      CALL HOLFRM(DAVTP2,AVTYP2,1,6,NWD)                                00004400
C                                                                       00004500
C.... SET AVOIDANCE CONTROL FLAG                                        00004600
C                                                                       00004700
      IF (ONOFF.EQ.'ON') THEN                                           00004800
        LAVCTL=.TRUE.                                                   00004900
      ELSE                                                              00005000
        LAVCTL=.FALSE.                                                  00005100
      ENDIF                                                             00005200
C                                                                       00005300
C.... STORE PARAMETERS                                                  00005400
C                                                                       00005500
      IF (AVTYP1.EQ.'NULL'.AND.AVTYP2.EQ.'NULL') THEN                   00005600
C                                                                       00005700
C.... DO NOT ALTER PARAMETERS SINCE AVCTRL/ON OR AVCTRL/OFF             00005800
C                                                                       00005900
        CONTINUE                                                        00006000
      ELSE                                                              00006100
C                                                                       00006200
C.... TYPE 1 AVOIDANCE CONTROL                                          00006300
C                                                                       00006400
        IF (AVTYP1.EQ.'CUTANG') THEN                                    00006500
          LATYP1=.TRUE.                                                 00006600
C.... CONVERT ANGLES TO RADIANS BEFORE STORING                          00006700
          CTANG=G*DEGRAD                                                00006800
          BMIN=BMN*DEGRAD                                               00006900
          BMAX=BMX*DEGRAD                                               00007000
        ELSE                                                            00007100
          LATYP1=.FALSE.                                                00007200
          CTANG=Z0                                                      00007300
          BMIN=Z0                                                       00007400
          BMAX=Z0                                                       00007500
        ENDIF                                                           00007600
C                                                                       00007700
C.... TYPE 2 AVOIDANCE CONTROL                                          00007800
C                                                                       00007900
        IF (AVTYP2.EQ.'NORMPS') THEN                                    00008000
          LANPS=.TRUE.                                                  00008100
        ELSE                                                            00008200
          LANPS=.FALSE.                                                 00008300
        ENDIF                                                           00008400
C                                                                       00008500
C.... LIFT OFF LIMIT                                                    00008600
C                                                                       00008700
        IF (ABS(DMX-Z0).LT.Z1EM6) THEN                                  00008800
C.... NO LIMIT SPECIFIED - TAKE DPMAX AS DEFAULT                        00008900
          DMAX=DPMAX                                                    00009000
        ELSE                                                            00009100
          DMAX=DMX                                                      00009200
        ENDIF                                                           00009300
      ENDIF                                                             00009400
C                                                                       00009500
C.... DEBUG PRINT                                                       00009600
C                                                                       00009700
      IF (IBUG.EQ.11) THEN                                              00009800
        CALL BAD(-1,0,' ',0)                                            00009900
        MSG='0 AVOIDANCE CONTROL PARAMETERS'                            00010000
        CALL CPRINT(MSG)                                                00010100
        CALL BAD(1,1,'CANG',CTANG)                                      00010200
        CALL BAD(1,1,'BMIN',BMIN)                                       00010300
        CALL BAD(1,1,'BMAX',BMAX)                                       00010400
        CALL BAD(-1,1,'DMAX',DMAX)                                      00010500
        CALL BAD(1,0,'LTYP',LATYP1)                                     00010600
        CALL BAD(1,0,'LNPS',LANPS)                                      00010700
        CALL BAD(-1,0,'ALST',AVLIST)                                    00010800
      ENDIF                                                             00010900
C                                                                       00011000
      END                                                               00011100
**** SOURCE FILE : AVMSG.ORG   ***
*
      SUBROUTINE AVMSG(TE,TA,LANPS,B,TYPE,D)                            00000100
C                                                                       00000200
C     PURPOSE: PRINT MESSAGE WHEN INTERFERENCE SUCCESSFULLY AVOIDED     00000300
C                                                                       00000400
C     ARGUMENTS:                                                        00000500
C                                                                       00000600
C     TE    - TOOL END COORDINATES                                      00000700
C     TA    - TOOL AXIS VECTOR                                          00000800
C     LANPS - LIFT OFF DIRECTION VECTOR                                 00000900
C     B     - TILT ANGLE (IF ANY)                                       00001000
C     TYPE  - TYPE OF TILT (ROLL OR PITCH)                              00001100
C     D     - LIFT OFF DISTANCE                                         00001200
C                                                                       00001300
      DOUBLE PRECISION TE,TA,B,D                                        00001400
      DIMENSION TE(3),TA(3)                                             00001500
      CHARACTER*5 TYPE                                                  00001600
      LOGICAL LANPS                                                     00001700
C                                                                       00001800
C     GLOBAL VARIABLES:                                                 00001900
C                                                                       00002000
      INCLUDE 'ZNUMBR.INC'                                              00002100
C                                                                       00002200
C     LOCAL VARIABLES:                                                  00002300
C                                                                       00002400
C       MSG   - PRINT BUFFER                                            00002500
C                                                                       00002600
      CHARACTER*120 MSG                                                 00002700
C                                                                       00002800
      MSG=' '                                                           00002900
      CALL CFORM('INTERFERENCE SUCCESSFULLY AVOIDED BY',MSG,2,36)       00003000
      IPOS=39                                                           00003100
      IF (ABS(B-Z0).GT.Z1EM6) THEN                                      00003200
        CALL CFORM(TYPE,MSG,IPOS,5)                                     00003300
        IPOS=IPOS+4                                                     00003400
        IF (TYPE.EQ.'PITCH') IPOS=IPOS+1                                00003500
        CALL CFORM('ING THROUGH',MSG,IPOS,11)                           00003600
        IPOS=IPOS+12                                                    00003700
        BDEG=B/DEGRAD                                                   00003800
        CALL FCONV(BDEG,MSG,IPOS,6,2)                                   00003900
        IPOS=IPOS+7                                                     00004000
        CALL CFORM('DEGREES',MSG,IPOS,7)                                00004100
        IPOS=IPOS+8                                                     00004200
        IF (ABS(D-Z0).GT.Z1EM6) THEN                                    00004300
          CALL CFORM('AND',MSG,IPOS,3)                                  00004400
          IPOS=IPOS+4                                                   00004500
        ENDIF                                                           00004600
      ENDIF                                                             00004700
      IF (ABS(D-Z0).GT.Z1EM6) THEN                                      00004800
        CALL CFORM('LIFTING OFF BY',MSG,IPOS,14)                        00004900
        IPOS=IPOS+15                                                    00005000
        CALL FCONV(D,MSG,IPOS,10,4)                                     00005100
        IPOS=IPOS+11                                                    00005200
C                                                                       00005300
        IF (LANPS) THEN                                                 00005400
          CALL CFORM('NORMAL TO PS',MSG,IPOS,12)                        00005500
        ELSE                                                            00005600
          CALL CFORM('PARALLEL TO TA',MSG,IPOS,14)                      00005700
        ENDIF                                                           00005800
C                                                                       00005900
      ENDIF                                                             00006000
C                                                                       00006100
      CALL CPRINT(MSG)                                                  00006200
C                                                                       00006300
      END                                                               00006400
**** SOURCE FILE : AVOID.V01   ***
*
      SUBROUTINE AVOID(PSURF,IPSIZE,PSIDE,PTHICK,PTOLI,PTOLO,TOLCOM,FWD,00000100
     +                 TUL,TE,TA,R,NPAT,UP,VP,INTLOC,LRET)              00000200
C                                                                       00000300
C     PURPOSE:   TO CARRY OUT AVOIDANCE STRATEGIES WHEN INTERFERENCE    00000400
C                HAS BEEN DETECTED                                      00000500
C                                                                       00000600
C     ARGUMENTS:                                                        00000700
C                                                                       00000800
C     PSURF   -  CANONICAL FORM OF PART SURFACE                         00000900
C     IPSIZE  -  SIZE OF PS CANONICAL FORM                              00001000
C     PSIDE   -  1 OR -1 TO AJUST SURFACE NORMAL (RU X RV)              00001100
C     PTHICK  -  THICKNESS OFFSET FROM SURFACE                          00001200
C     PTOLI, PTOLO - PS TOLERANCE                                       00001300
C     TOLCOM  -  TOLERANCE BAND COMPENSATION                            00001400
C     FWD     -  DS FORWARD DIRECTION                                   00001500
C     TUL     -  TOOL GEOMETRY                                          00001600
C     TE      -  TOOL END COORDINATES                                   00001700
C     TA      -  TOOL AXIS VECTOR                                       00001800
C     R       -  SURFACE CONTACT POINT AND DERIVATIVES                  00001900
C     NPAT    -  PATCH NUMBER FOR CONTACT POINT                         00002000
C     UP,VP   -  U,V PARAMETERS OF CONTACT POINT                        00002100
C     INTLOC  -  LOCATION INTERFERENCE TABLE OF WORST PENETRATION       00002200
C     LRET    -  RETURN FLAG                                            00002300
C                .TRUE.  IF INTERFERENCE AVOIDED                        00002400
C                .FALSE. IF THERE IS STILL INTERFERENCE                 00002500
C                                                                       00002600
      DOUBLE PRECISION PSURF,PTHICK,PTOLI,PTOLO,FWD,TUL,TE,TA,R,UP,VP   00002700
      DOUBLE PRECISION PSIDE                                            00002750
      INTEGER IPSIZE,NPAT,INTLOC                                        00002800
      LOGICAL LRET                                                      00002850
C                                                                       00002900
      DIMENSION PSURF(IPSIZE),FWD(3),TUL(7),TE(3),TA(3),R(32)           00003000
C                                                                       00003100
C     GLOBAL VARIABLES                                                  00003200
C                                                                       00003300
      INCLUDE 'AVCPRM.INC'                                              00003400
      INCLUDE 'INTERF.INC'                                              00003500
      INCLUDE 'ZNUMBR.INC'                                              00003600
C                                                                       00003700
C     LOCAL VARIABLES                                                   00003800
C                                                                       00003900
C     B      - COMPUTED TILT ANGLE TO CLEAR INTERFERENCE                00004000
C     UL     - LOCAL AXIS IN FWD DIRECTION PERPTO TA                    00004100
C     S      - SIGN OF TILT ANGLE  (+VE IN FWD DIRECTION)               00004200
C     TCCENT - CENTRE OF TOOL CONTACT SPHERE                            00004300
C     TCRAD  - RADIUS OF TOOL CONTACT SPHERE                            00004400
C     CX     - PRINCIPLE CURVATURES, DIRECTIONS AND COEFFICIENTS        00004500
C     RCMIN  - MINIMUM RADIUS OF CURVATURE OF SURFACE AT CONTACT POINT  00004600
C     NPS    - PART SURFACE NORMAL AT POINT OF CONTACT                  00004700
C     VL     - LIFT OFF DIRECTION                                       00004800
C     D1,TEMP- LOCAL WORK VARIABLES                                     00004900
C     D      - LIFT OFF DISTANCE                                        00005000
C     E      - CURVATURE COMPENSATION                                   00005100
C     MSG    - PRINT BUFFER                                             00005200
C     MSG1,MSG2 - MESSAGES                                              00005300
C     IPOS   - LOCATION IN PRINT BUFFER                                 00005400
C     IRET   - INTCHK RETURN FLAG - .TRUE. IF INTERFERENCE DETECTED     00005500
C     JRET   - CALMXB RETURN FLAG - .TRUE. IF BETA CALC. OK             00005600
C     BDEG   - B IN DEGREES                                             00005700
C     TYPE   - TYPE OF TILT (ROLL OR PITCH)                             00005800
C     OLDTE  - ORIGINAL TE                                              00005900
C     OLDTA  - ORIGINAL TA                                              00006000
C     MAXK   - MAXIMUM CURVATURE                                        00006100
C                                                                       00006200
      DOUBLE PRECISION B,UL,S,TCCENT,TCRAD,CX,RCMIN,NPS,V,VL,D1,D,E,TEMP00006300
      DOUBLE PRECISION BDEG,OLDTE,OLDTA,MAXK                            00006400
      DIMENSION UL(3),TCCENT(3),CX(24),NPS(3),VL(3),OLDTE(3),OLDTA(3)   00006500
      CHARACTER*5 TYPE                                                  00006600
      CHARACTER*120 MSG,MSG1*52,MSG2*64                                 00006700
      INTEGER IPOS                                                      00006800
      LOGICAL IRET,JRET                                                 00006900
C                                                                       00007000
      DATA MSG1/'UNABLE TO AVOID INTERFERENCE WITH CURRENT PARAMETERS'/ 00007100
      DATA MSG2/                                                        00007200
     +'INTERFERENCE DIRECTION PERPENDICULAR TO SELECTED LIFT OFF VECTOR'00007300
     +/                                                                 00007350
C                                                                       00007400
      LRET=.FALSE.                                                      00007500
      B=Z0                                                              00007600
      D=Z0                                                              00007700
      MSG=' '                                                           00007800
C                                                                       00007900
C.... DETERMINE SURFACE NORMAL POINTING TOWARDS TOOL AT CONTACT POINT   00008000
C                                                                       00008100
      CALL VSCALE(PSIDE,R(29),NPS)                                      00008200
C                                                                       00008300
C.... COMPUTE PRINCIPLE CURVATURES OF SURFACE AT POINT OF CONTACT       00008400
C                                                                       00008500
      CALL KURSRF(R,PSIDE,CX)                                           00008600
C                                                                       00008700
C.... DETERMINE MINIMUM RADIUS OF CURVATURE OF SURFACE AT CONTACT POINT 00008800
C                                                                       00008900
      MAXK=MAX(CX(1),CX(2))                                             00009000
      IF (ABS(MAXK).GT.Z1EM6) THEN                                      00009100
        RCMIN=Z1/MAXK                                                   00009200
      ELSE                                                              00009300
        RCMIN=Z1E6                                                      00009400
      ENDIF                                                             00009500
C                                                                       00009600
      IF (LATYP1) THEN                                                  00009700
C                                                                       00009800
C.... FIRST TRY AVOIDING INTERFERENCE BY TILTING TOOL                   00009900
C     IN THE MOST APPROPRIATE DIRECTION INDICATED BY TYPE AND UL        00010000
C                                                                       00010100
        CALL CALCB(TA,FWD,R,INTLOC,B,TYPE,UL)                           00010200
C                                                                       00010300
C.... ADD CONSTANT TECHNOLOGICAL ANGLE (TO CLEAR SURFACE)               00010400
C                                                                       00010500
        S=SIGN(Z1,B)                                                    00010600
        B=B+S*CTANG                                                     00010700
C                                                                       00010800
C.... IS B WITHIN PERMITTED RANGE                                       00010900
C                                                                       00011000
        IF (B.LT.BMIN) THEN                                             00011100
          B=BMIN                                                        00011200
        ELSE IF (B.GT.BMAX) THEN                                        00011300
          B=BMAX                                                        00011400
        ENDIF                                                           00011500
C                                                                       00011600
C.... COMPUTE NEW TA TILTED THROUGH B IN UL DIRECTION                   00011700
C     SAVE OLD TE AND TA                                                00011800
C                                                                       00011900
        DO 10 I=1,3                                                     00012000
          OLDTE(I)=TE(I)                                                00012100
          OLDTA(I)=TA(I)                                                00012200
          TA(I)=COS(B)*TA(I)+SIN(B)*UL(I)                               00012300
   10   CONTINUE                                                        00012400
C                                                                       00012500
C.... COMPUTE NEW TE                                                    00012600
C                                                                       00012700
        CALL TECALC(R,TA,FWD,PSIDE,PTHICK,TOLCOM,TUL,TE)                00012800
C                                                                       00012900
C.... COMPUTE CENTRE AND RADIUS OF TOOL CONTACT SPHERE                  00013000
C                                                                       00013100
        CALL TCSPHR(TE,TA,TUL,R,PSIDE,PTHICK,TCCENT,TCRAD)              00013200
C                                                                       00013300
C.... IS THERE LOCAL INTERFERENCE                                       00013400
C                                                                       00013500
        IF (TCRAD.GT.RCMIN) THEN                                        00013600
C.... YES                                                               00013700
          IF ( (ABS(TCRAD-TUL(1)).GT.Z1EM6).AND.                        00013800
     +         ((TUL(1)+TUL(3)).LT.RCMIN) ) THEN                        00013900
C.... COMPUTE MAXIMUM TILT ANGLE TO FIT SURFACE                         00014000
            CALL CALMXB(RCMIN,TUL,OLDTA,UL,NPS,B,JRET)                  00014100
C.... HAS ANGLE BEEN COMPUTED SATISFACTORILY                            00014200
C     AND IS ANGLE WITHIN PERMITTED RANGE                               00014300
            IF ( JRET.AND.(B.GE.BMIN).AND.(B.LE.BMAX) ) THEN            00014400
C                                                                       00014500
C.... YES - COMPUTE NEW TA TILTED THROUGH B IN FWD (UL) DIRECTION       00014600
C                                                                       00014700
              DO 20 I=1,3                                               00014800
                TA(I)=COS(B)*OLDTA(I)+SIN(B)*UL(I)                      00014900
   20         CONTINUE                                                  00015000
C                                                                       00015100
C.... COMPUTE NEW TE                                                    00015200
C                                                                       00015300
              CALL TECALC(R,TA,PSIDE,PTHICK,PTOLI,PTOLO,TUL,TE)         00015400
C                                                                       00015500
            ELSE                                                        00015600
C                                                                       00015700
C.... NO - LIFTOFF                                                      00015800
C                                                                       00015900
              B=Z0                                                      00016000
C                                                                       00016100
              IF (AVLIST) THEN                                          00016200
                CALL CFORM('UNABLE TO FIND TOOL AXIS ORIENTATION',      00016300
     +                      MSG,2,36)                                   00016400
                CALL CFORM('WITHIN SELECTED RANGE',MSG,39,21)           00016500
                CALL CPRINT(MSG)                                        00016600
                CALL CFORM('WHERE TOOL CAN BE POSITIONED IN',MSG,2,31)  00016700
                CALL CFORM('NON-INTERFERING CONTACT WITH SURFACE',      00016800
     +                      MSG,36,36)                                  00016900
                CALL CPRINT(MSG)                                        00017000
                CALL BAD(3,1,'R   ',R(1))                               00017100
                CALL BAD(1,0,'NPAT',NPAT)                               00017200
                CALL BAD(1,1,'U   ',UP)                                 00017300
                CALL BAD(-1,1,'V   ',VP)                                00017400
              ENDIF                                                     00017500
C                                                                       00017600
C.... RESTORE OLD TE AND TA                                             00017700
C                                                                       00017800
              DO 25 I=1,3                                               00017900
                TE(I)=OLDTE(I)                                          00018000
                TA(I)=OLDTA(I)                                          00018100
   25         CONTINUE                                                  00018200
C                                                                       00018300
              GOTO 100                                                  00018400
            ENDIF                                                       00018500
          ELSE                                                          00018600
C                                                                       00018700
C.... RADIUS OF TOOL CONTACT SPHERE = TOOL CORNER RADIUS - LIFT OFF     00018800
C                                                                       00018900
            B=Z0                                                        00019000
            IF (AVLIST) THEN                                            00019100
               MSG='TOOL RADIUS GT RADIUS OF CURVATURE AT'              00019200
              CALL CPRINT(MSG)                                          00019300
              CALL BAD(3,1,'R   ',R(1))                                 00019400
              CALL BAD(1,0,'NPAT',NPAT)                                 00019500
              CALL BAD(1,1,'U   ',UP)                                   00019600
              CALL BAD(-1,1,'V   ',VP)                                  00019700
            ENDIF                                                       00019800
C                                                                       00019900
C.... RESTORE OLD TE AND TA                                             00020000
C                                                                       00020100
            DO 26 I=1,3                                                 00020200
              TE(I)=OLDTE(I)                                            00020300
              TA(I)=OLDTA(I)                                            00020400
   26       CONTINUE                                                    00020500
C                                                                       00020600
            GOTO 100                                                    00020700
          ENDIF                                                         00020800
        ENDIF                                                           00020900
C                                                                       00021000
C.... CHECK NEW POSTION (TE,TA) FOR INTERFERENCE                        00021100
C                                                                       00021200
C.... SAVE ORIGINAL INTERFERENCE DATA TO USE FOR START POINTS           00021300
C                                                                       00021400
        CALL RESET                                                      00021500
        CALL INTCHK(PSURF,IPSIZE,PSIDE,PTHICK,PTOLI,TUL,                00021600
     +              TE,TA,R,NPAT,UP,VP,IRET,INTLOC)                     00021700
C                                                                       00021800
        IF (.NOT.IRET) THEN                                             00021900
C.... AVOIDANCE SUCCESSFUL - RESTORE ORIGINAL INTERFERENCE DATA         00022000
          CALL RESTOR                                                   00022100
          IF (AVLIST) CALL AVMSG(TE,TA,LANPS,B,TYPE,Z0)                 00022200
          LRET=.TRUE.                                                   00022300
          GOTO 999                                                      00022400
        ENDIF                                                           00022500
      ENDIF                                                             00022600
C                                                                       00022700
C.... IF TILTING UNSUCCESSFUL OR LIFT OFF ONLY SELECTED                 00022800
C                                                                       00022900
C.... TRY AVOIDING INTERFERENCE BY LIFTING THE TOOL OFF THE SURFACE     00023000
C     IN THE SPECIFIED DIRECTION                                        00023100
C                                                                       00023200
  100 CONTINUE                                                          00023300
C                                                                       00023400
C.... COMPUTE LIFT OFF DISTANCE                                         00023500
C                                                                       00023600
C     VL - LIFT OFF DIRECTION                                           00023700
C                                                                       00023800
      DO 30 I=1,3                                                       00023900
        IF (LANPS) THEN                                                 00024000
          VL(I)=NPS(I)                                                  00024100
        ELSE                                                            00024200
          VL(I)=TA(I)                                                   00024300
        ENDIF                                                           00024400
   30 CONTINUE                                                          00024500
C                                                                       00024600
      CALL VNORM(VL,VL)                                                 00024700
C                                                                       00024800
      CALL DOTV(D1,SNINTR(1,INTLOC),VL)                                 00024900
      IF (ABS(D1).LT.Z1EM6) THEN                                        00025000
        IF (AVLIST) THEN                                                00025100
          CALL OUTMSG(MSG1)                                             00025200
          CALL OUTMSG(MSG2)                                             00025300
        ENDIF                                                           00025400
      ELSE                                                              00025500
C                                                                       00025600
C.... LIFT OFF IN DIRECTION VL                                          00025700
C                                                                       00025800
        D=DINTR(INTLOC)/D1                                              00025900
C                                                                       00026000
C.... COMPUTE CURVATURE COMPENSATION FOR CONCAVE SURFACE                00026100
C                                                                       00026200
        IF (RCMIN.GT.Z0) THEN                                           00026300
          TEMP=RCMIN*RCMIN - DINTR(I)*DINTR(I) + D*D                    00026400
          IF (TEMP.GT.Z0) THEN                                          00026500
            E=SQRT(TEMP)-RCMIN                                          00026600
          ELSE                                                          00026700
            E=Z0                                                        00026800
          ENDIF                                                         00026900
        ELSE                                                            00027000
          E=Z0                                                          00027100
        ENDIF                                                           00027200
C                                                                       00027300
C.... LIFT OFF - COMPENSATED FOR CURVATURE, AND INCREASED BY OUTTOL     00027400
C                                                                       00027500
        D = D + E + PTOLO                                               00027600
C                                                                       00027700
        IF (ABS(D).LE.DMAX) THEN                                        00027800
C                                                                       00027900
C.... LIFTOFF WITHIN SPECIFIED LIMIT - COMPUTE NEW TE (TA UNCHANGED)    00028000
C                                                                       00028100
          DO 40 I=1,3                                                   00028200
            TE(I)=TE(I)+D*VL(I)                                         00028300
   40     CONTINUE                                                      00028400
C                                                                       00028500
          IF (LANPS) THEN                                               00028600
C.... IF LIFT OFF NORMAL TO PS CHECK FOR INTERFERENCE                   00028700
            CALL RESET                                                  00028800
            CALL INTCHK(PSURF,IPSIZE,PSIDE,PTHICK,PTOLI,TUL,            00028900
     +                  TE,TA,R,NPAT,UP,VP,IRET,INTLOC)                 00029000
            IF (IRET) THEN                                              00029100
C... STILL INTERFERENCE                                                 00029200
              IF (AVLIST) THEN                                          00029300
                CALL OUTMSG(MSG1)                                       00029400
                CALL INTMSG(TE,TA,INTLOC)                               00029500
                CALL CFORM('ACTION ATTEMPTED -',MSG,1,18)               00029600
                IPOS=21                                                 00029700
                IF (ABS(B-Z0).GT.Z1EM6) THEN                            00029800
                  CALL CFORM(TYPE,MSG,IPOS,5)                           00029900
                  IPOS=IPOS+6                                           00030000
                  CALL CFORM('THROUGH',MSG,IPOS,7)                      00030100
                  IPOS=IPOS+8                                           00030200
                  BDEG=B/DEGRAD                                         00030300
                  CALL FCONV(BDEG,MSG,IPOS,6,2)                         00030400
                  IPOS=IPOS+7                                           00030500
                  CALL CFORM('DEGREES AND',MSG,IPOS,11)                 00030600
                  IPOS=IPOS+12                                          00030700
                ENDIF                                                   00030800
                CALL CFORM('LIFTED OFF BY',MSG,IPOS,13)                 00030900
                IPOS=IPOS+14                                            00031000
                CALL FCONV(D,MSG,IPOS,10,4)                             00031100
                IPOS=IPOS+11                                            00031200
                CALL CFORM('NORMAL TO PS',MSG,IPOS,12)                  00031300
                CALL CPRINT(MSG)                                        00031400
              ENDIF                                                     00031500
              GOTO 999                                                  00031600
            ENDIF                                                       00031700
C                                                                       00031800
C.... RESTORE INTEFERENCE DATA FOR USE AS NEXT START VALUES             00031900
C                                                                       00032000
            CALL RESTOR                                                 00032100
          ENDIF                                                         00032200
C                                                                       00032300
C.... AVOIDANCE SUCCESSFUL                                              00032400
C                                                                       00032500
          IF (AVLIST) CALL AVMSG(TE,TA,LANPS,B,TYPE,D)                  00032600
          LRET=.TRUE.                                                   00032700
C                                                                       00032800
        ELSE                                                            00032900
C                                                                       00033000
C.... COMPUTED LIFT OFF GREATER THAN LIMIT                              00033100
C                                                                       00033200
          IF (AVLIST) THEN                                              00033300
            CALL OUTMSG(MSG1)                                           00033400
            CALL CFORM('LIFT OFF',MSG,2,8)                              00033500
            CALL FCONV(D,MSG,11,10,4)                                   00033600
            IF (LANPS) THEN                                             00033700
              CALL CFORM('NORMAL TO PS',MSG,22,12)                      00033800
            ELSE                                                        00033900
              CALL CFORM('PARALLEL TO TA',MSG,22,14)                    00034000
            ENDIF                                                       00034100
            CALL CPRINT(MSG)                                            00034200
          ENDIF                                                         00034300
C                                                                       00034400
        ENDIF                                                           00034500
C                                                                       00034600
      ENDIF                                                             00034700
C                                                                       00034800
  999 CONTINUE                                                          00034900
C                                                                       00035000
      END                                                               00035100
**** SOURCE FILE : BDAVCP.ORG   ***
*
      BLOCK DATA BDAVCP                                                 00000100
C                                                                       00000200
C       INITIALIZATION OF AVOIDANCE CONTROL PARAMETERS                  00000300
C                                                                       00000400
      INCLUDE 'AVCPRM.INC'                                              00000500
C                                                                       00000600
      DATA CTANG/0.D0/,BMIN/0.D0/,BMAX/0.D0/,DMAX/0.D0/                 00000700
      DATA LATYP1/.FALSE./,LANPS/.FALSE./,AVLIST/.FALSE./               00000800
C                                                                       00000900
      END                                                               00001000
**** SOURCE FILE : BDINID.ORG   ***
*
      BLOCK DATA BDINID                                                 00000100
C                                                                       00000200
C.... INITIALIZE INTERFERENCE CHECKING INITIAL DATA                     00000300
C                                                                       00000400
      INCLUDE 'INIDAT.INC'                                              00000500
C                                                                       00000600
      PARAMETER (MXNP24=24*MXNP)                                        00000700
      DATA CXHULL/MXNP24*0.D0/,DULIM/MXNP*0.D0/,DVLIM/MXNP*0.D0/        00000800
      DATA CURMAX/MXNP*0.D0/,CURMIN/MXNP*0.D0/                          00000900
      DATA NCXHUL/MXNP*0.D0/,NGP/0/,ICURSF/0/                           00001000
C                                                                       00001100
      END                                                               00001200
**** SOURCE FILE : BDINT.ORG   ***
*
      BLOCK DATA BDINT                                                  00000100
C                                                                       00000200
C.... INITIALIZE INTERFERENCE TABLE                                     00000300
C                                                                       00000400
      INCLUDE 'INTERF.INC'                                              00000500
C                                                                       00000600
      INTEGER MAXNP3                                                    00000700
      PARAMETER (MAXNP3=3*MAXNP)                                        00000800
      DATA DINTR/MAXNP*0.D0/,UINTR/MAXNP*0.D0/,VINTR/MAXNP*0.D0/        00000900
      DATA LDINTR/MAXNP*0.D0/,LUINTR/MAXNP*0.D0/,LVINTR/MAXNP*0.D0/     00001000
      DATA TPINTR/MAXNP3*0.D0/,SPINTR/MAXNP3*0.D0/,SNINTR/MAXNP3*0.D0/  00001100
      DATA PINTR/MAXNP*0/,LPINTR/MAXNP*0/,ISEG/MAXNP*0/                 00001200
      DATA NPINTR/0/,LNPINT/0/                                          00001300
C                                                                       00001400
      END                                                               00001500
                                                                        00001600
**** SOURCE FILE : CALCB.V01   ***
*
      SUBROUTINE CALCB(W,FWD,R,INTLOC,B,TYPE,TL)                        00000100
C                                                                       00000200
C     PURPOSE:  TO COMPUTE TILT ANGLE B TO AVOID INTERFERENCE           00000300
C               AT WORST LOCATION (INTLOC)                              00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C       W      - AXIS THROUGH CONTACT POINT PARLLEL TO TA               00000700
C       FWD    - DS FORWARD DIRECTION                                   00000800
C       R      - SURFACE CONTACT POINT AND DERIVATIVES                  00000900
C       INTLOC - LOCATION IN INTERFERENCE TABLE OF WORST PENETRATION    00001000
C       B      - TILT ANGLE TO CLEAR INTERFERENCE                       00001100
C       TYPE   - TYPE OF TILT (ROLL OR PITCH)                           00001200
C       TL     - APPROP. LOCAL AXIS THAT DEFINES PLANE OF TILT WITH TA  00001300
C                                                                       00001400
      DOUBLE PRECISION W,FWD,R,B,TL                                     00001500
      DIMENSION W(3),FWD(3),R(32),TL(3)                                 00001600
      INTEGER INTLOC                                                    00001700
      CHARACTER*5 TYPE                                                  00001800
C                                                                       00001900
C     GLOBAL VARIABLES:                                                 00002000
C                                                                       00002100
      INCLUDE 'INTERF.INC'                                              00002200
C                                                                       00002300
C     LOCAL VARIABLES:                                                  00002400
C                                                                       00002500
C       U      - LOCAL AXIS IN FORWARD DIRECTION PERPTO W               00002600
C       V      - LOCAL AXIS ORTHOGONAL TO W AND U                       00002700
C       S      - SPINTR AT INTLOC WRT LOCAL ORIGIN AT CONTACT POINT     00002800
C       T      - TPINTR AT INTLOC WRT LOCAL ORIGIN AT CONTACT POINT     00002900
C       SPA    - PROJECTION OF S ONTO WU PLANE                          00003000
C       TPA    - PROJECTION OF T ONTO WU PLANE                          00003100
C       CPHI   - COS(PHI)                                               00003200
C       PHI    - TILT ANGLE                                             00003300
C       A      - TPA X SPA                                              00003400
C       SI     - DIRECTION OF PHI (+VE IN FWD DIRECTION)                00003500
C       SU,SV  - PROJECTIONS OF S ONTO U AND V AXES                     00003600
C       C      - WORK VARIABLE                                          00003700
C                                                                       00003800
      DOUBLE PRECISION U,V,S,T,SPA,TPA,CPHI,PHI,A,SI                    00003900
      DIMENSION U(3),V(3),S(3),T(3),SPA(3),TPA(3),A(3)                  00004000
      DOUBLE PRECISION SU,SV,C                                          00004100
C                                                                       00004200
      DOUBLE PRECISION ETA,BIG,ONE                                      00004300
      PARAMETER (ETA=1.D-6,BIG=1.D6,ONE=1.D0)                           00004400
C                                                                       00004500
C.... COMPUTE LOCAL AXES AT CONTACT POINT                               00004600
C                                                                       00004700
      CALL CROSSV(W,FWD,V)                                              00004800
      CALL CROSSV(V,W,U)                                                00004900
C                                                                       00005000
C.... COMPUTE S,T                                                       00005100
C                                                                       00005200
      DO 10 I=1,3                                                       00005300
        S(I)=SPINTR(I,INTLOC)-R(I)                                      00005400
        T(I)=TPINTR(I,INTLOC)-R(I)                                      00005500
   10 CONTINUE                                                          00005600
C                                                                       00005700
C.... PROJECT S ONTO LOCAL UV PLANE                                     00005800
C                                                                       00005900
      CALL DOTF(SU,S,U)                                                 00006000
      CALL DOTF(SV,S,V)                                                 00006100
C                                                                       00006200
      IF (ABS(SV).LT.ETA) THEN                                          00006300
        C=BIG                                                           00006400
      ELSE                                                              00006500
        C=SU/SV                                                         00006600
      ENDIF                                                             00006700
C                                                                       00006800
C.... SELECT DIRECTION OF TILT                                          00006900
C                                                                       00007000
      IF (ABS(C).GE.ONE) THEN                                           00007100
C.... PITCH TOOL - TILT ABOUT V                                         00007200
        TYPE='PITCH'                                                    00007300
        DO 20 I=1,3                                                     00007400
          TL(I)=U(I)                                                    00007500
  20    CONTINUE                                                        00007600
      ELSE                                                              00007700
C.... ROLL TOOL - TILT ABOUT U                                          00007800
        TYPE='ROLL'                                                     00007900
        DO 30 I=1,3                                                     00008000
          TL(I)=V(I)                                                    00008100
  30    CONTINUE                                                        00008200
      ENDIF                                                             00008300
C                                                                       00008400
C.... PROJECT S,T ONTO LOCAL PLANE OF TILT                              00008500
C                                                                       00008600
      IF (TYPE.EQ.'PITCH') THEN                                         00008650
        CALL DOTF(SPA(1),S,U)                                           00008700
        SPA(2)=0.D0                                                     00008750
        CALL DOTF(TPA(1),T,U)                                           00008800
        TPA(2)=0.D0                                                     00008850
      ELSE                                                              00008900
        SPA(1)=0.D0                                                     00008950
        CALL DOTF(SPA(2),S,V)                                           00009000
        TPA(1)=0.D0                                                     00009050
        CALL DOTF(TPA(2),S,V)                                           00009100
      ENDIF                                                             00009150
      CALL DOTF(SPA(3),S,W)                                             00009200
      CALL DOTF(TPA(3),T,W)                                             00009250
C                                                                       00009300
C.... COMPUTE TILT ANGLE PHI                                            00009400
C                                                                       00009500
      CALL VNORM(SPA,SPA)                                               00009600
      CALL VNORM(TPA,TPA)                                               00009700
      CALL DOTF(CPHI,SPA,TPA)                                           00009800
      PHI=ACOS(CPHI)                                                    00009900
C                                                                       00010000
C.... DETERMINE DIRECTION OF PHI                                        00010100
C                                                                       00010200
      CALL CROSS(TPA,SPA,A)                                             00010300
      IF (TYPE.EQ.'PITCH') THEN                                         00010400
        CALL DOTF(SI,A,V)                                               00010500
      ELSE                                                              00010600
        CALL DOTF(SI,A,U)                                               00010700
      ENDIF                                                             00010800
      SI=SIGN(1.D0,SI)                                                  00010900
C                                                                       00011000
C.... COMPUTE TILT ANGLE                                                00011100
C                                                                       00011200
      B=SI*PHI                                                          00011300
C                                                                       00011400
      END                                                               00011500
**** SOURCE FILE : CALCT.V01   ***
*
      SUBROUTINE CALCT(TUL,TOOLCE,TOOLAX,R,RN,PSIDE,T,LBASE)            00000100
C                                                                       00000200
C     PURPOSE: TO CALCULATE T, POINT ON TOOL WITH SAME NORMAL AS        00000300
C              SURFACE AT POINT R, RN                                   00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C         TUL     - TOOL GEOMETRY                                       00000700
C         TOOLCE  - TOOL CENTER POINT                                   00000800
C         TOOLAX  - TOOLAXIS VECTOR                                     00000900
C         R       - SURFACE POINT                                       00001000
C         RN      - SURFACE NORMAL                                      00001100
C         PSIDE   - TOOL SIDE OF SURFACE                                00001200
C         T       - POINT ON TOOL WITH SAME NORMAL                      00001300
C         LBASE   - FLAG INDICATING THAT T IS ON BASE FLAT OF CUTTER    00001400
C                                                                       00001500
      DOUBLE PRECISION TUL,TOOLCE,TOOLAX,R,RN,PSIDE,T                   00001600
      DIMENSION TUL(7),TOOLCE(3),TOOLAX(3),R(3),RN(3),T(3)              00001700
      LOGICAL LBASE                                                     00001800
C                                                                       00001900
C     LOCAL VARIABLES:                                                  00002000
C                                                                       00002100
      DOUBLE PRECISION ETA6,V1,V2,A,A1,B,C,D,SN,ZERO,TCYLEN             00002200
      DIMENSION V1(3),V2(3),SN(3)                                       00002300
      PARAMETER (ETA6=1.D-6, ZERO=0.D0)                                 00002400
C                                                                       00002500
      LBASE=.FALSE.                                                     00002600
C                                                                       00002620
C.... COMPUTE LENGTH OF TOOL CYLINDER                                   00002630
C                                                                       00002640
      TCYLEN=TUL(7)-TUL(4)+TUL(1)                                       00002650
C                                                                       00002700
C.... ADJUST DIRECTION OF SURFACE NORMAL                                00002800
C                                                                       00002900
      DO 10 I=1,3                                                       00003000
        SN(I)=PSIDE*RN(I)                                               00003100
  10  CONTINUE                                                          00003200
C                                                                       00003300
C.... DIRECTION OF SURFACE NORMAL WRT TO TOOLAXIS                       00003400
C                                                                       00003500
      CALL DOTF(A1,SN,TOOLAX)                                           00003600
C                                                                       00003610
      IF ((A1.LT.ZERO).AND.(ABS(A1).GT.ETA6)) THEN                      00003620
C.... TAKE T AT TOP OF UPPER LINE SEGMENT                               00003625
        DO 100 I=1,3                                                    00003630
          V1(I)=R(I) - TOOLCE(I)                                        00003632
  100   CONTINUE                                                        00003634
        CALL DOTF(A,V1,TOOLAX)                                          00003640
        DO 102 I=1,3                                                    00003650
          V2(I)=V1(I) - A*TOOLAX(I)                                     00003652
  102   CONTINUE                                                        00003654
        CALL VNORM(V2,V2)                                               00003660
        DO 104 I=1,3                                                    00003670
          T(I)=TOOLCE(I) + TUL(2)*V2(I) + TCYLEN*TOOLAX(I)              00003672
  104   CONTINUE                                                        00003674
      ELSE                                                              00003680
C                                                                       00003700
C.... COMPUTATION DEPENDENT ON TYPE OF TOOL                             00003800
C                                                                       00003900
C                                                                       00004000
        IF (ABS(TUL(1)-TUL(2)).LE.ETA6) THEN                            00004100
C.... BALL-ENDED CUTTER                                                 00004200
            DO 110 I=1,3                                                00004300
              V1(I)=R(I)-TOOLCE(I)                                      00004400
              T(I)=TOOLCE(I)-TUL(1)*SN(I)                               00004500
110         CONTINUE                                                    00004600
            CALL DOTF(A,V1,TOOLAX)                                      00004700
C.... LIMIT A TO VALID RANGE FOR TOOL CYLINDER                          00004710
            IF (A.LT.ZERO) A=ZERO                                       00004720
            IF (A.GT.TCYLEN) A=TCYLEN                                   00004730
C                                                                       00004740
            IF (ABS(A1).LT.ETA6) THEN                                   00004800
C.... ON CYLINDER                                                       00004900
                  DO 120 I=1,3                                          00005000
                    T(I)=T(I)+A*TOOLAX(I)                               00005100
120               CONTINUE                                              00005200
            END IF                                                      00005300
        ELSE                                                            00005400
C                                                                       00005500
C     CORNER RADIUS CUTTER                                              00005600
C     FIND TOOL POINT T WITH SAME NORMAL                                00005700
C                                                                       00005800
          IF (ABS(A1).LT.ETA6) THEN                                     00005900
C                                                                       00006000
C.... CYLINDER CASE                                                     00006100
C                                                                       00006200
            DO 130 I=1,3                                                00006300
              V1(I)=R(I)-TOOLCE(I)                                      00006400
130         CONTINUE                                                    00006500
            CALL DOTF(A,V1,TOOLAX)                                      00006600
C.... LIMIT A TO VALID RANGE FOR TOOL CYLINDER                          00006610
            IF (A.LT.ZERO) A=ZERO                                       00006620
            IF (A.GT.TCYLEN) A=TCYLEN                                   00006630
C.... NOTE IN THIS CASE SN IS PERP. TO TA SO T WILL LIE ON CYLINDER     00006640
            DO 140 I=1,3                                                00006600
              T(I)=TOOLCE(I)+A*TOOLAX(I)-TUL(2)*SN(I)                   00006800
140         CONTINUE                                                    00006900
          ELSE IF ((1.D0-A1).LT.ETA6) THEN                              00007000
C                                                                       00007100
C.... BOTTOM FLAT CASE                                                  00007200
C                                                                       00007300
            DO 150 I=1,3                                                00007400
              V1(I)=TOOLCE(I)-R(I)                                      00007500
150         CONTINUE                                                    00007600
            CALL DOTF(B,V1,TOOLAX)                                      00007700
            DO 155 I=1,3                                                00007800
             V1(I)=V1(I) - B*TOOLAX(I)                                  00007900
155         CONTINUE                                                    00008000
            CALL NORMA(V1,V2,D)                                         00008050
            IF (D.GT.TUL(3)) D=TUL(3)                                   00008100
            C=TUL(4)+TUL(2)                                             00008150
            DO 160 I=1,3                                                00008200
              T(I)=TOOLCE(I) -  C*TOOLAX(I) - D*V2(I)                   00008300
160         CONTINUE                                                    00008400
C.... INDICATE T IS ON FLAT BASE OF CUTTER                              00008500
            LBASE=.TRUE.                                                00008600
          ELSE                                                          00008700
C.... CORNER RADIUS CASE                                                00008800
            DO 170 I=1,3                                                00008900
              V1(I)=SN(I)-A1*TOOLAX(I)                                  00009000
170         CONTINUE                                                    00009100
            CALL VECMOD(V1,A)                                           00009200
            C=TUL(3)/A                                                  00009300
            DO 180 I=1,3                                                00009400
              T(I)=TOOLCE(I)-C*V1(I)-TUL(1)*SN(I)                       00009500
180         CONTINUE                                                    00009600
C                                                                       00009700
          ENDIF                                                         00009800
C                                                                       00009820
        ENDIF                                                           00009840
C                                                                       00009900
      ENDIF                                                             00010000
C                                                                       00010100
      END                                                               00010200
**** SOURCE FILE : CALMXB.ORG   ***
*
      SUBROUTINE CALMXB(RS,TUL,W,U,SN,BETA,LRET)                        00000100
C                                                                       00000200
C     PURPOSE: TO COMPUTE MAXIMUM TILT ANGLE WHERE TOOL WILL FIT        00000300
C              INTO CONCAVE SURFACE                                     00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C       RS     - MINIMUM RADIUS OF CURVATURE OF SURFACE AT CONTACT POINT00000700
C       TUL    - TOOL GEOMETRY                                          00000800
C       W      - ORIGINAL TOOL AXIS                                     00000900
C       U      - LOCAL AXIS DIRECTION ORTHOGONAL TO W IN DIRECTION      00001000
C                OF POSITIVE TILT                                       00001100
C       SN     - SURFACE NORMAL AT POINT OF CONTACT (TOWARDS TOOL)      00001200
C       BETA   - TILT ANGLE                                             00001300
C                  VALUE ON INPUT WILL BE IDEAL TILT TO CLEAR SURFACE   00001400
C                  AND WILL BE USED TO DETERMINE WHICH OF THE           00001500
C                  TWO ALTERNATIVE IS TO BE RETURNED AS THE MAXIMUM     00001600
C       LRET   - RETURN FLAG = .TRUE. - COMPUTED OK, ELSE .FALSE.       00001700
C                                                                       00001800
      DOUBLE PRECISION RS,TUL,W,U,SN,BETA                               00001900
      DIMENSION TUL(7),W(3),U(3),SN(3)                                  00002000
      LOGICAL LRET                                                      00002100
C                                                                       00002200
C     GLOBAL VARIABLES:                                                 00002300
C                                                                       00002400
      INCLUDE 'ZNUMBR.INC'                                              00002500
C                                                                       00002600
C     LOCAL VARIABLES:                                                  00002700
C                                                                       00002800
C       SPHI     - SIN(PHI)   WHERE PHI IS ANGLE BETWEEN TA AND SN      00002900
C       CPHI     - COS(PHI)   WHEN TOOL AND SURFACE CURVATURES MATCH    00003000
C       A,B,C,D1 - WORK VARIABLES                                       00003100
C       DISC     - DISCRIMINANT OF QUADRATIC EQUATION                   00003200
C       SB1,SB2  - TWO POSSIBLE VALUES FOR SIN(BETA)                    00003300
C       B1,B2    - TWO POSSIBLE VALUES OF BETA                          00003400
C       BNEW     - NEW VALUE OF BEAT                                    00003500
C                                                                       00003600
      DOUBLE PRECISION SPHI,CPHI,A,B,C,D1,DISC,SB1,SB2,B1,B2,BNEW       00003700
C                                                                       00003800
C.... COMPUTE SINE OF ANGLE BETWEEN TOOL AXIS (W) AND SN SUCH THAT      00003900
C     TOOL CURVATURE WILL FIT SURFACE CURVATURE AT POINT OF CONTACT     00004000
C                                                                       00004100
      SPHI=TUL(3)/(RS-TUL(1))                                           00004200
      A=Z1-SPHI*SPHI                                                    00004300
      IF (ABS(A).LE.Z1EM6) THEN                                         00004400
        CPHI=Z1                                                         00004500
      ELSE                                                              00004600
        CPHI=SQRT(A)                                                    00004700
      ENDIF                                                             00004800
C                                                                       00004900
C.... BETA HAS TO SATISFY TWO EQUATIONS                                 00005000
C                                                                       00005100
C      TA = COS(BETA)*W + SIN(BETA)*U   (1)                             00005200
C      TA.SN = COS(PHI)                 (2)                             00005300
C                                                                       00005400
C      TAKING SN DOT (1) AND SUBSTITUTING FOR TA.SN, RESULTS IN         00005500
C                                                                       00005600
C      COS(PHI)=COS(BETA)*(W.SN)+SIN(BETA)*(U.SN)                       00005700
C                                                                       00005800
C                                       2                               00005900
C      SQUARING AND SUBSTITUTING FOR COS (BETA)                         00006000
C      WILL GIVE A QUADRATIC IN SIN(BETA) - HENCE BETA                  00006100
C                                                                       00006200
      CALL DOTF(A,W,SN)                                                 00006300
      CALL DOTF(B,U,SN)                                                 00006400
C                                                                       00006500
      D1=A*A+B*B                                                        00006600
      DISC=D1-CPHI*CPHI                                                 00006700
C                                                                       00006800
      IF ((DISC.GT.Z1EM6).AND.(D1.GT.Z1EM6)) THEN                       00006900
C                                                                       00007000
        C=SQRT(DISC)                                                    00007100
C                                                                       00007200
        SB1=(B*CPHI+A*C)/D1                                             00007300
        SB2=(B*CPHI-A*C)/D1                                             00007400
        B1=ASIN(SB1)                                                    00007500
        B2=ASIN(SB2)                                                    00007600
C                                                                       00007700
C.... SELECT APPROPRIATE SOLUTION DEPENDENT ON IDEAL BETA TO CLEAR SURF 00007800
C                                                                       00007900
        IF (BETA.GT.Z0) THEN                                            00008000
          BNEW=MAX(B1,B2)                                               00008100
          IF (BNEW.GT.Z0) THEN                                          00008200
            BETA=BNEW                                                   00008300
            LRET=.TRUE.                                                 00008400
          ELSE                                                          00008500
            BETA=Z0                                                     00008600
            LRET=.FALSE.                                                00008700
          ENDIF                                                         00008800
        ELSE IF (BETA.LT.Z0) THEN                                       00008900
          BNEW=MIN(B1,B2)                                               00009000
          IF (BNEW.LT.Z0) THEN                                          00009100
            BETA=BNEW                                                   00009200
            LRET=.TRUE.                                                 00009300
          ELSE                                                          00009400
            BETA=Z0                                                     00009500
            LRET=.FALSE.                                                00009600
          ENDIF                                                         00009700
        ELSE                                                            00009800
          BETA=Z0                                                       00009900
          LRET=.FALSE.                                                  00010000
        ENDIF                                                           00010100
      ELSE                                                              00010200
C.... NO SOLUTION TO QUADRATIC                                          00010300
        BETA=Z0                                                         00010400
        LRET=.FALSE.                                                    00010500
      ENDIF                                                             00010600
C                                                                       00010700
      END                                                               00010800
**** SOURCE FILE : CHKSRF.ORG   ***
*
      SUBROUTINE CHKSRF(SURF,DONOFF)                                    00000100
C                                                                       00000200
C.... PROCESS CHKSRF STATEMENT                                          00000300
C                                                                       00000400
C     ARGUMENTS:                                                        00000500
C                                                                       00000600
C        SURF = PS            CHECK FOR INTERFERENCE WITH PART SURFACE  00000700
C             = SURFACE_NAME  CHECK FOR INTERFERENCE WITH NAMED SURFACE 00000800
C                                                                       00000900
C                             NOTE: ONLY PS IMPLEMENTED                 00001000
C                                                                       00001100
C      DONOFF = ON            SET INTERFERENCE CHECKING FLAG            00001200
C             = OFF           CANCEL INTERFERENCE CHECKING FLAG         00001300
C                                                                       00001400
      DOUBLE PRECISION SURF,DONOFF                                      00001500
C                                                                       00001600
      INCLUDE 'RMFLGS.INC'                                              00001700
C                                                                       00001800
      INTEGER NWD                                                       00001900
      CHARACTER TEST*2                                                  00002000
C                                                                       00002100
      CALL HOLFRM(SURF,TEST,1,2,NWD)                                    00002200
C                                                                       00002300
      IF (TEST.EQ.'PS') THEN                                            00002400
C.... CHKSRF/PS,...                                                     00002500
        CALL HOLFRM(DONOFF,TEST,1,2,NWD)                                00002600
        IF (TEST.EQ.'ON') THEN                                          00002700
          LINTCK=.TRUE.                                                 00002800
        ELSE                                                            00002900
          LINTCK=.FALSE.                                                00003000
        ENDIF                                                           00003100
      ELSE                                                              00003200
C.... CHKSRF/SURFACE_NAME,...                                           00003300
        CONTINUE                                                        00003400
      ENDIF                                                             00003500
C                                                                       00003600
      END                                                               00003700
**** SOURCE FILE : CURCAL.V01   ***
*
      SUBROUTINE CURCAL(RU,RV,RUU,RUV,RVV,RNORM,SIDE,CURVE1,CURVE2)     00000100
C                                                                       00000200
C     PURPOSE: TO CALCULATE PRINCIPAL CURVATURES CURVE1,CURVE2          00000300
C                                                                       00000400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000500
C                                                                       00000600
      DIMENSION RU(3),RV(3),RUU(3),RUV(3),RVV(3),RNORM(3)               00000700
C.... WORKSPACE                                                         00000800
      DIMENSION W(3)                                                    00000900
C                                                                       00001000
      INCLUDE 'ZNUMBR.INC'                                              00001100
C                                                                       00001300
C     CALC. 1ST FUNDAMENTAL MATRIX G                                    00001400
      CALL DOTF(G11,RU,RU)                                              00001500
      CALL DOTF(G22,RV,RV)                                              00001600
      CALL DOTF(G12,RU,RV)                                              00001700
C                                                                       00001800
C     CALC. 2ND FUNDAMENTAL MATRIX D                                    00001900
C                                                                       00002000
C.... TAKE SURFACE NORMAL POINTING TOWARDS TOOL                         00002100
C                                                                       00002200
      DO 10 I=1,3                                                       00002300
        W(I)=SIDE*RNORM(I)                                              00002400
  10  CONTINUE                                                          00002500
C                                                                       00002600
      CALL DOTF(D11,W,RUU)                                              00002700
      CALL DOTF(D12,W,RUV)                                              00002800
      CALL DOTF(D22,W,RVV)                                              00002900
C                                                                       00003000
C     CALC. COEFFS. FOR QUADRATIC IN CURVATURE                          00003100
C                                                                       00003200
      A1=G11*G22-G12*G12                                                00003300
      A2=-G11*D22-G22*D11+2.D0*G12*D12                                  00003400
      A3=D11*D22-D12*D12                                                00003500
C                                                                       00003600
C     SOLVE FOR CURVATURES                                              00003700
C                                                                       00003800
      DISC=A2*A2-Z4*A1*A3                                               00003900
      DISC=MAX(ZERO,DISC)                                               00004000
      DISC=SQRT(DISC)                                                   00004100
C                                                                       00004200
      DENOM=A1+A1                                                       00004300
C                                                                       00004400
      CURVE1=(-A2+DISC)/DENOM                                           00004500
      CURVE2=(-A2-DISC)/DENOM                                           00004600
C                                                                       00004700
      END                                                               00004800
**** SOURCE FILE : CURINT.V01   ***
*
      SUBROUTINE CURINT(PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,TUL,TE,TOOLAX,  00000100
     +                  RC,NPATCH,UC,VC)                                00000200
C                                                                       00000300
C     PURPOSE: TO TEST CURRENT PATCH                                    00000400
C     FOR BALL-ENDED AND CORNER RADIUS CUTTERS.                         00000500
C     USES MIXED ALGORITHM METHOD (MIXAL)                               00000600
C                                                                       00000700
C     GIVEN :-                                                          00000800
C     NPATCH      CURRENT PATCH NUMBER                                  00000900
C     CUTTING POINT DATA (U, V, POSITION, NORMAL AND DERIVATIVES)       00001000
C     TOOL DATA, THEN:-                                                 00001100
C                                                                       00001200
C     TEST SCHEDULE FOR CURRENT PATCH :-                                00001300
C     1. TEST FOR PATCH CONVEX. IF TRUE, THEN NO LOCAL INTERFERENCE     00001400
C     2. CALCULATE THE CURVATURE CT OF THE MINIMUM SPHERICAL CONVEX     00001500
C        HULL FOR THE TOOL WITH THE CUTTING POINT AS A DIAMETRAL        00001600
C        POINT.OF CONTACT. TEST AGAINST THE SIGNED MINIMUM CURVATURE    00001700
C        OF THE PATCH CP. THEN IF CP > CT NO LOCAL INTERFERENCE CAN     00001800
C        OCCUR                                                          00001900
C     3. USE MIXAL TO SEARCH FOR INTERFERENCE ON THE PATCH, USING A     00002000
C        A NUMBER OF STARTING POINTS ARRANGED IN A PATTERN ABOUT THE    00002100
C        CUTTING POINT. (THE CUTTING POINT CANNOT BE USED AS A          00002200
C        STARTING POINT FOR THESE SEARCHES, SINCE IT IS A SOLUTION)     00002300
C                                                                       00002400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00002500
C.... PATCH DATA                                                        00002600
      DIMENSION PSURF(IPSIZE)                                           00002700
C.... CUTTING POINT DATA                                                00002800
      DIMENSION RC(32),RCNORM(3)                                        00002900
C.... SURFACE POINT AND DERIVATIVES                                     00003000
      DIMENSION R(3),RU(3),RV(3)                                        00003100
C.... SECOND DERIVATIVES                                                00003200
      DIMENSION RUU(3),RUV(3),RVV(3)                                    00003300
C.... NORMAL AT R                                                       00003400
      DIMENSION RNORM(3)                                                00003500
C                                                                       00003600
C.... POINT OF MAX. PENETRATION FOUND.                                  00003700
C     NOT NECESSARILY THE FINAL POINT OF ITERATION.                     00003800
C     IS TRUE (I.E. EVALUATED, NOT EXTRAPOLATED) SURFACE POINT.         00003900
      DIMENSION PPOINT(3)                                               00004000
C.... CORRESPONDING POINT ON TOOL                                       00004100
      DIMENSION TPOINT(3)                                               00004200
C.... NORMAL AT PPOINT                                                  00004300
      DIMENSION PNORM(3)                                                00004400
C     PENMAX          PENETRATION (HIT +VE)                             00004500
C     UPEN, VPEN      U,V VALUES                                        00004600
C                                                                       00004700
C.... TOOL GEOMETRY DATA                                                00004800
      DIMENSION TUL(7)                                                  00004900
C.... ABS. TOOL TIP COORDS                                              00005000
      DIMENSION TE(3)                                                   00005100
C.... TOOL AXES DIRN. COSINES                                           00005200
      DIMENSION TOOLAX(3)                                               00005300
C.... TOOL CENTRE                                                       00005400
      DIMENSION TOOLCE(3)                                               00005500
C                                                                       00005600
      INCLUDE 'INIDAT.INC'                                              00005700
      INCLUDE 'INTERF.INC'                                              00005800
      INCLUDE 'IBUGG.INC'                                               00005900
C                                                                       00006000
C.... WORKSPACE                                                         00006100
      DIMENSION V1(3),V2(3),V3(3)                                       00006200
      DIMENSION TCENT(3)                                                00006300
      DIMENSION HCENT(3)                                                00006400
      PARAMETER (ETA=1D-6,PI=3.141592653589793)                         00006500
C                                                                       00006600
C     CUTTER DEFINITION FOR BALL-ENDED AND CORNER RADIUS CUTTERS        00006700
C                                                                       00006800
C     ITOOL IS CUTTER TYPE: 1 FOR BALL-ENDED, 2 FOR CORNER RADIUS       00006900
C     CUTRAD IS RADIUS OF CYLINDER                                      00007000
C     CYLENG IS LENGTH OF CYLINDER                                      00007100
C     CORRAD IS CORNER RADIUS                                           00007200
C     CUTR3  IS CUTRAD-CORRAD                                           00007300
C                                                                       00007400
      CORRAD=TUL(1)                                                     00007500
      CUTRAD=TUL(2)                                                     00007600
      CUTR3=TUL(3)                                                      00007700
      TLEN=TUL(7)                                                       00007800
      CYLENG=TUL(7)-TUL(4)+TUL(1)                                       00007900
      IF (ABS(TUL(1)-TUL(2)).LE.ETA) THEN                               00008000
        ITOOL=1                                                         00008100
      ELSE                                                              00008200
        ITOOL=2                                                         00008300
      ENDIF                                                             00008400
C                                                                       00008500
C     CALC. CURVATURE TOLERANCE CURTOL                                  00008600
C                                                                       00008700
      IF (TOLIN.GT.ETA) THEN                                            00008800
        D1=2.D0*CUTRAD                                                  00008900
        A=MAX(CYLENG,D1)                                                00009000
        CURTOL=2/(TOLIN+A*A/TOLIN)                                      00009100
      ELSE                                                              00009200
        CURTOL=0.D0                                                     00009300
      ENDIF                                                             00009400
C                                                                       00009410
C.... ADJUST NORMAL AT CONTACT POINT TO POINT TO TOOL SIDE OF SURFACE   00009420
C                                                                       00009430
      DO 10 I=1,3                                                       00009440
        RCNORM(I)=PSIDE*RC(I+28)                                        00009450
  10  CONTINUE                                                          00009460
C                                                                       00009500
      IPEN=0                                                            00009600
      IEDGE=0                                                           00009700
C                                                                       00009800
C     TEST FOR PATCH CONVEX                                             00009900
C                                                                       00010000
      PATCUR=CURMAX(NPATCH)                                             00010100
      IF (PATCUR.GT.CURTOL) THEN                                        00010200
        DUMIN=DULIM(NPATCH)                                             00010300
        DUMIN2=2*DUMIN                                                  00010400
        DVMIN=DVLIM(NPATCH)                                             00010500
        DVMIN2=2*DVMIN                                                  00010600
C                                                                       00010700
C.... CALCULATE TOOL CENTRE                                             00010800
        DO 100 I=1,3                                                    00010900
          TOOLCE(I)=TE(I)+(TUL(4)+TUL(1))*TOOLAX(I)                     00011000
 100    CONTINUE                                                        00011100
C                                                                       00011200
C     TEST AGAINST TOOL CONVEX HULL CURVATURE                           00011300
        CALL TXHULL(RC,RCNORM,CUTRAD,CORRAD,CUTR3,TLEN,TOOLAX,          00011400
     1                  TE,TOOLCE,CT,HRAD,HCENT)                        00011500
C                                                                       00011600
        IF (CT.LT.PATCUR) THEN                                          00011700
C                                                                       00011800
C     SEARCH FOR LOCAL INTERFERENCE                                     00011900
C     CALC. SEARCH DIRECTIONS IN TANGENT PLANE :-                       00012000
          CALL CROSS(RCNORM,TOOLAX,V3)                                  00012100
          CALL VNORM(V3,V1)                                             00012200
          CALL CROSS(V1,RCNORM,V3)                                      00012300
          CALL VNORM(V3,V2)                                             00012400
C                                                                       00012500
C     V1 AND V2 ARE UNIT VECTORS IN TANGENT PLANE AT CUTTING POINT      00012600
C     V2 PERPENDICULAR TO TOOL AXIS, V1 PERPENDICULAR TO V2             00012700
C                                                                       00012800
C     SEARCH AT 5 START POINTS                                          00012900
C                                                                       00013000
C.... LOCATION IN INTERFERENCE TABLE FOR START OF LOCAL PATCH DATA      00013100
C                                                                       00013200
          ICUR=NPINTR                                                   00013300
C.... NUMBER OF HITS ON LOCAL PATCH                                     00013400
          NHIT=0                                                        00013500
C                                                                       00013600
          A=-.5*CUTRAD                                                  00013700
          CALL DEGSOL(V1,RC(5),RC(9),DU1,DV1,I)                         00013800
          DO 520 K=1,5                                                  00013900
            IF (K.EQ.3) THEN                                            00014000
                CALL DEGSOL(V2,RC(5),RC(9),DU1,DV1,I)                   00014100
            END IF                                                      00014200
C                                                                       00014300
            IF (K.LT.5) THEN                                            00014400
                A=-A                                                    00014500
            ELSE                                                        00014600
                A=3*A                                                   00014700
            END IF                                                      00014800
C                                                                       00014900
            DU=A*DU1                                                    00015000
            DV=A*DV1                                                    00015100
            CALL JMPLT2(UC,VC,DU,DV,I)                                  00015200
            IF (ABS(DU).GE.DUMIN .OR. ABS(DV).GE.DVMIN) THEN            00015300
              U=UC+DU                                                   00015400
              V=VC+DV                                                   00015500
              PENMAX=-1D6                                               00015600
              IF (NITERA.GT.1) THEN                                     00015700
                PREVDU=DU1                                              00015800
                PREVDV=DV1                                              00015900
              END IF                                                    00016000
C                                                                       00016100
              CALL MIXAL(NPATCH,IPSIZE,PSURF,PSIDE,PTHICK,TUL,          00016200
     +            TOOLCE,TOOLAX,U,V,DUMIN,DVMIN,UPEN,VPEN,PPOINT,TPOINT,00016300
     +            PNORM,PENMAX,IPEN,IFLAG,IEDGE,NITERA)                 00016400
C                                                                       00016500
C.... DEBUG PRINT                                                       00016600
C                                                                       00016700
              IF (IBUG.EQ.11) THEN                                      00016800
                CALL BAD(-1,0,' ',0)                                    00016900
                CALL BAD(1,0,'NPAT',NPATCH)                             00017000
                CALL BAD(1,0,'K   ',K)                                  00017100
                CALL BAD(1,0,'ITER',NITERA)                             00017200
              ENDIF                                                     00017300
C                                                                       00017400
              IF (PENMAX.GT.TOLIN) THEN                                 00017500
C.... PENETRATION DETECTED                                              00017600
                IF (NHIT.GT.0) THEN                                     00017700
                  IF (ABS(UC-UPEN).GT.DUMIN2 .OR.                       00017800
     +                 ABS(VC-VPEN).GT.DVMIN2) THEN                     00017900
C                                                                       00018000
                    DO 550 I=1,NHIT                                     00018100
                      IF (ABS(UINTR(ICUR+I)-UPEN).LE.DUMIN2 .AND.       00018200
     1                    ABS(VINTR(ICUR+I)-VPEN).LE.DVMIN2) GOTO 520   00018300
550                 CONTINUE                                            00018400
                  ENDIF                                                 00018500
                ENDIF                                                   00018600
C                                                                       00018700
C.... STORE IN INTERFERENCE TABLE                                       00018800
C                                                                       00018900
                NHIT=NHIT+1                                             00019000
                NPINTR=NPINTR+1                                         00019100
                UINTR(NPINTR)=UPEN                                      00019200
                VINTR(NPINTR)=VPEN                                      00019300
                PINTR(NPINTR)=NPATCH                                    00019400
                DINTR(NPINTR)=PENMAX                                    00019500
                ISEG(NPINTR)=IPEN                                       00019600
                DO 515 J=1,3                                            00019700
                  SPINTR(J,NPINTR)=PPOINT(J)                            00019800
                  TPINTR(J,NPINTR)=TPOINT(J)                            00019900
                  SNINTR(J,NPINTR)=PNORM(J)                             00020000
 515            CONTINUE                                                00020100
C                                                                       00020200
              ENDIF                                                     00020300
C                                                                       00020400
            ENDIF                                                       00020500
C                                                                       00020600
520       CONTINUE                                                      00020700
C                                                                       00020800
        ENDIF                                                           00020900
      ELSE                                                              00021000
C.... PATCH CONVEX OR PSEUDO CONVEX                                     00021100
        IFLAG=0                                                         00021200
      END IF                                                            00021300
      END                                                               00021400
**** SOURCE FILE : DEGSOL.ORG   ***
*
      SUBROUTINE DEGSOL(V,V1,V2,A,B,IFLAG)                              00000100
C     SOLVES DEGENERATE EQN. SYSTEM  A.V1 + B.V2 = V                    00000200
C     WHERE V, V1, V2, 3-D VECTORS AND A,B SCALARS                      00000300
C     FOR NO SOLUTION, IFLAG SET TO 1, ELSE ZERO                        00000400
C                                                                       00000500
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000600
C                                                                       00000700
      DIMENSION V1(3),V2(3),V(3)                                        00000800
C                                                                       00000900
      PARAMETER (ETA=1E-10)                                             00001000
C                                                                       00001100
      IFLAG=0                                                           00001200
      A=0                                                               00001300
C.... CHOOSE LARGEST ABS(DET)                                           00001400
      DO 10 J=1,2                                                       00001500
        DO 10 K=J+1,3                                                   00001600
          B=V1(J)*V2(K)-V1(K)*V2(J)                                     00001700
          IF (ABS(B).GT.ABS(A)) THEN                                    00001800
            A=B                                                         00001900
            JA=J                                                        00002000
            KA=K                                                        00002100
          END IF                                                        00002200
10    CONTINUE                                                          00002300
C                                                                       00002400
      IF (ABS(A).LT.ETA .OR. JA.EQ.O) THEN                              00002500
            IFLAG=1                                                     00002600
      ELSE                                                              00002700
            B=(V1(JA)*V(KA)-V1(KA)*V(JA))/A                             00002800
            A=(V(JA)*V2(KA)-V(KA)*V2(JA))/A                             00002900
      END IF                                                            00003000
C                                                                       00003100
      END                                                               00003200
**** SOURCE FILE : DIST2.ORG   ***
*
      DOUBLE PRECISION FUNCTION DIST2(A,B)                              00000100
C                                                                       00000200
C.... COMPUTE THE SQUARE OF THE DISTANCE BETWEEN TWO POINTS             00000300
C                                                                       00000400
      DOUBLE PRECISION A(3),B(3)                                        00000500
C                                                                       00000600
      DIST2 = (A(1)-B(1))*(A(1)-B(1))                                   00000700
     +      + (A(2)-B(2))*(A(2)-B(2))                                   00000800
     +      + (A(3)-B(3))*(A(3)-B(3))                                   00000900
      END                                                               00001000
**** SOURCE FILE : EVALSS.ORG   ***
*
      SUBROUTINE EVALSS(NPATCH,U,V,ISIZE,GEO,MODE,                      00000100
     1                  R,RU,RV,RUU,RUV,RVV,RNORM,NORMOK)               00000200
C                                                                       00000300
C.... EVALUATE SURFACE                                                  00000400
C                                                                       00000500
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000600
C                                                                       00000700
      DIMENSION GEO(ISIZE)                                              00000800
      DIMENSION R(3),RU(3),RV(3),RUU(3),RUV(3),RVV(3),RNORM(3)          00000900
      DIMENSION B(64),IFLAG(4),ITOP(24),SPV(32)                         00001000
C                                                                       00001100
      SAVE B,IFLAG,ITOP,ICPAT                                           00001200
C                                                                       00001300
      DATA ICPAT/0/                                                     00001400
C                                                                       00001500
C.... HAS PATCH ALREADY BEEN LOADED                                     00001600
C                                                                       00001700
      IF (NPATCH.NE.ICPAT) THEN                                         00001800
C                                                                       00001900
C.... LOAD CURRENT PATCH DATA                                           00002000
C                                                                       00002100
        CALL LODPCH(GEO,B,IFLAG,ITOP,NPATCH,1)                          00002200
C                                                                       00002300
        ICPAT=NPATCH                                                    00002400
C                                                                       00002500
      ENDIF                                                             00002600
C                                                                       00002700
C.... EVALUATE POINT AND DERIVATIVES                                    00002800
C                                                                       00002900
      MM=1                                                              00003000
      CALL CNSURF(U,V,B,SPV,IFLAG,MM)                                   00003100
C                                                                       00003200
      DO 10 I=1,3                                                       00003300
        R(I)=SPV(I)                                                     00003400
        RU(I)=SPV(I+4)                                                  00003500
        RV(I)=SPV(I+8)                                                  00003600
        RUU(I)=SPV(I+12)                                                00003700
        RUV(I)=SPV(I+16)                                                00003800
        RVV(I)=SPV(I+20)                                                00003900
        RNORM(I)=SPV(I+28)                                              00004000
 10   CONTINUE                                                          00004100
C                                                                       00004200
      NORMOK=NINT(SPV(32))                                              00004300
C                                                                       00004400
      END                                                               00004500
**** SOURCE FILE : HULCUT.V01   ***
*
      SUBROUTINE HULCUT(TE,TA,TUL,SPHR,ISEG)                            00000100
C                                                                       00000200
C     CALCS. PENETRATION OF CORNER RADIUS CUTTER INTO SPHERICAL CONVEX H00000300
C     OF RADIUS RAD AND CENTRE CENT                                     00000400
C     IF NO PENETRATION OCCURS, THEN ISEG = -1, ELSE                    00000500
C     ISEG   = 0      BOTTOM FLAT                                       00000600
C              1      CORNER RADIUS                                     00000700
C              2      CYLINDER                                          00000800
C     P IS PENETRATION, -VE FOR MISS                                    00000900
C                                                                       00001000
C     ARGUMENTS:                                                        00001100
C                                                                       00001200
C     TE      - TOOL END                                                00001300
C     TA      - TOOL AXIS                                               00001400
C     TUL     - TOOL GEOMETRY                                           00001500
C     SPHR    - CENTRE AND RADIUS OF TEST SPHERE                        00001600
C                                                                       00001700
      DOUBLE PRECISION TE,TA,TUL,SPHR                                   00001800
      DIMENSION TE(3),TA(3),TUL(7),SPHR(4)                              00001900
C                                                                       00002000
C.... LOCAL VARIABLES                                                   00002100
C                                                                       00002200
      DOUBLE PRECISION V,A,B,C,P                                        00002300
      DIMENSION V(3)                                                    00002400
C                                                                       00002500
      ISEG=-1                                                           00002600
      DO 10 I=1,3                                                       00002700
        V(I)=TE(I)+(TUL(4)+TUL(1))*TA(I)-SPHR(I)                        00002800
10    CONTINUE                                                          00002900
      CALL VECMOD(V,B)                                                  00003000
      CALL DOTF(A,V,TA)                                                 00003100
      C=SQRT(B*B-A*A)                                                   00003200
C                                                                       00003300
      IF (A.GT.0) THEN                                                  00003400
C.... CYLINDER CASE                                                     00003500
            P=SPHR(4)+TUL(2)-C                                          00003600
C.... P -VE FOR MISS                                                    00003700
            IF (P.GT.0) ISEG=2                                          00003800
C                                                                       00003900
      ELSE IF (C.LE.TUL(3)) THEN                                        00004000
C.... BOTTOM FLAT CASE                                                  00004100
            P=TUL(1)+TUL(4)+SPHR(4)-A                                   00004200
C.... P -VE FOR MISS                                                    00004300
            IF (P.GT.0) ISEG=0                                          00004400
C                                                                       00004500
      ELSE                                                              00004600
C.... CORNER RADIUS CASE                                                00004700
            D=C-TUL(3)                                                  00004800
            P=TUL(1)+SPHR(4)-SQRT(D*D+A*A)                              00004900
C.... P -VE FOR MISS                                                    00005000
            IF (P.GT.0) ISEG=1                                          00005100
      END IF                                                            00005200
C                                                                       00005300
      END                                                               00005400
**** SOURCE FILE : INEX.ORG   ***
*
      SUBROUTINE INEX(GEO,SIDE,TOLI,TOLO)                               00000100
C                                                                       00000200
C     INTERFERENCE CHECKING INITIALISATION PROCEDURE                    00000300
C                                                                       00000400
C     CALCULATES: MAXIMUM AND MINIMUM CURVATURES      CURMAX,CURMIN     00000500
C                 ITERATION LIMITS                    DULIM, DVLIM      00000600
C                 CONVEX HULLS                        CXHULL            00000700
C                                                                       00000800
C     ARGUMENTS:                                                        00000900
C            GEO   SURFACE CANONICAL FORM                               00001000
C            SIDE  TOOL SIDE OF SURFACE W.R.T. SURFACE NORMAL           00001100
C            TOLI  SURFACE INTOL                                        00001200
C            TOLO  SURFACE OUTTOL                                       00001300
C                                                                       00001400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00001500
C                                                                       00001600
      INCLUDE 'INIDAT.INC'                                              00001700
C                                                                       00001800
      DIMENSION GEO(*)                                                  00001900
C                                                                       00002000
      DIMENSION R(3),RU(3),RV(3),RUU(3),RUV(3),RVV(3),RNORM(3)          00002100
C.... MESH DIMENSION                                                    00002200
      PARAMETER (NGRID=5)                                               00002300
C.... MESH POINTS                                                       00002400
      DIMENSION RNET(NGRID*NGRID,3)                                     00002500
C.... PATCH CORNER POINTS                                               00002600
      DIMENSION NCOR(4)                                                 00002700
      DIMENSION RCORN1(4,3),RCORN2(4,3)                                 00002800
C.... PATCH CORNER VECTORS                                              00002900
      DIMENSION CV1(4,3),CV2(4,3)                                       00003000
C.... POINTERS FOR ABOVE                                                00003100
      DIMENSION M1(4),M2(4)                                             00003200
      DIMENSION CENT(3),SCENT(4,3)                                      00003300
      DIMENSION SRAD(4)                                                 00003400
      DIMENSION NFLAGS(4)                                               00003500
      DIMENSION V1(4,3),V2(6,3)                                         00003600
      DIMENSION W(3),W1(3)                                              00003700
C                                                                       00003800
C     CXHULL(I,J,K)   RETURNS CONVEX HULL DATA FOR K TH PATCH           00003900
C     I = 1 TO 3      CENTRE COORDINATES                                00004000
C     I = 4           RADIUS                                            00004100
C     WHERE HULLS ARE CALCULATED, LOADED IN J-ORDER:-                   00004200
C     MINIMUM ENCLOSING SPHERE                                          00004300
C     UP TO 4 "EDGE" SPHERES                                            00004400
C     "LID" SPHERE                                                      00004500
C     NCXHUL(K)       NUMBER OF HULLS FOR THE K TH PATCH                00004600
C                                                                       00004700
      DATA M1/1,2,4,3/M2/4,1,3,2/                                       00004800
C                                                                       00004900
C.... CHECK IF THIS SURFACE HAS ALREADY BEEN PROCESSED BY INEX          00005000
C                                                                       00005100
C.... EXTERNAL LDA FILE RECORD NUMBER FOR THIS SURFACE                  00005200
C                                                                       00005300
      IREC=NINT(GEO(1))                                                 00005400
C                                                                       00005500
      IF ( (ICURSF.EQ.0).OR.(IREC.NE.ICURSF) ) THEN                     00005600
C.... CURRENT SURFACE NOT PREVIOUSLY PROCESSED BY INEX                  00005700
C                                                                       00005800
        ICURSF=IREC                                                     00005900
C.... NUMBER OF PATCHES                                                 00006000
        NGP=NINT(GEO(4))                                                00006100
C.... SIZE OF CANONICAL FORM                                            00006200
        ISIZE=NINT(GEO(8))                                              00006300
C                                                                       00006400
        N3=3                                                            00006500
        N4=4                                                            00006600
C                                                                       00006700
C     TO SET UP MESH PARAMETERS                                         00006800
C                                                                       00006900
C.... NUMBER OF MESH POINTS                                             00007000
        NNGRID=NGRID*NGRID                                              00007100
        N=NGRID-1                                                       00007200
C.... MESH SIZE                                                         00007300
        AMESH=FLOAT(1)/FLOAT(N)                                         00007400
        NCOR(1)=1                                                       00007500
        NCOR(2)=NGRID                                                   00007600
        NCOR(4)=NNGRID                                                  00007700
        NCOR(3)=NCOR(4)-NGRID+1                                         00007800
C.... ALL DERIVATIVES FROM EVALUATOR                                    00007900
        MODE=3                                                          00008000
C.... DISTANCE TOLERANCE                                                00008100
        TOLIN=(TOLI+TOLO)*0.5D0                                         00008200
C                                                                       00008300
C.... FOR ALL PATCHES                                                   00008400
        DO 1000 NPATCH=1,NGP                                            00008500
          CRVMIN=1D6                                                    00008600
          CRVMAX=-1.D6                                                  00008700
          M=1                                                           00008800
C     CALC. MESH U,V                                                    00008900
          DO 500 K=0,N                                                  00009000
            U=K*AMESH                                                   00009100
            DO 400 J=0,N                                                00009200
              V=J*AMESH                                                 00009300
              L=5*K+J+1                                                 00009400
C                                                                       00009500
              CALL EVALSS(NPATCH,U,V,ISIZE,GEO,MODE,                    00009600
     1                  R,RU,RV,RUU,RUV,RVV,RNORM,NORMOK)               00009700
              DO 20 I=1,3                                               00009800
                RNET(L,I)=R(I)                                          00009900
20            CONTINUE                                                  00010000
C     IF CORNER, STORE CORNER POINTS AND EDGE VECTORS                   00010100
              IF (L.EQ.NCOR(M)) THEN                                    00010200
                DO 30 I=1,3                                             00010300
                  RCORN1(M1(M),I)=R(I)                                  00010400
                  RCORN2(M2(M),I)=R(I)                                  00010500
C                                                                       00010600
                  IF (M.EQ.1 .OR. M.EQ.4) THEN                          00010700
                    CV1(M1(M),I)=RV(I)                                  00010800
                    CV2(M2(M),I)=RU(I)                                  00010900
                  ELSE                                                  00011000
                    CV1(M1(M),I)=RU(I)                                  00011100
                    CV2(M2(M),I)=RV(I)                                  00011200
                  END IF                                                00011300
C                                                                       00011400
30              CONTINUE                                                00011500
                M=M+1                                                   00011600
              END IF                                                    00011700
C                                                                       00011800
C     CALC. PRINCIPAL CURVATURES                                        00011900
C                                                                       00012000
              CALL CURCAL(RU,RV,RUU,RUV,RVV,RNORM,SIDE,CURVE1,CURVE2)   00012100
C                                                                       00012200
              CRVMAX=MAX(CRVMAX,CURVE1,CURVE2)                          00012300
              CRVMIN=MIN(CRVMIN,CURVE1,CURVE2)                          00012400
400         CONTINUE                                                    00012500
500       CONTINUE                                                      00012600
C                                                                       00012700
C     TO STORE MAXIMUM AND MINIMUM CURVATURE                            00012800
          CURMAX(NPATCH)=CRVMAX                                         00012900
          CURMIN(NPATCH)=CRVMIN                                         00013000
C                                                                       00013100
C     TO CALCULATE DULIM, DVLIM                                         00013200
C.... A IS SUM OF U-DISTANCES BETWEEN CORNER POINTS                     00013300
          A=0.D0                                                        00013400
C.... B IS SUM OF V-DISTANCES BETWEEN CORNER POINTS                     00013500
          B=0.D0                                                        00013600
          DO 150 I=1,3                                                  00013700
            DO 100 J=1,4                                                00013800
              C=RCORN1(J,I)-RCORN2(J,I)                                 00013900
              IF (J.EQ.1 .OR. J.EQ.3) THEN                              00014000
                B=B+C*C                                                 00014100
              ELSE                                                      00014200
                A=A+C*C                                                 00014300
              END IF                                                    00014400
100         CONTINUE                                                    00014500
150       CONTINUE                                                      00014600
C                                                                       00014700
          DULIM(NPATCH)=TOLIN/SQRT(A)                                   00014800
          DVLIM(NPATCH)=TOLIN/SQRT(B)                                   00014900
C     DU, DV LIMITS CALCULATED                                          00015000
C                                                                       00015100
C     TO CALCULATE SPHERICAL CONVEX HULLS                               00015200
          NHULL=0                                                       00015300
          CALL SHELLA(RCORN1,RNET,NNGRID,N3,W,RAD)                      00015400
          IF (RAD.GT.TOLIN) THEN                                        00015500
            NHULL=NHULL+1                                               00015600
            DO 200 I=1,3                                                00015700
              CXHULL(I,NHULL,NPATCH)=W(I)                               00015800
200         CONTINUE                                                    00015900
            CXHULL(4,NHULL,NPATCH)=RAD                                  00016000
          END IF                                                        00016100
C                                                                       00016200
          CALL SHELLB(NNGRID,N3,N4,RCORN1,RCORN2,CV1,CV2,RNET,          00016300
     1              SCENT,SRAD,NFLAGS)                                  00016400
          DO 210 K=1,4                                                  00016500
            IF (NFLAGS(K).EQ.1) THEN                                    00016600
              NHULL=NHULL+1                                             00016700
              DO 220 I=1,3                                              00016800
                CXHULL(I,NHULL,NPATCH)=SCENT(K,I)                       00016900
220           CONTINUE                                                  00017000
              CXHULL(4,NHULL,NPATCH)=SRAD(K)                            00017100
            END IF                                                      00017200
210       CONTINUE                                                      00017300
          NCXHUL(NPATCH)=NHULL                                          00017400
C                                                                       00017500
1000    CONTINUE                                                        00017600
C                                                                       00017700
      ENDIF                                                             00017800
C                                                                       00017900
      END                                                               00018000
**** SOURCE FILE : INTCHK.ORG   ***
*
      SUBROUTINE INTCHK(PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,TUL,            00000100
     +                  TE,TA,R,NPAT,UP,VP,LRET,INTLOC)                 00000200
C                                                                       00000300
C     PURPOSE : TO PERFORM INTERFERENCE CHECKING                        00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C                                                                       00000700
C     PSURF   -  CANONICAL FORM OF PART SURFACE (SSURF)                 00000800
C     IPSIZE  -  SIZE OF CANONICAL FORM                                 00000900
C     PSIDE   -  1 OR -1 TO AJUST SURFACE NORMAL (RU X RV)              00001000
C     PTHICK  -  THICKNESS OFFSET FROM SURFACE                          00001100
C     TOLIN   -  TOLERANCE (PS INTOL)                                   00001200
C     TUL     -  TOOL GEOMETRY                                          00001300
C     TE      -  TOOL END COORDINATES                                   00001400
C     TA      -  TOOL AXIS VECTOR                                       00001500
C     R       -  SURFACE CONTACT POINT AND DERIVATIVES                  00001600
C     NPAT    -  PATCH NUMBER FOR CONTACT POINT                         00001700
C     UP,VP   -  U AND V PARAMETERS FOR CONTACT POINT                   00001800
C     LRET    -  RETURN FLAG = .TRUE.  IF INTERFERENCE OCCURS           00001900
C                            = .FALSE. IF NO INTERFERENCE               00002000
C     INTLOC  -  LOCATION IN INTERFERENCE TABLE OF LARGEST INTERFERENCE 00002100
C                                                                       00002200
      DOUBLE PRECISION PSURF,PSIDE,PTHICK,TUL,TOLIN,TE,TA,R,UP,VP       00002300
      INTEGER IPSIZE,NPAT,INTLOC                                        00002400
      LOGICAL LRET                                                      00002500
C                                                                       00002600
      DIMENSION PSURF(IPSIZE),TUL(7),TE(3),TA(3),R(32)                  00002700
C                                                                       00002800
C.... LOCAL VARIABLES                                                   00002900
C                                                                       00003000
C     LSUSP   -  LIST OF SUSPECT PATCHES                                00003100
C     NSUSP   -  NUMBER OF SUSPECT PATCHES                              00003200
C                                                                       00003300
      INTEGER NSUSP,LSUSP,MXSUSP                                        00003400
      PARAMETER (MXSUSP=1000)                                           00003500
C                                                                       00003600
      DIMENSION LSUSP(MXSUSP)                                           00003700
C                                                                       00003800
      INCLUDE 'INTERF.INC'                                              00003900
      INCLUDE 'IBUGG.INC'                                               00004000
C                                                                       00004100
      CHARACTER MSG*120                                                 00004200
C                                                                       00004300
      LRET=.FALSE.                                                      00004400
      INTLOC=0                                                          00004500
C                                                                       00004600
C.... DEBUG PRINT                                                       00004700
C                                                                       00004800
      IF (IBUG.EQ.11) THEN                                              00004900
        CALL BAD(-1,0,' ',0)                                            00005000
        MSG='0ENTER INTCHK'                                             00005100
        CALL CPRINT(MSG)                                                00005200
        CALL BAD(3,1,'TE  ',TE)                                         00005300
        CALL BAD(-3,1,'TA  ',TA)                                        00005400
      ENDIF                                                             00005500
C                                                                       00005600
C.... TEST REMOTE (NON-CURRENT) PATCHES FOR POSSIBLE INTERFERENCE       00005700
C                                                                       00005800
      CALL REMSCN(TE,TA,TUL,R,PSIDE,PTHICK,TOLIN,NPAT,LSUSP,NSUSP)      00005900
C                                                                       00006000
      IF (NSUSP.GT.0) THEN                                              00006100
C.... DEBUG PRINT                                                       00006200
        IF (IBUG.EQ.11) THEN                                            00006300
          MSG=' POSSIBLE REMOTE INTERFERENCE'                           00006400
          CALL CPRINT(MSG)                                              00006500
          N=-NSUSP                                                      00006600
          CALL BAD(N,0,'SUSP',LSUSP)                                    00006700
        ENDIF                                                           00006800
C                                                                       00006900
C.... CHECK OUT SUSPECT REMOTE PATCHES AND STORE ANY PENETRATION DATA   00007000
C     IN INTERFERENCE TABLE                                             00007100
C                                                                       00007200
        CALL REMINT(TE,TA,TUL,PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,          00007300
     +              LSUSP,NSUSP)                                        00007400
      ENDIF                                                             00007500
C                                                                       00007600
C.... CHECK CURRENT PATCH AND STORE ANY PENETRATION DATA                00007700
C     IN INTERFERENCE TABLE                                             00007800
C                                                                       00007900
      CALL CURINT(PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,TUL,TE,TA,            00008000
     +            R,NPAT,UP,VP)                                         00008100
C                                                                       00008200
C.... HAS ANY INTERFERENCE BEEN DETECTED                                00008300
C                                                                       00008400
      IF (NPINTR.GT.0) THEN                                             00008500
C                                                                       00008600
        LRET=.TRUE.                                                     00008700
        INTLOC=1                                                        00008800
        DO 100 I=1,NPINTR                                               00008900
C.... FIND AND SAVE LOCATION OF LARGEST PENETRATION                     00009000
          IF (DINTR(I).GT.DINTR(INTLOC)) INTLOC=I                       00009100
C                                                                       00009200
C.... DEBUG PRINT OF INTERFERENCE TABLE                                 00009300
C                                                                       00009400
          IF (IBUG.EQ.11) THEN                                          00009500
            CALL BAD(-1,0,' ',0)                                        00009600
            CALL BAD(1,0,'PAT ',PINTR(I))                               00009700
            CALL BAD(1,1,'U   ',UINTR(I))                               00009800
            CALL BAD(1,1,'V   ',VINTR(I))                               00009900
            CALL BAD(1,1,'PEN ',DINTR(I))                               00010000
            CALL BAD(-1,1,'ISEG',ISEG(I))                               00010100
            CALL BAD(3,1,'TP  ',TPINTR(1,I))                            00010200
            CALL BAD(3,1,'SP  ',SPINTR(1,I))                            00010300
            CALL BAD(-3,1,'SN  ',SNINTR(1,I))                           00010400
          ENDIF                                                         00010500
 100    CONTINUE                                                        00010600
C                                                                       00010700
      ENDIF                                                             00010800
C                                                                       00010900
      END                                                               00011000
**** SOURCE FILE : INTMSG.ORG   ***
*
      SUBROUTINE INTMSG(TE,TA,INTLOC)                                   00000100
C                                                                       00000200
C     PURPOSE: TO PRINT MESSAGE AND RELEVANT DATA IF INTERFERENCE       00000300
C              HAS BEEN DETECTED                                        00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C                                                                       00000700
C     TE      -  TOOL END COORDINATES                                   00000800
C     TA      -  TOOL AXIS VECTOR                                       00000900
C     INTLOC  -  LOCATION INTERFERENCE TABLE OF WORST PENETRATION       00001000
C                                                                       00001100
      DOUBLE PRECISION TE,TA                                            00001200
      INTEGER INTLOC                                                    00001300
      CHARACTER MSG*120                                                 00001400
C                                                                       00001500
      DIMENSION TE(3),TA(3)                                             00001600
C                                                                       00001700
      INCLUDE 'INTERF.INC'                                              00001800
C                                                                       00001900
C..... PRINT MESSAGE                                                    00002000
C                                                                       00002100
      MSG='0INTERFERENCE DETECTED'                                      00002200
      CALL CPRINT(MSG)                                                  00002300
      CALL CFORM(' TE =',MSG,1,5)                                       00002400
      CALL FCONV(TE(1),MSG,7,13,6)                                      00002500
      CALL FCONV(TE(2),MSG,21,13,6)                                     00002600
      CALL FCONV(TE(3),MSG,35,13,6)                                     00002700
      CALL CFORM('TA =',MSG,52,4)                                       00002800
      CALL FCONV(TA(1),MSG,57,13,6)                                     00002900
      CALL FCONV(TA(2),MSG,71,13,6)                                     00003000
      CALL FCONV(TA(3),MSG,85,13,6)                                     00003100
      CALL CPRINT(MSG)                                                  00003200
C                                                                       00003300
      CALL CFORM(' WORST PENETRATION =',MSG,1,20)                       00003400
      CALL FCONV(DINTR(INTLOC),MSG,22,13,6)                             00003500
      CALL CFORM('AT PATCH =',MSG,37,10)                                00003600
      CALL ICONV(PINTR(INTLOC),MSG,48,4)                                00003700
      CALL CFORM('U =',MSG,53,3)                                        00003800
      CALL FCONV(UINTR(INTLOC),MSG,57,9,6)                              00003900
      CALL CFORM('V =',MSG,67,3)                                        00004000
      CALL FCONV(VINTR(INTLOC),MSG,71,9,6)                              00004100
      CALL CPRINT(MSG)                                                  00004200
C                                                                       00004300
      END                                                               00004400
**** SOURCE FILE : JMPLT2.ORG   ***
*
      SUBROUTINE JMPLT2(U,V,DU,DV,IEDGE)                                00000100
C                                                                       00000200
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000300
C                                                                       00000400
C     LIMITS JUMP DU,DV TO KEEP U,V IN RANGE 0-1                        00000500
C     DIRECTION OF LIMITED JUMP SAME AS ORIGINAL,UNLESS EITHER U OR V   00000600
C     ARE ALREADY AT LIMIT                                              00000700
C     U, V UNCHANGED                                                    00000800
C     IEDGE = 0      NOT LIMITED                                        00000900
C             1      LIMITED                                            00001000
C                                                                       00001100
C                                                                       00001200
      INCLUDE 'ZNUMBR.INC'                                              00001300
C                                                                       00001400
      IEDGE=0                                                           00001500
C                                                                       00001600
C     TEST DU, MODIFY DU,DV                                             00001700
C                                                                       00001800
      IF ( (ABS(DU-Z0).LE.Z1EM9).OR.                                    00001900
     +     (ABS(U-Z1).LE.Z1EM9 .AND. DU.GT.0).OR.                       00002000
     +     (ABS(U-Z0).LE.Z1EM9 .AND. DU.LT.0) ) THEN                    00002100
            IEDGE=1                                                     00002200
            DU=Z0                                                       00002300
      ELSE IF (U+DU.GT.Z1) THEN                                         00002400
            IEDGE=1                                                     00002500
            C=Z1-U                                                      00002600
            DV=DV*C/DU                                                  00002700
            DU=C                                                        00002800
      ELSE IF (U+DU.LT.Z0) THEN                                         00002900
            IEDGE=1                                                     00003000
            DV=-DV*U/DU                                                 00003100
            DU=-U                                                       00003200
      END IF                                                            00003300
C                                                                       00003400
C     TEST DV, MODIFY DU,DV                                             00003500
C                                                                       00003600
      IF ( (ABS(DV-Z0).LE.Z1EM9).OR.                                    00003700
     +     (ABS(V-Z1).LE.Z1EM9 .AND. DV.GT.0).OR.                       00003800
     +     (ABS(V-Z0).LE.Z1EM9 .AND. DV.LT.0) ) THEN                    00003900
            IEDGE=1                                                     00004000
            DV=Z0                                                       00004100
      ELSE IF (V+DV.GT.Z1) THEN                                         00004200
            IEDGE=1                                                     00004300
            C=Z1-V                                                      00004400
            DU=DU*C/DV                                                  00004500
            DV=C                                                        00004600
      ELSE IF (V+DV.LT.Z0) THEN                                         00004700
            IEDGE=1                                                     00004800
            DU=-DU*V/DV                                                 00004900
            DV=-V                                                       00005000
      END IF                                                            00005100
C                                                                       00005200
      END                                                               00005300
**** SOURCE FILE : MIXAL.ORG   ***
*
      SUBROUTINE MIXAL(NPATCH,ISIZE,GEO,PSIDE,PTHICK,TUL,               00000100
     1      TOOLCE,TA,U,V,DUMIN,DVMIN,UPEN,VPEN,PPOINT,TPOINT,          00000200
     1      PNORM,PENMAX,IPEN,IFLAG,IEDGE,NITERA)                       00000300
C                                                                       00000400
C     PURPOSE: INTERFERENCE SEARCH USING MIXED ALGORITHMS               00000500
C                                                                       00000600
C     METHOD:                                                           00000700
C                                                                       00000800
C     FOR INITIAL ESTIMATE U, V ON PATCH NPATCH                         00000900
C     EVALUATES SURFACE POINT R, DERIVATIVES, AND NORMAL AT U,V         00001000
C     CALCULATES POINT T ON TOOL WITH SAME NORMAL                       00001100
C     CALCULATES ASSOCIATED POINT P ON TOOL, AND TOOL NORMAL PN AT P    00001200
C     ESTIMATES DU,DV TO GIVE A BETTER ESTIMATE OF PENETRATION POINT    00001300
C     USING VALUES COMPUTED BY BOTH ALGO1 (DU1,DV1) AND ALGO2 (DU2,DV2) 00001400
C     WHERE POSSIBLE OTHERWISE RESULTS OF EITHER ALGO1 OR ALGO2 ARE USED00001500
C                                                                       00001600
C          DU1*DU2             DV1*DV2                                  00001700
C     DU = -------        DV = -------                                  00001800
C          DU1+DU2             DV1+DV2                                  00001900
C                                                                       00002000
C     ARGUMENTS:                                                        00002100
C         ISIZE  - DIMENSION OF GEO                                     00002200
C         PSIDE  - TOOL SIDE OF SURFACE                                 00002300
C         PTHICK - THICK ALLOWANCE REQUIRED                             00002400
C         TUL    - TOOL GEOMETRY                                        00002500
C                                                                       00002600
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00002700
C                                                                       00002800
      DIMENSION GEO(ISIZE)                                              00002900
      DIMENSION TOOLCE(3),TA(3),TUL(7)                                  00003000
      DIMENSION R(3),RU(3),RV(3),RUU(3),RUV(3),RVV(3)                   00003100
      DIMENSION RN(3)                                                   00003200
C                                                                       00003300
C     LOCAL VARIABLES :                                                 00003400
C                                                                       00003500
      DIMENSION P(3),T(3)                                               00003600
C.... TOOL NORMAL AT P                                                  00003700
      DIMENSION PN(3)                                                   00003800
C.... WORKSPACE                                                         00003900
      DIMENSION V1(3),V2(3),V3(3),V4(3)                                 00004000
      DIMENSION UVSTEP(3)                                               00004100
C                                                                       00004200
      LOGICAL LBASE,IOK                                                 00004300
C                                                                       00004400
C.... STORAGE FOR DATA FROM LAST FOUR ITERATIONS IF CONVERGENCE         00004500
C     NOT ACHIEVED BY NITLIM                                            00004600
C                                                                       00004700
      DIMENSION SP(3,4),TP(3,4),TN(3,4),UP(4),VP(4),PEN(4)              00004800
      DIMENSION JPEN(4),IEDG(4)                                         00004900
C                                                                       00005000
C     RETURNS:-                                                         00005100
C.... MAXIMUM PENETRATION FOUND, FOR UPEN, VPEN                         00005200
      DIMENSION PPOINT(3)                                               00005300
C     MAY NOT BE FINAL POINT IN ITERATION, BUT IS FOR TRUE (EVALUATED, N00005400
C     EXTRAPOLATED) SURFACE POINT                                       00005500
C.... CORRESPONDING TOOL POINT                                          00005600
      DIMENSION TPOINT(3)                                               00005700
C.... COMMON NORMAL AT PPOINT, TPOINT                                   00005800
      DIMENSION PNORM(3)                                                00005900
C                                                                       00006000
C     PENMAX      PENETRATION (+VE FOR HIT)                             00006100
C                                                                       00006200
C     IFLAG = -1  NO CONVERGENCE                                        00006300
C              0  CONVERGENCE                                           00006400
C                                                                       00006500
C     IPEN  =  0  CONVERGENCE ON BOTTOM FLAT OF CRC                     00006600
C              1  CONVERGENCE ON SPHERE FOR BE CUTTER, ON CR FOR CRC    00006700
C              2  CONVERGENCE ON SHANK                                  00006800
C                                                                       00006900
C     IEDGE =  0  LAST DU, DV NOT LIMITED                               00007000
C              1  LAST DU,DV LIMITED                                    00007100
C                                                                       00007200
C                                                                       00007300
      INCLUDE 'IBUGG.INC'                                               00007400
C                                                                       00007500
      CHARACTER MSG*120                                                 00007600
C                                                                       00007700
      PARAMETER (ETA6=1D-6,ETA8=1D-8,NITLIM=20)                         00007800
      UCON=1                                                            00007900
      VCON=1                                                            00008000
      IALGO=0                                                           00008100
      USTART=U                                                          00008200
      VSTART=V                                                          00008300
C                                                                       00008400
      IFLAG=0                                                           00008500
C.... 1ST AND 2ND DERIVATIVES FROM EVALUATOR                            00008600
      MODE=2                                                            00008700
C.... ITERATION COUNT                                                   00008800
      NITERA=0                                                          00008900
      IEXT=0                                                            00009000
      DU=0                                                              00009100
      DV=0                                                              00009200
      PENMAX=-1E6                                                       00009300
C.... LOOP START                                                        00009400
10    CONTINUE                                                          00009500
      NITERA=NITERA+1                                                   00009600
C                                                                       00009700
      IOLD=IALGO                                                        00009800
      PREVDU=DU                                                         00009900
      PREVDV=DV                                                         00010000
      IALGO=0                                                           00010100
      IOK=.TRUE.                                                        00010200
C                                                                       00010300
      CALL EVALSS(NPATCH,U,V,ISIZE,GEO,MODE,                            00010400
     1      R,RU,RV,RUU,RUV,RVV,RN,NORMOK)                              00010500
C                                                                       00010600
      CALL PENCUT(R,RN,TOOLCE,TA,TUL,PSIDE,PTHICK,                      00010700
     1      P,PN,PENMAX,IPEN)                                           00010800
C                                                                       00010900
C.... CALCULATE POINT T ON TOOL CORRESPONDING TO SURFACE NORMAL RN      00011000
C                                                                       00011100
      CALL CALCT(TUL,TOOLCE,TA,R,RN,PSIDE,T,LBASE)                      00011200
      IF (LBASE) THEN                                                   00011300
C.... T ON BASE FLAT OF TOOL - FORCE ALGORITHM 2 WHERE POSSIBLE         00011400
        IALGO=2                                                         00011500
      ENDIF                                                             00011600
C                                                                       00011700
C.... ESTIMATE DU AND DV USING ALGORITHM 1                              00011800
C                                                                       00011900
      CALL ALGO1(T,R,RN,RU,RV,DU1,DV1)                                  00012000
C                                                                       00012100
C.... ESTIMATE DU AND DV USING ALGORITHM 2                              00012200
C                                                                       00012300
      CALL ALGO2(PN,RU,RV,RUU,RUV,RVV,DU2,DV2,IOK)                      00012400
      IF (.NOT.IOK) THEN                                                00012500
C.... UNABLE TO COMPUTE DU,DV USING ALGORITHM 2, FORCE USE OF DU1,DV1   00012600
C                                                                       00012700
        IALGO=1                                                         00012800
      ENDIF                                                             00012900
C                                                                       00013000
C.... SELECT DU,DV                                                      00013100
C                                                                       00013200
      IF (IALGO.EQ.1) THEN                                              00013300
        DU=DU1                                                          00013400
        DV=DV1                                                          00013500
      ELSE IF (IALGO.EQ.2) THEN                                         00013600
        DU=DU2                                                          00013700
        DV=DV2                                                          00013800
      ELSE                                                              00013900
C.... MIX ALGORITHMS                                                    00014000
        IF ( (ABS(DU1+DU2).LE.ETA6).OR.(ABS(DU2).LE.ETA6) ) THEN        00014100
          DU=DU1                                                        00014200
        ELSE IF (ABS(DU1).LE.ETA6) THEN                                 00014300
          DU=DU2                                                        00014400
        ELSE                                                            00014500
          DU=(DU1*DU2)/(DU1+DU2)                                        00014600
        ENDIF                                                           00014700
        IF ( (ABS(DV1+DV2).LE.ETA6).OR.(ABS(DV2).LE.ETA6) ) THEN        00014800
          DV=DV1                                                        00014900
        ELSE IF (ABS(DV1).LE.ETA6) THEN                                 00015000
          DV=DV2                                                        00015100
        ELSE                                                            00015200
          DV=(DV1*DV2)/(DV1+DV2)                                        00015300
        ENDIF                                                           00015400
      ENDIF                                                             00015500
C                                                                       00015600
C.... SAVE PREVIOUS SETTING OF IEDGE BEFORE CALLING JMPLT2              00015700
      IEDGP=IEDGE                                                       00015800
C                                                                       00015900
      CALL JMPLT2(U,V,DU,DV,IEDGE)                                      00016000
C                                                                       00016100
C.... COMPUTE COSINE OF ANGLE BETWEEN TOOL AND SURFACE NORMALS          00016200
C                                                                       00016300
      CALL DOTF(CA,PN,RN)                                               00016400
      DIFCA=1.D0-PSIDE*CA                                               00016500
C                                                                       00016600
      IF ( (ABS(DU).LT.DUMIN .AND. ABS(DV).LT.DVMIN).OR.                00016700
     +      DIFCA.LT.ETA8 ) THEN                                        00016800
C.... CONVERGENCE                                                       00016900
        CONTINUE                                                        00017000
      ELSE                                                              00017100
        IF (NITERA.GE.NITLIM) THEN                                      00017200
C.... NO CONVERGENCE AFTER NITLIM ITERATIONS                            00017300
C     CARRY OUT THREE MORE ITERATIONS AND INTERROGATE PENETRATION VALUES00017400
          IF (NITERA.LE.(NITLIM+3)) THEN                                00017500
            IEXT=IEXT+1                                                 00017600
C.... SAVE VALUES FOR SUBSEQUENT INTERROGATION                          00017700
            DO 12 I=1,3                                                 00017800
              SP(I,IEXT)=R(I)                                           00017900
              TP(I,IEXT)=P(I)                                           00018000
              TN(I,IEXT)=PN(I)                                          00018100
   12       CONTINUE                                                    00018200
            UP(IEXT)=U                                                  00018300
            VP(IEXT)=V                                                  00018400
            PEN(IEXT)=PENMAX                                            00018500
            JPEN(IEXT)=IPEN                                             00018600
            IEDG(IEXT)=IEDGP                                            00018700
            IF (NITERA.LT.(NITLIM+3)) THEN                              00018800
C.... TRY AGAIN                                                         00018900
              U=U+DU                                                    00019000
              V=V+DV                                                    00019100
              GOTO 10                                                   00019200
            ELSE                                                        00019300
              IF (IBUG.EQ.11) THEN                                      00019400
C                                                                       00019500
C.... DEBUG PRINT                                                       00019600
C                                                                       00019700
                CALL BAD(-1,0,' ',0)                                    00019800
                MSG=' NO CONVERGENCE IN MIXAL - LAST FOUR ITERATIONS'   00019900
                CALL CPRINT(MSG)                                        00020000
                DO 13 I=1,4                                             00020100
                  CALL BAD(1,0,'IEXT',I)                                00020200
                  CALL BAD(1,1,'UP  ',UP(I))                            00020300
                  CALL BAD(1,1,'VP  ',VP(I))                            00020400
                  CALL BAD(1,1,'PEN ',PEN(I))                           00020500
                  CALL BAD(1,0,'JPEN',JPEN(I))                          00020600
                  CALL BAD(-1,0,'IEDG',IEDG(I))                         00020700
                  CALL BAD(3,1,'SP  ',SP(1,I))                          00020800
                  CALL BAD(3,1,'TP  ',TP(1,I))                          00020900
                  CALL BAD(-3,1,'TN  ',TN(1,I))                         00021000
   13           CONTINUE                                                00021100
              ENDIF                                                     00021200
C.... THREE MORE ITERATIONS COMPLETED - INTERROGATE PENETRATIONS        00021300
              IT=1                                                      00021400
              PENMAX=PEN(IT)                                            00021500
              DO 14 I=2,4                                               00021600
                IF (PEN(I).GT.PENMAX) THEN                              00021700
                  PENMAX=PEN(I)                                         00021800
                  IT=I                                                  00021900
                ENDIF                                                   00022000
   14         CONTINUE                                                  00022100
C.... RETURN WORST CASE (I.E. LARGEST PENETRATION)                      00022200
              DO 16 I=1,3                                               00022300
                R(I)=SP(I,IT)                                           00022400
                P(I)=TP(I,IT)                                           00022500
                PN(I)=TN(I,IT)                                          00022600
   16         CONTINUE                                                  00022700
              U=UP(IT)                                                  00022800
              V=VP(IT)                                                  00022900
              IPEN=JPEN(IT)                                             00023000
              IEDGE=IEDG(IT)                                            00023100
C                                                                       00023200
              IF (PENMAX.GT.0.D0) THEN                                  00023300
C.... PENETRATION WITHOUT CONVERGENCE                                   00023400
                IFLAG=-1                                                00023500
                MSG='0PENETRATION DETECTED WITHOUT CONVERGENCE'         00023600
                CALL CPRINT(MSG)                                        00023700
                CALL CFORM(' PENMAX =',MSG,1,9)                         00023800
                CALL FCONV(PENMAX,MSG,11,13,6)                          00023900
                CALL CPRINT(MSG)                                        00024000
              ELSE                                                      00024100
C.... NO CONVERGENCE AND NO OBSERVED PENETRATION                        00024200
                IFLAG=0                                                 00024300
              ENDIF                                                     00024400
            ENDIF                                                       00024500
          ENDIF                                                         00024600
        ELSE                                                            00024700
C.... TRY AGAIN                                                         00024800
          U=U+DU                                                        00024900
          V=V+DV                                                        00025000
          GOTO 10                                                       00025100
        END IF                                                          00025200
C                                                                       00025300
      ENDIF                                                             00025400
C                                                                       00025500
C.... STORE SURFACE POINT, TOOL POINT AND NORMAL AT CONVERGENCE         00025600
C     OR FINAL ATTEMPT AT CONVERGENCE                                   00025700
      DO 20 I=1,3                                                       00025800
        PPOINT(I)=R(I)                                                  00025900
        TPOINT(I)=P(I)                                                  00026000
        PNORM(I)=PN(I)                                                  00026100
20    CONTINUE                                                          00026200
C... STORE U,V OF SURFACE POINT                                         00026300
      UPEN=U                                                            00026400
      VPEN=V                                                            00026500
C                                                                       00026600
      END                                                               00026700
**** SOURCE FILE : NORMA.ORG   ***
*
      SUBROUTINE NORMA(X,XNORM,XMOD)                                    00000100
C                                                                       00000200
C     GIVEN 3-D VECTOR X, CALCULATES NORMALISED (UNIT) VECTOR XNORM     00000300
C     AND MODULUS OF X AS XMOD                                          00000400
C                                                                       00000500
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000600
      DIMENSION X(3),XNORM(3)                                           00000700
C                                                                       00000800
      CALL VECMOD(X,XMOD)                                               00000900
C                                                                       00001000
      IF (XMOD.LT.1E-10) THEN                                           00001100
         A=0                                                            00001200
      ELSE                                                              00001300
         A=1/XMOD                                                       00001400
      END IF                                                            00001500
C                                                                       00001600
      DO 10 K=1,3                                                       00001700
        XNORM(K)=A*X(K)                                                 00001800
10    CONTINUE                                                          00001900
C                                                                       00002000
      END                                                               00002100
**** SOURCE FILE : PENCUT.V01   ***
*
      SUBROUTINE PENCUT(R,RN,TOOLCE,TOOLAX,TUL,PSIDE,PTHICK,            00000100
     1      T,TN,PEN,ISEG)                                              00000200
C                                                                       00000300
C     CALCS. PENETRATION OF POINT R INTO CUTTER                         00000400
C                                                                       00000500
C                                                                       00000600
C     T            NEAREST POINT ON TOOL TO R                           00000700
C     TN           TOOL NORMAL AT T                                     00000800
C     ISEG  =  0   T ON:-   BOTTOM FLAT                                 00000900
C              1            BALL OR CORNER RADIUS                       00001000
C              2            CYLINDRICAL SHANK                           00001100
C     PEN      = PENETRATION: DISTANCE R-T (+VE FOR HIT)                00001200
C     PSIDE    = TOOL SIDE OF SURFACE                                   00001300
C     PTHICK   = PART SURFACE THICKNESS                                 00001400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00001500
C.... SURFACE POINT AND NORMAL                                          00001600
      DIMENSION R(3),RN(3)                                              00001700
C.... TOOL AXIS                                                         00001800
      DIMENSION TOOLAX(3)                                               00001900
C.... TOOLCENTRE                                                        00002000
      DIMENSION TOOLCE(3)                                               00002100
C.... CUTTER GEOMETRY                                                   00002200
      DIMENSION TUL(7)                                                  00002300
C                                                                       00002400
C.... WORKSPACE                                                         00002500
      DIMENSION V(3),V1(3),W(3)                                         00002600
C.... ASSOCIATED CORNER RADIUS CENTER                                   00002700
      DIMENSION XR(3)                                                   00002800
C.... ASSOCIATED POINT ON TOOL AND TOOL NORMAL                          00002900
      DIMENSION T(3)                                                    00003000
      DIMENSION TN(3)                                                   00003100
C                                                                       00003200
      DOUBLE PRECISION ETA6                                             00003300
      PARAMETER (ETA6=1.D-6)                                            00003400
C                                                                       00003500
C.... CALCULATE HEIGHT,A OF POINT R ABOVE TOOL CENTER                   00003600
C                                                                       00003700
      DO 10 K=1,3                                                       00003800
        V(K)=R(K)-TOOLCE(K)                                             00003900
10    CONTINUE                                                          00004000
      CALL DOTF(A,V,TOOLAX)                                             00004100
C                                                                       00004200
C.... CALCULATE RADIAL DIRECTION,W AND DISTANCE,B FROM TOOL AXIS        00004300
C                                                                       00004400
      DO 20 K=1,3                                                       00004500
        V1(K)=V(K)-A*TOOLAX(K)                                          00004600
20    CONTINUE                                                          00004700
      CALL NORMA(V1,W,B)                                                00004800
C                                                                       00004900
C.... COMPUTE SURFACE SIDE OF TOOL                                      00005000
C                                                                       00005100
      IF (B.GT.TUL(2)) THEN                                             00005120
        S=-PSIDE                                                        00005130
      ELSE                                                              00005140
        CALL DOTF(S,RN,W)                                               00005200
        S=S*PSIDE                                                       00005300
        S=SIGN(1.D0,S)                                                  00005400
      ENDIF                                                             00005450
C                                                                       00005500
C.... COMPUTATION OF ASSOCIATED POINT, TOOL NORMAL AND PENETRATION      00005600
C     WILL DEPEND ON RELATIVE LOCATION OF SURFACE POINT TO TOOL CENTER  00005700
C                                                                       00005800
      IF (A.GE.0.D0) THEN                                               00005900
C.... CYLINDER CASES                                                    00006000
        IF (B.GE.TUL(3)) THEN                                           00006100
C.... 'OUTER' CYLINDER CASE                                             00006200
          ISEG=2                                                        00006300
          PEN=TUL(2) + S*B + PTHICK                                     00006400
          DO 30 K=1,3                                                   00006500
            TN(K)=S*W(K)                                                00006600
            T(K)=TOOLCE(K) - TUL(2)*TN(K) + A*TOOLAX(K)                 00006700
30        CONTINUE                                                      00006800
C                                                                       00006900
        ELSE                                                            00007000
C.... 'INNER' CYLINDER CASE                                             00007100
          DO 40 K=1,3                                                   00007200
            XR(K)=TOOLCE(K) - S*TUL(3)*W(K)                             00007300
            V1(K)=R(K)-XR(K)                                            00007400
40        CONTINUE                                                      00007500
          CALL NORMA(V1,TN,X)                                           00007600
          ISEG=1                                                        00007700
          PEN=X + TUL(1) + PTHICK                                       00007800
          DO 50 K=1,3                                                   00007900
            T(K)=XR(K) - TUL(1)*TN(K)                                   00008000
50        CONTINUE                                                      00008100
        ENDIF                                                           00008200
C                                                                       00008300
      ELSE                                                              00008400
C.... CORNER RADIUS OR BASE                                             00008500
        IF (B.LE.TUL(3)) THEN                                           00008600
C     BOTTOM FLAT CASE                                                  00008700
          ISEG=0                                                        00008800
          PEN=TUL(4)+TUL(1) + A + PTHICK                                00008900
          DO 60 K=1,3                                                   00009000
            TN(K)=TOOLAX(K)                                             00009100
            T(K)=TOOLCE(K) + V1(K)-(TUL(4)+TUL(1))*TOOLAX(K)            00009200
60        CONTINUE                                                      00009300
        ELSE                                                            00009400
C     CORNER RADIUS                                                     00009500
          ISEG=1                                                        00009600
          DO 70 K=1,3                                                   00009700
            XR(K)=TOOLCE(K)+TUL(3)*W(K)                                 00009800
70        CONTINUE                                                      00009900
C                                                                       00010000
          DO 80 K=1,3                                                   00010100
            V1(K)=XR(K)-R(K)                                            00010200
80        CONTINUE                                                      00010300
          CALL NORMA(V1,TN,X)                                           00010400
C                                                                       00010500
          PEN=TUL(1) - X + PTHICK                                       00010600
C                                                                       00010700
          DO 90 K=1,3                                                   00010800
            T(K)=XR(K)-TUL(1)*TN(K)                                     00010900
90        CONTINUE                                                      00011000
C                                                                       00011100
        ENDIF                                                           00011200
C                                                                       00011300
      ENDIF                                                             00011400
C                                                                       00011500
      END                                                               00011600
**** SOURCE FILE : REMINT.ORG   ***
*
      SUBROUTINE REMINT(TE,TA,TUL,PSURF,IPSIZE,PSIDE,PTHICK,TOLIN,      00000100
     +                  LSUSP,NSUSP)                                    00000200
C                                                                       00000300
C     PURPOSE : TO CHECK OUT SUSPECT REMOTE PATCHES AND IF ANY          00000400
C               PENETRATION DETECTED STORE THE WORST PENETRATION        00000500
C               FOR EACH PATCH IN THE INTERFERENCE TABLE                00000600
C                                                                       00000700
C     ARGUMENTS:                                                        00000800
C                                                                       00000900
C     TE      -  TOOL END COORDINATES                                   00001000
C     TA      -  TOOL AXIS VECTOR                                       00001100
C     TUL     -  TOOL GEOMETRY                                          00001200
C     PSURF   -  CANONICAL FORM OF PART SURFACE (SSURF)                 00001300
C     IPSIZE  -  SIZE OF CANONICAL FORM                                 00001400
C     PSIDE   -  1 OR -1 TO AJUST SURFACE NORMAL (RU X RV)              00001500
C     PTHICK  -  THICKNESS OFFSET FROM SURFACE                          00001600
C     TOLIN   -  TOLERANCE (PS INTOL)                                   00001700
C     LSUSP   -  LIST OF SUSPECT PATCHES                                00001800
C     NSUSP   -  NUMBER OF SUSPECT PATCHES                              00001900
C                                                                       00002000
      DOUBLE PRECISION TE,TA,TUL,PSURF,PSIDE,PTHICK,TOLIN               00002100
      INTEGER IPSIZE                                                    00002200
      LOGICAL LRET                                                      00002300
C                                                                       00002400
      DIMENSION PSURF(IPSIZE),TUL(7),TE(3),TA(3)                        00002500
C                                                                       00002600
      INTEGER NSUSP,LSUSP                                               00002700
C                                                                       00002800
      DIMENSION LSUSP(NSUSP)                                            00002900
C                                                                       00003000
      INCLUDE 'INIDAT.INC'                                              00003100
      INCLUDE 'INTERF.INC'                                              00003200
      INCLUDE 'IBUGG.INC'                                               00003300
C                                                                       00003400
C     LOCAL VARIABLES                                                   00003500
C                                                                       00003600
      INTEGER NPAT,IPEN,IFLAG,IEDGE,NITERA                              00003700
      DOUBLE PRECISION TOOLCE,UPEN,VPEN,PPOINT,TPOINT,PNORM,PENMAX      00003800
      DOUBLE PRECISION USTART,VSTART                                    00003900
      DIMENSION TOOLCE(3),PPOINT(3),TPOINT(3),PNORM(3)                  00004000
C                                                                       00004100
C.... CALCULATE 'TOOL CENTER' FOR SIMPLE BE AND CRC CUTTERS             00004200
C                                                                       00004300
      DO 50 I=1,3                                                       00004400
        TOOLCE(I)=TE(I)+(TUL(4)+TUL(1))*TA(I)                           00004500
  50  CONTINUE                                                          00004600
C                                                                       00004700
      NPINTR=0                                                          00004800
C                                                                       00004900
C.... FOR EACH SUSPECT PATCH                                            00005000
C                                                                       00005100
      DO 400 I=1,NSUSP                                                  00005200
         NPAT=LSUSP(I)                                                  00005300
         IF (LNPINT.NE.0) THEN                                          00005400
C                                                                       00005500
C.... THERE WAS AT LEAST ONE INTERFERENCE DETECTED AT PREVIOUS TOOL     00005600
C     POSITION - CHECK IF ANY PENETRATION WITH THIS PATCH               00005700
C                                                                       00005800
           DO 100 J=1,LNPINT                                            00005900
             IF (NPAT.EQ.LPINTR(J)) THEN                                00006000
C.... TAKE U,V OF PREVIOUS INTERSECTION AS START VALUES                 00006100
               USTART=LUINTR(J)                                         00006200
               VSTART=LVINTR(J)                                         00006300
               GOTO 200                                                 00006400
             ENDIF                                                      00006500
  100      CONTINUE                                                     00006600
         ENDIF                                                          00006700
C.... OTHERWISE TAKE PARAMETRIC MID POINT AS START                      00006800
         USTART=0.5                                                     00006900
         VSTART=0.5                                                     00007000
  200    CONTINUE                                                       00007100
C                                                                       00007200
C.... SEARCH THIS PATCH FOR INTERFERENCE                                00007300
C                                                                       00007400
         CALL MIXAL(NPAT,IPSIZE,PSURF,PSIDE,PTHICK,TUL,TOOLCE,TA,       00007500
     +              USTART,VSTART,DULIM(NPAT),DVLIM(NPAT),UPEN,VPEN,    00007600
     +              PPOINT,TPOINT,PNORM,PENMAX,IPEN,IFLAG,IEDGE,NITERA) 00007700
C                                                                       00007800
C.... DEBUG PRINT                                                       00007900
C                                                                       00008000
         IF (IBUG.EQ.11) THEN                                           00008100
           CALL BAD(-1,0,' ',0)                                         00008200
           CALL BAD(1,0,'NPAT',NPAT)                                    00008300
           CALL BAD(1,0,'ITER',NITERA)                                  00008400
         ENDIF                                                          00008500
C                                                                       00008600
         IF (IFLAG.EQ.0) THEN                                           00008700
           IF (PENMAX.GT.TOLIN) THEN                                    00008800
C.... STORE IN INTERFERENCE TABLE                                       00008900
             NPINTR=NPINTR+1                                            00009000
             DINTR(NPINTR)=PENMAX                                       00009100
             UINTR(NPINTR)=UPEN                                         00009200
             VINTR(NPINTR)=VPEN                                         00009300
             PINTR(NPINTR)=NPAT                                         00009400
             DO 300 J=1,3                                               00009500
               SPINTR(J,NPINTR)=PPOINT(J)                               00009600
               TPINTR(J,NPINTR)=TPOINT(J)                               00009700
               SNINTR(J,NPINTR)=PNORM(J)                                00009800
 300         CONTINUE                                                   00009900
             ISEG(NPINTR)=IPEN                                          00010000
C                                                                       00010100
           ENDIF                                                        00010200
C                                                                       00010300
         ENDIF                                                          00010400
 400  CONTINUE                                                          00010500
C                                                                       00010600
      END                                                               00010700
**** SOURCE FILE : REMSCN.ORG   ***
*
      SUBROUTINE REMSCN(TE,TA,TUL,R,PSIDE,PTHICK,TOLIN,NPAT,LSUSP,NSUSP)00000100
C                                                                       00000200
C     PURPOSE: TO TEST ALL REMOTE (NON-CURRENT) PATCHES FOR POSSIBLE    00000300
C              INTEFERENCE                                              00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C                                                                       00000700
C     TE      -  TOOL END COORDINATES                                   00000800
C     TA      -  TOOL AXIS VECTOR                                       00000900
C     TUL     -  TOOL GEOMETRY                                          00001000
C     R       -  SURFACE CONTACT POINT AND DERIVATIVES                  00001100
C     PSIDE   -  1 OR -1 TO AJUST SURFACE NORMAL (RU X RV)              00001200
C     PTHICK  -  THICKNESS OFFSET FROM SURFACE                          00001300
C     TOLIN   -  TOLERANCE (PS INTOL)                                   00001400
C     NPAT    -  PATCH NUMBER FOR CONTACT POINT                         00001500
C     LSUSP   -  SUSPECT PATCHES                                        00001600
C     NSUSP   -  NUMBER OF SUSPECT PATCHES                              00001700
C                                                                       00001800
      DOUBLE PRECISION TE,TA,TUL,R,PSIDE,PTHICK,TOLIN                   00001900
      INTEGER IPSIZE,NPAT                                               00002000
C                                                                       00002100
      DIMENSION TE(3),TA(3),TUL(7),R(32)                                00002200
C                                                                       00002300
      INTEGER NSUSP,LSUSP,MXSUSP                                        00002400
      PARAMETER (MXSUSP=1000)                                           00002500
C                                                                       00002600
      DIMENSION LSUSP(MXSUSP)                                           00002700
C                                                                       00002800
      DOUBLE PRECISION BIG5,ETA6                                        00002900
C                                                                       00003000
      PARAMETER (BIG5=1D5,ETA6=1D-6)                                    00003100
C                                                                       00003200
C.... LOCAL VARIABLES                                                   00003300
C                                                                       00003400
C     TCCENT  -  CENTRE OF TOOL CONTACT SPHERE                          00003500
C     TCRAD   -  RADIUS OF TOOL CONTACT SPHERE                          00003600
C     TLCENT  -  CENTRE OF LARGE SHALLOW SPHERE THROUGH TE, RADIUS BIG5 00003700
C     TCENT   -  CENTRE OF TIGHT SPHERE ENVELOPING TOOL, RADIUS=TUL(2)  00003800
C     BALL    -  CUTTER TYPE FLAG = .TRUE. IF CUTTER IS BALLENDED       00003900
C                                 = .FALSE. OTHERWISE                   00004000
C     ISEG    -  INDICATES SEGMENT OF TOOL THAT PENETRATES              00004100
C                         = -1 IF NO PENETRATION                        00004200
C                         =  0   BOTTOM FLAT                            00004300
C                         =  1   CORNER RADIUS                          00004400
C                         =  2   CYLINDER                               00004500
C     V1      -  VECTOR FROM TOOL TIP TO CENTRE OF PATCH SPHERE         00004600
C     V2      -  V1 X TA                                                00004700
C     D       -  MINIMUM DISTANCE BETWEEN CENTRE OF PATCH SPHERE        00004800
C                AND TOOL AXIS                                          00004900
C     D2      -  SQUARE OF DISTANCE BETWEEN TWO SPHERE CENTRES          00005000
C     A       -  MINIMUM DISTANCE BETWEEN SPHERE CENTRES TO AVOID       00005100
C                INTERFERENCE                                           00005200
C                                                                       00005300
      DOUBLE PRECISION TCCENT,TCRAD,TLCENT,TCENT                        00005400
      DIMENSION TCCENT(3),TLCENT(3),TCENT(3)                            00005500
C                                                                       00005600
      LOGICAL BALL,INTF                                                 00005700
C                                                                       00005800
      DOUBLE PRECISION V1,V2,D,D2,A                                     00005900
      DIMENSION V1(3),V2(3)                                             00006000
C                                                                       00006100
      INCLUDE 'INIDAT.INC'                                              00006200
C                                                                       00006300
C.... CALCULATE TOOL CONTACT SPHERE FOR CURRENT TOOL POSITION           00006400
C                                                                       00006500
      CALL TCSPHR(TE,TA,TUL,R,PSIDE,PTHICK,TCCENT,TCRAD)                00006600
C                                                                       00006700
C.... CALCULATE CENTRE OF LARGE SHALLOW SPHERE THROUGH TE               00006800
C     AND CENTRE OF TIGHT SPHERE ENVELOPING TOOL                        00006900
C                                                                       00007000
      DO 10 I=1,3                                                       00007100
        TLCENT(I) = TE(I) + BIG5*TA(I)                                  00007200
        TCENT(I)  = TE(I) + TUL(2)*TA(I)                                00007300
  10  CONTINUE                                                          00007400
C                                                                       00007500
C.... SET FLAG INDICATING CUTTER TYPE                                   00007600
C                                                                       00007700
      IF ( ABS(TUL(1)-TUL(2)).LE.ETA6 ) THEN                            00007800
C.... BALL-ENDED                                                        00007900
        BALL=.TRUE.                                                     00008000
      ELSE                                                              00008100
        BALL=.FALSE.                                                    00008200
      ENDIF                                                             00008300
C                                                                       00008400
C.... TEST NON-CURRENT PATCHES FOR POSSIBLE INTERFERENCE                00008500
C                                                                       00008600
      NSUSP=0                                                           00008700
      DO 1000 K=1,NGP                                                   00008800
        IF (K.NE.NPAT) THEN                                             00008900
C                                                                       00009000
C.... TEST FOR INTERFERENCE OF INFINITE TOOL CYLINDER WITH              00009100
C     MINIMUM PATCH SPHERE                                              00009200
C                                                                       00009300
          DO 100 I=1,3                                                  00009400
            V1(I)=CXHULL(I,1,K)-TE(I)                                   00009500
  100     CONTINUE                                                      00009600
          CALL CROSS(V1,TA,V2)                                          00009700
          CALL VECMOD(V2,D)                                             00009800
          IF (D.GE.(CXHULL(4,1,K)+PTHICK+TUL(2)-TOLIN)) GOTO 1000       00009900
C                                                                       00010000
C.... STILL POSSIBLE INTERFERENCE WITH THIS PATCH                       00010100
C                                                                       00010200
C.... TEST FOR INTERFERENCE OF TIGHT TOOL SPHERE                        00010300
C     WITH ALL PATCH CONVEX HULL SPHERES                                00010400
C                                                                       00010500
          DO 200 J=1,NCXHUL(K)                                          00010600
            D2=DIST2(CXHULL(1,J,K),TCENT)                               00010700
            A=CXHULL(4,J,K)+PTHICK+TUL(2)-TOLIN                         00010800
            IF (D.GE.A*A) GOTO 1000                                     00010900
  200     CONTINUE                                                      00011000
C                                                                       00011100
C.... STILL POSSIBLE INTERFERENCE WITH THIS PATCH                       00011200
C                                                                       00011300
C.... TEST FOR INTERFERENCE OF SHALLOW TOOL SPHERE                      00011400
C     WITH ALL PATCH CONVEX HULL SPHERES                                00011500
C                                                                       00011600
          DO 300 J=1,NCXHUL(K)                                          00011700
            D2=DIST2(CXHULL(1,J,K),TLCENT)                              00011800
            A=CXHULL(4,J,K)+PTHICK+BIG5-TOLIN                           00011900
            IF (D.GE.A*A) GOTO 1000                                     00012000
  300     CONTINUE                                                      00012100
C                                                                       00012200
C.... STILL POSSIBLE INTERFERENCE WITH THIS PATCH                       00012300
C                                                                       00012400
C.... TEST FOR INTERFERENCE OF TOOL CONTACT SPHERE                      00012500
C     WITH ALL PATCH CONVEX HULL SPHERES                                00012600
C                                                                       00012700
          DO 400 J=1,NCXHUL(K)                                          00012800
            D2=DIST2(CXHULL(1,J,K),TCCENT)                              00012900
            A=CXHULL(4,J,K)+PTHICK+TCRAD-TOLIN                          00013000
            IF (D.GE.A*A) GOTO 1000                                     00013100
  400     CONTINUE                                                      00013200
C                                                                       00013300
C.... STILL POSSIBLE INTERFERENCE WITH THIS PATCH                       00013400
C                                                                       00013500
C.... TEST FOR INTERFERENCE OF ACTUAL TOOL                              00013600
C     WITH ALL PATCH CONVEX HULL SPHERES                                00013700
C     UNLESS CUTTER IS BALL-ENDED                                       00013800
C                                                                       00013900
          IF (.NOT.BALL) THEN                                           00014000
            DO 500 J=1,NCXHUL(K)                                        00014100
              CALL HULCUT (TE,TA,TUL,CXHULL(1,J,K),IRET)                00014200
              IF (IRET.LT.0) GOTO 1000                                  00014300
  500       CONTINUE                                                    00014400
          ENDIF                                                         00014500
C                                                                       00014600
C.... PATCH NOT CLEARED - ADD TO SUSPECT LIST                           00014700
C                                                                       00014800
          NSUSP=NSUSP+1                                                 00014900
          LSUSP(NSUSP)=K                                                00015000
        ENDIF                                                           00015100
 1000 CONTINUE                                                          00015200
C                                                                       00015300
      END                                                               00015400
**** SOURCE FILE : RESET.ORG   ***
*
      SUBROUTINE RESET                                                  00000100
C                                                                       00000200
C     PURPOSE: TO RESET INTERFERENCE TABLE FOR NEXT POINT               00000300
C                                                                       00000400
      INCLUDE 'INTERF.INC'                                              00000500
C                                                                       00000600
C                                                                       00000700
      DO 200 I=1,NPINTR                                                 00000800
C                                                                       00000900
        LDINTR(I)=DINTR(I)                                              00001000
        LPINTR(I)=PINTR(I)                                              00001100
        LUINTR(I)=UINTR(I)                                              00001200
        LVINTR(I)=VINTR(I)                                              00001300
C                                                                       00001400
        DINTR(I)=0.D0                                                   00001500
        PINTR(I)=0                                                      00001600
        UINTR(I)=0.D0                                                   00001700
        VINTR(I)=0.D0                                                   00001800
C                                                                       00001900
        ISEG(I)=0                                                       00002000
        DO 100 J=1,3                                                    00002100
          TPINTR(J,I)=0.D0                                              00002200
          SPINTR(J,I)=0.D0                                              00002300
          SNINTR(J,I)=0.D0                                              00002400
  100   CONTINUE                                                        00002500
C                                                                       00002600
  200 CONTINUE                                                          00002700
C                                                                       00002800
      LNPINT=NPINTR                                                     00002900
      NPINTR=0                                                          00003000
C                                                                       00003100
      END                                                               00003200
**** SOURCE FILE : RESTOR.ORG   ***
*
      SUBROUTINE RESTOR                                                 00000100
C                                                                       00000200
C     PURPOSE: TO RESTORE INTERFERENCE TABLE FOR USE AS START VALUES    00000300
C              FOR NEXT INTEFERENCE CHECK AFTER AVOIDING INTERFERENCE   00000400
C                                                                       00000500
      INCLUDE 'INTERF.INC'                                              00000600
C                                                                       00000700
C                                                                       00000800
      DO 200 I=1,LNPINT                                                 00000900
C                                                                       00001000
        DINTR(I)=LDINTR(I)                                              00001100
        PINTR(I)=LPINTR(I)                                              00001200
        UINTR(I)=LUINTR(I)                                              00001300
        VINTR(I)=LVINTR(I)                                              00001400
C                                                                       00001500
  200 CONTINUE                                                          00001600
C                                                                       00001700
      NPINTR=LNPINT                                                     00001800
C                                                                       00001900
      END                                                               00002000
**** SOURCE FILE : SHELLA.ORG   ***
*
      SUBROUTINE SHELLA(P,PHULL,NP,N3,C,R)                              00000100
C                                                                       00000200
C     CALCULATES CENTER C AND RADIUS R OF THE SMALLEST SPHERE WHICH     00000300
C     ENCLOSES THE FOUR POINTS P (THE CORNER POINTS OF PATCH).          00000400
C     THREE CASES, TESTED IN ORDER:-                                    00000500
C     1. ONE PAIR OF POINTS DEFINE DIAMETER OF SPHERE ENCLOSING ALL     00000600
C        FOUR CORNER POINTS. CHOOSE PAIR OF POINTS WITH GREATEST        00000700
C        SEPARATION, CHECK THAT OTHER TWO POINTS ARE INSIDE THIS SPHERE 00000800
C     2. THREE POINTS DEFINE EQUATOR OF SPHERE ENCLOSING ALL FOUR       00000900
C        POINTS. TRY ALL FOUR COMBINATIONS OF THREE POINTS, CHOOSE      00001000
C        SMALLEST SPHERE ENCLOSING FOUR POINTS                          00001100
C     3. MINIMUM SPHERE DEFINED BY ALL FOUR POINTS                      00001200
C                                                                       00001300
C     CHECKS THAT SPHERE FOUND ENCLOSES POLYGONAL CONVEX HALL PHULL     00001400
C     ADJUSTS RADIUS OF SPHERE BY UP TO 10% TO INCLUDE PHULL            00001500
C     IF NO SPHERE FOUND, THEN RETURN WITH R=0                          00001600
C                                                                       00001700
C     ON ENTRY, NP, N3 ARE DIMENSIONS OF PHULL                          00001800
C                                                                       00001900
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00002000
C                                                                       00002100
      DIMENSION P(4,3),C(3)                                             00002200
      DIMENSION PHULL(NP,N3)                                            00002300
C                                                                       00002400
C.... COEFF. MATRIX AND WORKSPACE FOR CASE 3                            00002500
      DIMENSION H(3,3),WA(3,3)                                          00002600
C.... CENTRE OF TRIAL SPHERE                                            00002700
      DIMENSION CC(3)                                                   00002800
      DIMENSION V1(3),V2(3)                                             00002900
      DIMENSION V3(3),V4(3)                                             00003000
      DIMENSION V5(3),VN(3)                                             00003100
C                                                                       00003200
C.... TEMP FOR TEST ONLY                                                00003300
      DIMENSION X1(3),X2(3)                                             00003400
C                                                                       00003500
C.... TOLERANCE                                                         00003600
      TOL=1D-3                                                          00003700
      HALF=1.D0                                                         00003800
      HALF=HALF/2.D0                                                    00003900
C                                                                       00004000
C     CASE 1.      TWO POINTS AS DIAMETER                               00004100
      NCASE=1                                                           00004200
C.... INITIALISE RADIUS SQUARED                                         00004300
      R2=0.D0                                                           00004400
      DO 10 J=1,3                                                       00004500
        DO 15 K=J+1,4                                                   00004600
          RT2=0.D0                                                      00004700
          DO 20 I=1,3                                                   00004800
            A1=P(J,I)                                                   00004900
            A2=P(K,I)                                                   00005000
C.... CENTRE OF TRIAL SPHERE                                            00005100
            CC(I)=HALF*(A1+A2)                                          00005200
            A1=HALF*(A1-A2)                                             00005300
            RT2=RT2+A1*A1                                               00005400
20        CONTINUE                                                      00005500
C                                                                       00005600
C     RT2 IS SQUARE OF RADIUS OF TRIAL SPHERE                           00005700
C.... TEST TRIAL SPHERE                                                 00005800
          IF (R2.EQ.0.D0 .OR. RT2.LE.R2) THEN                           00005900
            DO 40 L=1,4                                                 00006000
              IF (L.EQ.J .OR. L.EQ.K) GOTO 40                           00006100
              A=0.D0                                                    00006200
              DO 50 I=1,3                                               00006300
                A1=ABS(P(L,I)-CC(I))-TOL                                00006400
                A=A+A1*A1                                               00006500
50            CONTINUE                                                  00006600
C.... POINT OUTSIDE - REJECT                                            00006700
              IF (A.GT.RT2) GOTO 10                                     00006800
40          CONTINUE                                                    00006900
C           SPHERE BEST SO FAR: STORE                                   00007000
            R2=RT2                                                      00007100
            DO 60 I=1,3                                                 00007200
              C(I)=CC(I)                                                00007300
60          CONTINUE                                                    00007400
          END IF                                                        00007500
15      CONTINUE                                                        00007600
10    CONTINUE                                                          00007700
C.... ENCLOSING SPHERE FOUND - EXIT                                     00007800
      IF (R2.GT.0.D0) GOTO 300                                          00007900
C                                                                       00008000
C     CASE 2.      THREE POINTS ON DIAMETRAL PLANE                      00008100
C                                                                       00008200
      NCASE=2                                                           00008300
      DO 180 J=1,2                                                      00008400
        DO 170 K=J+1,3                                                  00008500
C.... FOR POINTS J, K, AND L                                            00008600
          DO 160 L=K+1,4                                                00008700
C.... CALC. CIRCUMCIRCLE                                                00008800
            DO 110 I=1,3                                                00008900
              V1(I)=P(K,I)-P(J,I)                                       00009000
              V2(I)=P(L,I)-P(J,I)                                       00009100
              V5(I)=V2(I)-V1(I)                                         00009200
110         CONTINUE                                                    00009300
C.... VN IS NORMAL TO PLANE OF THREE POINTS                             00009400
            CALL CROSS(V1,V2,VN)                                        00009500
            CALL CROSS(V1,VN,V3)                                        00009600
            CALL CROSS(VN,V2,V4)                                        00009700
C                                                                       00009800
            CALL DEGSOL(V5,V3,V4,A,B,I)                                 00009900
C                                                                       00010000
            RT2=0.D0                                                    00010100
            DO 120 I=1,3                                                00010200
              A1=HALF*(V1(I)+A*V3(I))                                   00010300
C.... CC IS CENTRE OF TRIAL SPHERE                                      00010400
              CC(I)=P(J,I)+A1                                           00010500
C.... RT2 IS SQUARE OF RADIUS OF TRIAL SPHERE                           00010600
              RT2=RT2+A1*A1                                             00010700
120         CONTINUE                                                    00010800
C                                                                       00010900
C.... TEST TRIAL SPHERE                                                 00011000
            IF (R2.EQ.0.D0 .OR. RT2.LE.R2) THEN                         00011100
              DO 130 KK=1,4                                             00011200
                A=0.D0                                                  00011300
                DO 140 I=1,3                                            00011400
                  A1=ABS(P(KK,I)-CC(I))-TOL                             00011500
                  A=A+A1*A1                                             00011600
140             CONTINUE                                                00011700
C.... POINT OUTSIDE - REJECT                                            00011800
                IF (A.GT.RT2) GOTO 160                                  00011900
130           CONTINUE                                                  00012000
C           SPHERE BEST SO FAR: STORE                                   00012100
              R2=RT2                                                    00012200
              DO 150 I=1,3                                              00012300
                C(I)=CC(I)                                              00012400
150           CONTINUE                                                  00012500
            END IF                                                      00012600
160       CONTINUE                                                      00012700
170     CONTINUE                                                        00012800
180   CONTINUE                                                          00012900
C.... ENCLOSING SPHERE FOUND - EXIT                                     00013000
      IF (R2.GT.0.D0) GOTO 300                                          00013100
C                                                                       00013200
C     CASE 3.      FOUR POINT SPHERE                                    00013300
      NCASE=3                                                           00013400
C.... CALC. COEFFS H(K,I), V1(I)                                        00013500
      A=0.D0                                                            00013600
      DO 200 K=1,3                                                      00013700
        A1=P(4,K)                                                       00013800
        A=A+A1*A1                                                       00013900
200   CONTINUE                                                          00014000
      B=0.D0                                                            00014100
      DO 210 K=1,3                                                      00014200
        B=A                                                             00014300
        DO 220 J=1,3                                                    00014400
          A1=P(K,J)                                                     00014500
          B=B-A1*A1                                                     00014600
          H(K,J)=P(4,J)-P(K,J)                                          00014700
220     CONTINUE                                                        00014800
        V1(K)=HALF*B                                                    00014900
210   CONTINUE                                                          00015000
C                                                                       00015100
      N3=3                                                              00015200
      NN3=3                                                             00015300
      NNN3=3                                                            00015400
      K=0                                                               00015500
C                                                                       00015600
C     SOLVE 3 X 3 EQNS. FOR CENTRE C                                    00015700
C                                                                       00015800
      CALL SOLVE3(H,V1,C,K)                                             00015900
C                                                                       00016000
C.... NO SOLUTION                                                       00016100
      IF (K.EQ.1) GOTO 300                                              00016200
      R2=0.D0                                                           00016300
C.... NOW CALC. RADIUS                                                  00016400
      DO 230 K=1,3                                                      00016500
        A1=P(1,K)-C(K)                                                  00016600
C.... R2 IS RADIUS SQUARED                                              00016700
        R2=R2+A1*A1                                                     00016800
230   CONTINUE                                                          00016900
C                                                                       00017000
C.... R IS RADIUS                                                       00017100
300   R=SQRT(R2)                                                        00017200
C     CHECK AGAINST CONVEX POLYGON                                      00017300
C                                                                       00017400
      AMAX=0.D0                                                         00017500
      DO 310 K=1,NP                                                     00017600
        A=0                                                             00017700
        DO 320 I=1,3                                                    00017800
          A1=PHULL(K,I)-C(I)                                            00017900
          A=A+A1*A1                                                     00018000
320     CONTINUE                                                        00018100
        IF (A.GT.R2 .AND. A.GT.AMAX) AMAX=A                             00018200
310   CONTINUE                                                          00018300
C.... ACCEPT RADIUS                                                     00018400
      IF (AMAX.EQ.0.D0) GOTO 330                                        00018500
      A1=SQRT(AMAX)                                                     00018600
C     A1 IS MAXIMUM DISTANCE OF HULL POINT FROM CENTRE                  00018700
C     IF A1 SUCH THAT R < A1 < 1.1*R, THEN USE A1 AS RADIUS             00018800
      IF (A1.GT.R .AND. A1.LE.(1.1D0*R)) THEN                           00018900
            R=A1                                                        00019000
C.... NO SPHERE FOUND                                                   00019100
      ELSE                                                              00019200
            R=0.D0                                                      00019300
      END IF                                                            00019400
330   CONTINUE                                                          00019500
C                                                                       00019600
      END                                                               00019700
**** SOURCE FILE : SHELLB.ORG   ***
*
      SUBROUTINE SHELLB(NN,N3,N4,RCORN1,RCORN2,CV1,CV2,RNET,            00000100
     1      SCENT,SRAD,NFLAGS)                                          00000200
C                                                                       00000300
C     CALCULATES THE FOUR "EDGE" SHELLS FOR A PATCH SPECIFIED BY RNET, E00000400
C     ON CALL:-                                                         00000500
C     N3=3                                                              00000600
C     N4=4                                                              00000700
C     NN      FIRST DIMENSION OF RNET ARRAY                             00000800
C                                                                       00000900
C                                                                       00001000
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00001100
C                                                                       00001200
C.... CORNER POINTS                                                     00001300
      DIMENSION RCORN1(N4,N3),RCORN2(N4,N3)                             00001400
C.... CORNER VECTORS                                                    00001500
      DIMENSION CV1(N4,N3),CV2(N4,N3)                                   00001600
C.... NET OF POINTS                                                     00001700
      DIMENSION RNET(NN,N3)                                             00001800
C                                                                       00001900
      DIMENSION V1(3),V2(3)                                             00002000
C                                                                       00002100
      DIMENSION D(3),E(3),F(3),AB(3),CD(3),DE(3),EA(3),EB(3),EF(3)      00002200
C                                                                       00002300
C.... SPHERE CENTRES                                                    00002400
      DIMENSION SCENT(N4,N3)                                            00002500
C.... SPHERE RADII                                                      00002600
      DIMENSION SRAD(N4)                                                00002700
C.... SET TO 1 IF SPHERE CALCULATED, ELSE 0                             00002800
      DIMENSION NFLAGS(N4)                                              00002900
C                                                                       00003000
      PARAMETER (TOL=1D-3,ETA6=1D-6,BIG8=1D8,RMAX=1D5)                  00003100
C                                                                       00003200
      JEDGE=2                                                           00003300
C                                                                       00003400
C.... MAIN LOOP                                                         00003500
      DO 10 K=1,4                                                       00003600
        IF (K.EQ.3) JEDGE=-JEDGE                                        00003700
        NFLAGS(K)=0                                                     00003800
        JJ=K+JEDGE                                                      00003900
C                                                                       00004000
C     CONSTRUCT VECTORS:-                                               00004100
        DO 20 I=1,3                                                     00004200
          E(I)=(RCORN1(K,I)+RCORN2(K,I))/FLOAT(2)                       00004300
          AB(I)=RCORN2(K,I)-RCORN1(K,I)                                 00004400
          EA(I)=RCORN1(K,I)-E(I)                                        00004500
          D(I)=RCORN1(JJ,I)                                             00004600
          CD(I)=D(I)-RCORN2(JJ,I)                                       00004700
          DE(I)=E(I)-D(I)                                               00004800
20      CONTINUE                                                        00004900
        CALL VECMOD(AB,ABMOD)                                           00005000
        IF (ABMOD.LT.TOL) THEN                                          00005100
C.... PATCH EDGE DEGENERATED TO NEAR POINT                              00005200
            SRAD(K)=0.D0                                                00005300
C                         NO SHELL CALCULATED                           00005400
            GOTO 10                                                     00005500
        END IF                                                          00005600
C                                                                       00005700
        CALL DOTF(A1,DE,AB)                                             00005800
        CALL DOTF(A2,AB,CD)                                             00005900
        AL=A1/A2                                                        00006000
        DO 30 I=1,3                                                     00006100
          V1(I)=CV1(K,I)                                                00006200
          V2(I)=CV2(K,I)                                                00006300
          F(I)=D(I)+AL*CD(I)                                            00006400
          EF(I)=F(I)-E(I)                                               00006500
30      CONTINUE                                                        00006600
C                                                                       00006700
        CALL DOTF(A1,EA,V1)                                             00006800
        CALL DOTF(A2,EF,V1)                                             00006900
        IF (ABS(A2).LT.ETA6) THEN                                       00007000
            AM1=BIG8                                                    00007100
        ELSE                                                            00007200
            AM1=A1/A2                                                   00007300
        END IF                                                          00007400
        CALL DOTF(A1,EB,V2)                                             00007500
        CALL DOTF(A2,EF,V2)                                             00007600
        IF (ABS(A2).LT.ETA6) THEN                                       00007700
            AM2=BIG8                                                    00007800
        ELSE                                                            00007900
            AM2=A1/A2                                                   00008000
        END IF                                                          00008100
        IF (AM1.GT.0.D0 .AND. AM2.GT.0.D0 .AND. AM2.LT.AM1) THEN        00008200
            AM1=AM2                                                     00008300
        ELSE IF (AM2.GT.0.D0 .AND. AM1.LE.0.D0) THEN                    00008400
            AM1=AM2                                                     00008500
        END IF                                                          00008600
C                                                                       00008700
        CALL VECMOD(EF,EFMOD)                                           00008800
C                                                                       00008900
        A2=ABMOD*ABMOD/4.D0                                             00009000
        IF (AM1.LE.0.D0) THEN                                           00009100
            AR=RMAX                                                     00009200
        ELSE                                                            00009300
            A1=AM1*EFMOD                                                00009400
            AR=SQRT(A1*A1+A2)                                           00009500
        END IF                                                          00009600
C                                                                       00009700
        IF (AR.GE.RMAX) THEN                                            00009800
            AR=RMAX                                                     00009900
            AM1=SQRT(AR*AR-A2)/EFMOD                                    00010000
        END IF                                                          00010100
C                                                                       00010200
C                                                                       00010300
        SRAD(K)=AR                                                      00010400
        DO 60 I=1,3                                                     00010500
          SCENT(K,I)=E(I)+AM1*EF(I)                                     00010600
60      CONTINUE                                                        00010700
C                                                                       00010800
        NCOUNT=0                                                        00010900
100     CONTINUE                                                        00011000
        NCOUNT=NCOUNT+1                                                 00011100
C     SPHERE ENCLOSES V1 AND V2. NOW TEST THAT RNET POINTS ARE INCLUDED 00011200
        AMAX=0                                                          00011300
        DO 110 J=1,25                                                   00011400
          A1=0                                                          00011500
          DO 120 I=1,3                                                  00011600
            A2=RNET(J,I)-SCENT(K,I)                                     00011700
            A1=A1+A2*A2                                                 00011800
120       CONTINUE                                                      00011900
          IF (A1.GT.AMAX) AMAX=A1                                       00012000
110     CONTINUE                                                        00012100
C.... A IS DIST. FROM CENTRE TO FURTHEST POINT OF RNET                  00012200
        A=SQRT(AMAX)                                                    00012300
        A1=A-AR                                                         00012400
C.... HULL POINTS INSIDE SPHERE                                         00012500
        IF (A1.LE.TOL) THEN                                             00012600
C.... CONVEX HULL FOUND - SET FLAG                                      00012700
            NFLAGS(K)=1                                                 00012800
            GOTO 10                                                     00012900
        END IF                                                          00013000
        IF (A1.LE.(1.1*ABMOD)) THEN                                     00013100
C.... INCREASE RADIUS                                                   00013200
            AR=A                                                        00013300
            SRAD(K)=A                                                   00013400
C.... TRY FOR FIT                                                       00013500
            IF (NCOUNT.LE.2) GOTO 100                                   00013600
        ELSE                                                            00013700
            SRAD(K)=0                                                   00013800
        END IF                                                          00013900
C                                                                       00014000
10    CONTINUE                                                          00014100
C                                                                       00014200
      END                                                               00014300
**** SOURCE FILE : SOLVE3.ORG   ***
*
      SUBROUTINE SOLVE3(A,B,X,IFLAG)                                    00000100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000200
C     GIVEN A, B, SOLVES AX=B                                           00000300
      DIMENSION A(3,3),B(3),X(3)                                        00000400
C                                                                       00000500
C                                                                       00000600
      D=A(1,1)*(A(2,2)*A(3,3)-A(2,3)*A(3,2))                            00000700
     1       -A(1,2)*(A(2,1)*A(3,3)-A(2,3)*A(3,1))                      00000800
     1       +A(1,3)*(A(2,1)*A(3,2)-A(2,2)*A(3,1))                      00000900
      IF (ABS(D).LT.1D-8) THEN                                          00001000
            IFLAG=1                                                     00001100
            GOTO 100                                                    00001200
      END IF                                                            00001300
C                                                                       00001400
      IFLAG=0                                                           00001500
      D=1.D0/D                                                          00001600
C                                                                       00001700
      E=B(1)*(A(2,2)*A(3,3)-A(2,3)*A(3,2))                              00001800
     1       -A(1,2)*(B(2)*A(3,3)-A(2,3)*B(3))                          00001900
     1       +A(1,3)*(B(2)*A(3,2)-A(2,2)*B(3))                          00002000
      X(1)=E*D                                                          00002100
C                                                                       00002200
      E=A(1,1)*(B(2)*A(3,3)-A(2,3)*B(3))                                00002300
     1       -B(1)*(A(2,1)*A(3,3)-A(2,3)*A(3,1))                        00002400
     1       +A(1,3)*(A(2,1)*B(3)-B(2)*A(3,1))                          00002500
      X(2)=E*D                                                          00002600
C                                                                       00002700
      E=A(1,1)*(A(2,2)*B(3)-B(2)*A(3,2))                                00002800
     1       -A(1,2)*(A(2,1)*B(3)-B(2)*A(3,1))                          00002900
     1       +B(1)*(A(2,1)*A(3,2)-A(2,2)*A(3,1))                        00003000
      X(3)=E*D                                                          00003100
C                                                                       00003200
100   CONTINUE                                                          00003300
C                                                                       00003400
      END                                                               00003500
**** SOURCE FILE : TCSPHR.V01   ***
*
      SUBROUTINE TCSPHR(TE,TA,TUL,R,PSIDE,PTHICK,TCCENT,TCRAD)          00000100
C                                                                       00000200
C     PURPOSE: COMPUTE THE CENTRE AND RADIUS OF THE TOOL CONTACT SPHERE 00000300
C                                                                       00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C                                                                       00000700
C     TE      -  TOOL END COORDINATES                                   00000800
C     TA      -  TOOL AXIS VECTOR                                       00000900
C     TUL     -  TOOL GEOMETRY                                          00001000
C     R       -  SURFACE CONTACT POINT AND DERIVATIVES                  00001100
C     PSIDE   -  1 OR -1 TO AJUST SURFACE NORMAL (RU X RV)              00001200
C     PTHICK  -  THICKNESS OFFSET FROM SURFACE                          00001300
C     TCCENT  -  CENTRE OF TOOL CONTACT SPHERE                          00001400
C     TCRAD   -  RADIUS OF TOOL CONTACT SPHERE                          00001500
C                                                                       00001600
      DOUBLE PRECISION TE,TA,TUL,R,PSIDE,PTHICK,TCCENT,TCRAD            00001700
C                                                                       00001800
      DIMENSION TE(3),TA(3),TUL(7),R(32),TCCENT(3)                      00001900
C                                                                       00002000
      DOUBLE PRECISION BIG5,ETA6,ONE                                    00002100
C                                                                       00002200
      PARAMETER (BIG5=1D5,ETA6=1D-6,ONE=1D0)                            00002300
C                                                                       00002400
C.... LOCAL VARIABLES                                                   00002500
C                                                                       00002600
C     COSA    -  COSINE OF ANGLE BETWEEN SURFACE NORMAL AND TOOL AXIS   00002700
C     SINA    -  SINE             (DITTO)                               00002800
C     OFFSET  -  POSITION OF CENTRE ALONG TA FROM TE                    00002900
C                                                                       00003000
      DOUBLE PRECISION COSA,SINA,OFFSET                                 00003100
C                                                                       00003200
      CALL DOTF(COSA,R(29),TA)                                          00003300
C                                                                       00003400
      IF (ABS(ONE-COSA).LE.ETA6) THEN                                   00003500
C                                                                       00003600
C.... SN PARALLEL TO TA                                                 00003700
C                                                                       00003800
        DO 10 I=1,3                                                     00003900
          TCCENT(I)=TE(I)+BIG5*TA(I)                                    00004000
   10   CONTINUE                                                        00004100
        TCRAD=BIG5                                                      00004200
C                                                                       00004300
      ELSE                                                              00004400
        SINA=SQRT(1-COSA*COSA)                                          00004500
C                                                                       00004600
C.... RADIUS = E/SINA + R                                               00004700
C                                                                       00004800
        TCRAD=TUL(3)/SINA + TUL(1)                                      00004900
C                                                                       00005000
C.... POSITION OF CENTRE ALONG TA FROM TE                               00005100
C                                                                       00005200
C            = F + (TCRAD-R)*COSA                                       00005300
C                                                                       00005400
        OFFSET=TUL(4)+TUL(1) + (TCRAD-TUL(1))*COSA                      00005500
        DO 20 I=1,3                                                     00005600
          TCCENT(I)=TE(I) + OFFSET*TA(I)                                00005700
   20   CONTINUE                                                        00005800
C                                                                       00005900
      ENDIF                                                             00006000
C                                                                       00006100
      END                                                               00006200
**** SOURCE FILE : TECALC.ORG   ***
*
      SUBROUTINE TECALC(R,TA,U,PSIDE,PTHICK,TOLCOM,TUL,TE)              00000100
C                                                                       00000200
C     PURPOSE: COMPUTE TE GIVEN CURRENT CONTACT POINT R AND TA          00000300
C                                                                       00000400
C                                                                       00000500
C     ARGUMENTS:                                                        00000600
C      R      - INPUT SURFACE CONTACT POINT/DERIVATIVES(SEE CNSURF)     00000700
C      TA     - INPUT TOOL AXIS                                         00000800
C      U      - LOCAL FORWARD DIRECTION                                 00000900
C      PSIDE  - INPUT 1 OR -1, DEFINES CUTTER SIDE OF SURFACE           00001000
C      PTHICK - PART GEOMETRY THICK SPECIFICATION                       00001100
C      TOLCOM - TOLERANCE BAND COMPENSATION                             00001200
C      TUL    - CUTTER PARAMETERS                                       00001300
C      TE     - OUTPUT TOOL END                                         00001400
C                                                                       00001500
      DOUBLE PRECISION R,TA,U,PSIDE,PTHICK,TOLCOM,TUL,TE                00001600
      DIMENSION R(32),TA(3),U(3),TUL(7),TE(3)                           00001700
C                                                                       00001800
C     GLOBAL VARIABLES:                                                 00001900
C                                                                       00002000
      INCLUDE 'TLLDAT.INC'                                              00002100
      INCLUDE 'DARRAY.INC'                                              00002200
C                                                                       00002300
C     LOCAL VARIABLES:                                                  00002400
C                                                                       00002500
C       OFFSET - TOOL OFFSET FROM SURFACE                               00002600
C       VEC    - TOOL RADIAL AXIS                                       00002700
C       VLEN2  - LENGTH OF VEC SQUARED                                  00002800
C       V,VN   - WORK VECTORS                                           00002900
C       CANG   - COS(ANGLE BETWEEN TOOL NORMAL AND TOOL RADIAL AXES)    00003000
C       SANG   - SINE OF SAME ANGLE                                     00003100
C       TANG   - TANGENT OF SAME ANGLE                                  00003200
C       BADMSG - DIAGNOSTIC MESSAGE                                     00003300
C                                                                       00003400
      DOUBLE PRECISION OFFSET,VEC,VLEN2,V,VN,CANG,SANG,TANG             00003500
      DIMENSION VEC(3),V(3),VN(3)                                       00003600
      CHARACTER BADMSG*20                                               00003700
C                                                                       00003800
C     GENERAL CASE,TOOL OFFSET FROM SURFACE                             00003900
      OFFSET=PSIDE*(PTHICK+TOLCOM)                                      00004000
C     COMPUTE TOOL RADIAL AXIS                                          00004100
      CALL CROSS(TA,R(29),VEC)                                          00004200
C...IF TA IS PARALLEL TO SN USE U (FWD) TO DETERMINE TOOL RADIAL AXIS   00004300
      VLEN2=VEC(1)*VEC(1)+VEC(2)*VEC(2)+VEC(3)*VEC(3)                   00004400
      IF (VLEN2.LT.1.0D-12) THEN                                        00004500
        CALL CROSSV(TA,U,VEC)                                           00004600
      ELSE                                                              00004700
        DO 20 I=1,3                                                     00004800
          VEC(I)=PSIDE*VEC(I)                                           00004900
   20   CONTINUE                                                        00005000
      ENDIF                                                             00005100
      CALL CROSSV(VEC,TA,VEC)                                           00005200
C...COMPUTE TANGENT OF ANGLE BETWEEN TOOL NORMAL AND TOOL RADIAL AXIS   00005300
      CALL DOTV(CANG,VEC,R(29))                                         00005400
      CALL CROSS(VEC,R(29),V)                                           00005500
      CALL VNORM(V,VN)                                                  00005600
      CALL DOTV(SANG,V,VN)                                              00005700
      IF (ABS(CANG).GT.1.D-15) THEN                                     00005800
        TANG=SANG/CANG                                                  00005900
      ELSE                                                              00006000
        TANG=SIGN(1.D0,SANG)*1.D15                                      00006100
      ENDIF                                                             00006200
C...IS ANGLE VALID FOR SEGMENTS 3,4,5 OF CUTTER                         00006300
C   I.E. CORNER RADIUS AND ADJACENT POINT CIRCLE SEGMENTS               00006400
      DO 30 I=3,5                                                       00006500
        IF ((TCONT(I).GT.0).AND.                                        00006600
     1     ((TANG-TANLO(I))*(TANG-TANHI(I)).LE.0.D0)) THEN              00006700
C...COMPUTE TOOL END COORDS                                             00006800
          DO 25 K=1,3                                                   00006900
            TE(K)=R(K)+(OFFSET+PSIDE*CORRAD(I))*R(28+K)                 00007000
     1           +RI(I)*VEC(K)-TLHITE(I)*TA(K)                          00007100
   25     CONTINUE                                                      00007200
          GOTO 999                                                      00007300
        ENDIF                                                           00007400
   30 CONTINUE                                                          00007500
C...NO - IS ANGLE VALID FOR TOOL TIP                                    00007600
      IF ( (TCONT(1).GT.0).AND.                                         00007700
     1   ( (TANG-TANLO(1))*(TANG-TANHI(1)).LE.0.D0) ) THEN              00007800
C...YES - OUTPUT WARNING                                                00007900
        CALL CFORM(' *** WARNING - CUTTING ON TOOL TIP ***',DARRAY,1,38)00008000
        CALL CPRINT(DARRAY)                                             00008100
        DO 40 K=1,3                                                     00008200
          TE(K)=R(K)+OFFSET*R(28+K)                                     00008300
   40   CONTINUE                                                        00008400
C...NO - IS ANGLE VALID FOR TOP OF UPPER LINE SEGMENT                   00008500
      ELSE IF ( (TCONT(7).GT.0).AND.                                    00008600
     1        ( (TANG-TANLO(7))*(TANG-TANHI(7)).LE.0.D0) ) THEN         00008700
C...YES - OUTPUT WARNING                                                00008800
        CALL CFORM(' *** WARNING - CUTTING ON POINT CIRCLE AT TOP OF UPP00008900
     1ER LINE SEGMENT ***',DARRAY,1,71)                                 00009000
        CALL CPRINT(DARRAY)                                             00009100
        DO 50 K=1,3                                                     00009200
          TE(K)=R(K)+OFFSET*R(28+K)+RI(7)*VEC(K)-TLHITE(7)*TA(K)        00009300
   50   CONTINUE                                                        00009400
C...NO - INVALID ANGLE FOR THIS CUTTER                                  00009500
      ELSE                                                              00009600
        CALL CFORM(' *** WARNING - UNABLE TO POSITION 7 SEGMENT CUTTER A00009700
     1T CURRENT SURFACE POINT - SPHERICAL CUTTER ASSUMED',DARRAY,1,101) 00009800
        CALL CPRINT(DARRAY)                                             00009900
C                                                                       00010000
      ENDIF                                                             00010100
999   CONTINUE                                                          00010200
      IF(IBUG.NE.11) GO TO 1999                                         00010300
      CALL BAD(-1,0,' ',0)                                              00010400
      BADMSG=' AFTER TECALC'                                            00010500
      CALL CPRINT(BADMSG)                                               00010600
      CALL BAD(-1,1,'TCOM',TOLCOM)                                      00010700
      CALL BAD(3,1,'TE  ',TE)                                           00010800
      CALL BAD(-3,1,'TA  ',TA)                                          00010900
      CALL BAD(-3,1,'TBEF',TBEF)                                        00011000
 1999 CONTINUE                                                          00011100
C                                                                       00011200
      END                                                               00011300
**** SOURCE FILE : TXHULL.V01   ***
*
      SUBROUTINE TXHULL(RC,RCNORM,R1,R2,R3,TLEN,TOOLAX,TOOLTP,          00000100
     1      TOOLCE,CT,HRAD,HCENT)                                       00000200
C                                                                       00000300
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000400
C                                                                       00000500
      DIMENSION RC(3),RCNORM(3)                                         00000600
      DIMENSION TOOLAX(3),TOOLCE(3),TOOLTP(3)                           00000700
C.... HULL CENTRE                                                       00000800
      DIMENSION HCENT(3)                                                00000900
      DIMENSION W1(3),W2(3)                                             00001000
C                                                                       00001100
      PARAMETER (AMEG5=1D5,ETA6=1D-6,HALF=0.5)                          00001200
C                                                                       00001300
C     CALCULATE RADIUS OF MINIMUM ENCLOSING SPHERE                      00001400
      RR1=R1*R1                                                         00001500
      DO 10 I=1,3                                                       00001600
        W1(I)=TOOLCE(I)-RC(I)                                           00001700
10    CONTINUE                                                          00001800
      CALL DOTF(B,W1,TOOLAX)                                            00001900
      CALL VECMOD(W1,C)                                                 00002000
      RA=SQRT(C*C-B*B)                                                  00002100
      IF ((RA+ETA6).GE.R1 .OR. RA.LE.R3) THEN                           00002200
        HRAD=AMEG5                                                      00002300
      ELSE                                                              00002500
C                                                                       00002600
C     CALC RADIUS OF SPHERE ON R AND ON POINT ON TOP OF TOOL OPPOSITE TO00002700
        A=RA+R1                                                         00002800
        B=TLEN-R2+B                                                     00002900
C.... HRAD IS RADIUS                                                    00003000
        HRAD=.5*SQRT(A*A+B*B)                                           00003100
        IF (HRAD.GT.AMEG5) THEN                                         00003200
          HRAD=AMEG5                                                    00003300
        ELSE                                                            00003500
C                                                                       00003600
C     CALC. MAXIMUM RADIUS OF CURVATURE OF TOOL AT R AS TR              00003700
          CALL DOTF(A,RCNORM,TOOLAX)                                    00003800
          IF ( A.LT.ETA6 .OR.( (ABS(A)-1.D0).LT.ETA6) ) THEN            00003900
            HRAD=AMEG5                                                  00004000
          ELSE                                                          00004200
            TR=R2+R3/SQRT(1-A*A)                                        00004300
            IF (TR.GT.AMEG5) THEN                                       00004400
              HRAD=AMEG5                                                00004500
            ELSE                                                        00004600
              HRAD=MAX(HRAD,TR)                                         00004700
            ENDIF                                                       00004800
          ENDIF                                                         00004900
        ENDIF                                                           00004940
      ENDIF                                                             00004960
C.... CT IS CURVATURE OF ENCLOSING SPHERE ON R                          00005000
      CT=1/HRAD                                                         00005100
C                                                                       00005200
      DO 40 I=1,3                                                       00005300
        HCENT(I)=RC(I)+HRAD*RCNORM(I)                                   00005400
40    CONTINUE                                                          00005500
C                                                                       00005600
      END                                                               00005700
**** SOURCE FILE : VECMOD.ORG   ***
*
      SUBROUTINE VECMOD(X,XMOD)                                         00000100
C                                                                       00000200
C     GIVEN 3-D VECTOR X, CALCULATES MODULUS XMOD                       00000300
C                                                                       00000400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000500
      DIMENSION X(3)                                                    00000600
C                                                                       00000700
      XMOD=SQRT(X(1)*X(1)+X(2)*X(2)+X(3)*X(3))                          00000800
C                                                                       00000900
      END                                                               00001000
**** MODULE = GOUGECHK ****
**** SOURCE FILE : DEVCAL.V01   ***
*
      SUBROUTINE DEVCAL(Q,TN,P0,P1,DEV)                                 00000100
C                                                                       00000200
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000300
C                                                                       00000400
      DIMENSION Q(3),TN(3),P0(3),P1(3),V(3),VQ(3),H(3)                  00000500
      CHARACTER*20 BADMSG                                               00000600
C                                                                       00000610
      INCLUDE 'IBUGG.INC'                                               00000620
C                                                                       00000700
      DATA Z1EM10/1.0D-10/,Z1EM20/1.0D-20/,ZERO/0.0D0/                  00000800
C                                                                       00000900
C.... COMPUTE (P1-P0) AND (Q-P0)                                        00001000
C                                                                       00001100
      DO 10 I=1,3                                                       00001200
        V(I)=P1(I)-P0(I)                                                00001300
        VQ(I)=Q(I)-P0(I)                                                00001400
   10 CONTINUE                                                          00001500
C                                                                       00001600
C.... COMPUTE LOCAL U WHERE MAX DEVIATION OCCURS                        00001700
C                                                                       00001800
      CALL DOTF(A,V,VQ)                                                 00001900
      CALL DOTF(B,V,V)                                                  00002000
      IF (B.GT.Z1EM10) THEN                                             00002100
        U=A/B                                                           00002200
      ELSE                                                              00002300
        U=0.5                                                           00002400
      ENDIF                                                             00002500
C                                                                       00002600
C.... COMPUTE DEVIATION                                                 00002700
C                                                                       00002800
      DO 20 I=1,3                                                       00002900
        H(I)=Q(I)-P0(I)-U*V(I)                                          00003000
   20 CONTINUE                                                          00003100
C                                                                       00003200
      CALL DOTF(H2,H,H)                                                 00003300
C                                                                       00003400
C.... ADD SIGN TO INDICATE WHETHER TOWARDS OR AWAY FROM TOOL            00003500
C     POSITIVE TOWARDS TOOL, NEGATIVE AWAY FROM TOOL                    00003600
C                                                                       00003700
      CALL DOTF(S,H,TN)                                                 00003800
      S=SIGN(1.D0,S)                                                    00003900
C                                                                       00004000
      IF (H2.GT.Z1EM20) THEN                                            00004100
        DEV=S*DSQRT(H2)                                                 00004200
      ELSE                                                              00004300
        DEV=ZERO                                                        00004400
      ENDIF                                                             00004500
C                                                                       00004600
      IF (IBUG.EQ.11) THEN                                              00004610
         BADMSG=' AFTER DEVCAL'                                         00004700
         CALL CPRINT(BADMSG)                                            00004800
         CALL BAD(3,1,'P0  ',P0)                                        00004900
         CALL BAD(-3,1,'P1  ',P1)                                       00005000
         CALL BAD(3,1,'Q   ',Q)                                         00005100
         CALL BAD(-3,1,'TN  ',TN)                                       00005200
         CALL BAD(3,1,'H   ',H)                                         00005300
         CALL BAD(1,1,'S   ',S)                                         00005400
         CALL BAD(-1,1,'DEV ',DEV)                                      00005500
      ENDIF                                                             00005550
C                                                                       00005600
      END                                                               00005800
**** SOURCE FILE : GCHK.V01   ***
*
      SUBROUTINE GCHK(SURF,SIDE,R ,TE ,TA ,NPAT ,UP ,VP ,               00000100
     +                          RL,TEL,TAL,NPATL,UPL,VPL,               00000200
     +                          TOLCOM,TOLI,TOLO,GFAC,IRET)             00000300
C                                                                       00000400
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000500
C                                                                       00000600
      DIMENSION SURF(*),R(32),TE(3),TA(3),RL(32),TEL(3),TAL(3)          00000700
      DIMENSION RM(32),TP(3),TPL(3),XTP(3),XTPL(3),DEV(3),TN(3)         00000800
C                                                                       00000900
      CHARACTER*20 BADMSG                                               00001000
C                                                                       00001010
      INCLUDE 'IBUGG.INC'                                               00001020
C                                                                       00001100
      DATA Z1EM10/1.0D-10/,ZERO/0.0D0/,ONE/1.0D0/                       00001200
C                                                                       00001300
C.... COMPUTE PARAMETRIC MIDPINT                                        00001400
C                                                                       00001500
      CALL MIDPNT(SURF,NPAT,UP,VP,NPATL,UPL,VPL,RM)                     00001600
C                                                                       00001700
C.... COMPUTE SURFACE CURVATURE AT MIDPOINT IN CHORD DIRECTION          00001800
C                                                                       00001900
      CALL MIDKUR(RM,R,RL,SIDE,SKRM)                                    00002000
C                                                                       00002100
C.... COMPUTE TOOL CONTACT POINT AT CURRENT AND LAST LOCATION           00002200
C     AND TOOL NORMAL AT MIDPOINT                                       00002300
C                                                                       00002400
      OFFSET=TOLCOM*SIDE                                                00002500
      DO 10 I=1,3                                                       00002600
        TP(I)=R(I)+OFFSET*R(28+I)                                       00002700
        TPL(I)=RL(I)+OFFSET*RL(28+I)                                    00002800
        TN(I)=SIDE*RM(I+28)                                             00002900
   10 CONTINUE                                                          00003000
C                                                                       00003100
C.... COMPUTE THE TWO TOOL POINTS, XTP AND XTPL THAT CORRESPOND         00003200
C     TO THE TOOL CONTACT POINT AT THE ALTERNATIVE TOOL LOCATION        00003300
C                                                                       00003400
      CALL XTPCAL(TP,TE,TA,TPL,TEL,TAL,XTP,XTPL)                        00003500
C                                                                       00003600
C.... COMPUTE DEVIATION OF MIDPOINT FROM CHORD                          00003700
C     BETWEEN TOOL CONTACT POINTS                                       00003800
C                                                                       00003900
      CALL DEVCAL(RM,TN,TP,TPL,DEV(1))                                  00004000
C                                                                       00004100
C.... COMPUTE DEVIATION OF MIDPOINT FROM CHORD                          00004200
C     BETWEEN TOOL CONTACT POINT AND CORRESPONDING POINT (XTP OR XTPL)  00004300
C     FOR BOTH TOOL LOCATIONS                                           00004400
C                                                                       00004500
      CALL DEVCAL(RM,TN,TP,XTPL,DEV(2))                                 00004600
      CALL DEVCAL(RM,TN,TPL,XTP,DEV(3))                                 00004700
C                                                                       00004800
C.... COMPUTE MAXIMUM AND MINIMUM DEVIATION                             00004900
C                                                                       00005000
      DEVMAX=ZERO                                                       00005100
      DEVMIN=ZERO                                                       00005200
      DO 20 I=1,3                                                       00005300
        IF (DEV(I).GT.DEVMAX) DEVMAX=DEV(I)                             00005400
        IF (DEV(I).LT.DEVMIN) DEVMIN=DEV(I)                             00005500
  20  CONTINUE                                                          00005600
C                                                                       00005700
C.... IS THE APPROPRIATE TOLERANCE BAND VIOLATED                        00005800
C                                                                       00005900
      IF ( (SKRM.GT.ZERO).AND.(ABS(DEVMIN).GT.TOLO) ) THEN              00006000
C.... EXCESS MATERIAL WILL BE LEFT ON                                   00006100
        IRET=-1                                                         00006200
C.... COMPUTE STEP REDUCTION FACTOR                                     00006300
        IF (TOLO.GT.Z1EM10) THEN                                        00006400
          GFAC=TOLO/ABS(DEVMIN)                                         00006500
          GFAC=MIN(GFAC,0.95D0)                                         00006600
        ELSE                                                            00006700
          GFAC=0.75                                                     00006800
        ENDIF                                                           00006900
      ELSE IF ( (SKRM.LT.ZERO).AND.(DEVMAX.GT.TOLI) ) THEN              00007000
C.... GOUGING OF SURFACE WILL OCCUR                                     00007100
        IRET=1                                                          00007200
C.... COMPUTE STEP REDUCTION FACTOR                                     00007300
        IF (TOLI.GT.Z1EM10) THEN                                        00007400
          GFAC=TOLI/DEVMAX                                              00007500
          GFAC=MIN(GFAC,0.95D0)                                         00007600
        ELSE                                                            00007700
          GFAC=0.75                                                     00007800
        ENDIF                                                           00007900
      ELSE                                                              00008000
        IRET=0                                                          00008100
        GFAC=ONE                                                        00008200
      ENDIF                                                             00008300
C                                                                       00008400
      IF (IBUG.EQ.11) THEN                                              00008450
         BADMSG= ' AFTER GCHK'                                          00008500
         CALL CPRINT(BADMSG)                                            00008600
         CALL BAD(1,1,'SKRM',SKRM)                                      00008700
         CALL BAD(1,1,'TOLI',TOLI)                                      00008800
         CALL BAD(-1,1,'TOLO',TOLO)                                     00008900
         CALL BAD(1,1,'DVMX',DEVMAX)                                    00009000
         CALL BAD(1,1,'DVMN',DEVMIN)                                    00009100
         CALL BAD(1,0,'IRET',IRET)                                      00009200
         CALL BAD(-1,1,'GFAC',GFAC)                                     00009300
      ENDIF                                                             00009350
C                                                                       00009400
      END                                                               00009600
**** SOURCE FILE : MIDKUR.V01   ***
*
      SUBROUTINE MIDKUR(R,P0,P1,SIDE,SK)                                00000100
C                                                                       00000200
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000300
C                                                                       00000400
      DIMENSION R(32),P0(3),P1(3),SX(24),CH(3),VEC(3)                   00000500
      CHARACTER*20 BADMSG                                               00000600
C                                                                       00000610
      INCLUDE 'IBUGG.INC'                                               00000620
C                                                                       00000700
C.... COMPUTE PRINCIPLE CURVATURES ETC. AT MIDPOINT, R                  00000800
C                                                                       00000900
      CALL KURSRF(R,SIDE,SX)                                            00001000
C                                                                       00001100
C.... COMPUTE CHORD DIRECTION                                           00001200
C                                                                       00001300
      DO 10 I=1,3                                                       00001400
        CH(I)=P1(I)-P0(I)                                               00001500
   10 CONTINUE                                                          00001600
      CALL VNORM(CH,CH)                                                 00001700
C                                                                       00001800
C.... PROJECT CHORD VECTOR INTO SURFACE TANGENT PLANE                   00001900
C                                                                       00002000
      CALL CROSS(R(29),CH,VEC)                                          00002100
      DO 20 I=1,3                                                       00002200
        VEC(I)=SIDE*VEC(I)                                              00002300
   20 CONTINUE                                                          00002400
C                                                                       00002500
      CALL CROSS(VEC,R(29),VEC)                                         00002600
      CALL VNORM(VEC,VEC)                                               00002700
C                                                                       00002800
C.... COMPUTE CURVATURE OF SURFACE IN DIRECTION OF CHORD                00002900
C                                                                       00003000
      CALL DOTF(XCOS,VEC,SX(5))                                         00003100
      CALL DOTF(XSIN,VEC,SX(9))                                         00003200
      SK=SX(1)*XCOS*XCOS+ SX(2)*XSIN*XSIN                               00003300
C                                                                       00003400
      IF (IBUG.EQ.11) THEN                                              00003410
         BADMSG=' AFTER MIDKUR'                                         00003500
         CALL CPRINT(BADMSG)                                            00003600
         CALL BAD(-1,1,'SK  ',SK)                                       00003700
      ENDIF                                                             00003750
C                                                                       00003800
      END                                                               00004000
**** SOURCE FILE : MIDPNT.V01   ***
*
      SUBROUTINE MIDPNT(SURF,NPAT,UP,VP,NPATL,UPL,VPL,RM)               00000100
C                                                                       00000200
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000300
C                                                                       00000400
      DIMENSION SURF(*),RM(32),B(64),IFLAG(6),ITOP(6,4)                 00000500
      CHARACTER*20 BADMSG                                               00000600
C                                                                       00000610
      INCLUDE 'IBUGG.INC'                                               00000620
C                                                                       00000700
C.... COMPUTE GLOBAL PARAMETERS FOR CURRENT AND PREVIOUS POINTS         00000800
C                                                                       00000900
      CALL MESCON(SURF,U1,V1,NPAT,UP,VP,2)                              00001000
      CALL MESCON(SURF,U2,V2,NPATL,UPL,VPL,2)                           00001100
C                                                                       00001200
C.... COMPUTE GLOBAL PARAMETERS OF MIDPOINT                             00001300
C                                                                       00001400
      U=(U1+U2)/2.0                                                     00001500
      V=(V1+V2)/2.0                                                     00001600
C                                                                       00001700
C.... COMPUTE PATCH NUMBER AND LOCAL PARAMETERS FOR MIDPOINT            00001800
C                                                                       00001900
      CALL MESCON(SURF,U,V,NPATM,UM,VM,1)                               00002000
C                                                                       00002100
C.... LOAD PATCH COEFFICIENTS                                           00002200
C                                                                       00002300
      CALL LODPCH(SURF,B,IFLAG,ITOP,NPATM,0)                            00002400
C                                                                       00002500
C.... EVALUATE COORDINATES OF MIDPOINT                                  00002600
C                                                                       00002700
      CALL CNSURF(UM,VM,B,RM,IFLAG,1)                                   00002800
C                                                                       00002900
      IF (IBUG.EQ.11) THEN                                              00002950
         BADMSG=' AFTER MIDPNT'                                         00003000
         CALL CPRINT(BADMSG)                                            00003100
         CALL BAD(1,0,'NPAT',NPAT)                                      00003200
         CALL BAD(1,1,'UP  ',UP)                                        00003300
         CALL BAD(-1,1,'VP  ',VP)                                       00003400
         CALL BAD(1,0,'NPTL',NPATL)                                     00003500
         CALL BAD(1,1,'UPL ',UPL)                                       00003600
         CALL BAD(-1,1,'VPL ',VPL)                                      00003700
         CALL BAD(1,0,'NPTM',NPATM)                                     00003800
         CALL BAD(1,1,'UM  ',UM)                                        00003900
         CALL BAD(-1,1,'VM  ',VM)                                       00004000
         CALL BAD(-3,1,'RM  ',RM)                                       00004100
      ENDIF                                                             00004150
C                                                                       00004200
      END                                                               00004400
**** SOURCE FILE : XTPCAL.V01   ***
*
      SUBROUTINE XTPCAL(TP,TE,TA,TPL,TEL,TAL,XTP,XTPL)                  00000100
C                                                                       00000200
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000300
C                                                                       00000400
      DIMENSION TP(3),TE(3),TA(3),TPL(3),TEL(3),TAL(3),XTP(3),XTPL(3)   00000500
      DIMENSION FWD(3),VN(3),VNL(3),TF(3),TFL(3),TPV(3),TPVL(3)         00000600
      CHARACTER*20 BADMSG                                               00000700
C                                                                       00000710
      INCLUDE 'IBUGG.INC'                                               00000720
C                                                                       00000800
C.... COMPUTE UNIT FORWARD VECTOR FROM TEL TO TE                        00000900
C                                                                       00001000
      DO 10 I=1,3                                                       00001100
        FWD(I)=TE(I)-TEL(I)                                             00001200
   10 CONTINUE                                                          00001300
      CALL VNORM(FWD,FWD)                                               00001400
C                                                                       00001500
C.... COMPUTE TWO VECTORS NORMAL TO FWD AND EACH TA                     00001600
C                                                                       00001700
      CALL CROSSV(TA,FWD,VN)                                            00001800
      CALL CROSSV(TAL,FWD,VNL)                                          00001900
C                                                                       00002000
C.... COMPUTE ORTHOGONAL VECTORS TF AND TFL                             00002100
C                                                                       00002200
      CALL CROSSV(VN,TA,TF)                                             00002300
      CALL CROSSV(VNL,TAL,TFL)                                          00002400
C                                                                       00002500
C.... COMPUTE VECTORS FROM TOOL TIP TO SURFACE CONTACT POINT FOR        00002600
C     EACH CASE                                                         00002700
C                                                                       00002800
      DO 20 I=1,3                                                       00002900
        TPV(I)=TP(I)-TE(I)                                              00003000
        TPVL(I)=TPL(I)-TEL(I)                                           00003100
   20 CONTINUE                                                          00003200
C                                                                       00003300
C.... PROJECT INTO LOCAL TOOL AXIS SYSTEM                               00003400
C                                                                       00003500
      CALL DOTF(X,TPV,TF)                                               00003600
      CALL DOTF(Y,TPV,VN)                                               00003700
      CALL DOTF(Z,TPV,TA)                                               00003800
C                                                                       00003900
      CALL DOTF(XL,TPVL,TFL)                                            00004000
      CALL DOTF(YL,TPVL,VNL)                                            00004100
      CALL DOTF(ZL,TPVL,TAL)                                            00004200
C                                                                       00004300
C.... COMPUTE CORRESPONDING POINTS ON TOOL                              00004400
C                                                                       00004500
      DO 30 I=1,3                                                       00004600
        XTP(I)=TE(I)+XL*TF(I)+YL*VN(I)+ZL*TA(I)                         00004700
        XTPL(I)=TEL(I)+X*TFL(I)+Y*VNL(I)+Z*TAL(I)                       00004800
   30 CONTINUE                                                          00004900
C                                                                       00005000
      IF (IBUG.EQ.11) THEN                                              00005050
         BADMSG=' AFTER XTPCAL'                                         00005100
         CALL CPRINT(BADMSG)                                            00005200
         CALL BAD(3,1,'TP  ',TP)                                        00005300
         CALL BAD(-3,1,'TPL ',TPL)                                      00005400
         CALL BAD(3,1,'TE  ',TE)                                        00005500
         CALL BAD(-3,1,'TEL ',TEL)                                      00005600
         CALL BAD(3,1,'TA  ',TA)                                        00005700
         CALL BAD(-3,1,'TAL ',TAL)                                      00005800
         CALL BAD(-3,1,'FWD ',FWD)                                      00005900
         CALL BAD(3,1,'VN  ',VN)                                        00006000
         CALL BAD(-3,1,'VNL ',VNL)                                      00006100
         CALL BAD(3,1,'TF  ',TF)                                        00006200
         CALL BAD(-3,1,'TFL ',TFL)                                      00006300
         CALL BAD(3,1,'TPV ',TPV)                                       00006400
         CALL BAD(-3,1,'TPVL',TPVL)                                     00006500
         CALL BAD(1,1,'X   ',X)                                         00006600
         CALL BAD(1,1,'Y   ',Y)                                         00006700
         CALL BAD(1,1,'Z   ',Z)                                         00006800
         CALL BAD(1,1,'XL  ',XL)                                        00006900
         CALL BAD(1,1,'YL  ',YL)                                        00007000
         CALL BAD(-1,1,'ZL  ',ZL)                                       00007100
         CALL BAD(3,1,'XTP ',XTP)                                       00007200
         CALL BAD(-3,1,'XTPL',XTPL)                                     00007300
      ENDIF                                                             00007350
C                                                                       00007400
      END                                                               00007600
**** MODULE = VAX ****
**** SOURCE FILE : ARTIME00.ORG   ***
*
*                                                                       00000100
*  * ARTIME *  FORTRAN 77 SUBROUTINE  9-DEC-1985  E.MCLELLAN            00000200
*                                                                       00000300
*  PURPOSE:  EXTRACT CURRENT DATE AND TIME AND STORE IN ATIME BLOCK     00000400
*                                                                       00000500
*  CALLING SEQUENCE:                                                    00000600
*                   CALL ARTIME                                         00000700
*                                                                       00000800
*  ARGUMENTS:  NONE                                                     00000900
*                                                                       00001000
*  GLOBAL VARIABLES:                                                    00001100
*                                                                       00001200
*---------------------------------------------------                    00001300
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00001400
*---------------------------------------------------                    00001500
*   CTIME           ATIME     CHARACTER  CURRENT TIME                   00001600
*   CDATE           ATIME     CHARACTER  CURRENT DATE                   00001700
*                                                                       00001800
*  LOCAL VARIABLES:  NONE                                               00001900
*                   TYPE       DESCRIPTION                              00002000
*                                                                       00002100
*  FILES:  NONE                                                         00002200
*                                                                       00002300
*  SUBSIDIARIES:                                                        00002400
*              DATE                                                     00002500
*              TIME                                                     00002600
*                                                                       00002700
      SUBROUTINE ARTIME                                                 00002800
C                                                                       00002900
      COMMON/ATIME/CTIME,CDATE                                          00003000
C                                                                       00003100
      CHARACTER CTIME*8,CDATE*9                                         00003200
C                                                                       00003300
      CALL TIME(CTIME)                                                  00003400
      CALL DATE(CDATE)                                                  00003500
C                                                                       00003600
      RETURN                                                            00003700
      END                                                               00003800
**** SOURCE FILE : CLOSPE00.ORG   ***
*
      SUBROUTINE CLOSPE(ID,IRET)                                        00000100
C                                                                       00000200
      INTEGER ID,IRET                                                   00000300
C                                                                       00000400
      CLOSE (UNIT=ID,ERR=10,STATUS='KEEP')                              00000500
      IRET=0                                                            00000600
      RETURN                                                            00000700
C                                                                       00000800
  10  IRET=1                                                            00000900
      RETURN                                                            00001000
      END                                                               00001100
**** SOURCE FILE : CPUTIM.ORG   ***
*
      integer*4 function cputim                                         00000100
      integer*2 w_len1,w_cod1                                           00000200
      integer*4 l_add1,l_lenadd1                                        00000300
      integer*4 status,sys$getjpi                                       00000400
      parameter (jpi$_cputim='0407'X)                                   00000500
      common/jpi_params/w_len1,w_cod1,l_add1,l_lenadd1                  00000600
      data w_len1,w_cod1/4,jpi$_cputim/                                 00000700
      data l_lenadd1/0/,istart/0/                                       00000800
      l_add1=%loc(cputim)                                               00000900
      status=sys$getjpi(,,,w_len1,,,)                                   00001000
      if(.not.status)then                                               00001100
            write(6,*)'*** Error in getting cpu time ***'               00001200
            cputim=0                                                    00001300
            return                                                      00001400
      end if                                                            00001500
      return                                                            00001600
      end                                                               00001700
**** SOURCE FILE : FILOPN00.ORG   ***
*
*                                                                       00000100
*  * FILOPN *    VAX11 FORTRAN SUBROUTINE  10.5.82 E.MCLELLAN           00000200
*                MODIFIED                  18.07.85 E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     TO OPEN A FILE WITH REQUIRED ATTRIBUTES                  00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL FILOPN(NO)                                          00000800
*  ARGUMENTS                                                            00000900
*              NO    FILE NUMBER                                        00001000
*                                                                       00001100
*  GLOBAL VARIABLES:                                                    00001200
*                                                                       00001300
*---------------------------------------------------                    00001400
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00001500
*---------------------------------------------------                    00001600
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00001700
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00001800
*                                         (DIRECT OR SEQUENTIAL)        00001900
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00002000
*                                         (FORMATTED OR UNFORMATTED)    00002100
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00002200
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00002300
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00002400
*   U               IFILTB    INTEGER    UNIT NUMBER                    00002500
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00002600
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00002700
*                                        READ OR WRITTEN (DIRECT ACCESS)00002800
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00002900
*                                         (DIERECT ACCESS)              00003000
*                                                                       00003100
*  LOCAL VARIABLES:                                                     00003200
*                   TYPE       DESCRIPTION                              00003300
*        DARRAY     CHARACTER  PRINT BUFFER                             00003400
*        POSN       INTEGER    START POSITION IN PRINT BUFFER           00003500
*        SLEN       INTEGER    LENGTH OF STRING ENTERED IN BUFFER       00003600
*                                                                       00003700
*  FILES:  FILE REFERENCED BY FILE NUMBER                               00003800
*                                                                       00003900
*  SUBSIDIARIES:                                                        00004000
*               CFORM                                                   00004100
*               ICONV                                                   00004200
*               CPRINT                                                  00004300
*                                                                       00004400
      SUBROUTINE FILOPN(NO)                                             00004500
C                                                                       00004600
      INCLUDE 'FILTAB.INC'                                              00004700
C                                                                       00004800
      INTEGER POSN,SLEN                                                 00004900
      CHARACTER*80 DARRAY                                               00005000
      DATA DARRAY/' '/                                                  00005100
C                                                                       00005200
      OPEN (UNIT=U(NO),FILE=FILNAM(NO),IOSTAT=IRET,ERR=90,              00005300
     1      STATUS=OPSTAT(NO),ACCESS=FILACC(NO),                        00005400
     2      FORM=FILFMT(NO),RECL=RL(NO))                                00005500
C                                                                       00005600
      RETURN                                                            00005700
C                                                                       00005800
   90 SLEN=0                                                            00005900
      CALL CFORM (' **** ERROR OPENING FILE :',DARRAY,2,SLEN)           00006000
      POSN=SLEN+3                                                       00006100
      SLEN=0                                                            00006200
      CALL CFORM (FILNAM(NO),DARRAY,POSN,SLEN)                          00006300
      POSN=POSN+SLEN+1                                                  00006400
      SLEN=0                                                            00006500
      CALL CFORM ('; UNIT NO :',DARRAY,POSN,SLEN)                       00006600
      POSN=POSN+SLEN+1                                                  00006700
      CALL ICONV (U(NO),DARRAY,POSN,2)                                  00006800
      POSN=POSN+4                                                       00006900
      SLEN=0                                                            00007000
      CALL CFORM ('****',DARRAY,POSN,SLEN)                              00007100
      CALL CPRINT (DARRAY)                                              00007200
      CALL ABNEND                                                       00007300
      RETURN                                                            00007400
      END                                                               00007500
**** SOURCE FILE : BDLIBCOM.V01   ***
*
      BLOCK DATA BDLIBC                                                 00000100
C                                                                       00000200
      INCLUDE 'LIBCOM.INC'                                              00000500
C                                                                       00000600
      DATA MEMNAM/' '/,APTLIB/'SYS$APTLIB:'/,FILENM/' '/                00000700
      DATA IEOF/1/                                                      00000800
C                                                                       00000900
      END                                                               00001000
**** SOURCE FILE : FINDME00.V01   ***
*
      SUBROUTINE FINDME(ID,MEMBER,IRET)                                 00000100
C                                                                       00000200
      INTEGER ID,IRET                                                   00000300
      CHARACTER*(*) MEMBER                                              00000400
C                                                                       00000500
      LOGICAL EX                                                        00000600
C                                                                       00000700
      INCLUDE 'LIBCOM.INC'                                              00000800
C                                                                       00001000
C.... SET UP FILENAME                                                   00001300
C                                                                       00001400
C                                                                       00001600
      J=INDEX(MEMBER(1:),' ')                                           00001700
      IF (J.EQ.0) THEN                                                  00002000
        FILENM=APTLIB//MEMBER//'.LDA'                                   00002100
      ELSE                                                              00002200
        FILENM=APTLIB//MEMBER(1:J-1)//'.LDA'                            00002300
      ENDIF                                                             00002500
C                                                                       00002700
C.... INQUIRE IF FILE EXISTS                                            00002800
C                                                                       00002900
      INQUIRE(FILE=FILENM,EXIST=EX)                                     00003000
      IF (EX) THEN                                                      00003100
C.... FILE EXISTS - OPEN ATTACHED TO ID                                 00003200
        OPEN(UNIT=ID,FILE=FILENM,ERR=20,STATUS='OLD',                   00003300
     +       ACCESS='SEQUENTIAL',FORM='UNFORMATTED')                    00003400
        IRET=0                                                          00003500
      ELSE                                                              00003600
        IRET=6                                                          00003700
      ENDIF                                                             00003800
      RETURN                                                            00003900
C.... ERROR OPENING FILE                                                00004000
  20  IRET=5                                                            00004100
      RETURN                                                            00004200
      END                                                               00004300
**** SOURCE FILE : LIBOPC00.W01   ***
*
      SUBROUTINE LIBOPC(IND,FLAG)                                       00000100
*                                                                       00000200
*  * LIBOPC *  VAX-11 FORTRAN VERSION  27.09.82  E.MCLELLAN             00000300
*              PORTABLE F77 VERSION REVISED  8-OCT-1987 E.MCLELLAN      00000400
*                                                                       00000500
*  PURPOSE     TO CHECK THE EXISTENCE OF APTLIB                         00000600
*              OR CLOSE UNIT REFERENCING APTLIB                         00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL LIBOPC(IND,FLAG)                                    00000900
*  ARGUMENTS                                                            00001000
*              IND   =1 DOES APTLIB EXIST                               00001100
*                    =2 CLOSE UNIT WHICH REFERENCES APTLIB              00001200
*              FLAG  =0 APTLIB EXISTS                                   00001300
*                    =1 APTLIB DOES NOT EXIST                           00001400
*                    =2 NOT USED                                        00001500
*                    =3 ALREADY CLOSED (IND=2)                          00001600
*                    =4 IND IS NOT 1 OR 2                               00001700
*                                                                       00001800
      INTEGER FLAG                                                      00001900
      LOGICAL OD,EX                                                     00002000
C                                                                       00002100
      INCLUDE 'FILTAB.INC'                                              00002200
C                                                                       00002300
      INCLUDE 'LIBCOM.INC'                                              00002400
C                                                                       00002500
C.....UNIT NUMBER FOR APTLIB                                            00002600
C                                                                       00002700
      ID=U(24)                                                          00002800
C                                                                       00002900
      IF (IND.EQ.1) THEN                                                00003000
C                                                                       00003100
C.....DOES APTLIB EXIST                                                 00003200
C                                                                       00003300
         INQUIRE(FILE=APTLIB//'INDEX',EXIST=EX)                         00003400
         IF (EX) THEN                                                   00003500
C                                                                       00003600
C.....APTLIB EXISTS                                                     00003700
            FLAG=0                                                      00003800
            RETURN                                                      00003900
         ELSE                                                           00004000
C                                                                       00004100
C.....APTLIB DOES NOT EXIST                                             00004200
         FLAG=1                                                         00004300
         RETURN                                                         00004400
         END IF                                                         00004500
C                                                                       00004600
      ELSE IF (IND.EQ.2) THEN                                           00004700
C                                                                       00004800
C.....IS UNIT OPEN                                                      00004900
         INQUIRE(UNIT=ID,OPENED=OD)                                     00005000
         IF (OD) THEN                                                   00005100
C                                                                       00005200
C.....CLOSE UNIT                                                        00005300
            CLOSE (UNIT=ID,STATUS=CLSTAT(24))                           00005400
            RETURN                                                      00005500
C                                                                       00005600
         ELSE                                                           00005700
C.....UNIT ALREADY CLOSED                                               00005800
         FLAG=3                                                         00005900
         RETURN                                                         00006000
         END IF                                                         00006100
C                                                                       00006200
      ELSE                                                              00006300
C                                                                       00006400
C.....IND NOT 1 OR 2                                                    00006500
      FLAG=4                                                            00006600
      END IF                                                            00006700
      RETURN                                                            00006800
      END                                                               00006900
**** SOURCE FILE : LIBRD000.V01   ***
*
      SUBROUTINE LIBRD(MEMBER,FLAG,ARRAY)                               00000100
*                                                                       00000200
*  * LIBRD *  VAX-11 FORTRAN 77 VERSION  28.09.82  E.MCLELLAN           00000300
*                              MODIFIED  26.09.86                       00000400
*                                                                       00000500
*  PURPOSE    TO READ A RECORD (80 CHARACTERS) FROM THE GIVEN           00000600
*             MEMBER FILE OF APTLIB                                     00000700
*  CALLING SEQUENCE                                                     00000800
*             CALL LIBRD(MEMBER,FLAG,ARRAY)                             00000900
*  ARGUMENTS                                                            00001000
*             MEMBER    CHARACTER STRING CONTAINING THE                 00001100
*                       MEMBER NAME (BCD LEFT JUSTIFIED)                00001200
*             FLAG      INTEGER SET BY LIBRD                            00001300
*                       0 = SUCCESSFUL READ                             00001400
*                       1 = END OF DATA ENCOUNTERED (EOF)               00001500
*                       2 = I/O ERROR                                   00001600
*                       3 = NOT USED                                    00001700
*                       4 = A DIFFERENT MEMBER NAME APPEARED WITHOUT    00001800
*                           CALLING LIBSCH OR BEFORE END OF DATA        00001900
*                           ENCOUNTERED                                 00002000
*             ARRAY     CHARACTER STRING TO CONTAIN A RETRIEVED RECORD  00002100
*                                                                       00002200
      CHARACTER*8 MEMBER,ARRAY*80                                       00002300
      INTEGER FLAG                                                      00002400
C                                                                       00002500
      INCLUDE 'FILTAB.INC'                                              00002600
C                                                                       00002700
      INCLUDE 'LIBCOM.INC'                                              00002900
C                                                                       00003100
C                                                                       00003200
C.....IS MEMBER NAME SAME AS IN LAST CALL TO LIBSCH                     00003300
C                                                                       00003400
      IF (MEMBER.NE.MEMNAM) THEN                                        00003500
         FLAG=4                                                         00003600
         RETURN                                                         00003700
      ELSE                                                              00003800
C.....YES - READ A RECORD FROM MEMBER FILE                              00003900
         ID=U(24)                                                       00004000
         READ (UNIT=ID,FMT='(A80)',ERR=80,END=90) ARRAY                 00004100
         FLAG=0                                                         00004200
         RETURN                                                         00004300
C                                                                       00004400
C.....I/O ERROR                                                         00004500
   80    FLAG=2                                                         00004600
         CLOSE(UNIT=ID)                                                 00004700
         RETURN                                                         00004800
C                                                                       00004900
C.....EOF ENCOUNTERED                                                   00005000
   90    FLAG=1                                                         00005100
         IEOF=1                                                         00005200
         CLOSE(UNIT=ID)                                                 00005300
         RETURN                                                         00005400
      END IF                                                            00005500
      END                                                               00005600
**** SOURCE FILE : LIBSCH00.V01   ***
*
      SUBROUTINE LIBSCH(MEMBER,FLAG)                                    00000100
*                                                                       00000200
*  * LIBSCH *  VAX-11 FORTRAN 77 VERSION  27.09.82  E.MCLELLAN          00000300
*                               MODIFIED  30.10.86  E.MCLELLAN          00000400
*                                                                       00000500
*  PURPOSE     TO SEARCH APTLIB FOR A GIVEN                             00000600
*              MEMBER FILE AND TO OPEN SAID FILE                        00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL LIBSCH(MEMBER,FLAG)                                 00000900
*  ARGUMENTS                                                            00001000
*              MEMBER    CHARACTER STRING CONTAINING THE                00001100
*                        MEMBER NAME (BCD LEFT JUSTIFIED)               00001200
*              FLAG      0 = MEMBER FOUND                               00001300
*                        1 = MEMBER NOT FOUND IN APTLIB                 00001400
*                        2 = ERROR OPENING FILE                         00001500
*                        3 = APTLIB DOES NOT EXIST                      00001600
*                        4 = LIBSCH IS CALLED BEFORE COMPLETING THE     00001700
*                            PROCESSING OF PREVIOUS MEMBER              00001800
*                                                                       00001900
      CHARACTER*(*) MEMBER                                              00002000
      INTEGER FLAG                                                      00002100
C                                                                       00002200
      INCLUDE 'FILTAB.INC'                                              00002300
C                                                                       00002400
      INCLUDE 'LIBCOM.INC'                                              00002700
C                                                                       00002800
      LOGICAL OD,EX                                                     00003100
C                                                                       00003200
C                                                                       00003300
C..... DOES APTLIB EXIST                                                00003400
      ID=U(24)                                                          00003500
      INQUIRE(FILE=APTLIB//'INDEX',EXIST=EX)                            00003700
      IF (EX) THEN                                                      00003800
C                                                                       00003900
C.....YES - HAS PROCESSING OF PREVIOUS MEMBER BEEN COMPLETED            00004000
         IF (IEOF.EQ.0) THEN                                            00004100
C.....NO                                                                00004200
             FLAG=4                                                     00004300
             RETURN                                                     00004400
C.....YES - SET UP FILE NAME FOR MEMBER                                 00004500
         ELSE                                                           00004600
            J=INDEX(MEMBER(1:),' ')                                     00004800
            IF (J.EQ.0) THEN                                            00004900
              FILENM=APTLIB//MEMBER//'.TXT'                             00005000
            ELSE                                                        00005100
              FILENM=APTLIB//MEMBER(1:J-1)//'.TXT'                      00005200
            ENDIF                                                       00005300
C                                                                       00005400
C.....STORE MEMBER NAME AND RESET EOF FLAG                              00005500
            MEMNAM=MEMBER                                               00005600
            IEOF=0                                                      00005700
C.....DOES FILE EXIST                                                   00005800
            INQUIRE(FILE=FILENM,EXIST=EX)                               00005900
               IF (EX) THEN                                             00006000
C.....YES                                                               00006100
               OPEN(UNIT=ID,FILE=FILENM,ERR=90,STATUS='OLD',            00006200
     1              ACCESS=FILACC(24),FORM=FILFMT(24))                  00006300
               FLAG=0                                                   00006400
               RETURN                                                   00006500
   90          FLAG=2                                                   00006600
               RETURN                                                   00006700
               ELSE                                                     00006800
C.....NO                                                                00006900
               FLAG=1                                                   00007000
               RETURN                                                   00007100
               END IF                                                   00007200
C                                                                       00007300
        END IF                                                          00007400
C                                                                       00007500
      ELSE                                                              00007600
C.....APTLIB DOES NOT EXIST                                             00007700
        FLAG=3                                                          00007800
      END IF                                                            00007900
      RETURN                                                            00008000
      END                                                               00008100
**** SOURCE FILE : M0002726.W02   ***
*
C                                                                       A2010001
C.....FORTRAN INTEGER FUNCTION  ...APT201                               A2010002
C                                                                       A2010003
C.....NEW SUBROUTINE FOR VAX 11 IMPLEMENTATION   02.06.82   E.MCLELLAN  A2010004
C                                                                       A2010005
C.....MODIFICATION TO PERMIT RESTART PROCEDURE USING                    A2010006
C     VAX CONDITION HANDLING FACILITIES                                 A2010007
C                                                                       A2010008
C                                                                       A2010010
      INTEGER FUNCTION APT201(ADRESS,HDRECT)                            A2010020
C                                                                       A2010024
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2010030
      DIMENSION ADRESS(*)                                               A2010060
      INTEGER APT211                                                    A2010062
C                                                                       A2010068
C                                                                       A2010070
      IAEEE=0                                                           A2010071
C...ESTABLISH CONDITION HANDLER FOR AERR ERROR                          A2010072
    1 CALL APT241                                                       A2010073
      APT201 = APT211(ADRESS,HDRECT,IAEEE)                              A2010074
      IF (IAEEE.EQ.1) GO TO 1                                           A2010075
C...REVERT TO DEFAULT CONDITION HANDLER                                 A2010076
      CALL LIB$REVERT                                                   A2010077
      RETURN                                                            A2010078
      END                                                               A2010079
C                                                                       A2010080
C                                                                       A2010086
C                                                                       A2010087
C                                                                       A2010088
C.....FORTRAN INTEGER FUNCTION  ...APT211    8/68              HG,DE,PH A2010089
C                                                                       A2010090
C.....MODIFIED FOR VAX 11 IMPLEMENTATION   02.06.82   E.MCLELLAN        A2010091
C                                                                       A2010092
C.....MODIFICATION TO PERMIT RESTART PROCEDURE USING                    A2010093
C     VAX CONDITION HANDLING FACILITIES                                 A2010094
C                                                                       A2010095
C                                                                       A2010100
      INTEGER FUNCTION APT211(ADRESS,HDRECT,IAEEE)                      A2010103
C                                                                       A2010104
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A2010105
      DIMENSION ADRESS(*)                                               A2010106
C                                                                       A2010107
      INCLUDE 'TOTAL.INC'                                               A2010211
      INCLUDE 'DSHAR4.INC'                                              A2010409
      INCLUDE 'FXCOR.INC'                                               A2010713
      INCLUDE 'HOLRTH.INC'                                              A2010777
      INCLUDE 'SV.INC'                                                  A2011081
      INCLUDE 'ZNUMBR.INC'                                              A2011177
      INCLUDE 'LDEF.INC'                                                A2011217
      INCLUDE 'ISV.INC'                                                 A2011369
      INCLUDE 'IFXCOR.INC'                                              A2011529
      INCLUDE 'KNUMBR.INC'                                              A2011785
C                                                                       A2011860
C...            SYSTEM I/O FILE NAMES                                   A2011870
C                                                                       A2011880
      INCLUDE 'SYMFIL.INC'                                              A2011895
C                                                                       A2011928
      CHARACTER*8 TEST,HNOCS                                            A2011929
      INTEGER BCDF,TDS(2)                                               A2011931
      LOGICAL FIRST                                                     A2011932
      SAVE FIRST,HOLDPP,TDS                                             A2011933
      CHARACTER*8 HOLRTH(6)                                             A2011934
      EQUIVALENCE (HOLRTH(1),HLFT)                                      A2011935
C                                                                       A2011936
      INTEGER Z4E                                                       A2011938
      PARAMETER (Z4E=1308622848)                                        A2011939
      INTEGER HOLDPP                                                    A2011940
      DIMENSION HOLDPP(8)                                               A2011950
C                                                                       A2011970
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            A2011975
      COMMON /HSAVE/ SAVEH(50)                                          A2011976
      COMMON/SQNC/ LSEQNO                                               A2011977
C                                                                       A2011980
C++++ FLAG TO ALLOW A SECOND TRY WITHOUT CHECKING TA TO OVERCOME        A2011981
C++++ ERROR 20106                                                       A2011982
      INTEGER I20106                                                    A2011983
C                                                                       A2011990
C                                                                       A2012000
      LOGICAL KCS                                                       A2012010
C                                                                       A2012022
      INCLUDE 'BLANKCOM.INC'                                            A2012024
C                                                                       A2012026
      DIMENSION MODTYP(3,6)                                             A2012040
      DIMENSION CSSAVE(10)                                              A2012050
C                                                                       A2012052
      DATA HOLDPP/0,0,Z4E,1,Z4E,1,Z4E,1/                                A2012054
      DATA HNOCS/'NOCS    '/                                            A2012056
      DATA MODTYP/1,2,3,2,1,3,6*4,1,2,3,2,1,3/                          A2012060
      DATA ZLIT2/.0349D0/                                               A2012070
      DATA FIRST/.TRUE./                                                A2012071
C                                                                       A2012072
      IF (FIRST)THEN                                                    A2012073
        HOLDPP(1) = BCDF('HOLD')                                        A2012074
        HOLDPP(2) = BCDF('PP  ')                                        A2012075
        TDS(1) = BCDF(HDS(1:4))                                         A2012076
        TDS(2) = BCDF(HDS(5:8))                                         A2012077
        FIRST=.FALSE.                                                   A2012078
      ENDIF                                                             A2012079
C                                                                       A2012081
      CALL HOLFRM(HDRECT,TEST,1,8,NWD)                                  A2012082
      IF (IAEEE .EQ. 1) GO TO 8010                                      A2012105
      IF(IAERR.EQ.1) GO TO 1000                                         A2012110
      IF(TEST.EQ.HNOCS) GO TO 8000                                      A2012115
      IF(IGOTO+ICTDEF)1,1,3000                                          A2012120
    1 DO 4001 I=1,6                                                     A2012130
      IF(TEST.EQ.HOLRTH(I)) GO TO 4002                                  A2012140
 4001 CONTINUE                                                          A2012150
      CALL AERR(20104,'APT211  ')                                       A2012160
      GO TO 1000                                                        A2012170
 4002 ISAV=I                                                            A2012180
      IF(.NOT.JDS)GO TO 4000                                            A2012190
      KSEQNO = LSEQNO                                                   A2012192
      LSEQNO = JSEQNO                                                   A2012194
      KCSCNT=ICSCNT                                                     A2012200
      KCS=JCS                                                           A2012210
      LSAV=ISFTYP(IDS)                                                  A2012220
      ISFTYP(IDS)=MSAV                                                  A2012230
      ICSCNT=0                                                          A2012240
      KIPL=IPL(ICS)                                                     A2012270
      KLMFL=LIMFL(ICS)                                                  A2012280
      KUNFL=IUNFL(ICS)                                                  A2012290
      KFIDN=ISFIDN(ICS)                                                 A2012300
      KSTYP=ISFTYP(ICS)                                                 A2012310
      KTLON=ITLON(ICS)                                                  A2012320
      SPAST=PAST(ICS)                                                   A2012330
      KCAN=ICANON(ICS)                                                  A2012340
      KFL4=IFL4(ICS)                                                    A2012350
      KFAR=IFAR(ICS)                                                    A2012360
      DO 1530 IIT = 1,10                                                A2012370
 1530 CSSAVE(IIT) = CANON(IIT+20)                                       A2012380
      CALL APT200(TDS,ADRESS,Z1)                                        A2012390
      IF(IAERR.NE.0)GO TO 1000                                          A2012395
      IF(MOTMOD.EQ.0)GO TO 4004                                         A2012400
      ISFTYP(ICS)=MODTYP(MOTMOD,ISAV)                                   A2012410
      IF(ISFTYP(ICS).EQ.2) PAST(ICS)=-K1                                A2012415
      IS=IDS                                                            A2012420
      GO TO 9200                                                        A2012430
 4000 MODFER=TEST                                                       A2012440
      IGO=ISAV                                                          A2012450
      MSAV=ISFTYP(IDS)                                                  A2012460
      IS=IDS                                                            A2012470
      CALL APT234(TDS,ADRESS)                                           A2012480
      IF(IAERR.NE.0)GO TO 1000                                          A2012490
      IF(JCS)GO TO 9200                                                 A2012500
      JSEQNO = LSEQNO                                                   A2012505
      JDS=.TRUE.                                                        A2012510
C     INTEG.ON EXFILE DP. 1ST WD UNNORM POWER,2ND INTEG VALUE           A2012520
      NR=0                                                              A2012525
      CALL EWRITE(EXFILE,NR,HOLDPP,8,IR)                                A2012530
      JHLDFG=1                                                          A2012531
      GO TO 9999                                                        A2012540
 4004 CALL AERR(20109,'APT211  ')                                       A2012550
      GO TO 1000                                                        A2012560
 9200 CALL APT235                                                       A2012570
      IF(IAERR)6000,6000,1000                                           A2012580
 6000 CALL APT240 (NUMDIM)                                              A2012590
   14 ICL = K2                                                          A2012600
      NW = 0                                                            A2012610
   19 IF (CUTDAT(6).EQ.0.)GO TO 32                                      A2012620
      NUMDIM = K1                                                       A2012630
      GO TO 32                                                          A2012640
   72 CALL APT236                                                       A2012650
      IF(IAERR.NE.0)GO TO 4006                                          A2012660
      IF(JDS)GO TO 4005                                                 A2012670
 4006 CONTINUE                                                          A2012680
      JHLDFG=0                                                          A2012682
      ITHCNT=1                                                          A2012684
      JCS=.FALSE.                                                       A2012690
      JDS=.FALSE.                                                       A2012700
      GO TO 9999                                                        A2012710
 4005 JCS=KCS                                                           A2012720
      JHLDFG=0                                                          A2012721
      GO TO 9500                                                        A2012722
 9600 CONTINUE                                                          A2012723
      NR=0                                                              A2012724
      HOLDPP(8)=K2                                                      A2012726
      CALL EWRITE(EXFILE,NR,HOLDPP,8,IR)                                A2012727
      HOLDPP(8)=K1                                                      A2012728
      ISFTYP(IDS)=LSAV                                                  A2012730
      LSEQNO = KSEQNO                                                   A2012735
      IF(.NOT.JCS)GO TO 4000                                            A2012740
      IPL(ICS)=KIPL                                                     A2012750
      LIMFL(ICS)=KLMFL                                                  A2012760
      ISFIDN(ICS)=KFIDN                                                 A2012770
      ISFTYP(ICS)=KSTYP                                                 A2012780
      ITLON(ICS)=KTLON                                                  A2012790
      PAST(ICS)=SPAST                                                   A2012800
      ICANON(ICS)=KCAN                                                  A2012810
      IFL4(ICS)=KFL4                                                    A2012820
      IFAR(ICS)=KFAR                                                    A2012830
      ICSCNT=KCSCNT                                                     A2012840
      JDS=.FALSE.                                                       A2012850
      DO 1531 IIT = 1,10                                                A2012860
 1531 CANON(IIT+20) = CSSAVE(IIT)                                       A2012870
      GO TO 4000                                                        A2012880
   32 J6 = 0                                                            A2012890
      IS=IPS                                                            A2012900
C  INITIALIZE VARIABLES FOR AMIND                                       A2012910
   33 IF (JENT(IS)) 301,302,301                                         A2012920
  301 JTN(IS) = K0                                                      A2012930
      IOPSET(IS)=0                                                      A2012940
      JU1(IS)=0                                                         A2012950
      JIOPS(IS)=0                                                       A2012960
  302 JAP = K1                                                          A2012970
  201 CALL AMIND                                                        A2012980
      IF(IAERR)1000,2000,1000                                           A2012990
 2000 IF(IPL(IS))141,140,141                                            A2013000
  141 IF(S(IS))142,39,143                                               A2013010
  142 IF (S(IS)-TAU2(IS)+1.D-4) 36,39,39                                A2013020
  143 IF (S(IS)-TAU1(IS)-1.D-4) 39,39,36                                A2013030
  140 IF(RC(IS)*S(IS))34,39,35                                          A2013040
   34 IF(DABS(S(IS))-Z9EM1*TAU(IS)-1.D-4) 39,39,36                      A2013050
   35 IF(DABS(S(IS))-EPS1(IS)-1.D-2) 39,39,36                           A2013060
   36 GO TO(505,508,504,204),JAP                                        A2013070
  505 IF (IPL(IS)) 506,202,506                                          A2013080
  202 IF (ISFTYP(IS)-K3) 504,507,504                                    A2013090
  504 RC(IS)=-RC(IS)                                                    A2013100
      JAP = JAP + K1                                                    A2013110
      GO TO 201                                                         A2013120
  506 IF (TH(IS)) 510,510,204                                           A2013130
  507 JAP = K4                                                          A2013140
  203 Z(IS)=-Z(IS)                                                      A2013150
      GO TO 201                                                         A2013160
  510 IF (IAFL(IS)) 507,511,507                                         A2013170
  511 JENT(IS)= -K1                                                     A2013180
      JAP = K4                                                          A2013190
      GO TO 201                                                         A2013200
  508 IF (TH(IS)) 509,204,204                                           A2013210
  509 JAP = JAP + K1                                                    A2013220
      GO TO 203                                                         A2013230
  204 IF(J6)38,37,38                                                    A2013240
C  CUTTER NOT WITHIN TOLERANCE OF DRIVE SURFACE AT START OF CUT SEQUENCEA2013250
   38 CALL AERR (20102,'APT211  ')                                      A2013260
      GO TO 1000                                                        A2013270
C  CUTTER NOT WITHIN TOLERANCE OF PART SURFACE AT START OF CUT SEQUENCE A2013280
   37 CALL AERR (20103,'APT211  ')                                      A2013290
      GO TO 1000                                                        A2013300
   40 J6=K1                                                             A2013310
      IS=IDS                                                            A2013320
      GO TO 33                                                          A2013330
   39 IF (JAP-K1) 480,481,480                                           A2013340
  480 TPK(1,IS)=TP(1,IS)                                                A2013350
      TPK(2,IS)=TP(2,IS)                                                A2013360
      TPK(3,IS)=TP(3,IS)                                                A2013370
      SNK(1,IS)=SN(1,IS)                                                A2013380
      SNK(2,IS)=SN(2,IS)                                                A2013390
      SNK(3,IS)=SN(3,IS)                                                A2013400
      SK(1,IS) = S(IS)                                                  A2013410
  481 IF(J6)41,40,41                                                    A2013420
C  DETERMINE GENERAL DIRECTION OF FIRST CUT VECTOR AND STORE IN FWD     A2013430
   41 DO 42 K=1,3                                                       A2013440
   42 FWD(K)=TE(K)-TEK(K)                                               A2013450
 2001 CALL VNORM(FWD,FWD)                                               A2013460
C  IGO =1 IF LFT, =2 IF RGT, =3 IF FWD, =4 IF BACK, =5 IF UP, =6 IF DOWNA2013470
C  RELATIVE TO LAST COMMAND                                             A2013480
      IF(K4-IGO)43,45,45                                                A2013490
   43 DO 44 K=1,3                                                       A2013500
   44 FWD(K)=TA(K)                                                      A2013510
      GO TO 50                                                          A2013520
   45 CALL CROSS(FWD,TA,FWD)                                            A2013530
      CALL VNORM(FWD,FWD)                                               A2013540
      IF (VTEM.GT.Z1EM6)GO TO 48                                        A2013550
   46 CALL CROSS(PMOVE,TA,FWD)                                          A2013560
      CALL VNORM(FWD,FWD)                                               A2013570
      IF(IER)47,48,47                                                   A2013580
C  FWD DIRECTION CANNOT BE DETERMINED                                   A2013590
   47 CALL AERR (20105,'APT211  ')                                      A2013600
      GO TO 1000                                                        A2013610
   48 IF(K3-IGO)49,49,50                                                A2013620
   49 CALL CROSS(TA,FWD,FWD)                                            A2013630
      CALL VNORM(FWD,FWD)                                               A2013640
      IF(IER)147,50,147                                                 A2013650
  147 GO TO 47                                                          A2013660
   50 GO TO (52,54,54,52,54,52),IGO                                     A2013670
   52 DO 53 K=1,3                                                       A2013680
   53 FWD(K)=-FWD(K)                                                    A2013690
C  CALCULATE TI VECTOR PERPENDICULAR TO BOTH PART AND DRIVE SURFACE     A2013700
C  NORMALS                                                              A2013710
   54 CALL CROSS(SN(1,IPS),SN(1,IDS),TI)                                A2013720
      CALL VNORM(TI,TI)                                                 A2013730
      IF(IER)58,60,58                                                   A2013740
   58 DO 59 K=1,3                                                       A2013750
   59 TI(K)=FWD(K)                                                      A2013760
      GO TO 67                                                          A2013770
C  TI VECTOR AND FWD VECTOR SHOULD NOT BE ORTHOGONAL. IF SO CALL AERR   A2013780
   60 TEM(1)= TI(1)*FWD(1) +TI(2)*FWD(2)+TI(3)*FWD(3)                   A2013790
      IF(DABS(TEM(1)) - ZLIT2) 64,64,63                                 A2013800
   64 IF (I20106.EQ.0) THEN                                             A2013801
C++++ HAVE SECOND TRY WITHOUT CHECKING TA TO AVOID ERROR 20106          A2013802
        I20106=1                                                        A2013803
        CALL OUTMSG('*** WARNING: ERROR 20106 IN APT201 ***')           A2013804
        CALL OUTMSG('*** TRY WITHOUT CHECKING TA        ***')           A2013805
        DO 641 K=1,3                                                    A2013806
          FWD(K)=TE(K)-TEK(K)                                           A2013807
  641   CONTINUE                                                        A2013808
        CALL VNORM(FWD,FWD)                                             A2013809
        GOTO 50                                                         A2013811
      ELSE                                                              A2013812
        CALL AERR (20106,'APT211  ')                                    A2013813
        GO TO 1000                                                      A2013820
      ENDIF                                                             A2013821
   63 IF(TEM(1)) 65,65,67                                               A2013830
   65 DO 66 K=1,3                                                       A2013840
   66 TI(K)=-TI(K)                                                      A2013850
   67 IF(NUMDIM)68,68,73                                                A2013860
C  ICSCNT = NUMBER OF CHECK SURFACES. IF MORE THAN ONE CHECK SURFACE 3D A2013870
C  ROUTES USED                                                          A2013880
 68   CONTINUE                                                          A2013890
  168 IF(I3DFLG-K1)130,73,130                                           A2013900
  130 IF(ICSCNT-K2)69,73,73                                             A2013910
C  IF THICKNESS OF PART, DRIVE, AND CHECK SURFACE NOT ZERO 3D ROUTES    A2013920
C  FOLLOWED                                                             A2013930
   69 IF(TH(IPS))173,70,173                                             A2013940
  173 GO TO 73                                                          A2013950
   70 IF(TH(IDS))174,71,174                                             A2013960
  174 GO TO 73                                                          A2013970
   71 IF(TH(ICS))73,76,73                                               A2013980
   73 CONTINUE                                                          A2013990
C  ENTRY FOR 3D CALCULATIONS                                            A2014000
  732 CALL ARLM3                                                        A2014010
      APT211=TEMP(1)+0.5                                                A2014020
  101 IF(IAERR)1000,72,1000                                             A2014030
   76 IS=ICS                                                            A2014040
      IF(ISFIDN(IDS)-K3)80,86,86                                        A2014050
   80 IF(ISFIDN(ICS)-K3)82,81,81                                        A2014060
C  LINE TO LINE CASE                                                    A2014070
   82 JBR=K3                                                            A2014080
      GO TO 83                                                          A2014090
C  CIRCLE TO LINE OR CIRCLE TO CIRCLE CASE                              A2014100
   86 JBR=K1                                                            A2014110
C  ENTRY FOR 2D CALCULATIONS                                            A2014120
   83 CALL ARLM2                                                        A2014130
      APT211=Z1                                                         A2014140
      GO TO 101                                                         A2014150
C  LINE TO CIRCLE CASE                                                  A2014160
   81 JBR=K2                                                            A2014170
      GOTO83                                                            A2014180
 6001 IF(IGOTO)3001,3001,3002                                           A2014190
 3001 CALL AERR (20107,'APT211  ')                                      A2014200
      GO TO 1000                                                        A2014210
 3002 CALL AERR (20108,'APT211  ')                                      A2014220
 1000 CONTINUE                                                          A2014230
 6002 APT211=Z1                                                         A2014240
      GO TO 72                                                          A2014250
 3000 IF(ISRCH)6001,6001,6002                                           A2014260
 9999 CONTINUE                                                          A2014270
      RETURN                                                            A2014280
 9500 JJ=0                                                              A2014290
 9510 JJ=JJ+1                                                           A2014300
      IF(JJ.EQ.ITHCNT) GO TO 9590                                       A2014310
      KK=ITABH(JJ)                                                      A2014320
      GO TO (9510,9510,9510,9504,9505,9506,9507,9508,9509,              A2014330
     C 9550,9511,9512,9513),KK                                          A2014340
 9504 CALL TOLERH                                                       A2014410
      GO TO 9510                                                        A2014420
 9505 CALL CUTTEH                                                       A2014430
      GO TO 9510                                                        A2014440
 9506 CALL CUTH                                                         A2014450
      GO TO 9510                                                        A2014460
 9507 CALL DNTCUH                                                       A2014470
      GO TO 9510                                                        A2014480
 9508 CALL INTOLH                                                       A2014490
      GO TO 9510                                                        A2014500
 9509 CALL OUTTOH                                                       A2014510
      GO TO 9510                                                        A2014520
 9550 CALL MAXDPH                                                       A2014530
      GO TO 9510                                                        A2014540
 9511 CALL INDRVH                                                       A2014550
      GO TO 9510                                                        A2014560
 9512 CALL INDRPH                                                       A2014570
      GO TO 9510                                                        A2014580
 9513 CALL THICKH                                                       A2014590
      GO TO 9510                                                        A2014600
 9590 ITHCNT=1                                                          A2014700
      IF(IAEEE.EQ.1) GO TO 8020                                         A2014705
      GO TO 9600                                                        A2014710
 8000 KSEQNO = LSEQNO                                                   A2014720
      LSEQNO = JSEQNO                                                   A2014730
      CALL APT235                                                       A2014740
      IAEEE = 1                                                         A2014745
      CALL AERR(20110,'APT211  ')                                       A2014746
 8010 IAERR = 0                                                         A2014750
      GO TO 9500                                                        A2014751
 8020 IAERR = 1                                                         A2014752
      NR = 0                                                            A2014755
      HOLDPP(8) = K2                                                    A2014760
      CALL EWRITE(EXFILE,NR,HOLDPP,8,IR)                                A2014770
      HOLDPP(8) = K1                                                    A2014780
      LSEQNO = KSEQNO                                                   A2014790
C....   RETURN TO CALLER                                                A2014800
      GO TO 1000                                                        A2014810
      END                                                               A2014820
**** SOURCE FILE : M0002827.W01   ***
*
C                                                                       CUTR0001
C...  FORTRAN SUBROUTINE               CUTTER                           CUTR0002
      SUBROUTINE CUTTER(NMBR,PRM)                                       CUTR0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CUTR0020
C                                                                       CUTR0030
C-VAX.... MODIFICATION TO PERMIT RESTART PROCEDURE USING                CUTR0031
C-VAX     VAX CONDITION HANDLING FACILITIES                             CUTR0032
      LOGICAL FLG                                                       CUTR0033
      FLG=.FALSE.                                                       CUTR0034
C.... ESTABLISH CONDITION HANDLER FRO AERR ERROR                        CUTR0035
      CALL APT241                                                       CUTR0036
   1  CALL CUTTES(NMBR,PRM,FLG)                                         CUTR0037
      IF (FLG) GOTO 1                                                   CUTR0038
C.... REVERT TO DEFAULT CONDITION HANDLER                               CUTR0040
      CALL LIB$REVERT                                                   CUTR0041
      RETURN                                                            CUTR0042
      END                                                               CUTR0043
C                                                                       CUTR0050
      SUBROUTINE CUTTES(NMBR,PRM,FLG)                                   CUTR0051
C                                                                       CUTR0052
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CUTR0053
C                                                                       CUTR0060
      INCLUDE 'TOTAL.INC'                                               CUTR0191
      INCLUDE 'FXCOR.INC'                                               CUTR0446
      INCLUDE 'ZNUMBR.INC'                                              CUTR0530
      INCLUDE 'IFXCOR.INC'                                              CUTR0670
      INCLUDE 'ISHR18.INC'                                              CUTR0762
      INCLUDE 'KNUMBR.INC'                                              CUTR0764
C                                                                       CUTR0767
C                                                                       CUTR0788
C                                                                       CUTR0893
      INTEGER HCUTER(2)                                                 CUTR0967
      INTEGER BCDF                                                      CUTR0969
C                                                                       CUTR0970
C                                                                       CUTR0974
C     25.   COMMON FOR AERR INFORMATION                                 CUTR0975
C                                                                       CUTR0976
      COMMON /AERCOM / IAERFG                                           CUTR0977
C                                                                       CUTR0980
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            CUTR0981
      COMMON /HSAVE/ SAVEH(50)                                          CUTR0982
      EQUIVALENCE  (SAVEH( 6),PARAM(1) ),(SAVEH(15),NUMBER    )         CUTR0983
      DIMENSION PRM(9)                                                  CUTR0984
C     -----------------------------------------------------------       CUTR0985
C                                                                       CUTR0990
C                                                                       CUTR1000
C...  DEFINES CUTTER SHAPE AND SETS UP TOOL DATA BLOCKS                 CUTR1010
      DIMENSION PARAM(9)                                                CUTR1011
      LOGICAL FLG                                                       CUTR1012
      HCUTER(1) = BCDF('CUTT')                                          CUTR1014
      HCUTER(2) = BCDF('ER  ')                                          CUTR1015
      IF(FLG)GO TO 9990                                                 CUTR1018
      FLG=.TRUE.                                                        CUTR1020
      DO 500 I=1,9                                                      CUTR1021
  500 PARAM(I)=PRM(I)                                                   CUTR1022
      NUMBER=NMBR                                                       CUTR1023
      IF(JHLDFG.EQ.0) GO TO 501                                         CUTR1024
      ITABH(ITHCNT)=5                                                   CUTR1025
      ITHCNT=ITHCNT+1                                                   CUTR1026
      RETURN                                                            CUTR1027
C                                                                       CUTR1028
  501 CONTINUE                                                          CUTR1029
  105 ICTDEF=K1                                                         CUTR1030
C...  ZERO CUTTER PARAMETER STORAGE AREA                                CUTR1040
      DO 110 J=1,7                                                      CUTR1050
  110 CUTDAT(J)=Z0                                                      CUTR1060
      CUTDAT(7) = TLHIT                                                 CUTR1065
      IF(NUMBER-K7)126,126,125                                          CUTR1070
  125 NUMERR=22201                                                      CUTR1090
      GO TO 1000                                                        CUTR1100
  126 DO 127 J=1,NUMBER                                                 CUTR1140
  127 CUTDAT(J)=PARAM(J)                                                CUTR1150
C  WRITE CUTTER STATEMENT ON EXFILE                                     CUTR1155
      CALL APT299(NUMBER,HCUTER,1,PARAM(1))                             CUTR1160
      IF(NUMBER.LE.1) GO TO 129                                         CUTR1162
      KK=1                                                              CUTR1164
      DO 128 I=2,NUMBER,2                                               CUTR1166
      IF(I.EQ.NUMBER) KK=0                                              CUTR1168
  128 CALL APT299(1,PARAM(I),KK,PARAM(I+1))                             CUTR1170
C                                                                       CUTR1171
C  PLACE ZEROES IN TLLDAT BLOCK                                         CUTR1172
C                                                                       CUTR1173
  129 DO 1 I=1,8                                                        CUTR1174
      TLHITE(I)=Z0                                                      CUTR1175
      SINL(I)=Z0                                                        CUTR1176
      COSL(I)=Z0                                                        CUTR1177
      UMAX(I)=Z0                                                        CUTR1178
      RI(I)=Z0                                                          CUTR1179
      CORRAD(I)=Z0                                                      CUTR1180
      TCONT(I)=Z0                                                       CUTR1181
      TLINC(I)=Z0                                                       CUTR1182
    1 CONTINUE                                                          CUTR1185
C  MAKE SURE TOOL DIAMETER NOT LESS THAN ZERO                           CUTR1190
      IF(CUTDAT(1))2,92,3                                               CUTR1200
    2 NUMERR=22202                                                      CUTR1210
      GO TO 1000                                                        CUTR1220
C  EXAMINE TOOL HEIGHT. IF LESS THAN ZERO ERROR. SET TO 5 IF = ZERO.    CUTR1230
C  OKAY OTHERWISE                                                       CUTR1240
    3 IF(CUTDAT(7))4,5,6                                                CUTR1250
    4 NUMERR=22203                                                      CUTR1260
      GO TO 1000                                                        CUTR1270
    5 CONTINUE                                                          CUTR1280
C  SUM OF ANGLES A AND B MUST BE LESS THAN 90 DEGREES                   CUTR1290
    6 IF(Z90-CUTDAT(5)-CUTDAT( 6))7,7,8                                 CUTR1300
    7 NUMERR=22204                                                      CUTR1310
      GO TO 1000                                                        CUTR1320
    8 RI(6)=Z5EM1*CUTDAT(1)                                             CUTR1330
      CUTDAT(1)=RI(6)                                                   CUTR1340
C  ERROR IF ANGLE A NEGATIVE                                            CUTR1350
      IF(CUTDAT(5))9,10,11                                              CUTR1360
    9 NUMERR=22205                                                      CUTR1370
      GO TO 1000                                                        CUTR1380
   10 COSL(2)=Z1                                                        CUTR1390
      TANHI(1)=Z1E38                                                    CUTR1400
      GO TO 12                                                          CUTR1410
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR A GREATER THAN ZERO CUTR1420
   11 TLHITE(8)=DEGRAD*CUTDAT(5)                                        CUTR1430
      SINL(2)=DSIN(TLHITE(8))                                           CUTR1440
      COSL(2)=DCOS(TLHITE(8))                                           CUTR1450
      TCONT(1)=SINL(2)/COSL(2)                                          CUTR1460
      TLHITE(6)=TCONT(1)*RI(6)                                          CUTR1470
      TANHI(1)=Z1/TCONT(1)                                              CUTR1480
C  MAKE SURE HEIGHT OF BOTTOM LINE SEGMENT DOES NOT EXCEED TOOL HEIGHT  CUTR1490
   12 IF(Z1EM5-DABS(CUTDAT(7)-TLHITE(6))) 13,13,15                      CUTR1500
   13 IF(CUTDAT(7)-TLHITE(6))14,14,16                                   CUTR1510
   14 NUMERR=22206                                                      CUTR1520
      GO TO 1000                                                        CUTR1530
   15 TLHITE(6)=CUTDAT(7)                                               CUTR1540
C  ERROR IF ANGLE B NEGATIVE                                            CUTR1550
   16 IPT1=K1                                                           CUTR1560
      IF(CUTDAT(6))17,18,19                                             CUTR1570
C                    BELL SHAPED CUTTER                                 CUTR1578
   17 CALL AERR (-22207,'CUTTER  ')                                     CUTR1580
      GO TO 19                                                          CUTR1590
   18 SINL(6)=Z1                                                        CUTR1600
      GO TO 20                                                          CUTR1610
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR B GREATER THAN ZERO CUTR1620
   19 TANHI(8)=DEGRAD*CUTDAT(6)                                         CUTR1630
      SINL(6)=DCOS(TANHI(8))                                            CUTR1640
      COSL(6)=DSIN(TANHI(8))                                            CUTR1650
      TANLO(7)=COSL(6)/SINL(6)                                          CUTR1660
C  FURTHER CALCULATIONS                                                 CUTR1670
   20 UMAX(2)=RI(6)/COSL(2)                                             CUTR1680
      UMAX(6)=(CUTDAT(7)-TLHITE(6))/SINL(6)                             CUTR1690
      RI(7)=RI(6)+COSL(6)*UMAX(6)                                       CUTR1700
      TCONT(2)=Z1                                                       CUTR1710
      TCONT(6)=Z1                                                       CUTR1720
C  EXAMINE TOOL RADIUS. IF GREATER THAN ZERO, CORNER CIRCLE WILL BE PARTCUTR1730
C  OF TOOL CONFIGURATION. IF = ZERO, TOOL WILL CONSIST ONLY OF LINE AND CUTR1740
C  POINT CIRCLE SEGMENTS. ERROR IF NEGATIVE.                            CUTR1750
      IF(CUTDAT(2))21,22,25                                             CUTR1760
   21 NUMERR=22208                                                      CUTR1770
      GO TO 1000                                                        CUTR1780
C  COMPARE LENGTH OF UPPER LINE SEGMENT TO ZERO. SET VALUES IN TLLDAT   CUTR1790
C  BLOCK ACCORDINGLY                                                    CUTR1800
   22 IF(UMAX(6))23,23,24                                               CUTR1810
   23 TANLO(7)=TANHI(1)                                                 CUTR1820
      TCONT(6)=Z0                                                       CUTR1830
      GO TO 87                                                          CUTR1840
   24 TLHITE(4)=TLHITE(6)                                               CUTR1850
      RI(4)=RI(6)                                                       CUTR1860
      TANHI(4)=TANLO(7)                                                 CUTR1870
      TANLO(4)=TANHI(1)                                                 CUTR1880
      GO TO 86                                                          CUTR1890
C  COMPUTE CENTER OF CORNER CIRCLE                                      CUTR1900
   27 CUTDAT(3)=RI(6)-CORRAD(4)                                         CUTR1910
      CUTDAT(4)=CORRAD(4)                                               CUTR1920
      GO TO 26                                                          CUTR1930
C  STORE RADIUS OF CORNER CIRCLE AND COMPUTE DISTANCE FROM CENTER OF    CUTR1940
C  CIRCLE TO BOTTOM LINE (UMAX(3))                                      CUTR1950
   25 CORRAD(4)=CUTDAT(2)                                               CUTR1960
   26 UMAX(3)=CUTDAT(4)*COSL(2)-CUTDAT(3)*SINL(2)                       CUTR1970
      TANLO(1)=CUTDAT(3)*CUTDAT(3)+CUTDAT(4)*CUTDAT(4)                  CUTR1980
C  IF = 0, CENTER OF CORNER CIRCLE HAS TO BE CALCULATED                 CUTR1990
      IF(TANLO(1)+CUTDAT(5)+CUTDAT(6)*CUTDAT(6))28,27,28                CUTR2000
C  DISTANCE FROM CENTER OF CIRCLE TO INTERSECTION OF LINE SEGMENTS      CUTR2010
   28 UMAX(1)=DSQRT((CUTDAT(3)-RI(6))*(CUTDAT(3)-RI(6))                 CUTR2020
     1        +(CUTDAT(4)-TLHITE(6))*(CUTDAT(4)-TLHITE(6)))             CUTR2030
      UMAX(7)=TANLO(7)*(CUTDAT(7)-TLHITE(6))                            CUTR2050
C  DISTANCE FROM CENTER OF CIRCLE TO UPPER END OF UPPER LINE SEGMENT    CUTR2060
      UMAX(4)=DSQRT((CUTDAT(4)-CUTDAT(7))*(CUTDAT(4)-CUTDAT(7))         CUTR2070
     1        +(CUTDAT(3)-RI(7))*(CUTDAT(3)-RI(7)))                     CUTR2080
C  IF THE Y COORD. (F) OF THE CENTER OF THE CORNER CIRCLE IS LESS THAN  CUTR2090
C  THE Y COORD. OF THE INTERSECTION OF THE LINES, THEN ERROR            CUTR2100
      IF(CUTDAT(4)+Z1EM5-TLHITE(6))29,29,30                             CUTR2110
   29 NUMERR=22209                                                      CUTR2120
      GO TO 1000                                                        CUTR2130
C  IF THE RADIUS IS BOTH LARGER THAN THE DISTANCE TO THE INTERSECTION   CUTR2140
C  OF THE LINES AND DIFFERENT THAN THE DISTANCE TO THE ORIGIN OF THE    CUTR2150
C  BOTTOM LINE SEGMENT, WE HAVE AN INVALID TOOL CONFIGURATION           CUTR2160
   33 IF(Z1EM5-DABS(TANLO(1)-CORRAD(4)*CORRAD(4))) 34,34,35             CUTR2170
   34 NUMERR=22210                                                      CUTR2180
      GO TO 1000                                                        CUTR2190
C  IF E GREATER THAN ZERO, WE HAVE AN INVALID TOOL CONFIGURATION        CUTR2200
   35 IF(CUTDAT(3))53,37,34                                             CUTR2210
   53 CALL AERR(-22211,'CUTTER  ')                                      CUTR2220
      TANHI(1)=CUTDAT(4)/CUTDAT(3)                                      CUTR2230
      TCONT(1)=CUTDAT(3)/CUTDAT(4)                                      CUTR2240
C  NO LOWER LINE SEGMENT                                                CUTR2250
   54 TCONT(2)=Z0                                                       CUTR2260
C  FURTHER TLLDAT VARIABLES                                             CUTR2270
   55 TANLO(4)=TANHI(1)                                                 CUTR2280
   56 UMAX(5)=(RI(6)-CUTDAT(3))*SINL(6)+COSL(6)*(CUTDAT(4)-TLHITE(6))   CUTR2290
C  IF = 0, THERE IS NO UPPER LINE SEGMENT AND IN THIS CASE TOOL NO GOOD CUTR2310
      IF(UMAX(6))67,57,67                                               CUTR2320
C  IF GREATER THAN ZERO, RADIUS AND DISTANCE FROM CENTER OF CORNER      CUTR2330
C  CIRCLE TO INTERSECTION OF LINES EQUAL.                               CUTR2340
   67 IF(CORRAD(4)-UMAX(1))68,68,62                                     CUTR2350
   68 TCONT(7)=CORRAD(4)*CORRAD(4)-UMAX(5)*UMAX(5)                      CUTR2360
C  LENGTH OF UPPER LINE SEGMENT                                         CUTR2370
      UMAX(6)=UMAX(6)+DSQRT(DABS(TCONT(7)))                             CUTR2380
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(5)*UMAX(5))                    CUTR2390
      UMAX(8)=CUTDAT(4)-CUTDAT(7)-TANLO(7)*(UMAX(7)+RI(6)-CUTDAT(3))    CUTR2400
      IF(Z1EM5-DABS(UMAX(8))) 72,72,69                                  CUTR2420
   72 IF(UMAX(8))73,73,77                                               CUTR2430
C  IF GREATER THAN ZERO, UPPER LINE SEGMENT WITH CORNER CIRCLE TANGENT. CUTR2440
C  OTHERWISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN PT. CIRCLE CUTR2450
   73 IF(Z1EM5-DABS(TCONT(7))) 75,75,74                                 CUTR2460
   75 IF(TCONT(7))76,76,83                                              CUTR2470
   76 GO TO 41                                                          CUTR2480
   57 NUMERR=22212                                                      CUTR2490
      GO TO 1000                                                        CUTR2500
C  WE MUST CHANGE PARAMETERS FOR BOTTOM POINT CIRCLE DUE TO NATURE OF   CUTR2510
C  CORNER CIRCLE                                                        CUTR2520
   37 CALL AERR(-22211,'CUTTER  ')                                      CUTR2530
      TCONT(1)=Z0                                                       CUTR2540
      TANHI(1)=Z1E38                                                    CUTR2550
      GO TO 54                                                          CUTR2560
C  IF GREATER THAN OR EQUAL TO ZERO, CORNER CIRCLE IS A POINT CIRCLE    CUTR2570
   30 IF(Z1EM5-DABS(CORRAD(4)-UMAX(1))) 32,31,31                        CUTR2580
   31 CORRAD(4) = 0.                                                    CUTR2582
      TANLO(1) = 0.                                                     CUTR2584
      UMAX(1) = 0.                                                      CUTR2586
      UMAX(3) = 0.                                                      CUTR2588
      UMAX(4) = 0.                                                      CUTR2590
      UMAX(7) = 0.                                                      CUTR2592
      CUTDAT(2) = 0.                                                    CUTR2594
      CUTDAT(3) = 0.                                                    CUTR2596
      CUTDAT(4) = 0.                                                    CUTR2598
      GO TO 22                                                          CUTR2600
   32 IF (CORRAD(4)-UMAX(1)) 38,38,33                                   CUTR2602
   38 IF(RI(6)+TCONT(1)*(TLHITE(6)-CUTDAT(4))-                          CUTR2610
     1CUTDAT(3)+Z1EM5)39,39,40                                          CUTR2620
C  CORNER CIRCLE INTERSECTS LOWER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTR2630
   39 NUMERR=22213                                                      CUTR2640
      GO TO 1000                                                        CUTR2650
   40 IF(CUTDAT(4)+Z1EM5-TLHITE(6)-TANLO(7)*(RI(6)-                     CUTR2660
     1CUTDAT(3)))41,41,42                                               CUTR2670
C  CORNER CIRCLE INTERSECTS UPPER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTR2680
   41 NUMERR=22214                                                      CUTR2690
      GO TO 1000                                                        CUTR2700
   42 TANLO(3)=CORRAD(4)*CORRAD(4)-UMAX(3)*UMAX(3)                      CUTR2710
      IF(TANLO(3).LT.Z0)GO TO 39                                        CUTR2715
C  LENGTH OF LOWER LINE SEGMENT                                         CUTR2720
      UMAX(2)=UMAX(2)+DSQRT(TANLO(3))                                   CUTR2730
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(3)*UMAX(3))                    CUTR2740
      TANLO(8)=CUTDAT(3)+TCONT(1)*CUTDAT(4)                             CUTR2750
      IF(DABS(TANLO(8))-Z1EM5)43,46,46                                  CUTR2760
C  IF GREATER THAN ZERO, PT. CIRCLE FOLLOWED BY CORNER CIRCLE OR JUST   CUTR2770
C  CORNER CIRCLE. OTHERWISE PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CUTR2780
C  CIRCLE, AND THEN CORNER CIRCLE                                       CUTR2790
   43 IF(Z1EM5-DABS(TANLO(3))) 44,44,54                                 CUTR2800
   44 IF(TANLO(3))45,45,50                                              CUTR2810
   45 GO TO 39                                                          CUTR2820
   46 IF(TANLO(8))51,47,47                                              CUTR2830
C  IF GREATER THAN ZERO,PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CIR-CUTR2840
C  CLE, AND THEN CORNER CIRCLE. IF = 0, PT. CIRCLE AND CORNER CIRCLE.   CUTR2850
C  ERROR LESS THAN ZERO                                                 CUTR2860
   51 IF(CORRAD(4)*CORRAD(4)-TANLO(1))52,53,50                          CUTR2870
   52 GO TO 39                                                          CUTR2880
C  IF GREATER THAN ZERO, CORNER CIRCLE TANGENT TO LOWER LINE SEGMENT    CUTR2890
   47 IF(Z1EM5-DABS(TANLO(3))) 48,48,55                                 CUTR2900
   48 IF(TANLO(3))49,49,50                                              CUTR2910
   49 GO TO 39                                                          CUTR2920
C  LOWER LINE SEGMENT, PT. CIRCLE, AND CORNER CIRCLE PARAMETER CALC.    CUTR2930
   50 TCONT(3)=DSQRT(TANLO(3))/UMAX(3)                                  CUTR2940
      TANHI(3)=(Z1-TCONT(1)*TCONT(3))/(TCONT(1)+TCONT(3))               CUTR2950
      TLHITE(3)=SINL(2)*UMAX(2)                                         CUTR2970
      RI(3)=COSL(2)*UMAX(2)                                             CUTR2980
      TANLO(3)=TANHI(1)                                                 CUTR2990
      TANLO(4)=TANHI(3)                                                 CUTR3000
      GO TO 56                                                          CUTR3010
   62 IF(Z1EM5-DABS(UMAX(4)-CORRAD(4))) 63,63,64                        CUTR3020
   63 NUMERR=22215                                                      CUTR3030
      GO TO 1000                                                        CUTR3040
C  IF GREATER THAN ZERO, CORNER CIRCLE MEETS UPPER PT. CIRCLE AT UNAC-  CUTR3050
C  CEPTABLE ANGLE. IF = 0 WE MUST CHANGE PARAMETERS FOR UPPER PT. CIRCLECUTR3060
   64 IF(CUTDAT(7)-CUTDAT(4))78,66,63                                   CUTR3070
   78 CALL AERR(-22216,'CUTTER  ')                                      CUTR3080
      TANLO(7)=(CUTDAT(4)-CUTDAT(7))/(RI(6)+SINL(6)-CUTDAT(3))          CUTR3090
   79 TCONT(6)=Z0                                                       CUTR3110
   80 TANHI(4)=Z0                                                       CUTR3120
      GO TO 85                                                          CUTR3130
C  NO UPPER LINE SEGMENT. CHANGE IN PARAMETERS FOR UPPER POINT CIRCLE   CUTR3140
C  NECESSARY DUE TO NATURE OF CORNER CIRCLE                             CUTR3150
   66 CALL AERR(-22216,'CUTTER  ')                                      CUTR3160
      TANLO(7)=Z0                                                       CUTR3170
      GO TO 79                                                          CUTR3180
C  IF GREATER THAN ZERO,CORNER CIRCLE AND THEN UPPER PT. CIRCLE. OTHER- CUTR3190
C  WISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN UPPER PT. CIRCLECUTR3200
   69 IF(Z1EM5-DABS(TCONT(7))) 70,70,79                                 CUTR3210
   70 IF(TCONT(7))71,71,83                                              CUTR3220
   71 GO TO 41                                                          CUTR3230
   74 TANHI(4)=TANLO(7)                                                 CUTR3240
      GO TO 84                                                          CUTR3250
   77 IF(Z1EM5-DABS(CORRAD(4)-UMAX(4))) 81,81,78                        CUTR3260
   81 IF(CORRAD(4)-UMAX(4))82,82,83                                     CUTR3270
   82 GO TO 41                                                          CUTR3280
C  FURTHER CALCULATIONS FOR TLLDAT BLOCK PARAMETERS                     CUTR3290
   83 TCONT(5)=DSQRT(TCONT(7))/UMAX(5)                                  CUTR3300
      TANHI(4)=(TCONT(5)+TANLO(7))/(Z1-TCONT(5)*TANLO(7))               CUTR3310
      TANLO(5)=TANHI(4)                                                 CUTR3330
      TANHI(5)=TANLO(7)                                                 CUTR3340
   84 RI(5)=RI(7)-COSL(6)*UMAX(6)                                       CUTR3350
      TLHITE(5)=CUTDAT(7)-SINL(6)*UMAX(6)                               CUTR3360
      TLHITE(6)=TLHITE(5)                                               CUTR3370
      RI(6)=RI(5)                                                       CUTR3380
   85 TLHITE(4)=CUTDAT(4)                                               CUTR3390
      RI(4)=CUTDAT(3)                                                   CUTR3400
   86 TCONT(4)=Z1                                                       CUTR3410
   87 TANLO(1)=Z1E38                                                    CUTR3420
      TLINC(2)=Z1                                                       CUTR3430
      TLINC(6)=Z1                                                       CUTR3440
      TLHITE(7)=CUTDAT(7)                                               CUTR3450
  200 IBEGIN=1                                                          CUTR3460
C  WE NOW SEARCH EACH OF THE 7 POSSIBLE SEGMENTS TO DETERMINE FIRST ONE CUTR3470
   91 IF(TCONT(IBEGIN))90,88,90                                         CUTR3480
   90 TCONT(IBEGIN-1)=-Z1                                               CUTR3490
      TCONT(8)=-Z1                                                      CUTR3500
      TCONT(7)=Z1                                                       CUTR3510
      TANHI(7)=-Z1E38                                                   CUTR3520
      TANHI(8)=-Z1E38                                                   CUTR3530
      TANLO(8)=Z1E38                                                    CUTR3540
      TLINC(8)=Z0                                                       CUTR3550
      CORRAD(8)=Z0                                                      CUTR3560
      ICTDEF=0                                                          CUTR3570
      IAERR=0                                                           CUTR3580
      CALL TLCONV                                                       CUTR3590
      GO TO 9999                                                        CUTR3600
   88 IBEGIN=IBEGIN+1                                                   CUTR3610
      IF(7-IBEGIN)89,91,91                                              CUTR3620
   89 NUMERR=22217                                                      CUTR3630
      GO TO 1000                                                        CUTR3640
   92 IF(CUTDAT(7))4,93,10                                              CUTR3650
   93 IPT1=0                                                            CUTR3660
      TANLO(7)=Z1E38                                                    CUTR3670
      IBEGIN=7                                                          CUTR3680
      GO TO 90                                                          CUTR3681
C                                                                       CUTR3685
C        ** CUTTER PARAMETER ERROR-CALL AERR AND DEFINE POINT CUTTER    CUTR3686
C                                                                       CUTR3687
 1000 IAERFG=1                                                          CUTR3690
      ICTDEF=0                                                          CUTR3691
      CALL AERR(NUMERR,'CUTTER  ')                                      CUTR3692
 9990 DO 1001 JJ=1,7                                                    CUTR3693
 1001 PARAM(JJ)=Z0                                                      CUTR3694
      NUMBER=K7                                                         CUTR3695
      FLG=.FALSE.                                                       CUTR3696
      GO TO 105                                                         CUTR3697
 9999 CONTINUE                                                          CUTR3698
      FLG=.FALSE.                                                       CUTR3699
      RETURN                                                            CUTR3700
      END                                                               CUTR3701
C                                                                       CUTR3710
C                                                                       CUTR3720
C                                                                       CUTR3730
C                                                                       CUTT0001
      SUBROUTINE CUTTEH                                                 CUTT0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CUTT0020
C                                                                       CUTT0030
C                                                                       CUTT0040
C                                                                       CUTT0050
C                                                                       CUTT0060
      INCLUDE 'TOTAL.INC'                                               CUTT0191
      INCLUDE 'FXCOR.INC'                                               CUTT0446
      INCLUDE 'ZNUMBR.INC'                                              CUTT0530
      INCLUDE 'IFXCOR.INC'                                              CUTT0670
      INCLUDE 'ISHR18.INC'                                              CUTT0762
      INCLUDE 'KNUMBR.INC'                                              CUTT0764
C                                                                       CUTT0767
C                                                                       CUTT0788
C                                                                       CUTT0893
      INTEGER HCUTER(2)                                                 CUTT0967
      INTEGER BCDF                                                      CUTT0969
C                                                                       CUTT0970
C                                                                       CUTT0974
C     25.   COMMON FOR AERR INFORMATION                                 CUTT0975
C                                                                       CUTT0976
      COMMON /AERCOM / IAERFG                                           CUTT0977
C                                                                       CUTT0980
      COMMON /HSAVE/ SAVEH(50)                                          CUTT0982
      EQUIVALENCE  (SAVEH( 6),PARAM(1) ),(SAVEH(15),NUMBER    )         CUTT0983
C     -----------------------------------------------------------       CUTT0985
C                                                                       CUTT0990
C                                                                       CUTT1000
C...  DEFINES CUTTER SHAPE AND SETS UP TOOL DATA BLOCKS                 CUTT1010
      DIMENSION PARAM(9)                                                CUTT1011
      HCUTER(1) = BCDF('CUTT')                                          CUTT1014
      HCUTER(2) = BCDF('ER  ')                                          CUTT1015
C                                                                       CUTT1028
  105 ICTDEF=K1                                                         CUTT1030
C...  ZERO CUTTER PARAMETER STORAGE AREA                                CUTT1040
      DO 110 J=1,7                                                      CUTT1050
  110 CUTDAT(J)=Z0                                                      CUTT1060
      CUTDAT(7) = TLHIT                                                 CUTT1065
      IF(NUMBER-K7)126,126,125                                          CUTT1070
  125 NUMERR=22201                                                      CUTT1090
      GO TO 1000                                                        CUTT1100
  126 DO 127 J=1,NUMBER                                                 CUTT1140
  127 CUTDAT(J)=PARAM(J)                                                CUTT1150
C  WRITE CUTTER STATEMENT ON EXFILE                                     CUTT1155
      CALL APT299(NUMBER,HCUTER,1,PARAM(1))                             CUTT1160
      IF(NUMBER.LE.1) GO TO 129                                         CUTT1162
      KK=1                                                              CUTT1164
      DO 128 I=2,NUMBER,2                                               CUTT1166
      IF(I.EQ.NUMBER) KK=0                                              CUTT1168
  128 CALL APT299(1,PARAM(I),KK,PARAM(I+1))                             CUTT1170
C                                                                       CUTT1171
C  PLACE ZEROES IN TLLDAT BLOCK                                         CUTT1172
C                                                                       CUTT1173
  129 DO 1 I=1,8                                                        CUTT1174
      TLHITE(I)=Z0                                                      CUTT1175
      SINL(I)=Z0                                                        CUTT1176
      COSL(I)=Z0                                                        CUTT1177
      UMAX(I)=Z0                                                        CUTT1178
      RI(I)=Z0                                                          CUTT1179
      CORRAD(I)=Z0                                                      CUTT1180
      TCONT(I)=Z0                                                       CUTT1181
      TLINC(I)=Z0                                                       CUTT1182
    1 CONTINUE                                                          CUTT1185
C  MAKE SURE TOOL DIAMETER NOT LESS THAN ZERO                           CUTT1190
      IF(CUTDAT(1))2,92,3                                               CUTT1200
    2 NUMERR=22202                                                      CUTT1210
      GO TO 1000                                                        CUTT1220
C  EXAMINE TOOL HEIGHT. IF LESS THAN ZERO ERROR. SET TO 5 IF = ZERO.    CUTT1230
C  OKAY OTHERWISE                                                       CUTT1240
    3 IF(CUTDAT(7))4,5,6                                                CUTT1250
    4 NUMERR=22203                                                      CUTT1260
      GO TO 1000                                                        CUTT1270
    5 CONTINUE                                                          CUTT1280
C  SUM OF ANGLES A AND B MUST BE LESS THAN 90 DEGREES                   CUTT1290
    6 IF(Z90-CUTDAT(5)-CUTDAT( 6))7,7,8                                 CUTT1300
    7 NUMERR=22204                                                      CUTT1310
      GO TO 1000                                                        CUTT1320
    8 RI(6)=Z5EM1*CUTDAT(1)                                             CUTT1330
      CUTDAT(1)=RI(6)                                                   CUTT1340
C  ERROR IF ANGLE A NEGATIVE                                            CUTT1350
      IF(CUTDAT(5))9,10,11                                              CUTT1360
    9 NUMERR=22205                                                      CUTT1370
      GO TO 1000                                                        CUTT1380
   10 COSL(2)=Z1                                                        CUTT1390
      TANHI(1)=Z1E38                                                    CUTT1400
      GO TO 12                                                          CUTT1410
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR A GREATER THAN ZERO CUTT1420
   11 TLHITE(8)=DEGRAD*CUTDAT(5)                                        CUTT1430
      SINL(2)=DSIN(TLHITE(8))                                           CUTT1440
      COSL(2)=DCOS(TLHITE(8))                                           CUTT1450
      TCONT(1)=SINL(2)/COSL(2)                                          CUTT1460
      TLHITE(6)=TCONT(1)*RI(6)                                          CUTT1470
      TANHI(1)=Z1/TCONT(1)                                              CUTT1480
C  MAKE SURE HEIGHT OF BOTTOM LINE SEGMENT DOES NOT EXCEED TOOL HEIGHT  CUTT1490
   12 IF(Z1EM5-DABS(CUTDAT(7)-TLHITE(6))) 13,13,15                      CUTT1500
   13 IF(CUTDAT(7)-TLHITE(6))14,14,16                                   CUTT1510
   14 NUMERR=22206                                                      CUTT1520
      GO TO 1000                                                        CUTT1530
   15 TLHITE(6)=CUTDAT(7)                                               CUTT1540
C  ERROR IF ANGLE B NEGATIVE                                            CUTT1550
   16 IPT1=K1                                                           CUTT1560
      IF(CUTDAT(6))17,18,19                                             CUTT1570
C                    BELL SHAPED CUTTER                                 CUTT1578
   17 CALL AERR (-22207,'CUTTEH  ')                                     CUTT1580
      GO TO 19                                                          CUTT1590
   18 SINL(6)=Z1                                                        CUTT1600
      GO TO 20                                                          CUTT1610
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR B GREATER THAN ZERO CUTT1620
   19 TANHI(8)=DEGRAD*CUTDAT(6)                                         CUTT1630
      SINL(6)=DCOS(TANHI(8))                                            CUTT1640
      COSL(6)=DSIN(TANHI(8))                                            CUTT1650
      TANLO(7)=COSL(6)/SINL(6)                                          CUTT1660
C  FURTHER CALCULATIONS                                                 CUTT1670
   20 UMAX(2)=RI(6)/COSL(2)                                             CUTT1680
      UMAX(6)=(CUTDAT(7)-TLHITE(6))/SINL(6)                             CUTT1690
      RI(7)=RI(6)+COSL(6)*UMAX(6)                                       CUTT1700
      TCONT(2)=Z1                                                       CUTT1710
      TCONT(6)=Z1                                                       CUTT1720
C  EXAMINE TOOL RADIUS. IF GREATER THAN ZERO, CORNER CIRCLE WILL BE PARTCUTT1730
C  OF TOOL CONFIGURATION. IF = ZERO, TOOL WILL CONSIST ONLY OF LINE AND CUTT1740
C  POINT CIRCLE SEGMENTS. ERROR IF NEGATIVE.                            CUTT1750
      IF(CUTDAT(2))21,22,25                                             CUTT1760
   21 NUMERR=22208                                                      CUTT1770
      GO TO 1000                                                        CUTT1780
C  COMPARE LENGTH OF UPPER LINE SEGMENT TO ZERO. SET VALUES IN TLLDAT   CUTT1790
C  BLOCK ACCORDINGLY                                                    CUTT1800
   22 IF(UMAX(6))23,23,24                                               CUTT1810
   23 TANLO(7)=TANHI(1)                                                 CUTT1820
      TCONT(6)=Z0                                                       CUTT1830
      GO TO 87                                                          CUTT1840
   24 TLHITE(4)=TLHITE(6)                                               CUTT1850
      RI(4)=RI(6)                                                       CUTT1860
      TANHI(4)=TANLO(7)                                                 CUTT1870
      TANLO(4)=TANHI(1)                                                 CUTT1880
      GO TO 86                                                          CUTT1890
C  COMPUTE CENTER OF CORNER CIRCLE                                      CUTT1900
   27 CUTDAT(3)=RI(6)-CORRAD(4)                                         CUTT1910
      CUTDAT(4)=CORRAD(4)                                               CUTT1920
      GO TO 26                                                          CUTT1930
C  STORE RADIUS OF CORNER CIRCLE AND COMPUTE DISTANCE FROM CENTER OF    CUTT1940
C  CIRCLE TO BOTTOM LINE (UMAX(3))                                      CUTT1950
   25 CORRAD(4)=CUTDAT(2)                                               CUTT1960
   26 UMAX(3)=CUTDAT(4)*COSL(2)-CUTDAT(3)*SINL(2)                       CUTT1970
      TANLO(1)=CUTDAT(3)*CUTDAT(3)+CUTDAT(4)*CUTDAT(4)                  CUTT1980
C  IF = 0, CENTER OF CORNER CIRCLE HAS TO BE CALCULATED                 CUTT1990
      IF(TANLO(1)+CUTDAT(5)+CUTDAT(6)*CUTDAT(6))28,27,28                CUTT2000
C  DISTANCE FROM CENTER OF CIRCLE TO INTERSECTION OF LINE SEGMENTS      CUTT2010
   28 UMAX(1)=DSQRT((CUTDAT(3)-RI(6))*(CUTDAT(3)-RI(6))                 CUTT2020
     1        +(CUTDAT(4)-TLHITE(6))*(CUTDAT(4)-TLHITE(6)))             CUTT2030
      UMAX(7)=TANLO(7)*(CUTDAT(7)-TLHITE(6))                            CUTT2050
C  DISTANCE FROM CENTER OF CIRCLE TO UPPER END OF UPPER LINE SEGMENT    CUTT2060
      UMAX(4)=DSQRT((CUTDAT(4)-CUTDAT(7))*(CUTDAT(4)-CUTDAT(7))         CUTT2070
     1        +(CUTDAT(3)-RI(7))*(CUTDAT(3)-RI(7)))                     CUTT2080
C  IF THE Y COORD. (F) OF THE CENTER OF THE CORNER CIRCLE IS LESS THAN  CUTT2090
C  THE Y COORD. OF THE INTERSECTION OF THE LINES, THEN ERROR            CUTT2100
      IF(CUTDAT(4)+Z1EM5-TLHITE(6))29,29,30                             CUTT2110
   29 NUMERR=22209                                                      CUTT2120
      GO TO 1000                                                        CUTT2130
C  IF THE RADIUS IS BOTH LARGER THAN THE DISTANCE TO THE INTERSECTION   CUTT2140
C  OF THE LINES AND DIFFERENT THAN THE DISTANCE TO THE ORIGIN OF THE    CUTT2150
C  BOTTOM LINE SEGMENT, WE HAVE AN INVALID TOOL CONFIGURATION           CUTT2160
   33 IF(Z1EM5-DABS(TANLO(1)-CORRAD(4)*CORRAD(4))) 34,34,35             CUTT2170
   34 NUMERR=22210                                                      CUTT2180
      GO TO 1000                                                        CUTT2190
C  IF E GREATER THAN ZERO, WE HAVE AN INVALID TOOL CONFIGURATION        CUTT2200
   35 IF(CUTDAT(3))53,37,34                                             CUTT2210
   53 CALL AERR(-22211,'CUTTEH  ')                                      CUTT2220
      TANHI(1)=CUTDAT(4)/CUTDAT(3)                                      CUTT2230
      TCONT(1)=CUTDAT(3)/CUTDAT(4)                                      CUTT2240
C  NO LOWER LINE SEGMENT                                                CUTT2250
   54 TCONT(2)=Z0                                                       CUTT2260
C  FURTHER TLLDAT VARIABLES                                             CUTT2270
   55 TANLO(4)=TANHI(1)                                                 CUTT2280
   56 UMAX(5)=(RI(6)-CUTDAT(3))*SINL(6)+COSL(6)*(CUTDAT(4)-TLHITE(6))   CUTT2290
C  IF = 0, THERE IS NO UPPER LINE SEGMENT AND IN THIS CASE TOOL NO GOOD CUTT2310
      IF(UMAX(6))67,57,67                                               CUTT2320
C  IF GREATER THAN ZERO, RADIUS AND DISTANCE FROM CENTER OF CORNER      CUTT2330
C  CIRCLE TO INTERSECTION OF LINES EQUAL.                               CUTT2340
   67 IF(CORRAD(4)-UMAX(1))68,68,62                                     CUTT2350
   68 TCONT(7)=CORRAD(4)*CORRAD(4)-UMAX(5)*UMAX(5)                      CUTT2360
C  LENGTH OF UPPER LINE SEGMENT                                         CUTT2370
      UMAX(6)=UMAX(6)+DSQRT(DABS(TCONT(7)))                             CUTT2380
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(5)*UMAX(5))                    CUTT2390
      UMAX(8)=CUTDAT(4)-CUTDAT(7)-TANLO(7)*(UMAX(7)+RI(6)-CUTDAT(3))    CUTT2400
      IF(Z1EM5-DABS(UMAX(8))) 72,72,69                                  CUTT2420
   72 IF(UMAX(8))73,73,77                                               CUTT2430
C  IF GREATER THAN ZERO, UPPER LINE SEGMENT WITH CORNER CIRCLE TANGENT. CUTT2440
C  OTHERWISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN PT. CIRCLE CUTT2450
   73 IF(Z1EM5-DABS(TCONT(7))) 75,75,74                                 CUTT2460
   75 IF(TCONT(7))76,76,83                                              CUTT2470
   76 GO TO 41                                                          CUTT2480
   57 NUMERR=22212                                                      CUTT2490
      GO TO 1000                                                        CUTT2500
C  WE MUST CHANGE PARAMETERS FOR BOTTOM POINT CIRCLE DUE TO NATURE OF   CUTT2510
C  CORNER CIRCLE                                                        CUTT2520
   37 CALL AERR(-22211,'CUTTEH  ')                                      CUTT2530
      TCONT(1)=Z0                                                       CUTT2540
      TANHI(1)=Z1E38                                                    CUTT2550
      GO TO 54                                                          CUTT2560
C  IF GREATER THAN OR EQUAL TO ZERO, CORNER CIRCLE IS A POINT CIRCLE    CUTT2570
   30 IF(Z1EM5-DABS(CORRAD(4)-UMAX(1))) 32,31,31                        CUTT2580
   31 CORRAD(4) = 0.                                                    CUTT2582
      TANLO(1) = 0.                                                     CUTT2584
      UMAX(1) = 0.                                                      CUTT2586
      UMAX(3) = 0.                                                      CUTT2588
      UMAX(4) = 0.                                                      CUTT2590
      UMAX(7) = 0.                                                      CUTT2592
      CUTDAT(2) = 0.                                                    CUTT2594
      CUTDAT(3) = 0.                                                    CUTT2596
      CUTDAT(4) = 0.                                                    CUTT2598
      GO TO 22                                                          CUTT2600
   32 IF (CORRAD(4)-UMAX(1)) 38,38,33                                   CUTT2602
   38 IF(RI(6)+TCONT(1)*(TLHITE(6)-CUTDAT(4))-                          CUTT2610
     1CUTDAT(3)+Z1EM5)39,39,40                                          CUTT2620
C  CORNER CIRCLE INTERSECTS LOWER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTT2630
   39 NUMERR=22213                                                      CUTT2640
      GO TO 1000                                                        CUTT2650
   40 IF(CUTDAT(4)+Z1EM5-TLHITE(6)-TANLO(7)*(RI(6)-                     CUTT2660
     1CUTDAT(3)))41,41,42                                               CUTT2670
C  CORNER CIRCLE INTERSECTS UPPER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTT2680
   41 NUMERR=22214                                                      CUTT2690
      GO TO 1000                                                        CUTT2700
   42 TANLO(3)=CORRAD(4)*CORRAD(4)-UMAX(3)*UMAX(3)                      CUTT2710
      IF(TANLO(3).LT.Z0)GO TO 39                                        CUTT2715
C  LENGTH OF LOWER LINE SEGMENT                                         CUTT2720
      UMAX(2)=UMAX(2)+DSQRT(TANLO(3))                                   CUTT2730
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(3)*UMAX(3))                    CUTT2740
      TANLO(8)=CUTDAT(3)+TCONT(1)*CUTDAT(4)                             CUTT2750
      IF(DABS(TANLO(8))-Z1EM5)43,46,46                                  CUTT2760
C  IF GREATER THAN ZERO, PT. CIRCLE FOLLOWED BY CORNER CIRCLE OR JUST   CUTT2770
C  CORNER CIRCLE. OTHERWISE PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CUTT2780
C  CIRCLE, AND THEN CORNER CIRCLE                                       CUTT2790
   43 IF(Z1EM5-DABS(TANLO(3))) 44,44,54                                 CUTT2800
   44 IF(TANLO(3))45,45,50                                              CUTT2810
   45 GO TO 39                                                          CUTT2820
   46 IF(TANLO(8))51,47,47                                              CUTT2830
C  IF GREATER THAN ZERO,PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CIR-CUTT2840
C  CLE, AND THEN CORNER CIRCLE. IF = 0, PT. CIRCLE AND CORNER CIRCLE.   CUTT2850
C  ERROR LESS THAN ZERO                                                 CUTT2860
   51 IF(CORRAD(4)*CORRAD(4)-TANLO(1))52,53,50                          CUTT2870
   52 GO TO 39                                                          CUTT2880
C  IF GREATER THAN ZERO, CORNER CIRCLE TANGENT TO LOWER LINE SEGMENT    CUTT2890
   47 IF(Z1EM5-DABS(TANLO(3))) 48,48,55                                 CUTT2900
   48 IF(TANLO(3))49,49,50                                              CUTT2910
   49 GO TO 39                                                          CUTT2920
C  LOWER LINE SEGMENT, PT. CIRCLE, AND CORNER CIRCLE PARAMETER CALC.    CUTT2930
   50 TCONT(3)=DSQRT(TANLO(3))/UMAX(3)                                  CUTT2940
      TANHI(3)=(Z1-TCONT(1)*TCONT(3))/(TCONT(1)+TCONT(3))               CUTT2950
      TLHITE(3)=SINL(2)*UMAX(2)                                         CUTT2970
      RI(3)=COSL(2)*UMAX(2)                                             CUTT2980
      TANLO(3)=TANHI(1)                                                 CUTT2990
      TANLO(4)=TANHI(3)                                                 CUTT3000
      GO TO 56                                                          CUTT3010
   62 IF(Z1EM5-DABS(UMAX(4)-CORRAD(4))) 63,63,64                        CUTT3020
   63 NUMERR=22215                                                      CUTT3030
      GO TO 1000                                                        CUTT3040
C  IF GREATER THAN ZERO, CORNER CIRCLE MEETS UPPER PT. CIRCLE AT UNAC-  CUTT3050
C  CEPTABLE ANGLE. IF = 0 WE MUST CHANGE PARAMETERS FOR UPPER PT. CIRCLECUTT3060
   64 IF(CUTDAT(7)-CUTDAT(4))78,66,63                                   CUTT3070
   78 CALL AERR(-22216,'CUTTEH  ')                                      CUTT3080
      TANLO(7)=(CUTDAT(4)-CUTDAT(7))/(RI(6)+SINL(6)-CUTDAT(3))          CUTT3090
   79 TCONT(6)=Z0                                                       CUTT3110
   80 TANHI(4)=Z0                                                       CUTT3120
      GO TO 85                                                          CUTT3130
C  NO UPPER LINE SEGMENT. CHANGE IN PARAMETERS FOR UPPER POINT CIRCLE   CUTT3140
C  NECESSARY DUE TO NATURE OF CORNER CIRCLE                             CUTT3150
   66 CALL AERR(-22216,'CUTTEH  ')                                      CUTT3160
      TANLO(7)=Z0                                                       CUTT3170
      GO TO 79                                                          CUTT3180
C  IF GREATER THAN ZERO,CORNER CIRCLE AND THEN UPPER PT. CIRCLE. OTHER- CUTT3190
C  WISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN UPPER PT. CIRCLECUTT3200
   69 IF(Z1EM5-DABS(TCONT(7))) 70,70,79                                 CUTT3210
   70 IF(TCONT(7))71,71,83                                              CUTT3220
   71 GO TO 41                                                          CUTT3230
   74 TANHI(4)=TANLO(7)                                                 CUTT3240
      GO TO 84                                                          CUTT3250
   77 IF(Z1EM5-DABS(CORRAD(4)-UMAX(4))) 81,81,78                        CUTT3260
   81 IF(CORRAD(4)-UMAX(4))82,82,83                                     CUTT3270
   82 GO TO 41                                                          CUTT3280
C  FURTHER CALCULATIONS FOR TLLDAT BLOCK PARAMETERS                     CUTT3290
   83 TCONT(5)=DSQRT(TCONT(7))/UMAX(5)                                  CUTT3300
      TANHI(4)=(TCONT(5)+TANLO(7))/(Z1-TCONT(5)*TANLO(7))               CUTT3310
      TANLO(5)=TANHI(4)                                                 CUTT3330
      TANHI(5)=TANLO(7)                                                 CUTT3340
   84 RI(5)=RI(7)-COSL(6)*UMAX(6)                                       CUTT3350
      TLHITE(5)=CUTDAT(7)-SINL(6)*UMAX(6)                               CUTT3360
      TLHITE(6)=TLHITE(5)                                               CUTT3370
      RI(6)=RI(5)                                                       CUTT3380
   85 TLHITE(4)=CUTDAT(4)                                               CUTT3390
      RI(4)=CUTDAT(3)                                                   CUTT3400
   86 TCONT(4)=Z1                                                       CUTT3410
   87 TANLO(1)=Z1E38                                                    CUTT3420
      TLINC(2)=Z1                                                       CUTT3430
      TLINC(6)=Z1                                                       CUTT3440
      TLHITE(7)=CUTDAT(7)                                               CUTT3450
  200 IBEGIN=1                                                          CUTT3460
C  WE NOW SEARCH EACH OF THE 7 POSSIBLE SEGMENTS TO DETERMINE FIRST ONE CUTT3470
   91 IF(TCONT(IBEGIN))90,88,90                                         CUTT3480
   90 TCONT(IBEGIN-1)=-Z1                                               CUTT3490
      TCONT(8)=-Z1                                                      CUTT3500
      TCONT(7)=Z1                                                       CUTT3510
      TANHI(7)=-Z1E38                                                   CUTT3520
      TANHI(8)=-Z1E38                                                   CUTT3530
      TANLO(8)=Z1E38                                                    CUTT3540
      TLINC(8)=Z0                                                       CUTT3550
      CORRAD(8)=Z0                                                      CUTT3560
      ICTDEF=0                                                          CUTT3570
      IAERR=0                                                           CUTT3580
      CALL TLCONV                                                       CUTT3590
      GO TO 9999                                                        CUTT3600
   88 IBEGIN=IBEGIN+1                                                   CUTT3610
      IF(7-IBEGIN)89,91,91                                              CUTT3620
   89 NUMERR=22217                                                      CUTT3630
      GO TO 1000                                                        CUTT3640
   92 IF(CUTDAT(7))4,93,10                                              CUTT3650
   93 IPT1=0                                                            CUTT3660
      TANLO(7)=Z1E38                                                    CUTT3670
      IBEGIN=7                                                          CUTT3680
      GO TO 90                                                          CUTT3681
C                                                                       CUTT3685
C        ** CUTTER PARAMETER ERROR-CALL AERR AND DEFINE POINT CUTTER    CUTT3686
C                                                                       CUTT3687
 1000 IAERFG=1                                                          CUTT3690
      ICTDEF=0                                                          CUTT3691
      CALL AERR(NUMERR,'CUTTEH  ')                                      CUTT3692
 9990 DO 1001 JJ=1,7                                                    CUTT3693
 1001 PARAM(JJ)=Z0                                                      CUTT3694
      NUMBER=K7                                                         CUTT3695
      GO TO 105                                                         CUTT3696
 9999 CONTINUE                                                          CUTT3698
      RETURN                                                            CUTT3699
       END                                                              CUTT3700
C                                                                       CUTT3710
C                                                                       CUTT3720
C                                                                       CUTT3730
C                                                                       CUTT5001
      SUBROUTINE CUTRED                                                 CUTT5010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CUTT5020
C                                                                       CUTT5030
C                                                                       CUTT5040
C                                                                       CUTT5050
C                                                                       CUTT5060
      INCLUDE 'TOTAL.INC'                                               CUTT5191
      INCLUDE 'FXCOR.INC'                                               CUTT5446
      INCLUDE 'ZNUMBR.INC'                                              CUTT5530
      INCLUDE 'IFXCOR.INC'                                              CUTT5670
      INCLUDE 'ISHR18.INC'                                              CUTT5762
      INCLUDE 'KNUMBR.INC'                                              CUTT5764
C                                                                       CUTT5767
C                                                                       CUTT5788
C                                                                       CUTT5893
      INTEGER HCUTER(2)                                                 CUTT5967
      INTEGER BCDF                                                      CUTT5969
C                                                                       CUTT5970
C                                                                       CUTT5974
C     25.   COMMON FOR AERR INFORMATION                                 CUTT5975
C                                                                       CUTT5976
      COMMON /AERCOM / IAERFG                                           CUTT5977
C                                                                       CUTT5980
      COMMON /HSAVE/ SAVEH(50)                                          CUTT5982
      EQUIVALENCE  (SAVEH( 6),PARAM(1) ),(SAVEH(15),NUMBER    )         CUTT5983
C     -----------------------------------------------------------       CUTT5985
C                                                                       CUTT5990
C                                                                       CUTT6000
C...  DEFINES CUTTER SHAPE AND SETS UP TOOL DATA BLOCKS                 CUTT6010
      DIMENSION PARAM(9)                                                CUTT6011
C                                                                       CUTT6012
      HCUTER(1) = BCDF('CUTT')                                          CUTT6014
      HCUTER(2) = BCDF('ER  ')                                          CUTT6015
C                                                                       CUTT6171
C  PLACE ZEROES IN TLLDAT BLOCK                                         CUTT6172
C        CUTRED ROUTINE TO REDEFINE EXISTING CUTTER FOR NEW UNITS/      CUTT6173
  129 DO 1 I=1,8                                                        CUTT6174
      TLHITE(I)=Z0                                                      CUTT6175
      SINL(I)=Z0                                                        CUTT6176
      COSL(I)=Z0                                                        CUTT6177
      UMAX(I)=Z0                                                        CUTT6178
      RI(I)=Z0                                                          CUTT6179
      CORRAD(I)=Z0                                                      CUTT6180
      TCONT(I)=Z0                                                       CUTT6181
      TLINC(I)=Z0                                                       CUTT6182
    1 CONTINUE                                                          CUTT6185
C  MAKE SURE TOOL DIAMETER NOT LESS THAN ZERO                           CUTT6190
      IF(CUTDAT(1))2,92,3                                               CUTT6200
    2 NUMERR=22202                                                      CUTT6210
      GO TO 1000                                                        CUTT6220
C  EXAMINE TOOL HEIGHT. IF LESS THAN ZERO ERROR. SET TO 5 IF = ZERO.    CUTT6230
C  OKAY OTHERWISE                                                       CUTT6240
    3 IF(CUTDAT(7))4,5,6                                                CUTT6250
    4 NUMERR=22203                                                      CUTT6260
      GO TO 1000                                                        CUTT6270
    5 CONTINUE                                                          CUTT6280
C  SUM OF ANGLES A AND B MUST BE LESS THAN 90 DEGREES                   CUTT6290
    6 IF(Z90-CUTDAT(5)-CUTDAT( 6))7,7,8                                 CUTT6300
    7 NUMERR=22204                                                      CUTT6310
      GO TO 1000                                                        CUTT6320
    8 RI(6)=Z5EM1*CUTDAT(1)                                             CUTT6330
      CUTDAT(1)=RI(6)                                                   CUTT6340
C  ERROR IF ANGLE A NEGATIVE                                            CUTT6350
      IF(CUTDAT(5))9,10,11                                              CUTT6360
    9 NUMERR=22205                                                      CUTT6370
      GO TO 1000                                                        CUTT6380
   10 COSL(2)=Z1                                                        CUTT6390
      TANHI(1)=Z1E38                                                    CUTT6400
      GO TO 12                                                          CUTT6410
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR A GREATER THAN ZERO CUTT6420
   11 TLHITE(8)=DEGRAD*CUTDAT(5)                                        CUTT6430
      SINL(2)=DSIN(TLHITE(8))                                           CUTT6440
      COSL(2)=DCOS(TLHITE(8))                                           CUTT6450
      TCONT(1)=SINL(2)/COSL(2)                                          CUTT6460
      TLHITE(6)=TCONT(1)*RI(6)                                          CUTT6470
      TANHI(1)=Z1/TCONT(1)                                              CUTT6480
C  MAKE SURE HEIGHT OF BOTTOM LINE SEGMENT DOES NOT EXCEED TOOL HEIGHT  CUTT6490
   12 IF(Z1EM5-DABS(CUTDAT(7)-TLHITE(6))) 13,13,15                      CUTT6500
   13 IF(CUTDAT(7)-TLHITE(6))14,14,16                                   CUTT6510
   14 NUMERR=22206                                                      CUTT6520
      GO TO 1000                                                        CUTT6530
   15 TLHITE(6)=CUTDAT(7)                                               CUTT6540
C  ERROR IF ANGLE B NEGATIVE                                            CUTT6550
   16 IPT1=K1                                                           CUTT6560
      IF(CUTDAT(6))17,18,19                                             CUTT6570
C                    BELL SHAPED CUTTER                                 CUTT6578
   17 CALL AERR (-22207,'CUTRED  ')                                     CUTT6580
      GO TO 19                                                          CUTT6590
   18 SINL(6)=Z1                                                        CUTT6600
      GO TO 20                                                          CUTT6610
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR B GREATER THAN ZERO CUTT6620
   19 TANHI(8)=DEGRAD*CUTDAT(6)                                         CUTT6630
      SINL(6)=DCOS(TANHI(8))                                            CUTT6640
      COSL(6)=DSIN(TANHI(8))                                            CUTT6650
      TANLO(7)=COSL(6)/SINL(6)                                          CUTT6660
C  FURTHER CALCULATIONS                                                 CUTT6670
   20 UMAX(2)=RI(6)/COSL(2)                                             CUTT6680
      UMAX(6)=(CUTDAT(7)-TLHITE(6))/SINL(6)                             CUTT6690
      RI(7)=RI(6)+COSL(6)*UMAX(6)                                       CUTT6700
      TCONT(2)=Z1                                                       CUTT6710
      TCONT(6)=Z1                                                       CUTT6720
C  EXAMINE TOOL RADIUS. IF GREATER THAN ZERO, CORNER CIRCLE WILL BE PARTCUTT6730
C  OF TOOL CONFIGURATION. IF = ZERO, TOOL WILL CONSIST ONLY OF LINE AND CUTT6740
C  POINT CIRCLE SEGMENTS. ERROR IF NEGATIVE.                            CUTT6750
      IF(CUTDAT(2))21,22,25                                             CUTT6760
   21 NUMERR=22208                                                      CUTT6770
      GO TO 1000                                                        CUTT6780
C  COMPARE LENGTH OF UPPER LINE SEGMENT TO ZERO. SET VALUES IN TLLDAT   CUTT6790
C  BLOCK ACCORDINGLY                                                    CUTT6800
   22 IF(UMAX(6))23,23,24                                               CUTT6810
   23 TANLO(7)=TANHI(1)                                                 CUTT6820
      TCONT(6)=Z0                                                       CUTT6830
      GO TO 87                                                          CUTT6840
   24 TLHITE(4)=TLHITE(6)                                               CUTT6850
      RI(4)=RI(6)                                                       CUTT6860
      TANHI(4)=TANLO(7)                                                 CUTT6870
      TANLO(4)=TANHI(1)                                                 CUTT6880
      GO TO 86                                                          CUTT6890
C  COMPUTE CENTER OF CORNER CIRCLE                                      CUTT6900
   27 CUTDAT(3)=RI(6)-CORRAD(4)                                         CUTT6910
      CUTDAT(4)=CORRAD(4)                                               CUTT6920
      GO TO 26                                                          CUTT6930
C  STORE RADIUS OF CORNER CIRCLE AND COMPUTE DISTANCE FROM CENTER OF    CUTT6940
C  CIRCLE TO BOTTOM LINE (UMAX(3))                                      CUTT6950
   25 CORRAD(4)=CUTDAT(2)                                               CUTT6960
   26 UMAX(3)=CUTDAT(4)*COSL(2)-CUTDAT(3)*SINL(2)                       CUTT6970
      TANLO(1)=CUTDAT(3)*CUTDAT(3)+CUTDAT(4)*CUTDAT(4)                  CUTT6980
C  IF = 0, CENTER OF CORNER CIRCLE HAS TO BE CALCULATED                 CUTT6990
      IF(TANLO(1)+CUTDAT(5)+CUTDAT(6)*CUTDAT(6))28,27,28                CUTT7000
C  DISTANCE FROM CENTER OF CIRCLE TO INTERSECTION OF LINE SEGMENTS      CUTT7010
   28 UMAX(1)=DSQRT((CUTDAT(3)-RI(6))*(CUTDAT(3)-RI(6))                 CUTT7020
     1        +(CUTDAT(4)-TLHITE(6))*(CUTDAT(4)-TLHITE(6)))             CUTT7030
      UMAX(7)=TANLO(7)*(CUTDAT(7)-TLHITE(6))                            CUTT7050
C  DISTANCE FROM CENTER OF CIRCLE TO UPPER END OF UPPER LINE SEGMENT    CUTT7060
      UMAX(4)=DSQRT((CUTDAT(4)-CUTDAT(7))*(CUTDAT(4)-CUTDAT(7))         CUTT7070
     1        +(CUTDAT(3)-RI(7))*(CUTDAT(3)-RI(7)))                     CUTT7080
C  IF THE Y COORD. (F) OF THE CENTER OF THE CORNER CIRCLE IS LESS THAN  CUTT7090
C  THE Y COORD. OF THE INTERSECTION OF THE LINES, THEN ERROR            CUTT7100
      IF(CUTDAT(4)+Z1EM5-TLHITE(6))29,29,30                             CUTT7110
   29 NUMERR=22209                                                      CUTT7120
      GO TO 1000                                                        CUTT7130
C  IF THE RADIUS IS BOTH LARGER THAN THE DISTANCE TO THE INTERSECTION   CUTT7140
C  OF THE LINES AND DIFFERENT THAN THE DISTANCE TO THE ORIGIN OF THE    CUTT7150
C  BOTTOM LINE SEGMENT, WE HAVE AN INVALID TOOL CONFIGURATION           CUTT7160
   33 IF(Z1EM5-DABS(TANLO(1)-CORRAD(4)*CORRAD(4))) 34,34,35             CUTT7170
   34 NUMERR=22210                                                      CUTT7180
      GO TO 1000                                                        CUTT7190
C  IF E GREATER THAN ZERO, WE HAVE AN INVALID TOOL CONFIGURATION        CUTT7200
   35 IF(CUTDAT(3))53,37,34                                             CUTT7210
   53 CALL AERR(-22211,'CUTRED  ')                                      CUTT7220
      TANHI(1)=CUTDAT(4)/CUTDAT(3)                                      CUTT7230
      TCONT(1)=CUTDAT(3)/CUTDAT(4)                                      CUTT7240
C  NO LOWER LINE SEGMENT                                                CUTT7250
   54 TCONT(2)=Z0                                                       CUTT7260
C  FURTHER TLLDAT VARIABLES                                             CUTT7270
   55 TANLO(4)=TANHI(1)                                                 CUTT7280
   56 UMAX(5)=(RI(6)-CUTDAT(3))*SINL(6)+COSL(6)*(CUTDAT(4)-TLHITE(6))   CUTT7290
C  IF = 0, THERE IS NO UPPER LINE SEGMENT AND IN THIS CASE TOOL NO GOOD CUTT7310
      IF(UMAX(6))67,57,67                                               CUTT7320
C  IF GREATER THAN ZERO, RADIUS AND DISTANCE FROM CENTER OF CORNER      CUTT7330
C  CIRCLE TO INTERSECTION OF LINES EQUAL.                               CUTT7340
   67 IF(CORRAD(4)-UMAX(1))68,68,62                                     CUTT7350
   68 TCONT(7)=CORRAD(4)*CORRAD(4)-UMAX(5)*UMAX(5)                      CUTT7360
C  LENGTH OF UPPER LINE SEGMENT                                         CUTT7370
      UMAX(6)=UMAX(6)+DSQRT(DABS(TCONT(7)))                             CUTT7380
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(5)*UMAX(5))                    CUTT7390
      UMAX(8)=CUTDAT(4)-CUTDAT(7)-TANLO(7)*(UMAX(7)+RI(6)-CUTDAT(3))    CUTT7400
      IF(Z1EM5-DABS(UMAX(8))) 72,72,69                                  CUTT7420
   72 IF(UMAX(8))73,73,77                                               CUTT7430
C  IF GREATER THAN ZERO, UPPER LINE SEGMENT WITH CORNER CIRCLE TANGENT. CUTT7440
C  OTHERWISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN PT. CIRCLE CUTT7450
   73 IF(Z1EM5-DABS(TCONT(7))) 75,75,74                                 CUTT7460
   75 IF(TCONT(7))76,76,83                                              CUTT7470
   76 GO TO 41                                                          CUTT7480
   57 NUMERR=22212                                                      CUTT7490
      GO TO 1000                                                        CUTT7500
C  WE MUST CHANGE PARAMETERS FOR BOTTOM POINT CIRCLE DUE TO NATURE OF   CUTT7510
C  CORNER CIRCLE                                                        CUTT7520
   37 CALL AERR(-22211,'CUTRED  ')                                      CUTT7530
      TCONT(1)=Z0                                                       CUTT7540
      TANHI(1)=Z1E38                                                    CUTT7550
      GO TO 54                                                          CUTT7560
C  IF GREATER THAN OR EQUAL TO ZERO, CORNER CIRCLE IS A POINT CIRCLE    CUTT7570
   30 IF(Z1EM5-DABS(CORRAD(4)-UMAX(1))) 32,31,31                        CUTT7580
   31 CORRAD(4) = 0.                                                    CUTT7582
      TANLO(1) = 0.                                                     CUTT7584
      UMAX(1) = 0.                                                      CUTT7586
      UMAX(3) = 0.                                                      CUTT7588
      UMAX(4) = 0.                                                      CUTT7590
      UMAX(7) = 0.                                                      CUTT7592
      CUTDAT(2) = 0.                                                    CUTT7594
      CUTDAT(3) = 0.                                                    CUTT7596
      CUTDAT(4) = 0.                                                    CUTT7598
      GO TO 22                                                          CUTT7600
   32 IF (CORRAD(4)-UMAX(1)) 38,38,33                                   CUTT7602
   38 IF(RI(6)+TCONT(1)*(TLHITE(6)-CUTDAT(4))-                          CUTT7610
     1CUTDAT(3)+Z1EM5)39,39,40                                          CUTT7620
C  CORNER CIRCLE INTERSECTS LOWER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTT7630
   39 NUMERR=22213                                                      CUTT7640
      GO TO 1000                                                        CUTT7650
   40 IF(CUTDAT(4)+Z1EM5-TLHITE(6)-TANLO(7)*(RI(6)-                     CUTT7660
     1CUTDAT(3)))41,41,42                                               CUTT7670
C  CORNER CIRCLE INTERSECTS UPPER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTT7680
   41 NUMERR=22214                                                      CUTT7690
      GO TO 1000                                                        CUTT7700
   42 TANLO(3)=CORRAD(4)*CORRAD(4)-UMAX(3)*UMAX(3)                      CUTT7710
      IF(TANLO(3).LT.Z0)GO TO 39                                        CUTT7715
C  LENGTH OF LOWER LINE SEGMENT                                         CUTT7720
      UMAX(2)=UMAX(2)+DSQRT(TANLO(3))                                   CUTT7730
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(3)*UMAX(3))                    CUTT7740
      TANLO(8)=CUTDAT(3)+TCONT(1)*CUTDAT(4)                             CUTT7750
      IF(DABS(TANLO(8))-Z1EM5)43,46,46                                  CUTT7760
C  IF GREATER THAN ZERO, PT. CIRCLE FOLLOWED BY CORNER CIRCLE OR JUST   CUTT7770
C  CORNER CIRCLE. OTHERWISE PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CUTT7780
C  CIRCLE, AND THEN CORNER CIRCLE                                       CUTT7790
   43 IF(Z1EM5-DABS(TANLO(3))) 44,44,54                                 CUTT7800
   44 IF(TANLO(3))45,45,50                                              CUTT7810
   45 GO TO 39                                                          CUTT7820
   46 IF(TANLO(8))51,47,47                                              CUTT7830
C  IF GREATER THAN ZERO,PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CIR-CUTT7840
C  CLE, AND THEN CORNER CIRCLE. IF = 0, PT. CIRCLE AND CORNER CIRCLE.   CUTT7850
C  ERROR LESS THAN ZERO                                                 CUTT7860
   51 IF(CORRAD(4)*CORRAD(4)-TANLO(1))52,53,50                          CUTT7870
   52 GO TO 39                                                          CUTT7880
C  IF GREATER THAN ZERO, CORNER CIRCLE TANGENT TO LOWER LINE SEGMENT    CUTT7890
   47 IF(Z1EM5-DABS(TANLO(3))) 48,48,55                                 CUTT7900
   48 IF(TANLO(3))49,49,50                                              CUTT7910
   49 GO TO 39                                                          CUTT7920
C  LOWER LINE SEGMENT, PT. CIRCLE, AND CORNER CIRCLE PARAMETER CALC.    CUTT7930
   50 TCONT(3)=DSQRT(TANLO(3))/UMAX(3)                                  CUTT7940
      TANHI(3)=(Z1-TCONT(1)*TCONT(3))/(TCONT(1)+TCONT(3))               CUTT7950
      TLHITE(3)=SINL(2)*UMAX(2)                                         CUTT7970
      RI(3)=COSL(2)*UMAX(2)                                             CUTT7980
      TANLO(3)=TANHI(1)                                                 CUTT7990
      TANLO(4)=TANHI(3)                                                 CUTT8000
      GO TO 56                                                          CUTT8010
   62 IF(Z1EM5-DABS(UMAX(4)-CORRAD(4))) 63,63,64                        CUTT8020
   63 NUMERR=22215                                                      CUTT8030
      GO TO 1000                                                        CUTT8040
C  IF GREATER THAN ZERO, CORNER CIRCLE MEETS UPPER PT. CIRCLE AT UNAC-  CUTT8050
C  CEPTABLE ANGLE. IF = 0 WE MUST CHANGE PARAMETERS FOR UPPER PT. CIRCLECUTT8060
   64 IF(CUTDAT(7)-CUTDAT(4))78,66,63                                   CUTT8070
   78 CALL AERR(-22216,'CUTRED  ')                                      CUTT8080
      TANLO(7)=(CUTDAT(4)-CUTDAT(7))/(RI(6)+SINL(6)-CUTDAT(3))          CUTT8090
   79 TCONT(6)=Z0                                                       CUTT8110
   80 TANHI(4)=Z0                                                       CUTT8120
      GO TO 85                                                          CUTT8130
C  NO UPPER LINE SEGMENT. CHANGE IN PARAMETERS FOR UPPER POINT CIRCLE   CUTT8140
C  NECESSARY DUE TO NATURE OF CORNER CIRCLE                             CUTT8150
   66 CALL AERR(-22216,'CUTRED  ')                                      CUTT8160
      TANLO(7)=Z0                                                       CUTT8170
      GO TO 79                                                          CUTT8180
C  IF GREATER THAN ZERO,CORNER CIRCLE AND THEN UPPER PT. CIRCLE. OTHER- CUTT8190
C  WISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN UPPER PT. CIRCLECUTT8200
   69 IF(Z1EM5-DABS(TCONT(7))) 70,70,79                                 CUTT8210
   70 IF(TCONT(7))71,71,83                                              CUTT8220
   71 GO TO 41                                                          CUTT8230
   74 TANHI(4)=TANLO(7)                                                 CUTT8240
      GO TO 84                                                          CUTT8250
   77 IF(Z1EM5-DABS(CORRAD(4)-UMAX(4))) 81,81,78                        CUTT8260
   81 IF(CORRAD(4)-UMAX(4))82,82,83                                     CUTT8270
   82 GO TO 41                                                          CUTT8280
C  FURTHER CALCULATIONS FOR TLLDAT BLOCK PARAMETERS                     CUTT8290
   83 TCONT(5)=DSQRT(TCONT(7))/UMAX(5)                                  CUTT8300
      TANHI(4)=(TCONT(5)+TANLO(7))/(Z1-TCONT(5)*TANLO(7))               CUTT8310
      TANLO(5)=TANHI(4)                                                 CUTT8330
      TANHI(5)=TANLO(7)                                                 CUTT8340
   84 RI(5)=RI(7)-COSL(6)*UMAX(6)                                       CUTT8350
      TLHITE(5)=CUTDAT(7)-SINL(6)*UMAX(6)                               CUTT8360
      TLHITE(6)=TLHITE(5)                                               CUTT8370
      RI(6)=RI(5)                                                       CUTT8380
   85 TLHITE(4)=CUTDAT(4)                                               CUTT8390
      RI(4)=CUTDAT(3)                                                   CUTT8400
   86 TCONT(4)=Z1                                                       CUTT8410
   87 TANLO(1)=Z1E38                                                    CUTT8420
      TLINC(2)=Z1                                                       CUTT8430
      TLINC(6)=Z1                                                       CUTT8440
      TLHITE(7)=CUTDAT(7)                                               CUTT8450
  200 IBEGIN=1                                                          CUTT8460
C  WE NOW SEARCH EACH OF THE 7 POSSIBLE SEGMENTS TO DETERMINE FIRST ONE CUTT8470
   91 IF(TCONT(IBEGIN))90,88,90                                         CUTT8480
   90 TCONT(IBEGIN-1)=-Z1                                               CUTT8490
      TCONT(8)=-Z1                                                      CUTT8500
      TCONT(7)=Z1                                                       CUTT8510
      TANHI(7)=-Z1E38                                                   CUTT8520
      TANHI(8)=-Z1E38                                                   CUTT8530
      TANLO(8)=Z1E38                                                    CUTT8540
      TLINC(8)=Z0                                                       CUTT8550
      CORRAD(8)=Z0                                                      CUTT8560
      ICTDEF=0                                                          CUTT8570
      IAERR=0                                                           CUTT8580
      CALL TLCONV                                                       CUTT8590
      GO TO 9999                                                        CUTT8600
   88 IBEGIN=IBEGIN+1                                                   CUTT8610
      IF(7-IBEGIN)89,91,91                                              CUTT8620
   89 NUMERR=22217                                                      CUTT8630
      GO TO 1000                                                        CUTT8640
   92 IF(CUTDAT(7))4,93,10                                              CUTT8650
   93 IPT1=0                                                            CUTT8660
      TANLO(7)=Z1E38                                                    CUTT8670
      IBEGIN=7                                                          CUTT8680
      GO TO 90                                                          CUTT8681
C                                                                       CUTT8685
C        ** CUTTER PARAMETER ERROR-CALL AERR AND DEFINE POINT CUTTER    CUTT8686
C                                                                       CUTT8687
 1000 IAERFG=1                                                          CUTT8690
      ICTDEF=0                                                          CUTT8691
      CALL AERR(NUMERR,'CUTRED  ')                                      CUTT8692
 9990 DO 1001 JJ=1,7                                                    CUTT8693
 1001 PARAM(JJ)=Z0                                                      CUTT8694
      NUMBER=K7                                                         CUTT8695
C                                                                       CUTT8700
      ICTDEF=K1                                                         CUTT8730
C...  ZERO CUTTER PARAMETER STORAGE AREA                                CUTT8740
      DO 110 J=1,7                                                      CUTT8750
  110 CUTDAT(J)=Z0                                                      CUTT8760
      CUTDAT(7) = TLHIT                                                 CUTT8765
      IF(NUMBER-K7)126,126,125                                          CUTT8770
  125 NUMERR=22201                                                      CUTT8790
      GO TO 1000                                                        CUTT8800
  126 DO 127 J=1,NUMBER                                                 CUTT8840
  127 CUTDAT(J)=PARAM(J)                                                CUTT8850
C  WRITE CUTTER STATEMENT ON EXFILE                                     CUTT8855
      CALL APT299(NUMBER,HCUTER,1,PARAM(1))                             CUTT8860
      IF(NUMBER.LE.1) GO TO 129                                         CUTT8862
      KK=1                                                              CUTT8864
      DO 128 I=2,NUMBER,2                                               CUTT8866
      IF(I.EQ.NUMBER) KK=0                                              CUTT8868
  128 CALL APT299(1,PARAM(I),KK,PARAM(I+1))                             CUTT8870
      GO TO 129                                                         CUTT8880
C                                                                       CUTT8890
 9999 CONTINUE                                                          CUTT8898
      RETURN                                                            CUTT8899
       END                                                              CUTT8900
**** SOURCE FILE : M0004132.V07   ***
*
C                                                                       GO000001
C                                                                       GO000002
      SUBROUTINE GO(HMOD,ADRESS)                                        GO000010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              GO000020
C                                                                       GO000028
      INCLUDE 'TOTAL.INC'                                               GO000029
      INCLUDE 'LDEF.INC'                                                GO000111
      INCLUDE 'IFXCOR.INC'                                              GO000301
C                                                                       GO000302
      DIMENSION ADRESS(*)                                               GO000310
      IF(JDS) CALL APT211(0,'NOCS    ',IDUM)                            GO000315
C-IBM-      CALL APT241                                                 GO000320
      IF(IAERR.EQ.1)GO TO 10                                            GO000330
C-VAX-ESTABLISH CONDITION HANDLER                                       GO000332
      CALL APT241                                                       GO000334
   20 IF(ICTDEF.NE.0.AND.IGOTO.EQ.0)CALL AERR(20201,'GO      ')         GO000340
      IF (IAERR.EQ.1) GOTO 10                                           GO000342
      CALL GO2(HMOD,ADRESS)                                             GO000350
      IF (IAERR.EQ.1) GOTO 20                                           GO000352
C-VAX- REVERT TO DEFAULT CONDITION HANDLER                              GO000354
   10 CALL LIB$REVERT                                                   GO000356
      RETURN                                                            GO000360
      END                                                               GO000370
**** SOURCE FILE : ADDRSS00.ORG   ***
*
      INTEGER FUNCTION ADDRSS(X)                                        00000100
*                                                                       00000200
*  * ADDRSS *   VAX11 FORTRAN VERSION    18.2.82  E.MCLELLAN            00000300
*                                                                       00000400
*  PURPOSE     ADDRSS RETURNS AN INTEGER WHICH IS THE                   00000500
*              ACTUAL MACHINE ADDRESS OF THE ARGUMENT                   00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*              VALUE=ADDRSS(X)                                          00000900
*  ARGUMENTS                                                            00001000
*              X  VARIABLE WHOSE ADDRESS IS TO BE RETURNED              00001100
*                                                                       00001200
      DOUBLE PRECISION X                                                00001300
      ADDRSS=%LOC(X)                                                    00001400
C                                                                       00001500
      RETURN                                                            00001600
      END                                                               00001700
**** SOURCE FILE : APT24100.ORG   ***
*
      SUBROUTINE APT241                                                 00000100
      INTEGER HANDL                                                     00000200
      EXTERNAL HANDL                                                    00000300
      CALL LIB$ESTABLISH(HANDL)                                         00000400
      RETURN                                                            00000500
      END                                                               00000600
C                                                                       00000700
C                                                                       00000800
      SUBROUTINE APT242                                                 00000900
      CALL LIB$SIGNAL(%VAL(SS$_ACCVIO))                                 00001000
      RETURN                                                            00001100
      END                                                               00001200
C                                                                       00001300
C                                                                       00001400
      INTEGER FUNCTION HANDL(S,M)                                       00001500
      INTEGER S(3),M(5)                                                 00001600
      INCLUDE 'SYS$LIBRARY:SIGDEF'                                      00001700
      HANDL=SS$_RESIGNAL                                                00001800
      IF (S(2).EQ.SS$_UNWIND) THEN                                      00001900
      RETURN                                                            00002000
      END IF                                                            00002100
      CALL SYS$UNWIND(,)                                                00002200
      RETURN                                                            00002300
      END                                                               00002400
**** SOURCE FILE : OUTSET00.ORG   ***
*
      SUBROUTINE OUTSET(J)                                              00000100
*                                                                       00000200
*  * OUTSET *  VAX-11 FORTRAN 77 SUBROUTINE   E.MCLELLAN                00000300
*                                                                       00000400
*  PURPOSE     TO SET UP PAPER TAPE CODE CONVERSION TABLE               00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL OUTSET(J)                                           00000800
*  ARGUMENT                                                             00000900
*              J  INDICATES REQUIRED CODE                               00001000
*                 =1  NAS943  ,ODD PARITY, COLUMN BINARY                00001100
*                 =2  ISO     ,EVEN PARITY,COLUMN BINARY                00001200
*                 =3  ASCII   ,NO PARITY,  NO CONVERSION                00001300
*                                                                       00001400
C                                                                       00001500
      INCLUDE 'DARRAY.INC'                                              00001600
C                                                                       00001700
      COMMON/PUNTAB/PUNCOD                                              00001800
C                                                                       00001900
C...BYTE VARIABLES IN THIS VAX IMPLEMENTATION MIGHT BE ABLE TO BE LOGICA00002000
C...ON OTHER SYSTEMS                                                    00002100
      BYTE PUNCOD(128)                                                  00002200
      BYTE NAS943(128),ISO(128),ASCII(128)                              00002300
*                                                                       00002400
******  NAS943 ODD PARITY COLUMN BINARY                                 00002500
*                                                                       00002600
      DATA NAS943/                                                      00002700
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F    00002800
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z3E,ZEE,ZEE,ZEE,Z80,ZEE,ZEE,  00002900
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00003000
     2Z10,ZEE,ZEE,Z7F,Z80,Z0B,Z70,ZEE,Z0B,Z2A,Z3E,Z70,Z3B,Z40,Z6B,Z31,  00003100
     3Z20,Z01,Z02,Z13,Z04,Z15,Z16,Z07,Z08,Z19,Z7C,Z7A,ZEE,Z7F,ZEE,ZEE,  00003200
     4Z0E,Z61,Z62,Z73,Z64,Z75,Z76,Z67,Z68,Z79,Z51,Z52,Z43,Z54,Z45,Z46,  00003300
     5Z57,Z58,Z49,Z32,Z23,Z34,Z25,Z26,Z37,Z38,Z29,ZEE,ZEE,ZEE,ZEE,ZEE,  00003400
     6ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00003500
     7ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE/  00003600
*                                                                       00003700
******  ISO/                                                            00003800
*                                                                       00003900
      DATA ISO/                                                         00004000
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F    00004100
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z09,Z0A,ZEE,ZEE,Z8D,ZEE,ZEE,  00004200
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00004300
     2ZA0,ZEE,ZEE,ZA3,Z24,ZA5,ZA6,Z27,Z28,ZA9,ZAA,Z2B,ZAC,Z2D,Z2E,ZAF,  00004400
     3Z30,ZB1,ZB2,Z33,ZB4,Z35,Z36,ZB7,ZB8,Z39,Z3A,ZEE,ZEE,ZEE,ZEE,ZEE,  00004500
     4ZC0,Z41,Z42,ZC3,Z44,ZC5,ZC6,Z47,Z48,ZC9,ZCA,Z4B,ZCC,Z4D,Z4E,ZCF,  00004600
     5Z50,ZD1,ZD2,Z53,ZD4,Z55,Z56,ZD7,ZD8,Z59,Z5A,ZEE,ZEE,ZEE,ZEE,ZEE,  00004700
     6ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00004800
     7ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZFF/  00004900
*                                                                       00005000
******  ASCII 7 BIT NO PARITY                                           00005100
*                                                                       00005200
      DATA ASCII/                                                       00005300
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F    00005400
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z09,Z0A,ZEE,ZEE,Z0D,ZEE,ZEE,  00005500
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00005600
     2Z20,Z21,Z22,Z23,Z24,Z25,Z26,Z27,Z28,Z29,Z2A,Z2B,Z2C,Z2D,Z2E,Z2F,  00005700
     3Z30,Z31,Z32,Z33,Z34,Z35,Z36,Z37,Z38,Z39,Z3A,Z3B,Z3C,Z3D,Z3E,Z3F,  00005800
     4Z40,Z41,Z42,Z43,Z44,Z45,Z46,Z47,Z48,Z49,Z4A,Z4B,Z4C,Z4D,Z4E,Z4F,  00005900
     5Z50,Z51,Z52,Z53,Z54,Z55,Z56,Z57,Z58,Z59,Z5A,Z5B,Z5C,Z5D,Z5E,Z5F,  00006000
     6Z60,Z61,Z62,Z63,Z64,Z65,Z66,Z67,Z68,Z69,Z6A,Z6B,Z6C,Z6D,Z6E,Z6F,  00006100
     7Z70,Z71,Z72,Z73,Z74,Z75,Z76,Z77,Z78,Z79,Z7A,ZEE,ZEE,ZEE,ZEE,Z7F/  00006200
*                                                                       00006300
      IF (J.EQ.1) THEN                                                  00006400
         DO 100 I=1,128                                                 00006500
  100    PUNCOD(I)=NAS943(I)                                            00006600
*                                                                       00006700
      ELSE IF (J.EQ.2) THEN                                             00006800
         DO 200 I=1,128                                                 00006900
  200    PUNCOD(I)=ISO(I)                                               00007000
*                                                                       00007100
      ELSE IF (J.EQ.3) THEN                                             00007200
         DO 300 I=1,128                                                 00007300
  300    PUNCOD(I)=ASCII(I)                                             00007400
*                                                                       00007500
      ELSE                                                              00007600
         CALL CFORM('**** INVALID ARGUMENT IN CALL TO OUTSET ****',     00007700
     1               DARRAY,2,44)                                       00007800
         CALL CPRINT(DARRAY)                                            00007900
         CALL ABNEND                                                    00008000
      END IF                                                            00008100
      RETURN                                                            00008200
      END                                                               00008300
**** SOURCE FILE : PARNOM00.ORG   ***
*
      SUBROUTINE PARNOM(N,A,J)                                          00000100
*                                                                       00000200
*  * PARNOM *  VAX-11 FORTRAN 77 VERSION  26.10.82  E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     PUNCH COLUMN BINARY MATRIX REPRESENTATION OF             00000500
*              CHARACTERS USED FOR PUNCH TAPE IDENTIFICATION            00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL PARNOM(N,A,J)                                       00000800
*  ARGUMENTS                                                            00000900
*              N  NUMBER OF BCD CHARACTERS TO BE CONVERTED (MAX 504)    00001000
*              A  ARRAY CONTAINING BCD CHARACTERS TO BE CONVERTED       00001100
*                 FORMAT A6,2X (6 BCD CHARACTERS FOLLOWED BY 2 BLANKS)  00001200
*                 THE BLANKS  ARE IGNORED                               00001300
*              J  J=0  5*7 MATRIX, COLUMN BINARY, ODD PARITY            00001400
*                  =1  IGNORED                                          00001500
*                  =2  5*6 MATRIX, COLUMN BINARY, NO PARITY             00001600
*  ALTERNATE ENTRY                                                      00001700
*              CALL PARNEM(N,A)                                         00001800
*                   PUNCHES A 5*7 MATRIX,COLUMN BINARY,EVEN PARITY      00001900
*                                                                       00002000
*  NOTE:       THE ALLOWABLE CHARACTERS ARE 0 THRO 9, A THRU Z,         00002100
*              AND !"#$%&'()*+,-./:;<=>?@[\]^_                          00002200
*              IE THE COMPLETE ASCII CHARACTER SET LESS LOWER CASE      00002300
*                                                                       00002400
      DOUBLE PRECISION A(84)                                            00002500
      CHARACTER INFIL*504                                               00002600
*                                                                       00002700
C                                                                       00002800
C...BYTE VARIABLES IN THIS VAX IMPLEMENTATION MIGHT BE ABLE TO BE LOGICA00002900
C...ON OTHER SYSTEMS                                                    00003000
      BYTE OUT(3024),TABO(6,64),TABE(6,64),TAB56(6,64),CODE(6,64)       00003100
      BYTE TBO1(6,32),TBO2(6,32),TBE1(6,32),TBE2(6,32),                 00003200
     1          TB561(6,32),TB562(6,32)                                 00003300
C                                                                       00003400
      EQUIVALENCE (TABO(1,1),TBO1(1,1)),(TABO(1,33),TBO2(1,1)),         00003500
     1            (TABE(1,1),TBE1(1,1)),(TABE(1,33),TBE2(1,1)),         00003600
     2            (TAB56(1,1),TB561(1,1)),(TAB56(1,33),TB562(1,1))      00003700
*                                                                       00003800
      INCLUDE 'DARRAY.INC'                                              00003900
*                                                                       00004000
******   TABLE FOR 5X7 MATRIX OUTPUT , ODD PARITY , COLUMN BINARY       00004100
*                                                                       00004200
      DATA TBO1/                                                        00004300
*              BLANK                      !                             00004400
     1Z80,Z80,Z80,Z80,Z80,Z80, Z80,Z80,Z5E,Z80,Z80,Z80,                 00004500
*                "                        #                             00004600
     2Z80,Z07,Z80,Z07,Z80,Z80, Z94,Z3E,Z94,Z3E,Z94,Z80,                 00004700
*                $                        %                             00004800
     3ZAE,Z2A,Z7F,Z2A,ZAE,Z80, ZE3,Z13,Z08,Z34,ZE3,Z80,                 00004900
*                &                        `                             00005000
     4ZFB,Z45,Z6B,Z10,Z68,Z80, Z80,Z80,Z07,Z80,Z80,Z80,                 00005100
*                (                        )                             00005200
     5Z80,Z1C,ZA2,ZC1,ZC1,Z80, Z80,ZC1,ZC1,ZA2,Z1C,Z80,                 00005300
*                *                        +                             00005400
     6Z08,Z2A,Z1C,Z2A,Z08,Z80, Z08,Z08,Z3E,Z08,Z08,Z80,                 00005500
*                ,                        -                             00005600
     7Z80,Z80,ZD0,ZB0,Z80,Z80, Z08,Z08,Z08,Z08,Z08,Z80,                 00005700
*                .                        /                             00005800
     8Z80,Z80,ZE0,ZE0,Z80,Z80, Z20,Z10,Z08,Z04,Z02,Z80,                 00005900
*                0                        1                             00006000
     9Z3E,ZC1,ZC1,ZC1,Z3E,Z80, Z80,Z02,Z7F,Z80,Z80,Z80,                 00006100
*                2                        3                             00006200
     AZC2,Z61,Z51,Z49,Z46,Z80, ZA1,ZC1,Z49,ZCD,ZB3,Z80,                 00006300
*                4                        5                             00006400
     BZ98,Z94,Z92,Z7F,Z10,Z80, ZA7,Z45,Z45,Z45,ZB9,Z80,                 00006500
*                6                        7                             00006600
     CZBC,ZC2,Z49,Z49,ZB0,Z80, Z01,Z01,Z79,Z85,Z83,Z80,                 00006700
*                8                        9                             00006800
     DZB6,Z49,Z49,Z49,ZB6,Z80, Z86,Z49,Z49,ZA1,Z9E,Z80,                 00006900
*                :                        ;                             00007000
     EZ80,Z80,ZB6,ZB6,Z80,Z80, Z80,Z80,ZD6,ZB6,Z80,Z80,                 00007100
*                <                        =                             00007200
     FZ08,Z94,ZA2,ZC1,Z80,Z80, ZA2,ZA2,ZA2,ZA2,ZA2,Z80,                 00007300
*                >                        ?                             00007400
     GZ80,ZC1,ZA2,Z94,Z08,Z80, Z02,Z01,ZD9,Z85,Z02,Z80/                 00007500
      DATA TBO2/                                                        00007600
*                @                        A                             00007700
     1Z3E,ZC1,Z5D,ZD5,Z5E,Z80, ZFE,Z91,Z91,Z91,ZFE,Z80,                 00007800
*                B                        C                             00007900
     2Z7F,Z49,Z49,Z49,ZB6,Z80, Z3E,ZC1,ZC1,ZC1,ZA2,Z80,                 00008000
*                D                        E                             00008100
     3Z7F,ZC1,ZC1,ZC1,ZE3,Z80, Z7F,Z49,Z49,Z49,ZC1,Z80,                 00008200
*                F                        G                             00008300
     4Z7F,Z89,Z89,Z89,Z01,Z80, ZE3,ZC1,ZC1,Z49,Z79,Z80,                 00008400
*                H                        I                             00008500
     5Z7F,Z08,Z08,Z08,Z7F,Z80, Z80,ZC1,Z7F,ZC1,Z80,Z80,                 00008600
*                J                        K                             00008700
     6Z20,Z40,Z40,ZBF,Z80,Z80, Z7F,Z08,Z94,ZA2,ZC1,Z80,                 00008800
*                L                        M                             00008900
     7Z7F,Z40,Z40,Z40,Z40,Z80, Z7F,Z02,Z8C,Z02,Z7F,Z80,                 00009000
*                N                        O                             00009100
     8Z7F,Z02,Z04,Z08,Z7F,Z80, Z3E,Z51,Z49,Z45,Z3E,Z80,                 00009200
*                P                        Q                             00009300
     9Z7F,Z89,Z89,Z89,Z86,Z80, Z3E,ZC1,Z51,ZA1,Z5E,Z80,                 00009400
*                R                        S                             00009500
     AZ7F,Z89,Z19,Z29,Z46,Z80, Z46,Z49,Z49,Z49,Z31,Z80,                 00009600
*                T                        U                             00009700
     BZ01,Z01,Z7F,Z01,Z01,Z80, ZBF,Z40,Z40,Z40,ZBF,Z80,                 00009800
*                V                        W                             00009900
     CZ8F,ZB0,Z40,ZB0,Z8F,Z80, ZBF,Z40,ZBC,Z40,ZBF,Z80,                 00010000
*                X                        Y                             00010100
     DZE3,Z94,Z08,Z94,ZE3,Z80, Z07,Z08,Z70,Z08,Z07,Z80,                 00010200
*                Z                        [                             00010300
     EZ61,Z51,Z49,Z45,Z43,Z80, Z7F,Z7F,ZC1,ZC1,ZC1,Z80,                 00010400
*                \                        ]                             00010500
     FZ02,Z04,Z08,Z20,Z40,Z80, ZC1,ZC1,ZC1,Z7F,Z7F,Z80,                 00010600
*                ^                        _                             00010700
     GZ04,Z02,Z01,Z02,Z04,Z80, Z40,Z40,Z40,Z40,Z40,Z80/                 00010800
******   TABLE FOR 5X7 MATRIX OUTPUT ,EVEN PARITY , COLUMN BINARY       00010900
*                                                                       00011000
      DATA TBE1/                                                        00011100
*              BLANK                      !                             00011200
     1ZC0,ZC0,ZC0,ZC0,ZC0,ZC0, ZC0,ZC0,Z2F,ZC0,ZC0,ZC0,                 00011300
*                "                        #                             00011400
     2ZC0,Z87,ZC0,Z87,ZC0,ZC0, Z14,ZBE,Z14,ZBE,Z14,ZC0,                 00011500
*                $                        %                             00011600
     3Z2E,ZAA,ZFF,ZAA,Z3A,ZC0, Z63,Z93,Z88,ZE4,Z63,ZC0,                 00011700
*                &                        `                             00011800
     4Z7B,ZC5,ZEB,Z90,ZE9,ZC0, ZC0,ZC0,Z87,ZC0,ZC0,ZC0,                 00011900
*                (                        )                             00012000
     5ZC0,Z9C,Z22,Z41,Z41,ZC0, ZC0,Z41,Z41,Z22,Z9C,ZC0,                 00012100
*                *                        +                             00012200
     6Z88,ZAA,Z9C,ZAA,Z88,ZC0, Z88,Z88,ZBE,Z88,Z88,ZC0,                 00012300
*                ,                        -                             00012400
     7ZC0,ZC0,Z50,Z30,ZC0,ZC0, Z88,Z88,Z88,Z88,Z88,ZC0,                 00012500
*                .                        /                             00012600
     8ZC0,ZC0,Z60,Z60,ZC0,ZC0, ZA0,Z90,Z88,Z84,Z82,ZC0,                 00012700
*                0                        1                             00012800
     9ZBE,Z31,Z31,Z31,ZBE,ZC0, ZC0,Z82,ZFF,ZC0,ZC0,ZC0,                 00012900
*                2                        3                             00013000
     AZ42,ZE1,ZD1,ZC9,ZC6,ZC0, Z21,Z41,ZC9,Z4D,Z33,ZC0,                 00013100
*                4                        5                             00013200
     6Z18,Z14,Z12,ZFF,Z90,ZC0, Z27,ZCB,ZC5,ZC5,Z39,ZC0,                 00013300
*                6                        7                             00013400
     CZ3C,Z42,ZC9,ZC9,Z30,ZC0, Z81,Z81,ZF9,Z05,Z03,ZC0,                 00013500
*                8                        9                             00013600
     DZ36,ZC9,ZC9,ZC9,Z36,ZC0, Z06,ZC9,ZC9,Z21,Z1E,ZC0,                 00013700
*                :                        ;                             00013800
     EZC0,ZC0,Z1B,Z1B,ZC0,ZC0, ZC0,ZC0,Z2B,Z1B,ZC0,ZC0,                 00013900
*                <                        =                             00014000
     FZ88,Z14,Z22,Z41,ZC0,ZC0, Z22,Z22,Z22,Z22,Z22,ZC0,                 00014100
*                >                        ?                             00014200
     GZC0,Z41,Z22,Z14,Z88,ZC0, Z82,Z81,Z59,Z05,Z82,ZC0/                 00014300
      DATA TBE2/                                                        00014400
*                @                        A                             00014500
     1ZBE,Z41,ZDD,Z55,ZDF,ZC0, Z7E,Z11,Z11,Z11,Z7E,ZC0,                 00014600
*                B                        C                             00014700
     2ZFF,ZC9,ZC9,ZC9,Z36,ZC0, ZBE,Z41,Z41,Z41,Z22,ZC0,                 00014800
*                D                        E                             00014900
     3ZFF,Z41,Z41,Z41,ZBE,ZC0, ZFF,ZC9,ZC9,ZC9,Z41,ZC0,                 00015000
*                F                        G                             00015100
     4ZFF,Z09,Z09,Z09,Z81,ZC0, ZBE,Z41,Z41,ZC9,ZF9,ZC0,                 00015200
*                H                        I                             00015300
     5ZFF,Z88,Z88,Z88,ZFF,ZC0, ZC0,Z41,ZFF,Z41,ZC0,ZC0,                 00015400
*                J                        K                             00015500
     6ZA0,ZC0,ZC0,Z3F,ZC0,ZC0, ZFF,Z88,Z14,Z22,Z41,ZC0,                 00015600
*                L                        M                             00015700
     7ZFF,ZC0,ZC0,ZC0,ZC0,ZC0, ZFF,Z82,Z0C,Z82,ZFF,ZC0,                 00015800
*              BLANK                      O                             00015900
     8ZFF,Z82,Z84,Z88,ZFF,ZC0, ZBE,ZD1,ZC9,ZC5,ZBE,ZC0,                 00016000
*                P                        Q                             00016100
     9ZFF,Z09,Z09,Z09,Z06,ZC0, ZBE,Z41,ZD1,Z21,ZDE,ZC0,                 00016200
*                R                        S                             00016300
     AZFF,Z09,Z99,ZA9,ZC6,ZC0, ZC6,ZC9,ZC9,ZC9,ZB1,ZC0,                 00016400
*                T                        U                             00016500
     BZ81,Z81,ZFF,Z81,Z81,ZC0, Z3F,ZC0,ZC0,ZC0,Z3F,ZC0,                 00016600
*                V                        W                             00016700
     CZ0F,Z30,ZC0,Z30,Z0F,ZC0, Z3F,ZC0,Z3C,ZC0,Z3F,ZC0,                 00016800
*                X                        Y                             00016900
     DZ63,Z14,Z88,Z14,Z63,ZC0, Z87,Z88,ZF0,Z88,Z87,ZC0,                 00017000
*                Z                        [                             00017100
     EZE1,ZD1,ZC9,ZC5,ZC3,ZC0, ZFF,ZFF,Z41,Z41,Z41,ZC0,                 00017200
*                \                        ]                             00017300
     FZ82,Z84,Z88,Z90,ZA0,ZC0, Z41,Z41,Z41,ZFF,ZFF,ZC0,                 00017400
*                ^                        _                             00017500
     GZ84,Z82,Z81,Z82,Z84,ZC0, Z60,Z60,Z60,Z60,Z60,ZC0/                 00017600
******   TABLE FOR 5X6 MATRIX OUTPUT , NO PARITY , COLUMN BINARY        00017700
*                                                                       00017800
      DATA TB561/                                                       00017900
*                N                        !                             00018000
     1Z00,Z00,Z00,Z00,Z00,Z00, Z00,Z00,Z5E,Z00,Z00,Z00,                 00018100
*                "                        #                             00018200
     2Z00,Z0E,Z00,Z0E,Z00,Z00, Z14,Z3E,Z14,Z3E,Z14,Z00,                 00018300
*                $                        %                             00018400
     3Z2E,Z2A,Z7E,Z2A,Z3A,Z00, Z26,Z16,Z08,Z64,Z62,Z00,                 00018500
*                &                        `                             00018600
     4Z76,Z4A,Z56,Z20,Z50,Z00, Z00,Z00,Z0E,Z00,Z00,Z00,                 00018700
*                (                        )                             00018800
     5Z00,Z00,Z00,Z3C,Z42,Z00, Z00,Z42,Z3C,Z00,Z00,Z00,                 00018900
*                *                        +                             00019000
     6Z10,Z54,Z38,Z54,Z10,Z00, Z10,Z10,Z7C,Z10,Z10,Z00,                 00019100
*                ,                        -                             00019200
     7Z00,Z00,Z50,Z30,Z00,Z00, Z10,Z10,Z10,Z10,Z10,Z00,                 00019300
*                .                        /                             00019400
     8Z00,Z60,Z60,Z00,Z00,Z00, Z40,Z20,Z10,Z08,Z04,Z00,                 00019500
*                0                        1                             00019600
     9Z3C,Z42,Z42,Z42,Z3C,Z00, Z00,Z44,Z7E,Z40,Z00,Z00,                 00019700
*                2                        3                             00019800
     AZ64,Z52,Z4A,Z4A,Z44,Z00, Z22,Z4A,Z4A,Z4E,Z32,Z00,                 00019900
*                4                        5                             00020000
     BZ0E,Z08,Z08,Z7E,Z08,Z00, Z2E,Z4A,Z4A,Z4A,Z32,Z00,                 00020100
*                6                        7                             00020200
     CZ3C,Z4A,Z4A,Z4A,Z30,Z00, Z02,Z02,Z72,Z0A,Z06,Z00,                 00020300
*                8                        9                             00020400
     DZ34,Z4A,Z4A,Z4A,Z34,Z00, Z04,Z4A,Z4A,Z4A,Z3C,Z00,                 00020500
*                :                        ;                             00020600
     EZ00,Z00,Z36,Z36,Z00,Z00, Z00,Z00,Z56,Z36,Z00,Z00,                 00020700
*                <                        =                             00020800
     FZ10,Z28,Z44,Z00,Z00,Z00, Z28,Z28,Z28,Z28,Z28,Z00,                 00020900
*                >                        ?                             00021000
     GZ00,Z00,Z44,Z28,Z10,Z00, Z04,Z02,Z52,Z0A,Z04,Z00/                 00021100
      DATA TB562/                                                       00021200
*                @                        A                             00021300
     1Z3C,Z42,Z5A,Z5A,Z4C,Z00, Z78,Z14,Z12,Z14,Z78,Z00,                 00021400
*                B                        C                             00021500
     2Z7E,Z4A,Z4A,Z4A,Z34,Z00, Z3C,Z42,Z42,Z42,Z24,Z00,                 00021600
*                D                        E                             00021700
     3Z7E,Z42,Z42,Z42,Z3C,Z00, Z7E,Z4A,Z4A,Z42,Z42,Z00,                 00021800
*                F                        G                             00021900
     4Z7E,Z0A,Z0A,Z02,Z02,Z00, Z3C,Z42,Z42,Z52,Z72,Z00,                 00022000
*                H                        I                             00022100
     5Z7E,Z08,Z08,Z08,Z7E,Z00, Z00,Z42,Z74,Z42,Z00,Z00,                 00022200
*                J                        K                             00022300
     6Z20,Z40,Z40,Z40,Z3E,Z00, Z7E,Z08,Z10,Z24,Z42,Z00,                 00022400
*                L                        M                             00022500
     7Z7E,Z40,Z40,Z40,Z40,Z00, Z7E,Z04,Z08,Z04,Z7E,Z00,                 00022600
*                N                        O                             00022700
     8Z7E,Z04,Z08,Z30,Z7E,Z00, Z3C,Z42,Z42,Z42,Z3C,Z00,                 00022800
*                P                        Q                             00022900
     9Z7E,Z0A,Z0A,Z0A,Z04,Z00, Z3C,Z42,Z52,Z22,Z5C,Z00,                 00023000
*                R                        S                             00023100
     AZ7E,Z0A,Z1A,Z2A,Z44,Z00, Z44,Z4A,Z4A,Z4A,Z32,Z00,                 00023200
*                T                        U                             00023300
     BZ02,Z02,Z7E,Z02,Z02,Z00, Z3E,Z40,Z40,Z40,Z3E,Z00,                 00023400
*                V                        W                             00023500
     CZ1E,Z20,Z40,Z20,Z1E,Z00, Z7E,Z20,Z18,Z20,Z7E,Z00,                 00023600
*                X                        Y                             00023700
     DZ66,Z10,Z08,Z10,Z66,Z00, Z06,Z08,Z70,Z08,Z06,Z00,                 00023800
*                Z                        [                             00023900
     EZ62,Z52,Z4A,Z42,Z46,Z00, Z7E,Z42,Z42,Z00,Z00,Z00,                 00024000
*                \                        ]                             00024100
     FZ02,Z04,Z08,Z10,Z20,Z00, Z00,Z00,Z42,Z42,Z7E,Z00,                 00024200
*                ^                        _                             00024300
     GZ08,Z04,Z02,Z04,Z08,Z00, Z40,Z40,Z40,Z40,Z40,Z00/                 00024400
C                                                                       00024500
      IF (J.EQ.0) THEN                                                  00024600
C                                                                       00024700
C.....5*7 MATRIX, ODD PARITY, COLUMN BINARY                             00024800
C                                                                       00024900
      DO 10 I=1,6                                                       00025000
      DO 10 K=1,64                                                      00025100
   10 CODE(I,K)=TABO(I,K)                                               00025200
C                                                                       00025300
      ELSE IF (J.EQ.2) THEN                                             00025400
C                                                                       00025500
C.....5*6 MATRIX, NO PARITY, COLUMN BINARY                              00025600
C                                                                       00025700
      DO 20 I=1,6                                                       00025800
      DO 20 K=1,64                                                      00025900
   20 CODE(I,K)=TAB56(I,K)                                              00026000
C                                                                       00026100
      ELSE                                                              00026200
         CALL CFORM('**** INVALID CALL TO PARNOM ****',DARRAY,2,32)     00026300
         CALL CPRINT(DARRAY)                                            00026400
         RETURN                                                         00026500
      END IF                                                            00026600
      GO TO 100                                                         00026700
C                                                                       00026800
C.....ENTRY PARNEM                                                      00026900
C                                                                       00027000
      ENTRY PARNEM(N,A)                                                 00027100
C                                                                       00027200
C.....5*7 MATRIX, EVEN PARITY, COLUMN BINARY                            00027300
C                                                                       00027400
      DO 30 I=1,6                                                       00027500
      DO 30 K=1,64                                                      00027600
   30 CODE(I,K)=TABE(I,K)                                               00027700
C                                                                       00027800
C.....CHECK N.LE.504                                                    00027900
C                                                                       00028000
  100 N=ABS(N)                                                          00028100
      IF (N.GT.504) THEN                                                00028200
         CALL CFORM('**** MORE THAN 504 CHARACTERS',DARRAY,2,29)        00028300
         CALL CFORM('REQUESTED IN CALL TO PARNOM OR PARNEM ****',DARRAY,00028400
     1                32,42)                                            00028500
         CALL CPRINT(DARRAY)                                            00028600
         N=504                                                          00028700
      END IF                                                            00028800
C                                                                       00028900
C.....CALCULATE NUMBER OF WORDS CONTAINING CHARACTERS (6 PER WORD)      00029000
C                                                                       00029100
      NUM=N/6                                                           00029200
      IF (NUM*6.LT.N) NUM=NUM+1                                         00029300
C                                                                       00029400
C.....WRITE CHARCTERS FOR CONVERSION TO INTERNAL FILE                   00029500
C                                                                       00029600
      WRITE (INFIL,'(84A6)') (A(I),I=1,NUM)                             00029700
C                                                                       00029800
C.....FOR EACH CHARACTER INPUT, IDENTIFY POSITION IN ASCII CHAR SET     00029900
C                                                                       00030000
      JC=0                                                              00030100
      DO 200 I=1,N                                                      00030200
      IC=ICHAR(INFIL(I:I))-31                                           00030300
C                                                                       00030400
C.....STORE APPROP MATRIX IN OUTPUT ARRAY                               00030500
C                                                                       00030600
      DO 200 K=1,6                                                      00030700
      JC=JC+1                                                           00030800
      OUT(JC)=CODE(K,IC)                                                00030900
  200 CONTINUE                                                          00031000
C                                                                       00031100
C.....OUTPUT TO PUNCH FILE, JC IS NO OF BYTES                           00031200
C                                                                       00031300
      CALL TAPEPN(OUT,JC)                                               00031400
      RETURN                                                            00031500
      END                                                               00031600
**** SOURCE FILE : PUNCHA00.ORG   ***
*
      SUBROUTINE PUNCHA(N,A,J,K)                                        00000100
*                                                                       00000200
*  * PUNCHA *   VAX-11 FORTRAN 77 VERSION 29.11.82 E.MCLELLAN           00000300
*                                                                       00000400
*  PURPOSE     TO GENERATE REQUIRED PAPER TAPE CODES FOR BCD CHARACTERS 00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL PUNCHA(N,A,J,K)                                     00000800
*  ARGUMENTS                                                            00000900
*              N NUMBER OF BCD CHARACTERS IN ARRAY A                    00001000
*              A ARRAY CONTAINING BCD CHARACTERS                        00001100
*              J IGNORED                                                00001200
*              K -2  BLANKS AND PERIODS IGNORED                         00001300
*                -1  PERIODS IGNORED                                    00001400
*                 0  BLANKS IGNORED                                     00001500
*                >0  BLANKS ARE PROCESSED                               00001600
*                                                                       00001700
*  ALTERNATE ENTRY                                                      00001800
*              CALL PUNCHB(N,A,J,K)                                     00001900
*                                                                       00002000
C                                                                       00002100
C...BYTE VARIABLES IN THIS VAX IMPLEMENTATION MIGHT BE ABLE TO BE LOGICA00002200
C...ON OTHER SYSTEMS                                                    00002300
C                                                                       00002400
      COMMON/PUNTAB/PUNCOD                                              00002500
      BYTE PUNCOD(128),ILEGAL                                           00002600
*                                                                       00002700
      DOUBLE PRECISION A(64)                                            00002800
      CHARACTER*512 INFIL,OUTFIL                                        00002900
      BYTE PUNOUT(512)                                                  00003000
      LOGICAL OD                                                        00003100
C                                                                       00003200
      INCLUDE 'DARRAY.INC'                                              00003300
C                                                                       00003400
      DATA ILEGAL/ZEE/                                                  00003500
C                                                                       00003600
C                                                                       00003700
      ENTRY PUNCHB(N,A,J,K)                                             00003800
C                                                                       00003900
      WRITE (INFIL,'(64A8)') (A(I),I=1,64)                              00004000
C                                                                       00004100
      M=N                                                               00004200
C                                                                       00004300
      IF (K.LE.0) THEN                                                  00004400
         L=1                                                            00004500
         DO 10 I=1,N                                                    00004600
           IF ((INFIL(I:I).EQ.' ').AND.((K.EQ.0).OR.(K.EQ.-2))) THEN    00004700
              GO TO 10                                                  00004800
           ELSE IF ((INFIL(I:I).EQ.'.').AND.(K.LT.0)) THEN              00004900
              GO TO 10                                                  00005000
           ELSE                                                         00005100
              OUTFIL(L:L)=INFIL(I:I)                                    00005200
              L=L+1                                                     00005300
           END IF                                                       00005400
   10    CONTINUE                                                       00005500
         M=L-1                                                          00005600
      ELSE                                                              00005700
C                                                                       00005800
      OUTFIL=INFIL                                                      00005900
C                                                                       00006000
      END IF                                                            00006100
C                                                                       00006200
C.....CONVERT TO REQUIRED TAPE CODE                                     00006300
C                                                                       00006400
      JC=0                                                              00006500
      DO 100 I=1,M                                                      00006600
      IC=ICHAR(OUTFIL(I:I))+1                                           00006700
      IF (PUNCOD(IC).EQ.ILEGAL) THEN                                    00006800
         CALL CFORM('**** ILLEGAL CHARACTER CONVERSION IN PUNCHA ****', 00006900
     1              DARRAY,2,48)                                        00007000
         CALL CPRINT(DARRAY)                                            00007100
         GO TO 100                                                      00007200
      END IF                                                            00007300
C                                                                       00007400
      JC=JC+1                                                           00007500
      PUNOUT(JC)=PUNCOD(IC)                                             00007600
  100 CONTINUE                                                          00007700
C                                                                       00007800
C.....OUTPUT TO PUNCH FILE, JC IS NO OF BYTES                           00007900
C                                                                       00008000
      CALL TAPEPN(PUNOUT,JC)                                            00008100
      RETURN                                                            00008200
      END                                                               00008300
**** SOURCE FILE : PUNCHC00.ORG   ***
*
      SUBROUTINE PUNCHC(N,A,J,K)                                        00000100
*                                                                       00000200
*  * PUNCHC *   VAX-11 FORTRAN 77 VERSION 29.11.82 E.MCLELLAN           00000300
*               REVISED FOR CHARACTER HANDLING 5.9.85 E.MCL.            00000400
*                                                                       00000500
*  PURPOSE     TO GENERATE REQUIRED PAPER TAPE CODES FOR CHARACTERS     00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL PUNCHC(N,A,J,K)                                     00000900
*  ARGUMENTS                                                            00001000
*              N NUMBER OF CHARACTERS IN A                              00001100
*              A CHARACTER STRING TO BE PUNCHED                         00001200
*              J NUMBER OF CHARACTERS PUNCHED                           00001300
*              K -2  BLANKS AND PERIODS IGNORED                         00001400
*                -1  PERIODS IGNORED                                    00001500
*                 0  BLANKS IGNORED                                     00001600
*                >0  BLANKS ARE PROCESSED                               00001700
*                                                                       00001800
*  ALTERNATE ENTRY                                                      00001900
*              CALL PUNCHD(N,A,J,K)                                     00002000
*                                                                       00002100
C                                                                       00002200
C...BYTE VARIABLES IN THIS VAX IMPLEMENTATION MIGHT BE ABLE TO BE LOGICA00002300
C...ON OTHER SYSTEMS                                                    00002400
C                                                                       00002500
      COMMON/PUNTAB/PUNCOD                                              00002600
      BYTE PUNCOD(128),ILEGAL                                           00002700
*                                                                       00002800
      CHARACTER*512 A                                                   00002900
      CHARACTER*512 INFIL,OUTFIL                                        00003000
      BYTE PUNOUT(512)                                                  00003100
      LOGICAL OD                                                        00003200
C                                                                       00003300
      INCLUDE 'DARRAY.INC'                                              00003400
C                                                                       00003500
      DATA ILEGAL/ZEE/                                                  00003600
C                                                                       00003700
C                                                                       00003800
      ENTRY PUNCHD(N,A,J,K)                                             00003900
C                                                                       00004000
      INFIL=A                                                           00004100
C                                                                       00004200
      M=N                                                               00004300
C                                                                       00004400
      IF (K.LE.0) THEN                                                  00004500
         L=1                                                            00004600
         DO 10 I=1,N                                                    00004700
           IF ((INFIL(I:I).EQ.' ').AND.((K.EQ.0).OR.(K.EQ.-2))) THEN    00004800
              GO TO 10                                                  00004900
           ELSE IF ((INFIL(I:I).EQ.'.').AND.(K.LT.0)) THEN              00005000
              GO TO 10                                                  00005100
           ELSE                                                         00005200
              OUTFIL(L:L)=INFIL(I:I)                                    00005300
              L=L+1                                                     00005400
           END IF                                                       00005500
   10    CONTINUE                                                       00005600
         M=L-1                                                          00005700
      ELSE                                                              00005800
C                                                                       00005900
      OUTFIL=INFIL                                                      00006000
C                                                                       00006100
      END IF                                                            00006200
C                                                                       00006300
C.....CONVERT TO REQUIRED TAPE CODE                                     00006400
C                                                                       00006500
      JC=0                                                              00006600
      DO 100 I=1,M                                                      00006700
      IC=ICHAR(OUTFIL(I:I))+1                                           00006800
      IF (PUNCOD(IC).EQ.ILEGAL) THEN                                    00006900
         CALL CFORM('**** ILLEGAL CHARACTER CONVERSION IN PUNCHC ****', 00007000
     1              DARRAY,2,48)                                        00007100
         CALL CPRINT(DARRAY)                                            00007200
         GO TO 100                                                      00007300
      END IF                                                            00007400
C                                                                       00007500
      JC=JC+1                                                           00007600
      PUNOUT(JC)=PUNCOD(IC)                                             00007700
  100 CONTINUE                                                          00007800
C                                                                       00007900
C.....OUTPUT TO PUNCH FILE, JC IS NO OF BYTES                           00008000
C                                                                       00008100
      CALL TAPEPN(PUNOUT,JC)                                            00008200
      J=JC                                                              00008300
      RETURN                                                            00008400
      END                                                               00008500
**** SOURCE FILE : TAPEPN00.ORG   ***
*
      SUBROUTINE TAPEPN(CHAR,N)                                         00000100
*                                                                       00000200
*  * TAPEPN *  VAX-11 FORTRAN 77 VERSION  26.10.82  E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     TO WRITE COLUMN BINARY DATA TO PAPER TAPE PUNCH FILE     00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL TAPEPN(CHAR,N)                                      00000800
*  ARGUMENTS                                                            00000900
*              CHAR  BYTE ARRAY CONTAINING COLUMN BINARY CODES          00001000
*              N     NO OF COLUMNS (CHARACTERS) TO BE PUNCHED           00001100
*                                                                       00001200
C                                                                       00001300
C...BYTE VARIABLES IN THIS VAX IMPLEMENTATION MIGHT BE ABLE TO BE LOGICA00001400
C...ON OTHER SYSTEMS                                                    00001500
      BYTE CHAR(3024)                                                   00001600
*                                                                       00001700
      LOGICAL OD                                                        00001800
C                                                                       00001900
      INCLUDE 'DARRAY.INC'                                              00002000
C                                                                       00002100
C                                                                       00002200
C.....WRITE IN A FORMAT TO FILE PUNTAP.DAT                              00002300
C                                                                       00002400
C.....IS PUNTAP.DAT OPEN                                                00002500
C                                                                       00002600
      INQUIRE(FILE='PUNTAP.DAT',OPENED=OD)                              00002700
         IF (.NOT.OD) THEN                                              00002800
            OPEN(UNIT=7,FILE='PUNTAP.DAT',ERR=90,STATUS='NEW',          00002900
     1           ACCESS='SEQUENTIAL',FORM='FORMATTED')                  00003000
         END IF                                                         00003100
C                                                                       00003200
C.....WRITE TO PUNTAP.DAT                                               00003300
C                                                                       00003400
      WRITE(7,'(80A1)') (CHAR(I),I=1,N)                                 00003500
      RETURN                                                            00003600
C                                                                       00003700
   90 CALL CFORM('**** ERROR OPENING PUNTAP.DAT ****',DARRAY,2,34)      00003800
      CALL CPRINT(DARRAY)                                               00003900
      CALL ABNEND                                                       00004000
      RETURN                                                            00004100
      END                                                               00004200
**** SOURCE FILE : WTDIRE00.V01   ***
*
      SUBROUTINE WTDIRE(IU,MEMBER,USERD,NCH,IRET)                       00000100
C                                                                       00000200
      INTEGER IU,ID,NCH,IRET                                            00000300
      DOUBLE PRECISION MEMBER,USERD                                     00000400
C                                                                       00000500
      LOGICAL EX                                                        00000600
C                                                                       00000700
      INCLUDE 'LIBCOM.INC'                                              00000800
      CHARACTER*8 CMEM                                                  00000810
      INTEGER NWD                                                       00000900
C                                                                       00001000
      ID=IU                                                             00001120
C                                                                       00001200
C.... SET UP FILENAME                                                   00001300
C                                                                       00001400
      CALL HOLFRM(MEMBER,CMEM,1,8,NWD)                                  00001500
      J=INDEX(CMEM(1:),' ')                                             00001600
C                                                                       00001700
      IF (J.EQ.0) THEN                                                  00002100
         FILENM=APTLIB//CMEM//'.LDA'                                    00002200
      ELSE                                                              00002300
         FILENM=APTLIB//CMEM(1:J-1)//'.LDA'                             00002500
      ENDIF                                                             00002600
C                                                                       00002800
C.... INQUIRE IF FILE EXISTS                                            00002900
C                                                                       00003000
      INQUIRE(FILE=FILENM,EXIST=EX)                                     00003100
      IF (EX) THEN                                                      00003200
C.... FILE ALREADY EXISTS - SHOULD A NEW VERSION BE WRITTEN             00003300
        IF (ID.LT.0) THEN                                               00003400
C.... YES - OPEN ATTACHED TO UNIT ID                                    00003500
          ID=IABS(ID)                                                   00003600
          OPEN(UNIT=ID,FILE=FILENM,ERR=20,STATUS='NEW',                 00003700
     +         ACCESS='SEQUENTIAL',FORM='UNFORMATTED')                  00003800
          IRET=0                                                        00003900
        ELSE                                                            00004000
          IRET=9                                                        00004100
        ENDIF                                                           00004200
      ELSE                                                              00004300
C.... FILE DOES NOT EXIST - OPEN ATTACHED TO UNIT ID                    00004400
        OPEN(UNIT=ID,FILE=FILENM,ERR=20,STATUS='NEW',                   00004500
     +       ACCESS='SEQUENTIAL',FORM='UNFORMATTED')                    00004600
        IRET=0                                                          00004700
      ENDIF                                                             00004800
      RETURN                                                            00004900
C.... ERROR OPENING FILE                                                00005000
  20  IRET=5                                                            00005100
      RETURN                                                            00005200
      END                                                               00005300
**** SOURCE FILE : M0006620.W02   ***
*
C                                                 8/81     MBB          M0000100
C...  FORTRAN BLOCK DATA               BD2ITL                           M0000200
C                                                 8/81     MBB          M0000300
      BLOCK DATA BD2ITL                                                 M0000400
C                                                                       M0000500
      IMPLICIT INTEGER (A-Z)                                            M0000600
C                                                                       M0000700
C...         2.    STACK AND POINTER STORAGE                            M0000800
C                                                                       M0000900
      COMMON/STKLST/STKLST,STACK,ARGSTK                                 M0001000
      DIMENSION STKLST(3),STACK(2,99),ARGSTK(99)                        M0001100
C                                                                       M0001200
      EQUIVALENCE(STKLST(1),TOP),(STKLST(2),ARGTOP),(STKLST(3),IARGDM)  M0001300
C                                                                       M0001400
C                                                                       M0001600
C...         5.    PROGRAM CONTROL FLAGS                                M0001700
C                                                                       M0001800
      COMMON/FLAGS/FLAGS                                                M0001900
      DIMENSION FLAGS(4)                                                M0002000
      LOGICAL ENDFLG,NEWSTM,APTRAN,REFFLG                               M0002100
C                                                                       M0002200
      EQUIVALENCE(FLAGS(1),ENDFLG),(FLAGS(2),NEWSTM),(FLAGS(3),APTRAN), M0002300
     1           (FLAGS(4),REFFLG)                                      M0002400
C                                                                       M0002500
C                                                                       M0002700
C...         6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION     M0002800
C                                                                       M0002900
      COMMON/TMP/TXXXX                                                  M0003000
      DIMENSION TXXXX(2,32)                                             M0003100
C                                                                       M0003200
C                                                                       M0009900
C...      13.      NAMTBL POINTERS TO NEGATIVE NUMBERS                  M0010000
C                                                                       M0010100
      COMMON/NEGPTR/NONEPT                                              M0010200
C                                                                       M0010300
C...        11.    SEQUENCE NUMBER STORAGE                              M0010400
C                                                                       M0010500
C                  COMMENT OF  SEQNO AND SEQNUM                         M0010600
C                                                                       M0010810
      INCLUDE 'SEQCOM.INC'                                              M0010820
C                                                                       M0011000
C...        12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                M0011100
C                                                                       M0011200
      COMMON/CFSIZE/CFSIZE,MAXSIZ,CANSIZ,ISC,KSC                        M0011300
      DIMENSION  CFSIZE(3),MAXSIZ(2),CANSIZ(2,100),KSC(3,300)           M0011400
      LOGICAL PARDEF,TABCYS                                             M0011500
C                                                                       M0011600
      EQUIVALENCE(CFSIZE(1),CANTOP),(CFSIZE(2),PARDEF),                 M0011700
     1           (CFSIZE(3),TABCYS)                                     M0011800
C                                                                       M0011900
C                                                                       M0012200
C...      14.      I. L. LIST OPTION FLAGS                              M0012300
C                                                                       M0012400
      COMMON/PRT/PRT                                                    M0012500
      DIMENSION PRT(7)                                                  M0012600
      LOGICAL    CILPRT,  ILPRT, INTERP, ASSEMB, TRACFL                 M0012700
     /          ,PRTERR,  MCHDNG                                        M0012800
C                                                                       M0012900
      EQUIVALENCE(PRT(1),CILPRT),(PRT(2),ILPRT ),(PRT(3),INTERP),       M0013000
     1           (PRT(4),ASSEMB),(PRT(5),TRACFL),(PRT(6),PRTERR),       M0013100
     2           (PRT(7),MCHDNG)                                        M0013200
C                                                                       M0013300
C                                                                       M0013700
C...        15.    ARRAY LIMIT STORAGE                                  M0013800
C                                                                       M0013900
      COMMON/SBSCPT/RNGPT,RANGE                                         M0014000
      DIMENSION RANGE(400)                                              M0014100
C                                                                       M0014300
C...        16.    LITERALS FOR I. L. OPERATION CODES                   M0014400
C                                                                       M0014500
      COMMON/IL/IL                                                      M0014600
      DIMENSION IL(21)                                                  M0014700
C                                                                       M0014800
      EQUIVALENCE(IL( 1),FADD  ),(IL( 2),FSUB  ),(IL( 3),FMPY  ),       M0014900
     1           (IL( 4),FDIV  ),(IL( 5),FEXP  ),(IL( 6),LABELX),       M0015000
     2           (IL( 7),ENTRYX),(IL( 8),JUMP  ),(IL( 9),SEQNCE),       M0015100
     3           (IL(10),RETMC ),(IL(11),CONJMP),(IL(12),RESRV ),       M0015200
     4           (IL(13),CVTSUB),(IL(14),CALMC ),(IL(15),ASNADD),       M0015300
     5           (IL(16),ASNJMP),(IL(17),REPL  ),(IL(18),CALL  ),       M0015400
     7           (IL(19),MOVE  ),(IL(20),VBLJMP),(IL(21),HOLDAT)        M0015500
C                                                                       M0015600
C                                                                       M0017800
C...        17.    MODE CODES                                           M0017900
C                                                                       M0018000
      COMMON/MODX/MODX                                                  M0018100
      DIMENSION MODX(32)                                                M0018200
C                                                                       M0018300
      EQUIVALENCE(MODX( 1),LINE  ),(MODX( 2),PLANE ),(MODX( 3),CYLNDR), M0018400
     1           (MODX( 4),CIRCLE),(MODX( 5),SPHERE),(MODX( 6),HYPERB), M0018500
     2           (MODX( 7),CONIC ),(MODX( 8),ELLIPS),(MODX( 9),CONE  ), M0018600
     3           (MODX(10),GCONIC),(MODX(11),TABCYL),(MODX(12),RLDSRF), M0018700
     4           (MODX(13),POLCON),(MODX(14),QADRIC),(MODX(15),PARSRF), M0018800
     5           (MODX(16),UNUS1 ),(MODX(17),UNUS2 ),(MODX(18),MATRIX), M0018900
     6           (MODX(19),POINT ),(MODX(20),VECTOR),(MODX(21),REAL  ), M0019000
     7           (MODX(22),INTGER),(MODX(23),BOOL  ),(MODX(24),SUBSCR), M0019100
     8           (MODX(25),STRING),(MODX(26),PATERN),(MODX(27),BOUNDS), M0019200
     9           (MODX(28),OBJECT),(MODX(29),SSURF ),(MODX(30),SCURV ), M0019300
     A           (MODX(31),UNUS3 ),(MODX(32),UNUS4 )                    M0019400
C                                                                       M0019500
C                                                                       M0022800
C...        18.    STRING STORAGE AREA                                  M0022900
C                                                                       M0023000
      COMMON/CHRX/CHR                                                   M0023100
      CHARACTER CHR*400                                                 M0023200
C                                                                       M0023400
C...      19.      INTERMEDIATE LANGUAGE TEXT                           M0023500
C                                                                       M0023600
      COMMON/ILTEXT/ILTEXT,TEXTIN                                       M0023700
      DIMENSION TEXTIN(90),ILTEXT(4)                                    M0023800
      LOGICAL COMFIN                                                    M0023900
      EQUIVALENCE(ILTEXT(1),COMFIN),(ILTEXT(2),LENGTH),                 M0024000
     1           (ILTEXT(3),TPNTRX),(ILTEXT(4),OPTEXT)                  M0024100
C                                                                       M0024200
C                                                                       M0024400
C         22.      MACRO PROCESSING VARIABLES                           M0024500
C                                                                       M0024600
      COMMON/MACXX1/MACXX1                                              M0024700
      DIMENSION MACXX1(71)                                              M0024800
      LOGICAL MACLDD ,CALLON ,CALLMV ,ILHLT  ,MVMAC  ,MACRED ,MVTRUE ,  M0024900
     1        FINMAC ,ENTRY  ,NESTG  ,ENDMCH ,MACLK  ,MACEND ,SHOULD    M0025000
C                                                                       M0025100
      EQUIVALENCE(MACXX1( 1),MACDFP),(MACXX1( 2),MCNMB ),               M0025200
     1           (MACXX1( 3),MCHSTP),(MACXX1( 4),MCTXTP),               M0025300
     2           (MACXX1( 5),MCSAVP),(MACXX1( 6),MNMVBP),               M0025400
     3           (MACXX1( 7),MACLDD),(MACXX1( 8),TEMP1 ),               M0025500
     4           (MACXX1( 9),TEMP2 ),(MACXX1(10),CALLON),               M0025600
     5           (MACXX1(11),CALLMV),(MACXX1(12),MVSEG ),               M0025700
     6           (MACXX1(13),CALLPT),(MACXX1(14),ILHLT ),               M0025800
     7           (MACXX1(15),TEXTST),(MACXX1(16),MVPNT ),               M0025900
     8           (MACXX1(17),MVMAC ),(MACXX1(18),MACRED),               M0026000
     9           (MACXX1(19),MVTRUE),(MACXX1(20),BRANCH),               M0026100
     A           (MACXX1(21),MAXSPS),(MACXX1(22),INTMED)                M0026200
      EQUIVALENCE(MACXX1(23),MAJWRD),(MACXX1(24),FINMAC),               M0026300
     1           (MACXX1(25),NMLINE),(MACXX1(26),WAY   ),               M0026400
     2           (MACXX1(27),NUMVAR),(MACXX1(28),NUMCAL),               M0026500
     3           (MACXX1(29),BITWDS),(MACXX1(30),MBPTR ),               M0026600
     4           (MACXX1(31),LSTWRT),(MACXX1(32),MCDFDM),               M0026700
     5           (MACXX1(33),MHSTDM),(MACXX1(34),MCSVDM),               M0026800
     6           (MACXX1(35),MNMVDM),(MACXX1(36),MSEQDM),               M0026900
     7           (MACXX1(37),MACLNT),(MACXX1(38),MCSLNT),               M0027000
     8           (MACXX1(39),MSP   ),(MACXX1(40),ENTRY ),               M0027100
     9           (MACXX1(41),MVEXST),(MACXX1(42),MACTOP),               M0027200
     A           (MACXX1(43),MCSTRT),(MACXX1(44),MAJOR )                M0027300
      EQUIVALENCE(MACXX1(45),NESTG ),(MACXX1(46),ROUTE ),               M0027400
     1           (MACXX1(47),ROAD  ),(MACXX1(48),SAVMSP),               M0027500
     2           (MACXX1(49),TYP   ),(MACXX1(50),ENDMCH),               M0027600
     3           (MACXX1(51),LNUSDP),(MACXX1(52),MCTOPP),               M0027700
     4           (MACXX1(53),LNSDDM),(MACXX1(54),MVARDM),               M0027800
     5           (MACXX1(55),MASDM ),(MACXX1(56),NUMBIT),               M0027900
     6           (MACXX1(57),MCSPDP),(MACXX1(58),MACLK ),               M0028000
     7           (MACXX1(59),MCSRCH),(MACXX1(60),MACFND),               M0028100
     8           (MACXX1(61),NUMARG),(MACXX1(62),MACEND),               M0028200
     9           (MACXX1(63),WHCHMN),(MACXX1(64),LARGMV),               M0028300
     A           (MACXX1(65),MSPDDM),(MACXX1(66),VBLSVP)                M0028400
      EQUIVALENCE(MACXX1(67),IVSVDM),(MACXX1(68),PATHLN),               M0028500
     1           (MACXX1(69),NEXTLN),(MACXX1(70),SHOULD),               M0028600
     2           (MACXX1(71),PATHCH)                                    M0028700
C                                                                       M0028800
C                                                                       M0030400
C         23.      MACRO PROCESSING ARRAYS                              M0030500
C                                                                       M0030600
      COMMON/MACXX2/MACXX2                                              M0030700
      DIMENSION MACXX2(902),MBREC(2),MBUFF(350,2),MACRTB(200)           M0030800
      EQUIVALENCE(MACXX2(  1),MBREC(1)),(MACXX2( 3),MBUFF(1,1))         M0030900
      EQUIVALENCE(MACXX2(703),MACRTB(1))                                M0031000
C                                                                       M0031200
C         24.      MACRO PROCESSING ARRAYS                              M0031300
C                                                                       M0031400
      COMMON/MACXX3/MACXX3                                              M0031500
      DIMENSION MACXX3(2630),MACDF1(400),MACDF2(400),MACHST(1800),      M0031600
     1                       MACSV1( 10),MACSV2( 10),MACSV3( 10)        M0031700
      EQUIVALENCE(MACXX3(   1),MACDF1(1)),(MACXX3( 401),MACDF2(1)),     M0031800
     1           (MACXX3( 801),MACHST(1)),(MACXX3(2601),MACSV1(1)),     M0031900
     2           (MACXX3(2611),MACSV2(1)),(MACXX3(2621),MACSV3(1))      M0032000
C                                                                       M0032200
C         25.      MACRO PROCESSING ARRAYS                              M0032300
C                                                                       M0032400
      COMMON/MACXX4/MACXX4                                              M0032500
      DIMENSION MACXX4( 100),MNMVB ( 25),MNMVC ( 25),MACSEQ( 50)        M0032600
      EQUIVALENCE(MACXX4( 1),MNMVB(1)),(MACXX4(26),MNMVC(1)),           M0032700
     1           (MACXX4(51),MACSEQ(1))                                 M0032800
C                                                                       M0033000
C         25A.     MACRO PROCESSING ARRAYS                              M0033100
C                                                                       M0033200
      COMMON/MACXX5/ITMPSV                                              M0033300
      DIMENSION ITMPSV(135)                                             M0033400
C                                                                       M0033500
C         26.      MACRO PROCESSING ARRAYS                              M0033600
C                                                                       M0033700
      COMMON/MACXX6/MACXX6                                              M0033800
      DIMENSION MACXX6(1300),VBLSAV(900)                                M0033900
      EQUIVALENCE(MACXX6(401),VBLSAV(1))                                M0034000
C                                                                       M0034200
C         26A.     MACRO PROCESSING ARRAYS                              M0034300
C                                                                       M0034400
      COMMON/MACXX7/MACXX7                                              M0034500
      DIMENSION MACXX7(182),LINUSD(50),MAS(100),MACVAR(32)              M0034600
      EQUIVALENCE(MACXX7(  1),LINUSD(1)),(MACXX7( 51),MAS(1)),          M0034700
     1           (MACXX7(151),MACVAR(1))                                M0034800
C                                                                       M0035000
C...        27.    OPERAND MODIFIERS                                    M0035100
C                                                                       M0035200
      COMMON/OPMOD/OPMOD                                                M0035300
      DIMENSION    OPMOD(8)                                             M0035400
C                                                                       M0035500
      EQUIVALENCE(OPMOD(1),NOUGHT),(OPMOD(2),DLR   ),(OPMOD(3),DBLDLR), M0035600
     1           (OPMOD(4),TRPDLR),(OPMOD(5),QUADLR),(OPMOD(6),QUIDLR), M0035700
     2           (OPMOD(7),HEXDLR),(OPMOD(8),SPTDLR)                    M0035710
C                                                                       M0035800
C                                                                       M0036500
C...        29.    CLASS CODE MODULI                                    M0036600
C                                                                       M0036700
      COMMON/MODULI/MODULO,MODHLF                                       M0036800
C                                                                       M0037100
C...        30.   NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCKM0037200
C                                                                       M0037300
      COMMON/BLKCFS/FIRST                                               M0037400
      DIMENSION  FIRST(2,3)                                             M0037500
C....                                                                   M0037700
C           31.   COMMON BLOCK FOR PRO026 AND MOTION                    M0037800
C....                                                                   M0037900
      COMMON /COMP26/COMP26,TAGTBL                                      M0038000
      DIMENSION TAGTBL(3),COMP26(13)                                    M0038100
      LOGICAL FEDSAV, FMTERR, MCSJMP, JMPING                            M0038200
C                                                                       M0038300
      EQUIVALENCE(COMP26( 1),INTOF ),(COMP26( 2),ARGCNT),               M0038400
     1           (COMP26( 3),CSPNTR),(COMP26( 4),JMPCS ),               M0038500
     2           (COMP26( 5),NUMBCS),(COMP26( 6),TEST  ),               M0038600
     3           (COMP26( 7),TEST1 ),(COMP26( 8),FEDSAV),               M0038700
     4           (COMP26( 9),FMTERR),(COMP26(10),MCSJMP),               M0038800
     5           (COMP26(11),JMPING),(COMP26(12),K     ),               M0038900
     6           (COMP26(13),LERR  )                                    M0039000
C                                                                       M0039100
C                                                                       M0039400
C           32.   COMMON BLOCK FOR SETBIT AND BITMCH                    M0039500
C                                                                       M0039600
      COMMON/BITCOM/BIT                                                 M0039700
      DIMENSION BIT(32)                                                 M0039800
      DIMENSION LOBIT(16),HIBIT(16)                                     M0039900
      EQUIVALENCE (LOBIT(1),BIT(1)),(HIBIT(1),BIT(17))                  M0040000
C...                                                                    M0041700
C ...       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE         M0041800
C                                                                       M0041900
C                                                                       M0042000
      COMMON/BGEOM/BGEOM                                                M0042100
      DIMENSION     BGEOM(4)                                            M0042200
C                                                                       M0042300
      EQUIVALENCE(BGEOM(1),IFBNDS),(BGEOM(2),IFDUMP),(BGEOM(3),J     ), M0042400
     1           (BGEOM(4),L     )                                      M0042500
C                                                                       M0042600
C           36.    SYSTEM MACRO AND SEGMENT READ VARIABLES              M0042700
C                                                                       M0042800
      COMMON/MACSEG/MACSEG                                              M0042900
      DIMENSION     MACSEG(6)                                           M0043000
      LOGICAL ALOPN,LMRSTR,LMREND                                       M0043100
C                                                                       M0043200
      EQUIVALENCE(MACSEG(1),ALOPN ),(MACSEG(2),NMSEG ),                 M0043300
     1           (MACSEG(3),NMMAC ),(MACSEG(4),LMRSTR),                 M0043400
     2           (MACSEG(5),ITMPCT),(MACSEG(6),LMREND)                  M0043500
C                                                                       M0043800
C...        37.    INCLUSIVE SUBSCRIPT VARIABLES                        M0043900
C                                                                       M0044000
      COMMON/ISSCOM/ISSCOM,ISSTRM                                       M0044100
      DIMENSION ISSTRM(2),ISSCOM(7)                                     M0044200
      LOGICAL ISSFL,ISSEND                                              M0044300
C                                                                       M0044400
      EQUIVALENCE(ISSCOM(1),ISSA  ),(ISSCOM(2),ISSB  ),                 M0044500
     1           (ISSCOM(3),ISSC  ),(ISSCOM(4),ISSVBL),                 M0044600
     2           (ISSCOM(5),ISSMOD),(ISSCOM(6),ISSFL ),                 M0044700
     3           (ISSCOM(7),ISSEND)                                     M0044800
C                                                                       M0044900
C                                                                       M0045100
C...        39.    COMMON BLOCK LIBRARY PRINTING FLAG                   M0045200
C                                                                       M0045300
      COMMON/LIBPRT/LIBPRT                                              M0045400
      LOGICAL       LIBPRT                                              M0045500
C                                                                       M0045600
C...        41.    NUMBER TABLE OVERFLOW VARIABLES                      M0045700
C                                                                       M0045800
      COMMON/NTBL/NTBL                                                  M0045900
      DIMENSION   NTBL(6)                                               M0046000
C                                                                       M0046100
      EQUIVALENCE(NTBL(1),NMOD  ),(NTBL(2),NCRNT ),(NTBL(3),NNDX  ),    M0046200
     1           (NTBL(4),NLAST ),(NTBL(5),NSTR  ),(NTBL(6),NMAX  )     M0046300
C                                                                       M0046400
C                                                                       M0046600
C           42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE   M0046700
C                                                                       M0046800
      COMMON/CANSTR/CANSTR,CANSTK                                       M0046900
      DIMENSION CANSTK(16),CANSTR(2)                                    M0047000
C                                                                       M0047100
      EQUIVALENCE(CANSTR(1),CANPTR),(CANSTR(2),CANCHK)                  M0047200
C                                                                       M0047300
C                                                                       M0047500
C           43.    COMMON BLOCK FOR LOOP                                M0047600
C                                                                       M0047700
      COMMON/DOLOOP/DOLOOP                                              M0047800
      DIMENSION DOLOOP(9)                                               M0047900
      LOGICAL DOFLAG,DLRFLG,IFFLAG                                      M0048000
C                                                                       M0048100
      EQUIVALENCE(DOLOOP(1),JUMPTO),(DOLOOP(2),ABSDO ),                 M0048200
     1           (DOLOOP(3),RELDO ),(DOLOOP(4),DONEST),                 M0048300
     2           (DOLOOP(5),DOMAX ),(DOLOOP(6),DOJUMP),                 M0048400
     3           (DOLOOP(7),DOFLAG),(DOLOOP(8),DLRFLG),                 M0048500
     4           (DOLOOP(9),IFFLAG)                                     M0048510
C                                                                       M0048600
C                                                                       M0048900
C           44.    COMMON BLOCK FOR ERROR POSITIONS                     M0049000
C                                                                       M0049100
      COMMON/ERRPOS/ERRPOS                                              M0049200
      INTEGER ERRPOS(302),ERRPNT(100),ESTACK(100),ERGSTK(100)           M0049300
      LOGICAL NOWARN                                                    M0049400
C                                                                       M0049500
      EQUIVALENCE(ERRPOS(1),NOWARN),(ERRPOS(3),ERRPNT(1)),              M0049600
     1           (ERRPOS(103),ESTACK(1)),(ERRPOS(203),ERGSTK(1))        M0049700
C                                                                       M0049800
C                                                                       M0050000
C           45.    NUMBER TABLE INDICES                                 M0050100
C                                                                       M0050200
      INCLUDE 'NUMBLK.INC'                                              M0050300
                                                                        M005040C
C     DATA STATEMENTS                                                   M0100000
C                                                                       M0100700
C...         2.    STACK AND POINTER STORAGE                            M0100800
C                                                                       M0100900
      DATA TOP,ARGTOP,IARGDM/0,0,99/                                    M0101500
C                                                                       M0101600
C...         5.    PROGRAM CONTROL FLAGS                                M0101700
C                                                                       M0101800
      DATA ENDFLG,NEWSTM,APTRAN,REFFLG/.TRUE.,.TRUE.,.FALSE.,.FALSE./   M0102600
C                                                                       M0102700
C...         6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION     M0102800
C                                                                       M0102900
C***  DATA SPECIFICATIONS TO COMPLEMENT 'INITAL'                        M0103300
C                                                                       M0103400
C     LINE                                                              M0103500
      DATA TXXXX(1, 1),TXXXX(2, 1)/4,0/                                 M0103600
C     PLANE                                                             M0103700
      DATA TXXXX(1, 2),TXXXX(2, 2)/4,0/                                 M0103800
C     CYLINDER                                                          M0103900
      DATA TXXXX(1, 3),TXXXX(2, 3)/7,0/                                 M0104000
C     CIRCLE                                                            M0104100
      DATA TXXXX(1, 4),TXXXX(2, 4)/7,0/                                 M0104200
C     SPHERE                                                            M0104300
      DATA TXXXX(1, 5),TXXXX(2, 5)/4,0/                                 M0104400
C     HYPERBOLA                                                         M0104500
      DATA TXXXX(1, 6),TXXXX(2, 6)/10,0/                                M0104600
C     LOFT CONIC                                                        M0104700
      DATA TXXXX(1, 7),TXXXX(2, 7)/10,0/                                M0104800
C     ELLIPSE                                                           M0104900
      DATA TXXXX(1, 8),TXXXX(2, 8)/10,0/                                M0105000
C     CONE                                                              M0105100
      DATA TXXXX(1, 9),TXXXX(2, 9)/7,0/                                 M0105200
C     GENERAL CONIC                                                     M0105300
      DATA TXXXX(1,10),TXXXX(2,10)/10,0/                                M0105400
C     TABULATED CYLINDER                                                M0105500
      DATA TXXXX(1,11),TXXXX(2,11)/2,0/                                 M0105600
C     RULED SURFACE                                                     M0105700
      DATA TXXXX(1,12),TXXXX(2,12)/2,0/                                 M0105800
C     POLYCONIC SURFACE                                                 M0105900
      DATA TXXXX(1,13),TXXXX(2,13)/2,0/                                 M0106000
C     QUADRIC                                                           M0106100
      DATA TXXXX(1,14),TXXXX(2,14)/10,0/                                M0106200
C     PARAMETRIC SURFACE                                                M0106300
      DATA TXXXX(1,15),TXXXX(2,15)/10,0/                                M0106400
C     UNUSED                                                            M0106500
      DATA TXXXX(1,16),TXXXX(2,16)/0,0/                                 M0106600
C     UNUSED                                                            M0106700
      DATA TXXXX(1,17),TXXXX(2,17)/0,0/                                 M0106800
C     MATRIX                                                            M0106900
      DATA TXXXX(1,18),TXXXX(2,18)/12,0/                                M0107000
C     POINT                                                             M0107100
      DATA TXXXX(1,19),TXXXX(2,19)/3,0/                                 M0107200
C     VECTOR                                                            M0107300
      DATA TXXXX(1,20),TXXXX(2,20)/3,0/                                 M0107400
C     REAL                                                              M0107500
      DATA TXXXX(1,21),TXXXX(2,21)/1,0/                                 M0107600
C     INTEGER                                                           M0107700
      DATA TXXXX(1,22),TXXXX(2,22)/1,0/                                 M0107800
C     BOOLEAN                                                           M0107900
      DATA TXXXX(1,23),TXXXX(2,23)/1,0/                                 M0108000
C     SUBSCRIPT                                                         M0108100
      DATA TXXXX(1,24),TXXXX(2,24)/1,0/                                 M0108200
C     STRING                                                            M0108300
      DATA TXXXX(1,25),TXXXX(2,25)/12,0/                                M0108400
C     PATERN                                                            M0108500
      DATA TXXXX(1,26),TXXXX(2,26)/2,0/                                 M0108600
C     BOUNDS                                                            M0108700
      DATA TXXXX(1,27),TXXXX(2,27)/0,0/                                 M0108800
C     OBJECT                                                            M0108900
      DATA TXXXX(1,28),TXXXX(2,28)/0,0/                                 M0109000
C     SSURF                                                             M0109100
      DATA TXXXX(1,29),TXXXX(2,29)/2,0/                                 M0109200
C     SCURV                                                             M0109300
      DATA TXXXX(1,30),TXXXX(2,30)/2,0/                                 M0109400
C     UNUSED                                                            M0109500
      DATA TXXXX(1,31),TXXXX(2,31)/0,0/                                 M0109600
C     UNUSED                                                            M0109700
      DATA TXXXX(1,32),TXXXX(2,32)/0,0/                                 M0109800
C                                                                       M0109900
C...      13.      NAMTBL POINTERS TO NEGATIVE NUMBERS                  M0110000
C                                                                       M0110100
C                                                                       M0110300
C...        11.    SEQUENCE NUMBER STORAGE                              M0110400
C                                                                       M0110500
      DATA     SEQNO/1/                                                 M0110900
C                                                                       M0111000
C...        12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                M0111100
C                                                                       M0111200
      DATA  MAXSIZ,CANSIZ,KSC,CANTOP,ISC /1102*0,100,3/                 M0112000
      DATA PARDEF,TABCYS/.FALSE.,.FALSE./                               M0112100
C                                                                       M0112200
C...      14.      I. L. LIST OPTION FLAGS                              M0112300
C                                                                       M0112400
      DATA       CILPRT,  ILPRT, INTERP, ASSEMB, TRACFL                 M0113400
     /          ,PRTERR,  MCHDNG/                                       M0113500
     /           2*.FALSE.,.TRUE.,4*.FALSE./                            M0113600
C                                                                       M0113700
C...        15.    ARRAY LIMIT STORAGE                                  M0113800
C                                                                       M0113900
      DATA RNGPT,RANGE/1,400*0/                                         M0114200
C                                                                       M0114300
C...        16.    LITERALS FOR I. L. OPERATION CODES                   M0114400
C                                                                       M0114500
      DATA FADD  / 1/                                                   M0115700
      DATA FSUB  / 2/                                                   M0115800
      DATA FMPY  / 3/                                                   M0115900
      DATA FDIV  / 4/                                                   M0116000
      DATA FEXP  / 5/                                                   M0116100
      DATA LABELX/ 6/                                                   M0116200
      DATA ENTRYX/ 7/                                                   M0116300
      DATA JUMP  / 8/                                                   M0116400
      DATA SEQNCE/ 9/                                                   M0116500
      DATA RETMC /10/                                                   M0116600
      DATA CONJMP/11/                                                   M0116700
      DATA RESRV /12/                                                   M0116800
      DATA CVTSUB/13/                                                   M0116900
      DATA CALMC /14/                                                   M0117000
      DATA ASNADD/15/                                                   M0117100
      DATA ASNJMP/16/                                                   M0117200
      DATA REPL  /17/                                                   M0117300
      DATA CALL  /18/                                                   M0117400
      DATA MOVE  /19/                                                   M0117500
      DATA VBLJMP/20/                                                   M0117600
      DATA HOLDAT/21/                                                   M0117700
C                                                                       M0117800
C...        17.    MODE CODES                                           M0117900
C                                                                       M0118000
      DATA  LINE  / 1/                                                  M0119600
      DATA  PLANE / 2/                                                  M0119700
      DATA  CYLNDR/ 3/                                                  M0119800
      DATA  CIRCLE/ 4/                                                  M0119900
      DATA  SPHERE/ 5/                                                  M0120000
      DATA  HYPERB/ 6/                                                  M0120100
      DATA  CONIC / 7/                                                  M0120200
      DATA  ELLIPS/ 8/                                                  M0120300
      DATA  CONE  / 9/                                                  M0120400
      DATA  GCONIC/10/                                                  M0120500
      DATA  TABCYL/11/                                                  M0120600
      DATA  RLDSRF/12/                                                  M0120700
      DATA  POLCON/13/                                                  M0120800
      DATA  QADRIC/14/                                                  M0120900
      DATA  PARSRF/15/                                                  M0121000
      DATA  UNUS1 /16/                                                  M0121100
      DATA  UNUS2 /17/                                                  M0121200
      DATA  MATRIX/18/                                                  M0121300
      DATA  POINT /19/                                                  M0121400
      DATA  VECTOR/20/                                                  M0121500
      DATA  REAL  /21/                                                  M0121600
      DATA  INTGER/22/                                                  M0121700
      DATA  BOOL  /23/                                                  M0121800
      DATA  SUBSCR/24/                                                  M0121900
      DATA  STRING/25/                                                  M0122000
      DATA  PATERN/26/                                                  M0122100
      DATA  BOUNDS/27/                                                  M0122200
      DATA  OBJECT/28/                                                  M0122300
      DATA  SSURF /29/                                                  M0122400
      DATA  SCURV /30/                                                  M0122500
      DATA  UNUS3 /31/                                                  M0122600
      DATA  UNUS4 /32/                                                  M0122700
C                                                                       M0122800
C...        18.    STRING STORAGE AREA                                  M0122900
C                                                                       M0123000
      DATA CHR    /' '/                                                 M0123300
C                                                                       M0123400
C...      19.      INTERMEDIATE LANGUAGE TEXT                           M0123500
C                                                                       M0123600
      DATA COMFIN,LENGTH,TPNTRX/.FALSE.,0,0/                            M0124300
C                                                                       M0124400
C         22.      MACRO PROCESSING VARIABLES                           M0124500
C                                                                       M0124600
      DATA MACDFP ,MCNMB  ,MCHSTP ,MCTXTP ,MCSAVP ,MNMVBP ,MVSEG  ,     M0128900
     1     CALLPT ,TEXTST ,MVPNT  ,BRANCH ,MAXSPS ,INTMED ,MAJWRD ,     M0129000
     2     NMLINE ,WAY    ,BITWDS ,MCSLNT ,MACLNT ,MSP    ,MVEXST ,     M0129100
     3     MACTOP ,MCSTRT ,MAJOR  ,ROUTE  ,ROAD   ,SAVMSP ,TYP    ,     M0129200
     4     LNUSDP ,MCTOPP ,MCSPDP ,MCSRCH ,NUMARG ,WHCHMN ,LARGMV ,     M0129300
     5     VBLSVP ,PATHLN ,NEXTLN ,PATHCH ,NUMVAR,NUMCAL  /41*0/        M0129400
C                                                                       M0129500
      DATA MACLDD ,CALLON ,CALLMV ,ILHLT  ,MVMAC  ,MACRED ,MVTRUE ,     M0129600
     1     FINMAC ,ENTRY  ,NESTG  ,ENDMCH ,MACLK  ,MACEND ,SHOULD       M0129700
     2     /14*.FALSE./                                                 M0129800
C                                                                       M0129900
      DATA MBPTR  ,LSTWRT ,MCDFDM ,MHSTDM ,MCSVDM ,MNMVDM ,MSEQDM       M0130000
     1    /    2  ,     1 ,   400 ,  1800 ,    10 ,    25 ,    50/      M0130100
      DATA LNSDDM ,MVARDM ,MASDM  ,NUMBIT ,MACFND ,MSPDDM ,IVSVDM       M0130200
     1    /    50 ,    32 ,  100  ,    31 ,    -1 ,  1300 ,   900/      M0130300
C                                                                       M0130400
C         23.      MACRO PROCESSING ARRAYS                              M0130500
C                                                                       M0130600
      DATA  MACXX2/1,2,900*0/                                           M0131100
C                                                                       M0131200
C         24.      MACRO PROCESSING ARRAYS                              M0131300
C                                                                       M0131400
      DATA  MACXX3/2630*0/                                              M0132100
C                                                                       M0132200
C         25.      MACRO PROCESSING ARRAYS                              M0132300
C                                                                       M0132400
      DATA  MACXX4/100*0/                                               M0132900
C                                                                       M0133000
C         25A.     MACRO PROCESSING ARRAYS                              M0133100
C                                                                       M0133200
C                                                                       M0133500
C         26.      MACRO PROCESSING ARRAYS                              M0133600
C                                                                       M0133700
      DATA  MACXX6/1300*0/                                              M0134100
C                                                                       M0134200
C         26A.     MACRO PROCESSING ARRAYS                              M0134300
      DATA  MACXX7/182*0/                                               M0134900
C                                                                       M0135000
C...        27.    OPERAND MODIFIERS                                    M0135100
C                                                                       M0135200
      DATA NOUGHT/0/                                                    M0135900
      DATA DLR   /1/                                                    M0136000
      DATA DBLDLR/2/                                                    M0136100
      DATA TRPDLR/3/                                                    M0136200
      DATA QUADLR/4/                                                    M0136300
      DATA QUIDLR/5/                                                    M0136400
      DATA HEXDLR/6/                                                    M0136410
      DATA SPTDLR/7/                                                    M0136420
C                                                                       M0136500
C...        29.    CLASS CODE MODULI                                    M0136600
C                                                                       M0136700
      DATA MODULO /1000/                                                M0136900
      DATA MODHLF / 500/                                                M0137000
C                                                                       M0137100
C...        30.   NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCKM0137200
C                                                                       M0137300
      DATA  FIRST /6*0/                                                 M0137600
C....                                                                   M0137700
C           31.   COMMON BLOCK FOR PRO026 AND MOTION                    M0137800
C....                                                                   M0137900
      DATA JMPING,FMTERR,MCSJMP,FEDSAV/4*.FALSE./                       M0139200
      DATA NUMBCS/0/                                                    M0139300
C                                                                       M0139400
C           32.   COMMON BLOCK FOR SETBIT AND BITMCH                    M0139500
C                                                                       M0139600
      DATA LOBIT( 1),LOBIT( 2),LOBIT( 3),LOBIT( 4),                     M0140100
     1     LOBIT( 5),LOBIT( 6),LOBIT( 7),LOBIT( 8),                     M0140200
     2     LOBIT( 9),LOBIT(10),LOBIT(11),LOBIT(12),                     M0140300
     3     LOBIT(13),LOBIT(14),LOBIT(15),LOBIT(16)                      M0140400
C    4    /Z80000000,Z40000000,Z20000000,Z10000000,                     M0140500
     4  /-2147483648,1073741824,536870912,268435456,                    M0140510
C    5     Z 8000000,Z 4000000,Z 2000000,Z 1000000,                     M0140600
     5     134217728, 67108864, 33554432, 16777216,                     M0140610
C    6     Z  800000,Z  400000,Z  200000,Z  100000,                     M0140700
     6       8388608,  4194304,  2097152,  1048576,                     M0140710
C    7     Z   80000,Z   40000,Z   20000,Z   10000/                     M0140800
     7        524288,   262144,   131072,    65536/                     M0140810
      DATA HIBIT( 1),HIBIT( 2),HIBIT( 3),HIBIT( 4),                     M0140900
     1     HIBIT( 5),HIBIT( 6),HIBIT( 7),HIBIT( 8),                     M0141000
     2     HIBIT( 9),HIBIT(10),HIBIT(11),HIBIT(12),                     M0141100
     3     HIBIT(13),HIBIT(14),HIBIT(15),HIBIT(16)                      M0141200
C    4    /Z    8000,Z    4000,Z    2000,Z    1000,                     M0141300
     4    /    32768,    16384,     8192,     4096,                     M0141310
C    5     Z     800,Z     400,Z     200,Z     100,                     M0141400
     5          2048,     1024,      512,      256,                     M0141410
C    6     Z      80,Z      40,Z      20,Z      10,                     M0141500
     6           128,       64,       32,       16,                     M0141510
C    7     Z       8,Z       4,Z       2,Z       1/                     M0141600
     7             8,        4,        2,        1/                     M0141610
C...                                                                    M0141700
C ...       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE         M0141800
C                                                                       M0141900
C                                                                       M0142000
C                                                                       M0142600
C           36.    SYSTEM MACRO AND SEGMENT READ VARIABLES              M0142700
C                                                                       M0142800
      DATA ALOPN,LMRSTR,LMREND/3*.FALSE./                               M0143600
      DATA NMSEG,NMMAC,ITMPCT/3*0/                                      M0143700
C                                                                       M0143800
C...        37.    INCLUSIVE SUBSCRIPT VARIABLES                        M0143900
C                                                                       M0144000
      DATA ISSFL,ISSEND/2*.FALSE./                                      M0145000
C                                                                       M0145100
C...        39.    COMMON BLOCK LIBRARY PRINTING FLAG                   M0145200
C                                                                       M0145300
      DATA LIBPRT/.FALSE./                                              M0145400
C                                                                       M0145600
C...        41.    NUMBER TABLE OVERFLOW VARIABLES                      M0145700
C                                                                       M0145800
      DATA NCRNT,NLAST,NSTR,NMAX/1,0,1,100/                             M0146500
C                                                                       M0146600
C           42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE   M0146700
C                                                                       M0146800
      DATA CANPTR,CANCHK/0,16/                                          M0147400
C                                                                       M0147500
C           43.    COMMON BLOCK FOR LOOP                                M0147600
C                                                                       M0147700
      DATA DOFLAG,DLRFLG,IFFLAG/3*.FALSE./                              M0148700
      DATA JUMPTO,ABSDO,RELDO,DONEST,DOMAX,DOJUMP/0,0,0,10,13,0/        M0148800
C                                                                       M0148900
C           44.    COMMON BLOCK FOR ERROR POSITIONS                     M0149000
C                                                                       M0149100
      DATA NOWARN/.FALSE./                                              M0149900
C                                                                       M0150000
C           45.    NUMBER TABLE INDICIES                                M0150100
C                                                                       M0150200
      DATA NMBRS,LSTCHR,MASGND/0,13,2000/                               M0150300
C                                                                       M0150400
      END                                                               M0150500
**** MODULE = VAXBITCM ****
**** SOURCE FILE : M0006723.W02   ***
*
C                                                                       M0000100
C PURPOSE      TO INITIALIZE THE LABELLED COMMON AREAS                  M0000200
C              MODULI , BITCOM AND SYMFIL.                              M0000300
C                                                                       M0000400
      BLOCK DATA BDBITC                                                 M0000500
C                                                                       M0000600
      IMPLICIT INTEGER (A-Z)                                            M0000700
C                                                                       M0000800
C          5.      CLASS CODE MODULI                                    M0000900
C                                                                       M0001000
      COMMON/MODULI/MODULO                                              M0001100
C                                                                       M0001300
C          4.    BIT COMBINATION TABLE                                  M0001400
C                                                                       M0001500
      COMMON/BITCOM/BIT                                                 M0001600
      DIMENSION BIT(32)                                                 M0001700
      DIMENSION LOBIT(16),HIBIT(16)                                     M0001900
      EQUIVALENCE (LOBIT(1),BIT(1)),(HIBIT(1),BIT(17))                  M0002000
C                                                                       M0003700
C          6.    SYMBOLIC FILE DEFINITIONS                              M0003800
C                                                                       M0003900
      COMMON/SYMFIL/ BPFILE,NTFILE,GPFILE,ELFILE,LCDATA,VLFILE          M0004000
C                                                                       M0010000
C     DATA STATEMENTS                                                   M0010100
C                                                                       M0010200
C                                                                       M0010800
C          5.      CLASS CODE MODULI                                    M0010900
C                                                                       M0011000
      DATA MODULO/1000/                                                 M0011200
C                                                                       M0011300
C          4.    BIT COMBINATION TABLE                                  M0011400
C                                                                       M0011500
      DATA LOBIT( 1),LOBIT( 2),LOBIT( 3),LOBIT( 4),                     M0012100
     1     LOBIT( 5),LOBIT( 6),LOBIT( 7),LOBIT( 8),                     M0012200
     2     LOBIT( 9),LOBIT(10),LOBIT(11),LOBIT(12),                     M0012300
     3     LOBIT(13),LOBIT(14),LOBIT(15),LOBIT(16)                      M0012400
C    4    /Z80000000,Z40000000,Z20000000,Z10000000,                     M0012500
     4  /-2147483648,1073741824,536870912,268435456,                    M0012510
C    5     Z 8000000,Z 4000000,Z 2000000,Z 1000000,                     M0012600
     5     134217728, 67108864, 33554432, 16777216,                     M0012610
C    6     Z  800000,Z  400000,Z  200000,Z  100000,                     M0012700
     6       8388608,  4194304,  2097152,  1048576,                     M0012710
C    7     Z   80000,Z   40000,Z   20000,Z   10000/                     M0012800
     7        524288,   262144,   131072,    65536/                     M0012810
      DATA HIBIT( 1),HIBIT( 2),HIBIT( 3),HIBIT( 4),                     M0012900
     1     HIBIT( 5),HIBIT( 6),HIBIT( 7),HIBIT( 8),                     M0013000
     2     HIBIT( 9),HIBIT(10),HIBIT(11),HIBIT(12),                     M0013100
     3     HIBIT(13),HIBIT(14),HIBIT(15),HIBIT(16)                      M0013200
C    4    /Z    8000,Z    4000,Z    2000,Z    1000,                     M0013300
     4    /    32768,    16384,     8192,     4096,                     M0013310
C    5     Z     800,Z     400,Z     200,Z     100,                     M0013400
     5          2048,     1024,      512,      256,                     M0013410
C    6     Z      80,Z      40,Z      20,Z      10,                     M0013500
     6           128,       64,       32,       16,                     M0013510
C    7     Z       8,Z       4,Z       2,Z       1/                     M0013600
     7             8,        4,        2,        1/                     M0013610
C                                                                       M0013700
C          6.    SYMBOLIC FILE DEFINITIONS                              M0013800
C                                                                       M0013900
      DATA           BPFILE,NTFILE,GPFILE,ELFILE,LCDATA,VLFILE/         M0014100
     1                    1,     2,     3,     4,     5,     6/         M0014200
      END                                                               M0014300
**** MODULE = IBM ****
**** SOURCE FILE : ARTIME00.IBM;1   ***
*
*                                                                       00000100
*  * ARTIME *  FORTRAN 77 SUBROUTINE  9-DEC-1985  E.MCLELLAN            00000200
*                MODIFIED                 9-FEB-1988  E.MCLELLAN        00000250
*                                                                       00000300
*  PURPOSE:  EXTRACT CURRENT DATE AND TIME AND STORE IN ATIME BLOCK     00000400
*                                                                       00000500
*  CALLING SEQUENCE:                                                    00000600
*                   CALL ARTIME                                         00000700
*                                                                       00000800
*  ARGUMENTS:  NONE                                                     00000900
*                                                                       00001000
*  GLOBAL VARIABLES:                                                    00001100
*                                                                       00001200
*---------------------------------------------------                    00001300
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00001400
*---------------------------------------------------                    00001500
*   T               ATIME     DOUBLE     CURRENT TIME                   00001600
*                             PRECISION  CURRENT DATE                   00001700
*                                                                       00001800
*  LOCAL VARIABLES:  NONE                                               00001900
*                   TYPE       DESCRIPTION                              00002000
*   CTIME           CHARACTER  CURRENT TIME                             00002010
*   CDATE           CHARACTER  CURRENT DATE                             00002020
*                                                                       00002100
*  FILES:  NONE                                                         00002200
*                                                                       00002300
*  SUBSIDIARIES:                                                        00002400
*              DATE                                                     00002500
*              TIME                                                     00002600
*                                                                       00002700
      SUBROUTINE ARTIME                                                 00002800
C                                                                       00002900
      DOUBLE PRECISION T(4)                                             00002950
      COMMON/ATIME/T                                                    00003000
C                                                                       00003100
      CHARACTER CTIME*8,CDATE*8,DAOFWK*9                                00003200
C                                                                       00003300
      CALL TIME(CTIME)                                                  00003400
      CALL DATE(DAOFWK,CDATE)                                           00003500
C                                                                       00003600
      RETURN                                                            00003700
      END                                                               00003800
**** SOURCE FILE : CLOSPE00.IBM;1   ***
*
*                MODIFIED                23-FEB-1988  E.MCLELLAN        00000050
      SUBROUTINE CLOSPE(ID,IRET)                                        00000100
C                                                                       00000200
      INTEGER ID,IRET,JCODE,JRET                                        00000300
C                                                                       00000400
      JCODE=2                                                           00000410
      CALL UCLOSE(ID,JCODE,JRET)                                        00000500
      IF (JRET.EQ.0) THEN                                               00000510
       IRET=0                                                           00000600
      ELSE                                                              00000610
       IRET=1                                                           00000900
      ENDIF                                                             00000910
      RETURN                                                            00001000
      END                                                               00001100
**** SOURCE FILE : CPUTIM00.IBM;1   ***
*
C.... INTEGER FUNCTION CPUTIM                                           00000100
C     UTILIZING IBM FORTRAN UTILITY DATETM ( TXTLIB UTILITY )           00000200
C                                                                       00000300
      INTEGER FUNCTION CPUTIM()                                         00000400
      CHARACTER*23 DATTIM                                               00000500
      REAL ECPU,ETIME,ETCPU                                             00000600
C                                                                       00000700
      CALL DATETM(DATTIM,ECPU,ETIME,ETCPU)                              00000800
C                                                                       00000900
      CPUTIM=INT(ECPU*100.0)                                            00001000
      RETURN                                                            00001100
      END                                                               00001200
**** SOURCE FILE : FILOPN00.IBM;2   ***
*
*                                                                       00000100
*  * FILOPN *    VAX11 FORTRAN SUBROUTINE  10.5.82 E.MCLELLAN           00000200
*                MODIFIED                  18.07.85 E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     TO OPEN A FILE WITH REQUIRED ATTRIBUTES                  00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL FILOPN(NO)                                          00000800
*  ARGUMENTS                                                            00000900
*              NO    FILE NUMBER                                        00001000
*                                                                       00001100
*  GLOBAL VARIABLES:                                                    00001200
*                                                                       00001300
*---------------------------------------------------                    00001400
*   VARIABLE        BLOCK     TYPE       DESCRIPTION                    00001500
*---------------------------------------------------                    00001600
*   FILNAM          FILTAB    CHARACTER  FILE NAME                      00001700
*   FILACC          FILTAB    CHARACTER  FILE ACCESS                    00001800
*                                         (DIRECT OR SEQUENTIAL)        00001900
*   FILFMT          FILTAB    CHARACTER  FILE FORMAT                    00002000
*                                         (FORMATTED OR UNFORMATTED)    00002100
*   OPSTAT          FILTAB    CHARACTER  OPEN STATUS                    00002200
*                                         (UNKNOWN,SCRATCH,NEW,OLD)     00002300
*   CLSTAT          FILTAB    CHARACTER  CLOSE STATUS (KEEP,DELETE)     00002400
*   U               IFILTB    INTEGER    UNIT NUMBER                    00002500
*   RL              IFILTB    INTEGER    RECORD LENGTH                  00002600
*   NXTREC          IFILTB    INTEGER    NUMBER OF NEXT RECORD TO BE    00002700
*                                        READ OR WRITTEN (DIRECT ACCESS)00002800
*   LSTREC          IFILTB    INTEGER    NUMBER OF LAST RECORD ON FILE  00002900
*                                         (DIERECT ACCESS)              00003000
*                                                                       00003100
*  LOCAL VARIABLES:                                                     00003200
*                   TYPE       DESCRIPTION                              00003300
*        DARRAY     CHARACTER  PRINT BUFFER                             00003400
*        POSN       INTEGER    START POSITION IN PRINT BUFFER           00003500
*        SLEN       INTEGER    LENGTH OF STRING ENTERED IN BUFFER       00003600
*                                                                       00003700
*  FILES:  FILE REFERENCED BY FILE NUMBER                               00003800
*                                                                       00003900
*  SUBSIDIARIES:                                                        00004000
*               CFORM                                                   00004100
*               ICONV                                                   00004200
*               CPRINT                                                  00004300
*                                                                       00004400
      SUBROUTINE FILOPN(NO)                                             00004500
C                                                                       00004600
      INCLUDE (FILTAB)                                                  00004700
C                                                                       00004800
      INTEGER POSN,SLEN                                                 00004900
      CHARACTER*80 DARRAY                                               00005000
      DATA DARRAY/' '/                                                  00005100
C                                                                       00005200
C.... FOR IBM VM/CMS UNFORMATTED D.A. FILES RECORD LENGTH = NO 0F BYTES 00005202
      IF (FILFMT(NO).EQ.'UNFORMATTED') THEN                             00005204
        IRL=RL(NO)*4                                                    00005206
      ELSE                                                              00005208
        IRL=RL(NO)                                                      00005210
      ENDIF                                                             00005212
      IF (OPSTAT(NO).EQ.'SCRATCH') THEN                                 00005214
      IF (FILACC(NO).EQ.'DIRECT') THEN                                  00005216
        OPEN (UNIT=U(NO),IOSTAT=IRET,ERR=90,                            00005218
     +        STATUS=OPSTAT(NO),ACCESS=FILACC(NO),                      00005220
     +        FORM=FILFMT(NO),RECL=IRL)                                 00005222
      ELSE                                                              00005224
        OPEN (UNIT=U(NO),IOSTAT=IRET,ERR=90,                            00005226
     +        STATUS=OPSTAT(NO),ACCESS=FILACC(NO),                      00005228
     +        FORM=FILFMT(NO))                                          00005230
      ENDIF                                                             00005232
      ELSE                                                              00005234
      IF (FILACC(NO).EQ.'DIRECT') THEN                                  00005236
        OPEN (UNIT=U(NO),FILE=FILNAM(NO),IOSTAT=IRET,ERR=90,            00005300
     1      STATUS=OPSTAT(NO),ACCESS=FILACC(NO),                        00005400
     2      FORM=FILFMT(NO),RECL=IRL)                                   00005500
      ELSE                                                              00005510
        OPEN (UNIT=U(NO),FILE=FILNAM(NO),IOSTAT=IRET,ERR=90,            00005520
     1      STATUS=OPSTAT(NO),ACCESS=FILACC(NO),                        00005530
     2      FORM=FILFMT(NO))                                            00005540
      ENDIF                                                             00005550
      ENDIF                                                             00005560
      RETURN                                                            00005700
C                                                                       00005800
   90 SLEN=0                                                            00005900
      CALL CFORM (' **** ERROR OPENING FILE :',DARRAY,2,SLEN)           00006000
      POSN=SLEN+3                                                       00006100
      SLEN=0                                                            00006200
      CALL CFORM (FILNAM(NO),DARRAY,POSN,SLEN)                          00006300
      POSN=POSN+SLEN+1                                                  00006400
      SLEN=0                                                            00006500
      CALL CFORM ('; UNIT NO :',DARRAY,POSN,SLEN)                       00006600
      POSN=POSN+SLEN+1                                                  00006700
      CALL ICONV (U(NO),DARRAY,POSN,2)                                  00006800
      POSN=POSN+4                                                       00006900
      SLEN=0                                                            00007000
      CALL CFORM ('****',DARRAY,POSN,SLEN)                              00007100
      CALL CPRINT (DARRAY)                                              00007200
      CALL ABNEND                                                       00007300
      RETURN                                                            00007400
      END                                                               00007500
**** SOURCE FILE : FINDME00.IBM;1   ***
*
      SUBROUTINE FINDME(ID,MEMBER,IRET)                                 00000100
C                                                                       00000200
      INTEGER ID,IRET                                                   00000300
      CHARACTER*(*) MEMBER                                              00000400
C                                                                       00000500
      LOGICAL EX                                                        00000600
C                                                                       00000700
      CHARACTER FLNAME*20,TYPE*4,MODE*2                                 00000800
      INTEGER NLEN,JRET                                                 00000910
C                                                                       00001000
      DATA TYPE/' LDA'/,MODE/' A'/                                      00001110
C                                                                       00001200
C.... SET UP FILENAME                                                   00001300
C                                                                       00001400
      NLEN=LEN(MEMBER)                                                  00001410
      K=INDEX(MEMBER,' ')                                               00001420
      IF (K.NE.0) NLEN=K-1                                              00001430
      FLNAME=MEMBER(:NLEN)//TYPE//MODE                                  00001500
      NLEN=NLEN+6                                                       00001510
C                                                                       00002700
C.... INQUIRE IF FILE EXISTS                                            00002800
C                                                                       00002900
      CALL UOPEN(ID,FLNAME(:NLEN),1,4,80,0,'U',0,JRET)                  00003000
      IF (JRET.EQ.0) THEN                                               00003100
C.... FILE EXISTS - OPEN ATTACHED TO ID                                 00003200
        CALL UOPEN(ID,FLNAME(:NLEN),1,1,80,0,'U',0,JRET)                00003300
        IF (JRET.NE.0) GOTO 20                                          00003420
        IRET=0                                                          00003500
      ELSE                                                              00003600
        IRET=6                                                          00003700
      ENDIF                                                             00003800
      RETURN                                                            00003900
C.... ERROR OPENING FILE                                                00004000
  20  IRET=5                                                            00004100
      RETURN                                                            00004200
      END                                                               00004300
**** SOURCE FILE : LIBOPC00.IBM;2   ***
*
      SUBROUTINE LIBOPC(IND,FLAG)                                       00000100
*                                                                       00000200
*  * LIBOPC *  VAX-11 FORTRAN VERSION  27.09.82  E.MCLELLAN             00000300
*                            MODIFIED  26.09.86                         00000400
*                MODIFIED                25-FEB-1988  E.MCLELLAN        00000410
*                                                                       00000500
*  PURPOSE     TO CHECK THE EXISTENCE OF SUBDIRECTORY [.APTLIB]         00000600
*              OR CLOSE UNIT REFERENCING SUBDIRECTORY                   00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL LIBOPC(IND,FLAG)                                    00000900
*  ARGUMENTS                                                            00001000
*              IND   =1 DOES SUBDIRECTORY EXIST                         00001100
*                    =2 CLOSE UNIT WHICH REFERENCES SUBDIRECTORY        00001200
*              FLAG  =0 SUBDIRECTORY EXISTS                             00001300
*                    =1 SUBDIRECTORY DOES NOT EXIST                     00001400
*                    =2 NOT USED                                        00001500
*                    =3 ALREADY CLOSED (IND=2)                          00001600
*                    =4 IND IS NOT 1 OR 2                               00001700
*                                                                       00001800
      INTEGER FLAG                                                      00001900
      LOGICAL OD,EX                                                     00002000
C                                                                       00002100
      INCLUDE (FILTAB)                                                  00002200
C                                                                       00002300
C                                                                       00002500
C                                                                       00002600
C.....UNIT NUMBER                                                       00002700
C                                                                       00002800
      ID=U(24)                                                          00002900
C                                                                       00003000
      IF (IND.EQ.1) THEN                                                00003100
        FLAG=0                                                          00003150
C                                                                       00003200
      ELSE IF (IND.EQ.2) THEN                                           00004900
        CALL UCLOSE(ID,2,JRET)                                          00005710
        IF (JRET.EQ.4) THEN                                             00005720
          FLAG=3                                                        00005730
        ELSE                                                            00005740
          FLAG=0                                                        00005750
        ENDIF                                                           00005760
C                                                                       00005800
      ELSE                                                              00006500
C                                                                       00006600
C.....IND NOT 1 OR 2                                                    00006700
        FLAG=4                                                          00006800
      END IF                                                            00006900
      RETURN                                                            00007000
      END                                                               00007100
**** SOURCE FILE : LIBRD000.IBM;1   ***
*
      SUBROUTINE LIBRD(MEMBER,FLAG,ARRAY)                               00000100
*                                                                       00000200
*  * LIBRD *  VAX-11 FORTRAN 77 VERSION  28.09.82  E.MCLELLAN           00000300
*                              MODIFIED  26.09.86                       00000400
*                MODIFIED                25-FEB-1988  E.MCLELLAN        00000450
*                                                                       00000500
*  PURPOSE    TO READ A RECORD (80 CHARACTERS) FROM THE GIVEN           00000600
*             MEMBER FILE OF [.APTLIB]                                  00000700
*  CALLING SEQUENCE                                                     00000800
*             CALL LIBRD(MEMBER,FLAG,ARRAY)                             00000900
*  ARGUMENTS                                                            00001000
*             MEMBER    CHARACTER STRING CONTAINING THE                 00001100
*                       MEMBER NAME (BCD LEFT JUSTIFIED)                00001200
*             FLAG      INTEGER SET BY LIBRD                            00001300
*                       0 = SUCCESSFUL READ                             00001400
*                       1 = END OF DATA ENCOUNTERED (EOF)               00001500
*                       2 = I/O ERROR                                   00001600
*                       3 = NOT USED                                    00001700
*                       4 = A DIFFERENT MEMBER NAME APPEARED WITHOUT    00001800
*                           CALLING LIBSCH OR BEFORE END OF DATA        00001900
*                           ENCOUNTERED                                 00002000
*             ARRAY     CHARACTER STRING TO CONTAIN A RETRIEVED RECORD  00002100
*                                                                       00002200
      CHARACTER MEMBER*(*),ARRAY*80,TEST*8                              00002300
      INTEGER FLAG                                                      00002400
C                                                                       00002500
      INCLUDE (FILTAB)                                                  00002600
C                                                                       00002700
      CHARACTER*8 MEMNAM                                                00002800
      COMMON/CLIBCM/MEMNAM                                              00002900
      COMMON/LIBCOM/IEOF                                                00003000
C                                                                       00003100
      TEST=MEMBER//' '                                                  00003150
C                                                                       00003200
C.....IS MEMBER NAME SAME AS IN LAST CALL TO LIBSCH                     00003300
C                                                                       00003400
      IF (TEST.NE.MEMNAM) THEN                                          00003500
         FLAG=4                                                         00003600
         RETURN                                                         00003700
      ELSE                                                              00003800
C.....YES - READ A RECORD FROM MEMBER FILE                              00003900
         ID=U(24)                                                       00004000
         READ (UNIT=ID,FMT='(A80)',ERR=80,END=90) ARRAY                 00004100
         FLAG=0                                                         00004200
         RETURN                                                         00004300
C                                                                       00004400
C.....I/O ERROR                                                         00004500
   80    FLAG=2                                                         00004600
         CALL UCLOSE(ID,2,JRET)                                         00004700
         RETURN                                                         00004800
C                                                                       00004900
C.....EOF ENCOUNTERED                                                   00005000
   90    FLAG=1                                                         00005100
         IEOF=1                                                         00005200
         CALL UCLOSE(ID,2,JRET)                                         00005300
         RETURN                                                         00005400
      END IF                                                            00005500
      END                                                               00005600
**** SOURCE FILE : LIBSCH00.IBM;2   ***
*
      SUBROUTINE LIBSCH(MEMBER,FLAG)                                    00000100
*                                                                       00000200
*  * LIBSCH *  VAX-11 FORTRAN 77 VERSION  27.09.82  E.MCLELLAN          00000300
*                               MODIFIED  30.10.86  E.MCLELLAN          00000400
*                MODIFIED                25-FEB-1988  E.MCLELLAN        00000450
*                                                                       00000500
*  PURPOSE     TO SEARCH SUBDIRECTORY [.APTLIB] FOR A GIVEN             00000600
*              MEMBER FILE AND TO OPEN SAID FILE                        00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL LIBSCH(MEMBER,FLAG)                                 00000900
*  ARGUMENTS                                                            00001000
*              MEMBER    CHARACTER STRING CONTAINING THE                00001100
*                        MEMBER NAME (BCD LEFT JUSTIFIED)               00001200
*              FLAG      0 = MEMBER FOUND                               00001300
*                        1 = MEMBER NOT FOUND IN SUBDIRECTORY           00001400
*                        2 = ERROR OPENING FILE                         00001500
*                        3 = SUBDIRECTORY [.APTLIB] DOES NOT EXIST      00001600
*                        4 = LIBSCH IS CALLED BEFORE COMPLETING THE     00001700
*                            PROCESSING OF PREVIOUS MEMBER              00001800
*                                                                       00001900
      CHARACTER*(*) MEMBER                                              00002000
      INTEGER FLAG                                                      00002100
C                                                                       00002200
      INCLUDE (FILTAB)                                                  00002300
C                                                                       00002400
      CHARACTER*8 MEMNAM                                                00002500
      COMMON/CLIBCM/MEMNAM                                              00002600
      COMMON/LIBCOM/IEOF                                                00002700
C                                                                       00002800
      CHARACTER FLNAME*20,TYPE*4,MODE*2                                 00002900
      INTEGER NLEN,JRET                                                 00002910
      LOGICAL OD,EX                                                     00003100
C                                                                       00003110
      DATA TYPE/' TXT'/,MODE/' A'/                                      00003120
C                                                                       00003200
C                                                                       00003300
      ID=U(24)                                                          00003500
C                                                                       00003900
C.....HAS PROCESSING OF PREVIOUS MEMBER BEEN COMPLETED                  00004000
         IF (IEOF.EQ.0) THEN                                            00004100
C.....NO                                                                00004200
             FLAG=4                                                     00004300
             RETURN                                                     00004400
C.....YES - SET UP FILE NAME FOR MEMBER                                 00004500
         ELSE                                                           00004600
            NLEN=LEN(MEMBER)                                            00004610
            K=INDEX(MEMBER,' ')                                         00004620
            IF (K.NE.0) NLEN=K-1                                        00004630
            FLNAME=MEMBER(:NLEN)//TYPE//MODE                            00004900
            NLEN=NLEN+6                                                 00004910
C                                                                       00005400
C.....STORE MEMBER NAME AND RESET EOF FLAG                              00005500
            MEMNAM=MEMBER                                               00005600
            IEOF=0                                                      00005700
C.....DOES FILE EXIST                                                   00005800
            CALL UOPEN(ID,FLNAME(:NLEN),1,4,80,0,'FB',0,JRET)           00005900
               IF (JRET.EQ.0) THEN                                      00006000
C.....YES                                                               00006100
                 CALL UOPEN(ID,FLNAME(:NLEN),1,1,80,0,'FB',0,JRET)      00006200
                 IF (JRET.EQ.0) THEN                                    00006210
                   FLAG=0                                               00006400
                 ELSE                                                   00006500
                   FLAG=2                                               00006600
                 ENDIF                                                  00006700
               ELSE                                                     00006800
C.....NO                                                                00006900
                 FLAG=1                                                 00007000
               END IF                                                   00007200
C                                                                       00007300
        END IF                                                          00007400
      RETURN                                                            00008000
      END                                                               00008100
**** SOURCE FILE : M0002726.IBM;1   ***
*
C                                                                       A2010001
C.....FORTRAN INTEGER FUNCTION  ...APT201                               A2010002
C                                                                       A2010003
C.....NEW SUBROUTINE FOR VAX 11 IMPLEMENTATION   02.06.82   E.MCLELLAN  A2010004
C                                                                       A2010005
C.....MODIFICATION TO PERMIT RESTART PROCEDURE USING                    A2010006
C     VAX CONDITION HANDLING FACILITIES                                 A2010007
C                                                                       A2010008
C                                                                       A2010010
      INTEGER FUNCTION APT201(ADRESS,HDRECT)                            A2010020
C                                                                       A2010024
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2010030
      DIMENSION ADRESS(*)                                               A2010060
      INTEGER APT211                                                    A2010062
C                                                                       A2010068
C                                                                       A2010070
      IAEEE=0                                                           A2010071
C...ESTABLISH CONDITION HANDLER FOR AERR ERROR                          A2010072
    1 CALL APT241                                                       A2010073
      APT201 = APT211(ADRESS,HDRECT,IAEEE)                              A2010074
      IF (IAEEE.EQ.1) GO TO 1                                           A2010075
      RETURN                                                            A2010078
      END                                                               A2010079
C                                                                       A2010080
C                                                                       A2010086
C                                                                       A2010087
C                                                                       A2010088
C.....FORTRAN INTEGER FUNCTION  ...APT211    8/68              HG,DE,PH A2010089
C                                                                       A2010090
C.....MODIFIED FOR VAX 11 IMPLEMENTATION   02.06.82   E.MCLELLAN        A2010091
C                                                                       A2010092
C.....MODIFICATION TO PERMIT RESTART PROCEDURE USING                    A2010093
C     VAX CONDITION HANDLING FACILITIES                                 A2010094
C                                                                       A2010095
C                                                                       A2010100
      INTEGER FUNCTION APT211(ADRESS,HDRECT,IAEEE)                      A2010103
C                                                                       A2010104
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A2010105
      DIMENSION ADRESS(*)                                               A2010106
C                                                                       A2010107
      INCLUDE (TOTAL)                                                   A2010211
      INCLUDE (DSHAR4)                                                  A2010409
      INCLUDE (FXCOR)                                                   A2010713
      INCLUDE (HOLRTH)                                                  A2010777
      INCLUDE (SV)                                                      A2011081
      INCLUDE (ZNUMBR)                                                  A2011177
      INCLUDE (LDEF)                                                    A2011217
      INCLUDE (ISV)                                                     A2011369
      INCLUDE (IFXCOR)                                                  A2011529
      INCLUDE (KNUMBR)                                                  A2011785
C                                                                       A2011860
C...            SYSTEM I/O FILE NAMES                                   A2011870
C                                                                       A2011880
      INCLUDE (SYMFIL)                                                  A2011895
C                                                                       A2011928
      CHARACTER*8 TEST,HNOCS                                            A2011929
      INTEGER BCDF,TDS(2)                                               A2011931
      LOGICAL FIRST                                                     A2011932
      SAVE FIRST,HOLDPP,TDS                                             A2011933
      CHARACTER*8 HOLRTH(6)                                             A2011934
      EQUIVALENCE (HOLRTH(1),HLFT)                                      A2011935
C                                                                       A2011936
      INTEGER Z4E                                                       A2011938
      PARAMETER (Z4E=1308622848)                                        A2011939
      INTEGER HOLDPP                                                    A2011940
      DIMENSION HOLDPP(8)                                               A2011950
C                                                                       A2011970
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            A2011975
      COMMON /HSAVE/ SAVEH(50)                                          A2011976
      COMMON/SQNC/ LSEQNO                                               A2011977
C                                                                       A2011980
C                                                                       A2011990
C                                                                       A2012000
      LOGICAL KCS                                                       A2012010
C                                                                       A2012022
      INCLUDE (BLANKCOM)                                                A2012024
C                                                                       A2012026
      DIMENSION MODTYP(3,6)                                             A2012040
      DIMENSION CSSAVE(10)                                              A2012050
C                                                                       A2012052
      DATA HOLDPP/0,0,Z4E,1,Z4E,1,Z4E,1/                                A2012054
      DATA HNOCS/'NOCS    '/                                            A2012056
      DATA MODTYP/1,2,3,2,1,3,6*4,1,2,3,2,1,3/                          A2012060
      DATA ZLIT2/.0349D0/                                               A2012070
      DATA FIRST/.TRUE./                                                A2012071
C                                                                       A2012072
      IF (FIRST)THEN                                                    A2012073
        HOLDPP(1) = BCDF('HOLD')                                        A2012074
        HOLDPP(2) = BCDF('PP  ')                                        A2012075
        TDS(1) = BCDF(HDS(1:4))                                         A2012076
        TDS(2) = BCDF(HDS(5:8))                                         A2012077
        FIRST=.FALSE.                                                   A2012078
      ENDIF                                                             A2012079
C                                                                       A2012081
      CALL HOLFRM(HDRECT,TEST,1,8,NWD)                                  A2012082
      IF (IAEEE .EQ. 1) GO TO 8010                                      A2012105
      IF(IAERR.EQ.1) GO TO 1000                                         A2012110
      IF(TEST.EQ.HNOCS) GO TO 8000                                      A2012115
      IF(IGOTO+ICTDEF)1,1,3000                                          A2012120
    1 DO 4001 I=1,6                                                     A2012130
      IF(TEST.EQ.HOLRTH(I)) GO TO 4002                                  A2012140
 4001 CONTINUE                                                          A2012150
      CALL AERR(20104,'APT211  ')                                       A2012160
      GO TO 1000                                                        A2012170
 4002 ISAV=I                                                            A2012180
      IF(.NOT.JDS)GO TO 4000                                            A2012190
      KSEQNO = LSEQNO                                                   A2012192
      LSEQNO = JSEQNO                                                   A2012194
      KCSCNT=ICSCNT                                                     A2012200
      KCS=JCS                                                           A2012210
      LSAV=ISFTYP(IDS)                                                  A2012220
      ISFTYP(IDS)=MSAV                                                  A2012230
      ICSCNT=0                                                          A2012240
      KIPL=IPL(ICS)                                                     A2012270
      KLMFL=LIMFL(ICS)                                                  A2012280
      KUNFL=IUNFL(ICS)                                                  A2012290
      KFIDN=ISFIDN(ICS)                                                 A2012300
      KSTYP=ISFTYP(ICS)                                                 A2012310
      KTLON=ITLON(ICS)                                                  A2012320
      SPAST=PAST(ICS)                                                   A2012330
      KCAN=ICANON(ICS)                                                  A2012340
      KFL4=IFL4(ICS)                                                    A2012350
      KFAR=IFAR(ICS)                                                    A2012360
      DO 1530 IIT = 1,10                                                A2012370
 1530 CSSAVE(IIT) = CANON(IIT+20)                                       A2012380
      CALL APT200(TDS,ADRESS,Z1)                                        A2012390
      IF(IAERR.NE.0)GO TO 1000                                          A2012395
      IF(MOTMOD.EQ.0)GO TO 4004                                         A2012400
      ISFTYP(ICS)=MODTYP(MOTMOD,ISAV)                                   A2012410
      IF(ISFTYP(ICS).EQ.2) PAST(ICS)=-K1                                A2012415
      IS=IDS                                                            A2012420
      GO TO 9200                                                        A2012430
 4000 MODFER=TEST                                                       A2012440
      IGO=ISAV                                                          A2012450
      MSAV=ISFTYP(IDS)                                                  A2012460
      IS=IDS                                                            A2012470
      CALL APT234(TDS,ADRESS)                                           A2012480
      IF(IAERR.NE.0)GO TO 1000                                          A2012490
      IF(JCS)GO TO 9200                                                 A2012500
      JSEQNO = LSEQNO                                                   A2012505
      JDS=.TRUE.                                                        A2012510
C     INTEG.ON EXFILE DP. 1ST WD UNNORM POWER,2ND INTEG VALUE           A2012520
      NR=0                                                              A2012525
      CALL EWRITE(EXFILE,NR,HOLDPP,8,IR)                                A2012530
      JHLDFG=1                                                          A2012531
      GO TO 9999                                                        A2012540
 4004 CALL AERR(20109,'APT211  ')                                       A2012550
      GO TO 1000                                                        A2012560
 9200 CALL APT235                                                       A2012570
      IF(IAERR)6000,6000,1000                                           A2012580
 6000 CALL APT240 (NUMDIM)                                              A2012590
   14 ICL = K2                                                          A2012600
      NW = 0                                                            A2012610
   19 IF (CUTDAT(6).EQ.0.)GO TO 32                                      A2012620
      NUMDIM = K1                                                       A2012630
      GO TO 32                                                          A2012640
   72 CALL APT236                                                       A2012650
      IF(IAERR.NE.0)GO TO 4006                                          A2012660
      IF(JDS)GO TO 4005                                                 A2012670
 4006 CONTINUE                                                          A2012680
      JHLDFG=0                                                          A2012682
      ITHCNT=1                                                          A2012684
      JCS=.FALSE.                                                       A2012690
      JDS=.FALSE.                                                       A2012700
      GO TO 9999                                                        A2012710
 4005 JCS=KCS                                                           A2012720
      JHLDFG=0                                                          A2012721
      GO TO 9500                                                        A2012722
 9600 CONTINUE                                                          A2012723
      NR=0                                                              A2012724
      HOLDPP(8)=K2                                                      A2012726
      CALL EWRITE(EXFILE,NR,HOLDPP,8,IR)                                A2012727
      HOLDPP(8)=K1                                                      A2012728
      ISFTYP(IDS)=LSAV                                                  A2012730
      LSEQNO = KSEQNO                                                   A2012735
      IF(.NOT.JCS)GO TO 4000                                            A2012740
      IPL(ICS)=KIPL                                                     A2012750
      LIMFL(ICS)=KLMFL                                                  A2012760
      ISFIDN(ICS)=KFIDN                                                 A2012770
      ISFTYP(ICS)=KSTYP                                                 A2012780
      ITLON(ICS)=KTLON                                                  A2012790
      PAST(ICS)=SPAST                                                   A2012800
      ICANON(ICS)=KCAN                                                  A2012810
      IFL4(ICS)=KFL4                                                    A2012820
      IFAR(ICS)=KFAR                                                    A2012830
      ICSCNT=KCSCNT                                                     A2012840
      JDS=.FALSE.                                                       A2012850
      DO 1531 IIT = 1,10                                                A2012860
 1531 CANON(IIT+20) = CSSAVE(IIT)                                       A2012870
      GO TO 4000                                                        A2012880
   32 J6 = 0                                                            A2012890
      IS=IPS                                                            A2012900
C  INITIALIZE VARIABLES FOR AMIND                                       A2012910
   33 IF (JENT(IS)) 301,302,301                                         A2012920
  301 JTN(IS) = K0                                                      A2012930
      IOPSET(IS)=0                                                      A2012940
      JU1(IS)=0                                                         A2012950
      JIOPS(IS)=0                                                       A2012960
  302 JAP = K1                                                          A2012970
  201 CALL AMIND                                                        A2012980
      IF(IAERR)1000,2000,1000                                           A2012990
 2000 IF(IPL(IS))141,140,141                                            A2013000
  141 IF(S(IS))142,39,143                                               A2013010
  142 IF (S(IS)-TAU2(IS)+1.D-4) 36,39,39                                A2013020
  143 IF (S(IS)-TAU1(IS)-1.D-4) 39,39,36                                A2013030
  140 IF(RC(IS)*S(IS))34,39,35                                          A2013040
   34 IF(DABS(S(IS))-Z9EM1*TAU(IS)-1.D-4) 39,39,36                      A2013050
   35 IF(DABS(S(IS))-EPS1(IS)-1.D-4) 39,39,36                           A2013060
   36 GO TO(505,508,504,204),JAP                                        A2013070
  505 IF (IPL(IS)) 506,202,506                                          A2013080
  202 IF (ISFTYP(IS)-K3) 504,507,504                                    A2013090
  504 RC(IS)=-RC(IS)                                                    A2013100
      JAP = JAP + K1                                                    A2013110
      GO TO 201                                                         A2013120
  506 IF (TH(IS)) 510,510,204                                           A2013130
  507 JAP = K4                                                          A2013140
  203 Z(IS)=-Z(IS)                                                      A2013150
      GO TO 201                                                         A2013160
  510 IF (IAFL(IS)) 507,511,507                                         A2013170
  511 JENT(IS)= -K1                                                     A2013180
      JAP = K4                                                          A2013190
      GO TO 201                                                         A2013200
  508 IF (TH(IS)) 509,204,204                                           A2013210
  509 JAP = JAP + K1                                                    A2013220
      GO TO 203                                                         A2013230
  204 IF(J6)38,37,38                                                    A2013240
C  CUTTER NOT WITHIN TOLERANCE OF DRIVE SURFACE AT START OF CUT SEQUENCEA2013250
   38 CALL AERR (20102,'APT211  ')                                      A2013260
      GO TO 1000                                                        A2013270
C  CUTTER NOT WITHIN TOLERANCE OF PART SURFACE AT START OF CUT SEQUENCE A2013280
   37 CALL AERR (20103,'APT211  ')                                      A2013290
      GO TO 1000                                                        A2013300
   40 J6=K1                                                             A2013310
      IS=IDS                                                            A2013320
      GO TO 33                                                          A2013330
   39 IF (JAP-K1) 480,481,480                                           A2013340
  480 TPK(1,IS)=TP(1,IS)                                                A2013350
      TPK(2,IS)=TP(2,IS)                                                A2013360
      TPK(3,IS)=TP(3,IS)                                                A2013370
      SNK(1,IS)=SN(1,IS)                                                A2013380
      SNK(2,IS)=SN(2,IS)                                                A2013390
      SNK(3,IS)=SN(3,IS)                                                A2013400
      SK(1,IS) = S(IS)                                                  A2013410
  481 IF(J6)41,40,41                                                    A2013420
C  DETERMINE GENERAL DIRECTION OF FIRST CUT VECTOR AND STORE IN FWD     A2013430
   41 DO 42 K=1,3                                                       A2013440
   42 FWD(K)=TE(K)-TEK(K)                                               A2013450
 2001 CALL VNORM(FWD,FWD)                                               A2013460
C  IGO =1 IF LFT, =2 IF RGT, =3 IF FWD, =4 IF BACK, =5 IF UP, =6 IF DOWNA2013470
C  RELATIVE TO LAST COMMAND                                             A2013480
      IF(K4-IGO)43,45,45                                                A2013490
   43 DO 44 K=1,3                                                       A2013500
   44 FWD(K)=TA(K)                                                      A2013510
      GO TO 50                                                          A2013520
   45 CALL CROSS(FWD,TA,FWD)                                            A2013530
      CALL VNORM(FWD,FWD)                                               A2013540
      IF (VTEM.GT.Z1EM6)GO TO 48                                        A2013550
   46 CALL CROSS(PMOVE,TA,FWD)                                          A2013560
      CALL VNORM(FWD,FWD)                                               A2013570
      IF(IER)47,48,47                                                   A2013580
C  FWD DIRECTION CANNOT BE DETERMINED                                   A2013590
   47 CALL AERR (20105,'APT211  ')                                      A2013600
      GO TO 1000                                                        A2013610
   48 IF(K3-IGO)49,49,50                                                A2013620
   49 CALL CROSS(TA,FWD,FWD)                                            A2013630
      CALL VNORM(FWD,FWD)                                               A2013640
      IF(IER)147,50,147                                                 A2013650
  147 GO TO 47                                                          A2013660
   50 GO TO (52,54,54,52,54,52),IGO                                     A2013670
   52 DO 53 K=1,3                                                       A2013680
   53 FWD(K)=-FWD(K)                                                    A2013690
C  CALCULATE TI VECTOR PERPENDICULAR TO BOTH PART AND DRIVE SURFACE     A2013700
C  NORMALS                                                              A2013710
   54 CALL CROSS(SN(1,IPS),SN(1,IDS),TI)                                A2013720
      CALL VNORM(TI,TI)                                                 A2013730
      IF(IER)58,60,58                                                   A2013740
   58 DO 59 K=1,3                                                       A2013750
   59 TI(K)=FWD(K)                                                      A2013760
      GO TO 67                                                          A2013770
C  TI VECTOR AND FWD VECTOR SHOULD NOT BE ORTHOGONAL. IF SO CALL AERR   A2013780
   60 TEM(1)= TI(1)*FWD(1) +TI(2)*FWD(2)+TI(3)*FWD(3)                   A2013790
      IF(DABS(TEM(1)) - ZLIT2) 64,64,63                                 A2013800
   64 CALL AERR (20106,'APT211  ')                                      A2013810
      GO TO 1000                                                        A2013820
   63 IF(TEM(1)) 65,65,67                                               A2013830
   65 DO 66 K=1,3                                                       A2013840
   66 TI(K)=-TI(K)                                                      A2013850
   67 IF(NUMDIM)68,68,73                                                A2013860
C  ICSCNT = NUMBER OF CHECK SURFACES. IF MORE THAN ONE CHECK SURFACE 3D A2013870
C  ROUTES USED                                                          A2013880
 68   CONTINUE                                                          A2013890
  168 IF(I3DFLG-K1)130,73,130                                           A2013900
  130 IF(ICSCNT-K2)69,73,73                                             A2013910
C  IF THICKNESS OF PART, DRIVE, AND CHECK SURFACE NOT ZERO 3D ROUTES    A2013920
C  FOLLOWED                                                             A2013930
   69 IF(TH(IPS))173,70,173                                             A2013940
  173 GO TO 73                                                          A2013950
   70 IF(TH(IDS))174,71,174                                             A2013960
  174 GO TO 73                                                          A2013970
   71 IF(TH(ICS))73,76,73                                               A2013980
   73 CONTINUE                                                          A2013990
C  ENTRY FOR 3D CALCULATIONS                                            A2014000
  732 CALL ARLM3                                                        A2014010
      APT211=TEMP(1)+0.5                                                A2014020
  101 IF(IAERR)1000,72,1000                                             A2014030
   76 IS=ICS                                                            A2014040
      IF(ISFIDN(IDS)-K3)80,86,86                                        A2014050
   80 IF(ISFIDN(ICS)-K3)82,81,81                                        A2014060
C  LINE TO LINE CASE                                                    A2014070
   82 JBR=K3                                                            A2014080
      GO TO 83                                                          A2014090
C  CIRCLE TO LINE OR CIRCLE TO CIRCLE CASE                              A2014100
   86 JBR=K1                                                            A2014110
C  ENTRY FOR 2D CALCULATIONS                                            A2014120
   83 CALL ARLM2                                                        A2014130
      APT211=Z1                                                         A2014140
      GO TO 101                                                         A2014150
C  LINE TO CIRCLE CASE                                                  A2014160
   81 JBR=K2                                                            A2014170
      GOTO83                                                            A2014180
 6001 IF(IGOTO)3001,3001,3002                                           A2014190
 3001 CALL AERR (20107,'APT211  ')                                      A2014200
      GO TO 1000                                                        A2014210
 3002 CALL AERR (20108,'APT211  ')                                      A2014220
 1000 CONTINUE                                                          A2014230
 6002 APT211=Z1                                                         A2014240
      GO TO 72                                                          A2014250
 3000 IF(ISRCH)6001,6001,6002                                           A2014260
 9999 CONTINUE                                                          A2014270
      RETURN                                                            A2014280
 9500 JJ=0                                                              A2014290
 9510 JJ=JJ+1                                                           A2014300
      IF(JJ.EQ.ITHCNT) GO TO 9590                                       A2014310
      KK=ITABH(JJ)                                                      A2014320
      GO TO (9510,9510,9510,9504,9505,9506,9507,9508,9509,              A2014330
     C 9550,9511,9512,9513),KK                                          A2014340
 9504 CALL TOLERH                                                       A2014410
      GO TO 9510                                                        A2014420
 9505 CALL CUTTEH                                                       A2014430
      GO TO 9510                                                        A2014440
 9506 CALL CUTH                                                         A2014450
      GO TO 9510                                                        A2014460
 9507 CALL DNTCUH                                                       A2014470
      GO TO 9510                                                        A2014480
 9508 CALL INTOLH                                                       A2014490
      GO TO 9510                                                        A2014500
 9509 CALL OUTTOH                                                       A2014510
      GO TO 9510                                                        A2014520
 9550 CALL MAXDPH                                                       A2014530
      GO TO 9510                                                        A2014540
 9511 CALL INDRVH                                                       A2014550
      GO TO 9510                                                        A2014560
 9512 CALL INDRPH                                                       A2014570
      GO TO 9510                                                        A2014580
 9513 CALL THICKH                                                       A2014590
      GO TO 9510                                                        A2014600
 9590 ITHCNT=1                                                          A2014700
      IF(IAEEE.EQ.1) GO TO 8020                                         A2014705
      GO TO 9600                                                        A2014710
 8000 KSEQNO = LSEQNO                                                   A2014720
      LSEQNO = JSEQNO                                                   A2014730
      CALL APT235                                                       A2014740
      IAEEE = 1                                                         A2014745
      CALL AERR(20110,'APT211  ')                                       A2014746
 8010 IAERR = 0                                                         A2014750
      GO TO 9500                                                        A2014751
 8020 IAERR = 1                                                         A2014752
      NR = 0                                                            A2014755
      HOLDPP(8) = K2                                                    A2014760
      CALL EWRITE(EXFILE,NR,HOLDPP,8,IR)                                A2014770
      HOLDPP(8) = K1                                                    A2014780
      LSEQNO = KSEQNO                                                   A2014790
C....   RETURN TO CALLER                                                A2014800
      GO TO 1000                                                        A2014810
      END                                                               A2014820
**** SOURCE FILE : M0002827.IBM;1   ***
*
C                                                                       CUTR0001
C...  FORTRAN SUBROUTINE               CUTTER                           CUTR0002
      SUBROUTINE CUTTER(NMBR,PRM)                                       CUTR0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CUTR0020
C                                                                       CUTR0030
C-VAX.... MODIFICATION TO PERMIT RESTART PROCEDURE USING                CUTR0031
C-VAX     VAX CONDITION HANDLING FACILITIES                             CUTR0032
      LOGICAL FLG                                                       CUTR0033
      FLG=.FALSE.                                                       CUTR0034
C.... ESTABLISH CONDITION HANDLER FRO AERR ERROR                        CUTR0035
      CALL APT241                                                       CUTR0036
   1  CALL CUTTES(NMBR,PRM,FLG)                                         CUTR0037
      IF (FLG) GOTO 1                                                   CUTR0038
      RETURN                                                            CUTR0042
      END                                                               CUTR0043
C                                                                       CUTR0050
      SUBROUTINE CUTTES(NMBR,PRM,FLG)                                   CUTR0051
C                                                                       CUTR0052
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CUTR0053
C                                                                       CUTR0060
      INCLUDE (TOTAL)                                                   CUTR0191
      INCLUDE (FXCOR)                                                   CUTR0446
      INCLUDE (ZNUMBR)                                                  CUTR0530
      INCLUDE (IFXCOR)                                                  CUTR0670
      INCLUDE (ISHR18)                                                  CUTR0762
      INCLUDE (KNUMBR)                                                  CUTR0764
C                                                                       CUTR0767
C                                                                       CUTR0788
C                                                                       CUTR0893
      INTEGER HCUTER(2)                                                 CUTR0967
      INTEGER BCDF                                                      CUTR0969
C                                                                       CUTR0970
C                                                                       CUTR0974
C     25.   COMMON FOR AERR INFORMATION                                 CUTR0975
C                                                                       CUTR0976
      COMMON /AERCOM / IAERFG                                           CUTR0977
C                                                                       CUTR0980
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            CUTR0981
      COMMON /HSAVE/ SAVEH(50)                                          CUTR0982
      EQUIVALENCE  (SAVEH( 6),PARAM(1) ),(SAVEH(15),NUMBER    )         CUTR0983
      DIMENSION PRM(9)                                                  CUTR0984
C     -----------------------------------------------------------       CUTR0985
C                                                                       CUTR0990
C                                                                       CUTR1000
C...  DEFINES CUTTER SHAPE AND SETS UP TOOL DATA BLOCKS                 CUTR1010
      DIMENSION PARAM(9)                                                CUTR1011
      LOGICAL FLG                                                       CUTR1012
      HCUTER(1) = BCDF('CUTT')                                          CUTR1014
      HCUTER(2) = BCDF('ER  ')                                          CUTR1015
      IF(FLG)GO TO 9990                                                 CUTR1018
      FLG=.TRUE.                                                        CUTR1020
      DO 500 I=1,9                                                      CUTR1021
  500 PARAM(I)=PRM(I)                                                   CUTR1022
      NUMBER=NMBR                                                       CUTR1023
      IF(JHLDFG.EQ.0) GO TO 501                                         CUTR1024
      ITABH(ITHCNT)=5                                                   CUTR1025
      ITHCNT=ITHCNT+1                                                   CUTR1026
      RETURN                                                            CUTR1027
C                                                                       CUTR1028
  501 CONTINUE                                                          CUTR1029
  105 ICTDEF=K1                                                         CUTR1030
C...  ZERO CUTTER PARAMETER STORAGE AREA                                CUTR1040
      DO 110 J=1,7                                                      CUTR1050
  110 CUTDAT(J)=Z0                                                      CUTR1060
      CUTDAT(7) = TLHIT                                                 CUTR1065
      IF(NUMBER-K7)126,126,125                                          CUTR1070
  125 NUMERR=22201                                                      CUTR1090
      GO TO 1000                                                        CUTR1100
  126 DO 127 J=1,NUMBER                                                 CUTR1140
  127 CUTDAT(J)=PARAM(J)                                                CUTR1150
C  WRITE CUTTER STATEMENT ON EXFILE                                     CUTR1155
      CALL APT299(NUMBER,HCUTER,1,PARAM(1))                             CUTR1160
      IF(NUMBER.LE.1) GO TO 129                                         CUTR1162
      KK=1                                                              CUTR1164
      DO 128 I=2,NUMBER,2                                               CUTR1166
      IF(I.EQ.NUMBER) KK=0                                              CUTR1168
  128 CALL APT299(1,PARAM(I),KK,PARAM(I+1))                             CUTR1170
C                                                                       CUTR1171
C  PLACE ZEROES IN TLLDAT BLOCK                                         CUTR1172
C                                                                       CUTR1173
  129 DO 1 I=1,8                                                        CUTR1174
      TLHITE(I)=Z0                                                      CUTR1175
      SINL(I)=Z0                                                        CUTR1176
      COSL(I)=Z0                                                        CUTR1177
      UMAX(I)=Z0                                                        CUTR1178
      RI(I)=Z0                                                          CUTR1179
      CORRAD(I)=Z0                                                      CUTR1180
      TCONT(I)=Z0                                                       CUTR1181
      TLINC(I)=Z0                                                       CUTR1182
    1 CONTINUE                                                          CUTR1185
C  MAKE SURE TOOL DIAMETER NOT LESS THAN ZERO                           CUTR1190
      IF(CUTDAT(1))2,92,3                                               CUTR1200
    2 NUMERR=22202                                                      CUTR1210
      GO TO 1000                                                        CUTR1220
C  EXAMINE TOOL HEIGHT. IF LESS THAN ZERO ERROR. SET TO 5 IF = ZERO.    CUTR1230
C  OKAY OTHERWISE                                                       CUTR1240
    3 IF(CUTDAT(7))4,5,6                                                CUTR1250
    4 NUMERR=22203                                                      CUTR1260
      GO TO 1000                                                        CUTR1270
    5 CONTINUE                                                          CUTR1280
C  SUM OF ANGLES A AND B MUST BE LESS THAN 90 DEGREES                   CUTR1290
    6 IF(Z90-CUTDAT(5)-CUTDAT( 6))7,7,8                                 CUTR1300
    7 NUMERR=22204                                                      CUTR1310
      GO TO 1000                                                        CUTR1320
    8 RI(6)=Z5EM1*CUTDAT(1)                                             CUTR1330
      CUTDAT(1)=RI(6)                                                   CUTR1340
C  ERROR IF ANGLE A NEGATIVE                                            CUTR1350
      IF(CUTDAT(5))9,10,11                                              CUTR1360
    9 NUMERR=22205                                                      CUTR1370
      GO TO 1000                                                        CUTR1380
   10 COSL(2)=Z1                                                        CUTR1390
      TANHI(1)=Z1E38                                                    CUTR1400
      GO TO 12                                                          CUTR1410
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR A GREATER THAN ZERO CUTR1420
   11 TLHITE(8)=DEGRAD*CUTDAT(5)                                        CUTR1430
      SINL(2)=DSIN(TLHITE(8))                                           CUTR1440
      COSL(2)=DCOS(TLHITE(8))                                           CUTR1450
      TCONT(1)=SINL(2)/COSL(2)                                          CUTR1460
      TLHITE(6)=TCONT(1)*RI(6)                                          CUTR1470
      TANHI(1)=Z1/TCONT(1)                                              CUTR1480
C  MAKE SURE HEIGHT OF BOTTOM LINE SEGMENT DOES NOT EXCEED TOOL HEIGHT  CUTR1490
   12 IF(Z1EM5-DABS(CUTDAT(7)-TLHITE(6))) 13,13,15                      CUTR1500
   13 IF(CUTDAT(7)-TLHITE(6))14,14,16                                   CUTR1510
   14 NUMERR=22206                                                      CUTR1520
      GO TO 1000                                                        CUTR1530
   15 TLHITE(6)=CUTDAT(7)                                               CUTR1540
C  ERROR IF ANGLE B NEGATIVE                                            CUTR1550
   16 IPT1=K1                                                           CUTR1560
      IF(CUTDAT(6))17,18,19                                             CUTR1570
C                    BELL SHAPED CUTTER                                 CUTR1578
   17 CALL AERR (-22207,'CUTTER  ')                                     CUTR1580
      GO TO 19                                                          CUTR1590
   18 SINL(6)=Z1                                                        CUTR1600
      GO TO 20                                                          CUTR1610
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR B GREATER THAN ZERO CUTR1620
   19 TANHI(8)=DEGRAD*CUTDAT(6)                                         CUTR1630
      SINL(6)=DCOS(TANHI(8))                                            CUTR1640
      COSL(6)=DSIN(TANHI(8))                                            CUTR1650
      TANLO(7)=COSL(6)/TANHI(7)                                         CUTR1660
C  FURTHER CALCULATIONS                                                 CUTR1670
   20 UMAX(2)=RI(6)/COSL(2)                                             CUTR1680
      UMAX(6)=(CUTDAT(7)-TLHITE(6))/SINL(6)                             CUTR1690
      RI(7)=RI(6)+COSL(6)*UMAX(6)                                       CUTR1700
      TCONT(2)=Z1                                                       CUTR1710
      TCONT(6)=Z1                                                       CUTR1720
C  EXAMINE TOOL RADIUS. IF GREATER THAN ZERO, CORNER CIRCLE WILL BE PARTCUTR1730
C  OF TOOL CONFIGURATION. IF = ZERO, TOOL WILL CONSIST ONLY OF LINE AND CUTR1740
C  POINT CIRCLE SEGMENTS. ERROR IF NEGATIVE.                            CUTR1750
      IF(CUTDAT(2))21,22,25                                             CUTR1760
   21 NUMERR=22208                                                      CUTR1770
      GO TO 1000                                                        CUTR1780
C  COMPARE LENGTH OF UPPER LINE SEGMENT TO ZERO. SET VALUES IN TLLDAT   CUTR1790
C  BLOCK ACCORDINGLY                                                    CUTR1800
   22 IF(UMAX(6))23,23,24                                               CUTR1810
   23 TANLO(7)=TANHI(1)                                                 CUTR1820
      TCONT(6)=Z0                                                       CUTR1830
      GO TO 87                                                          CUTR1840
   24 TLHITE(4)=TLHITE(6)                                               CUTR1850
      RI(4)=RI(6)                                                       CUTR1860
      TANHI(4)=TANLO(7)                                                 CUTR1870
      TANLO(4)=TANHI(1)                                                 CUTR1880
      GO TO 86                                                          CUTR1890
C  COMPUTE CENTER OF CORNER CIRCLE                                      CUTR1900
   27 CUTDAT(3)=RI(6)-CORRAD(4)                                         CUTR1910
      CUTDAT(4)=CORRAD(4)                                               CUTR1920
      GO TO 26                                                          CUTR1930
C  STORE RADIUS OF CORNER CIRCLE AND COMPUTE DISTANCE FROM CENTER OF    CUTR1940
C  CIRCLE TO BOTTOM LINE (UMAX(3))                                      CUTR1950
   25 CORRAD(4)=CUTDAT(2)                                               CUTR1960
   26 UMAX(3)=CUTDAT(4)*COSL(2)-CUTDAT(3)*SINL(2)                       CUTR1970
      TANLO(1)=CUTDAT(3)*CUTDAT(3)+CUTDAT(4)*CUTDAT(4)                  CUTR1980
C  IF = 0, CENTER OF CORNER CIRCLE HAS TO BE CALCULATED                 CUTR1990
      IF(TANLO(1)+CUTDAT(5)+CUTDAT(6)*CUTDAT(6))28,27,28                CUTR2000
C  DISTANCE FROM CENTER OF CIRCLE TO INTERSECTION OF LINE SEGMENTS      CUTR2010
   28 UMAX(1)=DSQRT((CUTDAT(3)-RI(6))*(CUTDAT(3)-RI(6))                 CUTR2020
     1        +(CUTDAT(4)-TLHITE(6))*(CUTDAT(4)-TLHITE(6)))             CUTR2030
      UMAX(7)=TANLO(7)*(CUTDAT(7)-TLHITE(6))                            CUTR2050
C  DISTANCE FROM CENTER OF CIRCLE TO UPPER END OF UPPER LINE SEGMENT    CUTR2060
      UMAX(4)=DSQRT((CUTDAT(4)-CUTDAT(7))*(CUTDAT(4)-CUTDAT(7))         CUTR2070
     1        +(CUTDAT(3)-RI(7))*(CUTDAT(3)-RI(7)))                     CUTR2080
C  IF THE Y COORD. (F) OF THE CENTER OF THE CORNER CIRCLE IS LESS THAN  CUTR2090
C  THE Y COORD. OF THE INTERSECTION OF THE LINES, THEN ERROR            CUTR2100
      IF(CUTDAT(4)+Z1EM5-TLHITE(6))29,29,30                             CUTR2110
   29 NUMERR=22209                                                      CUTR2120
      GO TO 1000                                                        CUTR2130
C  IF THE RADIUS IS BOTH LARGER THAN THE DISTANCE TO THE INTERSECTION   CUTR2140
C  OF THE LINES AND DIFFERENT THAN THE DISTANCE TO THE ORIGIN OF THE    CUTR2150
C  BOTTOM LINE SEGMENT, WE HAVE AN INVALID TOOL CONFIGURATION           CUTR2160
   33 IF(Z1EM5-DABS(TANLO(1)-CORRAD(4)*CORRAD(4))) 34,34,35             CUTR2170
   34 NUMERR=22210                                                      CUTR2180
      GO TO 1000                                                        CUTR2190
C  IF E GREATER THAN ZERO, WE HAVE AN INVALID TOOL CONFIGURATION        CUTR2200
   35 IF(CUTDAT(3))53,37,34                                             CUTR2210
   53 CALL AERR(-22211,'CUTTER  ')                                      CUTR2220
      TANHI(1)=CUTDAT(4)/CUTDAT(3)                                      CUTR2230
      TCONT(1)=CUTDAT(3)/CUTDAT(4)                                      CUTR2240
C  NO LOWER LINE SEGMENT                                                CUTR2250
   54 TCONT(2)=Z0                                                       CUTR2260
C  FURTHER TLLDAT VARIABLES                                             CUTR2270
   55 TANLO(4)=TANHI(1)                                                 CUTR2280
   56 UMAX(5)=(RI(6)-CUTDAT(3))*SINL(6)+COSL(6)*(CUTDAT(4)-TLHITE(6))   CUTR2290
C  IF = 0, THERE IS NO UPPER LINE SEGMENT AND IN THIS CASE TOOL NO GOOD CUTR2310
      IF(UMAX(6))67,57,67                                               CUTR2320
C  IF GREATER THAN ZERO, RADIUS AND DISTANCE FROM CENTER OF CORNER      CUTR2330
C  CIRCLE TO INTERSECTION OF LINES EQUAL.                               CUTR2340
   67 IF(CORRAD(4)-UMAX(1))68,68,62                                     CUTR2350
   68 TCONT(7)=CORRAD(4)*CORRAD(4)-UMAX(5)*UMAX(5)                      CUTR2360
C  LENGTH OF UPPER LINE SEGMENT                                         CUTR2370
      UMAX(6)=UMAX(6)+DSQRT(DABS(TCONT(7)))                             CUTR2380
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(5)*UMAX(5))                    CUTR2390
      UMAX(8)=CUTDAT(4)-CUTDAT(7)-TANLO(7)*(UMAX(7)+RI(6)-CUTDAT(3))    CUTR2400
      IF(Z1EM5-DABS(UMAX(8))) 72,72,69                                  CUTR2420
   72 IF(UMAX(8))73,73,77                                               CUTR2430
C  IF GREATER THAN ZERO, UPPER LINE SEGMENT WITH CORNER CIRCLE TANGENT. CUTR2440
C  OTHERWISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN PT. CIRCLE CUTR2450
   73 IF(Z1EM5-DABS(TCONT(7))) 75,75,74                                 CUTR2460
   75 IF(TCONT(7))76,76,83                                              CUTR2470
   76 GO TO 41                                                          CUTR2480
   57 NUMERR=22212                                                      CUTR2490
      GO TO 1000                                                        CUTR2500
C  WE MUST CHANGE PARAMETERS FOR BOTTOM POINT CIRCLE DUE TO NATURE OF   CUTR2510
C  CORNER CIRCLE                                                        CUTR2520
   37 CALL AERR(-22211,'CUTTER  ')                                      CUTR2530
      TCONT(1)=Z0                                                       CUTR2540
      TANHI(1)=Z1E38                                                    CUTR2550
      GO TO 54                                                          CUTR2560
C  IF GREATER THAN OR EQUAL TO ZERO, CORNER CIRCLE IS A POINT CIRCLE    CUTR2570
   30 IF(Z1EM5-DABS(CORRAD(4)-UMAX(1))) 32,31,31                        CUTR2580
   31 CORRAD(4) = 0.                                                    CUTR2582
      TANLO(1) = 0.                                                     CUTR2584
      UMAX(1) = 0.                                                      CUTR2586
      UMAX(3) = 0.                                                      CUTR2588
      UMAX(4) = 0.                                                      CUTR2590
      UMAX(7) = 0.                                                      CUTR2592
      CUTDAT(2) = 0.                                                    CUTR2594
      CUTDAT(3) = 0.                                                    CUTR2596
      CUTDAT(4) = 0.                                                    CUTR2598
      GO TO 22                                                          CUTR2600
   32 IF (CORRAD(4)-UMAX(1)) 38,38,33                                   CUTR2602
   38 IF(RI(6)+TCONT(1)*(TLHITE(6)-CUTDAT(4))-                          CUTR2610
     1CUTDAT(3)+Z1EM5)39,39,40                                          CUTR2620
C  CORNER CIRCLE INTERSECTS LOWER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTR2630
   39 NUMERR=22213                                                      CUTR2640
      GO TO 1000                                                        CUTR2650
   40 IF(CUTDAT(4)+Z1EM5-TLHITE(6)-TANLO(7)*(RI(6)-                     CUTR2660
     1CUTDAT(3)))41,41,42                                               CUTR2670
C  CORNER CIRCLE INTERSECTS UPPER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTR2680
   41 NUMERR=22214                                                      CUTR2690
      GO TO 1000                                                        CUTR2700
   42 TANLO(3)=CORRAD(4)*CORRAD(4)-UMAX(3)*UMAX(3)                      CUTR2710
      IF(TANLO(3).LT.Z0)GO TO 39                                        CUTR2715
C  LENGTH OF LOWER LINE SEGMENT                                         CUTR2720
      UMAX(2)=UMAX(2)+DSQRT(TANLO(3))                                   CUTR2730
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(3)*UMAX(3))                    CUTR2740
      TANLO(8)=CUTDAT(3)+TCONT(1)*CUTDAT(4)                             CUTR2750
      IF(DABS(TANLO(8))-Z1EM5)43,46,46                                  CUTR2760
C  IF GREATER THAN ZERO, PT. CIRCLE FOLLOWED BY CORNER CIRCLE OR JUST   CUTR2770
C  CORNER CIRCLE. OTHERWISE PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CUTR2780
C  CIRCLE, AND THEN CORNER CIRCLE                                       CUTR2790
   43 IF(Z1EM5-DABS(TANLO(3))) 44,44,54                                 CUTR2800
   44 IF(TANLO(3))45,45,50                                              CUTR2810
   45 GO TO 39                                                          CUTR2820
   46 IF(TANLO(8))51,47,47                                              CUTR2830
C  IF GREATER THAN ZERO,PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CIR-CUTR2840
C  CLE, AND THEN CORNER CIRCLE. IF = 0, PT. CIRCLE AND CORNER CIRCLE.   CUTR2850
C  ERROR LESS THAN ZERO                                                 CUTR2860
   51 IF(CORRAD(4)*CORRAD(4)-TANLO(1))52,53,50                          CUTR2870
   52 GO TO 39                                                          CUTR2880
C  IF GREATER THAN ZERO, CORNER CIRCLE TANGENT TO LOWER LINE SEGMENT    CUTR2890
   47 IF(Z1EM5-DABS(TANLO(3))) 48,48,55                                 CUTR2900
   48 IF(TANLO(3))49,49,50                                              CUTR2910
   49 GO TO 39                                                          CUTR2920
C  LOWER LINE SEGMENT, PT. CIRCLE, AND CORNER CIRCLE PARAMETER CALC.    CUTR2930
   50 TCONT(3)=DSQRT(TANLO(3))/UMAX(3)                                  CUTR2940
      TANHI(3)=(Z1-TCONT(1)*TCONT(3))/(TCONT(1)+TCONT(3))               CUTR2950
      TLHITE(3)=SINL(2)*UMAX(2)                                         CUTR2970
      RI(3)=COSL(2)*UMAX(2)                                             CUTR2980
      TANLO(3)=TANHI(1)                                                 CUTR2990
      TANLO(4)=TANHI(3)                                                 CUTR3000
      GO TO 56                                                          CUTR3010
   62 IF(Z1EM5-DABS(UMAX(4)-CORRAD(4))) 63,63,64                        CUTR3020
   63 NUMERR=22215                                                      CUTR3030
      GO TO 1000                                                        CUTR3040
C  IF GREATER THAN ZERO, CORNER CIRCLE MEETS UPPER PT. CIRCLE AT UNAC-  CUTR3050
C  CEPTABLE ANGLE. IF = 0 WE MUST CHANGE PARAMETERS FOR UPPER PT. CIRCLECUTR3060
   64 IF(CUTDAT(7)-CUTDAT(4))78,66,63                                   CUTR3070
   78 CALL AERR(-22216,'CUTTER  ')                                      CUTR3080
      TANLO(7)=(CUTDAT(4)-CUTDAT(7))/(RI(6)+SINL(6)-CUTDAT(3))          CUTR3090
   79 TCONT(6)=Z0                                                       CUTR3110
   80 TANHI(4)=Z0                                                       CUTR3120
      GO TO 85                                                          CUTR3130
C  NO UPPER LINE SEGMENT. CHANGE IN PARAMETERS FOR UPPER POINT CIRCLE   CUTR3140
C  NECESSARY DUE TO NATURE OF CORNER CIRCLE                             CUTR3150
   66 CALL AERR(-22216,'CUTTER  ')                                      CUTR3160
      TANLO(7)=Z0                                                       CUTR3170
      GO TO 79                                                          CUTR3180
C  IF GREATER THAN ZERO,CORNER CIRCLE AND THEN UPPER PT. CIRCLE. OTHER- CUTR3190
C  WISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN UPPER PT. CIRCLECUTR3200
   69 IF(Z1EM5-DABS(TCONT(7))) 70,70,79                                 CUTR3210
   70 IF(TCONT(7))71,71,83                                              CUTR3220
   71 GO TO 41                                                          CUTR3230
   74 TANHI(4)=TANLO(7)                                                 CUTR3240
      GO TO 84                                                          CUTR3250
   77 IF(Z1EM5-DABS(CORRAD(4)-UMAX(4))) 81,81,78                        CUTR3260
   81 IF(CORRAD(4)-UMAX(4))82,82,83                                     CUTR3270
   82 GO TO 41                                                          CUTR3280
C  FURTHER CALCULATIONS FOR TLLDAT BLOCK PARAMETERS                     CUTR3290
   83 TCONT(5)=DSQRT(TCONT(7))/UMAX(5)                                  CUTR3300
      TANHI(4)=(TCONT(5)+TANLO(7))/(Z1-TCONT(5)*TANLO(7))               CUTR3310
      TANLO(5)=TANHI(4)                                                 CUTR3330
      TANHI(5)=TANLO(7)                                                 CUTR3340
   84 RI(5)=RI(7)-COSL(6)*UMAX(6)                                       CUTR3350
      TLHITE(5)=CUTDAT(7)-SINL(6)*UMAX(6)                               CUTR3360
      TLHITE(6)=TLHITE(5)                                               CUTR3370
      RI(6)=RI(5)                                                       CUTR3380
   85 TLHITE(4)=CUTDAT(4)                                               CUTR3390
      RI(4)=CUTDAT(3)                                                   CUTR3400
   86 TCONT(4)=Z1                                                       CUTR3410
   87 TANLO(1)=Z1E38                                                    CUTR3420
      TLINC(2)=Z1                                                       CUTR3430
      TLINC(6)=Z1                                                       CUTR3440
      TLHITE(7)=CUTDAT(7)                                               CUTR3450
  200 IBEGIN=1                                                          CUTR3460
C  WE NOW SEARCH EACH OF THE 7 POSSIBLE SEGMENTS TO DETERMINE FIRST ONE CUTR3470
   91 IF(TCONT(IBEGIN))90,88,90                                         CUTR3480
   90 TCONT(IBEGIN-1)=-Z1                                               CUTR3490
      TCONT(8)=-Z1                                                      CUTR3500
      TCONT(7)=Z1                                                       CUTR3510
      TANHI(7)=-Z1E38                                                   CUTR3520
      TANHI(8)=-Z1E38                                                   CUTR3530
      TANLO(8)=Z1E38                                                    CUTR3540
      TLINC(8)=Z0                                                       CUTR3550
      CORRAD(8)=Z0                                                      CUTR3560
      ICTDEF=0                                                          CUTR3570
      IAERR=0                                                           CUTR3580
      CALL TLCONV                                                       CUTR3590
      GO TO 9999                                                        CUTR3600
   88 IBEGIN=IBEGIN+1                                                   CUTR3610
      IF(7-IBEGIN)89,91,91                                              CUTR3620
   89 NUMERR=22217                                                      CUTR3630
      GO TO 1000                                                        CUTR3640
   92 IF(CUTDAT(7))4,93,10                                              CUTR3650
   93 IPT1=0                                                            CUTR3660
      TANLO(7)=Z1E38                                                    CUTR3670
      IBEGIN=7                                                          CUTR3680
      GO TO 90                                                          CUTR3681
C                                                                       CUTR3685
C        ** CUTTER PARAMETER ERROR-CALL AERR AND DEFINE POINT CUTTER    CUTR3686
C                                                                       CUTR3687
 1000 IAERFG=1                                                          CUTR3690
      ICTDEF=0                                                          CUTR3691
      CALL AERR(NUMERR,'CUTTER  ')                                      CUTR3692
 9990 DO 1001 JJ=1,7                                                    CUTR3693
 1001 PARAM(JJ)=Z0                                                      CUTR3694
      NUMBER=K7                                                         CUTR3695
      FLG=.FALSE.                                                       CUTR3696
      GO TO 105                                                         CUTR3697
 9999 CONTINUE                                                          CUTR3698
      FLG=.FALSE.                                                       CUTR3699
      RETURN                                                            CUTR3700
      END                                                               CUTR3701
C                                                                       CUTR3710
C                                                                       CUTR3720
C                                                                       CUTR3730
C                                                                       CUTT0001
      SUBROUTINE CUTTEH                                                 CUTT0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CUTT0020
C                                                                       CUTT0030
C                                                                       CUTT0040
C                                                                       CUTT0050
C                                                                       CUTT0060
      INCLUDE (TOTAL)                                                   CUTT0191
      INCLUDE (FXCOR)                                                   CUTT0446
      INCLUDE (ZNUMBR)                                                  CUTT0530
      INCLUDE (IFXCOR)                                                  CUTT0670
      INCLUDE (ISHR18)                                                  CUTT0762
      INCLUDE (KNUMBR)                                                  CUTT0764
C                                                                       CUTT0767
C                                                                       CUTT0788
C                                                                       CUTT0893
      INTEGER HCUTER(2)                                                 CUTT0967
      INTEGER BCDF                                                      CUTT0969
C                                                                       CUTT0970
C                                                                       CUTT0974
C     25.   COMMON FOR AERR INFORMATION                                 CUTT0975
C                                                                       CUTT0976
      COMMON /AERCOM / IAERFG                                           CUTT0977
C                                                                       CUTT0980
      COMMON /HSAVE/ SAVEH(50)                                          CUTT0982
      EQUIVALENCE  (SAVEH( 6),PARAM(1) ),(SAVEH(15),NUMBER    )         CUTT0983
C     -----------------------------------------------------------       CUTT0985
C                                                                       CUTT0990
C                                                                       CUTT1000
C...  DEFINES CUTTER SHAPE AND SETS UP TOOL DATA BLOCKS                 CUTT1010
      DIMENSION PARAM(9)                                                CUTT1011
      HCUTER(1) = BCDF('CUTT')                                          CUTT1014
      HCUTER(2) = BCDF('ER  ')                                          CUTT1015
C                                                                       CUTT1028
  105 ICTDEF=K1                                                         CUTT1030
C...  ZERO CUTTER PARAMETER STORAGE AREA                                CUTT1040
      DO 110 J=1,7                                                      CUTT1050
  110 CUTDAT(J)=Z0                                                      CUTT1060
      CUTDAT(7) = TLHIT                                                 CUTT1065
      IF(NUMBER-K7)126,126,125                                          CUTT1070
  125 NUMERR=22201                                                      CUTT1090
      GO TO 1000                                                        CUTT1100
  126 DO 127 J=1,NUMBER                                                 CUTT1140
  127 CUTDAT(J)=PARAM(J)                                                CUTT1150
C  WRITE CUTTER STATEMENT ON EXFILE                                     CUTT1155
      CALL APT299(NUMBER,HCUTER,1,PARAM(1))                             CUTT1160
      IF(NUMBER.LE.1) GO TO 129                                         CUTT1162
      KK=1                                                              CUTT1164
      DO 128 I=2,NUMBER,2                                               CUTT1166
      IF(I.EQ.NUMBER) KK=0                                              CUTT1168
  128 CALL APT299(1,PARAM(I),KK,PARAM(I+1))                             CUTT1170
C                                                                       CUTT1171
C  PLACE ZEROES IN TLLDAT BLOCK                                         CUTT1172
C                                                                       CUTT1173
  129 DO 1 I=1,8                                                        CUTT1174
      TLHITE(I)=Z0                                                      CUTT1175
      SINL(I)=Z0                                                        CUTT1176
      COSL(I)=Z0                                                        CUTT1177
      UMAX(I)=Z0                                                        CUTT1178
      RI(I)=Z0                                                          CUTT1179
      CORRAD(I)=Z0                                                      CUTT1180
      TCONT(I)=Z0                                                       CUTT1181
      TLINC(I)=Z0                                                       CUTT1182
    1 CONTINUE                                                          CUTT1185
C  MAKE SURE TOOL DIAMETER NOT LESS THAN ZERO                           CUTT1190
      IF(CUTDAT(1))2,92,3                                               CUTT1200
    2 NUMERR=22202                                                      CUTT1210
      GO TO 1000                                                        CUTT1220
C  EXAMINE TOOL HEIGHT. IF LESS THAN ZERO ERROR. SET TO 5 IF = ZERO.    CUTT1230
C  OKAY OTHERWISE                                                       CUTT1240
    3 IF(CUTDAT(7))4,5,6                                                CUTT1250
    4 NUMERR=22203                                                      CUTT1260
      GO TO 1000                                                        CUTT1270
    5 CONTINUE                                                          CUTT1280
C  SUM OF ANGLES A AND B MUST BE LESS THAN 90 DEGREES                   CUTT1290
    6 IF(Z90-CUTDAT(5)-CUTDAT( 6))7,7,8                                 CUTT1300
    7 NUMERR=22204                                                      CUTT1310
      GO TO 1000                                                        CUTT1320
    8 RI(6)=Z5EM1*CUTDAT(1)                                             CUTT1330
      CUTDAT(1)=RI(6)                                                   CUTT1340
C  ERROR IF ANGLE A NEGATIVE                                            CUTT1350
      IF(CUTDAT(5))9,10,11                                              CUTT1360
    9 NUMERR=22205                                                      CUTT1370
      GO TO 1000                                                        CUTT1380
   10 COSL(2)=Z1                                                        CUTT1390
      TANHI(1)=Z1E38                                                    CUTT1400
      GO TO 12                                                          CUTT1410
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR A GREATER THAN ZERO CUTT1420
   11 TLHITE(8)=DEGRAD*CUTDAT(5)                                        CUTT1430
      SINL(2)=DSIN(TLHITE(8))                                           CUTT1440
      COSL(2)=DCOS(TLHITE(8))                                           CUTT1450
      TCONT(1)=SINL(2)/COSL(2)                                          CUTT1460
      TLHITE(6)=TCONT(1)*RI(6)                                          CUTT1470
      TANHI(1)=Z1/TCONT(1)                                              CUTT1480
C  MAKE SURE HEIGHT OF BOTTOM LINE SEGMENT DOES NOT EXCEED TOOL HEIGHT  CUTT1490
   12 IF(Z1EM5-DABS(CUTDAT(7)-TLHITE(6))) 13,13,15                      CUTT1500
   13 IF(CUTDAT(7)-TLHITE(6))14,14,16                                   CUTT1510
   14 NUMERR=22206                                                      CUTT1520
      GO TO 1000                                                        CUTT1530
   15 TLHITE(6)=CUTDAT(7)                                               CUTT1540
C  ERROR IF ANGLE B NEGATIVE                                            CUTT1550
   16 IPT1=K1                                                           CUTT1560
      IF(CUTDAT(6))17,18,19                                             CUTT1570
C                    BELL SHAPED CUTTER                                 CUTT1578
   17 CALL AERR (-22207,'CUTTEH  ')                                     CUTT1580
      GO TO 19                                                          CUTT1590
   18 SINL(6)=Z1                                                        CUTT1600
      GO TO 20                                                          CUTT1610
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR B GREATER THAN ZERO CUTT1620
   19 TANHI(8)=DEGRAD*CUTDAT(6)                                         CUTT1630
      SINL(6)=DCOS(TANHI(8))                                            CUTT1640
      COSL(6)=DSIN(TANHI(8))                                            CUTT1650
      TANLO(7)=COSL(6)/TANHI(7)                                         CUTT1660
C  FURTHER CALCULATIONS                                                 CUTT1670
   20 UMAX(2)=RI(6)/COSL(2)                                             CUTT1680
      UMAX(6)=(CUTDAT(7)-TLHITE(6))/SINL(6)                             CUTT1690
      RI(7)=RI(6)+COSL(6)*UMAX(6)                                       CUTT1700
      TCONT(2)=Z1                                                       CUTT1710
      TCONT(6)=Z1                                                       CUTT1720
C  EXAMINE TOOL RADIUS. IF GREATER THAN ZERO, CORNER CIRCLE WILL BE PARTCUTT1730
C  OF TOOL CONFIGURATION. IF = ZERO, TOOL WILL CONSIST ONLY OF LINE AND CUTT1740
C  POINT CIRCLE SEGMENTS. ERROR IF NEGATIVE.                            CUTT1750
      IF(CUTDAT(2))21,22,25                                             CUTT1760
   21 NUMERR=22208                                                      CUTT1770
      GO TO 1000                                                        CUTT1780
C  COMPARE LENGTH OF UPPER LINE SEGMENT TO ZERO. SET VALUES IN TLLDAT   CUTT1790
C  BLOCK ACCORDINGLY                                                    CUTT1800
   22 IF(UMAX(6))23,23,24                                               CUTT1810
   23 TANLO(7)=TANHI(1)                                                 CUTT1820
      TCONT(6)=Z0                                                       CUTT1830
      GO TO 87                                                          CUTT1840
   24 TLHITE(4)=TLHITE(6)                                               CUTT1850
      RI(4)=RI(6)                                                       CUTT1860
      TANHI(4)=TANLO(7)                                                 CUTT1870
      TANLO(4)=TANHI(1)                                                 CUTT1880
      GO TO 86                                                          CUTT1890
C  COMPUTE CENTER OF CORNER CIRCLE                                      CUTT1900
   27 CUTDAT(3)=RI(6)-CORRAD(4)                                         CUTT1910
      CUTDAT(4)=CORRAD(4)                                               CUTT1920
      GO TO 26                                                          CUTT1930
C  STORE RADIUS OF CORNER CIRCLE AND COMPUTE DISTANCE FROM CENTER OF    CUTT1940
C  CIRCLE TO BOTTOM LINE (UMAX(3))                                      CUTT1950
   25 CORRAD(4)=CUTDAT(2)                                               CUTT1960
   26 UMAX(3)=CUTDAT(4)*COSL(2)-CUTDAT(3)*SINL(2)                       CUTT1970
      TANLO(1)=CUTDAT(3)*CUTDAT(3)+CUTDAT(4)*CUTDAT(4)                  CUTT1980
C  IF = 0, CENTER OF CORNER CIRCLE HAS TO BE CALCULATED                 CUTT1990
      IF(TANLO(1)+CUTDAT(5)+CUTDAT(6)*CUTDAT(6))28,27,28                CUTT2000
C  DISTANCE FROM CENTER OF CIRCLE TO INTERSECTION OF LINE SEGMENTS      CUTT2010
   28 UMAX(1)=DSQRT((CUTDAT(3)-RI(6))*(CUTDAT(3)-RI(6))                 CUTT2020
     1        +(CUTDAT(4)-TLHITE(6))*(CUTDAT(4)-TLHITE(6)))             CUTT2030
      UMAX(7)=TANLO(7)*(CUTDAT(7)-TLHITE(6))                            CUTT2050
C  DISTANCE FROM CENTER OF CIRCLE TO UPPER END OF UPPER LINE SEGMENT    CUTT2060
      UMAX(4)=DSQRT((CUTDAT(4)-CUTDAT(7))*(CUTDAT(4)-CUTDAT(7))         CUTT2070
     1        +(CUTDAT(3)-RI(7))*(CUTDAT(3)-RI(7)))                     CUTT2080
C  IF THE Y COORD. (F) OF THE CENTER OF THE CORNER CIRCLE IS LESS THAN  CUTT2090
C  THE Y COORD. OF THE INTERSECTION OF THE LINES, THEN ERROR            CUTT2100
      IF(CUTDAT(4)+Z1EM5-TLHITE(6))29,29,30                             CUTT2110
   29 NUMERR=22209                                                      CUTT2120
      GO TO 1000                                                        CUTT2130
C  IF THE RADIUS IS BOTH LARGER THAN THE DISTANCE TO THE INTERSECTION   CUTT2140
C  OF THE LINES AND DIFFERENT THAN THE DISTANCE TO THE ORIGIN OF THE    CUTT2150
C  BOTTOM LINE SEGMENT, WE HAVE AN INVALID TOOL CONFIGURATION           CUTT2160
   33 IF(Z1EM5-DABS(TANLO(1)-CORRAD(4)*CORRAD(4))) 34,34,35             CUTT2170
   34 NUMERR=22210                                                      CUTT2180
      GO TO 1000                                                        CUTT2190
C  IF E GREATER THAN ZERO, WE HAVE AN INVALID TOOL CONFIGURATION        CUTT2200
   35 IF(CUTDAT(3))53,37,34                                             CUTT2210
   53 CALL AERR(-22211,'CUTTEH  ')                                      CUTT2220
      TANHI(1)=CUTDAT(4)/CUTDAT(3)                                      CUTT2230
      TCONT(1)=CUTDAT(3)/CUTDAT(4)                                      CUTT2240
C  NO LOWER LINE SEGMENT                                                CUTT2250
   54 TCONT(2)=Z0                                                       CUTT2260
C  FURTHER TLLDAT VARIABLES                                             CUTT2270
   55 TANLO(4)=TANHI(1)                                                 CUTT2280
   56 UMAX(5)=(RI(6)-CUTDAT(3))*SINL(6)+COSL(6)*(CUTDAT(4)-TLHITE(6))   CUTT2290
C  IF = 0, THERE IS NO UPPER LINE SEGMENT AND IN THIS CASE TOOL NO GOOD CUTT2310
      IF(UMAX(6))67,57,67                                               CUTT2320
C  IF GREATER THAN ZERO, RADIUS AND DISTANCE FROM CENTER OF CORNER      CUTT2330
C  CIRCLE TO INTERSECTION OF LINES EQUAL.                               CUTT2340
   67 IF(CORRAD(4)-UMAX(1))68,68,62                                     CUTT2350
   68 TCONT(7)=CORRAD(4)*CORRAD(4)-UMAX(5)*UMAX(5)                      CUTT2360
C  LENGTH OF UPPER LINE SEGMENT                                         CUTT2370
      UMAX(6)=UMAX(6)+DSQRT(DABS(TCONT(7)))                             CUTT2380
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(5)*UMAX(5))                    CUTT2390
      UMAX(8)=CUTDAT(4)-CUTDAT(7)-TANLO(7)*(UMAX(7)+RI(6)-CUTDAT(3))    CUTT2400
      IF(Z1EM5-DABS(UMAX(8))) 72,72,69                                  CUTT2420
   72 IF(UMAX(8))73,73,77                                               CUTT2430
C  IF GREATER THAN ZERO, UPPER LINE SEGMENT WITH CORNER CIRCLE TANGENT. CUTT2440
C  OTHERWISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN PT. CIRCLE CUTT2450
   73 IF(Z1EM5-DABS(TCONT(7))) 75,75,74                                 CUTT2460
   75 IF(TCONT(7))76,76,83                                              CUTT2470
   76 GO TO 41                                                          CUTT2480
   57 NUMERR=22212                                                      CUTT2490
      GO TO 1000                                                        CUTT2500
C  WE MUST CHANGE PARAMETERS FOR BOTTOM POINT CIRCLE DUE TO NATURE OF   CUTT2510
C  CORNER CIRCLE                                                        CUTT2520
   37 CALL AERR(-22211,'CUTTEH  ')                                      CUTT2530
      TCONT(1)=Z0                                                       CUTT2540
      TANHI(1)=Z1E38                                                    CUTT2550
      GO TO 54                                                          CUTT2560
C  IF GREATER THAN OR EQUAL TO ZERO, CORNER CIRCLE IS A POINT CIRCLE    CUTT2570
   30 IF(Z1EM5-DABS(CORRAD(4)-UMAX(1))) 32,31,31                        CUTT2580
   31 CORRAD(4) = 0.                                                    CUTT2582
      TANLO(1) = 0.                                                     CUTT2584
      UMAX(1) = 0.                                                      CUTT2586
      UMAX(3) = 0.                                                      CUTT2588
      UMAX(4) = 0.                                                      CUTT2590
      UMAX(7) = 0.                                                      CUTT2592
      CUTDAT(2) = 0.                                                    CUTT2594
      CUTDAT(3) = 0.                                                    CUTT2596
      CUTDAT(4) = 0.                                                    CUTT2598
      GO TO 22                                                          CUTT2600
   32 IF (CORRAD(4)-UMAX(1)) 38,38,33                                   CUTT2602
   38 IF(RI(6)+TCONT(1)*(TLHITE(6)-CUTDAT(4))-                          CUTT2610
     1CUTDAT(3)+Z1EM5)39,39,40                                          CUTT2620
C  CORNER CIRCLE INTERSECTS LOWER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTT2630
   39 NUMERR=22213                                                      CUTT2640
      GO TO 1000                                                        CUTT2650
   40 IF(CUTDAT(4)+Z1EM5-TLHITE(6)-TANLO(7)*(RI(6)-                     CUTT2660
     1CUTDAT(3)))41,41,42                                               CUTT2670
C  CORNER CIRCLE INTERSECTS UPPER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTT2680
   41 NUMERR=22214                                                      CUTT2690
      GO TO 1000                                                        CUTT2700
   42 TANLO(3)=CORRAD(4)*CORRAD(4)-UMAX(3)*UMAX(3)                      CUTT2710
      IF(TANLO(3).LT.Z0)GO TO 39                                        CUTT2715
C  LENGTH OF LOWER LINE SEGMENT                                         CUTT2720
      UMAX(2)=UMAX(2)+DSQRT(TANLO(3))                                   CUTT2730
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(3)*UMAX(3))                    CUTT2740
      TANLO(8)=CUTDAT(3)+TCONT(1)*CUTDAT(4)                             CUTT2750
      IF(DABS(TANLO(8))-Z1EM5)43,46,46                                  CUTT2760
C  IF GREATER THAN ZERO, PT. CIRCLE FOLLOWED BY CORNER CIRCLE OR JUST   CUTT2770
C  CORNER CIRCLE. OTHERWISE PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CUTT2780
C  CIRCLE, AND THEN CORNER CIRCLE                                       CUTT2790
   43 IF(Z1EM5-DABS(TANLO(3))) 44,44,54                                 CUTT2800
   44 IF(TANLO(3))45,45,50                                              CUTT2810
   45 GO TO 39                                                          CUTT2820
   46 IF(TANLO(8))51,47,47                                              CUTT2830
C  IF GREATER THAN ZERO,PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CIR-CUTT2840
C  CLE, AND THEN CORNER CIRCLE. IF = 0, PT. CIRCLE AND CORNER CIRCLE.   CUTT2850
C  ERROR LESS THAN ZERO                                                 CUTT2860
   51 IF(CORRAD(4)*CORRAD(4)-TANLO(1))52,53,50                          CUTT2870
   52 GO TO 39                                                          CUTT2880
C  IF GREATER THAN ZERO, CORNER CIRCLE TANGENT TO LOWER LINE SEGMENT    CUTT2890
   47 IF(Z1EM5-DABS(TANLO(3))) 48,48,55                                 CUTT2900
   48 IF(TANLO(3))49,49,50                                              CUTT2910
   49 GO TO 39                                                          CUTT2920
C  LOWER LINE SEGMENT, PT. CIRCLE, AND CORNER CIRCLE PARAMETER CALC.    CUTT2930
   50 TCONT(3)=DSQRT(TANLO(3))/UMAX(3)                                  CUTT2940
      TANHI(3)=(Z1-TCONT(1)*TCONT(3))/(TCONT(1)+TCONT(3))               CUTT2950
      TLHITE(3)=SINL(2)*UMAX(2)                                         CUTT2970
      RI(3)=COSL(2)*UMAX(2)                                             CUTT2980
      TANLO(3)=TANHI(1)                                                 CUTT2990
      TANLO(4)=TANHI(3)                                                 CUTT3000
      GO TO 56                                                          CUTT3010
   62 IF(Z1EM5-DABS(UMAX(4)-CORRAD(4))) 63,63,64                        CUTT3020
   63 NUMERR=22215                                                      CUTT3030
      GO TO 1000                                                        CUTT3040
C  IF GREATER THAN ZERO, CORNER CIRCLE MEETS UPPER PT. CIRCLE AT UNAC-  CUTT3050
C  CEPTABLE ANGLE. IF = 0 WE MUST CHANGE PARAMETERS FOR UPPER PT. CIRCLECUTT3060
   64 IF(CUTDAT(7)-CUTDAT(4))78,66,63                                   CUTT3070
   78 CALL AERR(-22216,'CUTTEH  ')                                      CUTT3080
      TANLO(7)=(CUTDAT(4)-CUTDAT(7))/(RI(6)+SINL(6)-CUTDAT(3))          CUTT3090
   79 TCONT(6)=Z0                                                       CUTT3110
   80 TANHI(4)=Z0                                                       CUTT3120
      GO TO 85                                                          CUTT3130
C  NO UPPER LINE SEGMENT. CHANGE IN PARAMETERS FOR UPPER POINT CIRCLE   CUTT3140
C  NECESSARY DUE TO NATURE OF CORNER CIRCLE                             CUTT3150
   66 CALL AERR(-22216,'CUTTEH  ')                                      CUTT3160
      TANLO(7)=Z0                                                       CUTT3170
      GO TO 79                                                          CUTT3180
C  IF GREATER THAN ZERO,CORNER CIRCLE AND THEN UPPER PT. CIRCLE. OTHER- CUTT3190
C  WISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN UPPER PT. CIRCLECUTT3200
   69 IF(Z1EM5-DABS(TCONT(7))) 70,70,79                                 CUTT3210
   70 IF(TCONT(7))71,71,83                                              CUTT3220
   71 GO TO 41                                                          CUTT3230
   74 TANHI(4)=TANLO(7)                                                 CUTT3240
      GO TO 84                                                          CUTT3250
   77 IF(Z1EM5-DABS(CORRAD(4)-UMAX(4))) 81,81,78                        CUTT3260
   81 IF(CORRAD(4)-UMAX(4))82,82,83                                     CUTT3270
   82 GO TO 41                                                          CUTT3280
C  FURTHER CALCULATIONS FOR TLLDAT BLOCK PARAMETERS                     CUTT3290
   83 TCONT(5)=DSQRT(TCONT(7))/UMAX(5)                                  CUTT3300
      TANHI(4)=(TCONT(5)+TANLO(7))/(Z1-TCONT(5)*TANLO(7))               CUTT3310
      TANLO(5)=TANHI(4)                                                 CUTT3330
      TANHI(5)=TANLO(7)                                                 CUTT3340
   84 RI(5)=RI(7)-COSL(6)*UMAX(6)                                       CUTT3350
      TLHITE(5)=CUTDAT(7)-SINL(6)*UMAX(6)                               CUTT3360
      TLHITE(6)=TLHITE(5)                                               CUTT3370
      RI(6)=RI(5)                                                       CUTT3380
   85 TLHITE(4)=CUTDAT(4)                                               CUTT3390
      RI(4)=CUTDAT(3)                                                   CUTT3400
   86 TCONT(4)=Z1                                                       CUTT3410
   87 TANLO(1)=Z1E38                                                    CUTT3420
      TLINC(2)=Z1                                                       CUTT3430
      TLINC(6)=Z1                                                       CUTT3440
      TLHITE(7)=CUTDAT(7)                                               CUTT3450
  200 IBEGIN=1                                                          CUTT3460
C  WE NOW SEARCH EACH OF THE 7 POSSIBLE SEGMENTS TO DETERMINE FIRST ONE CUTT3470
   91 IF(TCONT(IBEGIN))90,88,90                                         CUTT3480
   90 TCONT(IBEGIN-1)=-Z1                                               CUTT3490
      TCONT(8)=-Z1                                                      CUTT3500
      TCONT(7)=Z1                                                       CUTT3510
      TANHI(7)=-Z1E38                                                   CUTT3520
      TANHI(8)=-Z1E38                                                   CUTT3530
      TANLO(8)=Z1E38                                                    CUTT3540
      TLINC(8)=Z0                                                       CUTT3550
      CORRAD(8)=Z0                                                      CUTT3560
      ICTDEF=0                                                          CUTT3570
      IAERR=0                                                           CUTT3580
      CALL TLCONV                                                       CUTT3590
      GO TO 9999                                                        CUTT3600
   88 IBEGIN=IBEGIN+1                                                   CUTT3610
      IF(7-IBEGIN)89,91,91                                              CUTT3620
   89 NUMERR=22217                                                      CUTT3630
      GO TO 1000                                                        CUTT3640
   92 IF(CUTDAT(7))4,93,10                                              CUTT3650
   93 IPT1=0                                                            CUTT3660
      TANLO(7)=Z1E38                                                    CUTT3670
      IBEGIN=7                                                          CUTT3680
      GO TO 90                                                          CUTT3681
C                                                                       CUTT3685
C        ** CUTTER PARAMETER ERROR-CALL AERR AND DEFINE POINT CUTTER    CUTT3686
C                                                                       CUTT3687
 1000 IAERFG=1                                                          CUTT3690
      ICTDEF=0                                                          CUTT3691
      CALL AERR(NUMERR,'CUTTEH  ')                                      CUTT3692
 9990 DO 1001 JJ=1,7                                                    CUTT3693
 1001 PARAM(JJ)=Z0                                                      CUTT3694
      NUMBER=K7                                                         CUTT3695
      GO TO 105                                                         CUTT3696
 9999 CONTINUE                                                          CUTT3698
      RETURN                                                            CUTT3699
       END                                                              CUTT3700
C                                                                       CUTT3710
C                                                                       CUTT3720
C                                                                       CUTT3730
C                                                                       CUTT5001
      SUBROUTINE CUTRED                                                 CUTT5010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CUTT5020
C                                                                       CUTT5030
C                                                                       CUTT5040
C                                                                       CUTT5050
C                                                                       CUTT5060
      INCLUDE (TOTAL)                                                   CUTT5191
      INCLUDE (FXCOR)                                                   CUTT5446
      INCLUDE (ZNUMBR)                                                  CUTT5530
      INCLUDE (IFXCOR)                                                  CUTT5670
      INCLUDE (ISHR18)                                                  CUTT5762
      INCLUDE (KNUMBR)                                                  CUTT5764
C                                                                       CUTT5767
C                                                                       CUTT5788
C                                                                       CUTT5893
      INTEGER HCUTER(2)                                                 CUTT5967
      INTEGER BCDF                                                      CUTT5969
C                                                                       CUTT5970
C                                                                       CUTT5974
C     25.   COMMON FOR AERR INFORMATION                                 CUTT5975
C                                                                       CUTT5976
      COMMON /AERCOM / IAERFG                                           CUTT5977
C                                                                       CUTT5980
      COMMON /HSAVE/ SAVEH(50)                                          CUTT5982
      EQUIVALENCE  (SAVEH( 6),PARAM(1) ),(SAVEH(15),NUMBER    )         CUTT5983
C     -----------------------------------------------------------       CUTT5985
C                                                                       CUTT5990
C                                                                       CUTT6000
C...  DEFINES CUTTER SHAPE AND SETS UP TOOL DATA BLOCKS                 CUTT6010
      DIMENSION PARAM(9)                                                CUTT6011
C                                                                       CUTT6012
      HCUTER(1) = BCDF('CUTT')                                          CUTT6014
      HCUTER(2) = BCDF('ER  ')                                          CUTT6015
C                                                                       CUTT6171
C  PLACE ZEROES IN TLLDAT BLOCK                                         CUTT6172
C        CUTRED ROUTINE TO REDEFINE EXISTING CUTTER FOR NEW UNITS/      CUTT6173
  129 DO 1 I=1,8                                                        CUTT6174
      TLHITE(I)=Z0                                                      CUTT6175
      SINL(I)=Z0                                                        CUTT6176
      COSL(I)=Z0                                                        CUTT6177
      UMAX(I)=Z0                                                        CUTT6178
      RI(I)=Z0                                                          CUTT6179
      CORRAD(I)=Z0                                                      CUTT6180
      TCONT(I)=Z0                                                       CUTT6181
      TLINC(I)=Z0                                                       CUTT6182
    1 CONTINUE                                                          CUTT6185
C  MAKE SURE TOOL DIAMETER NOT LESS THAN ZERO                           CUTT6190
      IF(CUTDAT(1))2,92,3                                               CUTT6200
    2 NUMERR=22202                                                      CUTT6210
      GO TO 1000                                                        CUTT6220
C  EXAMINE TOOL HEIGHT. IF LESS THAN ZERO ERROR. SET TO 5 IF = ZERO.    CUTT6230
C  OKAY OTHERWISE                                                       CUTT6240
    3 IF(CUTDAT(7))4,5,6                                                CUTT6250
    4 NUMERR=22203                                                      CUTT6260
      GO TO 1000                                                        CUTT6270
    5 CONTINUE                                                          CUTT6280
C  SUM OF ANGLES A AND B MUST BE LESS THAN 90 DEGREES                   CUTT6290
    6 IF(Z90-CUTDAT(5)-CUTDAT( 6))7,7,8                                 CUTT6300
    7 NUMERR=22204                                                      CUTT6310
      GO TO 1000                                                        CUTT6320
    8 RI(6)=Z5EM1*CUTDAT(1)                                             CUTT6330
      CUTDAT(1)=RI(6)                                                   CUTT6340
C  ERROR IF ANGLE A NEGATIVE                                            CUTT6350
      IF(CUTDAT(5))9,10,11                                              CUTT6360
    9 NUMERR=22205                                                      CUTT6370
      GO TO 1000                                                        CUTT6380
   10 COSL(2)=Z1                                                        CUTT6390
      TANHI(1)=Z1E38                                                    CUTT6400
      GO TO 12                                                          CUTT6410
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR A GREATER THAN ZERO CUTT6420
   11 TLHITE(8)=DEGRAD*CUTDAT(5)                                        CUTT6430
      SINL(2)=DSIN(TLHITE(8))                                           CUTT6440
      COSL(2)=DCOS(TLHITE(8))                                           CUTT6450
      TCONT(1)=SINL(2)/COSL(2)                                          CUTT6460
      TLHITE(6)=TCONT(1)*RI(6)                                          CUTT6470
      TANHI(1)=Z1/TCONT(1)                                              CUTT6480
C  MAKE SURE HEIGHT OF BOTTOM LINE SEGMENT DOES NOT EXCEED TOOL HEIGHT  CUTT6490
   12 IF(Z1EM5-DABS(CUTDAT(7)-TLHITE(6))) 13,13,15                      CUTT6500
   13 IF(CUTDAT(7)-TLHITE(6))14,14,16                                   CUTT6510
   14 NUMERR=22206                                                      CUTT6520
      GO TO 1000                                                        CUTT6530
   15 TLHITE(6)=CUTDAT(7)                                               CUTT6540
C  ERROR IF ANGLE B NEGATIVE                                            CUTT6550
   16 IPT1=K1                                                           CUTT6560
      IF(CUTDAT(6))17,18,19                                             CUTT6570
C                    BELL SHAPED CUTTER                                 CUTT6578
   17 CALL AERR (-22207,'CUTRED  ')                                     CUTT6580
      GO TO 19                                                          CUTT6590
   18 SINL(6)=Z1                                                        CUTT6600
      GO TO 20                                                          CUTT6610
C  COMPUTE PARAMETERS FOR CERTAIN TOOL SEGMENTS FOR B GREATER THAN ZERO CUTT6620
   19 TANHI(8)=DEGRAD*CUTDAT(6)                                         CUTT6630
      SINL(6)=DCOS(TANHI(8))                                            CUTT6640
      COSL(6)=DSIN(TANHI(8))                                            CUTT6650
      TANLO(7)=COSL(6)/TANHI(7)                                         CUTT6660
C  FURTHER CALCULATIONS                                                 CUTT6670
   20 UMAX(2)=RI(6)/COSL(2)                                             CUTT6680
      UMAX(6)=(CUTDAT(7)-TLHITE(6))/SINL(6)                             CUTT6690
      RI(7)=RI(6)+COSL(6)*UMAX(6)                                       CUTT6700
      TCONT(2)=Z1                                                       CUTT6710
      TCONT(6)=Z1                                                       CUTT6720
C  EXAMINE TOOL RADIUS. IF GREATER THAN ZERO, CORNER CIRCLE WILL BE PARTCUTT6730
C  OF TOOL CONFIGURATION. IF = ZERO, TOOL WILL CONSIST ONLY OF LINE AND CUTT6740
C  POINT CIRCLE SEGMENTS. ERROR IF NEGATIVE.                            CUTT6750
      IF(CUTDAT(2))21,22,25                                             CUTT6760
   21 NUMERR=22208                                                      CUTT6770
      GO TO 1000                                                        CUTT6780
C  COMPARE LENGTH OF UPPER LINE SEGMENT TO ZERO. SET VALUES IN TLLDAT   CUTT6790
C  BLOCK ACCORDINGLY                                                    CUTT6800
   22 IF(UMAX(6))23,23,24                                               CUTT6810
   23 TANLO(7)=TANHI(1)                                                 CUTT6820
      TCONT(6)=Z0                                                       CUTT6830
      GO TO 87                                                          CUTT6840
   24 TLHITE(4)=TLHITE(6)                                               CUTT6850
      RI(4)=RI(6)                                                       CUTT6860
      TANHI(4)=TANLO(7)                                                 CUTT6870
      TANLO(4)=TANHI(1)                                                 CUTT6880
      GO TO 86                                                          CUTT6890
C  COMPUTE CENTER OF CORNER CIRCLE                                      CUTT6900
   27 CUTDAT(3)=RI(6)-CORRAD(4)                                         CUTT6910
      CUTDAT(4)=CORRAD(4)                                               CUTT6920
      GO TO 26                                                          CUTT6930
C  STORE RADIUS OF CORNER CIRCLE AND COMPUTE DISTANCE FROM CENTER OF    CUTT6940
C  CIRCLE TO BOTTOM LINE (UMAX(3))                                      CUTT6950
   25 CORRAD(4)=CUTDAT(2)                                               CUTT6960
   26 UMAX(3)=CUTDAT(4)*COSL(2)-CUTDAT(3)*SINL(2)                       CUTT6970
      TANLO(1)=CUTDAT(3)*CUTDAT(3)+CUTDAT(4)*CUTDAT(4)                  CUTT6980
C  IF = 0, CENTER OF CORNER CIRCLE HAS TO BE CALCULATED                 CUTT6990
      IF(TANLO(1)+CUTDAT(5)+CUTDAT(6)*CUTDAT(6))28,27,28                CUTT7000
C  DISTANCE FROM CENTER OF CIRCLE TO INTERSECTION OF LINE SEGMENTS      CUTT7010
   28 UMAX(1)=DSQRT((CUTDAT(3)-RI(6))*(CUTDAT(3)-RI(6))                 CUTT7020
     1        +(CUTDAT(4)-TLHITE(6))*(CUTDAT(4)-TLHITE(6)))             CUTT7030
      UMAX(7)=TANLO(7)*(CUTDAT(7)-TLHITE(6))                            CUTT7050
C  DISTANCE FROM CENTER OF CIRCLE TO UPPER END OF UPPER LINE SEGMENT    CUTT7060
      UMAX(4)=DSQRT((CUTDAT(4)-CUTDAT(7))*(CUTDAT(4)-CUTDAT(7))         CUTT7070
     1        +(CUTDAT(3)-RI(7))*(CUTDAT(3)-RI(7)))                     CUTT7080
C  IF THE Y COORD. (F) OF THE CENTER OF THE CORNER CIRCLE IS LESS THAN  CUTT7090
C  THE Y COORD. OF THE INTERSECTION OF THE LINES, THEN ERROR            CUTT7100
      IF(CUTDAT(4)+Z1EM5-TLHITE(6))29,29,30                             CUTT7110
   29 NUMERR=22209                                                      CUTT7120
      GO TO 1000                                                        CUTT7130
C  IF THE RADIUS IS BOTH LARGER THAN THE DISTANCE TO THE INTERSECTION   CUTT7140
C  OF THE LINES AND DIFFERENT THAN THE DISTANCE TO THE ORIGIN OF THE    CUTT7150
C  BOTTOM LINE SEGMENT, WE HAVE AN INVALID TOOL CONFIGURATION           CUTT7160
   33 IF(Z1EM5-DABS(TANLO(1)-CORRAD(4)*CORRAD(4))) 34,34,35             CUTT7170
   34 NUMERR=22210                                                      CUTT7180
      GO TO 1000                                                        CUTT7190
C  IF E GREATER THAN ZERO, WE HAVE AN INVALID TOOL CONFIGURATION        CUTT7200
   35 IF(CUTDAT(3))53,37,34                                             CUTT7210
   53 CALL AERR(-22211,'CUTRED  ')                                      CUTT7220
      TANHI(1)=CUTDAT(4)/CUTDAT(3)                                      CUTT7230
      TCONT(1)=CUTDAT(3)/CUTDAT(4)                                      CUTT7240
C  NO LOWER LINE SEGMENT                                                CUTT7250
   54 TCONT(2)=Z0                                                       CUTT7260
C  FURTHER TLLDAT VARIABLES                                             CUTT7270
   55 TANLO(4)=TANHI(1)                                                 CUTT7280
   56 UMAX(5)=(RI(6)-CUTDAT(3))*SINL(6)+COSL(6)*(CUTDAT(4)-TLHITE(6))   CUTT7290
C  IF = 0, THERE IS NO UPPER LINE SEGMENT AND IN THIS CASE TOOL NO GOOD CUTT7310
      IF(UMAX(6))67,57,67                                               CUTT7320
C  IF GREATER THAN ZERO, RADIUS AND DISTANCE FROM CENTER OF CORNER      CUTT7330
C  CIRCLE TO INTERSECTION OF LINES EQUAL.                               CUTT7340
   67 IF(CORRAD(4)-UMAX(1))68,68,62                                     CUTT7350
   68 TCONT(7)=CORRAD(4)*CORRAD(4)-UMAX(5)*UMAX(5)                      CUTT7360
C  LENGTH OF UPPER LINE SEGMENT                                         CUTT7370
      UMAX(6)=UMAX(6)+DSQRT(DABS(TCONT(7)))                             CUTT7380
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(5)*UMAX(5))                    CUTT7390
      UMAX(8)=CUTDAT(4)-CUTDAT(7)-TANLO(7)*(UMAX(7)+RI(6)-CUTDAT(3))    CUTT7400
      IF(Z1EM5-DABS(UMAX(8))) 72,72,69                                  CUTT7420
   72 IF(UMAX(8))73,73,77                                               CUTT7430
C  IF GREATER THAN ZERO, UPPER LINE SEGMENT WITH CORNER CIRCLE TANGENT. CUTT7440
C  OTHERWISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN PT. CIRCLE CUTT7450
   73 IF(Z1EM5-DABS(TCONT(7))) 75,75,74                                 CUTT7460
   75 IF(TCONT(7))76,76,83                                              CUTT7470
   76 GO TO 41                                                          CUTT7480
   57 NUMERR=22212                                                      CUTT7490
      GO TO 1000                                                        CUTT7500
C  WE MUST CHANGE PARAMETERS FOR BOTTOM POINT CIRCLE DUE TO NATURE OF   CUTT7510
C  CORNER CIRCLE                                                        CUTT7520
   37 CALL AERR(-22211,'CUTRED  ')                                      CUTT7530
      TCONT(1)=Z0                                                       CUTT7540
      TANHI(1)=Z1E38                                                    CUTT7550
      GO TO 54                                                          CUTT7560
C  IF GREATER THAN OR EQUAL TO ZERO, CORNER CIRCLE IS A POINT CIRCLE    CUTT7570
   30 IF(Z1EM5-DABS(CORRAD(4)-UMAX(1))) 32,31,31                        CUTT7580
   31 CORRAD(4) = 0.                                                    CUTT7582
      TANLO(1) = 0.                                                     CUTT7584
      UMAX(1) = 0.                                                      CUTT7586
      UMAX(3) = 0.                                                      CUTT7588
      UMAX(4) = 0.                                                      CUTT7590
      UMAX(7) = 0.                                                      CUTT7592
      CUTDAT(2) = 0.                                                    CUTT7594
      CUTDAT(3) = 0.                                                    CUTT7596
      CUTDAT(4) = 0.                                                    CUTT7598
      GO TO 22                                                          CUTT7600
   32 IF (CORRAD(4)-UMAX(1)) 38,38,33                                   CUTT7602
   38 IF(RI(6)+TCONT(1)*(TLHITE(6)-CUTDAT(4))-                          CUTT7610
     1CUTDAT(3)+Z1EM5)39,39,40                                          CUTT7620
C  CORNER CIRCLE INTERSECTS LOWER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTT7630
   39 NUMERR=22213                                                      CUTT7640
      GO TO 1000                                                        CUTT7650
   40 IF(CUTDAT(4)+Z1EM5-TLHITE(6)-TANLO(7)*(RI(6)-                     CUTT7660
     1CUTDAT(3)))41,41,42                                               CUTT7670
C  CORNER CIRCLE INTERSECTS UPPER LINE SEGMENT AT AN UNACCEPTABLE ANGLE CUTT7680
   41 NUMERR=22214                                                      CUTT7690
      GO TO 1000                                                        CUTT7700
   42 TANLO(3)=CORRAD(4)*CORRAD(4)-UMAX(3)*UMAX(3)                      CUTT7710
      IF(TANLO(3).LT.Z0)GO TO 39                                        CUTT7715
C  LENGTH OF LOWER LINE SEGMENT                                         CUTT7720
      UMAX(2)=UMAX(2)+DSQRT(TANLO(3))                                   CUTT7730
     1       -DSQRT(UMAX(1)*UMAX(1)-UMAX(3)*UMAX(3))                    CUTT7740
      TANLO(8)=CUTDAT(3)+TCONT(1)*CUTDAT(4)                             CUTT7750
      IF(DABS(TANLO(8))-Z1EM5)43,46,46                                  CUTT7760
C  IF GREATER THAN ZERO, PT. CIRCLE FOLLOWED BY CORNER CIRCLE OR JUST   CUTT7770
C  CORNER CIRCLE. OTHERWISE PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CUTT7780
C  CIRCLE, AND THEN CORNER CIRCLE                                       CUTT7790
   43 IF(Z1EM5-DABS(TANLO(3))) 44,44,54                                 CUTT7800
   44 IF(TANLO(3))45,45,50                                              CUTT7810
   45 GO TO 39                                                          CUTT7820
   46 IF(TANLO(8))51,47,47                                              CUTT7830
C  IF GREATER THAN ZERO,PT. CIRCLE (MAYBE), LOWER LINE SEGMENT, PT. CIR-CUTT7840
C  CLE, AND THEN CORNER CIRCLE. IF = 0, PT. CIRCLE AND CORNER CIRCLE.   CUTT7850
C  ERROR LESS THAN ZERO                                                 CUTT7860
   51 IF(CORRAD(4)*CORRAD(4)-TANLO(1))52,53,50                          CUTT7870
   52 GO TO 39                                                          CUTT7880
C  IF GREATER THAN ZERO, CORNER CIRCLE TANGENT TO LOWER LINE SEGMENT    CUTT7890
   47 IF(Z1EM5-DABS(TANLO(3))) 48,48,55                                 CUTT7900
   48 IF(TANLO(3))49,49,50                                              CUTT7910
   49 GO TO 39                                                          CUTT7920
C  LOWER LINE SEGMENT, PT. CIRCLE, AND CORNER CIRCLE PARAMETER CALC.    CUTT7930
   50 TCONT(3)=DSQRT(TANLO(3))/UMAX(3)                                  CUTT7940
      TANHI(3)=(Z1-TCONT(1)*TCONT(3))/(TCONT(1)+TCONT(3))               CUTT7950
      TLHITE(3)=SINL(2)*UMAX(2)                                         CUTT7970
      RI(3)=COSL(2)*UMAX(2)                                             CUTT7980
      TANLO(3)=TANHI(1)                                                 CUTT7990
      TANLO(4)=TANHI(3)                                                 CUTT8000
      GO TO 56                                                          CUTT8010
   62 IF(Z1EM5-DABS(UMAX(4)-CORRAD(4))) 63,63,64                        CUTT8020
   63 NUMERR=22215                                                      CUTT8030
      GO TO 1000                                                        CUTT8040
C  IF GREATER THAN ZERO, CORNER CIRCLE MEETS UPPER PT. CIRCLE AT UNAC-  CUTT8050
C  CEPTABLE ANGLE. IF = 0 WE MUST CHANGE PARAMETERS FOR UPPER PT. CIRCLECUTT8060
   64 IF(CUTDAT(7)-CUTDAT(4))78,66,63                                   CUTT8070
   78 CALL AERR(-22216,'CUTRED  ')                                      CUTT8080
      TANLO(7)=(CUTDAT(4)-CUTDAT(7))/(RI(6)+SINL(6)-CUTDAT(3))          CUTT8090
   79 TCONT(6)=Z0                                                       CUTT8110
   80 TANHI(4)=Z0                                                       CUTT8120
      GO TO 85                                                          CUTT8130
C  NO UPPER LINE SEGMENT. CHANGE IN PARAMETERS FOR UPPER POINT CIRCLE   CUTT8140
C  NECESSARY DUE TO NATURE OF CORNER CIRCLE                             CUTT8150
   66 CALL AERR(-22216,'CUTRED  ')                                      CUTT8160
      TANLO(7)=Z0                                                       CUTT8170
      GO TO 79                                                          CUTT8180
C  IF GREATER THAN ZERO,CORNER CIRCLE AND THEN UPPER PT. CIRCLE. OTHER- CUTT8190
C  WISE CORNER CIRCLE, PT. CIRCLE, UPPER LINE, AND THEN UPPER PT. CIRCLECUTT8200
   69 IF(Z1EM5-DABS(TCONT(7))) 70,70,79                                 CUTT8210
   70 IF(TCONT(7))71,71,83                                              CUTT8220
   71 GO TO 41                                                          CUTT8230
   74 TANHI(4)=TANLO(7)                                                 CUTT8240
      GO TO 84                                                          CUTT8250
   77 IF(Z1EM5-DABS(CORRAD(4)-UMAX(4))) 81,81,78                        CUTT8260
   81 IF(CORRAD(4)-UMAX(4))82,82,83                                     CUTT8270
   82 GO TO 41                                                          CUTT8280
C  FURTHER CALCULATIONS FOR TLLDAT BLOCK PARAMETERS                     CUTT8290
   83 TCONT(5)=DSQRT(TCONT(7))/UMAX(5)                                  CUTT8300
      TANHI(4)=(TCONT(5)+TANLO(7))/(Z1-TCONT(5)*TANLO(7))               CUTT8310
      TANLO(5)=TANHI(4)                                                 CUTT8330
      TANHI(5)=TANLO(7)                                                 CUTT8340
   84 RI(5)=RI(7)-COSL(6)*UMAX(6)                                       CUTT8350
      TLHITE(5)=CUTDAT(7)-SINL(6)*UMAX(6)                               CUTT8360
      TLHITE(6)=TLHITE(5)                                               CUTT8370
      RI(6)=RI(5)                                                       CUTT8380
   85 TLHITE(4)=CUTDAT(4)                                               CUTT8390
      RI(4)=CUTDAT(3)                                                   CUTT8400
   86 TCONT(4)=Z1                                                       CUTT8410
   87 TANLO(1)=Z1E38                                                    CUTT8420
      TLINC(2)=Z1                                                       CUTT8430
      TLINC(6)=Z1                                                       CUTT8440
      TLHITE(7)=CUTDAT(7)                                               CUTT8450
  200 IBEGIN=1                                                          CUTT8460
C  WE NOW SEARCH EACH OF THE 7 POSSIBLE SEGMENTS TO DETERMINE FIRST ONE CUTT8470
   91 IF(TCONT(IBEGIN))90,88,90                                         CUTT8480
   90 TCONT(IBEGIN-1)=-Z1                                               CUTT8490
      TCONT(8)=-Z1                                                      CUTT8500
      TCONT(7)=Z1                                                       CUTT8510
      TANHI(7)=-Z1E38                                                   CUTT8520
      TANHI(8)=-Z1E38                                                   CUTT8530
      TANLO(8)=Z1E38                                                    CUTT8540
      TLINC(8)=Z0                                                       CUTT8550
      CORRAD(8)=Z0                                                      CUTT8560
      ICTDEF=0                                                          CUTT8570
      IAERR=0                                                           CUTT8580
      CALL TLCONV                                                       CUTT8590
      GO TO 9999                                                        CUTT8600
   88 IBEGIN=IBEGIN+1                                                   CUTT8610
      IF(7-IBEGIN)89,91,91                                              CUTT8620
   89 NUMERR=22217                                                      CUTT8630
      GO TO 1000                                                        CUTT8640
   92 IF(CUTDAT(7))4,93,10                                              CUTT8650
   93 IPT1=0                                                            CUTT8660
      TANLO(7)=Z1E38                                                    CUTT8670
      IBEGIN=7                                                          CUTT8680
      GO TO 90                                                          CUTT8681
C                                                                       CUTT8685
C        ** CUTTER PARAMETER ERROR-CALL AERR AND DEFINE POINT CUTTER    CUTT8686
C                                                                       CUTT8687
 1000 IAERFG=1                                                          CUTT8690
      ICTDEF=0                                                          CUTT8691
      CALL AERR(NUMERR,'CUTRED  ')                                      CUTT8692
 9990 DO 1001 JJ=1,7                                                    CUTT8693
 1001 PARAM(JJ)=Z0                                                      CUTT8694
      NUMBER=K7                                                         CUTT8695
C                                                                       CUTT8700
      ICTDEF=K1                                                         CUTT8730
C...  ZERO CUTTER PARAMETER STORAGE AREA                                CUTT8740
      DO 110 J=1,7                                                      CUTT8750
  110 CUTDAT(J)=Z0                                                      CUTT8760
      CUTDAT(7) = TLHIT                                                 CUTT8765
      IF(NUMBER-K7)126,126,125                                          CUTT8770
  125 NUMERR=22201                                                      CUTT8790
      GO TO 1000                                                        CUTT8800
  126 DO 127 J=1,NUMBER                                                 CUTT8840
  127 CUTDAT(J)=PARAM(J)                                                CUTT8850
C  WRITE CUTTER STATEMENT ON EXFILE                                     CUTT8855
      CALL APT299(NUMBER,HCUTER,1,PARAM(1))                             CUTT8860
      IF(NUMBER.LE.1) GO TO 129                                         CUTT8862
      KK=1                                                              CUTT8864
      DO 128 I=2,NUMBER,2                                               CUTT8866
      IF(I.EQ.NUMBER) KK=0                                              CUTT8868
  128 CALL APT299(1,PARAM(I),KK,PARAM(I+1))                             CUTT8870
      GO TO 129                                                         CUTT8880
C                                                                       CUTT8890
 9999 CONTINUE                                                          CUTT8898
      RETURN                                                            CUTT8899
       END                                                              CUTT8900
**** SOURCE FILE : M0004132.IBM;2   ***
*
C                                                                       GO000001
C                                                                       GO000002
      SUBROUTINE GO(HMOD,ADRESS)                                        GO000010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              GO000020
C                                                                       GO000028
      INCLUDE (TOTAL)                                                   GO000029
      INCLUDE (LDEF)                                                    GO000111
      INCLUDE (IFXCOR)                                                  GO000301
C                                                                       GO000302
      DIMENSION ADRESS(*)                                               GO000310
      IF(JDS) CALL APT211(0,'NOCS    ',IDUM)                            GO000315
      CALL APT241                                                       GO000320
      IF(IAERR.EQ.1)GO TO 10                                            GO000330
C-VAX-ESTABLISH CONDITION HANDLER                                       GO000332
C      CALL APT241                                                      GO000334
   20 IF(ICTDEF.NE.0.AND.IGOTO.EQ.0)CALL AERR(20201,'GO      ')         GO000340
C     IF (IAERR.EQ.1) GOTO 10                                           GO000342
      CALL GO2(HMOD,ADRESS)                                             GO000350
C     IF (IAERR.EQ.1) GOTO 20                                           GO000352
   10 CONTINUE                                                          GO000356
      RETURN                                                            GO000360
      END                                                               GO000370
**** SOURCE FILE : OUTSET00.IBM;1   ***
*
      SUBROUTINE OUTSET(J)                                              00000100
*                                                                       00000200
*  * OUTSET *  VAX-11 FORTRAN 77 SUBROUTINE   E.MCLELLAN                00000300
*                                                                       00000400
*  PURPOSE     TO SET UP PAPER TAPE CODE CONVERSION TABLE               00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL OUTSET(J)                                           00000800
*  ARGUMENT                                                             00000900
*              J  INDICATES REQUIRED CODE                               00001000
*                 =1  NAS943  ,ODD PARITY, COLUMN BINARY                00001100
*                 =2  ISO     ,EVEN PARITY,COLUMN BINARY                00001200
*                 =3  ASCII   ,NO PARITY,  NO CONVERSION                00001300
*                                                                       00001400
C                                                                       00001500
      INCLUDE (DARRAY)                                                  00001600
C                                                                       00001700
      COMMON/PUNTAB/PUNCOD                                              00001800
C                                                                       00001900
C...LOGICAL*1 VARIABLES IN THIS IBM IMPLEMENTATION MIGHT BE ABLE TO BE  00002000
C...BYTE VARIABLES ON OTHER SYSTEMS  E.G. VAX                           00002100
      LOGICAL*1 PUNCOD(128)                                             00002200
      LOGICAL*1 NAS943(128),ISO(128),ASCII(128)                         00002300
*                                                                       00002400
******  NAS943 ODD PARITY COLUMN BINARY                                 00002500
*                                                                       00002600
      DATA NAS943/                                                      00002700
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F    00002800
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z3E,ZEE,ZEE,ZEE,Z80,ZEE,ZEE,  00002900
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00003000
     2Z10,ZEE,ZEE,Z7F,Z80,Z0B,Z70,ZEE,Z0B,Z2A,Z3E,Z70,Z3B,Z40,Z6B,Z31,  00003100
     3Z20,Z01,Z02,Z13,Z04,Z15,Z16,Z07,Z08,Z19,Z7C,Z7A,ZEE,Z7F,ZEE,ZEE,  00003200
     4Z0E,Z61,Z62,Z73,Z64,Z75,Z76,Z67,Z68,Z79,Z51,Z52,Z43,Z54,Z45,Z46,  00003300
     5Z57,Z58,Z49,Z32,Z23,Z34,Z25,Z26,Z37,Z38,Z29,ZEE,ZEE,ZEE,ZEE,ZEE,  00003400
     6ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00003500
     7ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE/  00003600
*                                                                       00003700
******  ISO/                                                            00003800
*                                                                       00003900
      DATA ISO/                                                         00004000
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F    00004100
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z09,Z0A,ZEE,ZEE,Z8D,ZEE,ZEE,  00004200
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00004300
     2ZA0,ZEE,ZEE,ZA3,Z24,ZA5,ZA6,Z27,Z28,ZA9,ZAA,Z2B,ZAC,Z2D,Z2E,ZAF,  00004400
     3Z30,ZB1,ZB2,Z33,ZB4,Z35,Z36,ZB7,ZB8,Z39,Z3A,ZEE,ZEE,ZEE,ZEE,ZEE,  00004500
     4ZC0,Z41,Z42,ZC3,Z44,ZC5,ZC6,Z47,Z48,ZC9,ZCA,Z4B,ZCC,Z4D,Z4E,ZCF,  00004600
     5Z50,ZD1,ZD2,Z53,ZD4,Z55,Z56,ZD7,ZD8,Z59,Z5A,ZEE,ZEE,ZEE,ZEE,ZEE,  00004700
     6ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00004800
     7ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZFF/  00004900
*                                                                       00005000
******  ASCII 7 BIT NO PARITY                                           00005100
*                                                                       00005200
      DATA ASCII/                                                       00005300
*      0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F    00005400
     *Z00,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,Z09,Z0A,ZEE,ZEE,Z0D,ZEE,ZEE,  00005500
     1ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,ZEE,  00005600
     2Z20,Z21,Z22,Z23,Z24,Z25,Z26,Z27,Z28,Z29,Z2A,Z2B,Z2C,Z2D,Z2E,Z2F,  00005700
     3Z30,Z31,Z32,Z33,Z34,Z35,Z36,Z37,Z38,Z39,Z3A,Z3B,Z3C,Z3D,Z3E,Z3F,  00005800
     4Z40,Z41,Z42,Z43,Z44,Z45,Z46,Z47,Z48,Z49,Z4A,Z4B,Z4C,Z4D,Z4E,Z4F,  00005900
     5Z50,Z51,Z52,Z53,Z54,Z55,Z56,Z57,Z58,Z59,Z5A,Z5B,Z5C,Z5D,Z5E,Z5F,  00006000
     6Z60,Z61,Z62,Z63,Z64,Z65,Z66,Z67,Z68,Z69,Z6A,Z6B,Z6C,Z6D,Z6E,Z6F,  00006100
     7Z70,Z71,Z72,Z73,Z74,Z75,Z76,Z77,Z78,Z79,Z7A,ZEE,ZEE,ZEE,ZEE,Z7F/  00006200
*                                                                       00006300
      IF (J.EQ.1) THEN                                                  00006400
         DO 100 I=1,128                                                 00006500
  100    PUNCOD(I)=NAS943(I)                                            00006600
*                                                                       00006700
      ELSE IF (J.EQ.2) THEN                                             00006800
         DO 200 I=1,128                                                 00006900
  200    PUNCOD(I)=ISO(I)                                               00007000
*                                                                       00007100
      ELSE IF (J.EQ.3) THEN                                             00007200
         DO 300 I=1,128                                                 00007300
  300    PUNCOD(I)=ASCII(I)                                             00007400
*                                                                       00007500
      ELSE                                                              00007600
         CALL CFORM('**** INVALID ARGUMENT IN CALL TO OUTSET ****',     00007700
     1               DARRAY,2,44)                                       00007800
         CALL CPRINT(DARRAY)                                            00007900
         CALL ABNEND                                                    00008000
      END IF                                                            00008100
      RETURN                                                            00008200
      END                                                               00008300
**** SOURCE FILE : PARNOM00.IBM;1   ***
*
      SUBROUTINE PARNOM(N,A,J)                                          00000100
*                                                                       00000200
*  * PARNOM *  VAX-11 FORTRAN 77 VERSION  26.10.82  E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     PUNCH COLUMN BINARY MATRIX REPRESENTATION OF             00000500
*              CHARACTERS USED FOR PUNCH TAPE IDENTIFICATION            00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL PARNOM(N,A,J)                                       00000800
*  ARGUMENTS                                                            00000900
*              N  NUMBER OF BCD CHARACTERS TO BE CONVERTED (MAX 504)    00001000
*              A  ARRAY CONTAINING BCD CHARACTERS TO BE CONVERTED       00001100
*                 FORMAT A6,2X (6 BCD CHARACTERS FOLLOWED BY 2 BLANKS)  00001200
*                 THE BLANKS  ARE IGNORED                               00001300
*              J  J=0  5*7 MATRIX, COLUMN BINARY, ODD PARITY            00001400
*                  =1  IGNORED                                          00001500
*                  =2  5*6 MATRIX, COLUMN BINARY, NO PARITY             00001600
*  ALTERNATE ENTRY                                                      00001700
*              CALL PARNEM(N,A)                                         00001800
*                   PUNCHES A 5*7 MATRIX,COLUMN BINARY,EVEN PARITY      00001900
*                                                                       00002000
*  NOTE:       THE ALLOWABLE CHARACTERS ARE 0 THRO 9, A THRU Z,         00002100
*              AND !"#$%&'()*+,-./:;<=>?@[\]^_                          00002200
*              IE THE COMPLETE ASCII CHARACTER SET LESS LOWER CASE      00002300
*                                                                       00002400
      DOUBLE PRECISION A(84)                                            00002500
      CHARACTER INFIL*504                                               00002600
*                                                                       00002700
C                                                                       00002800
C...LOGICAL*1 VARIABLES IN THIS IBM IMPLEMENTATION MIGHT BE ABLE TO BE  00002900
C...BYTE VARIABLES ON OTHER SYSTEMS E.G. VAX                            00003000
      LOGICAL*1 OUT(3024),TABO(6,64),TABE(6,64),TAB56(6,64),CODE(6,64)  00003100
      LOGICAL*1 TBO1(6,32),TBO2(6,32),TBE1(6,32),TBE2(6,32),            00003200
     1          TB561(6,32),TB562(6,32)                                 00003300
C                                                                       00003400
      EQUIVALENCE (TABO(1,1),TBO1(1,1)),(TABO(1,33),TBO2(1,1)),         00003500
     1            (TABE(1,1),TBE1(1,1)),(TABE(1,33),TBE2(1,1)),         00003600
     2            (TAB56(1,1),TB561(1,1)),(TAB56(1,33),TB562(1,1))      00003700
*                                                                       00003800
      INCLUDE (DARRAY)                                                  00003900
*                                                                       00004000
******   TABLE FOR 5X7 MATRIX OUTPUT , ODD PARITY , COLUMN BINARY       00004100
*                                                                       00004200
      DATA TBO1/                                                        00004300
*              BLANK                      !                             00004400
     1Z80,Z80,Z80,Z80,Z80,Z80, Z80,Z80,Z5E,Z80,Z80,Z80,                 00004500
*                "                        #                             00004600
     2Z80,Z07,Z80,Z07,Z80,Z80, Z94,Z3E,Z94,Z3E,Z94,Z80,                 00004700
*                $                        %                             00004800
     3ZAE,Z2A,Z7F,Z2A,ZAE,Z80, ZE3,Z13,Z08,Z34,ZE3,Z80,                 00004900
*                &                        `                             00005000
     4ZFB,Z45,Z6B,Z10,Z68,Z80, Z80,Z80,Z07,Z80,Z80,Z80,                 00005100
*                (                        )                             00005200
     5Z80,Z1C,ZA2,ZC1,ZC1,Z80, Z80,ZC1,ZC1,ZA2,Z1C,Z80,                 00005300
*                *                        +                             00005400
     6Z08,Z2A,Z1C,Z2A,Z08,Z80, Z08,Z08,Z3E,Z08,Z08,Z80,                 00005500
*                ,                        -                             00005600
     7Z80,Z80,ZD0,ZB0,Z80,Z80, Z08,Z08,Z08,Z08,Z08,Z80,                 00005700
*                .                        /                             00005800
     8Z80,Z80,ZE0,ZE0,Z80,Z80, Z20,Z10,Z08,Z04,Z02,Z80,                 00005900
*                0                        1                             00006000
     9Z3E,ZC1,ZC1,ZC1,Z3E,Z80, Z80,Z02,Z7F,Z80,Z80,Z80,                 00006100
*                2                        3                             00006200
     AZC2,Z61,Z51,Z49,Z46,Z80, ZA1,ZC1,Z49,ZCD,ZB3,Z80,                 00006300
*                4                        5                             00006400
     BZ98,Z94,Z92,Z7F,Z10,Z80, ZA7,Z45,Z45,Z45,ZB9,Z80,                 00006500
*                6                        7                             00006600
     CZBC,ZC2,Z49,Z49,ZB0,Z80, Z01,Z01,Z79,Z85,Z83,Z80,                 00006700
*                8                        9                             00006800
     DZB6,Z49,Z49,Z49,ZB6,Z80, Z86,Z49,Z49,ZA1,Z9E,Z80,                 00006900
*                :                        ;                             00007000
     EZ80,Z80,ZB6,ZB6,Z80,Z80, Z80,Z80,ZD6,ZB6,Z80,Z80,                 00007100
*                <                        =                             00007200
     FZ08,Z94,ZA2,ZC1,Z80,Z80, ZA2,ZA2,ZA2,ZA2,ZA2,Z80,                 00007300
*                >                        ?                             00007400
     GZ80,ZC1,ZA2,Z94,Z08,Z80, Z02,Z01,ZD9,Z85,Z02,Z80/                 00007500
      DATA TBO2/                                                        00007600
*                @                        A                             00007700
     1Z3E,ZC1,Z5D,ZD5,Z5E,Z80, ZFE,Z91,Z91,Z91,ZFE,Z80,                 00007800
*                B                        C                             00007900
     2Z7F,Z49,Z49,Z49,ZB6,Z80, Z3E,ZC1,ZC1,ZC1,ZA2,Z80,                 00008000
*                D                        E                             00008100
     3Z7F,ZC1,ZC1,ZC1,ZE3,Z80, Z7F,Z49,Z49,Z49,ZC1,Z80,                 00008200
*                F                        G                             00008300
     4Z7F,Z89,Z89,Z89,Z01,Z80, ZE3,ZC1,ZC1,Z49,Z79,Z80,                 00008400
*                H                        I                             00008500
     5Z7F,Z08,Z08,Z08,Z7F,Z80, Z80,ZC1,Z7F,ZC1,Z80,Z80,                 00008600
*                J                        K                             00008700
     6Z20,Z40,Z40,ZBF,Z80,Z80, Z7F,Z08,Z94,ZA2,ZC1,Z80,                 00008800
*                L                        M                             00008900
     7Z7F,Z40,Z40,Z40,Z40,Z80, Z7F,Z02,Z8C,Z02,Z7F,Z80,                 00009000
*                N                        O                             00009100
     8Z7F,Z02,Z04,Z08,Z7F,Z80, Z3E,Z51,Z49,Z45,Z3E,Z80,                 00009200
*                P                        Q                             00009300
     9Z7F,Z89,Z89,Z89,Z86,Z80, Z3E,ZC1,Z51,ZA1,Z5E,Z80,                 00009400
*                R                        S                             00009500
     AZ7F,Z89,Z19,Z29,Z46,Z80, Z46,Z49,Z49,Z49,Z31,Z80,                 00009600
*                T                        U                             00009700
     BZ01,Z01,Z7F,Z01,Z01,Z80, ZBF,Z40,Z40,Z40,ZBF,Z80,                 00009800
*                V                        W                             00009900
     CZ8F,ZB0,Z40,ZB0,Z8F,Z80, ZBF,Z40,ZBC,Z40,ZBF,Z80,                 00010000
*                X                        Y                             00010100
     DZE3,Z94,Z08,Z94,ZE3,Z80, Z07,Z08,Z70,Z08,Z07,Z80,                 00010200
*                Z                        [                             00010300
     EZ61,Z51,Z49,Z45,Z43,Z80, Z7F,Z7F,ZC1,ZC1,ZC1,Z80,                 00010400
*                \                        ]                             00010500
     FZ02,Z04,Z08,Z20,Z40,Z80, ZC1,ZC1,ZC1,Z7F,Z7F,Z80,                 00010600
*                ^                        _                             00010700
     GZ04,Z02,Z01,Z02,Z04,Z80, Z40,Z40,Z40,Z40,Z40,Z80/                 00010800
******   TABLE FOR 5X7 MATRIX OUTPUT ,EVEN PARITY , COLUMN BINARY       00010900
*                                                                       00011000
      DATA TBE1/                                                        00011100
*              BLANK                      !                             00011200
     1ZC0,ZC0,ZC0,ZC0,ZC0,ZC0, ZC0,ZC0,Z2F,ZC0,ZC0,ZC0,                 00011300
*                "                        #                             00011400
     2ZC0,Z87,ZC0,Z87,ZC0,ZC0, Z14,ZBE,Z14,ZBE,Z14,ZC0,                 00011500
*                $                        %                             00011600
     3Z2E,ZAA,ZFF,ZAA,Z3A,ZC0, Z63,Z93,Z88,ZE4,Z63,ZC0,                 00011700
*                &                        `                             00011800
     4Z7B,ZC5,ZEB,Z90,ZE9,ZC0, ZC0,ZC0,Z87,ZC0,ZC0,ZC0,                 00011900
*                (                        )                             00012000
     5ZC0,Z9C,Z22,Z41,Z41,ZC0, ZC0,Z41,Z41,Z22,Z9C,ZC0,                 00012100
*                *                        +                             00012200
     6Z88,ZAA,Z9C,ZAA,Z88,ZC0, Z88,Z88,ZBE,Z88,Z88,ZC0,                 00012300
*                ,                        -                             00012400
     7ZC0,ZC0,Z50,Z30,ZC0,ZC0, Z88,Z88,Z88,Z88,Z88,ZC0,                 00012500
*                .                        /                             00012600
     8ZC0,ZC0,Z60,Z60,ZC0,ZC0, ZA0,Z90,Z88,Z84,Z82,ZC0,                 00012700
*                0                        1                             00012800
     9ZBE,Z31,Z31,Z31,ZBE,ZC0, ZC0,Z82,ZFF,ZC0,ZC0,ZC0,                 00012900
*                2                        3                             00013000
     AZ42,ZE1,ZD1,ZC9,ZC6,ZC0, Z21,Z41,ZC9,Z4D,Z33,ZC0,                 00013100
*                4                        5                             00013200
     6Z18,Z14,Z12,ZFF,Z90,ZC0, Z27,ZCB,ZC5,ZC5,Z39,ZC0,                 00013300
*                6                        7                             00013400
     CZ3C,Z42,ZC9,ZC9,Z30,ZC0, Z81,Z81,ZF9,Z05,Z03,ZC0,                 00013500
*                8                        9                             00013600
     DZ36,ZC9,ZC9,ZC9,Z36,ZC0, Z06,ZC9,ZC9,Z21,Z1E,ZC0,                 00013700
*                :                        ;                             00013800
     EZC0,ZC0,Z1B,Z1B,ZC0,ZC0, ZC0,ZC0,Z2B,Z1B,ZC0,ZC0,                 00013900
*                <                        =                             00014000
     FZ88,Z14,Z22,Z41,ZC0,ZC0, Z22,Z22,Z22,Z22,Z22,ZC0,                 00014100
*                >                        ?                             00014200
     GZC0,Z41,Z22,Z14,Z88,ZC0, Z82,Z81,Z59,Z05,Z82,ZC0/                 00014300
      DATA TBE2/                                                        00014400
*                @                        A                             00014500
     1ZBE,Z41,ZDD,Z55,ZDF,ZC0, Z7E,Z11,Z11,Z11,Z7E,ZC0,                 00014600
*                B                        C                             00014700
     2ZFF,ZC9,ZC9,ZC9,Z36,ZC0, ZBE,Z41,Z41,Z41,Z22,ZC0,                 00014800
*                D                        E                             00014900
     3ZFF,Z41,Z41,Z41,ZBE,ZC0, ZFF,ZC9,ZC9,ZC9,Z41,ZC0,                 00015000
*                F                        G                             00015100
     4ZFF,Z09,Z09,Z09,Z81,ZC0, ZBE,Z41,Z41,ZC9,ZF9,ZC0,                 00015200
*                H                        I                             00015300
     5ZFF,Z88,Z88,Z88,ZFF,ZC0, ZC0,Z41,ZFF,Z41,ZC0,ZC0,                 00015400
*                J                        K                             00015500
     6ZA0,ZC0,ZC0,Z3F,ZC0,ZC0, ZFF,Z88,Z14,Z22,Z41,ZC0,                 00015600
*                L                        M                             00015700
     7ZFF,ZC0,ZC0,ZC0,ZC0,ZC0, ZFF,Z82,Z0C,Z82,ZFF,ZC0,                 00015800
*              BLANK                      O                             00015900
     8ZFF,Z82,Z84,Z88,ZFF,ZC0, ZBE,ZD1,ZC9,ZC5,ZBE,ZC0,                 00016000
*                P                        Q                             00016100
     9ZFF,Z09,Z09,Z09,Z06,ZC0, ZBE,Z41,ZD1,Z21,ZDE,ZC0,                 00016200
*                R                        S                             00016300
     AZFF,Z09,Z99,ZA9,ZC6,ZC0, ZC6,ZC9,ZC9,ZC9,ZB1,ZC0,                 00016400
*                T                        U                             00016500
     BZ81,Z81,ZFF,Z81,Z81,ZC0, Z3F,ZC0,ZC0,ZC0,Z3F,ZC0,                 00016600
*                V                        W                             00016700
     CZ0F,Z30,ZC0,Z30,Z0F,ZC0, Z3F,ZC0,Z3C,ZC0,Z3F,ZC0,                 00016800
*                X                        Y                             00016900
     DZ63,Z14,Z88,Z14,Z63,ZC0, Z87,Z88,ZF0,Z88,Z87,ZC0,                 00017000
*                Z                        [                             00017100
     EZE1,ZD1,ZC9,ZC5,ZC3,ZC0, ZFF,ZFF,Z41,Z41,Z41,ZC0,                 00017200
*                \                        ]                             00017300
     FZ82,Z84,Z88,Z90,ZA0,ZC0, Z41,Z41,Z41,ZFF,ZFF,ZC0,                 00017400
*                ^                        _                             00017500
     GZ84,Z82,Z81,Z82,Z84,ZC0, Z60,Z60,Z60,Z60,Z60,ZC0/                 00017600
******   TABLE FOR 5X6 MATRIX OUTPUT , NO PARITY , COLUMN BINARY        00017700
*                                                                       00017800
      DATA TB561/                                                       00017900
*                N                        !                             00018000
     1Z00,Z00,Z00,Z00,Z00,Z00, Z00,Z00,Z5E,Z00,Z00,Z00,                 00018100
*                "                        #                             00018200
     2Z00,Z0E,Z00,Z0E,Z00,Z00, Z14,Z3E,Z14,Z3E,Z14,Z00,                 00018300
*                $                        %                             00018400
     3Z2E,Z2A,Z7E,Z2A,Z3A,Z00, Z26,Z16,Z08,Z64,Z62,Z00,                 00018500
*                &                        `                             00018600
     4Z76,Z4A,Z56,Z20,Z50,Z00, Z00,Z00,Z0E,Z00,Z00,Z00,                 00018700
*                (                        )                             00018800
     5Z00,Z00,Z00,Z3C,Z42,Z00, Z00,Z42,Z3C,Z00,Z00,Z00,                 00018900
*                *                        +                             00019000
     6Z10,Z54,Z38,Z54,Z10,Z00, Z10,Z10,Z7C,Z10,Z10,Z00,                 00019100
*                ,                        -                             00019200
     7Z00,Z00,Z50,Z30,Z00,Z00, Z10,Z10,Z10,Z10,Z10,Z00,                 00019300
*                .                        /                             00019400
     8Z00,Z60,Z60,Z00,Z00,Z00, Z40,Z20,Z10,Z08,Z04,Z00,                 00019500
*                0                        1                             00019600
     9Z3C,Z42,Z42,Z42,Z3C,Z00, Z00,Z44,Z7E,Z40,Z00,Z00,                 00019700
*                2                        3                             00019800
     AZ64,Z52,Z4A,Z4A,Z44,Z00, Z22,Z4A,Z4A,Z4E,Z32,Z00,                 00019900
*                4                        5                             00020000
     BZ0E,Z08,Z08,Z7E,Z08,Z00, Z2E,Z4A,Z4A,Z4A,Z32,Z00,                 00020100
*                6                        7                             00020200
     CZ3C,Z4A,Z4A,Z4A,Z30,Z00, Z02,Z02,Z72,Z0A,Z06,Z00,                 00020300
*                8                        9                             00020400
     DZ34,Z4A,Z4A,Z4A,Z34,Z00, Z04,Z4A,Z4A,Z4A,Z3C,Z00,                 00020500
*                :                        ;                             00020600
     EZ00,Z00,Z36,Z36,Z00,Z00, Z00,Z00,Z56,Z36,Z00,Z00,                 00020700
*                <                        =                             00020800
     FZ10,Z28,Z44,Z00,Z00,Z00, Z28,Z28,Z28,Z28,Z28,Z00,                 00020900
*                >                        ?                             00021000
     GZ00,Z00,Z44,Z28,Z10,Z00, Z04,Z02,Z52,Z0A,Z04,Z00/                 00021100
      DATA TB562/                                                       00021200
*                @                        A                             00021300
     1Z3C,Z42,Z5A,Z5A,Z4C,Z00, Z78,Z14,Z12,Z14,Z78,Z00,                 00021400
*                B                        C                             00021500
     2Z7E,Z4A,Z4A,Z4A,Z34,Z00, Z3C,Z42,Z42,Z42,Z24,Z00,                 00021600
*                D                        E                             00021700
     3Z7E,Z42,Z42,Z42,Z3C,Z00, Z7E,Z4A,Z4A,Z42,Z42,Z00,                 00021800
*                F                        G                             00021900
     4Z7E,Z0A,Z0A,Z02,Z02,Z00, Z3C,Z42,Z42,Z52,Z72,Z00,                 00022000
*                H                        I                             00022100
     5Z7E,Z08,Z08,Z08,Z7E,Z00, Z00,Z42,Z74,Z42,Z00,Z00,                 00022200
*                J                        K                             00022300
     6Z20,Z40,Z40,Z40,Z3E,Z00, Z7E,Z08,Z10,Z24,Z42,Z00,                 00022400
*                L                        M                             00022500
     7Z7E,Z40,Z40,Z40,Z40,Z00, Z7E,Z04,Z08,Z04,Z7E,Z00,                 00022600
*                N                        O                             00022700
     8Z7E,Z04,Z08,Z30,Z7E,Z00, Z3C,Z42,Z42,Z42,Z3C,Z00,                 00022800
*                P                        Q                             00022900
     9Z7E,Z0A,Z0A,Z0A,Z04,Z00, Z3C,Z42,Z52,Z22,Z5C,Z00,                 00023000
*                R                        S                             00023100
     AZ7E,Z0A,Z1A,Z2A,Z44,Z00, Z44,Z4A,Z4A,Z4A,Z32,Z00,                 00023200
*                T                        U                             00023300
     BZ02,Z02,Z7E,Z02,Z02,Z00, Z3E,Z40,Z40,Z40,Z3E,Z00,                 00023400
*                V                        W                             00023500
     CZ1E,Z20,Z40,Z20,Z1E,Z00, Z7E,Z20,Z18,Z20,Z7E,Z00,                 00023600
*                X                        Y                             00023700
     DZ66,Z10,Z08,Z10,Z66,Z00, Z06,Z08,Z70,Z08,Z06,Z00,                 00023800
*                Z                        [                             00023900
     EZ62,Z52,Z4A,Z42,Z46,Z00, Z7E,Z42,Z42,Z00,Z00,Z00,                 00024000
*                \                        ]                             00024100
     FZ02,Z04,Z08,Z10,Z20,Z00, Z00,Z00,Z42,Z42,Z7E,Z00,                 00024200
*                ^                        _                             00024300
     GZ08,Z04,Z02,Z04,Z08,Z00, Z40,Z40,Z40,Z40,Z40,Z00/                 00024400
C                                                                       00024500
      IF (J.EQ.0) THEN                                                  00024600
C                                                                       00024700
C.....5*7 MATRIX, ODD PARITY, COLUMN BINARY                             00024800
C                                                                       00024900
      DO 10 I=1,6                                                       00025000
      DO 10 K=1,64                                                      00025100
   10 CODE(I,K)=TABO(I,K)                                               00025200
C                                                                       00025300
      ELSE IF (J.EQ.2) THEN                                             00025400
C                                                                       00025500
C.....5*6 MATRIX, NO PARITY, COLUMN BINARY                              00025600
C                                                                       00025700
      DO 20 I=1,6                                                       00025800
      DO 20 K=1,64                                                      00025900
   20 CODE(I,K)=TAB56(I,K)                                              00026000
C                                                                       00026100
      ELSE                                                              00026200
         CALL CFORM('**** INVALID CALL TO PARNOM ****',DARRAY,2,32)     00026300
         CALL CPRINT(DARRAY)                                            00026400
         RETURN                                                         00026500
      END IF                                                            00026600
      GO TO 100                                                         00026700
C                                                                       00026800
C.....ENTRY PARNEM                                                      00026900
C                                                                       00027000
      ENTRY PARNEM(N,A)                                                 00027100
C                                                                       00027200
C.....5*7 MATRIX, EVEN PARITY, COLUMN BINARY                            00027300
C                                                                       00027400
      DO 30 I=1,6                                                       00027500
      DO 30 K=1,64                                                      00027600
   30 CODE(I,K)=TABE(I,K)                                               00027700
C                                                                       00027800
C.....CHECK N.LE.504                                                    00027900
C                                                                       00028000
  100 N=ABS(N)                                                          00028100
      IF (N.GT.504) THEN                                                00028200
         CALL CFORM('**** MORE THAN 504 CHARACTERS',DARRAY,2,29)        00028300
         CALL CFORM('REQUESTED IN CALL TO PARNOM OR PARNEM ****',DARRAY,00028400
     1                32,42)                                            00028500
         CALL CPRINT(DARRAY)                                            00028600
         N=504                                                          00028700
      END IF                                                            00028800
C                                                                       00028900
C.....CALCULATE NUMBER OF WORDS CONTAINING CHARACTERS (6 PER WORD)      00029000
C                                                                       00029100
      NUM=N/6                                                           00029200
      IF (NUM*6.LT.N) NUM=NUM+1                                         00029300
C                                                                       00029400
C.....WRITE CHARCTERS FOR CONVERSION TO INTERNAL FILE                   00029500
C                                                                       00029600
      WRITE (INFIL,'(84A6)') (A(I),I=1,NUM)                             00029700
C                                                                       00029800
C.....FOR EACH CHARACTER INPUT, IDENTIFY POSITION IN ASCII CHAR SET     00029900
C                                                                       00030000
      JC=0                                                              00030100
      DO 200 I=1,N                                                      00030200
      IC=ICHAR(INFIL(I:I))-31                                           00030300
C                                                                       00030400
C.....STORE APPROP MATRIX IN OUTPUT ARRAY                               00030500
C                                                                       00030600
      DO 200 K=1,6                                                      00030700
      JC=JC+1                                                           00030800
      OUT(JC)=CODE(K,IC)                                                00030900
  200 CONTINUE                                                          00031000
C                                                                       00031100
C.....OUTPUT TO PUNCH FILE, JC IS NO OF BYTES                           00031200
C                                                                       00031300
      CALL TAPEPN(OUT,JC)                                               00031400
      RETURN                                                            00031500
      END                                                               00031600
**** SOURCE FILE : PUNCHA00.IBM;2   ***
*
      SUBROUTINE PUNCHA(N,A,J,K)                                        00000100
*                                                                       00000200
*  * PUNCHA *   VAX-11 FORTRAN 77 VERSION 29.11.82 E.MCLELLAN           00000300
*                                                                       00000400
*  PURPOSE     TO GENERATE REQUIRED PAPER TAPE CODES FOR BCD CHARACTERS 00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL PUNCHA(N,A,J,K)                                     00000800
*  ARGUMENTS                                                            00000900
*              N NUMBER OF BCD CHARACTERS IN ARRAY A                    00001000
*              A ARRAY CONTAINING BCD CHARACTERS                        00001100
*              J IGNORED                                                00001200
*              K -2  BLANKS AND PERIODS IGNORED                         00001300
*                -1  PERIODS IGNORED                                    00001400
*                 0  BLANKS IGNORED                                     00001500
*                >0  BLANKS ARE PROCESSED                               00001600
*                                                                       00001700
*  ALTERNATE ENTRY                                                      00001800
*              CALL PUNCHB(N,A,J,K)                                     00001900
*                                                                       00002000
C                                                                       00002100
C...LOGICAL*1 VARIABLES IN THIS IBM IMPLEMENTATION MIGHT BE ABLE TO BE  00002200
C...BYTE VARIABLES ON OTHER SYSTEMS E.G. VAX                            00002300
C                                                                       00002400
      COMMON/PUNTAB/PUNCOD                                              00002500
      LOGICAL*1 PUNCOD(128),ILEGAL                                      00002600
*                                                                       00002700
      DOUBLE PRECISION A(64)                                            00002800
      CHARACTER*512 INFIL,OUTFIL                                        00002900
      LOGICAL*1 PUNOUT(512)                                             00003000
      LOGICAL OD                                                        00003100
C                                                                       00003200
      INCLUDE (DARRAY)                                                  00003300
C                                                                       00003400
      DATA ILEGAL/ZEE/                                                  00003500
C                                                                       00003600
C                                                                       00003700
      ENTRY PUNCHB(N,A,J,K)                                             00003800
C                                                                       00003900
      WRITE (INFIL,'(64A8)') (A(I),I=1,64)                              00004000
C                                                                       00004100
      M=N                                                               00004200
C                                                                       00004300
      IF (K.LE.0) THEN                                                  00004400
         L=1                                                            00004500
         DO 10 I=1,N                                                    00004600
           IF ((INFIL(I:I).EQ.' ').AND.((K.EQ.0).OR.(K.EQ.-2))) THEN    00004700
              GO TO 10                                                  00004800
           ELSE IF ((INFIL(I:I).EQ.'.').AND.(K.LT.0)) THEN              00004900
              GO TO 10                                                  00005000
           ELSE                                                         00005100
              OUTFIL(L:L)=INFIL(I:I)                                    00005200
              L=L+1                                                     00005300
           END IF                                                       00005400
   10    CONTINUE                                                       00005500
         M=L-1                                                          00005600
      ELSE                                                              00005700
C                                                                       00005800
      OUTFIL=INFIL                                                      00005900
C                                                                       00006000
      END IF                                                            00006100
C                                                                       00006200
C.....CONVERT TO REQUIRED TAPE CODE                                     00006300
C                                                                       00006400
      JC=0                                                              00006500
      DO 100 I=1,M                                                      00006600
      IC=ICHAR(OUTFIL(I:I))+1                                           00006700
      IF (PUNCOD(IC).EQV.ILEGAL) THEN                                   00006800
         CALL CFORM('**** ILLEGAL CHARACTER CONVERSION IN PUNCHA ****', 00006900
     1              DARRAY,2,48)                                        00007000
         CALL CPRINT(DARRAY)                                            00007100
         GO TO 100                                                      00007200
      END IF                                                            00007300
C                                                                       00007400
      JC=JC+1                                                           00007500
      PUNOUT(JC)=PUNCOD(IC)                                             00007600
  100 CONTINUE                                                          00007700
C                                                                       00007800
C.....OUTPUT TO PUNCH FILE, JC IS NO OF BYTES                           00007900
C                                                                       00008000
      CALL TAPEPN(PUNOUT,JC)                                            00008100
      RETURN                                                            00008200
      END                                                               00008300
**** SOURCE FILE : PUNCHC00.IBM;1   ***
*
      SUBROUTINE PUNCHC(N,A,J,K)                                        00000100
*                                                                       00000200
*  * PUNCHC *   VAX-11 FORTRAN 77 VERSION 29.11.82 E.MCLELLAN           00000300
*               REVISED FOR CHARACTER HANDLING 5.9.85 E.MCL.            00000400
*                                                                       00000500
*  PURPOSE     TO GENERATE REQUIRED PAPER TAPE CODES FOR CHARACTERS     00000600
*                                                                       00000700
*  CALLING SEQUENCE                                                     00000800
*              CALL PUNCHC(N,A,J,K)                                     00000900
*  ARGUMENTS                                                            00001000
*              N NUMBER OF CHARACTERS IN A                              00001100
*              A CHARACTER STRING TO BE PUNCHED                         00001200
*              J NUMBER OF CHARACTERS PUNCHED                           00001300
*              K -2  BLANKS AND PERIODS IGNORED                         00001400
*                -1  PERIODS IGNORED                                    00001500
*                 0  BLANKS IGNORED                                     00001600
*                >0  BLANKS ARE PROCESSED                               00001700
*                                                                       00001800
*  ALTERNATE ENTRY                                                      00001900
*              CALL PUNCHD(N,A,J,K)                                     00002000
*                                                                       00002100
C                                                                       00002200
C...LOGICAL*1 VARIABLES IN THIS IBM IMPLEMENTATION MIGHT BE ABLE TO BE  00002300
C...BYTE VARIABLES ON OTHER SYSTEMS E.G. VAX                            00002400
C                                                                       00002500
      COMMON/PUNTAB/PUNCOD                                              00002600
      LOGICAL*1 PUNCOD(128),ILEGAL                                      00002700
*                                                                       00002800
      CHARACTER*512 A                                                   00002900
      CHARACTER*512 INFIL,OUTFIL                                        00003000
      LOGICAL*1 PUNOUT(512)                                             00003100
      LOGICAL OD                                                        00003200
C                                                                       00003300
      INCLUDE (DARRAY)                                                  00003400
C                                                                       00003500
      DATA ILEGAL/ZEE/                                                  00003600
C                                                                       00003700
C                                                                       00003800
      ENTRY PUNCHD(N,A,J,K)                                             00003900
C                                                                       00004000
      INFIL=A                                                           00004100
C                                                                       00004200
      M=N                                                               00004300
C                                                                       00004400
      IF (K.LE.0) THEN                                                  00004500
         L=1                                                            00004600
         DO 10 I=1,N                                                    00004700
           IF ((INFIL(I:I).EQ.' ').AND.((K.EQ.0).OR.(K.EQ.-2))) THEN    00004800
              GO TO 10                                                  00004900
           ELSE IF ((INFIL(I:I).EQ.'.').AND.(K.LT.0)) THEN              00005000
              GO TO 10                                                  00005100
           ELSE                                                         00005200
              OUTFIL(L:L)=INFIL(I:I)                                    00005300
              L=L+1                                                     00005400
           END IF                                                       00005500
   10    CONTINUE                                                       00005600
         M=L-1                                                          00005700
      ELSE                                                              00005800
C                                                                       00005900
      OUTFIL=INFIL                                                      00006000
C                                                                       00006100
      END IF                                                            00006200
C                                                                       00006300
C.....CONVERT TO REQUIRED TAPE CODE                                     00006400
C                                                                       00006500
      JC=0                                                              00006600
      DO 100 I=1,M                                                      00006700
      IC=ICHAR(OUTFIL(I:I))+1                                           00006800
      IF (PUNCOD(IC).EQV.ILEGAL) THEN                                   00006900
         CALL CFORM('**** ILLEGAL CHARACTER CONVERSION IN PUNCHC ****', 00007000
     1              DARRAY,2,48)                                        00007100
         CALL CPRINT(DARRAY)                                            00007200
         GO TO 100                                                      00007300
      END IF                                                            00007400
C                                                                       00007500
      JC=JC+1                                                           00007600
      PUNOUT(JC)=PUNCOD(IC)                                             00007700
  100 CONTINUE                                                          00007800
C                                                                       00007900
C.....OUTPUT TO PUNCH FILE, JC IS NO OF BYTES                           00008000
C                                                                       00008100
      CALL TAPEPN(PUNOUT,JC)                                            00008200
      J=JC                                                              00008300
      RETURN                                                            00008400
      END                                                               00008500
**** SOURCE FILE : TAPEPN00.IBM;1   ***
*
      SUBROUTINE TAPEPN(CHAR,N)                                         00000100
*                                                                       00000200
*  * TAPEPN *  VAX-11 FORTRAN 77 VERSION  26.10.82  E.MCLELLAN          00000300
*                                                                       00000400
*  PURPOSE     TO WRITE COLUMN BINARY DATA TO PAPER TAPE PUNCH FILE     00000500
*                                                                       00000600
*  CALLING SEQUENCE                                                     00000700
*              CALL TAPEPN(CHAR,N)                                      00000800
*  ARGUMENTS                                                            00000900
*              CHAR  BYTE ARRAY CONTAINING COLUMN BINARY CODES          00001000
*              N     NO OF COLUMNS (CHARACTERS) TO BE PUNCHED           00001100
*                                                                       00001200
C                                                                       00001300
C...LOGICAL*1 VARIABLES IN THIS IBM IMPLEMENTATION MIGHT BE ABLE TO BE  00001400
C...BYTE VARIABLES ON OTHER SYSTEMS E.G. VAX                            00001500
      LOGICAL*1 CHAR(3024)                                              00001600
*                                                                       00001700
      LOGICAL OD                                                        00001800
C                                                                       00001900
      INCLUDE (DARRAY)                                                  00002000
C                                                                       00002100
C                                                                       00002200
C.....WRITE IN A FORMAT TO FILE PUNTAP.DAT                              00002300
C                                                                       00002400
C.....IS PUNTAP.DAT OPEN                                                00002500
C                                                                       00002600
      INQUIRE(FILE='PUNTAP',OPENED=OD)                                  00002700
         IF (.NOT.OD) THEN                                              00002800
            OPEN(UNIT=7,FILE='PUNTAP',ERR=90,STATUS='NEW',              00002900
     1           ACCESS='SEQUENTIAL',FORM='FORMATTED')                  00003000
         END IF                                                         00003100
C                                                                       00003200
C.....WRITE TO PUNTAP.DAT                                               00003300
C                                                                       00003400
      WRITE(7,'(80A1)') (CHAR(I),I=1,N)                                 00003500
      RETURN                                                            00003600
C                                                                       00003700
   90 CALL CFORM('**** ERROR OPENING PUNTAP.DAT ****',DARRAY,2,34)      00003800
      CALL CPRINT(DARRAY)                                               00003900
      CALL ABNEND                                                       00004000
      RETURN                                                            00004100
      END                                                               00004200
**** SOURCE FILE : WTDIRE00.IBM;1   ***
*
*                MODIFIED                23-FEB-1988  E.MCLELLAN        00000050
*                                                                       00000060
      SUBROUTINE WTDIRE(IU,MEMBER,USERD,NCH,IRET)                       00000100
C                                                                       00000200
      INTEGER IU,ID,NCH,IRET                                            00000300
      DOUBLE PRECISION MEMBER,USERD                                     00000400
C                                                                       00000500
      LOGICAL EX                                                        00000600
C                                                                       00000700
      CHARACTER FLNAME*20,TYPE*4,MODE*2,CMEM*8                          00000800
      INTEGER NWD,NLEN,JRET                                             00000900
C                                                                       00000910
C                                                                       00001000
      DATA TYPE/' LDA'/,MODE/' A'/                                      00001100
C                                                                       00001110
      ID=ABS(IU)                                                        00001120
C                                                                       00001200
C.... SET UP FILENAME                                                   00001300
C                                                                       00001400
      CALL HOLFRM(MEMBER,CMEM,1,8,NWD)                                  00001500
      NLEN=8                                                            00001510
      K=INDEX(CMEM,' ')                                                 00001520
      IF (K.NE.0) NLEN=K-1                                              00001530
      FLNAME=CMEM(:NLEN)//TYPE//MODE                                    00001600
      NLEN=NLEN+6                                                       00001610
C                                                                       00002800
C.... INQUIRE IF FILE EXISTS                                            00002900
C                                                                       00003000
      CALL UOPEN(ID,FLNAME(:NLEN),1,4,80,0,'U',0,JRET)                  00003100
      IF (JRET.EQ.0) THEN                                               00003200
C.... FILE ALREADY EXISTS - SHOULD A NEW VERSION BE WRITTEN             00003300
        IF (IU.LT.0) THEN                                               00003400
C.... YES - OPEN ATTACHED TO UNIT ID                                    00003500
          CALL UOPEN(ID,FLNAME(:NLEN),1,2,80,0,'U',0,JRET)              00003600
          IF (JRET.NE.0) GOTO 20                                        00003750
          IRET=0                                                        00003900
        ELSE                                                            00004000
          IRET=9                                                        00004100
        ENDIF                                                           00004200
      ELSE                                                              00004300
C.... FILE DOES NOT EXIST - OPEN ATTACHED TO UNIT ID                    00004400
          CALL UOPEN(ID,FLNAME(:NLEN),1,2,80,0,'U',0,JRET)              00004410
          IF (JRET.NE.0) GOTO 20                                        00004420
        IRET=0                                                          00004700
      ENDIF                                                             00004800
      RETURN                                                            00004900
C.... ERROR OPENING FILE                                                00005000
  20  IRET=5                                                            00005100
      RETURN                                                            00005200
      END                                                               00005300
**** SOURCE FILE : M0006620.IBM;1   ***
*
C                                                 8/81     MBB          M0000100
C...  FORTRAN BLOCK DATA               BD2ITL                           M0000200
C                                                 8/81     MBB          M0000300
      BLOCK DATA BD2ITL                                                 M0000400
C                                                                       M0000500
      IMPLICIT INTEGER (A-Z)                                            M0000600
C                                                                       M0000700
C...         2.    STACK AND POINTER STORAGE                            M0000800
C                                                                       M0000900
      COMMON/STKLST/STKLST,STACK,ARGSTK                                 M0001000
      DIMENSION STKLST(3),STACK(2,99),ARGSTK(99)                        M0001100
C                                                                       M0001200
      EQUIVALENCE(STKLST(1),TOP),(STKLST(2),ARGTOP),(STKLST(3),IARGDM)  M0001300
C                                                                       M0001400
C                                                                       M0001600
C...         5.    PROGRAM CONTROL FLAGS                                M0001700
C                                                                       M0001800
      COMMON/FLAGS/FLAGS                                                M0001900
      DIMENSION FLAGS(4)                                                M0002000
      LOGICAL ENDFLG,NEWSTM,APTRAN,REFFLG                               M0002100
C                                                                       M0002200
      EQUIVALENCE(FLAGS(1),ENDFLG),(FLAGS(2),NEWSTM),(FLAGS(3),APTRAN), M0002300
     1           (FLAGS(4),REFFLG)                                      M0002400
C                                                                       M0002500
C                                                                       M0002700
C...         6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION     M0002800
C                                                                       M0002900
      COMMON/TMP/TXXXX                                                  M0003000
      DIMENSION TXXXX(2,32)                                             M0003100
C                                                                       M0003200
C                                                                       M0009900
C...      13.      NAMTBL POINTERS TO NEGATIVE NUMBERS                  M0010000
C                                                                       M0010100
      COMMON/NEGPTR/NONEPT                                              M0010200
C                                                                       M0010300
C...        11.    SEQUENCE NUMBER STORAGE                              M0010400
C                                                                       M0010500
C                  COMMENT OF  SEQNO AND SEQNUM                         M0010600
C                                                                       M0010810
      INCLUDE 'SEQCOM.INC'                                              M0010820
C                                                                       M0011000
C...        12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                M0011100
C                                                                       M0011200
      COMMON/CFSIZE/CFSIZE,MAXSIZ,CANSIZ,ISC,KSC                        M0011300
      DIMENSION  CFSIZE(3),MAXSIZ(2),CANSIZ(2,100),KSC(3,300)           M0011400
      LOGICAL PARDEF,TABCYS                                             M0011500
C                                                                       M0011600
      EQUIVALENCE(CFSIZE(1),CANTOP),(CFSIZE(2),PARDEF),                 M0011700
     1           (CFSIZE(3),TABCYS)                                     M0011800
C                                                                       M0011900
C                                                                       M0012200
C...      14.      I. L. LIST OPTION FLAGS                              M0012300
C                                                                       M0012400
      COMMON/PRT/PRT                                                    M0012500
      DIMENSION PRT(7)                                                  M0012600
      LOGICAL    CILPRT,  ILPRT, INTERP, ASSEMB, TRACFL                 M0012700
     /          ,PRTERR,  MCHDNG                                        M0012800
C                                                                       M0012900
      EQUIVALENCE(PRT(1),CILPRT),(PRT(2),ILPRT ),(PRT(3),INTERP),       M0013000
     1           (PRT(4),ASSEMB),(PRT(5),TRACFL),(PRT(6),PRTERR),       M0013100
     2           (PRT(7),MCHDNG)                                        M0013200
C                                                                       M0013300
C                                                                       M0013700
C...        15.    ARRAY LIMIT STORAGE                                  M0013800
C                                                                       M0013900
      COMMON/SBSCPT/RNGPT,RANGE                                         M0014000
      DIMENSION RANGE(400)                                              M0014100
C                                                                       M0014300
C...        16.    LITERALS FOR I. L. OPERATION CODES                   M0014400
C                                                                       M0014500
      COMMON/IL/IL                                                      M0014600
      DIMENSION IL(21)                                                  M0014700
C                                                                       M0014800
      EQUIVALENCE(IL( 1),FADD  ),(IL( 2),FSUB  ),(IL( 3),FMPY  ),       M0014900
     1           (IL( 4),FDIV  ),(IL( 5),FEXP  ),(IL( 6),LABELX),       M0015000
     2           (IL( 7),ENTRYX),(IL( 8),JUMP  ),(IL( 9),SEQNCE),       M0015100
     3           (IL(10),RETMC ),(IL(11),CONJMP),(IL(12),RESRV ),       M0015200
     4           (IL(13),CVTSUB),(IL(14),CALMC ),(IL(15),ASNADD),       M0015300
     5           (IL(16),ASNJMP),(IL(17),REPL  ),(IL(18),CALL  ),       M0015400
     7           (IL(19),MOVE  ),(IL(20),VBLJMP),(IL(21),HOLDAT)        M0015500
C                                                                       M0015600
C                                                                       M0017800
C...        17.    MODE CODES                                           M0017900
C                                                                       M0018000
      COMMON/MODX/MODX                                                  M0018100
      DIMENSION MODX(32)                                                M0018200
C                                                                       M0018300
      EQUIVALENCE(MODX( 1),LINE  ),(MODX( 2),PLANE ),(MODX( 3),CYLNDR), M0018400
     1           (MODX( 4),CIRCLE),(MODX( 5),SPHERE),(MODX( 6),HYPERB), M0018500
     2           (MODX( 7),CONIC ),(MODX( 8),ELLIPS),(MODX( 9),CONE  ), M0018600
     3           (MODX(10),GCONIC),(MODX(11),TABCYL),(MODX(12),RLDSRF), M0018700
     4           (MODX(13),POLCON),(MODX(14),QADRIC),(MODX(15),PARSRF), M0018800
     5           (MODX(16),UNUS1 ),(MODX(17),UNUS2 ),(MODX(18),MATRIX), M0018900
     6           (MODX(19),POINT ),(MODX(20),VECTOR),(MODX(21),REAL  ), M0019000
     7           (MODX(22),INTGER),(MODX(23),BOOL  ),(MODX(24),SUBSCR), M0019100
     8           (MODX(25),STRING),(MODX(26),PATERN),(MODX(27),BOUNDS), M0019200
     9           (MODX(28),OBJECT),(MODX(29),SSURF ),(MODX(30),SCURV ), M0019300
     A           (MODX(31),UNUS3 ),(MODX(32),UNUS4 )                    M0019400
C                                                                       M0019500
C                                                                       M0022800
C...        18.    STRING STORAGE AREA                                  M0022900
C                                                                       M0023000
      COMMON/CHRX/CHR                                                   M0023100
      CHARACTER CHR*400                                                 M0023200
C                                                                       M0023400
C...      19.      INTERMEDIATE LANGUAGE TEXT                           M0023500
C                                                                       M0023600
      COMMON/ILTEXT/ILTEXT,TEXTIN                                       M0023700
      DIMENSION TEXTIN(90),ILTEXT(4)                                    M0023800
      LOGICAL COMFIN                                                    M0023900
      EQUIVALENCE(ILTEXT(1),COMFIN),(ILTEXT(2),LENGTH),                 M0024000
     1           (ILTEXT(3),TPNTRX),(ILTEXT(4),OPTEXT)                  M0024100
C                                                                       M0024200
C                                                                       M0024400
C         22.      MACRO PROCESSING VARIABLES                           M0024500
C                                                                       M0024600
      COMMON/MACXX1/MACXX1                                              M0024700
      DIMENSION MACXX1(71)                                              M0024800
      LOGICAL MACLDD ,CALLON ,CALLMV ,ILHLT  ,MVMAC  ,MACRED ,MVTRUE ,  M0024900
     1        FINMAC ,ENTRY  ,NESTG  ,ENDMCH ,MACLK  ,MACEND ,SHOULD    M0025000
C                                                                       M0025100
      EQUIVALENCE(MACXX1( 1),MACDFP),(MACXX1( 2),MCNMB ),               M0025200
     1           (MACXX1( 3),MCHSTP),(MACXX1( 4),MCTXTP),               M0025300
     2           (MACXX1( 5),MCSAVP),(MACXX1( 6),MNMVBP),               M0025400
     3           (MACXX1( 7),MACLDD),(MACXX1( 8),TEMP1 ),               M0025500
     4           (MACXX1( 9),TEMP2 ),(MACXX1(10),CALLON),               M0025600
     5           (MACXX1(11),CALLMV),(MACXX1(12),MVSEG ),               M0025700
     6           (MACXX1(13),CALLPT),(MACXX1(14),ILHLT ),               M0025800
     7           (MACXX1(15),TEXTST),(MACXX1(16),MVPNT ),               M0025900
     8           (MACXX1(17),MVMAC ),(MACXX1(18),MACRED),               M0026000
     9           (MACXX1(19),MVTRUE),(MACXX1(20),BRANCH),               M0026100
     A           (MACXX1(21),MAXSPS),(MACXX1(22),INTMED)                M0026200
      EQUIVALENCE(MACXX1(23),MAJWRD),(MACXX1(24),FINMAC),               M0026300
     1           (MACXX1(25),NMLINE),(MACXX1(26),WAY   ),               M0026400
     2           (MACXX1(27),NUMVAR),(MACXX1(28),NUMCAL),               M0026500
     3           (MACXX1(29),BITWDS),(MACXX1(30),MBPTR ),               M0026600
     4           (MACXX1(31),LSTWRT),(MACXX1(32),MCDFDM),               M0026700
     5           (MACXX1(33),MHSTDM),(MACXX1(34),MCSVDM),               M0026800
     6           (MACXX1(35),MNMVDM),(MACXX1(36),MSEQDM),               M0026900
     7           (MACXX1(37),MACLNT),(MACXX1(38),MCSLNT),               M0027000
     8           (MACXX1(39),MSP   ),(MACXX1(40),ENTRY ),               M0027100
     9           (MACXX1(41),MVEXST),(MACXX1(42),MACTOP),               M0027200
     A           (MACXX1(43),MCSTRT),(MACXX1(44),MAJOR )                M0027300
      EQUIVALENCE(MACXX1(45),NESTG ),(MACXX1(46),ROUTE ),               M0027400
     1           (MACXX1(47),ROAD  ),(MACXX1(48),SAVMSP),               M0027500
     2           (MACXX1(49),TYP   ),(MACXX1(50),ENDMCH),               M0027600
     3           (MACXX1(51),LNUSDP),(MACXX1(52),MCTOPP),               M0027700
     4           (MACXX1(53),LNSDDM),(MACXX1(54),MVARDM),               M0027800
     5           (MACXX1(55),MASDM ),(MACXX1(56),NUMBIT),               M0027900
     6           (MACXX1(57),MCSPDP),(MACXX1(58),MACLK ),               M0028000
     7           (MACXX1(59),MCSRCH),(MACXX1(60),MACFND),               M0028100
     8           (MACXX1(61),NUMARG),(MACXX1(62),MACEND),               M0028200
     9           (MACXX1(63),WHCHMN),(MACXX1(64),LARGMV),               M0028300
     A           (MACXX1(65),MSPDDM),(MACXX1(66),VBLSVP)                M0028400
      EQUIVALENCE(MACXX1(67),IVSVDM),(MACXX1(68),PATHLN),               M0028500
     1           (MACXX1(69),NEXTLN),(MACXX1(70),SHOULD),               M0028600
     2           (MACXX1(71),PATHCH)                                    M0028700
C                                                                       M0028800
C                                                                       M0030400
C         23.      MACRO PROCESSING ARRAYS                              M0030500
C                                                                       M0030600
      COMMON/MACXX2/MACXX2                                              M0030700
      DIMENSION MACXX2(902),MBREC(2),MBUFF(350,2),MACRTB(200)           M0030800
      EQUIVALENCE(MACXX2(  1),MBREC(1)),(MACXX2( 3),MBUFF(1,1))         M0030900
      EQUIVALENCE(MACXX2(703),MACRTB(1))                                M0031000
C                                                                       M0031200
C         24.      MACRO PROCESSING ARRAYS                              M0031300
C                                                                       M0031400
      COMMON/MACXX3/MACXX3                                              M0031500
      DIMENSION MACXX3(2630),MACDF1(400),MACDF2(400),MACHST(1800),      M0031600
     1                       MACSV1( 10),MACSV2( 10),MACSV3( 10)        M0031700
      EQUIVALENCE(MACXX3(   1),MACDF1(1)),(MACXX3( 401),MACDF2(1)),     M0031800
     1           (MACXX3( 801),MACHST(1)),(MACXX3(2601),MACSV1(1)),     M0031900
     2           (MACXX3(2611),MACSV2(1)),(MACXX3(2621),MACSV3(1))      M0032000
C                                                                       M0032200
C         25.      MACRO PROCESSING ARRAYS                              M0032300
C                                                                       M0032400
      COMMON/MACXX4/MACXX4                                              M0032500
      DIMENSION MACXX4( 100),MNMVB ( 25),MNMVC ( 25),MACSEQ( 50)        M0032600
      EQUIVALENCE(MACXX4( 1),MNMVB(1)),(MACXX4(26),MNMVC(1)),           M0032700
     1           (MACXX4(51),MACSEQ(1))                                 M0032800
C                                                                       M0033000
C         25A.     MACRO PROCESSING ARRAYS                              M0033100
C                                                                       M0033200
      COMMON/MACXX5/ITMPSV                                              M0033300
      DIMENSION ITMPSV(135)                                             M0033400
C                                                                       M0033500
C         26.      MACRO PROCESSING ARRAYS                              M0033600
C                                                                       M0033700
      COMMON/MACXX6/MACXX6                                              M0033800
      DIMENSION MACXX6(1300),VBLSAV(900)                                M0033900
      EQUIVALENCE(MACXX6(401),VBLSAV(1))                                M0034000
C                                                                       M0034200
C         26A.     MACRO PROCESSING ARRAYS                              M0034300
C                                                                       M0034400
      COMMON/MACXX7/MACXX7                                              M0034500
      DIMENSION MACXX7(182),LINUSD(50),MAS(100),MACVAR(32)              M0034600
      EQUIVALENCE(MACXX7(  1),LINUSD(1)),(MACXX7( 51),MAS(1)),          M0034700
     1           (MACXX7(151),MACVAR(1))                                M0034800
C                                                                       M0035000
C...        27.    OPERAND MODIFIERS                                    M0035100
C                                                                       M0035200
      COMMON/OPMOD/OPMOD                                                M0035300
      DIMENSION    OPMOD(8)                                             M0035400
C                                                                       M0035500
      EQUIVALENCE(OPMOD(1),NOUGHT),(OPMOD(2),DLR   ),(OPMOD(3),DBLDLR), M0035600
     1           (OPMOD(4),TRPDLR),(OPMOD(5),QUADLR),(OPMOD(6),QUIDLR), M0035700
     2           (OPMOD(7),HEXDLR),(OPMOD(8),SPTDLR)                    M0035710
C                                                                       M0035800
C                                                                       M0036500
C...        29.    CLASS CODE MODULI                                    M0036600
C                                                                       M0036700
      COMMON/MODULI/MODULO,MODHLF                                       M0036800
C                                                                       M0037100
C...        30.   NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCKM0037200
C                                                                       M0037300
      COMMON/BLKCFS/FIRST                                               M0037400
      DIMENSION  FIRST(2,3)                                             M0037500
C....                                                                   M0037700
C           31.   COMMON BLOCK FOR PRO026 AND MOTION                    M0037800
C....                                                                   M0037900
      COMMON /COMP26/COMP26,TAGTBL                                      M0038000
      DIMENSION TAGTBL(3),COMP26(13)                                    M0038100
      LOGICAL FEDSAV, FMTERR, MCSJMP, JMPING                            M0038200
C                                                                       M0038300
      EQUIVALENCE(COMP26( 1),INTOF ),(COMP26( 2),ARGCNT),               M0038400
     1           (COMP26( 3),CSPNTR),(COMP26( 4),JMPCS ),               M0038500
     2           (COMP26( 5),NUMBCS),(COMP26( 6),TEST  ),               M0038600
     3           (COMP26( 7),TEST1 ),(COMP26( 8),FEDSAV),               M0038700
     4           (COMP26( 9),FMTERR),(COMP26(10),MCSJMP),               M0038800
     5           (COMP26(11),JMPING),(COMP26(12),K     ),               M0038900
     6           (COMP26(13),LERR  )                                    M0039000
C                                                                       M0039100
C                                                                       M0039400
C           32.   COMMON BLOCK FOR SETBIT AND BITMCH                    M0039500
C                                                                       M0039600
      COMMON/BITCOM/BIT                                                 M0039700
      DIMENSION BIT(32)                                                 M0039800
      DIMENSION LOBIT(16),HIBIT(16)                                     M0039900
      EQUIVALENCE (LOBIT(1),BIT(1)),(HIBIT(1),BIT(17))                  M0040000
C...                                                                    M0041700
C ...       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE         M0041800
C                                                                       M0041900
C                                                                       M0042000
      COMMON/BGEOM/BGEOM                                                M0042100
      DIMENSION     BGEOM(4)                                            M0042200
C                                                                       M0042300
      EQUIVALENCE(BGEOM(1),IFBNDS),(BGEOM(2),IFDUMP),(BGEOM(3),J     ), M0042400
     1           (BGEOM(4),L     )                                      M0042500
C                                                                       M0042600
C           36.    SYSTEM MACRO AND SEGMENT READ VARIABLES              M0042700
C                                                                       M0042800
      COMMON/MACSEG/MACSEG                                              M0042900
      DIMENSION     MACSEG(6)                                           M0043000
      LOGICAL ALOPN,LMRSTR,LMREND                                       M0043100
C                                                                       M0043200
      EQUIVALENCE(MACSEG(1),ALOPN ),(MACSEG(2),NMSEG ),                 M0043300
     1           (MACSEG(3),NMMAC ),(MACSEG(4),LMRSTR),                 M0043400
     2           (MACSEG(5),ITMPCT),(MACSEG(6),LMREND)                  M0043500
C                                                                       M0043800
C...        37.    INCLUSIVE SUBSCRIPT VARIABLES                        M0043900
C                                                                       M0044000
      COMMON/ISSCOM/ISSCOM,ISSTRM                                       M0044100
      DIMENSION ISSTRM(2),ISSCOM(7)                                     M0044200
      LOGICAL ISSFL,ISSEND                                              M0044300
C                                                                       M0044400
      EQUIVALENCE(ISSCOM(1),ISSA  ),(ISSCOM(2),ISSB  ),                 M0044500
     1           (ISSCOM(3),ISSC  ),(ISSCOM(4),ISSVBL),                 M0044600
     2           (ISSCOM(5),ISSMOD),(ISSCOM(6),ISSFL ),                 M0044700
     3           (ISSCOM(7),ISSEND)                                     M0044800
C                                                                       M0044900
C                                                                       M0045100
C...        39.    COMMON BLOCK LIBRARY PRINTING FLAG                   M0045200
C                                                                       M0045300
      COMMON/LIBPRT/LIBPRT                                              M0045400
      LOGICAL       LIBPRT                                              M0045500
C                                                                       M0045600
C...        41.    NUMBER TABLE OVERFLOW VARIABLES                      M0045700
C                                                                       M0045800
      COMMON/NTBL/NTBL                                                  M0045900
      DIMENSION   NTBL(6)                                               M0046000
C                                                                       M0046100
      EQUIVALENCE(NTBL(1),NMOD  ),(NTBL(2),NCRNT ),(NTBL(3),NNDX  ),    M0046200
     1           (NTBL(4),NLAST ),(NTBL(5),NSTR  ),(NTBL(6),NMAX  )     M0046300
C                                                                       M0046400
C                                                                       M0046600
C           42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE   M0046700
C                                                                       M0046800
      COMMON/CANSTR/CANSTR,CANSTK                                       M0046900
      DIMENSION CANSTK(16),CANSTR(2)                                    M0047000
C                                                                       M0047100
      EQUIVALENCE(CANSTR(1),CANPTR),(CANSTR(2),CANCHK)                  M0047200
C                                                                       M0047300
C                                                                       M0047500
C           43.    COMMON BLOCK FOR LOOP                                M0047600
C                                                                       M0047700
      COMMON/DOLOOP/DOLOOP                                              M0047800
      DIMENSION DOLOOP(9)                                               M0047900
      LOGICAL DOFLAG,DLRFLG,IFFLAG                                      M0048000
C                                                                       M0048100
      EQUIVALENCE(DOLOOP(1),JUMPTO),(DOLOOP(2),ABSDO ),                 M0048200
     1           (DOLOOP(3),RELDO ),(DOLOOP(4),DONEST),                 M0048300
     2           (DOLOOP(5),DOMAX ),(DOLOOP(6),DOJUMP),                 M0048400
     3           (DOLOOP(7),DOFLAG),(DOLOOP(8),DLRFLG),                 M0048500
     4           (DOLOOP(9),IFFLAG)                                     M0048510
C                                                                       M0048600
C                                                                       M0048900
C           44.    COMMON BLOCK FOR ERROR POSITIONS                     M0049000
C                                                                       M0049100
      COMMON/ERRPOS/ERRPOS                                              M0049200
      INTEGER ERRPOS(302),ERRPNT(100),ESTACK(100),ERGSTK(100)           M0049300
      LOGICAL NOWARN                                                    M0049400
C                                                                       M0049500
      EQUIVALENCE(ERRPOS(1),NOWARN),(ERRPOS(3),ERRPNT(1)),              M0049600
     1           (ERRPOS(103),ESTACK(1)),(ERRPOS(203),ERGSTK(1))        M0049700
C                                                                       M0049800
C                                                                       M0050000
C           45.    NUMBER TABLE INDICES                                 M0050100
C                                                                       M0050200
      INCLUDE 'NUMBLK.INC'                                              M0050300
                                                                        M005040C
C     DATA STATEMENTS                                                   M0100000
C                                                                       M0100700
C...         2.    STACK AND POINTER STORAGE                            M0100800
C                                                                       M0100900
      DATA TOP,ARGTOP,IARGDM/0,0,99/                                    M0101500
C                                                                       M0101600
C...         5.    PROGRAM CONTROL FLAGS                                M0101700
C                                                                       M0101800
      DATA ENDFLG,NEWSTM,APTRAN,REFFLG/.TRUE.,.TRUE.,.FALSE.,.FALSE./   M0102600
C                                                                       M0102700
C...         6.    GHOST STACK FOR OBJECT TIME TEMPORARY ALLOCATION     M0102800
C                                                                       M0102900
C***  DATA SPECIFICATIONS TO COMPLEMENT 'INITAL'                        M0103300
C                                                                       M0103400
C     LINE                                                              M0103500
      DATA TXXXX(1, 1),TXXXX(2, 1)/4,0/                                 M0103600
C     PLANE                                                             M0103700
      DATA TXXXX(1, 2),TXXXX(2, 2)/4,0/                                 M0103800
C     CYLINDER                                                          M0103900
      DATA TXXXX(1, 3),TXXXX(2, 3)/7,0/                                 M0104000
C     CIRCLE                                                            M0104100
      DATA TXXXX(1, 4),TXXXX(2, 4)/7,0/                                 M0104200
C     SPHERE                                                            M0104300
      DATA TXXXX(1, 5),TXXXX(2, 5)/4,0/                                 M0104400
C     HYPERBOLA                                                         M0104500
      DATA TXXXX(1, 6),TXXXX(2, 6)/10,0/                                M0104600
C     LOFT CONIC                                                        M0104700
      DATA TXXXX(1, 7),TXXXX(2, 7)/10,0/                                M0104800
C     ELLIPSE                                                           M0104900
      DATA TXXXX(1, 8),TXXXX(2, 8)/10,0/                                M0105000
C     CONE                                                              M0105100
      DATA TXXXX(1, 9),TXXXX(2, 9)/7,0/                                 M0105200
C     GENERAL CONIC                                                     M0105300
      DATA TXXXX(1,10),TXXXX(2,10)/10,0/                                M0105400
C     TABULATED CYLINDER                                                M0105500
      DATA TXXXX(1,11),TXXXX(2,11)/2,0/                                 M0105600
C     RULED SURFACE                                                     M0105700
      DATA TXXXX(1,12),TXXXX(2,12)/2,0/                                 M0105800
C     POLYCONIC SURFACE                                                 M0105900
      DATA TXXXX(1,13),TXXXX(2,13)/2,0/                                 M0106000
C     QUADRIC                                                           M0106100
      DATA TXXXX(1,14),TXXXX(2,14)/10,0/                                M0106200
C     PARAMETRIC SURFACE                                                M0106300
      DATA TXXXX(1,15),TXXXX(2,15)/10,0/                                M0106400
C     UNUSED                                                            M0106500
      DATA TXXXX(1,16),TXXXX(2,16)/0,0/                                 M0106600
C     UNUSED                                                            M0106700
      DATA TXXXX(1,17),TXXXX(2,17)/0,0/                                 M0106800
C     MATRIX                                                            M0106900
      DATA TXXXX(1,18),TXXXX(2,18)/12,0/                                M0107000
C     POINT                                                             M0107100
      DATA TXXXX(1,19),TXXXX(2,19)/3,0/                                 M0107200
C     VECTOR                                                            M0107300
      DATA TXXXX(1,20),TXXXX(2,20)/3,0/                                 M0107400
C     REAL                                                              M0107500
      DATA TXXXX(1,21),TXXXX(2,21)/1,0/                                 M0107600
C     INTEGER                                                           M0107700
      DATA TXXXX(1,22),TXXXX(2,22)/1,0/                                 M0107800
C     BOOLEAN                                                           M0107900
      DATA TXXXX(1,23),TXXXX(2,23)/1,0/                                 M0108000
C     SUBSCRIPT                                                         M0108100
      DATA TXXXX(1,24),TXXXX(2,24)/1,0/                                 M0108200
C     STRING                                                            M0108300
      DATA TXXXX(1,25),TXXXX(2,25)/12,0/                                M0108400
C     PATERN                                                            M0108500
      DATA TXXXX(1,26),TXXXX(2,26)/2,0/                                 M0108600
C     BOUNDS                                                            M0108700
      DATA TXXXX(1,27),TXXXX(2,27)/0,0/                                 M0108800
C     OBJECT                                                            M0108900
      DATA TXXXX(1,28),TXXXX(2,28)/0,0/                                 M0109000
C     SSURF                                                             M0109100
      DATA TXXXX(1,29),TXXXX(2,29)/2,0/                                 M0109200
C     SCURV                                                             M0109300
      DATA TXXXX(1,30),TXXXX(2,30)/2,0/                                 M0109400
C     UNUSED                                                            M0109500
      DATA TXXXX(1,31),TXXXX(2,31)/0,0/                                 M0109600
C     UNUSED                                                            M0109700
      DATA TXXXX(1,32),TXXXX(2,32)/0,0/                                 M0109800
C                                                                       M0109900
C...      13.      NAMTBL POINTERS TO NEGATIVE NUMBERS                  M0110000
C                                                                       M0110100
C                                                                       M0110300
C...        11.    SEQUENCE NUMBER STORAGE                              M0110400
C                                                                       M0110500
      DATA     SEQNO/1/                                                 M0110900
C                                                                       M0111000
C...        12.    LARGE DATA ARRAY STORAGE REQUIREMENTS                M0111100
C                                                                       M0111200
      DATA  MAXSIZ,CANSIZ,KSC,CANTOP,ISC /1102*0,100,3/                 M0112000
      DATA PARDEF,TABCYS/.FALSE.,.FALSE./                               M0112100
C                                                                       M0112200
C...      14.      I. L. LIST OPTION FLAGS                              M0112300
C                                                                       M0112400
      DATA       CILPRT,  ILPRT, INTERP, ASSEMB, TRACFL                 M0113400
     /          ,PRTERR,  MCHDNG/                                       M0113500
     /           2*.FALSE.,.TRUE.,4*.FALSE./                            M0113600
C                                                                       M0113700
C...        15.    ARRAY LIMIT STORAGE                                  M0113800
C                                                                       M0113900
      DATA RNGPT,RANGE/1,400*0/                                         M0114200
C                                                                       M0114300
C...        16.    LITERALS FOR I. L. OPERATION CODES                   M0114400
C                                                                       M0114500
      DATA FADD  / 1/                                                   M0115700
      DATA FSUB  / 2/                                                   M0115800
      DATA FMPY  / 3/                                                   M0115900
      DATA FDIV  / 4/                                                   M0116000
      DATA FEXP  / 5/                                                   M0116100
      DATA LABELX/ 6/                                                   M0116200
      DATA ENTRYX/ 7/                                                   M0116300
      DATA JUMP  / 8/                                                   M0116400
      DATA SEQNCE/ 9/                                                   M0116500
      DATA RETMC /10/                                                   M0116600
      DATA CONJMP/11/                                                   M0116700
      DATA RESRV /12/                                                   M0116800
      DATA CVTSUB/13/                                                   M0116900
      DATA CALMC /14/                                                   M0117000
      DATA ASNADD/15/                                                   M0117100
      DATA ASNJMP/16/                                                   M0117200
      DATA REPL  /17/                                                   M0117300
      DATA CALL  /18/                                                   M0117400
      DATA MOVE  /19/                                                   M0117500
      DATA VBLJMP/20/                                                   M0117600
      DATA HOLDAT/21/                                                   M0117700
C                                                                       M0117800
C...        17.    MODE CODES                                           M0117900
C                                                                       M0118000
      DATA  LINE  / 1/                                                  M0119600
      DATA  PLANE / 2/                                                  M0119700
      DATA  CYLNDR/ 3/                                                  M0119800
      DATA  CIRCLE/ 4/                                                  M0119900
      DATA  SPHERE/ 5/                                                  M0120000
      DATA  HYPERB/ 6/                                                  M0120100
      DATA  CONIC / 7/                                                  M0120200
      DATA  ELLIPS/ 8/                                                  M0120300
      DATA  CONE  / 9/                                                  M0120400
      DATA  GCONIC/10/                                                  M0120500
      DATA  TABCYL/11/                                                  M0120600
      DATA  RLDSRF/12/                                                  M0120700
      DATA  POLCON/13/                                                  M0120800
      DATA  QADRIC/14/                                                  M0120900
      DATA  PARSRF/15/                                                  M0121000
      DATA  UNUS1 /16/                                                  M0121100
      DATA  UNUS2 /17/                                                  M0121200
      DATA  MATRIX/18/                                                  M0121300
      DATA  POINT /19/                                                  M0121400
      DATA  VECTOR/20/                                                  M0121500
      DATA  REAL  /21/                                                  M0121600
      DATA  INTGER/22/                                                  M0121700
      DATA  BOOL  /23/                                                  M0121800
      DATA  SUBSCR/24/                                                  M0121900
      DATA  STRING/25/                                                  M0122000
      DATA  PATERN/26/                                                  M0122100
      DATA  BOUNDS/27/                                                  M0122200
      DATA  OBJECT/28/                                                  M0122300
      DATA  SSURF /29/                                                  M0122400
      DATA  SCURV /30/                                                  M0122500
      DATA  UNUS3 /31/                                                  M0122600
      DATA  UNUS4 /32/                                                  M0122700
C                                                                       M0122800
C...        18.    STRING STORAGE AREA                                  M0122900
C                                                                       M0123000
      DATA CHR    /' '/                                                 M0123300
C                                                                       M0123400
C...      19.      INTERMEDIATE LANGUAGE TEXT                           M0123500
C                                                                       M0123600
      DATA COMFIN,LENGTH,TPNTRX/.FALSE.,0,0/                            M0124300
C                                                                       M0124400
C         22.      MACRO PROCESSING VARIABLES                           M0124500
C                                                                       M0124600
      DATA MACDFP ,MCNMB  ,MCHSTP ,MCTXTP ,MCSAVP ,MNMVBP ,MVSEG  ,     M0128900
     1     CALLPT ,TEXTST ,MVPNT  ,BRANCH ,MAXSPS ,INTMED ,MAJWRD ,     M0129000
     2     NMLINE ,WAY    ,BITWDS ,MCSLNT ,MACLNT ,MSP    ,MVEXST ,     M0129100
     3     MACTOP ,MCSTRT ,MAJOR  ,ROUTE  ,ROAD   ,SAVMSP ,TYP    ,     M0129200
     4     LNUSDP ,MCTOPP ,MCSPDP ,MCSRCH ,NUMARG ,WHCHMN ,LARGMV ,     M0129300
     5     VBLSVP ,PATHLN ,NEXTLN ,PATHCH ,NUMVAR,NUMCAL  /41*0/        M0129400
C                                                                       M0129500
      DATA MACLDD ,CALLON ,CALLMV ,ILHLT  ,MVMAC  ,MACRED ,MVTRUE ,     M0129600
     1     FINMAC ,ENTRY  ,NESTG  ,ENDMCH ,MACLK  ,MACEND ,SHOULD       M0129700
     2     /14*.FALSE./                                                 M0129800
C                                                                       M0129900
      DATA MBPTR  ,LSTWRT ,MCDFDM ,MHSTDM ,MCSVDM ,MNMVDM ,MSEQDM       M0130000
     1    /    2  ,     1 ,   400 ,  1800 ,    10 ,    25 ,    50/      M0130100
      DATA LNSDDM ,MVARDM ,MASDM  ,NUMBIT ,MACFND ,MSPDDM ,IVSVDM       M0130200
     1    /    50 ,    32 ,  100  ,    31 ,    -1 ,  1300 ,   900/      M0130300
C                                                                       M0130400
C         23.      MACRO PROCESSING ARRAYS                              M0130500
C                                                                       M0130600
      DATA  MACXX2/1,2,900*0/                                           M0131100
C                                                                       M0131200
C         24.      MACRO PROCESSING ARRAYS                              M0131300
C                                                                       M0131400
      DATA  MACXX3/2630*0/                                              M0132100
C                                                                       M0132200
C         25.      MACRO PROCESSING ARRAYS                              M0132300
C                                                                       M0132400
      DATA  MACXX4/100*0/                                               M0132900
C                                                                       M0133000
C         25A.     MACRO PROCESSING ARRAYS                              M0133100
C                                                                       M0133200
C                                                                       M0133500
C         26.      MACRO PROCESSING ARRAYS                              M0133600
C                                                                       M0133700
      DATA  MACXX6/1300*0/                                              M0134100
C                                                                       M0134200
C         26A.     MACRO PROCESSING ARRAYS                              M0134300
      DATA  MACXX7/182*0/                                               M0134900
C                                                                       M0135000
C...        27.    OPERAND MODIFIERS                                    M0135100
C                                                                       M0135200
      DATA NOUGHT/0/                                                    M0135900
      DATA DLR   /1/                                                    M0136000
      DATA DBLDLR/2/                                                    M0136100
      DATA TRPDLR/3/                                                    M0136200
      DATA QUADLR/4/                                                    M0136300
      DATA QUIDLR/5/                                                    M0136400
      DATA HEXDLR/6/                                                    M0136410
      DATA SPTDLR/7/                                                    M0136420
C                                                                       M0136500
C...        29.    CLASS CODE MODULI                                    M0136600
C                                                                       M0136700
      DATA MODULO /1000/                                                M0136900
      DATA MODHLF / 500/                                                M0137000
C                                                                       M0137100
C...        30.   NAMTBL POINTERS TO FIRST CANONICAL FORMS IN EACH BLOCKM0137200
C                                                                       M0137300
      DATA  FIRST /6*0/                                                 M0137600
C....                                                                   M0137700
C           31.   COMMON BLOCK FOR PRO026 AND MOTION                    M0137800
C....                                                                   M0137900
      DATA JMPING,FMTERR,MCSJMP,FEDSAV/4*.FALSE./                       M0139200
      DATA NUMBCS/0/                                                    M0139300
C                                                                       M0139400
C           32.   COMMON BLOCK FOR SETBIT AND BITMCH                    M0139500
C                                                                       M0139600
      DATA LOBIT( 1),LOBIT( 2),LOBIT( 3),LOBIT( 4),                     M0140100
     1     LOBIT( 5),LOBIT( 6),LOBIT( 7),LOBIT( 8),                     M0140200
     2     LOBIT( 9),LOBIT(10),LOBIT(11),LOBIT(12),                     M0140300
     3     LOBIT(13),LOBIT(14),LOBIT(15),LOBIT(16)                      M0140400
C    4    /Z80000000,Z40000000,Z20000000,Z10000000,                     M0140500
     4    /Z80000000,1073741824,536870912,268435456,                    M0140510
C    5     Z 8000000,Z 4000000,Z 2000000,Z 1000000,                     M0140600
     5     134217728, 67108864, 33554432, 16777216,                     M0140610
C    6     Z  800000,Z  400000,Z  200000,Z  100000,                     M0140700
     6       8388608,  4194304,  2097152,  1048576,                     M0140710
C    7     Z   80000,Z   40000,Z   20000,Z   10000/                     M0140800
     7        524288,   262144,   131072,    65536/                     M0140810
      DATA HIBIT( 1),HIBIT( 2),HIBIT( 3),HIBIT( 4),                     M0140900
     1     HIBIT( 5),HIBIT( 6),HIBIT( 7),HIBIT( 8),                     M0141000
     2     HIBIT( 9),HIBIT(10),HIBIT(11),HIBIT(12),                     M0141100
     3     HIBIT(13),HIBIT(14),HIBIT(15),HIBIT(16)                      M0141200
C    4    /Z    8000,Z    4000,Z    2000,Z    1000,                     M0141300
     4    /    32768,    16384,     8192,     4096,                     M0141310
C    5     Z     800,Z     400,Z     200,Z     100,                     M0141400
     5          2048,     1024,      512,      256,                     M0141410
C    6     Z      80,Z      40,Z      20,Z      10,                     M0141500
     6           128,       64,       32,       16,                     M0141510
C    7     Z       8,Z       4,Z       2,Z       1/                     M0141600
     7             8,        4,        2,        1/                     M0141610
C...                                                                    M0141700
C ...       35.    COMMON BLOCK FOR BOUNDED GEOMETRY AND CFSAVE         M0141800
C                                                                       M0141900
C                                                                       M0142000
C                                                                       M0142600
C           36.    SYSTEM MACRO AND SEGMENT READ VARIABLES              M0142700
C                                                                       M0142800
      DATA ALOPN,LMRSTR,LMREND/3*.FALSE./                               M0143600
      DATA NMSEG,NMMAC,ITMPCT/3*0/                                      M0143700
C                                                                       M0143800
C...        37.    INCLUSIVE SUBSCRIPT VARIABLES                        M0143900
C                                                                       M0144000
      DATA ISSFL,ISSEND/2*.FALSE./                                      M0145000
C                                                                       M0145100
C...        39.    COMMON BLOCK LIBRARY PRINTING FLAG                   M0145200
C                                                                       M0145300
      DATA LIBPRT/.FALSE./                                              M0145400
C                                                                       M0145600
C...        41.    NUMBER TABLE OVERFLOW VARIABLES                      M0145700
C                                                                       M0145800
      DATA NCRNT,NLAST,NSTR,NMAX/1,0,1,100/                             M0146500
C                                                                       M0146600
C           42.    COMMON BLOCK FOR CANON AND OBTAIN ARGUMENT STORAGE   M0146700
C                                                                       M0146800
      DATA CANPTR,CANCHK/0,16/                                          M0147400
C                                                                       M0147500
C           43.    COMMON BLOCK FOR LOOP                                M0147600
C                                                                       M0147700
      DATA DOFLAG,DLRFLG,IFFLAG/3*.FALSE./                              M0148700
      DATA JUMPTO,ABSDO,RELDO,DONEST,DOMAX,DOJUMP/0,0,0,10,13,0/        M0148800
C                                                                       M0148900
C           44.    COMMON BLOCK FOR ERROR POSITIONS                     M0149000
C                                                                       M0149100
      DATA NOWARN/.FALSE./                                              M0149900
C                                                                       M0150000
C           45.    NUMBER TABLE INDICIES                                M0150100
C                                                                       M0150200
      DATA NMBRS,LSTCHR,MASGND/0,13,2000/                               M0150300
C                                                                       M0150400
      END                                                               M0150500
**** MODULE = IBMASSEM ****
**** SOURCE FILE : M0000745.ORG ****
*.....IMPLEMENTATION DEPENDENT SUBROUTINE ADDRSS...         12/67  *ID* ADDR0000
ADDRSS START  0                                                         ADDR0010
       BC     15,12(0,15)                                               ADDR0020
       DC     X'0700C1C4'                                               ADDR0030
       DC     X'C4D9E2E2'                                               ADDR0040
       L      1,0(1)                                                    ADDR0050
       LA     0,0(1)                                                    ADDR0060
       BCR    15,14                                                     ADDR0070
       END                                                              ADDR0080
**** SOURCE FILE : M0000860.ORG ****
*.....IMPLEMENTATION DEPENDENT SUBROUTINE   ...APT241       8/68  DE,PH A2410000
*                                                                       A2410010
* PURPOSE          TO SAVE NECESSARY RETURN INFORMATION IN LOCAL        A2410020
*                  STORAGE, FOR USE IN RETURNING FROM APT242.           A2410030
*                                                                       A2410040
* CALLING SEQUENCE  CALL APT241                                         A2410050
*                                                                       A2410060
* ARGUMENTS        NONE                                                 A2410070
*                                                                       A2410080
* CALLED BY        APT200                                               A2410090
*                  APT201                                               A2410100
*                  GO                                                   A2410110
*                                                                       A2410120
* SUBSIDIARIES     NONE                                                 A2410130
*                                                                       A2410140
* RESTRICTIONS     NONE                                                 A2410150
*                                                                       A2410160
* DIAGNOSTICS      NONE                                                 A2410170
*                                                                       A2410180
* IMPLEMENTATION DEPENDENT SUBROUTINE ENTRY APT242                      A2410190
*                                                                       A2410200
* PURPOSE          TO RETURN TO THE SUBROUTINE WHICH CALLED APT241      A2410210
*                                                                       A2410220
* CALLING SEQUENCE  CALL APT242                                         A2410230
*                                                                       A2410240
* ARGUMENTS        NONE                                                 A2410250
*                                                                       A2410260
* CALLED BY        AERR                                                 A2410270
*                                                                       A2410280
* SUBSIDIARIES     NONE                                                 A2410290
*                                                                       A2410300
* RESTRICTIONS     NONE                                                 A2410310
*                                                                       A2410320
* DIAGNOSTICS      NONE                                                 A2410330
         ENTRY APT242                                                   A2410340
APT241   START                                                          A2410350
         STM    14,12,12(13)                                            A2410360
         BALR   2,0                                                     A2410370
         USING  *,2                                                     A2410380
         ST     13,A                                                    A2410390
         MVC   B(60),12(13)                                             A2410400
         LM     14,12,12(13)                                            A2410410
         BR     14                                                      A2410420
APT242   BALR   2,0                                                     A2410430
         USING  *,2                                                     A2410440
         L      13,A                                                    A2410450
          LM   14,12,B                                                  A2410460
         BR     14                                                      A2410470
A        DS     F                                                       A2410480
B        DS    15F                                                      A2410490
         END                                                            A2410500
**** MODULE = IBMBITCM ****
**** SOURCE FILE : M0006723.IBM   ***
*
C                                                                       M0000100
C PURPOSE      TO INITIALIZE THE LABELLED COMMON AREAS                  M0000200
C              MODULI , BITCOM AND SYMFIL.                              M0000300
C                                                                       M0000400
      BLOCK DATA BDBITC                                                 M0000500
C                                                                       M0000600
      IMPLICIT INTEGER (A-Z)                                            M0000700
C                                                                       M0000800
C          5.      CLASS CODE MODULI                                    M0000900
C                                                                       M0001000
      COMMON/MODULI/MODULO                                              M0001100
C                                                                       M0001300
C          4.    BIT COMBINATION TABLE                                  M0001400
C                                                                       M0001500
      COMMON/BITCOM/BIT                                                 M0001600
      DIMENSION BIT(32)                                                 M0001700
      DIMENSION LOBIT(16),HIBIT(16)                                     M0001900
      EQUIVALENCE (LOBIT(1),BIT(1)),(HIBIT(1),BIT(17))                  M0002000
C                                                                       M0003700
C          6.    SYMBOLIC FILE DEFINITIONS                              M0003800
C                                                                       M0003900
      COMMON/SYMFIL/ BPFILE,NTFILE,GPFILE,ELFILE,LCDATA,VLFILE          M0004000
C                                                                       M0010000
C     DATA STATEMENTS                                                   M0010100
C                                                                       M0010200
C                                                                       M0010800
C          5.      CLASS CODE MODULI                                    M0010900
C                                                                       M0011000
      DATA MODULO/1000/                                                 M0011200
C                                                                       M0011300
C          4.    BIT COMBINATION TABLE                                  M0011400
C                                                                       M0011500
      DATA LOBIT( 1),LOBIT( 2),LOBIT( 3),LOBIT( 4),                     M0012100
     1     LOBIT( 5),LOBIT( 6),LOBIT( 7),LOBIT( 8),                     M0012200
     2     LOBIT( 9),LOBIT(10),LOBIT(11),LOBIT(12),                     M0012300
     3     LOBIT(13),LOBIT(14),LOBIT(15),LOBIT(16)                      M0012400
C    4    /Z80000000,Z40000000,Z20000000,Z10000000,                     M0012500
     4     /Z80000000,1073741824,536870912,268435456,                   M0012510
C    5     Z 8000000,Z 4000000,Z 2000000,Z 1000000,                     M0012600
     5     134217728, 67108864, 33554432, 16777216,                     M0012610
C    6     Z  800000,Z  400000,Z  200000,Z  100000,                     M0012700
     6       8388608,  4194304,  2097152,  1048576,                     M0012710
C    7     Z   80000,Z   40000,Z   20000,Z   10000/                     M0012800
     7        524288,   262144,   131072,    65536/                     M0012810
      DATA HIBIT( 1),HIBIT( 2),HIBIT( 3),HIBIT( 4),                     M0012900
     1     HIBIT( 5),HIBIT( 6),HIBIT( 7),HIBIT( 8),                     M0013000
     2     HIBIT( 9),HIBIT(10),HIBIT(11),HIBIT(12),                     M0013100
     3     HIBIT(13),HIBIT(14),HIBIT(15),HIBIT(16)                      M0013200
C    4    /Z    8000,Z    4000,Z    2000,Z    1000,                     M0013300
     4    /    32768,    16384,     8192,     4096,                     M0013310
C    5     Z     800,Z     400,Z     200,Z     100,                     M0013400
     5          2048,     1024,      512,      256,                     M0013410
C    6     Z      80,Z      40,Z      20,Z      10,                     M0013500
     6           128,       64,       32,       16,                     M0013510
C    7     Z       8,Z       4,Z       2,Z       1/                     M0013600
     7             8,        4,        2,        1/                     M0013610
C                                                                       M0013700
C          6.    SYMBOLIC FILE DEFINITIONS                              M0013800
C                                                                       M0013900
      DATA           BPFILE,NTFILE,GPFILE,ELFILE,LCDATA,VLFILE/         M0014100
     1                    1,     2,     3,     4,     5,     6/         M0014200
      END                                                               M0014300
**** EOF ****





(uafhcx) 19% 