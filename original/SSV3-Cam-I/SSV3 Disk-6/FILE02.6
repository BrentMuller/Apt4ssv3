cat afile02.6
      ICUR=ICUR+2                                                       00009200
      IF(COM(ICUR).NE.APARAM) GO TO 998                                 00009300
      ICUR=ICUR+2                                                       00009400
      IF(COM(ICUR).NE.ASCALA) GO TO 998                                 00009500
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00009600
      UST=COM(ICUR+1)                                                   00009700
      ICUR=ICUR+2                                                       00009800
      IF(COM(ICUR).NE.ASCALA) GO TO 998                                 00009900
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00010000
      VST=COM(ICUR+1)                                                   00010100
      ICUR=ICUR+2                                                       00010200
      IF(COM(ICUR).NE.AINCR) GO TO 998                                  00010300
      ICUR=ICUR+2                                                       00010400
      IF(COM(ICUR).EQ.ASCALA) GO TO 110                                 00010500
      IF(COM(ICUR).EQ.AVECTO) GO TO 130                                 00010600
      IF(COM(ICUR).EQ.APLANE) GO TO 150                                 00010700
      GO TO 998                                                         00010800
C--SCALAR LIFT BACK PARAMETER                                           00010900
  110 CONTINUE                                                          00011000
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00011100
      VINC(1)=COM(ICUR+1)                                               00011200
      ICUR=ICUR+2                                                       00011300
      INCTYP=21                                                         00011400
      GO TO 190                                                         00011500
  130 CONTINUE                                                          00011600
C--VECTOR LIFTBACK PARAMETER                                            00011700
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00011800
      DO 140 I=1,3                                                      00011900
  140 VINC(I)=COM(ICUR+I)                                               00012000
      ICUR=ICUR+4                                                       00012100
      INCTYP=20                                                         00012200
      GO TO 190                                                         00012300
  150 CONTINUE                                                          00012400
C--CLEARANCE PLANE LIFTBACK                                             00012500
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00012600
      DO 160 I=1,4                                                      00012700
  160 VINC(I)=COM(ICUR+I)                                               00012800
      INCTYP=2                                                          00012900
      ICUR=ICUR+5                                                       00013000
      GO TO 190                                                         00013100
C                                                                       00013200
  190 CONTINUE                                                          00013300
      IF(ICUR.NE.NLAST) GO TO 996                                       00013400
C--CHECK IF PROPER BLOCKS ARE INITIALIZED                               00013500
      IF(NDS.EQ.NOGOOD) GO TO 994                                       00013600
      IF(NPS.EQ.NOGOOD) GO TO 994                                       00013700
      IF(NAXIS.EQ.NOGOOD) GO TO 994                                     00013800
C                                                                       00013900
C--GET OTHER NEEDED APT VARIABLES                                       00014000
      CALL GETAPT(TUL,PTOLI,PTOLO,DTOL,AMAXDP,ELMAX,MAXCL,IR)           00014100
      IF(IR.NE.0) GO TO 993                                             00014200
C--FETCH PART AND DRIVE SURFACES                                        00014300
      CALL GFETCH(NBIG,MAXLDA,COM,DGEOM,PGEOM,IR)                       00014400
      IF(IR.NE.0) GO TO 992                                             00014500
C--SET APPROPRIATE STARTING VALUES FOR CALL TO SSPATH                   00014600
C--ICLSKP NEGATIVE GUARANTEES NO CL OUTPUT UNTIL TE IS                  00014700
C--COMPENSATED                                                          00014800
      IF(UST.LT.DLIM(1)-SMAL.OR.UST.GT.DLIM(2)+SMAL) GO TO 996          00014900
      IF(VST.LT.DLIM(3)-SMAL.OR.VST.GT.DLIM(4)+SMAL) GO TO 996          00015000
      PDIR=ONE                                                          00015100
      IDTYPE=1                                                          00015200
      IF(DGEOM(3).EQ.ASCURV) IDTYPE=0                                   00015300
      SCALHT=ZERO                                                       00015400
      STEPOV=ZERO                                                       00015500
      MAXCL=1                                                           00015600
      ICLSKP=-1                                                         00015700
      IQUAL=0                                                           00015800
      DO 170 I=1,3                                                      00015900
      TE(I)=ZERO                                                        00016000
      TA(I)=ZERO                                                        00016100
      TD(I)=ZERO                                                        00016200
  170 CONTINUE                                                          00016300
C                                                                       00016400
      DSTEP=ONE                                                         00016500
      IPART=PGEOM(4)                                                    00016600
      IDRIV=DGEOM(4)                                                    00016700
      STEPMX=ZERO                                                       00016800
C                                                                       00016810
C.... PERFORM PRELIMINARY INTERFERENCE CHECKING CALCULATIONS IF REQD    00016820
      IF (LINTCK) CALL INEX(COM(IPART),PSIDE,PTOLI,PTOLO)               00016830
C                                                                       00016840
      CALL SSPATH(COM(IDRIV), IDTYPE, PDIR, DTOL, DSTEP, DOFSET,        00016900
     X           DLIM, IDTOOL, IAXIS, AXIS, ITLDIR,                     00017000
     X       TLDIR, COM(IPART), PSIDE, PTHICK, PTOLI, PTOLO, IPTOOL,    00017100
     X           TUL, UST, VST, SCALHT, STEPOV, STEPMX,                 00017200
     X           AMAXDP,ELMAX, MAXCL, ICLSKP, IQUAL,                    00017300
     X           TE,  TA,  TD,  PTEM,  IRR)                             00017400
      IF(IRR.NE.0) GO TO 990                                            00017500
C--POSN SUCESSFUL, NOW COMPENSATE TOOL END                              00017600
      IF(INCTYP.EQ.20) GO TO 172                                        00017700
      IF(INCTYP.EQ.2) GO TO 174                                         00017800
      BACKUP=VINC(1)                                                    00017900
      DO 181 I=1,3                                                      00018000
  181 TE(I)=TE(I)-BACKUP*TD(I)                                          00018100
      GO TO 185                                                         00018200
C                                                                       00018300
  174 CONTINUE                                                          00018400
C---CLEARANCE PLANE CALCULATION                                         00018500
      CALL CLIFT(TE,VINC,TE)                                            00018600
      GO TO 185                                                         00018700
C                                                                       00018800
  172 CONTINUE                                                          00018900
C--VECTOR INCREMENT                                                     00019000
      DO 183 I=1,3                                                      00019100
  183 TE(I)=TE(I)+VINC(I)                                               00019200
      GO TO 185                                                         00019300
C                                                                       00019400
  185 CONTINUE                                                          00019500
      CALL CLPUT(TE,TA,1)                                               00019600
      GO TO 999                                                         00019700
C                                                                       00019800
C--PROCESS PATH COMMAND                                                 00019900
  200 CONTINUE                                                          00020000
      CALL CLPUT(TE,TA,-1)                                              00020100
      CALL HOLFRM(COM(ICUR+1),CTEST,1,6,NWD)                            00020190
      IF(CTEST.NE.WDS) GO TO 998                                        00020200
      ICUR=ICUR+2                                                       00020300
      IF(COM(ICUR).NE.APARAM) GO TO 998                                 00020400
      ICUR=ICUR+2                                                       00020500
      IF(COM(ICUR).NE.ASCALA) GO TO 998                                 00020600
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00020700
      UST=COM(ICUR+1)                                                   00020800
      ICUR=ICUR+2                                                       00020900
      IF(COM(ICUR).NE.ASCALA) GO TO 998                                 00021000
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00021100
      VST=COM(ICUR+1)                                                   00021200
      ICUR=ICUR+2                                                       00021300
      IF(COM(ICUR).NE.ATANSP.AND.COM(ICUR).NE.ACRSSP) GO TO 998         00021400
      IDTYPE=1                                                          00021500
      IF(COM(ICUR).EQ.ACRSSP) IDTYPE=2                                  00021600
      IF(DGEOM(3).EQ.ASCURV) IDTYPE=0                                   00021700
      ICUR=ICUR+2                                                       00021800
      IF(COM(ICUR).NE.APLUS.AND.COM(ICUR).NE.AMINUS) GO TO 998          00021900
      PDIR=ONE                                                          00022000
      IF(COM(ICUR).EQ.AMINUS) PDIR=-ONE                                 00022100
      ICUR=ICUR+2                                                       00022200
C---OPTIONAL PARAMETER TO INDICATE WHETHER TO SKIP FIRST RECORD         00022300
      ISKP=0                                                            00022400
      IF(COM(ICUR).NE.ASCALA) GO TO 210                                 00022500
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00022600
      IF(COM(ICUR+1).GT.SMAL) ISKP=1                                    00022700
      ICUR=ICUR+2                                                       00022800
      GO TO 210                                                         00022900
C                                                                       00023000
  210 CONTINUE                                                          00023100
      IF(ICUR.NE.NLAST) GO TO 995                                       00023200
      IF(NDS.EQ.NOGOOD) GO TO 994                                       00023300
      IF(NPS.EQ.NOGOOD) GO TO 994                                       00023400
      IF(NAXIS.EQ.NOGOOD) GO TO 994                                     00023500
C                                                                       00023600
C--GET OTHER NEEDED APT VARIABLES                                       00023700
      CALL GETAPT(TUL,PTOLI,PTOLO,DTOL,AMAXDP,ELMAX,MAXCL,IR)           00023800
      IF(IR.NE.0) GO TO 993                                             00023900
C--FETCH PART AND DRIVE SURFACES                                        00024000
      CALL GFETCH(NBIG,MAXLDA,COM,DGEOM,PGEOM,IR)                       00024100
      IF(IR.NE.0) GO TO 992                                             00024200
C--SET APPROPRIATE STARTING VALUES FOR CALL TO SSPATH                   00024300
C--ICLSKP NEGATIVE GUARANTEES NO CL OUTPUT UNTIL TE IS                  00024400
C--COMPENSATED                                                          00024500
      IF(UST.LT.DLIM(1)-SMAL.OR.UST.GT.DLIM(2)+SMAL) GO TO 996          00024600
      IF(VST.LT.DLIM(3)-SMAL.OR.VST.GT.DLIM(4)+SMAL) GO TO 996          00024700
      SCALHT=ZERO                                                       00024800
      STEPOV=ZERO                                                       00024900
      ICLSKP=ISKP                                                       00025000
      IQUAL=0                                                           00025100
      DO 220 I=1,3                                                      00025200
      TE(I)=ZERO                                                        00025300
      TA(I)=ZERO                                                        00025400
      TD(I)=ZERO                                                        00025500
  220 CONTINUE                                                          00025600
C                                                                       00025700
      IPART=PGEOM(4)                                                    00025800
      DSTEP=ONE                                                         00025900
      IDRIV=DGEOM(4)                                                    00026000
      STEPMX=ZERO                                                       00026100
C                                                                       00026110
C.... PERFORM PRELIMINARY INTERFERENCE CHECKING CALCULATIONS IF REQD    00026120
      IF (LINTCK) CALL INEX(COM(IPART),PSIDE,PTOLI,PTOLO)               00026130
C                                                                       00026140
      CALL SSPATH(COM(IDRIV), IDTYPE, PDIR, DTOL, DSTEP, DOFSET,        00026200
     X           DLIM, IDTOOL, IAXIS, AXIS, ITLDIR,                     00026300
     X       TLDIR, COM(IPART), PSIDE, PTHICK, PTOLI, PTOLO, IPTOOL,    00026400
     X           TUL, UST, VST, SCALHT, STEPOV, STEPMX,                 00026500
     X           AMAXDP,ELMAX, MAXCL, ICLSKP, IQUAL,                    00026600
     X           TE,  TA,  TD,  PTEM,  IRR)                             00026700
      IF(IRR.NE.0) GO TO 990                                            00026800
      GO TO 999                                                         00026900
C                                                                       00027000
C--PROCESS INPUT FOR ZIGZAG AND PICKFD                                  00027100
  300 CONTINUE                                                          00027200
      CALL HOLFRM(COM(ICUR+1),CTEST,1,6,NWD)                            00027290
      IF(CTEST.NE.WDS) GO TO 998                                        00027300
      ICUR=ICUR+2                                                       00027400
      IF(COM(ICUR).NE.APARAM) GO TO 998                                 00027500
      ICUR=ICUR+2                                                       00027600
      IF(COM(ICUR).NE.ASCALA) GO TO 998                                 00027700
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00027800
      UST=COM(ICUR+1)                                                   00027900
      ICUR=ICUR+2                                                       00028000
      IF(COM(ICUR).NE.ASCALA) GO TO 998                                 00028100
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00028200
      VST=COM(ICUR+1)                                                   00028300
      ICUR=ICUR+2                                                       00028400
      IF(COM(ICUR).NE.ATANSP.AND.COM(ICUR).NE.ACRSSP) GO TO 998         00028500
      IDTYPE=1                                                          00028600
      IF(COM(ICUR).EQ.ACRSSP) IDTYPE=2                                  00028700
      IF(DGEOM(3).EQ.ASCURV) IDTYPE=0                                   00028800
      ICUR=ICUR+2                                                       00028900
      IF(COM(ICUR).NE.APLUS.AND.COM(ICUR).NE.AMINUS) GO TO 998          00029000
      PDIR=ONE                                                          00029100
      IF(COM(ICUR).EQ.AMINUS) PDIR=-ONE                                 00029200
      ICUR=ICUR+2                                                       00029300
      IF(COM(ICUR).NE.ASTEPO) GO TO 998                                 00029400
      ICUR=ICUR+2                                                       00029500
      IF(COM(ICUR).NE.APLUS.AND.COM(ICUR).NE.AMINUS) GO TO 998          00029600
      CDIR=ONE                                                          00029700
      IF(COM(ICUR).EQ.AMINUS) CDIR=-ONE                                 00029800
      ICUR=ICUR+2                                                       00029900
C---OPTIONAL PARAMETER TO INDICATE WHETHER TO SKIP FIRST RECORD         00030000
      ISKP=0                                                            00030100
      IF(COM(ICUR).NE.ASCALA) GO TO 310                                 00030200
      IF(CKDEF(COM(ICUR+1))) GO TO 997                                  00030300
      IF(COM(ICUR+1).GT.SMAL) ISKP=1                                    00030400
      ICUR=ICUR+2                                                       00030500
      GO TO 310                                                         00030600
C                                                                       00030700
  310 CONTINUE                                                          00030800
      IF(ICUR.NE.NLAST) GO TO 995                                       00030900
      IF(NDS.EQ.NOGOOD) GO TO 994                                       00031000
      IF(NPS.EQ.NOGOOD) GO TO 994                                       00031100
      IF(NAXIS.EQ.NOGOOD) GO TO 994                                     00031200
      IF(NFEED.EQ.NOGOOD) GO TO 994                                     00031300
      IF(NSTEPO.EQ.NOGOOD) GO TO 994                                    00031400
      IF(WORD.EQ.APICKF.AND.NCLRPL.EQ.NOGOOD) GO TO 994                 00031500
C                                                                       00031600
C--GET OTHER NEEDED APT VARIABLES                                       00031700
      CALL GETAPT(TUL,PTOLI,PTOLO,DTOL,AMAXDP,ELMAX,MAXCL,IR)           00031800
      IF(IR.NE.0) GO TO 993                                             00031900
C--FETCH PART AND DRIVE SURFACES                                        00032000
      CALL GFETCH(NBIG,MAXLDA,COM,DGEOM,PGEOM,IR)                       00032100
      IF(IR.NE.0) GO TO 992                                             00032200
C--SET APPROPRIATE STARTING VALUES FOR CALL TO SSPATH                   00032300
      IF(UST.LT.DLIM(1)-SMAL.OR.UST.GT.DLIM(2)+SMAL) GO TO 996          00032400
      IF(VST.LT.DLIM(3)-SMAL.OR.VST.GT.DLIM(4)+SMAL) GO TO 996          00032500
C--CUTREG ROUTINE SEPARATED TO REDUCE SUBROUTINE SIZE                   00032600
      IQUAL=0                                                           00032700
C                                                                       00032710
C.... PERFORM PRELIMINARY INTERFERENCE CHECKING CALCULATIONS IF REQD    00032720
      IPART=PGEOM(4)                                                    00032730
      IF (LINTCK) CALL INEX(COM(IPART),PSIDE,PTOLI,PTOLO)               00032740
C                                                                       00032750
      CALL CUTREG(WORD,CDIR,UST,VST,PDIR,IDTYPE,IQUAL,                  00032800
     X   TUL,PTOLI,PTOLO,DTOL,AMAXDP,ELMAX,MAXCL,ISKP,IRR)              00032900
      IF(IRR.NE.0) GO TO 990                                            00032910
      GO TO 999                                                         00033000
C                                                                       00033100
  992 CONTINUE                                                          00033200
C---ERROR, PART OR DRIVE GEOMETRY COULD NOT BE FETCHED                  00033300
      IRR=17                                                            00033400
      GO TO 990                                                         00033500
  993 CONTINUE                                                          00033600
C---ERROR, GENERAL APT ARELEM VARIABLES INVALID                         00033700
      IRR=16                                                            00033800
      GO TO 990                                                         00033900
  994 CONTINUE                                                          00034000
C---ERROR,  SCON DATA AREA IS UNINITIALIZED                             00034100
      IRR=15                                                            00034200
      GO TO 990                                                         00034300
  995 CONTINUE                                                          00034400
C---ERROR, LENGTH OF SMIL INPUT FIELD INVALID                           00034500
      IRR=14                                                            00034600
      GO TO 990                                                         00034700
  996 CONTINUE                                                          00034800
C---ERROR, INPUT VALUES ARE INVALID                                     00034900
      IRR=13                                                            00035000
      GO TO 990                                                         00035100
  997 CONTINUE                                                          00035200
C---ERROR, INPUT CANON FORM NOT DEFINED                                 00035300
      IRR=12                                                            00035400
      GO TO 990                                                         00035500
  998 CONTINUE                                                          00035600
C---ERROR, INPUT VARIABLE WAS UNRECOGNIZED IN POSITION                  00035700
      IRR=11                                                            00035800
      GO TO 990                                                         00035900
C                                                                       00036000
  990 CONTINUE                                                          00036100
      IRR=IRBASE+IRR                                                    00036200
      CALL RECORD(ISQ)                                                  00036500
      CALL BAD(-1,0,' ',0)                                              00036610
      BADMSG=' END OF SMIL'                                             00036612
      CALL CPRINT(BADMSG)                                               00036614
      CALL BAD(1,0,'ISEQ',ISQ)                                          00036900
      CALL BAD(1,0,'NLST',NLAST)                                        00037000
      CALL BAD(1,0,'NLEN',NLEN)                                         00037100
      CALL BAD(1,0,'IRR ',IRR)                                          00037200
      CALL BAD(1,0,'ICUR',ICUR)                                         00037300
      CALL BAD(-1,0,'IRBS',IRBASE)                                      00037400
      CALL BAD(1,0,'DS  ',NDS)                                          00037500
      CALL BAD(1,0,'PS  ',NPS)                                          00037600
      CALL BAD(1,0,'FEED',NFEED)                                        00037700
      CALL BAD(1,0,'STOV',NSTEPO)                                       00037800
      CALL BAD(1,0,'AXIS',NAXIS)                                        00037900
      CALL BAD(-1,0,'CPLN',NCLRPL)                                      00038000
C                                                                       00038100
      RNAME=RNAMA                                                       00038110
      DO 8001 IL1 = 1,IMAX1                                             00038120
 8001 IF (IRR.EQ.IZAL1(IL1)) RNAME=RNAM1                                00038130
      DO 8002 IL2 = 1,IMAX2                                             00038140
 8002 IF (IRR.EQ.IZAL2(IL2)) RNAME=RNAM2                                00038150
      CALL AERR(IRR,RNAME)                                              00038200
C                                                                       00038300
      GO TO 999                                                         00038400
C                                                                       00038500
  999 CONTINUE                                                          00038600
C                                                                       00038700
      RETURN                                                            00038800
      END                                                               00038900
**** SOURCE FILE : M0001094.V01   ***
*
      SUBROUTINE SQRBN(U0,V0,ZU1,ZV1,ZU2,ZV2,DUMMY,ICKBN)               00000100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000200
C------INPUT IS AN OLD POINT U0,V0 IN UV SPACE AND A TRIAL              00000300
C------ NEW POINT U1,V1.  IF THESE TWO PTS ARE IN THE SAME              00000400
C------ SECTOR OF SPACE( UNIT SQUARE DIVIDES SPACE INTO NINE            00000500
C------ SECTORS) THEN U,V IS SET EQUAL TO U1,V1 AND NO                  00000600
C------ BOUNDARY CHECKING IS REQUIRED( I.E. SET ICKBN=0).               00000700
C------ OTHERWISE U,V IS SET EQUAL TO THE CLOSEST                       00000800
C------ BOUNDARY POINT TO U0,V0 WHICH LIES BETWEEN U0,V0 AND            00000900
C------ U1,V1.  IN ADDITION THE ROUTINE DETERMINES WHICH                00001000
C------  BOUNDARY OF THE PATCH SHOULD BE CHECKED.                       00001100
C                                                                       00001200
      DIMENSION IBCHK(4,4)                                              00001300
C---      ARRAY WHICH RECORDS BOUNDARY TO CHECK IN MOVING FROM SECTOR   00001400
C---      J TO SECTOR I (IBCHK(I,J)).                                   00001500
      DATA IBCHK/ 2,3,0,0,  1,0,4,0,  0,1,0,4,  0,0,2,3/                00001600
C                                                                       00001700
      DATA ZERO,ONE,TWO/0.0D0,1.0D0,2.0D0/                              00001800
      DATA VSMAL/1.0D-25/                                               00001900
C---      FUNCTION F GIVES SQUARE OF DISTANCE FROM (A,B) TO (C,D)       00002000
      F(A,B,C,D)=(C-A)**2+(D-B)**2                                      00002100
C---      FUNCTION G IS POSITIVE WHEN C IS OUTSIDE THE A,B INTERVAL     00002200
      G(A,B,C)=(A-C)*(B-C)                                              00002300
C                                                                       00002400
      U1=U0+ZU1                                                         00002500
      V1=V0+ZV1                                                         00002600
      ICKBN=0                                                           00002700
      U=U1                                                              00002800
      V=V1                                                              00002900
      IU=2                                                              00003000
      IF(U0.LT.ZERO)IU=1                                                00003100
      IF(U0.GT.ONE) IU=3                                                00003200
      IV=3                                                              00003300
      IF(V0.LT.ZERO)IV=0                                                00003400
      IF(V0.GT.ONE) IV=6                                                00003500
      IC0=IU+IV                                                         00003600
      IU=2                                                              00003700
      IF(U1.LT.ZERO)IU=1                                                00003800
      IF(U1.GT.ONE) IU=3                                                00003900
      IV=3                                                              00004000
      IF(V1.LT.ZERO)IV=0                                                00004100
      IF(V1.GT.ONE) IV=6                                                00004200
      IC1=IU+IV                                                         00004300
      IF(IC0.EQ.IC1) GO TO 999                                          00004400
C                                                                       00004500
C------DETERMINE THE BOUNDARY INTERCEPT CLOSEST TO U0,V0                00004600
C---      EQN OF LINE IS (U0-U1)*V+(V1-V0)*U+(V0*U1-U0*V1)=0            00004700
C---      EQN OF LINE IS      A1*V+     A2*U+     A3      =0            00004800
      A1=U0-U1                                                          00004900
      A2=V1-V0                                                          00005000
      A3=V0*U1-V1*U0                                                    00005100
C---      SET U,V AND DISTANCE D TO DEFAULT VALUES                      00005200
      U=U1                                                              00005300
      V=V1                                                              00005400
      D=F(U0,V0,U1,V1)                                                  00005500
C---      SET INITIAL VALUES FOR SECOND POINT BETWEEN P0 AND P1.        00005600
      D2=D                                                              00005700
      U2=U                                                              00005800
      V2=V                                                              00005900
C                                                                       00006000
C---      LINE IS HORIZONTAL, SKIP INTERCEPT CALCULATION WITH U=0 OR U=100006100
      IF(DABS(A1).LT.VSMAL) GO TO 100                                   00006200
      UT=ZERO                                                           00006300
      VT=-A3/A1                                                         00006400
      DT=F(U0,V0,UT,VT)                                                 00006500
      IF(G(U0,U1,UT).GE.ZERO.OR.DT.GT.D) GO TO 10                       00006600
      D=DT                                                              00006700
      U=UT                                                              00006800
      V=VT                                                              00006900
   10 CONTINUE                                                          00007000
      UT=ONE                                                            00007100
      VT=-(A2+A3)/A1                                                    00007200
      DT=F(U0,V0,UT,VT)                                                 00007300
      IF(G(U0,U1,UT).GE.ZERO.OR.DT.GE.D2) GO TO 100                     00007400
C---      SAVE THE SECOND CLOSEST INTERCEPT TO UO,VO FIRST              00007500
      IF(DT.LT.D) GO TO 20                                              00007600
C---      U2,V2 IS NEW SECOND CLOSEST INTERCEPT ( DT.GT.D)              00007700
      IF(DT.EQ.D) GO TO 100                                             00007800
      U2=UT                                                             00007900
      V2=VT                                                             00008000
      D2=DT                                                             00008100
      GO TO 100                                                         00008200
   20 CONTINUE                                                          00008300
C---      U2,V2 TAKES ON THE OLD U,V VALUE OF CLOSEST INTERCEPT         00008400
      U2=U                                                              00008500
      V2=V                                                              00008600
      D2=D                                                              00008700
C---      CLOSEST INTERCEPT U,V IS NOW UT,VT                            00008800
      U=UT                                                              00008900
      V=VT                                                              00009000
      D=DT                                                              00009100
C---      LINE IS VERTICAL, SKIP INTERCEPT CALC WITH V=0 OR V=1.        00009200
  100 IF(DABS(A2).LT.VSMAL) GO TO 200                                   00009300
      VT=ZERO                                                           00009400
      UT=-A3/A2                                                         00009500
      DT=F(U0,V0,UT,VT)                                                 00009600
      IF(G(V0,V1,VT).GE.ZERO.OR.DT.GE.D2) GO TO 110                     00009700
C---      SAVE THE SECOND CLOSEST INTERCEPT TO UO,VO FIRST              00009800
      IF(DT.LT.D) GO TO 40                                              00009900
C---      U2,V2 IS NEW SECOND CLOSEST INTERCEPT ( DT.GT.D)              00010000
      IF(DT.EQ.D) GO TO 110                                             00010100
      U2=UT                                                             00010200
      V2=VT                                                             00010300
      D2=DT                                                             00010400
      GO TO 110                                                         00010500
   40 CONTINUE                                                          00010600
C---      U2,V2 TAKES ON THE OLD U,V VALUE OF CLOSEST INTERCEPT         00010700
      U2=U                                                              00010800
      V2=V                                                              00010900
      D2=D                                                              00011000
C---      CLOSEST INTERCEPT U,V IS NOW UT,VT                            00011100
      U=UT                                                              00011200
      V=VT                                                              00011300
      D=DT                                                              00011400
  110 VT=ONE                                                            00011500
      UT=-(A1+A3)/A2                                                    00011600
      DT=F(U0,V0,UT,VT)                                                 00011700
      IF(G(V0,V1,VT).GE.ZERO.OR.DT.GE.D2) GO TO 200                     00011800
C---      SAVE THE SECOND CLOSEST INTERCEPT TO UO,VO FIRST              00011900
      IF(DT.LT.D) GO TO 60                                              00012000
C---      U2,V2 IS NEW SECOND CLOSEST INTERCEPT ( DT.GT.D)              00012100
      IF(DT.EQ.D) GO TO 200                                             00012200
      U2=UT                                                             00012300
      V2=VT                                                             00012400
      D2=DT                                                             00012500
      GO TO 200                                                         00012600
   60 CONTINUE                                                          00012700
C---      U2,V2 TAKES ON THE OLD U,V VALUE OF CLOSEST INTERCEPT         00012800
      U2=U                                                              00012900
      V2=V                                                              00013000
      D2=D                                                              00013100
C---      CLOSEST INTERCEPT U,V IS NOW UT,VT                            00013200
      U=UT                                                              00013300
      V=VT                                                              00013400
      D=DT                                                              00013500
  200 CONTINUE                                                          00013600
C---      DETERMINE UT,VT JUST INSIDE THE SECTOR BEYOND U,V             00013700
C---      ICKBN IS SET TO ZERO IF NO ADJACENT PATCH NEED BE CHECKED     00013800
C---      OTHERWISE ICKBN SHOULD POINT TO THE PATCH BOUNDARY (1,2,3,OR 400013900
C---      WHICH SHOULD BE CHECKED.                                      00014000
      ICKBN=0                                                           00014100
C---      NEXT DETERMINE THE SECTOR WHICH THE PATH FROM U0,V0 TO U,V    00014200
C---      IS ENTERING.                                                  00014300
      UT=(U+U2)/TWO                                                     00014400
      VT=(V+V2)/TWO                                                     00014500
      IF(G(ZERO,ONE,U0).NE.ZERO.AND.G(ZERO,ONE,V0).NE.ZERO) GO TO 210   00014600
C---      STARTING POINT IS ON BOUNDARY, SO CUT UT,VT BACK              00014700
      UT=(U0+U)/TWO                                                     00014800
      VT=(V0+V)/TWO                                                     00014900
  210 CONTINUE                                                          00015000
C                                                                       00015100
      IU=2                                                              00015200
      IF(UT.LT.ZERO) IU=1                                               00015300
      IF(UT.GT.ONE)  IU=3                                               00015400
      IV=3                                                              00015500
      IF(VT.LT.ZERO) IV=0                                               00015600
      IF(VT.GT.ONE)  IV=6                                               00015700
C---      IC2 IS THE SECTOR NUMBER ( 1 THRU 9) WHICH IS BEING ENTERED.  00015800
      IC2=IU+IV                                                         00015900
C---      IF THE CENTER SQUARE IS BEING ENTERED, THEN CHECK NO BOUNDARY 00016000
      IF(IC2.EQ.5) GO TO 999                                            00016100
      IF(MOD(IC2,2).EQ.0) GO TO 310                                     00016200
      IF(MOD(IC2,2).EQ.1) GO TO 320                                     00016300
C                                                                       00016400
  310 CONTINUE                                                          00016500
C---      AN EVEN-NUMBERED SECTOR IS BEING ENTERED -- BOUNDARY CALCULATI00016600
C---      IS STRAIGHT FORWARD.                                          00016700
      ICKBN=IC2/2                                                       00016800
      GO TO 999                                                         00016900
C                                                                       00017000
  320 CONTINUE                                                          00017100
C---      AN ODD SECTOR IS BEING ENTERED, BOUNDARY DEPENDS ON BOTH POINT00017200
C---      (I.E. ON SECTOR OF UT,VT AND ON SECTOR OF U0,V0)              00017300
      I1=IC2/3+1                                                        00017400
      IF(MOD(IC0,2).NE.0) GO TO 999                                     00017500
      I2=IC0/2                                                          00017600
      ICKBN=IBCHK(I1,I2)                                                00017700
      GO TO 999                                                         00017800
C                                                                       00017900
  999 CONTINUE                                                          00018000
C                                                                       00018100
      ZU2=U-U0                                                          00018200
      ZV2=V-V0                                                          00018300
      RETURN                                                            00018400
      END                                                               00018500
**** SOURCE FILE : M0001097.W01   ***
*
      SUBROUTINE SRFDIR(DR,R,SIDE,PDIR,SX,SVEC,SK,IRR)                  00000100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000200
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM                                   00000300
C---PURPOSE IS TO COMPUTE SURFACE CURVATURE SK AND DIRECTION SVEC       00000400
C--IN DIRECTION OF MOVEMENT INDICATED BY DRIVE GEOMETRY ARRAY           00000500
C--DR.                                                                  00000600
      DIMENSION DR(*),R(*),SX(*),SVEC(*)                                00000700
      CHARACTER*20 BADMSG                                               00000710
      DATA ZERO,SMAL/0.0D0,1.0D-38/                                     00000800
C                                                                       00000900
      DO 10 I=1,3                                                       00001000
   10 SVEC(I)=ZERO                                                      00001100
      SK=ZERO                                                           00001200
C                                                                       00001300
      CALL KURSRF(R,SIDE,SX)                                            00001400
C--PROJECT DRIVE TANGENT VECTOR INTO SURFACE TANGENT PLANE              00001500
      CALL DOTF(FAC,R(29),DR(13))                                       00001600
      DO 20 I=1,3                                                       00001700
   20 SVEC(I)=DR(12+I)-FAC*R(28+I)                                      00001800
      CALL DOTF(FAC,SVEC,SVEC)                                          00001900
      IF(FAC.LT.SMAL) GO TO 999                                         00002000
      FAC=DSQRT(FAC)*PDIR                                               00002100
      DO 30 I=1,3                                                       00002200
   30 SVEC(I)=FAC*SVEC(I)                                               00002300
C--NOW COMPUTE THE CURVATURE OF THE SURFACE IN THE SVEC DIRECTION       00002400
      CALL DOTF(XCOS,SVEC,SX(5))                                        00002500
      CALL DOTF(XSIN,SVEC,SX(9))                                        00002600
      SK=SX(1)*XCOS**2+SX(2)*XSIN**2                                    00002700
C                                                                       00002800
  999 CONTINUE                                                          00002900
      IF(IBUG.NE.11) GO TO 1999                                         00003000
      CALL BAD(-1,0,' ',0)                                              00003110
      BADMSG=' AFTER SRFDIR'                                            00003120
      CALL CPRINT(BADMSG)                                               00003130
      CALL BAD(1,0,'IRR ',IRR)                                          00003200
      CALL BAD(1,1,'SK  ',SK)                                           00003300
      CALL BAD(-2,1,'SX  ',SX(1))                                       00003400
      CALL BAD(-3,1,'SVEC',SVEC)                                        00003500
 1999 CONTINUE                                                          00003600
      RETURN                                                            00003700
      END                                                               00003800
**** SOURCE FILE : M0001098.W02   ***
*
      SUBROUTINE SRFTOL(SKRV,TRAD,TOL,SSTEP,TSTEP)                      00000100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000200
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM                                   00000300
C--PURPOSE IS TO COMPUTE SURFACE STEP DISTANCE SSTEP AND                00000400
C--TOOL STEP DISTANCE TSTEP ALONG SURFACE BASED ON CURVATURE            00000500
C--SKRV AND TOOL RADIUS TRAD AND TOLERANCE BAND TOL                     00000600
C                                                                       00000700
      CHARACTER*20 BADMSG                                               00000710
      DATA ZERO,ONE,SMAL,BIG/0.0D0,1.0D0,1.0D-9,1.0D+9/                 00000800
C                                                                       00000900
      SSTEP=BIG                                                         00001000
      TSTEP=SSTEP                                                       00001100
      IF(DABS(SKRV).LT.SMAL) GO TO 999                                  00001200
      SRAD=1/SKRV                                                       00001300
      W=DABS(SRAD-TRAD)                                                 00001400
      IF(W.LT.SMAL) GO TO 999                                           00001500
C--COSINE OF HALF ANGLE OF MOVEMENT                                     00001600
      CHAF=ONE-TOL/W                                                    00001700
      SHAF=ONE-CHAF**2                                                  00001800
      SHAF=DMAX1(SMAL,SHAF)                                             00001900
      SHAF=DSQRT(SHAF)                                                  00002000
      SSTEP=2.*DABS(SRAD)*SHAF                                          00002100
      TSTEP=2.*W*SHAF                                                   00002200
C                                                                       00002300
  999 CONTINUE                                                          00002400
      IF(IBUG.NE.11) GO TO 1999                                         00002500
      CALL BAD(-1,0,' ',0)                                              00002610
      BADMSG=' AFTER SRFTOL'                                            00002620
      CALL CPRINT(BADMSG)                                               00002630
      CALL BAD(1,1,'SKRV',SKRV)                                         00002700
      CALL BAD(1,1,'TRAD',TRAD)                                         00002800
      CALL BAD(1,1,'TOL ',TOL)                                          00002900
      CALL BAD(1,1,'SSTP',SSTEP)                                        00003000
      CALL BAD(-1,1,'TSTP',TSTEP)                                       00003100
 1999 CONTINUE                                                          00003200
      RETURN                                                            00003300
      END                                                               00003400
**** SOURCE FILE : M0001081.W07   ***
*
      SUBROUTINE SSPATH( DSURF, IDTYPE,   PDIR,   DTOL,  DSTEP, DOFSET, 00000100
     X                  PLIM, IDTOOL, IDAXIS,  DAXIS, ITLDIR,           00000200
     X             TLDIR, PSURF, PSIDE, PTHICK,  PTOLI,  PTOLO, IPTOOL, 00000300
     X                   TUL,    UST,    VST, SCALHT, STEPOV, STEPMX,   00000400
     X                AMAXDP,  ELMAX,  MAXCL, ICLSKP, IQUAL,            00000500
     X                    TE,     TA,     TD,   PAR,    IRR)            00000600
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000700
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM                                   00000800
C--PURPOSE IS TO MOVE CUTTER IN CONTACT WITH DRIVE CURVE                00000900
C--DSURF WHILE SIMULTANEOUSLY MOVING IN CONTACT WITH PART               00001000
C--SURFACE PSURF.  THE WEALTH OF INPUT PARAMETERS ARE FOR               00001100
C--CONTROLLING THE RANGE , STEPOUT AND AXIS OF THE CUTTER               00001200
C--INPUT PARAMETERS ARE DESCRIBED BELOW                                 00001300
C--DSURF CANONICAL FORM DEFINING THE DRIVE GEOMETRY(CURVE OR SURF)      00001400
C--IDTYPE TYPE OF DSURF  =0 SCURV, =1 MESH SURF U LINE CONTROL          00001500
C--       =2 MESH SURFACE CRSSPL CONTROL                                00001600
C--PDIR   =1 OR -1 SETS THE DIRECTION OF PATH MOTION AS INCREASING      00001700
C--       PARAMETER DIRECTION OR OPPOSITE                               00001800
C--DTOL   TOLERANCE TO BE MAINTAINED OF DRIVE CURVE                     00001900
C--DSTEP  IF=0. IT IS IGNORED                                           00002000
C--       IF POSITIVE DPARAM STEP IS THE MAXIMUM PARAM STEP LENGTH ON CU00002100
C--       IF NEGATIVE, DSTEP IS A FIXED PARAMETER INCREMENT ALONG       00002200
C--       DRIVE CURVE.  ITT OVERIDES ALL TOL AND STEP SPECS.            00002300
C--DOFSET IS A FIXED DISTANCE TO DROP THE CUTTER TIP PAST THE           00002400
C--       DRIVE POINT ALONG THE TOOL AXIS PRIOR TO A PROJECTION         00002500
C--       THE PART SURFACE.  IT IS APPICABLE IN MULTI AXIS WORK.        00002600
C--PLIM  1 AND 2 ARE THE LOWER AND UPPER LIMITS OF THE U PARAMETER      00002700
C--      OF THE DRIVE GEOMETRY.  3 AND 4 ARE THE LIMITS OF THE          00002800
C--      V PARAMETER(CRSSPL) OF THE DRIVE GEOMETRY( IF IT IS A          00002900
C--      MESH STRUCTURED SCULPTURED SURFACE)                            00003000
C--IDTOOL IS 0 FOR ON TOOL CONTROL(CUTTER AXIS THRU CURVE)              00003100
C--       IS 1 FOR AT TOOL CONTROL(CUTTER OFFSET FROM POINT             00003200
C--       WHERE TOOL AXIS PIERCES SURFACE.                              00003300
C--IDAXIS IS 0 FOR FIXED TOOL AXIS, TOOL AXIS IN DAXIS ARRAY            00003400
C--       IS 1 FOR VARIABLE AXIS.  AXIS COMES FROM SURFACE NORMAL       00003500
C--       OR FROM SCURV CRSSPL. SIGN OF IDAXIS ORIENTS THIS VECTOR      00003600
C--       PROPERLY.                                                     00003700
C--DAXIS CONTAINS FIXED PERMANENT AXIS FOR TOOL IF FIXED                00003800
C--ITLDIR 0 IF TOOL IS PROJECTED IN FIXED DIRECTION TO PART SURF        00003900
C--       1 OR -1 IF TOOL IS PROJECTEDACCORDING TO VARIABLE             00004000
C--       VECTOR FROM DRIVE GEOMETRY.                                   00004100
C--TLDIR  IS THE VECTOR WHICH HOLDS THE FIXED TOOL DIRECTION            00004200
C--       WHEN ITLDIR IS 0.                                             00004300
C--PSURF  CANON FORM OF PART SURFACE.                                   00004400
C--       THIS IS A SLOPE CONTINUOUS SCULPTURED SURFACE                 00004500
C--PSIDE  1 OR -1 TO ADJUST SURFACE NORMAL( RU X RV ) TO POINT          00004600
C--       TOWARD TOOL OPERATING SIDE OF SURFACE.                        00004700
C--PTHICK THICKNESS OFFSET FROM SURFACE                                 00004800
C--PTOLI,PTOLO INSIDE/OUTSIDE TOLERANCE(TOOL SIDE IS INSIDE)            00004900
C--IPTOOL =0 TOOL IS TO PART SURFACE                                    00005000
C--       =1 TOOL TIP IS ON SURFACE                                     00005100
C--TUL  TOOL DESCRIPTION.  PRESENTLY TUL(1)=RADIUS OF BALL CUTTER.      00005200
C--SCALHT IF NOT ZERO, IS THE MAXIMUM ALLOWABLE SCALLOP HEIGHT          00005300
C--STEPOV IS THE MAXIMUM PARAMETRIC STEPOVER(OUTPUT) TO ACHIEVE         00005400
C--THE SCALLOP HEIGHT SPECIFIED.                                        00005500
C--STEPMX IS THE MAXIMUM STEPOVER DISTANCE ALLOWED.  IF NEGATIVE        00005600
C--     IT IS THE ACTUAL PARAMETRIC STEPOVER VALUE                      00005700
C--AMAXDP IS THE MAXIMUM TOOL STEPOUT ALLOWED                           00005800
C--ELMAX IS THE MAXIMUM PATH LENGTH WHICH CAN BE GENERATED BY           00005900
C--      A SINGLE CALL TO THE SSPATH ROUTINE                            00006000
C--MAXCL IS THE MAXIMUM NUMBER OF CL POINTS TO BE GENERATED IN PATH     00006100
C--ICLSKP NEGATIVE MEANS GENERATE NO CL DATA THRU CLPUT                 00006200
C--       ZERO MEANS GENERATE ALL CLDATA                                00006300
C--       POSITIVE MEANS GENERATE ALL CLDATA EXCEPT THE FIRST POINT     00006400
C--IQUAL IS A QUALITY CONTROL OPTION TO EXACTLY TOUCH THE SURFACE       00006500
C--       AS OPPOSED TO PLACING WITHIN TOLERANCE SHELL OF LEAST         00006600
C--       CURVATURE                                                     00006700
C--OUTPUT                                                               00006800
C--TE,TA,TD LAST GOOD TOOL END,AXIS AND DIRECTION OF PROJECTION         00006900
C--PAR  LAST PARAMETRIC VALUES ON THE DRIVE GEOMETRY                    00007000
C--IRR  ERROR FLAG. NON ZERO ON RETURN FROM SSPATH IF ERROR OCCURS      00007100
C                                                                       00007200
      DIMENSION DSURF(*),PSURF(*),TUL(*),DAXIS(*),TLDIR(*)              00007300
      DIMENSION PLIM(4)                                                 00007400
      DIMENSION DR(36),R(32),RL(32),RX(32),RXL(32)                      00007500
      DIMENSION RVEC(3),PAR(2),FWD(3)                                   00007600
      DIMENSION RDIF(3),TE(3),TEL(3),TAL(3),TA(3),TEX(3),TAX(3)         00007700
      DIMENSION TC(3),TD(3),TBEF(3),TBEFL(3),TBEFX(3)                   00007800
      CHARACTER*20 BADMSG                                               00007860
C                                                                       00007900
C---      AKMXMN THE LARGEST POSITIVE AND NEGATIVE CURVATURES           00008000
C---      IN THIS CALL TO SSPATH                                        00008100
C---      AKDRV(2,2) THE DRIVE SURFACE PARAMETERS WHERE THEY OCCURRED   00008200
C---      AKPRT(2,2) THE PART SURFACE PARAMETERS WHERE THEY OCCURRED    00008300
      DIMENSION AKMXMN(2),AKDRV(2,2),AKPRT(3,2)                         00008400
C                                                                       00008500
      INCLUDE 'DARRAY.INC'                                              00008610
      INCLUDE 'RMFLGS.INC'                                              00008620
      INCLUDE 'TAC.INC'                                                 00008630
C.... LRET - INTERFERENCE FLAG = .TRUE. IF TOOL PENETRATES PS           00008635
C.... LARET - AVOIDANCE FLAG = .TRUE. IF INTEFERENCE AVOIDED            00008636
      LOGICAL LRET,LARET                                                00008640
C.... INTLOC - LOCATION IN INTERFERENCE TABLE OF WORST PENETRATION      00008645
      INTEGER INTLOC                                                    00008650
C                                                                       00008700
      DATA ZERO,ONE,SMAL/0.0D0,1.0D0,1.0D-38/                           00008800
      DATA BIG/1.0D+10/                                                 00008900
      DATA HALF/0.5D0/,ZEM5/0.00001D0/                                  00009000
      DATA ISEQLS,KPATH/0,0/                                            00009100
C                                                                       00009200
      IF(IBUG.EQ.11) THEN                                               00009300
        CALL BAD(-1,0,' ',0)                                            00009310
        BADMSG=' ENTRY TO SSPATH '                                      00009320
        CALL CPRINT(BADMSG)                                             00009330
      ELSE                                                              00009340
        GO TO 1997                                                      00009350
      END IF                                                            00009360
      ASSIGN 1997 TO IRET                                               00009500
      GO TO 1999                                                        00009600
 1997 CONTINUE                                                          00009700
C---      COUNT OF PATH CALLS                                           00009800
      CALL RECORD(ISEQNO)                                               00009900
      IF(ISEQNO.NE.ISEQLS) KPATH=0                                      00010000
      KPATH=KPATH+1                                                     00010100
      IPASS=1                                                           00010200
C---TE,TA,TD ARE THE CURRENT TOOL END ,AXIS, AND DIRECTION              00010300
C---IF PATH IS SUCCESSFUL THEY RECORD THE LAST GOOD CL VALUES           00010400
C---ON RETURN TO THE CALLING ROUTINE.                                   00010500
C---NOTE THAT TBEF(TOOL-BALL END-EFFECTIVE) IS A SIMULATED BALL         00010600
C---CUTTER AT THE CORNER EDGE OF A GENERAL CUTTER.  THIS PROVIDES       00010700
C---THE CAPABILITY FOR A GENERAL APT CUTTER ALTHOUGH SSPATH HAS         00010800
C---BEEN IMPLEMENTED ONLY AS A BALL CUTTER ALGORITHM.                   00010900
      DO 5 I=1,3                                                        00011000
      TE(I)=ZERO                                                        00011100
      TA(I)=ZERO                                                        00011200
      TD(I)=ZERO                                                        00011300
      TBEF(I)=ZERO                                                      00011400
    5 CONTINUE                                                          00011500
C--SET INITIAL PARAMETER VALUES                                         00011600
      PAR(1)=UST                                                        00011700
      PAR(2)=VST                                                        00011800
      MOD=-121                                                          00011900
      CALL CHKSET(IDTYPE,PDIR,PLIM,MOD)                                 00012000
C--RADIUS OF BALL CUTTER                                                00012100
      BALRAD=TUL(1)                                                     00012200
C--EFFECTIVE RADIUS FOR OFFSET OF TOOL CENTER                           00012300
      EFRAD=BALRAD+PTHICK                                               00012400
C--EFFECTIVE RADIUS FOR PROJECTING DRIVE POINT TO PART SURFACE          00012500
      DRAD=EFRAD                                                        00012600
      IF(IPTOOL.EQ.1.OR.IDTOOL.EQ.1) DRAD=PTHICK                        00012700
C--TOOL AND PART SURFACE CONTACT PARAMETERS                             00012800
      DIST=ZERO                                                         00012900
      UP=HALF                                                           00013000
      VP=HALF                                                           00013100
      NPAT=1                                                            00013200
      MXSTEP=20                                                         00013300
C--STEPOUT RETRY COUNT AND TOTAL CL POINTS                              00013400
      ISTEPK=0                                                          00013500
      ICLCT=0                                                           00013600
C--CURRENT PATH LENGTH(NOT TO EXCEED ELMAX)                             00013700
      PLEN=ZERO                                                         00013800
C--STEP OUT REDUCTION FACTORS FOR RETRIES                               00013900
      STEPM=ONE                                                         00014000
      FAC=0.75                                                          00014100
C--SUGGESTED PARAMETRIC STEPOVER                                        00014200
      STEPOV=BIG                                                        00014300
C--TOLERANCE BAND PREPARATION                                           00014400
      TOLMID=ZERO                                                       00014410
      TOLRNG=ZERO                                                       00014420
      IF(IQUAL.NE.0) GO TO 10                                           00014500
C--MID TOLERANCE BAND FROM SURFACE AND TOLERANCE RANGE                  00014600
      TOLMID=(PTOLO-PTOLI)*HALF                                         00014700
      TOLRNG=(PTOLI+PTOLO)*0.45                                         00014800
      PTOL=(PTOLI+PTOLO)*0.9                                            00014900
      GO TO 20                                                          00015000
   10 CONTINUE                                                          00015100
C--FOR INSPECTION PURPOSES, TOOL MAY REST ON OR TOUCH SURFACE           00015200
      TOLMID=ZERO                                                       00015300
      TOLRNG=ZERO                                                       00015400
      PTOL=1.8*DMIN1(PTOLI,PTOLO)                                       00015500
   20 CONTINUE                                                          00015600
C--TOLERANCE FOR SURFACE CALCULATION                                    00015700
C--IFIN IS SET TO NON ZERO WHEN PROCESSING THE LAST POINT               00015800
      IFIN=0                                                            00015900
      TOL=PTOL*0.2                                                      00016000
C--EMAX IS MAXIMUM STEP SIZE BASED ON THE PREVIOUS CUT VECTOR           00016100
      EMAX=BIG                                                          00016200
C---    INITIAL STEPOUT VALUES                                          00016300
      SSTEP=BIG                                                         00016400
      TSTEP=BIG                                                         00016500
      XSTEP=BIG                                                         00016600
C--SET INDEX FOR MOVING PARAMETRIC VALUES                               00016700
      INDEX=1                                                           00016800
      IF(IDTYPE.EQ.2) INDEX=2                                           00016900
      PARNSV=SMAL                                                       00017000
C---      INITIALIZE VALUES FOR WORST CURVATURE ACCOUNTING              00017100
      DO 50 I=1,2                                                       00017200
      DO 51 J=1,2                                                       00017300
      AKDRV(I,J)=ZERO                                                   00017400
      AKPRT(I,J)=ZERO                                                   00017500
   51 CONTINUE                                                          00017600
      AKPRT(3,I)=ZERO                                                   00017700
   50 CONTINUE                                                          00017800
      AKMXMN(1)=ZEM5                                                    00017900
      AKMXMN(2)=-AKMXMN(1)                                              00018000
C---      SET FLAG FOR MODE TO SKIP SURFACE CALCULATION                 00018100
      ISKBAL=0                                                          00018200
      IF(PSURF(1).NE.DSURF(1)) GO TO 60                                 00018300
      IF(DABS(DOFSET).GT.SMAL) GO TO 60                                 00018400
      IF(IDTOOL.NE.1) GO TO 60                                          00018500
      ISKBAL=1                                                          00018600
   60 CONTINUE                                                          00018700
C                                                                       00018800
C.... SIZE OF PART SURFACE CANONICAL FORM                               00018810
      IPSIZE=NINT(PSURF(8))                                             00018820
C                                                                       00018900
C--SURFACE CONTACT BLOCK.  DROP SURFACE FROM POINT ON DRIVE GEOMETRY    00019000
C--TO PART SURFACE                                                      00019100
  100 CONTINUE                                                          00019200
C--IF IFIN IS SET TO NON ZERO THEN THIS IS THE LAST POINT               00019300
      PARNSV=PAR(INDEX)                                                 00019400
      CALL CHKSET(IDTYPE,PDIR,PAR,IFIN)                                 00019500
C                                                                       00019600
C--COMPUTE POINT AND VECTOR DATA FROM DRIVE GEOMETRY                    00019700
      CALL DGEOM(DSURF,IDTYPE,PAR(1),PAR(2),IDAXIS,DAXIS,               00019800
     X           ITLDIR,TLDIR,DTOL,DR,UPX,VPX,NPATX,R)                  00019900
C                                                                       00020000
C--COMPUTE THE TOOL CENTER AND DIRECTION AT THIS POINT                  00020100
      DO 110 I=1,3                                                      00020200
      TD(I)=DR(20+I)                                                    00020300
      TC(I)=DR(I)+(DRAD-DOFSET)*DR(16+I)+DIST*TD(I)                     00020400
  110 CONTINUE                                                          00020500
      IF(IBUG.NE.11) GO TO 8804                                         00020600
      CALL BAD(3,1,'TC  ',TC)                                           00020700
      CALL BAD(-3,1,'TD  ',TD)                                          00020800
 8804 CONTINUE                                                          00020900
      IF(ISKBAL.EQ.0) GO TO 120                                         00021000
C---      ISKBAL=1 MEANS SKIP BALSRF CALC - USE DRIVE SURFACE           00021100
      UP=UPX                                                            00021200
      VP=VPX                                                            00021300
      NPAT=NPATX                                                        00021400
      DIST=ZERO                                                         00021500
      IR=0                                                              00021600
      GO TO 125                                                         00021700
  120 CONTINUE                                                          00021800
C                                                                       00021900
C--FROM THIS POSITION, DROP THE TOOL TO THE SURFACE                     00022000
      CALL BALSRF(PSURF, PSIDE, TC, DRAD, TD, NPAT, UP, VP,             00022100
     X            DIST, R, TOL, IPASS, IR)                              00022200
C                                                                       00022300
  125 CONTINUE                                                          00022400
      IF(IBUG.NE.11) GO TO 8805                                         00022500
      CALL BAD(1,0,'BLSR',IR)                                           00022600
      CALL BAD(1,0,'NPAT',NPAT)                                         00022700
      CALL BAD(1,1,'UP  ',UP)                                           00022800
      CALL BAD(1,1,'VP  ',VP)                                           00022900
      CALL BAD(-1,1,'DIST',DIST)                                        00023000
      CALL BAD(3,1,'R   ',R)                                            00023100
      CALL BAD(-3,1,'RN  ',R(29))                                       00023200
 8805 CONTINUE                                                          00023300
C****    ERROR                                                          00023400
      IRR=1                                                             00023500
      IF(IPASS.EQ.1.AND.IR.NE.0) GO TO 999                              00023600
C--AFTER THE FIRST CUT VECTOR, MOVE TO REDUCED STEPOUT LOGIC            00023700
      IF(IPASS.EQ.0.AND.IR.NE.0) GO TO 230                              00023800
C                                                                       00023900
C--COMPUTE WHETHER CUTTER DOES FIT THE SURFACE AT THIS POINT            00024000
      CALL SRFDIR(DR,R,PSIDE,PDIR,RX,RVEC,RK,IR)                        00024100
C---      REJECT POINT BASED ON CURVATURE FIT SOMETIMES                 00024200
      IREJ=0                                                            00024300
C--TOOL MUST NOT VIOLATE EITHER OF TWO PRINCIPAL CURVATURES             00024400
      DO 140 I=1,2                                                      00024500
C                                                                       00024600
C---      SAVE WORST CURVATURE VALUES AS ENCOUNTERED                    00024700
      DO 145 J=1,2                                                      00024800
C---      RX AND AKMXMN SHOULD HAVE THE SAME SIGN                       00024900
      IF(RX(I)*AKMXMN(J).LE.ZERO) GO TO 145                             00025000
C---      SAVE RX IF IT IS LARGER                                       00025100
      IF(DABS(RX(I)).LT.DABS(AKMXMN(J))) GO TO 145                      00025200
C                                                                       00025300
      AKMXMN(J)=RX(I)                                                   00025400
      IF(RX(I).GT.ZERO) AKDRV(1,J)=PAR(1)                               00025500
      IF(RX(I).GT.ZERO) AKDRV(2,J)=PAR(2)                               00025600
      AKPRT(1,J)=NPAT                                                   00025700
      AKPRT(2,J)=UP                                                     00025800
      AKPRT(3,J)=VP                                                     00025900
  145 CONTINUE                                                          00026000
C                                                                       00026100
C---      SKIP CURVATURE CHECK IF ISKBAL IS 1.                          00026200
      IF(ISKBAL.EQ.1) GO TO 140                                         00026300
C---      IF TOOL IS ON PS, THEN SKIP CURVATURE CALCULATION             00026400
      IF(IPTOOL.EQ.1) GO TO 140                                         00026500
      IF(RX(I).LE.SMAL) GO TO 140                                       00026600
      SRAD=1/RX(I)                                                      00026700
      IF(SRAD.LT.EFRAD) IREJ=1                                          00026800
  140 CONTINUE                                                          00026900
C---      IF CONDITION IS REJECT, REATTEMPT STEPOUT                     00027000
      IF(IREJ.EQ.1) GO TO 230                                           00027100
C                                                                       00027200
C--VERIFY STEPOUT VS TOLERANCE.  CUT BACK STEPOUT AND RETRY             00027300
C--IF NECESSARY                                                         00027400
  200 CONTINUE                                                          00027500
C--FOR FIRST POINT OR FIXED PARAMETER STEP, SKIP THIS                   00027600
      IF(IPASS.EQ.1.OR.DSTEP.LT.ZERO) GO TO 400                         00027700
C                                                                       00027800
      CALL TULPOS(R,PSIDE,DR,TUL,PTHICK,ZERO,IPTOOL,IDTOOL,             00027900
     X            TEX,TAX,TBEFX,PDIR)                                   00028000
C--NEW CANDIDATE TOOL END TOOL AXIS IS TEX,TAX                          00028100
      DO 220 I=1,3                                                      00028200
  220 TEX(I)=TBEFX(I)-TBEF(I)                                           00028300
      CALL DOTF(ESTEP,TEX,TEX)                                          00028400
      ESTEP=DSQRT(ESTEP)                                                00028500
C--CHECK WHETHER THIS TOOL STEP IS ACCEPTABLE                           00028600
      CALL STEPCK(PSIDE,R,RX,RK,RL,RXL,RKL,EFRAD,PTOL,                  00028700
     X            SSTEP,TSTEP)                                          00028800
      IF(ESTEP.LT.TSTEP.AND.ESTEP.LT.AMAXDP) GO TO 400                  00028900
  230 CONTINUE                                                          00029000
      STEPL=STEP                                                        00029100
      STEP=STEP*FAC                                                     00029200
C--CUT DOWN STEPOUT AND TRY AGAIN                                       00029300
  240 IFIN=0                                                            00029400
      ISTEPK=ISTEPK+1                                                   00029500
C****    ERROR                                                          00029600
      IRR=2                                                             00029700
      IF(ISTEPK.GT.MXSTEP) GO TO 999                                    00029800
      GO TO 610                                                         00029900
C                                                                       00030000
C--ACCEPT THE CURRENT TOOL POSITION, TERMINATE IF IFIN NOT ZERO         00030100
  400 CONTINUE                                                          00030200
C--PLACE CUTTER NEAR PROPER SHELL OF TOLERANCE BAND                     00030300
      TOLCOM=TOLMID                                                     00030310
      IF(RK.LT.ZERO) TOLCOM=TOLMID+TOLRNG                               00030400
      IF(RK.GT.ZERO) TOLCOM=TOLMID-TOLRNG                               00030450
      IF(DABS(RK).LT.SMAL) TOLCOM=TOLMID                                00030500
      IF(IQUAL.EQ.1) TOLCOM=ZERO                                        00030600
      DO 410 I=1,3                                                      00030700
      TBEFL(I)=TBEF(I)                                                  00030800
      TEL(I)=TE(I)                                                      00030900
  410 TAL(I)=TA(I)                                                      00031000
C--FIND NEW TE,TA                                                       00031100
      CALL TULPOS(R,PSIDE,DR,TUL,PTHICK,TOLCOM,IPTOOL,IDTOOL,           00031200
     X            TE,TA,TBEF,PDIR)                                      00031300
C--CARRYOUT GOUGE CHECKING IF REQUIRED                                  00031301
      IF ( LGCHK.AND.(IPASS.NE.1).AND.(IQUAL.NE.1)) THEN                00031302
        CALL GCHK(PSURF,PSIDE,R,TE,TA,NPAT,UP,VP,                       00031303
     +            RL,TEL,TAL,NPATL,UPL,VPL,TOLCOM,PTOLI,PTOLO,GFAC,IRET)00031304
        IF (IRET.NE.0) THEN                                             00031305
C--EITHER GOUGING OCCURS OR MATERIAL IS LEFT ON                         00031306
C  REDUCE STEPOUT UNLESS FIXED PARAMETRIC STEP                          00031307
          IF (DSTEP.LT.ZERO) THEN                                       00031308
            IF (IRET.GT.0) THEN                                         00031309
             CALL CFORM(' *** WARNING - GOUGING OCCURS ***',DARRAY,1,33)00031310
            ELSE                                                        00031311
             CALL CFORM(' *** WARNING - EXCESS MATERIAL LEFT ON ***',   00031312
     +                  DARRAY,1,42)                                    00031313
            ENDIF                                                       00031314
            CALL CPRINT(DARRAY)                                         00031315
            CALL BAD(3,1,'TE  ',TE)                                     00031316
            CALL BAD(-3,1,'TEL ',TEL)                                   00031317
          ELSE                                                          00031318
            STEPL=STEP                                                  00031319
            STEP=STEP*GFAC                                              00031320
C.... RESTORE PREVIOUS VALUES OF TE,TA AND TBEF                         00031321
            DO 415 I=1,3                                                00031322
              TE(I)=TEL(I)                                              00031323
              TA(I)=TAL(I)                                              00031324
              TBEF(I)=TBEFL(I)                                          00031325
  415       CONTINUE                                                    00031326
            GOTO 240                                                    00031327
          ENDIF                                                         00031328
        ENDIF                                                           00031329
      ENDIF                                                             00031330
C                                                                       00031350
C.... CARRY OUT INTERFERENCE CHECKING IF REQUIRED                       00031351
C                                                                       00031352
      IF (LINTCK) THEN                                                  00031354
        CALL INTCHK(PSURF,IPSIZE,PSIDE,PTHICK,PTOLI,TUL,TE,TA,          00031356
     +              R,NPAT,UP,VP,LRET,INTLOC)                           00031358
        IF (LRET) THEN                                                  00031360
C.... INTEFERENCE HAS BEEN DETECTED - PRINT DETAILS OF INTEFERENCE      00031361
          CALL INTMSG(TE,TA,INTLOC)                                     00031362
          IF (LAVCTL) THEN                                              00031364
C.... AVOIDANCE CONTROL REQUESTED                                       00031365
C     COMPUTE GUIDE SURFACE FORWARD DIRECTION                           00031366
            CALL VSCALE(PDIR,DR(13),FWD)                                00031367
            CALL AVOID(PSURF,IPSIZE,PSIDE,PTHICK,PTOLI,PTOLO,TOLCOM,FWD,00031368
     +                 TUL,TE,TA,R,NPAT,UP,VP,INTLOC,LARET)             00031369
            IF (LARET) THEN                                             00031370
              CALL OUTMSG('INTERFERENCE AVOIDED')                       00031371
            ELSE                                                        00031372
              CALL ERROR(-3555,'SSPATH  ')                              00031373
            ENDIF                                                       00031374
          ENDIF                                                         00031375
        ENDIF                                                           00031376
C.... RESET INTEFERENCE TABLE                                           00031377
        CALL RESET                                                      00031378
      ENDIF                                                             00031379
C--COMPUTE TOOL END DISTANCE                                            00031400
      TBEMAX=ZERO                                                       00031500
      TEMOV=ZERO                                                        00031600
      IF(IPASS.EQ.1) GO TO 430                                          00031700
      DO 420 I=1,3                                                      00031800
  420 TEX(I)=TE(I)-TEL(I)                                               00031900
      CALL DOTF(TEMOV,TEX,TEX)                                          00032000
      DO 425 I=1,3                                                      00032100
      TEX(I)=TBEF(I)-TBEFL(I)                                           00032200
  425 CONTINUE                                                          00032300
      CALL DOTF(TBEMAX,TEX,TEX)                                         00032400
      TBEMAX=DSQRT(TBEMAX)                                              00032500
C                                                                       00032600
      TEMOV=DSQRT(TEMOV)                                                00032700
  430 CONTINUE                                                          00032800
C--SAVE OLD SURFACE CONTACT DATA                                        00032900
      DO 440 I=1,32                                                     00033000
      RL(I)=R(I)                                                        00033100
      RXL(I)=RX(I)                                                      00033200
  440 CONTINUE                                                          00033300
      RKL=RK                                                            00033400
C--SAVE PATCH NO, U,V OF THIS SURFACE POINT                             00033410
      NPATL=NPAT                                                        00033420
      UPL=UP                                                            00033430
      VPL=VP                                                            00033440
      IF(IBUG.NE.11) GO TO 8806                                         00033500
      CALL BAD(1,0,'ICLT',ICLCT)                                        00033600
      CALL BAD(1,0,'ISTK',ISTEPK)                                       00033700
      CALL BAD(1,1,'TEMV',TEMOV)                                        00033800
      CALL BAD(1,1,'ESTP',ESTEP)                                        00033900
      CALL BAD(-1,1,'PSTP',PSTEP)                                       00034000
 8806 CONTINUE                                                          00034100
C.... IF AXIS/ATANGL,PS,.. TOOL AXIS CONTROL - SAVE CURRENT TA          00034110
C     AS INITIAL TA FOR NEXT CUTTER LOCATION                            00034120
      IF (ITAC.EQ.2) THEN                                               00034130
        DO 445 I=1,3                                                    00034140
          DAXIS(I)=TA(I)                                                00034150
  445   CONTINUE                                                        00034160
      ENDIF                                                             00034170
C--RESET COUNTERS AND CHECK PATH LIMITS                                 00034200
      ISTEPK=0                                                          00034300
      ICLCT=ICLCT+1                                                     00034400
C****    ERROR                                                          00034500
      IRR=3                                                             00034600
      IF(ICLCT.GT.MAXCL) GO TO 999                                      00034700
      PLEN=PLEN+TEMOV                                                   00034800
C****    ERROR                                                          00034900
      IRR=4                                                             00035000
      IF(PLEN.GT.ELMAX) GO TO 999                                       00035100
C---IF ICLSKP IS NEGATIVE, THEN DO NOT RECORD CL VALUES                 00035200
      IF(ICLSKP.LT.0) GO TO 450                                         00035300
      IF(MAXCL.EQ.1) IFIN=1                                             00035400
      IF(IPASS.NE.1.OR.ICLSKP.NE.1) CALL CLPUT(TE,TA,IFIN)              00035500
  450 CONTINUE                                                          00035600
      IPASS=0                                                           00035700
      EMAX=5.0D0*TBEMAX                                                 00035800
      IF(ICLCT.EQ.1) EMAX=AMAXDP                                        00035900
C                                                                       00036000
C--SCALOP HEIGHT CALCULATION                                            00036100
C--SKIP SCALOP HEIGHT CALCULATION FOR CURVE DRIVE ELEMENT               00036200
      IF(IDTYPE.EQ.0) GO TO 510                                         00036300
C--PROCEED TO NORMAL SCALOP CALC IF SCALHT IS NOT SMALL                 00036400
      IF(SCALHT.GT.SMAL) GO TO 530                                      00036500
C--SCALLOP HEIGHT SMALL, USE STEPMX TO DETERMINE STEPOVER               00036600
      SDIST=STEPMX                                                      00036700
C--IF STEPMX IS POSITIVE, THEN STEPOVER BY THIS DISTANCE                00036800
      IF(STEPMX.GT.SMAL) GO TO 540                                      00036900
C--STEPMX NEGATIVE AND SIGNIFICANT MEANS A FIXED PARAMETRIC STEPOVER    00037000
      SDIST=DABS(STEPMX)                                                00037100
      STEPOV=SDIST                                                      00037200
      IF(SDIST.GT.SMAL) GO TO 550                                       00037300
C****    ERROR IN SCALLOP HEIGHT CALCULATION                            00037400
      SDIST=ONE                                                         00037500
      STEPOV=SDIST                                                      00037600
      GO TO 550                                                         00037700
C                                                                       00037800
  530 CONTINUE                                                          00037900
C--NORMAL SCALLOP HEIGHT CALCULATION                                    00038000
C--NEGATIVE STEPMX IS A LIMIT ON THE PARAMETRIC SIDE STEP.              00038100
      IF(STEPMX.LT.ZERO) STEPOV=DABS(STEPMX)                            00038200
      SDIST=BALRAD**2-(BALRAD-SCALHT)**2                                00038300
      SDIST=DMAX1(SMAL,SDIST)                                           00038400
C--SDIST IS THE PHYSICAL STEPOVER DISTANCE TO ACHIEVE SPECS.            00038500
      SDIST=2.*DSQRT(SDIST)                                             00038600
  540 CONTINUE                                                          00038700
      IF(STEPMX.GT.ZERO) SDIST=DMIN1(STEPMX,SDIST)                      00038800
C--CONVERT PHYSICAL SDIST INTO A PARAMETRIC SDIST FOR DRIVE SURFACE     00038900
      JCOMP=9                                                           00039000
      IF(IDTYPE.EQ.2) JCOMP=5                                           00039100
      CALL DOTF(ANG,DR(33),R(29))                                       00039200
      ANG=DABS(ANG)                                                     00039300
      ANG=DMAX1(SMAL,ANG)                                               00039400
      SDIST=SDIST/ANG                                                   00039500
      CALL DOTF(W,R(JCOMP),R(JCOMP))                                    00039600
      W=DSQRT(W)                                                        00039700
      W=DMAX1(SMAL,W)                                                   00039800
      SDIST=SDIST/W                                                     00039900
  550 CONTINUE                                                          00040000
C--STEPOV IS A LIMIT ON THE PARAMETRIC STEPOVER                         00040100
      STEPOV=DMIN1(STEPOV,SDIST)                                        00040200
  520 CONTINUE                                                          00040300
      IF(IBUG.NE.11) GO TO 8811                                         00040400
      CALL BAD(1,1,'STOV',STEPOV)                                       00040500
      CALL BAD(1,1,'SDST',SDIST)                                        00040600
      CALL BAD(1,1,'SCLH',SCALHT)                                       00040700
      CALL BAD(-1,1,'BRAD',BALRAD)                                      00040800
 8811 CONTINUE                                                          00040900
  510 CONTINUE                                                          00041000
C                                                                       00041100
      IRR=0                                                             00041200
      IF(MAXCL.EQ.1) GO TO 999                                          00041300
      IF(IFIN.NE.0) GO TO 999                                           00041400
C                                                                       00041500
C--IF IFIN IS ZERO, ESTIMATE NEXT STEPOUT DISTANCE AND THEN             00041600
C--OBTAIN PARAMETRIC STEP CHANGE TO ESTIMATE THIS.                      00041700
      CALL SRFTOL(RK,EFRAD,PTOL,XSTEP,ESTEP)                            00041800
C                                                                       00041900
  600 CONTINUE                                                          00042000
C--COMPUTE THE NEW PARAMETRIC STEPSIZE PAR(1-2)                         00042100
C--PAR SHOULD GENERATE A NEW DRIVE POINT SO THAT THE DESIRED            00042200
C--TOOL END STEP ESTEP IS ACHIEVED                                      00042300
C--IF DTOL IS GT ZERO, DTOL IS TOLERANCE OF DRIVE GEOM                  00042400
C--DSTEP GT ZERO LIMITS THE MAXIMUM PARAMETRIC STEP SIZE                00042500
C--IF DSTEP GT ZERO AND DTOL=0 THEN DSTEP IS THE STEP                   00042600
C--FOR GENERAL TOLERANCE CALCULATIONS AN ATTEMPT IS MADE                00042700
C--TO APPROACH EACH ARC JUNCTION WITHOUT EXTREME MOVES                  00042800
C                                                                       00042900
      IFIN=0                                                            00043000
      IF(ISTEPK.EQ.0) STEP=.95*XSTEP*TSTEP/SSTEP                        00043100
      IF(ISTEPK.GT.0) STEP=.95*ESTEP                                    00043200
      IF(EMAX.GT.0.1D0) STEP=DMIN1(STEP,EMAX)                           00043300
      STEP=DMIN1(AMAXDP,STEP)                                           00043400
  610 CONTINUE                                                          00043500
C--ADJUST PSTEP IF PAR HAD BEEN CUT BACK BY CHKSTEP                     00043600
      DIF=PARNSV-PAR(INDEX)                                             00043700
      IF(DABS(DIF).GT.SMAL) PSTEP=PSTEP-DABS(DIF)                       00043800
C--CUT BACK PARAMETER VALUE IF THE LAST STEP SIZE WAS NG                00043900
      IF(ISTEPK.GT.0) PAR(INDEX)=PAR(INDEX)-PDIR*PSTEP                  00044000
      PCUR=PAR(INDEX)                                                   00044100
      PLO=PLIM(2*INDEX-1)                                               00044200
      PHI=PLIM(2*INDEX)                                                 00044300
      PSTEP=DABS(DSTEP)                                                 00044400
      IF(DTOL.EQ.ZERO.AND.DSTEP.NE.ZERO) GO TO 640                      00044500
C                                                                       00044600
C--STEP IS THE PHYSICAL SURFACE MOVE DESIRED ACROSS THE PART SURFACE    00044610
C--THIS MUST BE CONVERTED INTO PSTEP - THE CORRESPONDING PARAMETRIC     00044620
C--MOVE ALONG THE DRIVE CURVE. STEP IS LIMITED BY DSTEP(GT.0) AND       00044630
C--PSTEP IS LIMITED BY DR(27) AND DSTEP(LT.0).                          00044640
      CALL DOTF(W1,DR(13),RVEC)                                         00044700
      CALL DOTF(W2,DR(5),DR(5))                                         00044800
      W2=DSQRT(W2)                                                      00044900
      W1=DABS(W1*W2)                                                    00045000
      W1=DMAX1(SMAL,W1)                                                 00045100
C                                                                       00045110
      PSTEP=STEP/W1                                                     00045200
      IF(DR(27).GT.SMAL) PSTEP=DMIN1(PSTEP,DR(27))                      00045210
      WW=DABS(DSTEP)                                                    00045300
      IF(DSTEP.GT.ZERO) PSTEP=DMIN1(PSTEP,WW)                           00045310
      PNEXT=PCUR+PDIR*PSTEP                                             00045400
C--CUT BACK THE SUGGESTED PARAMETER CHANGE SO THAT ALL CURVE            00045500
C--ARC JUNCTIONS ARE USED AND APPROACHED SMOOTHLY                       00045600
      CALL PCHG(PCUR,PDIR,PSTEP)                                        00045700
  640 CONTINUE                                                          00045800
      PAR(INDEX)=PAR(INDEX)+PDIR*PSTEP                                  00045900
      IF(IBUG.NE.11) GO TO 8807                                         00046000
      CALL BAD(1,1,'STEP',STEP)                                         00046100
      CALL BAD(1,1,'PSTP',PSTEP)                                        00046200
      CALL BAD(-2,1,'PAR ',PAR)                                         00046300
 8807 CONTINUE                                                          00046400
      GO TO 100                                                         00046500
C                                                                       00046600
C--   END OF PROCESSING                                                 00046700
C                                                                       00046800
  999 CONTINUE                                                          00046900
C---      WRITE OUT SUMMARY OF CURVATURE ETC FOR THIS PATH CALL         00047000
      CALL RECORD(ISEQNO)                                               00047100
      IF(ISEQNO.EQ.ISEQLS) GO TO 1995                                   00047200
C---      WRITE HEADER FOR DATA                                         00047300
      ISEQLS=ISEQNO                                                     00047400
      CALL BAD(-1,0,'PATH',ISEQNO)                                      00047500
      ICOL=1                                                            00047600
      CALL CFORM(' NO. ERRNO.',DARRAY,ICOL,11)                          00047700
      ICOL=13                                                           00047800
      CALL CFORM('CLCT PATH LEN.',DARRAY,ICOL,14)                       00047900
      ICOL=29                                                           00048000
      CALL CFORM('RADIUS/SURF   PATCH',DARRAY,ICOL,19)                  00048100
      ICOL=48                                                           00048200
      CALL CFORM('  U-SRF   V-SRF',DARRAY,ICOL,15)                      00048300
      ICOL=64                                                           00048400
      CALL CFORM(' U-DRV   V-DRV',DARRAY,ICOL,14)                       00048500
      ICOL=80                                                           00048600
      CALL CFORM('RADIUS/SURF   PATCH',DARRAY,ICOL,19)                  00048700
      ICOL=99                                                           00048800
      CALL CFORM('  U-SRF   V-SRF',DARRAY,ICOL,15)                      00048900
C                                                                       00049000
      CALL CPRINT(DARRAY)                                               00049100
 1995 CONTINUE                                                          00049200
      ICOL=2                                                            00049300
      CALL ICONV(KPATH,DARRAY,ICOL,4)                                   00049400
      ICOL=ICOL+5                                                       00049500
      CALL ICONV(IRR,DARRAY,ICOL,5)                                     00049600
      ICOL=ICOL+6                                                       00049700
      CALL ICONV(ICLCT,DARRAY,ICOL,4)                                   00049800
      ICOL=ICOL+5                                                       00049900
      CALL FCONV(PLEN,DARRAY,ICOL,10,3)                                 00050000
      ICOL=ICOL+11                                                      00050100
      DO 1994 J=1,2                                                     00050200
      RAD=DABS(AKMXMN(J))                                               00050300
      RAD=DMAX1(ZEM5,RAD)                                               00050400
      RAD=DMIN1(BIG,RAD)                                                00050500
      IF(AKMXMN(J).LT.ZERO) RAD=-RAD                                    00050600
      RAD=1/RAD                                                         00050700
      CALL FCONV(RAD,DARRAY,ICOL,13,4)                                  00050800
      ICOL=ICOL+14                                                      00050900
      NPAT=AKPRT(1,J)                                                   00051000
      CALL ICONV(NPAT,DARRAY,ICOL,4)                                    00051100
      ICOL=ICOL+5                                                       00051200
      CALL FCONV(AKPRT(2,J),DARRAY,ICOL,7,3)                            00051300
      ICOL=ICOL+8                                                       00051400
      CALL FCONV(AKPRT(3,J),DARRAY,ICOL,7,3)                            00051500
      ICOL=ICOL+8                                                       00051600
      IF(J.GT.1) GO TO 1994                                             00051700
      CALL FCONV(AKDRV(1,1),DARRAY,ICOL,7,3)                            00051800
      ICOL=ICOL+8                                                       00051900
      CALL FCONV(AKDRV(2,1),DARRAY,ICOL,7,3)                            00052000
      ICOL=ICOL+8                                                       00052100
 1994 CONTINUE                                                          00052200
C                                                                       00052300
      CALL CPRINT(DARRAY)                                               00052400
      IF(IBUG.NE.11) GO TO 1998                                         00052500
      ASSIGN 1998 TO IRET                                               00052600
      GO TO 1999                                                        00052700
 1998 CONTINUE                                                          00052800
      RETURN                                                            00052900
C                                                                       00053000
C--INPUT/OUTPUT PRINT AREA                                              00053100
 1999 CONTINUE                                                          00053200
      CALL BAD(-1,0,' ',0)                                              00053300
      CALL BAD(-6,1,'DSRF',DSURF)                                       00053400
      CALL BAD(1,0,'IDTY',IDTYPE)                                       00053500
      CALL BAD(1,1,'PDIR',PDIR)                                         00053600
      CALL BAD(1,1,'DTOL',DTOL)                                         00053700
      CALL BAD(1,1,'DSTP',DSTEP)                                        00053800
      CALL BAD(-1,1,'DOFS',DOFSET)                                      00053900
      CALL BAD(-4,1,'PLIM',PLIM)                                        00054000
      CALL BAD(1,0,'IDTL',IDTOOL)                                       00054100
      CALL BAD(1,0,'IDAX',IDAXIS)                                       00054200
      CALL BAD(-4,1,'DAXI',DAXIS)                                       00054300
      CALL BAD(1,0,'ITLD',ITLDIR)                                       00054400
      CALL BAD(-3,1,'TLDR',TLDIR)                                       00054500
      CALL BAD(-6,1,'PSRF',PSURF)                                       00054600
      CALL BAD(1,1,'SIDE',PSIDE)                                        00054700
      CALL BAD(1,1,'THCK',PTHICK)                                       00054800
      CALL BAD(1,1,'PTLI',PTOLI)                                        00054900
      CALL BAD(1,1,'PTLO',PTOLO)                                        00055000
      CALL BAD(1,1,'TUL ',TUL)                                          00055100
      CALL BAD(-1,1,'UST ',UST)                                         00055200
      CALL BAD(1,1,'VST ',VST)                                          00055300
      CALL BAD(1,1,'SCHT',SCALHT)                                       00055400
      CALL BAD(1,1,'STOV',STEPOV)                                       00055500
      CALL BAD(1,1,'STMX',STEPMX)                                       00055600
      CALL BAD(1,1,'MXDP',AMAXDP)                                       00055700
      CALL BAD(-1,1,'ELMX',ELMAX)                                       00055800
      CALL BAD(1,0,'MXCL',MAXCL)                                        00055900
      CALL BAD(1,0,'ISKP',ICLSKP)                                       00056000
      CALL BAD(1,0,'QUAL',IQUAL)                                        00056100
      CALL BAD(-3,1,'TD  ',TD)                                          00056200
      CALL BAD(3,1,'TE  ',TE)                                           00056300
      CALL BAD(-3,1,'TA  ',TA)                                          00056400
      CALL BAD(1,0,'IPTL',IPTOOL)                                       00056500
      CALL BAD(2,1,'PAR ',PAR)                                          00056600
      CALL BAD(-1,0,'IRR ',IRR)                                         00056700
      GO TO IRET,(1997,1998)                                            00056800
      END                                                               00056900
**** SOURCE FILE : M0001113.W01   ***
*
      SUBROUTINE STEPCK(SIDE,R,RX,RK,RL,RXL,RKL,EFRAD,TOL,              00000100
     X                  SRMIN,TLMIN)                                    00000200
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000300
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM                                   00000400
      DIMENSION R(*),RX(1),RL(*),RXL(1)                                 00000500
      DIMENSION RDIF(3)                                                 00000600
      CHARACTER*20 BADMSG                                               00000610
      DATA SMAL,BIG/1.0D-38,1.0D+10/                                    00000700
C--PURPOSE IS TO COMPUTE MINIMUM SURFACE (SRMIN) AND TOOL STEPS         00000800
C--(TLMIN) BASED ON CURRENT AND LAST CONTACT POINTS                     00000900
C                                                                       00001000
      SRMIN=BIG                                                         00001100
      TLMIN=BIG                                                         00001200
      DO 10 I=1,3                                                       00001300
   10 RDIF(I)=R(I)-RL(I)                                                00001400
      CALL DOTF(RSQ,RDIF,RDIF)                                          00001500
C                                                                       00001600
      CALL SRFTOL(RK,EFRAD,TOL,SMIN,TMIN)                               00001700
      SRMIN=DMIN1(SRMIN,SMIN)                                           00001800
      TLMIN=DMIN1(TLMIN,TMIN)                                           00001900
C                                                                       00002000
      CALL SRFTOL(RKL,EFRAD,TOL,SMIN,TMIN)                              00002100
      SRMIN=DMIN1(SRMIN,SMIN)                                           00002200
      TLMIN=DMIN1(TLMIN,TMIN)                                           00002300
C                                                                       00002400
      IF(RSQ.LT.SMAL) GO TO 999                                         00002500
      CALL DOTF(W,R(29),RDIF)                                           00002600
      W=-2.*W*SIDE/RSQ                                                  00002700
      CALL SRFTOL(W,EFRAD,TOL,SMIN,TMIN)                                00002800
      SRMIN=DMIN1(SRMIN,SMIN)                                           00002900
      TLMIN=DMIN1(TLMIN,TMIN)                                           00003000
C                                                                       00003100
      CALL DOTF(W,RL(29),RDIF)                                          00003200
      W=2.*W*SIDE/RSQ                                                   00003300
      CALL SRFTOL(W,EFRAD,TOL,SMIN,TMIN)                                00003400
      SRMIN=DMIN1(SRMIN,SMIN)                                           00003500
      TLMIN=DMIN1(TLMIN,TMIN)                                           00003600
C                                                                       00003700
  999 CONTINUE                                                          00003800
      IF(IBUG.NE.11) GO TO 1999                                         00003900
      CALL BAD(-1,0,' ',0)                                              00004010
      BADMSG=' AFTER STEPCK'                                            00004020
      CALL CPRINT(BADMSG)                                               00004030
      CALL BAD(1,1,'SIDE',SIDE)                                         00004100
      CALL BAD(1,1,'RK  ',RK)                                           00004200
      CALL BAD(1,1,'RKL ',RKL)                                          00004300
      CALL BAD(1,1,'ERAD',EFRAD)                                        00004400
      CALL BAD(-1,1,'TOL ',TOL)                                         00004500
      CALL BAD(1,1,'SRMN',SRMIN)                                        00004600
      CALL BAD(-1,1,'TLMN',TLMIN)                                       00004700
 1999 CONTINUE                                                          00004800
      RETURN                                                            00004900
      END                                                               00005000
**** SOURCE FILE : M0001126.W07   ***
*
      SUBROUTINE TULPOS(R,SIDE,DR,TUL,PTHICK,TOLCOM,IPTOOL,IDTOOL,      00000100
     X                  TE, TA,TBEF,PDIR)                               00000200
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000300
C                                                                       00000400
C-- R     INPUT SURFACE CONTACT POINT/DERIVATIVES(SEE CNSURF)           00000500
C-- SIDE  INPUT 1 OR -1, DEFINES CUTTER SIDE OF SURFACE                 00000600
C-- DR    DRIVE ELEMENT POINT/DERIVATIVES(SEE DGEOM)                    00000700
C-- TUL   CUTTER PARAMETERS                                             00000800
C-- PTHICK PART GEOMETRY THICK SPECIFICATION                            00000900
C-- TOLCOM TOLERANCE BAND COMPENSATION                                  00001000
C-- IPTOOL PART SURFACE CONTROL FLAG( 0 FOR ON, 1 FOR TO)               00001100
C-- IDTOOL DRIVE ELEMENT CONTROL FLAG                                   00001200
C-- TE   OUTPUT TOOL END                                                00001300
C-- TA   OUTPUT TOOL AXIS                                               00001400
C-- TBEF OUTPUT EFFECTIVE TOOL END BASED ON SPHERICAL CUTTER            00001500
C-- PDIR DIRECTION OF MOTION WRT INCREASING PARAMETER (+1 OR -1)        00001510
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM                                   00001600
      DIMENSION VEC(3)                                                  00001700
C--PURPOSE IS TO COMPUTE TOOL END AND TOOL AXIS WHEN AN A               00001800
C--ACCEPTABLE SURFACE CONTACT POINT HAS BEEN FOUND                      00001900
      DIMENSION R(32),DR(36),TUL(4),TE(3),TA(3),TBEF(3)                 00002000
      CHARACTER*20 BADMSG                                               00002010
      CHARACTER*120 DARRAY                                              00002015
      DIMENSION VECL(3),V(3),VN(3)                                      00002020
      DOUBLE PRECISION NPS                                              00002022
      DIMENSION FWD(3),NPS(3),ROLL(3),PITCH(3)                          00002023
C--TOOL CANONICAL DATA                                                  00002030
      INCLUDE 'TLLDAT.INC'                                              00002040
C--TOOL AXIS CONTROL DATA                                               00002042
      INCLUDE 'TAC.INC'                                                 00002044
C--INITIALZE VECL AND FIRST CALL FLAG                                   00002045
      LOGICAL LFIRST                                                    00002046
C--SAVE LAST DIRECTION FROM SP TOWARDS TOOL AXIS,AND FLAG LFIRST        00002050
      SAVE VECL,LFIRST                                                  00002060
C                                                                       00002062
      DATA VECL/3*0.D0/,LFIRST/.TRUE./                                  00002064
C                                                                       00002066
C--FOR FIRST CALL (LFIRST=.TRUE.) SET VECL TO REV. MOTION DIRECTION     00002061
      IF (LFIRST) THEN                                                  00002062
        DO 5 I=1,3                                                      00002063
          VECL(I)=-1.0*PDIR*DR(12+I)                                    00002064
   5    CONTINUE                                                        00002065
        LFIRST=.FALSE.                                                  00002066
      ENDIF                                                             00002067
C.... IF TOOL AXIS CONTROL WRT PS - COMPUTE LOCAL PITCH AND ROLL AXES   00002070
      IF (ITAC.EQ.2) THEN                                               00002071
C.... GUIDE SURFACE FORWARD DIRECTION - PDIR*(DRIVE TANGENT VECTOR)     00002072
        CALL VSCALE(PDIR,DR(13),FWD)                                    00002074
C.... CUTTER SIDE OF PART SURFACE                                       00002076
        CALL VSCALE(SIDE,R(29),NPS)                                     00002078
C.... COMPUTE UNIT VECTOR PERPENDICULAR TO GUIDE SURFACE FORWARD AND    00002080
C     PROJECTION VECTORS                                                00002081
        CALL CROSSV(FWD,DR(21),V)                                       00002082
C.... COMPUTE LOCAL FORWARD MOTION DIRECTION IN PS TANGENT PLANE        00002084
C           (ROLL AXIS)                                                 00002085
       CALL CROSSV(NPS,V,ROLL)                                          00002086
C.... COMPUTE LOCAL AXIS ORTHOGONAL WITH ROLL AXIS AND PS NORMAL        00002088
C           (PITCH AXIS)                                                00002089
        CALL CROSSV(NPS,ROLL,PITCH)                                     00002090
C.... DETERMINE DIRECTION IN WHICH ROLL ANGLE IS TO BE APPLIED          00002091
C     POSITIVE IN STEPOVER DIRECTION                                    00002092
        CALL DOTV(SGN,PITCH,DR(29))                                     00002094
        SGN=SIGN(1.D0,SGN)                                              00002096
      ENDIF                                                             00002098
C-- TWO MAIN CASES, TOOL ON PS OR NOT ON.                               00002100
      IF(IPTOOL.NE.0) GO TO 50                                          00002200
C--GENERAL CASE, TOOL OFFSET FROM SURFACE                               00002300
      OFFSET=SIDE*(PTHICK+TOLCOM+TUL(1))                                00002400
      DO 10 I=1,3                                                       00002500
       IF (ITAC.EQ.1) THEN                                              00002510
C.... APPLY CUTANG BETA TO TA IN DIRECTION OF MOTION                    00002520
        TA(I)=COSB*DR(16+I) + PDIR*SINB*DR(12+I)                        00002530
       ELSE IF (ITAC.EQ.2) THEN                                         00002532
C.... APPLY BETA WRT TO PS NORMAL IN MOTION DIRECTION                   00002534
C     AND ALPHA IN PLANE PERPENDICULAR TO MOTION DIRECTION              00002535
        TA(I)=COSA*COSB*NPS(I) + SINB*ROLL(I)                           00002536
     +       + SGN*SINA*COSB*PITCH(I)                                   00002538
       ELSE                                                             00002540
        TA(I)=DR(16+I)                                                  00002600
       ENDIF                                                            00002610
       TBEF(I)=R(I)+OFFSET*R(I+28)-TUL(1)*TA(I)                         00002700
   10 CONTINUE                                                          00002900
C--GENERAL CUTTER CALCULATION.                                          00003100
      CALL CROSS(TA,R(29),VEC)                                          00003200
C...IF TA IS PARALLEL TO SN USE PREVIOUS VALUE OF VEC INSTEAD OF SN     00003201
      VLEN2=VEC(1)*VEC(1)+VEC(2)*VEC(2)+VEC(3)*VEC(3)                   00003202
      IF (VLEN2.LT.1.0D-12) THEN                                        00003203
        CALL CROSS(TA,VECL,VEC)                                         00003204
      ENDIF                                                             00003205
      DO 20 I=1,3                                                       00003300
   20 VEC(I)=SIDE*VEC(I)                                                00003400
      CALL CROSS(VEC,TA,VEC)                                            00003500
      CALL VNORM(VEC,VEC)                                               00003600
C...MODIFY OFFSET FOR 7 SEGMENT CUTTER CALCULATION                      00003610
      OFFSET=OFFSET-SIDE*TUL(1)                                         00003620
        DO 32 I=1,3                                                     00004008
         VECL(I)=VEC(I)                                                 00004009
   32   CONTINUE                                                        00004010
C...COMPUTE TANGENT OF ANGLE BETWEEN TOOL NORMAL AND TOOL RADIAL AXIS   00004020
      CALL DOTV(CANG,VEC,R(29))                                         00004021
      CALL CROSS(VEC,R(29),V)                                           00004022
      CALL VNORM(V,VN)                                                  00004023
      CALL DOTV(SANG,V,VN)                                              00004024
      IF (ABS(CANG).GT.1.D-15) THEN                                     00004025
        TANG=SANG/CANG                                                  00004026
      ELSE                                                              00004027
        TANG=SIGN(1.D0,SANG)*1.D15                                      00004028
      ENDIF                                                             00004029
C...IS ANGLE VALID FOR SEGMENTS 3,4,5 OF CUTTER                         00004030
C   I.E. CORNER RADIUS AND ADJACENT POINT CIRCLE SEGMENTS               00004031
      DO 35 I=3,5                                                       00004032
        IF ((TCONT(I).GT.0).AND.                                        00004033
     1     ((TANG-TANLO(I))*(TANG-TANHI(I)).LE.0.D0)) THEN              00004034
C...COMPUTE TOOL END COORDS                                             00004035
          DO 34 K=1,3                                                   00004036
            TE(K)=R(K)+(OFFSET+SIDE*CORRAD(I))*R(28+K)                  00004037
     1           +RI(I)*VEC(K)-TLHITE(I)*TA(K)                          00004038
   34     CONTINUE                                                      00004039
          GOTO 999                                                      00004040
        ENDIF                                                           00004041
   35 CONTINUE                                                          00004042
C...NO - IS ANGLE VALID FOR TOOL TIP                                    00004043
      IF ( (TCONT(1).GT.0).AND.                                         00004044
     1   ( (TANG-TANLO(1))*(TANG-TANHI(1)).LE.0.D0) ) THEN              00004045
C...YES - OUTPUT WARNING                                                00004046
        CALL CFORM(' *** WARNING - CUTTING ON TOOL TIP ***',DARRAY,1,38)00004047
        CALL CPRINT(DARRAY)                                             00004048
        DO 40 K=1,3                                                     00004049
          TE(K)=R(K)+OFFSET*R(28+K)                                     00004050
   40   CONTINUE                                                        00004051
C...NO - IS ANGLE VALID FOR TOP OF UPPER LINE SEGMENT                   00004052
      ELSE IF ( (TCONT(7).GT.0).AND.                                    00004053
     1        ( (TANG-TANLO(7))*(TANG-TANHI(7)).LE.0.D0) ) THEN         00004054
C...YES - OUTPUT WARNING                                                00004055
        CALL CFORM(' *** WARNING - CUTTING ON POINT CIRCLE AT TOP OF UPP00004056
     1ER LINE SEGMENT ***',DARRAY,1,71)                                 00004057
        CALL CPRINT(DARRAY)                                             00004058
        DO 42 K=1,3                                                     00004059
          TE(K)=R(K)+OFFSET*R(28+K)+RI(7)*VEC(K)-TLHITE(7)*TA(K)        00004060
   42   CONTINUE                                                        00004061
C...NO - INVALID ANGLE FOR THIS CUTTER                                  00004062
      ELSE                                                              00004063
        CALL CFORM(' *** WARNING - UNABLE TO POSITION 7 SEGMENT CUTTER A00004064
     1T CURRENT SURFACE POINT - SPHERICAL CUTTER ASSUMED',DARRAY,1,101) 00004065
        CALL CPRINT(DARRAY)                                             00004066
C                                                                       00004080
        DO 45 K=1,3                                                     00004081
          TE(K)=TBEF(K)                                                 00004082
   45   CONTINUE                                                        00004083
      ENDIF                                                             00004084
C...PRINT USEFUL DIAGNOSTIC INFORMATION WHEN WARNINGS OCCUR             00004085
      CALL BAD(3,1,'SP  ',R(1))                                         00004086
      CALL BAD(-3,1,'SN  ',R(29))                                       00004087
      CALL BAD(3,1,'TE  ',TE)                                           00004088
      CALL BAD(-3,1,'TA  ',TA)                                          00004089
      CALL BAD(3,1,'VEC ',VEC)                                          00004091
      CALL BAD(-3,1,'VECL',VECL)                                        00004092
      CALL BAD(-1,1,'TANG',TANG)                                        00004093
      GO TO 999                                                         00004100
   50 CONTINUE                                                          00004200
C--TOOL TIP ON PART SURFACE                                             00004300
      DO 60 I=1,3                                                       00004400
       IF (ITAC.EQ.1) THEN                                              00004410
C.... APPLY CUTANG BETA TO TA IN DIRECTION OF MOTION                    00004420
        TA(I)=COSB*DR(16+I) + PDIR*SINB*DR(12+I)                        00004430
       ELSE                                                             00004440
        TA(I)=DR(16+I)                                                  00004500
       ENDIF                                                            00004510
      TE(I)=R(I)+SIDE*TOLCOM*R(I+28)                                    00004600
      TBEF(I)=TE(I)                                                     00004700
   60 CONTINUE                                                          00004800
C                                                                       00004900
  999 CONTINUE                                                          00005000
      IF(IBUG.NE.11) GO TO 1999                                         00005100
      CALL BAD(-1,0,' ',0)                                              00005210
      BADMSG=' AFTER TULPOS'                                            00005220
      CALL CPRINT(BADMSG)                                               00005230
      CALL BAD(-1,1,'TCOM',TOLCOM)                                      00005300
      CALL BAD(3,1,'TE  ',TE)                                           00005400
      CALL BAD(-3,1,'TA  ',TA)                                          00005500
      CALL BAD(-3,1,'TBEF',TBEF)                                        00005510
 1999 CONTINUE                                                          00005600
C                                                                       00005700
      RETURN                                                            00005800
      END                                                               00005900
**** MODULE = SSDATA ****
**** SOURCE FILE : M0001218.V04   ***
*
      BLOCK DATA SSDAT1                                                 00000100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000200
      COMMON/SSARLM/B(64,4),U(4),V(4),ITOP(6,4,4),IFLAG(4,4),IPNUM(4),  00000300
     X  ISEQLS,NLAST,MCAT,JENLAS(4),MODLAS(4),IRRLAS(4),NCALMX,NCMX     00000400
      COMMON/IBUGG/IBUG,IPCOLC,IPCOLM                                   00000500
      COMMON/MODESS/MODESS,MSSCHK,MSSARL                                00000510
C---     SCRATCH PAD AREA FOR DEFINING SS GEOMETRY                      00000520
      INCLUDE 'SSPAD.INC'                                               00000532
      COMMON/XDS/DGEOM(4),DLIM(4),TLDIR(3),DOFSET,ITLDIR,IDTOOL,NDS     00000540
      COMMON/XPS/PGEOM(4),PSIDE,PTHICK,IPTOOL,NPS                       00000550
      COMMON/XFEED/CLRPLN(4),FED(4),NCLRPL,NFEED                        00000560
      COMMON/XSTEPO/SSTEP(4),NSTEPO                                     00000570
      COMMON/XAXIS/AXIS(3),IAXIS,NAXIS                                  00000580
      DATA IBUG,IPCOLC,IPCOLM/0,0,0/                                    00000600
      DATA MODESS,MSSCHK,MSSARL/0,0,1/                                  00000800
      DATA MODLAS,IRRLAS,JENLAS,IPNUM,NCALMX,NCMX/17*0,150/             00000900
      DATA ISEQLS,NLAST,MCAT/-1,-1,0/                                   00001000
C---     NSCNMX IS THE MAX SPACE IN SCAN, ISCAN THE LAST USED LOCATION  00001300
      DATA NSCNMX/ISCN/                                                 00001400
      DATA ISCAN/0/                                                     00001500
      DATA SCAN/ISCN*0.0D0/                                             00001600
      DATA DGEOM/4*0.D0/                                                00002200
      DATA DLIM/4*0.D0/                                                 00002300
      DATA TLDIR/3*0.D0/                                                00002400
      DATA DOFSET/0.D0/                                                 00002500
      DATA ITLDIR/0/                                                    00002600
      DATA IDTOOL/0/                                                    00002700
      DATA NDS/-121/                                                    00002800
      DATA PGEOM/4*0.D0/                                                00002900
      DATA PSIDE/1.0D0/                                                 00003000
      DATA PTHICK/0.D0/                                                 00003100
      DATA IPTOOL/0/                                                    00003200
      DATA NPS/-121/                                                    00003300
      DATA CLRPLN/4*0.D0/                                               00003400
      DATA FED/4*0.D0/                                                  00003500
      DATA NCLRPL/-121/                                                 00003600
      DATA NFEED/-121/                                                  00003700
      DATA SSTEP/4*0.D0/                                                00003800
      DATA NSTEPO/-121/                                                 00003900
      DATA AXIS/3*0.D0/                                                 00004000
      DATA IAXIS/0/                                                     00004100
      DATA NAXIS/-121/                                                  00004200
      END                                                               00004300
**** SOURCE FILE : M0001026.V02   ***
*
      BLOCK DATA SSDAT2                                                 00000010
      LOGICAL SSPRT,SSTEST                                              00000015
      COMMON/SSPRT/SSPRT,SSTEST                                         00000020
      DATA SSPRT/.TRUE./,SSTEST/.FALSE./                                00000030
      END                                                               00000040
**** SOURCE FILE : SSDAT3.ORG   ***
*
      BLOCK DATA SSDAT3                                                 00000100
C                                                                       00000200
      INCLUDE 'RMFLGS.INC'                                              00000300
      INCLUDE 'TAC.INC'                                                 00000400
C                                                                       00000500
      DATA LGCHK/.FALSE./                                               00000600
      DATA LINTCK/.FALSE./                                              00000700
      DATA LAVCTL/.FALSE./                                              00000800
      DATA LVAXIS/.FALSE./                                              00000900
C                                                                       00001000
      DATA ALPHA/0.D0/                                                  00001100
      DATA BETA/0.D0/                                                   00001200
      DATA COSA/1.D0/                                                   00001300
      DATA SINA/0.D0/                                                   00001400
      DATA COSB/1.D0/                                                   00001500
      DATA SINB/0.D0/                                                   00001600
      DATA ITAC/0/                                                      00001700
C                                                                       00001800
      END                                                               00001900
**** MODULE = NONNATIV ****
**** SOURCE FILE : EVAL.V01   ***
*
      SUBROUTINE EVAL(NAME,U,V,ARRAY,SPW,MODE)                          00001000
C                                                                       00002000
      INCLUDE 'DARRAY.INC'                                              00003000
C                                                                       00004000
      DOUBLE PRECISION U,V,ARRAY(*),SPW(32)                             00005000
      INTEGER MODE                                                      00006000
      CHARACTER*8 NAME                                                  00007000
C                                                                       00008000
      INTEGER SLEN,IPOS                                                 00009000
C                                                                       00010000
      IF (NAME.EQ.'MDCS') THEN                                          00011000
        CALL EMDCS(U,V,ARRAY,SPW,MODE)                                  00012000
      ELSE IF (NAME.EQ.'TORUS') THEN                                    00013000
        CALL ETORUS(U,V,ARRAY,SPW,MODE)                                 00014000
      ELSE IF (NAME.EQ.'VDAFS') THEN                                    00014100
        CALL EVDAFS(U,V,ARRAY,SPW,MODE)                                 00014150
      ELSE                                                              00015000
        SLEN=0                                                          00016000
        CALL CFORM('0 EVALUATOR FOR NON-NATIVE SURFACE TYPE :',         00017000
     +             DARRAY,1,SLEN)                                       00018000
        IPOS=SLEN+2                                                     00019000
        CALL CFORM(NAME,DARRAY,IPOS,8)                                  00020000
        IPOS=IPOS+10                                                    00021000
        SLEN=0                                                          00022000
        CALL CFORM(': NOT AVAILABLE',DARRAY,IPOS,SLEN)                  00023000
        CALL CPRINT(DARRAY)                                             00024000
        CALL ABNEND                                                     00025000
      ENDIF                                                             00026000
      RETURN                                                            00027000
      END                                                               00028000
**** SOURCE FILE : TEVAL.V01   ***
*
      SUBROUTINE TEVAL(NAME,TRM,DATA)                                   00001000
C                                                                       00002000
      INCLUDE 'DARRAY.INC'                                              00003000
C                                                                       00004000
      DOUBLE PRECISION TRM(4,3),DATA(*)                                 00005000
      CHARACTER*8 NAME                                                  00006000
C                                                                       00007000
      INTEGER SLEN,IPOS                                                 00008000
C                                                                       00009000
      IF (NAME.EQ.'MDCS') THEN                                          00010000
        CALL TMDCS(TRM,DATA)                                            00011000
      ELSE IF (NAME.EQ.'TORUS') THEN                                    00012000
        CALL TTORUS(TRM,DATA)                                           00013000
      ELSE IF (NAME.EQ.'VDAFS') THEN                                    00013100
        CALL TVDAFS(TRM,DATA)                                           00013150
      ELSE                                                              00014000
        SLEN=0                                                          00015000
        CALL CFORM('0 TRANSFORMATOR FOR NON-NATIVE SURFACE TYPE :',     00016000
     +             DARRAY,1,SLEN)                                       00017000
        IPOS=SLEN+2                                                     00018000
        CALL CFORM(NAME,DARRAY,IPOS,8)                                  00019000
        IPOS=IPOS+10                                                    00020000
        SLEN=0                                                          00021000
        CALL CFORM(': NOT AVAILABLE',DARRAY,IPOS,SLEN)                  00022000
        CALL CPRINT(DARRAY)                                             00023000
        CALL ABNEND                                                     00024000
      ENDIF                                                             00025000
      RETURN                                                            00026000
      END                                                               00027000
**** SOURCE FILE : M0008175.V05   ***
*
      SUBROUTINE EMDCS (U,V,DATA,SPV,MODE)                              M0000100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               M0000200
C  EVALUATION ROUTINE FOR                                               M0000300
C   "MASTER DIMENSION CONTOUR SURFACE" - MCDS                           M0000400
C                                                                       M0000500
C   PATCH DATA                                                          M0000600
      DIMENSION DATA(120)                                               M0000700
C   OUTPUT: EVALUATION VECTOR                                           M0000800
      DIMENSION SPV(4,12)                                               M0000900
C  FUNCTIOS IN V, FV(I,2): 1.DERIVATIVE; FV(I,3): 2.DERIVATIVE;         M0001000
C                                        FV(I,4): 3.DERIVATIVE          M0001100
      DIMENSION FV(3,4)                                                 M0001200
C  8 CONICS WITH DERIVATIVES (1.,2.,AND 3.)                             M0001500
      DIMENSION YZ(8,4),YZ1(2,4,4)                                      M0001600
      EQUIVALENCE (YZ(1,1),YZ1(1,1,1))                                  M0001700
C  6 CONIC DELTAS AND DERIVATIVE ((Y1,Y4,Y3),(Z1,Z4,Z3))                M0001800
      DIMENSION YZS(3,2,4)                                              M0001900
C  3 WEIGHT FUNCTIONS UND DERIVATIVES (W1,W4,W3)                        M0002000
      DIMENSION WS(3,4)                                                 M0002100
      INTEGER IW(4)                                                     M0002200
C  AUXILIARY ARRAY                                                      M0002300
      DIMENSION HI(3)                                                   M0002400
                                                                        M0002440
      DATA FV(1,3),FV(2,3),FV(3,3) /2.D0,-2.D0,2.D0/                    M0002450
      DATA FV(1,4),FV(2,4),FV(3,4) /3*0.D0/                             M0002460
      DATA IW/2,3,1,2/                                                  M0002470
C                                                                       M0002500
C    SET OF INTERNAL MODE, IF NECESSARY                                 M0002600
      GOTO (1,2,3),MODE                                                 M0002700
C    POINT ONLY                                                         M0002800
      IMODE=1                                                           M0002900
      NRES=1                                                            M0003000
      GOTO 4                                                            M0003100
C    POINT AND TANGENTS                                                 M0003200
    1 IMODE=2                                                           M0003300
      NRES=3                                                            M0003400
      GOTO 4                                                            M0003500
C    POINT, TANGENTS AND 2. DERIVATIVE                                  M0003600
    2 IMODE=3                                                           M0003700
      NRES=8                                                            M0003800
      GOTO 4                                                            M0003900
C    POINT, TANGENTS, 2. AND 3. DERIVATIVE                              M0004000
    3 IMODE=4                                                           M0004100
      NRES=12                                                           M0004200
      GOTO 4                                                            M0004300
C  ZERO SPV                                                             M0004400
    4 DO 5 I=1,4                                                        M0004500
      DO 5 J=1,NRES                                                     M0004600
    5 SPV(I,J)=0.D0                                                     M0004700
C  X(U) = XMIN+EXT*U                                                    M0004800
      SPV(1,1)=DATA(31)+DATA(32)*U                                      M0004900
C  DX/DU = EXT                                                          M0005000
      SPV(1,2)=DATA(32)                                                 M0005100
C  FUNCTIONS IN V:  FV(1-3,1) = (1-V)**2, V*(1-V), V**2                 M0005200
   10 FV(3,1)=V*V                                                       M0005300
      FV(2,1)=V-FV(3,1)                                                 M0005400
      FV(1,1)=1.D0-V-FV(2,1)                                            M0005500
      IF(IMODE.EQ.1) GOTO 20                                            M0005600
C  DERIVATIVES IN V:  FV(1-3,2) = 2V-2, 1-2V, 2V                        M0005700
      FV(3,2)=V+V                                                       M0005800
      FV(2,2)= 1.D0-FV(3,2)                                             M0005900
      FV(1,2)=-1.D0-FV(2,2)                                             M0006000
C  2. DERIVATIVES OF V-FUNCTIONS  FV(1-3,3) = 2,-2, 2 (CONSTANT)        M0006100
C  3. DERIVATIVES OF V-FUNCTIONS  FV(1-3,4) = 0, 0, 0  (CONSTANT)       M0006200
C                                                                       M0006300
C  8 CONIC FUNCTIONS                                                    M0006400
   20 XHX=SPV(1,1)*SPV(1,1)                                             M0006500
      IRN=0                                                             M0006600
      DO 30 I=1,8                                                       M0006700
      IRN1=DATA(I)                                                      M0006800
      IF(IRN1.LE.IRN) GOTO 25                                           M0006900
C  COMPUTE CONIC (1. TIME)                                              M0007000
      IRN=IRN1                                                          M0007100
      ID=DATA(IRN+9)                                                    M0007200
      IF(DATA(ID).NE.1.D0) GOTO 23                                      M0007300
C  LINE CONIC: Y = YMIN+YEXT*U                                          M0007400
      YZ(I,1)=DATA(ID+1)+DATA(ID+2)*U                                   M0007500
      YZ(I,2)=DATA(ID+2)                                                M0007600
      YZ(I,3)=0.D0                                                      M0007700
      YZ(I,4)=0.D0                                                      M0007800
      GOTO 30                                                           M0007900
C  CONICS: Y1,Z1,Y2,Z2,Y3,Z3,Y4,Z4                                      M0008000
   23 YZ(I,1)=(DSQRT(DATA(ID+7)*XHX+DATA(ID+8)*SPV(1,1)                 M0008100
     *              +DATA(ID+9))*DATA(ID+10)                            M0008200
     *              -DATA(ID+2)*SPV(1,1)-DATA(ID+5))/DATA(ID+3)         M0008300
      IF(IMODE.EQ.1) GOTO 30                                            M0008400
C  CONIC DERIVATIVES TO U:YS= -(A*X+B*Y+D)/(B*X+C*Y+E)*L                M0008500
      QQ=       DATA(ID+2)*SPV(1,1)+DATA(ID+3)*YZ(I,1)+DATA(ID+5)       M0008600
      YZ(I,2)=-(DATA(ID+1)*SPV(1,1)+DATA(ID+2)*YZ(I,1)+DATA(ID+4))      M0008700
     *        /QQ*SPV(1,2)                                              M0008800
      IF(IMODE.EQ.2) GOTO 30                                            M0008900
C  2. DERIVATIVES:YSS= -(A*L**2+2*B*L*YS+C*YS**2)/(B*X+C*Y+E)           M0009000
      YZ(I,3)=-(SPV(1,2)*(DATA(ID+1)*SPV(1,2)                           M0009100
     *        +2.D0*DATA(ID+2)*YZ(I,2))                                 M0009200
     *        +DATA(ID+3)*YZ(I,2)*YZ(I,2))/QQ                           M0009300
      IF(IMODE.EQ.3) GOTO 30                                            M0009400
C  3. DERIVATIVES:YSSS= -3*YSS*(B*L+C*YS)/(B*X+C*Y+E)                   M0009500
      YZ(I,4)=-3.D0*YZ(I,3)*(DATA(ID+2)*SPV(1,2)+                       M0009600
     *                       DATA(ID+3)*YZ(I,2))/QQ                     M0009700
      GOTO 30                                                           M0009800
C  CONIC ALREADY COMPUTED                                               M0009900
   25 DO 27 I1=1,I                                                      M0010000
      IRN2=DATA(I1)                                                     M0010100
      IF(IRN2.NE.IRN1) GOTO 27                                          M0010200
      YZ(I,1)=YZ(I1,1)                                                  M0010300
      YZ(I,2)=YZ(I1,2)                                                  M0010400
      YZ(I,3)=YZ(I1,3)                                                  M0010500
      YZ(I,4)=YZ(I1,4)                                                  M0010600
      GOTO 30                                                           M0010700
   27 CONTINUE                                                          M0010800
   30 CONTINUE                                                          M0010900
C  CONIC DIFFERENCES                                                    M0011000
      DO 40 I=1,IMODE                                                   M0011100
C  Y1S = Y1 - Y2                                                        M0011200
      YZS(1,1,I)=YZ(1,I)-YZ(3,I)                                        M0011300
C  Y4S = Y4 - Y2                                                        M0011400
      YZS(2,1,I)=YZ(7,I)-YZ(3,I)                                        M0011500
C  Y3S = Y3 - Y2                                                        M0011600
      YZS(3,1,I)=YZ(5,I)-YZ(3,I)                                        M0011700
C  Z1S = Z1 - Z2                                                        M0011800
      YZS(1,2,I)=YZ(2,I)-YZ(4,I)                                        M0011900
C  Z4S = Z4 - Z2                                                        M0012000
      YZS(2,2,I)=YZ(8,I)-YZ(4,I)                                        M0012100
C  Z3S = Z3 - Z2                                                        M0012200
      YZS(3,2,I)=YZ(6,I)-YZ(4,I)                                        M0012300
C  MOVE Y4, Z4 TO Y2, Z2                                                M0012400
      YZ(3,I)=YZ(7,I)                                                   M0012500
      YZ(4,I)=YZ(8,I)                                                   M0012600
   40 CONTINUE                                                          M0012700
C  COEFFICIENTS OF WEIGHT FUNCTIONS                                     M0012800
      DO 50 I=1,3                                                       M0012900
      I1=IW(I)                                                          M0013000
      I2=IW(I+1)                                                        M0013100
      WS(I,1)=YZS(I1,1,1)*YZS(I2,2,1)-YZS(I1,2,1)*YZS(I2,1,1)           M0013200
      IF(IMODE.EQ.1) GOTO 50                                            M0013300
C  1. DERIVATIVE                                                        M0013400
      WS(I,2)=YZS(I1,1,2)*YZS(I2,2,1)-YZS(I1,2,2)*YZS(I2,1,1)           M0013500
     *       +YZS(I1,1,1)*YZS(I2,2,2)-YZS(I1,2,1)*YZS(I2,1,2)           M0013600
      IF(IMODE.EQ.2) GOTO 50                                            M0013700
C  2. DERIVATIVE                                                        M0013800
      WS(I,3)=YZS(I1,1,3)*YZS(I2,2,1)-YZS(I1,2,3)*YZS(I2,1,1)           M0013900
     * +2.D0*(YZS(I1,1,2)*YZS(I2,2,2)-YZS(I1,2,2)*YZS(I2,1,2))          M0014000
     *       +YZS(I1,1,1)*YZS(I2,2,3)-YZS(I1,2,1)*YZS(I2,1,3)           M0014100
      IF(IMODE.EQ.3) GOTO 50                                            M0014200
C  2. DERIVATIVE                                                        M0014300
      WS(I,4)=YZS(I1,1,4)*YZS(I2,2,1)-YZS(I1,2,4)*YZS(I2,1,1)           M0014400
     * +3.D0*(YZS(I1,1,3)*YZS(I2,2,2)-YZS(I1,2,3)*YZS(I2,1,2))          M0014500
     * +3.D0*(YZS(I1,1,2)*YZS(I2,2,3)-YZS(I1,2,2)*YZS(I2,1,3))          M0014600
     *       +YZS(I1,1,1)*YZS(I2,2,4)-YZS(I1,2,1)*YZS(I2,1,4)           M0014700
   50 CONTINUE                                                          M0014800
C  WEIGHTED COORDINATES                                                 M0014900
      DO 60 I=1,2                                                       M0015000
      DO 60 J=1,3                                                       M0015100
      QQ1=WS(J,1)*YZ1(I,J,1)                                            M0015200
      SPV(I+1,1)=SPV(I+1,1)+QQ1*FV(J,1)                                 M0015300
      IF(IMODE.EQ.1) GOTO 60                                            M0015400
C                                                                       M0015500
      QQ2=WS(J,2)*YZ1(I,J,1)+WS(J,1)*YZ1(I,J,2)                         M0015600
      SPV(I+1,2)=SPV(I+1,2)+QQ2*FV(J,1)                                 M0015700
      SPV(I+1,3)=SPV(I+1,3)+QQ1*FV(J,2)                                 M0015800
      IF(IMODE.EQ.2) GOTO 60                                            M0015900
C                                                                       M0016000
      QQ3=WS(J,3)*YZ1(I,J,1)+WS(J,2)*YZ1(I,J,2)*2.D0                    M0016100
     *                      +WS(J,1)*YZ1(I,J,3)                         M0016200
      SPV(I+1,4)=SPV(I+1,4)+QQ3*FV(J,1)                                 M0016300
      SPV(I+1,5)=SPV(I+1,5)+QQ2*FV(J,2)                                 M0016400
      SPV(I+1,6)=SPV(I+1,6)+QQ1*FV(J,3)                                 M0016500
      IF(IMODE.EQ.3) GOTO 60                                            M0016600
      QQ4=WS(J,4)*YZ1(I,J,1)+WS(J,3)*YZ1(I,J,2)*3.D0                    M0016700
     *                      +WS(J,2)*YZ1(I,J,3)*3.D0                    M0016800
     *                      +WS(J,1)*YZ1(I,J,4)                         M0016900
      SPV(I+1, 9)=SPV(I+1, 9)+QQ4*FV(J,1)                               M0017000
      SPV(I+1,10)=SPV(I+1,10)+QQ3*FV(J,2)                               M0017100
      SPV(I+1,11)=SPV(I+1,11)+QQ2*FV(J,3)                               M0017200
      SPV(I+1,12)=SPV(I+1,12)+QQ1*FV(J,4)                               M0017300
   60 CONTINUE                                                          M0017400
C  WEIGHT FUNCTION                                                      M0017500
      DO 65 J=1,3                                                       M0017600
      SPV(4,1)=SPV(4,1)+WS(J,1)*FV(J,1)                                 M0017700
      IF(IMODE.EQ.1) GOTO 65                                            M0017800
C                                                                       M0017900
      SPV(4,2)=SPV(4,2)+WS(J,2)*FV(J,1)                                 M0018000
      SPV(4,3)=SPV(4,3)+WS(J,1)*FV(J,2)                                 M0018100
      IF(IMODE.EQ.2) GOTO 65                                            M0018200
C                                                                       M0018300
      SPV(4,4)=SPV(4,4)+WS(J,3)*FV(J,1)                                 M0018400
      SPV(4,5)=SPV(4,5)+WS(J,2)*FV(J,2)                                 M0018500
      SPV(4,6)=SPV(4,6)+WS(J,1)*FV(J,3)                                 M0018600
      IF(IMODE.EQ.3) GOTO 65                                            M0018700
C                                                                       M0018800
      SPV(4, 9)=SPV(4, 9)+WS(J,4)*FV(J,1)                               M0018900
      SPV(4,10)=SPV(4,10)+WS(J,3)*FV(J,2)                               M0019000
      SPV(4,11)=SPV(4,11)+WS(J,2)*FV(J,3)                               M0019100
      SPV(4,12)=SPV(4,12)+WS(J,1)*FV(J,4)                               M0019200
   65 CONTINUE                                                          M0019300
C  COMPUTATION OF (X,Y,Z)-COORDINATES                                   M0019400
      IF(IMODE.EQ.1) GOTO 71                                            M0019500
      DO 70 I=2,NRES                                                    M0019600
   70 SPV(4,I)=SPV(4,I)/SPV(4,1)                                        M0019700
   71 DO 72 I=2,3                                                       M0019800
      SPV(I,1)=SPV(I,1)/SPV(4,1)                                        M0019900
      IF(IMODE.EQ.1) GOTO 72                                            M0020000
      SPV(I,2)=SPV(I,2)/SPV(4,1)-SPV(I,1)*SPV(4,2)                      M0020100
      SPV(I,3)=SPV(I,3)/SPV(4,1)-SPV(I,1)*SPV(4,3)                      M0020200
      IF(IMODE.EQ.2) GOTO 72                                            M0020300
      SPV(I,4)=SPV(I,4)/SPV(4,1)-2.D0*SPV(I,2)*SPV(4,2)                 M0020400
     *                               -SPV(I,1)*SPV(4,4)                 M0020500
      SPV(I,5)=SPV(I,5)/SPV(4,1)-SPV(I,2)*SPV(4,3)                      M0020600
     *                          -SPV(I,3)*SPV(4,2)                      M0020700
     *                          -SPV(I,1)*SPV(4,5)                      M0020800
      SPV(I,6)=SPV(I,6)/SPV(4,1)-2.D0*SPV(I,3)*SPV(4,3)                 M0020900
     *                               -SPV(I,1)*SPV(4,6)                 M0021000
      IF(IMODE.EQ.3) GOTO 72                                            M0021100
      SPV(I, 9)=SPV(I, 9)/SPV(4,1)-3.D0*SPV(I, 4)*SPV(4, 2)             M0021200
     *                            -3.D0*SPV(I, 2)*SPV(4, 4)             M0021300
     *                                 -SPV(I, 1)*SPV(4, 9)             M0021400
      SPV(I,10)=SPV(I,10)/SPV(4,1)-2.D0*SPV(I, 5)*SPV(4, 2)             M0021500
     *                                 -SPV(I, 4)*SPV(4, 3)             M0021600
     *                                 -SPV(I, 3)*SPV(4, 4)             M0021700
     *                            -2.D0*SPV(I, 2)*SPV(4, 5)             M0021800
     *                                 -SPV(I, 1)*SPV(4,10)             M0021900
      SPV(I,11)=SPV(I,11)/SPV(4,1)     -SPV(I, 6)*SPV(4, 2)             M0022000
     *                            -2.D0*SPV(I, 5)*SPV(4, 3)             M0022100
     *                            -2.D0*SPV(I, 3)*SPV(4, 5)             M0022200
     *                                 -SPV(I, 2)*SPV(4, 6)             M0022300
     *                                 -SPV(I, 1)*SPV(4,11)             M0022400
      SPV(I,12)=SPV(I,12)/SPV(4,1)-3.D0*SPV(I, 6)*SPV(4, 3)             M0022500
     *                            -3.D0*SPV(I, 3)*SPV(4, 6)             M0022600
     *                                 -SPV(I, 1)*SPV(4,12)             M0022700
   72 CONTINUE                                                          M0022800
C                                                                       M0022900
C  TRANSFORMATION NECESSARY ?                                           M0023000
      IF(DATA(18).EQ.0.D0) GOTO 80                                      M0023100
      DO 76 I=1,NRES                                                    M0023200
      IF(I.EQ.7)GOTO 76                                                 M0023300
      IF(I.EQ.8)GOTO 76                                                 M0023400
      DO 74 J=1,3                                                       M0023500
   74 HI(J)=SPV(J,I)                                                    M0023600
      DO 75 J=1,3                                                       M0023700
   75 SPV(J,I)=DATA(4*J+15)*HI(1)+DATA(4*J+16)*HI(2)+DATA(4*J+17)*HI(3) M0023800
   76 CONTINUE                                                          M0023900
C                                                                       M0024000
C  TRANSLATION OF SURFACE POINT COORDINATES                             M0024100
   77 DO 78 I=1,3                                                       M0024200
   78 SPV(I,1)=SPV(I,1)+DATA(4*I+18)                                    M0024300
C                                                                       M0024400
C  SURFACE NORMAL NECESSARY ?                                           M0024500
   80 IF(IMODE.LT.2) GOTO 89                                            M0024600
C                                                                       M0024700
C  SURFACE NORMAL                                                       M0024800
      SPV(1,7)=SPV(2,2)*SPV(3,3)-SPV(3,2)*SPV(2,3)                      M0024900
      SPV(2,7)=SPV(3,2)*SPV(1,3)-SPV(1,2)*SPV(3,3)                      M0025000
      SPV(3,7)=SPV(1,2)*SPV(2,3)-SPV(2,2)*SPV(1,3)                      M0025100
C                                                                       M0025200
C  NORMALIZING OF SURFACE NORMAL                                        M0025300
      QQ=DSQRT(SPV(1,7)*SPV(1,7)+SPV(2,7)*SPV(2,7)+SPV(3,7)*SPV(3,7))   M0025400
      IF(QQ.LT.1.D-12)GOTO 89                                           M0025500
      SPV(1,8)=SPV(1,7)/QQ                                              M0025600
      SPV(2,8)=SPV(2,7)/QQ                                              M0025700
      SPV(3,8)=SPV(3,7)/QQ                                              M0025800
      SPV(4,7)=1.D0                                                     M0025900
      SPV(4,8)=1.D0                                                     M0026000
C                                                                       M0026100
C  SET THE COMPUTATION SIGNAL                                           M0026200
   89 DO 90 I=1,NRES                                                    M0026300
      IF(I.EQ.7)GOTO 90                                                 M0026400
      IF(I.EQ.8)GOTO 90                                                 M0026500
      SPV(4,I)=1.D0                                                     M0026600
   90 CONTINUE                                                          M0026700
      RETURN                                                            M0026800
      END                                                               M0026900
**** SOURCE FILE : M0008177.V01   ***
*
      SUBROUTINE KREUZ(V1,V2,V3)                                        M0000100
C                                                                       M0000200
C   COMPUTATION OF VECTOR CROSS PRODUCT                                 M0000300
C                                                                       M0000400
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0000500
      DOUBLE PRECISION V1(3),V2(3),V3(3)                                M0000600
C                                                                       M0000700
      V3(1)=(V1(2)*V2(3)-V1(3)*V2(2))                                   M0000800
      V3(2)=(V1(3)*V2(1)-V1(1)*V2(3))                                   M0000900
      V3(3)=(V1(1)*V2(2)-V1(2)*V2(1))                                   M0001000
C                                                                       M0001100
      RETURN                                                            M0001200
      END                                                               M0001300
**** SOURCE FILE : M0008176.V01   ***
*
      SUBROUTINE KRUMM(SPV,E,F,G,XL,XM,XN,HKR,RK1,RK2)                  M0000100
C                                                                       M0000200
C SUBROUTINE FOR THE OUTPUT OF THE CURVING OF PATCHES                   M0000300
C                                                                       M0000400
C  SPV :   SURFACE POINTS AND DERIVATIVES                               M0000500
C  E   :   COEFFICIENTS OF FIRST AND SECOND GAUSSIAN FUNDAMENTAL FORM   M0000600
C  F   :                                                                M0000700
C  G   :                                                                M0000800
C  XL  :                                                                M0000900
C  XM  :                                                                M0001000
C  XN  :                                                                M0001100
C  HKR :   MAIN CURVATURE DIRECTION                                     M0001200
C  RK1 :   1.CURVATURE                                                  M0001300
C  RK2 :   2.CURVATURE                                                  M0001400
C                                                                       M0001500
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0001600
      DOUBLE PRECISION SPV(4,8),HKR(3)                                  M0001700
C  HELP STORAGE                                                         M0001800
      DOUBLE PRECISION VT(3),VT2(3)                                     M0001900
C                                                                       M0002000
C  COMPUTATION OF THE FUNDAMENTAL COEFFICIENTS                          M0002100
      E=0.D0                                                            M0002200
      F=0.D0                                                            M0002300
      G=0.D0                                                            M0002400
      XL=0.D0                                                           M0002500
      XN=0.D0                                                           M0002600
      XM=0.D0                                                           M0002700
      DO 7002 I=1,3                                                     M0002800
      SUPI=SPV(I,2)                                                     M0002900
      SVPI=SPV(I,3)                                                     M0003000
      E=SUPI*SUPI+E                                                     M0003100
      F=SUPI*SVPI+F                                                     M0003200
      G=SVPI*SVPI+G                                                     M0003300
      XNORM=SPV(I,8)                                                    M0003400
      XL=SPV(I,4)*XNORM+XL                                              M0003500
      XM=SPV(I,5)*XNORM+XM                                              M0003600
      XN=SPV(I,6)*XNORM+XN                                              M0003700
 7002 CONTINUE                                                          M0003800
C   THE LENGTH OF THE NORMAL                                            M0003900
      XNL=DSQRT(E*G-F*F)+1.D-12                                         M0004000
C   COMPUTATION OF ONE MAIN CURVATURE DIRECTION                         M0004100
C   A=G*M-F*N                                                           M0004200
      A=G*XM-F*XN                                                       M0004300
C   B=G*L-E*N                                                           M0004400
      B=G*XL-E*XN                                                       M0004500
C   C=F*L-E*M                                                           M0004600
      C=F*XL-E*XM                                                       M0004700
      T1=B*B-4.D0*A*C                                                   M0004800
      T2=DSQRT(T1)                                                      M0004900
      T3=E*B-2.D0*F*C                                                   M0005000
      IF(T3.LT.0.D0)T2=-T2                                              M0005100
      T4=DSQRT(2.D0*E*E*T1+2.D0*E*T3*T2)                                M0005200
      IF(DABS(T4).GT.0.D-20) GOTO 7060                                  M0005300
C   NO MAIN DIRECTION GIVEN                                             M0005400
      SINALF=0.D0                                                       M0005500
      COSALF=1.D0                                                       M0005600
      GOTO 7070                                                         M0005700
 7060 SINALF=(T3+E*T2)/T4                                               M0005800
      COSALF=(2.D0*C*XNL)/T4                                            M0005900
 7070 WE=DSQRT(E)                                                       M0006000
      DO 7300 I=1,3                                                     M0006100
C  U-TANGENT                                                            M0006200
 7300 VT(I)=SPV(I,2)/WE                                                 M0006300
C  VECTOR, PERPENTICULAR TO U-TANGENT                                   M0006400
      CALL KREUZ(SPV(1,8),VT,VT2)                                       M0006500
C   DIRECTION OF 1. MAIN CURVATURE                                      M0006600
      DO 7310 I=1,3                                                     M0006700
 7310 HKR(I)=COSALF*VT(I)+SINALF*VT2(I)                                 M0006800
C  COMPUTATION OF 1.CURVATURE:                                          M0006900
      DV=E*SINALF                                                       M0007000
      DU= XNL*COSALF-F*SINALF                                           M0007100
      RK1=(XL*DU*DU+2.D0*XM*DU*DV+XN*DV*DV)/                            M0007200
     *        (E*DU*DU+2.D0*F*DU*DV+G*DV*DV)                            M0007300
C  COMPUTATION OF 2.CURVATURE:                                          M0007400
      DV=E*COSALF                                                       M0007500
      DU=-XNL*SINALF-F*COSALF                                           M0007600
      RK2=(XL*DU*DU+2.D0*XM*DU*DV+XN*DV*DV)/                            M0007700
     *        (E*DU*DU+2.D0*F*DU*DV+G*DV*DV)                            M0007800
C                                                                       M0007900
      RETURN                                                            M0008000
      END                                                               M0008100
**** SOURCE FILE : M0008178.V02   ***
*
      SUBROUTINE TMDCS(TRM,DATA)                                        M0000100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               M0000200
C PROGRAM TO TRANSFORM THE PATCH GEOMETRY                               M0000300
C  OF "MASTER DIMENSION CONTOUR SURFACE"                                M0000400
C                                                                       M0000500
C   TRANSFORMATION MATRIX                                               M0000600
      DOUBLE PRECISION TRM(12)                                          M0000700
C   PATCH DATA                                                          M0000800
      DIMENSION DATA(120)                                               M0000900
C   AUXILIARY MATRIX                                                    M0001000
      DOUBLE PRECISION TRM1(12)                                         M0001100
C   'NO TRANSFORMATION' MATRIX                                          M0001200
      DOUBLE PRECISION NTRM(12)                                         M0001300
C   SCALE FACTOR                                                        M0001400
      DOUBLE PRECISION SCALE,SCALES                                     M0001500
C                                                                       M0001540
      DATA NTRM/1.D0,4*0.D0,1.D0,4*0.D0,1.D0,0.D0/                      M0001550
C                                                                       M0001600
C   TEST PRINT                                                          M0001700
C     WRITE(6,100)                                                      M0001800
C 100 FORMAT('0TMDCSSSS WAS CALLED')                                    M0001900
C    PRESET OF SCALE FACTOR                                             M0002000
      SCALE=1.D0                                                        M0002100
C    SQUARED SCALE FACTOR                                               M0002200
      SCALES=TRM(1)**2+TRM(2)**2+TRM(3)**2                              M0002300
C    COMPUTATION OF SCALE FACTOR                                        M0002400
      IF(DABS(SCALES-1.D0).GE.1.D-10)SCALE=DSQRT(SCALES)                M0002500
C    TEST IF ALL SCALE FACTORS EQUAL                                    M0002600
      IF(DABS(TRM( 5)**2+TRM( 6)**2+TRM( 7)**2-SCALES).LT.1.D-10.AND.   M0002700
     *   DABS(TRM( 9)**2+TRM(10)**2+TRM(11)**2-SCALES).LT.1.D-10)       M0002800
     *GOTO 1                                                            M0002900
C    NO TRANSFORMATION AND ERROR MESSAGE                                M0003000
      CALL ERROR(97,'TMDCSSSS')                                         M0003100
      GOTO 99                                                           M0003200
C    MOVE OLD MATRIX TO SCATCH AREA                                     M0003300
    1 DO 2 I=1,12                                                       M0003400
    2 TRM1(I)=DATA(I+18)                                                M0003500
C    COMPUTE NEW TRANSFORMATION MATRIX                                  M0003600
      CALL APT066(DATA(19),TRM,TRM1,0)                                  M0003700
C    PRESET SCALE FACTOR OF MATRIX                                      M0003800
      DATA(18)=SCALE                                                    M0003900
C    CHECK THE RESULT MATRIX FOR 'NO TRANSFORMATION'                    M0004000
      DO 3 I=1,12                                                       M0004100
      IF(DABS(DATA(I+18)-NTRM(I)).GE.1.D-10)GOTO 99                     M0004200
    3 CONTINUE                                                          M0004300
C    SWITCH OFF TRANSFORMATION                                          M0004400
      DATA(18)=0.D0                                                     M0004500
   99 RETURN                                                            M0004600
      END                                                               M0004700
**** SOURCE FILE : ETORUS.ORG   ***
*
      SUBROUTINE ETORUS(U,V,GEO,RESULT,MODE)                            00000100
      DOUBLE PRECISION U,V,UA,VA,SU,SV,CU,CV,RP,TOT                     00000200
      DOUBLE PRECISION GEO(15),RESULT(4,8),AP(3),SN(3)                  00000300
      INTEGER MODE                                                      00000400
C PARAMETRIC EVALUATOR FOR TORUS.                                       00000500
C TORUS PATCH CANONICAL DATA IS IN GEO(15)                              00000510
C  GEO(1)-GEO(3) = AXIS OF TORUS                                        00000520
C  GEO(4)-GEO(6) = CENTRE OF TORUS                                      00000530
C  GEO(7)-GEO(9) = REF. AXIS (I.E. DEFINES U=0,V=0)                     00000540
C  GEO(10)       = MAJOR RADIUS R1                                      00000550
C  GEO(11)       = MINOR RADIUS R2                                      00000560
C  GEO(12)       = UMIN (IN RADIANS)                                    00000570
C  GEO(13)       = UMAX (IN RADIANS)                                    00000580
C  GEO(14)       = VMIN (IN RADIANS)                                    00000590
C  GEO(15)       = VMAX (IN RADIANS)                                    00000595
C RESULT RETURNS IN HOMOGENEOUS COORDINATES POINT, FIRST DERIVATIVES,   00000600
C 2ND DERIVATIVES, NORMAL AND UNIT NORMAL AT (U,V)                      00000700
      UA=U*(GEO(13)-GEO(12)) + GEO(12)                                  00000800
      VA=V*(GEO(15)-GEO(14)) + GEO(14)                                  00000900
      SU=SIN(UA)                                                        00001000
      SV=SIN(VA)                                                        00001100
      CU=COS(UA)                                                        00001200
      CV=COS(VA)                                                        00001300
      R1=GEO(10)                                                        00001400
      R2=GEO(11)                                                        00001500
C AP IS THIRD ORTHOGONAL AXIS P*A                                       00001600
      AP(1)=-GEO(2)*GEO(9)+GEO(3)*GEO(8)                                00001700
      AP(2)=-GEO(3)*GEO(7)+GEO(1)*GEO(9)                                00001800
      AP(3)=-GEO(1)*GEO(8)+GEO(2)*GEO(7)                                00001900
      RP=R1+R2*CU                                                       00002000
      DO 10 I=1,3                                                       00002100
       RESULT(I,1)=GEO(I+3)+R2*SU*GEO(I)+CV*RP*GEO(I+6)+SV*RP*AP(I)     00002200
  10  CONTINUE                                                          00002300
      RESULT(4,1)=1.0                                                   00002400
C POINT EVALUATED, NOW FIND DERIVATIVES RU,RV                           00002500
      DO 20 I=1,3                                                       00002600
       RESULT(I,2)=R2*CU*GEO(I)-R2*CV*SU*GEO(I+6)-R2*SV*SU*AP(I)        00002700
       RESULT(I,3)=-RP*SV*GEO(I+6)+CV*RP*AP(I)                          00002800
  20  CONTINUE                                                          00002900
C FIND 2ND DERIVATIVES RUU, RUV AND RVV                                 00003000
      DO 30 I=1,3                                                       00003100
       RESULT(I,4)=-R2*SU*GEO(I)-R2*CU*(CV*GEO(I+6)+SV*AP(I))           00003200
       RESULT(I,5)=R2*SU*(SV*GEO(I+6)-CV*AP(I))                         00003300
       RESULT(I,6)=-RP*(CV*GEO(I+6)+SV*AP(I))                           00003400
  30  CONTINUE                                                          00003500
C EVALUATE SURFACE NORMAL SN                                            00003600
      SN(1)=RESULT(2,2)*RESULT(3,3)-RESULT(3,2)*RESULT(2,3)             00003700
      SN(2)=RESULT(3,2)*RESULT(1,3)-RESULT(1,2)*RESULT(3,3)             00003800
      SN(3)=RESULT(1,2)*RESULT(2,3)-RESULT(2,2)*RESULT(1,3)             00003900
      TOT=0.0                                                           00004000
      DO 40 I=1,3                                                       00004100
       RESULT(I,7)=SN(I)                                                00004200
       TOT=TOT+SN(I)*SN(I)                                              00004300
  40  CONTINUE                                                          00004400
      TOT=DSQRT(TOT)                                                    00004500
      IF(TOT.LE.1.0E-8) GO TO 55                                        00004600
      DO 50 I=1,3                                                       00004700
       RESULT(I,8)=SN(I)/TOT                                            00004800
  50  CONTINUE                                                          00004900
C SET W COMPONENT OF ALL VECTOR QUANTITIES TO 0.0 (?)                   00005000
  55  DO 60 I=2,8                                                       00005100
       RESULT(4,I)=0.0                                                  00005200
  60  CONTINUE                                                          00005300
      RETURN                                                            00005400
      END                                                               00005500
**** SOURCE FILE : TTORUS.ORG   ***
*
      SUBROUTINE TTORUS(TRM,DATA)                                       00000100
C                                                                       00000200
C.... TRANSFORMATOR FOR NON-NATIVE TORUS                                00000300
C                                                                       00000400
      DOUBLE PRECISION TRM(4,3),DATA(15),A(3)                           00000500
C                                                                       00000600
C.... AXIS, CENTER AND REF AXIS FOR TORUS REQUIRE ROTATION              00000700
C                                                                       00000800
      DO 10 I=1,7,3                                                     00000900
       A(1)=TRM(1,1)*DATA(I)+TRM(2,1)*DATA(I+1)+TRM(3,1)*DATA(I+2)      00001000
       A(2)=TRM(1,2)*DATA(I)+TRM(2,2)*DATA(I+1)+TRM(3,2)*DATA(I+2)      00001100
       A(3)=TRM(1,3)*DATA(I)+TRM(2,3)*DATA(I+1)+TRM(3,3)*DATA(I+2)      00001200
       DATA(I)=A(1)                                                     00001300
       DATA(I+1)=A(2)                                                   00001400
       DATA(I+2)=A(3)                                                   00001500
  10  CONTINUE                                                          00001600
C                                                                       00001700
C.... CENTER ALSO NEEDS TRANSLATION                                     00001800
C                                                                       00001900
      DATA(4)=DATA(4)+TRM(4,1)                                          00002000
      DATA(5)=DATA(5)+TRM(4,2)                                          00002100
      DATA(6)=DATA(6)+TRM(4,3)                                          00002200
C                                                                       00002300
      RETURN                                                            00002400
      END                                                               00002500
                                                                        00002600
**** SOURCE FILE : EVDAFS.ORG   ***
*
      SUBROUTINE EVDAFS(U,V,GEO,RESULT,MODE)                            00000100
C THIS SUBROUTINE EVALUATES POINT COORDINATES AND DERIVATIVES ON        00000200
C A PATCH OF A VDAFS DEFINED SURFACE. SUBROUTINE BIPROD IS CALLED       00000300
C FOR BASIC BILINEAR MATRIX PRODUCT EVALUATION.                         00000400
C SUBROUTINE CVDAFS ORGANISES ENTIRE COMPUTATION EVDAFS CHECKS INPUT DAT00000500
      DOUBLE PRECISION U,V,RESULT(4,8),GEO(*),AX(625),AY(625),AZ(625)   00000600
      DOUBLE PRECISION CU(25),CV(25)                                    00000700
      INTEGER MODE,MU,MV                                                00000800
      MU=INT(GEO(1))                                                    00000900
      MV=INT(GEO(2))                                                    00001000
      N=MU*MV                                                           00001100
      IF(MU.GT.25.OR.MV.GT.25) THEN                                     00001200
         PRINT*,' DEGREE U OR DEGREE V TOO LARGE FOR ARRAY DIMENSIONS'  00001300
         RETURN                                                         00001400
      ENDIF                                                             00001500
      CALL CVDAFS(U,V,GEO,RESULT,MODE,MU,MV,N,AX,AY,AZ,CU,CV)           00001600
      RETURN                                                            00001700
      END                                                               00001800
                                                                        00001900
      SUBROUTINE CVDAFS(U,V,GEO,RESULT,MODE,MU,MV,N,AX,AY,AZ,CU,CV)     00002000
C THIS SUBROUTINE PERFORMS ALL BASIC EVALUATION COMPUTATIONS ON VDA SURF00002100
      DOUBLE PRECISION U,V,X,Y,Z,RES(3),AX(N),AY(N),AZ(N),CU(MU)        00002200
      DOUBLE PRECISION CV(MV),GEO(*),RESULT(4,8)                        00002300
      INTEGER MU,MV,N,I,J                                               00002400
C MU=DEGREE+1 IN U, MV=DEGREE+1 IN V FOR THIS PATCH, COEFF MAT IS MU*MV.00002500
C     N=MU*MV                                                           00002600
C SET UP COEFFICIENT MATRICES.                                          00002700
      DO 10 I=1,N                                                       00002800
      AX(I)=GEO(I+2)                                                    00002900
      AY(I)=GEO(I+2+N)                                                  00003000
 10   AZ(I)=GEO(I+2+2*N)                                                00003100
C INITIALISE RESULT ARRAY USED TO RETURN POINT ADD DERIVATIVE DATA.     00003200
      DO 15 I=1,4                                                       00003300
      DO 15 J=1,8                                                       00003400
  15  RESULT(I,J)=0.0                                                   00003500
      DO 20 I=1,MU                                                      00003600
 20   CU(I)=1.0                                                         00003700
      DO 30 I=1,MV                                                      00003800
 30   CV(I)=1.0                                                         00003900
C EVALUATE POINT COORDINATES                                            00004000
      CALL BIPROD(AX,MU,MV,CU,CV,U,V,X)                                 00004100
      CALL BIPROD(AY,MU,MV,CU,CV,U,V,Y)                                 00004200
      CALL BIPROD(AZ,MU,MV,CU,CV,U,V,Z)                                 00004300
      RESULT(1,1)=X                                                     00004400
      RESULT(2,1)=Y                                                     00004500
      RESULT(3,1)=Z                                                     00004600
      RESULT(4,1)=1.0                                                   00004700
      IF(MODE.EQ.0) RETURN                                              00004800
C MODE=0 INDICATES THAT ONLY POINT COORDINATES ARE REQUIRED.            00004900
C EVALUATE FIRST DERIVATIVES, STORE IN COLS 2 AND 3 OF RESULT.          00005000
      DO 40 I=2,MU                                                      00005100
 40   CU(I)=I-1.0                                                       00005200
      CU(1)=0.0                                                         00005300
      CALL BIPROD(AX,MU,MV,CU,CV,U,V,RES(1))                            00005400
      CALL BIPROD(AY,MU,MV,CU,CV,U,V,RES(2))                            00005500
      CALL BIPROD(AZ,MU,MV,CU,CV,U,V,RES(3))                            00005600
      DO 50 I=1,3                                                       00005700
 50   RESULT(I,2)=RES(I)                                                00005800
      DO 60 I=1,MU                                                      00005900
 60   CU(I)=1.0                                                         00006000
      DO 70 I=2,MV                                                      00006100
 70   CV(I)=I-1.0                                                       00006200
      CV(1)=0.0                                                         00006300
      CALL BIPROD(AX,MU,MV,CU,CV,U,V,RES(1))                            00006400
      CALL BIPROD(AY,MU,MV,CU,CV,U,V,RES(2))                            00006500
      CALL BIPROD(AZ,MU,MV,CU,CV,U,V,RES(3))                            00006600
      DO 80 I=1,3                                                       00006700
 80   RESULT(I,3)=RES(I)                                                00006800
C EVALUATE MIXED DERIVATIVE (TWIST VECTOR), COL 5 OF RESULT.            00006900
      DO 90 I=2,MU                                                      00007000
 90   CU(I)=I-1.0                                                       00007100
      CU(1)=0.0                                                         00007200
      CALL BIPROD(AX,MU,MV,CU,CV,U,V,RES(1))                            00007300
      CALL BIPROD(AY,MU,MV,CU,CV,U,V,RES(2))                            00007400
      CALL BIPROD(AZ,MU,MV,CU,CV,U,V,RES(3))                            00007500
      DO 95 I=1,3                                                       00007600
 95   RESULT(I,5)=RES(I)                                                00007700
      IF(MU.LE.2) GO TO 135                                             00007800
C 2ND DERIVATIVE ZERO IF U DEGREE=1                                     00007900
C EVALUATE 2ND DERIVATIVES, STORE IN COLS 4,6 OF RESULT.                00008000
      DO 110 I=3,MU                                                     00008100
 110  CU(I)=CU(I)*(I-2.0)                                               00008200
      CU(2)=0.0                                                         00008300
      DO 120 I=1,MV                                                     00008400
 120  CV(I)=1.0                                                         00008500
      CALL BIPROD(AX,MU,MV,CU,CV,U,V,RES(1))                            00008600
      CALL BIPROD(AY,MU,MV,CU,CV,U,V,RES(2))                            00008700
      CALL BIPROD(AZ,MU,MV,CU,CV,U,V,RES(3))                            00008800
      DO 130 I=1,3                                                      00008900
 130  RESULT(I,4)=RES(I)                                                00009000
 135  CONTINUE                                                          00009100
      IF(MV.LE.2) GO TO 165                                             00009200
      DO 140 I=1,MU                                                     00009300
 140  CU(I)=1.0                                                         00009400
      DO 150 I=3,MV                                                     00009500
 150  CV(I)=(I-1.0)*(I-2.0)                                             00009600
      CV(2)=0.0                                                         00009700
      CV(1)=0.0                                                         00009800
      CALL BIPROD(AX,MU,MV,CU,CV,U,V,RES(1))                            00009900
      CALL BIPROD(AY,MU,MV,CU,CV,U,V,RES(2))                            00010000
      CALL BIPROD(AZ,MU,MV,CU,CV,U,V,RES(3))                            00010100
      DO 160 I=1,3                                                      00010200
 160  RESULT(I,6)=RES(I)                                                00010300
 165  CONTINUE                                                          00010400
C COMPUTE NORMAL AND UNIT NORMAL, STORE IN COLS 7,8 OF RESULT.          00010500
      RESULT(1,7)=RESULT(2,2)*RESULT(3,3)-RESULT(3,2)*RESULT(2,3)       00010600
      RESULT(2,7)=RESULT(3,2)*RESULT(1,3)-RESULT(1,2)*RESULT(3,3)       00010700
      RESULT(3,7)=RESULT(1,2)*RESULT(2,3)-RESULT(2,2)*RESULT(1,3)       00010800
      X=0.0                                                             00010900
      DO 170 I=1,3                                                      00011000
 170  X=X+RESULT(I,7)*RESULT(I,7)                                       00011100
      X=DSQRT(X)                                                        00011200
      IF(X.LT.1.0E-8) RETURN                                            00011300
C NORMAL VECTOR IS NOT WELL DEFINED IF X(VECTOR LENGTH) SMALL.          00011400
      DO 180 I=1,3                                                      00011500
 180  RESULT(I,8)=RESULT(I,7)/X                                         00011600
      RESULT(4,8)=1.0                                                   00011700
C RESULT(4,8)=1 INDICATES A WELL DEFINED UNIT NORMAL IN COL 8.          00011800
      RETURN                                                            00011900
      END                                                               00012000
                                                                        00012100
                                                                        00012200
      SUBROUTINE BIPROD(A,MU,MV,CU,CV,U,V,RES)                          00012300
C SUBROUTINE TO EVALUATE BILINEAR PRODUCT (PU)'A(PV), WHERE PU, PV ARE  00012400
C POWER SERIES WITH COEFFICIENTS CU,CV; LEADIONG 0.0 COEFFICIENTS INDICA00012500
C DERIVATIVE TERMS OF LOWER DEGREE. FINAL (SCALAR) PRODUCT IS RETURNED A00012600
      DOUBLE PRECISION A(MU,MV),CU(MU),CV(MV),U,V,RES,SUM               00012700
      INTEGER I,J,MU,MV                                                 00012800
      RES=0.0                                                           00012900
      DO 20 I=MU,1,-1                                                   00013000
      IF(CU(I).LE.0.0) GO TO 30                                         00013100
      SUM=0.0                                                           00013200
      DO 10 J=MV,1,-1                                                   00013300
      IF(CV(J).LE.0.0) GO TO 15                                         00013400
  10  SUM=SUM*V+CV(J)*A(I,J)                                            00013500
  15  CONTINUE                                                          00013600
  20  RES=RES*U+SUM*CU(I)                                               00013700
  30  CONTINUE                                                          00013800
C RES NOW CONTAINS THE EVALUATED PRODUCT (PU)'A(PV) AT PARAMETRIC POINT 00013900
C THIS WILL CORRESPOND TO A POINT COORDINATE OR A DERIVATIVE VECTOR COMP00014000
      RETURN                                                            00014100
      END                                                               00014200
**** SOURCE FILE : TVDAFS.ORG   ***
*
      SUBROUTINE TVDAFS(TRM,GEO)                                        00000100
C TRANSFORMATOR ROUTINE FOR VDAFS SURFACE PATCH USING                   00000200
C APT TRANSFORMATION MATRIX TRM                                         00000300
      DOUBLE PRECISION TRM(4,3),GEO(*),A(3)                             00000400
      MU=INT(GEO(1))                                                    00000500
      MV=INT(GEO(2))                                                    00000600
      N=MU*MV                                                           00000700
C 1ST 2 LOCATIONS OF GEO CONTAIN DIMENSIONS OF ARRAYS AX,AY,AZ OF COEFFI00000800
C THESE COEFFICIENT MATRICES FOLLOW IN CONSECUTIVE LOCATIONS IN GEO.    00000900
C ALL COEFFICIENT VECTORS MUST BE ROTATED.                              00001000
      DO 10 I=1,N                                                       00001100
      IX=2+I                                                            00001200
      IY=IX+N                                                           00001300
      IZ=IY+N                                                           00001400
      DO 5 J=1,3                                                        00001500
  5   A(J)=TRM(1,J)*GEO(IX)+TRM(2,J)*GEO(IY)+TRM(3,J)*GEO(IZ)           00001600
      GEO(IX)=A(1)                                                      00001700
      GEO(IY)=A(2)                                                      00001800
      GEO(IZ)=A(3)                                                      00001900
 10   CONTINUE                                                          00002000
C (0,0) COEFFICIENT IN EACH ARRAY IS ALSO TRANSLATED                    00002100
      GEO(3)=GEO(3)+TRM(4,1)                                            00002200
      GEO(3+N)=GEO(3+N)+TRM(4,2)                                        00002300
      GEO(3+2*N)=GEO(3+2*N)+TRM(4,3)                                    00002400
      RETURN                                                            00002500
      END                                                               00002600
**** MODULE = APTFUN ****
**** SOURCE FILE : UTILTY00.ORG   ***
*
*                                                                       00000100
*                                                                       00000200
*  * UTILTY PACKAGE *  VAX11 VERSION  6.6.85  E.MCLELLAN                00000300
*                                                                       00000400
*                                                                       00000500
*  * ABSF *                                                             00000600
*                                                                       00000700
*                                                                       00000800
      SUBROUTINE ABSF(RES,ARG)                                          00000900
C                                                                       00001000
      DOUBLE PRECISION RES,ARG                                          00001100
C                                                                       00001200
      RES=DABS(ARG)                                                     00001300
      RETURN                                                            00001400
      END                                                               00001500
*                                                                       00001600
*  * ATANF *                                                            00001700
*                                                                       00001800
      SUBROUTINE ATANF(RES,ARG)                                         00001900
C                                                                       00002000
      DOUBLE PRECISION RES,ARG                                          00002100
C                                                                       00002200
      RES=DATAN(ARG)/0.0174532925                                       00002300
      RETURN                                                            00002400
      END                                                               00002500
*                                                                       00002600
*  * COSF *                                                             00002700
*                                                                       00002800
      SUBROUTINE COSF(RES,ARG)                                          00002900
C                                                                       00003000
      DOUBLE PRECISION RES,ARG                                          00003100
C                                                                       00003200
      RES=DCOS(ARG*0.0174532925)                                        00003300
      RETURN                                                            00003400
      END                                                               00003500
*                                                                       00003600
*  * SINF *                                                             00003700
*                                                                       00003800
      SUBROUTINE SINF(RES,ARG)                                          00003900
C                                                                       00004000
      DOUBLE PRECISION RES,ARG                                          00004100
C                                                                       00004200
      RES=DSIN(ARG*0.0174532925)                                        00004300
      RETURN                                                            00004400
      END                                                               00004500
*                                                                       00004600
*  EXPF *                                                               00004700
*                                                                       00004800
      SUBROUTINE EXPF(RES,ARG)                                          00004900
C                                                                       00005000
      DOUBLE PRECISION RES,ARG                                          00005100
C                                                                       00005200
      RES=DEXP(ARG)                                                     00005300
      RETURN                                                            00005400
      END                                                               00005500
*                                                                       00005600
*  * SQRTF *                                                            00005700
*                                                                       00005800
      SUBROUTINE SQRTF(RES,ARG)                                         00005900
C                                                                       00006000
      DOUBLE PRECISION RES,ARG                                          00006100
C                                                                       00006200
      IF (ARG.LT.0.0D0) THEN                                            00006300
        CALL ERROR(20,'SQRTF   ')                                       00006400
        ARG=DABS(ARG)                                                   00006500
      END IF                                                            00006600
      RES=DSQRT(ARG)                                                    00006700
      RETURN                                                            00006800
      END                                                               00006900
*                                                                       00007000
*  * VNORM *                                                            00007100
*                                                                       00007200
*  PURPOSE    NORMALIZE A VECTOR   V3=NORM(VA)                          00007300
*                                                                       00007400
*  CALLING SEQUENCE                                                     00007500
*                                                                       00007600
*             CALL VNORM(VA,V3)                                         00007700
*                                                                       00007800
      SUBROUTINE VNORM(VA,V3)                                           00007900
C                                                                       00008000
      INCLUDE 'IFXCOR.INC'                                              00008100
C                                                                       00008200
      INCLUDE 'FXCOR.INC'                                               00008300
C                                                                       00008400
      DOUBLE PRECISION VA(3),V3(3)                                      00008500
C                                                                       00008600
      VTEM=DSQRT(VA(1)*VA(1)+VA(2)*VA(2)+VA(3)*VA(3))                   00008700
      IF (DABS(VTEM).LT.1.0E-24) THEN                                   00008800
        IER=1                                                           00008900
        DO 25 I=1,3                                                     00009000
          V3(I)=VA(I)                                                   00009100
   25   CONTINUE                                                        00009200
C                                                                       00009300
      ELSE                                                              00009400
        IER=0                                                           00009500
        DO 26 I=1,3                                                     00009600
          V3(I)=VA(I)/VTEM                                              00009700
   26   CONTINUE                                                        00009800
C                                                                       00009900
      END IF                                                            00010000
C                                                                       00010100
      RETURN                                                            00010200
      END                                                               00010300
*                                                                       00010400
*  * CROSS *                                                            00010500
*                                                                       00010600
*  PURPOSE    EVALUATE V3=V1 X V2                                       00010700
*                                                                       00010800
*  CALLING SEQUENCE                                                     00010900
*                                                                       00011000
*             CALL CROSS(V1,V2,V3)                                      00011100
*                                                                       00011200
      SUBROUTINE CROSS(V1,V2,V3)                                        00011300
C                                                                       00011400
      DOUBLE PRECISION V1(3),V2(3),V3(3),VT(3)                          00011500
C                                                                       00011600
      VT(1)=V1(2)*V2(3)-V1(3)*V2(2)                                     00011700
      VT(2)=V1(3)*V2(1)-V1(1)*V2(3)                                     00011800
      VT(3)=V1(1)*V2(2)-V1(2)*V2(1)                                     00011900
C                                                                       00012000
      DO 10 I=1,3                                                       00012100
      V3(I)=VT(I)                                                       00012200
  10  CONTINUE                                                          00012300
C                                                                       00012400
      RETURN                                                            00012500
      END                                                               00012600
*                                                                       00012700
*  * CROSSV *                                                           00012800
*                                                                       00012900
*  PURPOSE    EVALUATE CROSS PRODUCT AND NORMALIZE                      00013000
*                                                                       00013100
*  CALLING SEQUENCE                                                     00013200
*                                                                       00013300
*             CALL CROSSV(V1,V2,V3)                                     00013400
*                                                                       00013500
      SUBROUTINE CROSSV(V1,V2,V3)                                       00013600
C                                                                       00013700
      DOUBLE PRECISION V1(3),V2(3),V3(3),VT(3)                          00013800
C                                                                       00013900
      CALL CROSS(V1,V2,VT)                                              00014000
C                                                                       00014100
      CALL VNORM(VT,V3)                                                 00014200
C                                                                       00014300
      RETURN                                                            00014400
      END                                                               00014500
*                                                                       00014600
*                                                                       00014700
*  * DOTV *                                                             00014800
*                                                                       00014900
*  PURPOSE    EVALUATE DOT PRODUCT   RES=V1.V2                          00015000
*                                                                       00015100
*  CALLING SEQUENCE                                                     00015200
*                                                                       00015300
*             CALL DOTV(RES,V1,V2)                                      00015400
*                                                                       00015500
      SUBROUTINE DOTV(RES,V1,V2)                                        00015600
C                                                                       00015700
      DOUBLE PRECISION RES,V1(3),V2(3)                                  00015800
C                                                                       00015900
      RES=V1(1)*V2(1)+V1(2)*V2(2)+V1(3)*V2(3)                           00016000
C                                                                       00016100
      RETURN                                                            00016200
      END                                                               00016300
**** SOURCE FILE : M0002914.V03   ***
*
C.....FORTRAN SUBROUTINE              ANGLF/ANBLB          18.10.78 EC  00000010
C                                                                       00000020
C              FORTRAN SUBROUTINE ANGLF                                 00000030
C PURPOSE      TO COMPUTE THE ANGLE BETWEEN THE POSITIVE X-AXIS AND A   00000040
C              VECTOR FROM THE CENTER OF A CIRCLE TO A GIVEN POINT      00000050
C                                                                       00000060
C LINKAGE      CALL ANGLF(RES,ARG1,ARG2)                                00000070
C                                                                       00000080
C ARGUMENTS    RES     ARRAY TO CONTAIN RESULT                          00000090
C              ARG1    ARRAY CONTAINING THE CANONICAL FORM              00000100
C                      OF THE INPUT                                     00000110
C              ARG2    ARRAY CONTAINING THE CANONICAL FORM              00000120
C                      OF THE INPUT                                     00000130
C                                                                       00000140
C SUBSIDIARIES TYPE                ENTRY                                00000150
C              LOGICAL FUNCTION    CKDEF                                00000160
C              SUBROUTINE          UNPACK                               00000170
C              REAL FUNCTION       DATAN2                               00000180
C              REAL FUNCTION       DARCOS                               00000190
C              REAL FUNCTION       DSQRT                                00000200
C              REAL FUNCTION       DABS                                 00000210
C              REAL FUNCTION       DMIN1                                00000220
C              REAL FUNCTION       DMAX1                                00000230
C              SUBROUTINE          ERROR                                00000240
C              SUBROUTINE          UNDEF                                00000250
C              SUBROUTINE          TRANSF                               00000260
C                                                                       00000270
      SUBROUTINE ANGLF(RES,ARG1,ARG2)                                   00000280
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00000290
      DIMENSION ARG1(1),ARG2(1),SR(2),A1(12),A2(12),RES(1)              00000300
      LOGICAL CKDEF                                                     00000310
      INTEGER IR(20),IW(20)                                             00000312
      DOUBLE PRECISION FACT                                             00000314
C SCHALTANGABE FUER TRANSFORMATIONSROUTINE TRANSF                       00000320
      DATA IR/4,4,5,5,2,1,1,1,5,1,0,0,0,1,0,0,0,0,2,3/                  00000330
C SCHALTZIFFERN FUER ANGLF-AUFGABENERKENNUNG                            00000340
      DATA IW/1,1,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,0,2,1/                  00000350
      DATA FACT/.0174532925D0/                                          00000360
C                                                                       00000370
C                                                                       00000430
    1 IF(CKDEF(ARG1).OR.CKDEF(ARG2))GO TO 30                            00000440
      CALL UNPACK(ARG1,MODE1,ISIZE1,ISUB1)                              00000450
      IF(MODE1.LE.0.OR.MODE1.GT.20.OR.IR(MODE1).EQ.0)GOTO 30            00000460
      CALL UNPACK(ARG2,MODE2,ISIZE2,ISUB2)                              00000470
      IF(MODE2.LE.0.OR.MODE2.GT.20.OR.IR(MODE2).EQ.0)GOTO 30            00000480
      IWW=IW(MODE1)*IW(MODE2)                                           00000490
      GOTO (10,9,9,20),IWW                                              00000500
    9 GOTO 30                                                           00000510
C   WINKEL ZWISCHEN VEKTOREN (AUCH EBENEN-NORMALEN)                     00000520
   10 B1=0.D0                                                           00000530
      B2=0.D0                                                           00000540
      B3=0.D0                                                           00000550
      DO 11 I=1,3                                                       00000560
      B1=ARG1(I)*ARG1(I)+B1                                             00000570
      B2=ARG2(I)*ARG2(I)+B2                                             00000580
   11 B3=ARG1(I)*ARG2(I)+B3                                             00000590
      IF(B1.LT.1.D-12.OR.B2.LT.1.D-12)GOTO 30                           00000600
      RES(1)=B3/DSQRT(B1)/DSQRT(B2)                                     00000610
      RES(1)=DMAX1(-1.D0,RES(1))                                        00000620
      RES(1)=DMIN1( 1.D0,RES(1))                                        00000630
      RES(1)=DARCOS(RES(1))                                             00000640
      GOTO 25                                                           00000650
C    2-D-VERARBEITUNG,WINKEL ZUR POSITIVEN X-ACHSE                      00000660
   20 CALL TRANSF (A1,ARG1,IR(MODE1),ISIZE1,0)                          00000670
      CALL TRANSF (A2,ARG2,IR(MODE2),ISIZE2,0)                          00000680
      SR(1)=A2(1)-A1(1)                                                 00000690
      SR(2)=A2(2)-A1(2)                                                 00000700
      IF(DABS(SR(1))+DABS(SR(2)).LT.D-12)GOTO 30                        00000710
      RES(1)=DATAN2(SR(2),SR(1))                                        00000720
      IF(RES(1).LT.0.D0) RES(1)=RES(1)+6.283185306D0                    00000730
   25 RES(1)=RES(1)/FACT                                                00000740
      RETURN                                                            00000750
C  'MINDESTENS EINE EINGABE IST UNDEFINIERT ODER ERGEBNIS NICHT         00000760
C                                                   BERECHENBAR'        00000770
   30 CALL ERROR(80,'ANGLF   ')                                         00000780
      RES(1)=0.D0                                                       00000790
      RETURN                                                            00000800
      END                                                               00000810
C                                                                       00001020
C              FORTRAN SUBROUTINE ANGLB                                 00001030
C PURPOSE      TO COMPUTE THE ANGLE BETWEEN THE POSITIVE X-AXIS AND A   00001040
C              VECTOR FROM THE CENTER OF A CIRCLE TO A GIVEN POINT      00001050
C                                                                       00001060
C LINKAGE      CALL ANGLB(RES,ARG1,ARG2)                                00001070
C                                                                       00001080
C ARGUMENTS    RES     ARRAY TO CONTAIN RESULT                          00001090
C              ARG1    ARRAY CONTAINING THE CANONICAL FORM              00001100
C                      OF THE INPUT                                     00001110
C              ARG2    ARRAY CONTAINING THE CANONICAL FORM              00001120
C                      OF THE INPUT                                     00001130
C                                                                       00001140
C SUBSIDIARIES TYPE                ENTRY                                00001150
C              LOGICAL FUNCTION    CKDEF                                00001160
C              SUBROUTINE          UNPACK                               00001170
C              REAL FUNCTION       DATAN2                               00001180
C              REAL FUNCTION       DARCOS                               00001190
C              REAL FUNCTION       DSQRT                                00001200
C              REAL FUNCTION       DABS                                 00001210
C              REAL FUNCTION       DMIN1                                00001220
C              REAL FUNCTION       DMAX1                                00001230
C              SUBROUTINE          ERROR                                00001240
C              SUBROUTINE          UNDEF                                00001250
C              SUBROUTINE          TRANSF                               00001260
C                                                                       00001270
      SUBROUTINE ANGLB(RES,ARG1,ARG2)                                   00001280
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00001290
      DIMENSION ARG1(1),ARG2(1),SR(2),A1(12),A2(12),RES(1)              00001300
      LOGICAL CKDEF                                                     00001310
      INTEGER IR(20),IW(20)                                             00001312
C SCHALTANGABE FUER TRANSFORMATIONSROUTINE TRANSF                       00001320
      DATA IR/4,4,5,5,2,1,1,1,5,1,0,0,0,1,0,0,0,0,2,3/                  00001330
C SCHALTZIFFERN FUER ANGLB-AUFGABENERKENNUNG                            00001340
      DATA IW/1,1,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,0,2,1/                  00001350
C                                                                       00001370
C                                                                       00001430
    1 IF(CKDEF(ARG1).OR.CKDEF(ARG2))GO TO 30                            00001440
      CALL UNPACK(ARG1,MODE1,ISIZE1,ISUB1)                              00001450
      IF(MODE1.LE.0.OR.MODE1.GT.20.OR.IR(MODE1).EQ.0)GOTO 30            00001460
      CALL UNPACK(ARG2,MODE2,ISIZE2,ISUB2)                              00001470
      IF(MODE2.LE.0.OR.MODE2.GT.20.OR.IR(MODE2).EQ.0)GOTO 30            00001480
      IWW=IW(MODE1)*IW(MODE2)                                           00001490
      GOTO (10,9,9,20),IWW                                              00001500
    9 GOTO 30                                                           00001510
C   WINKEL ZWISCHEN VEKTOREN (AUCH EBENEN-NORMALEN)                     00001520
   10 B1=0.D0                                                           00001530
      B2=0.D0                                                           00001540
      B3=0.D0                                                           00001550
      DO 11 I=1,3                                                       00001560
      B1=ARG1(I)*ARG1(I)+B1                                             00001570
      B2=ARG2(I)*ARG2(I)+B2                                             00001580
   11 B3=ARG1(I)*ARG2(I)+B3                                             00001590
      IF(B1.LT.1.D-12.OR.B2.LT.1.D-12)GOTO 30                           00001600
      RES(1)=B3/DSQRT(B1)/DSQRT(B2)                                     00001610
      RES(1)=DMAX1(-1.D0,RES(1))                                        00001620
      RES(1)=DMIN1( 1.D0,RES(1))                                        00001630
      RES(1)=DARCOS(RES(1))                                             00001640
      GOTO 25                                                           00001650
C    2-D-VERARBEITUNG,WINKEL ZUR POSITIVEN X-ACHSE                      00001660
   20 CALL TRANSF (A1,ARG1,IR(MODE1),ISIZE1,0)                          00001670
      CALL TRANSF (A2,ARG2,IR(MODE2),ISIZE2,0)                          00001680
      SR(1)=A2(1)-A1(1)                                                 00001690
      SR(2)=A2(2)-A1(2)                                                 00001700
      IF(DABS(SR(1))+DABS(SR(2)).LT.D-12)GOTO 30                        00001710
      RES(1)=DATAN2(SR(2),SR(1))                                        00001720
      IF(RES(1).LT.0.D0) RES(1)=RES(1)+6.283185306D0                    00001730
   25 CONTINUE                                                          00001740
      RETURN                                                            00001750
C  'MINDESTENS EINE EINGABE IST UNDEFINIERT ODER ERGEBNIS NICHT         00001760
C                                                   BERECHENBAR'        00001770
   30 CALL ERROR(80,'ANGLB   ')                                         00001780
      RES(1)=0.D0                                                       00001790
      RETURN                                                            00001800
      END                                                               00001810
**** SOURCE FILE : M0002892.V07   ***
*
C                                                                       00000010
C.... FORTRAN SUBROUTINE   NEW FUNCTIONS                  16/10/78EC    00000020
C                                                                       00000030
C                                                                       00000040
C                                                                       00000050
      SUBROUTINE LOGF (RES,ARG)                                         00000060
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000070
      DIMENSION RES(1),ARG(1)                                           00000080
      DOUBLE PRECISION NEG                                              00000082
      INTEGER INEG(2)                                                   00000084
      EQUIVALENCE (NEG,INEG(1))                                         00000086
      DATA INEG/-1,-1/                                                  00000088
      A=ARG(1)                                                          00000100
      IF(A)1,2,3                                                        00000110
    1 A=-A                                                              00000120
C      'NEGATIVE LOGARITHM-ARGUMENT;CONTINUING WITH POSITIVE ARGUMENT'  00000130
      CALL ERROR(20,'LOGF    ')                                         00000140
    3 RES(1)=DLOG(A)                                                    00000150
      RETURN                                                            00000200
C      'LOGARITHM-ARGUMENT ZERO;RESULT IS A NEGATIVE NUMBER'            00000202
    2 CALL ERROR(37,'LOG10F  ')                                         00000204
      RES(1)=NEG                                                        00000206
      END                                                               00000208
C                                                                       00000210
C                                                                       00000220
      SUBROUTINE LOG10F (RES,ARG)                                       00000230
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000231
      DIMENSION RES(1),ARG(1)                                           00000232
      DOUBLE PRECISION NEG                                              00000233
      INTEGER INEG(2)                                                   00000234
      EQUIVALENCE (NEG,INEG(1))                                         00000235
      DATA INEG/-1,-1/                                                  00000237
      A=ARG(1)                                                          00000240
      IF(A)4,2,5                                                        00000250
    4 A=-A                                                              00000260
C      'NEGATIVE LOGARITHM-ARGUMENT;CONTINUING WITH POSITIVE ARGUMENT'  00000270
      CALL ERROR(36,'LOG10F  ')                                         00000280
    5 RES(1)=DLOG10(A)                                                  00000290
      RETURN                                                            00000292
C      'LOGARITHM-ARGUMENT ZERO;RESULT IS A NEGATIVE NUMBER'            00000296
    2 CALL ERROR(37,'LOG10F  ')                                         00000297
      RES(1)=NEG                                                        00000298
      RETURN                                                            00000300
      END                                                               00000308
C                                                                       00000310
C                                                                       00000320
      SUBROUTINE TANF(RES,ARG)                                          00000330
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000331
      DIMENSION RES(1),ARG(1)                                           00000332
      DATA FACT/.0174532925D0/                                          00000338
      A=ARG(1)*FACT                                                     00000340
      RES(1)=DTAN(A)                                                    00000350
      RETURN                                                            00000360
      END                                                               00000368
C                                                                       00000370
C                                                                       00000380
      SUBROUTINE TANB(RES,ARG)                                          00000390
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000391
      DIMENSION RES(1),ARG(1)                                           00000392
      A=ARG(1)                                                          00000400
      RES(1)=DTAN(A)                                                    00000414
      RETURN                                                            00000418
      END                                                               00000419
C                                                                       00000420
C                                                                       00000430
      SUBROUTINE COTANF(RES,ARG)                                        00000440
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000441
      DIMENSION RES(1),ARG(1)                                           00000442
      DATA FACT/.0174532925D0/                                          00000448
      A=ARG(1)*FACT                                                     00000450
      RES(1)=DCOTAN(A)                                                  00000460
      RETURN                                                            00000470
      END                                                               00000478
C                                                                       00000480
C                                                                       00000490
      SUBROUTINE COTANB(RES,ARG)                                        00000500
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000501
      DIMENSION RES(1),ARG(1)                                           00000502
      A=ARG(1)                                                          00000510
      RES(1)=DCOTAN(A)                                                  00000524
      RETURN                                                            00000528
      END                                                               00000529
C                                                                       00000530
C                                                                       00000540
      SUBROUTINE SINB(RES,ARG)                                          00000550
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000551
      DIMENSION RES(1),ARG(1)                                           00000552
      RES(1)=DSIN(ARG(1))                                               00000560
      RETURN                                                            00000570
      END                                                               00000578
C                                                                       00000580
C                                                                       00000590
      SUBROUTINE COSB(RES,ARG)                                          00000600
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000601
      DIMENSION RES(1),ARG(1)                                           00000602
      RES(1)=DCOS(ARG(1))                                               00000610
      RETURN                                                            00000620
      END                                                               00000628
C                                                                       00000630
C                                                                       00000640
      SUBROUTINE ATANB(RES,ARG)                                         00000650
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000651
      DIMENSION RES(1),ARG(1)                                           00000652
      RES(1)=DATAN(ARG(1))                                              00000660
      RETURN                                                            00000670
      END                                                               00000678
C                                                                       00000680
C                                                                       00000690
      SUBROUTINE ARSINF(RES,ARG)                                        00000700
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000701
      DIMENSION RES(1),ARG(1)                                           00000702
      DATA FACT/.0174532925D0/                                          00000708
      IF(DABS(ARG(1)).LE.1.D0)GOTO 9                                    00000712
C    'ARSINF-ARCOSF ARGUMENT ABSOLUTE GREATER 1.:RESULT 0.'             00000714
      CALL ERROR(38,'ARSINF  ')                                         00000716
      RES(1)=0.D0                                                       00000718
      RETURN                                                            00000722
    9 RES(1)=DARSIN(ARG(1))                                             00000724
      RES(1)=RES(1)/FACT                                                00000726
      RETURN                                                            00000728
      END                                                               00000729
C                                                                       00000730
C                                                                       00000740
      SUBROUTINE ARSINB(RES,ARG)                                        00000750
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000751
      DIMENSION RES(1),ARG(1)                                           00000752
      IF(DABS(ARG(1)).LE.1.D0)GOTO 9                                    00000770
C    'ARSINF-ARCOSF ARGUMENT ABSOLUTE GREATER 1.:RESULT 0.'             00000780
      CALL ERROR(38,'ARSINB  ')                                         00000790
      RES(1)=0.D0                                                       00000800
      RETURN                                                            00000810
    9 RES(1)=DARSIN(ARG(1))                                             00000820
      RETURN                                                            00000840
      END                                                               00000848
C                                                                       00000850
C                                                                       00000860
      SUBROUTINE ARCOSF(RES,ARG)                                        00000870
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000871
      DIMENSION RES(1),ARG(1)                                           00000872
      DATA FACT/.0174532925D0/                                          00000878
      IF(DABS(ARG(1)).LE.1.D0)GOTO 11                                   00000882
C    'ARSINF-ARCOSF ARGUMENT ABSOLUTE GREATER 1.:RESULT 0.'             00000884
      CALL ERROR(38,'ARCOSF  ')                                         00000886
      RES(1)=0.D0                                                       00000888
      RETURN                                                            00000892
   11 RES(1)=DARCOS(ARG(1))                                             00000894
      RES(1)=RES(1)/FACT                                                00000896
      RETURN                                                            00000898
      END                                                               00000899
C                                                                       00000900
C                                                                       00000910
      SUBROUTINE ARCOSB(RES,ARG)                                        00000920
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000921
      DIMENSION RES(1),ARG(1)                                           00000922
      DATA FACT/.0174532925D0/                                          00000928
      IF(DABS(ARG(1)).LE.1.D0)GOTO 11                                   00000940
C    'ARSINF-ARCOSF ARGUMENT ABSOLUTE GREATER 1.:RESULT 0.'             00000950
      CALL ERROR(38,'ARCOSB  ')                                         00000960
      RES(1)=0.D0                                                       00000970
      RETURN                                                            00000980
   11 RES(1)=DARCOS(ARG(1))                                             00000990
      RETURN                                                            00001010
      END                                                               00001018
C                                                                       00001020
C                                                                       00001030
      SUBROUTINE SINHF(RES,ARG)                                         00001040
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00001041
      DIMENSION RES(1),ARG(1)                                           00001042
      RES(1)=DSINH(ARG(1))                                              00001050
      RETURN                                                            00001060
      END                                                               00001068
C                                                                       00001070
C                                                                       00001080
      SUBROUTINE COSHF(RES,ARG)                                         00001090
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00001091
      DIMENSION RES(1),ARG(1)                                           00001092
      RES(1)=DCOSH(ARG(1))                                              00001100
      RETURN                                                            00001110
      END                                                               00001118
C                                                                       00001120
C                                                                       00001130
      SUBROUTINE TANHF(RES,ARG)                                         00001140
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00001141
      DIMENSION RES(1),ARG(1)                                           00001142
      RES(1)=DTANH(ARG(1))                                              00001150
      RETURN                                                            00001160
      END                                                               00001168
C                                                                       00001170
C                                                                       00001180
      SUBROUTINE INTF(RES,ARG)                                          00001190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00001191
      DIMENSION RES(1),ARG(1)                                           00001192
      I=IDINT(ARG(1))                                                   00001200
      RES(1)=I                                                          00001210
      RETURN                                                            00001220
      END                                                               00001228
C                                                                       00001230
C                                                                       00001240
      SUBROUTINE MODF(RES,ARG,BRG)                                      00001250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00001251
      DIMENSION RES(1),ARG(1)                                           00001252
      DIMENSION BRG(1)                                                  00001254
      RES(1)=DMOD(ARG(1),BRG(1))                                        00001260
      RETURN                                                            00001270
      END                                                               00001278
C                                                                       00001280
C                                                                       00001290
      SUBROUTINE SIGNF(RES,ARG,BRG)                                     00001300
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00001301
      DIMENSION RES(1),ARG(1)                                           00001302
      DIMENSION BRG(1)                                                  00001304
      RES(1)=DSIGN(ARG(1),BRG(1))                                       00001310
      RETURN                                                            00001320
      END                                                               00001328
C                                                                       00001330
C                                                                       00001340
      SUBROUTINE ATAN2F(RES,ARG,BRG)                                    00001350
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00001351
      DIMENSION RES(1),ARG(1)                                           00001352
      DIMENSION BRG(1)                                                  00001354
      DATA FACT/.0174532925D0/                                          00001358
      RES(1)=DATAN2(ARG(1),BRG(1))                                      00001362
      RES(1)=RES(1)/FACT                                                00001364
      RETURN                                                            00001376
      END                                                               00001378
C                                                                       00001380
C                                                                       00001390
      SUBROUTINE ATAN2B(RES,ARG,BRG)                                    00001400
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00001401
      DIMENSION RES(1),ARG(1)                                           00001402
      DIMENSION BRG(1)                                                  00001404
      RES(1)=DATAN2(ARG(1),BRG(1))                                      00001420
      RETURN                                                            00001440
      END                                                               00001450
**** SOURCE FILE : M0002880.V03   ***
*
C.....FORTRAN SUBROUTINE             CANF....             16.10.78  EC  00000010
C                                                                       00000020
C              FORTRAN SUBROUTINE CANF                                  00000030
C                                                                       00000040
C ZWECK        EXTRAKTION VON KANONISCHEN ELEMENTEN                     00000050
C                                                                       00000060
C VERKNUEPFUNG CALL CANF (RES, ORT, ARG)                                00000070
C                                                                       00000080
C ARGUMENTE    RES     REAL VARIABLE FUER RESULTAT                      00000090
C              ORT     STELLENANGABE IN DER KANONISCHEN FORM            00000100
C              ARG     FELD MIT DER KANONISCHEN FORM                    00000110
C                                                                       00000120
C UNTEPROGR.:  TYPE                ENTRY                                00000130
C              LOGICAL FUNCTION    CKDEF                                00000140
C              SUBROUTINE          ERROR                                00000150
C              SUBROUTINE          UNPACK                               00000160
C              SUBROUTINE          UNDEF                                00000170
C              SUBROUTINE          TRANSF                               00000180
      SUBROUTINE CANF (RES,ORT,ARG)                                     00000190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000200
      DIMENSION ARG(*),A(12),RES(*)                                     00000210
      INTEGER IR(20)                                                    00000220
      LOGICAL CKDEF                                                     00000230
      DATA IR/4,4,5,5,2,1,1,1,5,1,0,0,0,1,0,0,0,0,2,3/                  00000234
C...     CHECK OB KANONISCHE FORM DEFINIERT                             00000240
      IF (CKDEF(ARG)) GO TO 20                                          00000250
C...     KONTROLLE OB KANONISCHE FORM LANG GENUG                        00000260
      I=ORT                                                             00000270
      CALL UNPACK(ARG(1),MODE,ISIZE,ISUB)                               00000280
      IF(I.LE.0)GOTO22                                                  00000290
      IF(I.GT.ISIZE)GOTO21                                              00000300
C...     KONTROLLE OB TRANSFORMIERT WERDEN KANN UND TRANSFORMATION      00000310
      IF(MODE.EQ.18)GOTO 10                                             00000320
      IF(MODE.LE.0.OR.MODE.GT.20.OR.IR(MODE).EQ.0)GOTO 20               00000330
      CALL TRANSF (A,ARG,IR(MODE),ISIZE,0)                              00000340
      RES(1)=A(I)                                                       00000350
      RETURN                                                            00000360
C   MATRIX-ABGRIFF                                                      00000370
   10 RES(1)=ARG(I)                                                     00000380
      RETURN                                                            00000390
C                                                                       00000400
C...   'GEOMETRIE NICHT DEFINIERT'                                      00000410
   20 CALL ERROR( 39,'CANF    ')                                        00000420
      GOTO 23                                                           00000430
C...   'KANONISCHE FORM ZU KURZ FUER INDEX ODER INDEX NICHT DEFINIERT'  00000440
   21 CALL ERROR( 40,'CANF    ')                                        00000450
      GOTO 23                                                           00000460
C...   'INDEX KLEINER ODER GLEICH NULL'                                 00000470
   22 CALL ERROR( 41,'CANF    ')                                        00000480
   23 CALL UNDEF(RES(1))                                                00000490
      RETURN                                                            00000500
      END                                                               00000510
**** SOURCE FILE : M0002884.V03   ***
*
C.....FORTRAN SUBROUTINE              DISTF                16.10.78 EC  00000010
C                                                                       00000020
C              FORTRAN SUBROUTINE DISTF                                 00000030
C PURPOSE      DISTANCE-COMPUTATION:                                    00000040
C               MOD=1 PLANE/PLANE                                       00000050
C               MOD=2 POINT/PLANE                                       00000060
C               MOD=2 POINT/POINT                                       00000070
C                                                                       00000080
C CALL         CALL DISTF(RES,ARG1,ARG2)                                00000090
C                                                                       00000100
C ARGUMENTS    RES     ARRAY FOR THE RESULT                             00000110
C              ARG1    ARRAY OF FIRST ELEMENT                           00000120
C              ARG2    ARRAY OF SECOND ELEMENT                          00000130
C                                                                       00000140
C SUBPROGRAM   TYPE                ENTRY                                00000150
C              LOGICAL FUNCTION    CKDEF                                00000160
C              SUBROUTINE          ERROR                                00000170
C              SUBROUTINE          UNPACK                               00000180
C              DOUBLE PRECISION FUNCTION     DABS                       00000190
C              SUBROUTINE          UNDEF                                00000200
      SUBROUTINE DISTF(RES,ARG1,ARG2)                                   00000210
      DOUBLE PRECISION RES(*),ARG1(*),ARG2(*),AB,COSW                   00000220
      INTEGER IENT(20)                                                  00000230
      LOGICAL CKDEF                                                     00000240
      DATA IENT/1,1,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0/                00000244
      IF(CKDEF(ARG1).OR.CKDEF(ARG2))GOTO 50                             00000250
      CALL UNPACK(ARG1,MODE,ISIZE,ISUB)                                 00000260
      IF(MODE.LT.1.OR.MODE.GT.20)GOTO 51                                00000270
      IARG1=IENT(MODE)                                                  00000280
      IF(IARG1.EQ.0)GOTO 51                                             00000290
      CALL UNPACK(ARG2,MODE,ISIZE,ISUB)                                 00000300
      IF(MODE.LT.1.OR.MODE.GT.20)GOTO 51                                00000310
      IARG2=IENT(MODE)                                                  00000320
      IF(IARG2.EQ.0)GOTO 51                                             00000330
      MOD=IARG1+IARG2-1                                                 00000340
      GOTO (10,20,30),MOD                                               00000350
C    DISTANCE OF TWO PLANES                                             00000360
   10 COSW=ARG1(1)*ARG2(1)+ARG1(2)*ARG2(2)+ARG1(3)*ARG2(3)              00000370
      IF(DABS(DABS(COSW)-1.D0).GT.1.D-6)GOTO 52                         00000380
      RES(1)=DABS(ARG1(4)-COSW*ARG2(4))                                 00000390
      RETURN                                                            00000400
C    DISTANCE OF POINT AND PLANE                                        00000410
   20 AB=ARG1(4)                                                        00000420
      IF(IARG1.EQ.2)AB=ARG2(4)                                          00000430
      RES(1)=ARG1(1)*ARG2(1)+ARG1(2)*ARG2(2)+ARG1(3)*ARG2(3)-AB         00000440
      RETURN                                                            00000450
C     DISTANCE OF TWO POINTS                                            00000460
   30 RES(1)=DSQRT((ARG1(1)-ARG2(1))**2                                 00000470
     1         +(ARG1(2)-ARG2(2))**2                                    00000480
     2         +(ARG1(3)-ARG2(3))**2)                                   00000490
      RETURN                                                            00000500
C     'ONE ELEMENT OR BOTH ARE UNDEFINED'                               00000510
   50 CALL ERROR(55,'DISTF   ')                                         00000520
      GOTO 53                                                           00000530
C     'WRONG INPUT'                                                     00000540
   51 CALL ERROR(61,'DISTF   ')                                         00000550
      GOTO 53                                                           00000560
C     'PLANES NOT PARALLEL'                                             00000570
   52 CALL ERROR(62,'DISTF   ')                                         00000580
   53 CALL UNDEF(RES(1))                                                00000590
      RETURN                                                            00000600
      END                                                               00000610
**** SOURCE FILE : M0002836.V02   ***
*
C.....FORTRAN SUBROUTINE             DOTF.....              5/1/68   GK DOTF0000
C                      THE FIRST INPUT VECTOR                           DOTF0100
C              ARG2    ARRAY CONTAINING THE CANONICAL FORM OF           DOTF0110
C                      THE SECOND INPUT VECTOR                          DOTF0120
C                                                                       DOTF0130
C SUBSIDIARIES TYPE                ENTRY                                DOTF0140
C              LOGICAL FUNCTION    CKDEF                                DOTF0150
C              SUBROUTINE          ERROR                                DOTF0160
C                                                                       DOTF0170
      SUBROUTINE DOTF (RESULT,ARG1,ARG2)                                DOTF0180
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            DOTF0190
      DIMENSION ARG1(3),ARG2(3),DS(6)                                   DOTF0200
      DOUBLE PRECISION DS                                               DOTF0210
      LOGICAL CKDEF                                                     DOTF0220
C                                                                       DOTF0230
C                                                                       DOTF0240
C                                                                       DOTF0250
      INCLUDE 'TOTAL.INC'                                               DOTF0381
      INCLUDE 'ZNUMBR.INC'                                              DOTF0468
      INCLUDE 'KNUMBR.INC'                                              DOTF0643
C                                                                       DOTF0690
      IF (CKDEF(ARG1).OR.CKDEF(ARG2)) GO TO 20                          DOTF0700
C                                                                       DOTF0710
C...     MOVE ARGUMENTS TO DOUBLE PRECISION SCRATCH LOCATIONS           DOTF0720
C                                                                       DOTF0730
C                                                                       DOTF0731
      DO 10 I=1,3                                                       DOTF0740
      DS(I)=ARG1(I)                                                     DOTF0750
      DS(I+3)=ARG2(I)                                                   DOTF0760
   10 CONTINUE                                                          DOTF0770
C                                                                       DOTF0780
C...     COMPUTE DOT PRODUCT                                            DOTF0790
C                                                                       DOTF0800
      RESULT = DS(1)*DS(4) +DS(2)*DS(5) +DS(3)*DS(6)                    DOTF0810
      GO TO 9                                                           DOTF0820
C                                                                       DOTF0830
C...     ISSUE DIAGNOSTIC, INPUT UNDEFINED, RESULT=0                    DOTF0840
C                                                                       DOTF0850
   20 CALL ERROR (10,'DOTF   ')                                         DOTF0860
      RESULT = Z0                                                       DOTF0870
    9 RETURN                                                            DOTF0880
       END                                                              DOTF0890
**** SOURCE FILE : M0002848.V02   ***
*
C.....FORTRAN SUBROUTINE             LNTHF....              3/1/68   GK LNTH0000
C                                                                       LNTH0010
C              FORTRAN SUBROUTINE LNTHF                                 LNTH0020
C                                                                       LNTH0030
C PURPOSE      TO COMPUTE THE LENGTH OF A VECTOR.                       LNTH0040
C                                                                       LNTH0050
C LINKAGE      CALL LNTHF (RES, ARG)                                    LNTH0060
C                                                                       LNTH0070
C ARGUMENTS    RES     REAL VARIABLE TO CONTAIN THE RESULT              LNTH0080
C              ARG     ARRAY CONTAINING THE CANONICAL FORM OF           LNTH0090
C                      THE INPUT VECTOR                                 LNTH0100
C                                                                       LNTH0110
C SUBSIDIARIES TYPE                ENTRY                                LNTH0120
C              LOGICAL FUNCTION    CKDEF                                LNTH0130
C              SUBROUTINE          ERROR                                LNTH0140
C              REAL FUNCTION       SQRT                                 LNTH0150
      SUBROUTINE LNTHF (RES,ARG)                                        LNTH0160
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            LNTH0170
      DIMENSION ARG(3)                                                  LNTH0180
      LOGICAL CKDEF                                                     LNTH0190
C                                                                       LNTH0200
C                                                                       LNTH0210
C                                                                       LNTH0220
      INCLUDE 'TOTAL.INC'                                               LNTH0351
      INCLUDE 'ZNUMBR.INC'                                              LNTH0438
      INCLUDE 'KNUMBR.INC'                                              LNTH0564
C                                                                       LNTH0590
C                                                                       LNTH0600
C                                                                       LNTH0610
C...     CHECK DEFINITION OF INPUT VECTOR                               LNTH0620
C                                                                       LNTH0630
      IF (CKDEF(ARG)) GO TO 20                                          LNTH0640
C                                                                       LNTH0650
C...     COMPUTE LENGTH OF VECTOR                                       LNTH0660
C                                                                       LNTH0670
      RES=DSQRT(ARG(1)**2+ARG(2)**2+ARG(3)**2)                          LNTH0680
      GO TO 9                                                           LNTH0690
C                                                                       LNTH0700
C...     DIAGNOSE UNDEFINED INPUT                                       LNTH0710
C                                                                       LNTH0720
   20 CALL ERROR( 56,'LNTHF   ')                                        LNTH0730
      RES= Z0                                                           LNTH0740
    9 RETURN                                                            LNTH0750
       END                                                              LNTH0760
**** SOURCE FILE : MINF0000.ORG   ***
*
      SUBROUTINE MINF(PTABLE)                                           00000100
*                                                                       00000200
*  * MINF *   VAX11 FORTRAN VERSION  29.8.86  E.MCLELLAN                00000300
*                                                                       00000400
*  PURPOSE    TO FIND THE MINIMUM VALUE OF ITEMS IN UNLABELLED          00000500
*             COMMON REFERENCED BY THE PARAMETER LIST                   00000600
*  CALLING SEQUENCE                                                     00000700
*             CALL MINF(PTABLE)                                         00000800
*  ARGUMENTS                                                            00000900
*             PTABLE    PARAMETER LIST                                  00001000
*                                                                       00001100
C      UNLABELED COMMON                                                 00001200
C                                                                       00001300
      INCLUDE 'BLANKCOM.INC'                                            00001400
C                                                                       00001500
      DIMENSION PTABLE(50)                                              00001600
      DOUBLE PRECISION RESULT                                           00001700
      INTEGER PTABLE,TERM                                               00001800
C                                                                       00001900
      DATA TERM/-999/                                                   00002000
C                                                                       00002100
C                                                                       00002200
      RESULT=COM(PTABLE(3))                                             00002300
      I=4                                                               00002400
   10 IF (COM(PTABLE(I)).LT.RESULT)RESULT=COM(PTABLE(I))                00002500
      I=I+1                                                             00002600
      IF (PTABLE(I).NE.TERM) GOTO 10                                    00002700
      COM(PTABLE(2))=RESULT                                             00002800
      RETURN                                                            00002900
      END                                                               00003000
C                                                                       00003100
C                                                                       00003200
C                                                                       00003300
      SUBROUTINE MAXF(PTABLE)                                           00003400
*                                                                       00003500
*  * MAXF *   VAX11 FORTRAN VERSION  29.8.86  E.MCLELLAN                00003600
*                                                                       00003700
*  PURPOSE    TO FIND THE MAXIMUM VALUE OF ITEMS IN UNLABELLED          00003800
*             COMMON REFERENCED BY THE PARAMETER LIST                   00003900
*  CALLING SEQUENCE                                                     00004000
*             CALL MAXF(PTABLE)                                         00004100
*  ARGUMENTS                                                            00004200
*             PTABLE    PARAMETER LIST                                  00004300
*                                                                       00004400
C      UNLABELED COMMON                                                 00004500
C                                                                       00004600
      INCLUDE 'BLANKCOM.INC'                                            00004700
C                                                                       00004800
      DIMENSION PTABLE(50)                                              00004900
      DOUBLE PRECISION RESULT                                           00005000
      INTEGER PTABLE,TERM                                               00005100
C                                                                       00005200
      DATA TERM/-999/                                                   00005300
C                                                                       00005400
C                                                                       00005500
      RESULT=COM(PTABLE(3))                                             00005600
      I=4                                                               00005700
   20 IF (COM(PTABLE(I)).GT.RESULT)RESULT=COM(PTABLE(I))                00005800
      I=I+1                                                             00005900
      IF (PTABLE(I).NE.TERM) GOTO 20                                    00006000
      COM(PTABLE(2))=RESULT                                             00006100
      RETURN                                                            00006200
      END                                                               00006300
**** SOURCE FILE : M0011451.V08   ***
*
C                                                                       NUM00100
C...  FORTRAN SUBROUTINE     NUMF1                                      NUM00200
C                                                                       NUM00300
C PURPOSE      TO DETERMINE THE NUMBER OF POINTS IN A PATERN,SCURV,SSURFNUM00400
C              OR PREVIOUS CL DATA                                      NUM00500
C                                                                       NUM00600
C LINKAGE      CALL NUMF1(RESULT,PAT)                                   NUM00700
C              CALL NUMF2(RESULT,PAT,ARG2)                              NUM00800
C                                                                       NUM00900
C ARGUMENTS    RESULT  REAL VARIABLE TO CONTAIN THE RESULTING           NUM01000
C                      NUMBER OF POINTS                                 NUM01100
C              PAT     ARRAY CONTAINING THE I.C.F. OF THE PATERN        NUM01200
C              OR BCD 'CLDATA'                                          NUM01300
C                                                                       NUM01400
C SUBSIDIARIES TYPE                ENTRY                                NUM01500
C              SUBROUTINE          APT094                               NUM01600
C              LOGICAL FUNCTION    CKDEF                                NUM01700
C              SUBROUTINE          ERROR                                NUM01800
C                                                                       NUM01900
      SUBROUTINE NUMF1(RESULT,PAT)                                      NUM02000
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              NUM02100
      DIMENSION RESULT(1),PAT(1)                                        NUM02200
C                                                                       NUM02300
C                                                                       NUM02600
      INCLUDE 'TOTAL.INC'                                               NUM03201
C...  REFERENCE TO LOCAL VARIABLE, IS, CHANGED TO ISIZE,                NUM03401
C...  BECAUSE IS OCCURS IN IFXCOR.INC                                   NUM03402
      INCLUDE 'IFXCOR.INC'                                              NUM03403
C                                                                       NUM03500
C                                                                       NUM03610
      LOGICAL CKDEF                                                     NUM03635
      INCLUDE 'BLANKCOM.INC'                                            NUM03681
C                                                                       NUM03700
      CHARACTER*8 HCLDA,TEST                                            NUM03710
      DATA HCLDA /'CLDATA  '/                                           NUM03900
C                                                                       NUM04600
      CALL HOLFRM (PAT(1),TEST,1,8,NWD)                                 NUM04610
      IF(TEST.EQ.HCLDA) GO TO 95                                        NUM04800
    1 IF(CKDEF(PAT))GO TO 90                                            NUM04900
      CALL UNPACK(PAT(1),MODE,ISIZE,ISUB)                               NUM05000
      IF(MODE.NE.26.AND.MODE.NE.29.AND.MODE.NE.30)GOTO 90               NUM05100
C                                                                       NUM05200
C          MOVE THE EXTERNAL CANONICAL FORM TO  CANON                   NUM05300
C                                                                       NUM05400
      CALL APT094(3,PAT,ILOC)                                           NUM05500
      IF(CKDEF(PAT))GO TO 90                                            NUM05600
      IF(MODE.NE.26)GOTO 20                                             NUM05700
C                                                                       NUM05900
C  NUMBER OF POINTS IS NOW IN CANON(ILOC+3)  (PATERN)                   NUM06000
C                                                                       NUM06100
      RESULT(1)=CANON(ILOC+3)                                           NUM06200
C                                                                       NUM06300
      RETURN                                                            NUM06400
C                                                                       NUM07100
C  COMPUTATIONS                                                         NUM07200
C      SCURV ?                                                          NUM07300
   20 IF(MODE.NE.30)GOTO 30                                             NUM07400
C         SCURV GIVEN                                                   NUM07500
C  OUTPUT NUMBER OF ARCS WITH >NUMF(C)<                                 NUM07900
   21 RESULT(1)=CANON(ILOC+3)                                           NUM08000
      RETURN                                                            NUM08100
C      SSURF ?                                                          NUM08600
   30 IF(MODE.NE.29)GOTO 90                                             NUM08700
C         SSURF GIVEN                                                   NUM08800
C  OUTPUT NUMBER OF PATCHES WITH >NUMF(S)<                              NUM09500
   31 RESULT(1)=CANON(ILOC+3)                                           NUM09600
      RETURN                                                            NUM09700
C                                                                       NUM10400
C   OUTPUT OF NUMBER OF POINTS IN LAST CUTTER PATH WITH >NUMF(CLDATA)<  NUM10500
C                                                                       NUM10600
   95 RESULT(1) = NUMCNT                                                NUM10610
      RETURN                                                            NUM10620
C                                                                       NUM10900
C     USED GEOMETRY UNDEFINED OR WRONG INPUT                            NUM11000
C                                                                       NUM11100
   90 CALL ERROR(36,'NUMF1   ')                                         NUM11200
  120 RESULT(1)=0.D0                                                    NUM11300
      RETURN                                                            NUM11400
C                                                                       NUM11500
C     ERROR DIAGNOSTIC 96                                               NUM11600
C     CLDAT SECTION NOT FOUND OR NOT CLOSED                             NUM11700
  110 CALL ERROR(96,'NUMF1   ')                                         NUM11900
      GOTO 120                                                          NUM12000
C                                                                       NUM12100
      END                                                               NUM12200
C                                                                       NUM21900
      SUBROUTINE NUMF2(RESULT,PAT,ARG2)                                 NUM22000
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              NUM22100
      DIMENSION RESULT(1),PAT(1),ARG2(1)                                NUM22200
C                                                                       NUM22300
C                                                                       NUM22600
      INCLUDE 'TOTAL.INC'                                               NUM23201
C...  REFERENCE TO LOCAL VARIABLE, IS, CHANGED TO ISIZE,                NUM23401
C...  BECAUSE IS OCCURS IN IFXCOR.INC                                   NUM23402
      INCLUDE 'IFXCOR.INC'                                              NUM23403
C                                                                       NUM23500
      INCLUDE 'CLDT.INC'                                                NUM23604
C                                                                       NUM23610
      LOGICAL CKDEF                                                     NUM23635
      INCLUDE 'BLANKCOM.INC'                                            NUM23681
C                                                                       NUM23700
      CHARACTER*8 HCLDA,ARC,SEG,PATCH,SPLINE,CRSSPL,TEST1,TEST2         NUM23710
      DATA HCLDA /'CLDATA  '/                                           NUM23900
      DATA ARC   /'ARC     '/                                           NUM24000
      DATA SEG   /'SEG     '/                                           NUM24100
      DATA PATCH /'PATCH   '/                                           NUM24200
      DATA SPLINE/'SPLINE  '/                                           NUM24300
      DATA CRSSPL/'CRSSPL  '/                                           NUM24400
C                                                                       NUM24600
      CALL HOLFRM(PAT(1),TEST1,1,8,NWD)                                 NUM24610
      CALL HOLFRM(ARG2(1),TEST2,1,8,NWD)                                NUM24612
      IF(TEST1.NE.HCLDA) GO TO 1                                        NUM24620
      IARG2=ARG2(1)                                                     NUM24640
      DO 15 L=1,ICLCNT                                                  NUM24660
      IF(IARG2.EQ.ICLTAB(1,L))GOTO 100                                  NUM24680
   15 CONTINUE                                                          NUM24700
      GOTO 110                                                          NUM24720
C                                                                       NUM24800
    1 IF(CKDEF(PAT))GO TO 90                                            NUM24900
      CALL UNPACK(PAT(1),MODE,ISIZE,ISUB)                               NUM25000
      IF(MODE.NE.26.AND.MODE.NE.29.AND.MODE.NE.30)GOTO 90               NUM25100
C                                                                       NUM25200
C          MOVE THE EXTERNAL CANONICAL FORM TO  CANON                   NUM25300
C                                                                       NUM25400
      CALL APT094(3,PAT,ILOC)                                           NUM25500
      IF(CKDEF(PAT))GO TO 90                                            NUM25600
      IF(MODE.EQ.26)GOTO 90                                             NUM25700
C                                                                       NUM27100
C  COMPUTATIONS                                                         NUM27200
C      SCURV ?                                                          NUM27300
   20 IF(MODE.NE.30)GOTO 30                                             NUM27400
C         SCURV GIVEN                                                   NUM27500
      IF(TEST2.EQ.ARC)GOTO 21                                           NUM27600
      IF(TEST2.EQ.SEG)GOTO 22                                           NUM27700
      GOTO 90                                                           NUM27800
C  OUTPUT NUMBER OF ARCS WITH >NUMF(C,ARC)<                             NUM27900
   21 RESULT(1)=CANON(ILOC+3)                                           NUM28000
      RETURN                                                            NUM28100
C  OUTPUT NUMBER OF SEGMENTS WITH >NUMF(C,SEG)<                         NUM28200
   22 RESULT(1)=CANON(ILOC+7)                                           NUM28300
      IF(RESULT(1).EQ.0.D0)GOTO 90                                      NUM28400
      RETURN                                                            NUM28500
C      SSURF ?                                                          NUM28600
   30 IF(MODE.NE.29)GOTO 90                                             NUM28700
C         SSURF GIVEN                                                   NUM28800
      IF(TEST2.EQ.PATCH)GOTO 31                                         NUM28900
C  ERROR , IF NOT MESH TYPE                                             NUM29000
      IF(CANON(ILOC+4).NE.2.D0)GOTO 90                                  NUM29100
      IF(TEST2.EQ.SPLINE)GOTO 32                                        NUM29200
      IF(TEST2.EQ.CRSSPL)GOTO 33                                        NUM29300
      GOTO 90                                                           NUM29400
C  OUTPUT NUMBER OF PATCHES WITH >NUMF(S,PATCH)<                        NUM29500
   31 RESULT(1)=CANON(ILOC+3)                                           NUM29600
      RETURN                                                            NUM29700
C  OUTPUT NUMBER OF SPLINES WITH >NUMF(S,SPLINE)<                       NUM29800
   32 RESULT(1)=CANON(ILOC+8)                                           NUM29900
      RETURN                                                            NUM30000
C  OUTPUT NUMBER OF CROSS SPLINES WITH >NUMF(S,CRSSPL)<                 NUM30100
   33 RESULT(1)=CANON(ILOC+9)                                           NUM30200
      RETURN                                                            NUM30300
C                                                                       NUM30400
C   OUTPUT OF NUMBER OF POINTS IN LAST CUTTER PATH WITH >NUMF(CLDATA)<  NUM30500
C                                                                       NUM30600
   95 RESULT(1) = NUMCNT                                                NUM30610
      RETURN                                                            NUM30620
  100 RESULT(1) = ICLTAB(2,L)                                           NUM30700
      RETURN                                                            NUM30800
C                                                                       NUM30900
C     USED GEOMETRY UNDEFINED OR WRONG INPUT                            NUM31000
C                                                                       NUM31100
   90 CALL ERROR(36,'NUMF2   ')                                         NUM31200
  120 RESULT(1)=0.D0                                                    NUM31300
      RETURN                                                            NUM31400
C                                                                       NUM31500
C     ERROR DIAGNOSTIC 96                                               NUM31600
C     CLDAT SECTION NOT FOUND OR NOT CLOSED                             NUM31700
  110 CALL ERROR(96,'NUMF2   ')                                         NUM31900
      GOTO 120                                                          NUM32000
C                                                                       NUM32100
      END                                                               NUM32200
**** SOURCE FILE : M0004164.V08   ***
*
C   PARAMETER FETCH  ROUTINES                                           PAR00100
C   CALLABLE AFTER EXTRINSIC EXTRACTION OF POINT/VECTOR IN APT109       PAR00200
C                                                                       PAR00210
C                                                                       PAR00300
C  ENTRY WITH 1 ARGUMENT                                                PAR00400
C                                                                       PAR00500
      SUBROUTINE PARMF1(RES,ARG1)                                       PAR00600
C                                                                       PAR00700
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              PAR00800
C                                                                       PAR00900
      DOUBLE PRECISION RES(1),ARG1(*)                                   PAR00910
C                                                                       PAR01004
      INCLUDE 'BLANKCOM.INC'                                            PAR01005
C                                                                       PAR01006
      COMMON/PARMFC/UA,VA,PNUM,UT,US,FNAM                               PAR01100
C                                                                       PAR01200
      LOGICAL CKDEF                                                     PAR01210
      DOUBLE PRECISION FNAM1,RTS(3)                                     PAR01220
      CHARACTER*4 UVAL,VVAL,PVAL,TVAL,SVAL,TEST                         PAR01240
      DOUBLE PRECISION UA,VA,PNUM,UT,US,FNAM                            PAR01300
      DATA UVAL/'UVAL'/,VVAL/'VVAL'/,PVAL/'PVAL'/                       PAR01400
      DATA TVAL/'TVAL'/,SVAL/'SVAL'/                                    PAR01500
C                                                                       PAR02300
C                                                                       PAR02400
      IART=1                                                            PAR02500
      IF(FNAM.EQ.0.D0)GOTO 20                                           PAR02600
      CALL HOLFRM(ARG1,TEST,1,4,NWD)                                    PAR02610
      IF(TEST.EQ.UVAL)GOTO 1                                            PAR02700
      IF(TEST.EQ.VVAL)GOTO 2                                            PAR02800
      IF(TEST.EQ.PVAL)GOTO 3                                            PAR02900
      IF(TEST.EQ.TVAL)GOTO 4                                            PAR03000
      IF(TEST.EQ.SVAL)GOTO 5                                            PAR03100
C  LOOK FOR FUNCTION WITH GEOMETRY INPUT                                PAR03200
   30 IF(CKDEF(ARG1))GO TO 21                                           PAR03300
      CALL UNPACK(ARG1(1),MODE,IS,ISUB)                                 PAR03400
      IF(MODE.NE.29.AND.MODE.NE.30)GOTO 21                              PAR03500
C          CHECK,IF RIGHT GEOMETRY                                      PAR03600
      FNAM1=ARG1(IS+1)                                                  PAR03700
      IF(ISUB.GE.1)FNAM1=ARG1(ISUB*IS+ISUB)                             PAR03800
      IF(FNAM.NE.FNAM1)GOTO 20                                          PAR03900
C                                                                       PAR04000
C          MOVE THE EXTERNAL CANONICAL FORM TO  CANON                   PAR04100
C                                                                       PAR04200
      CALL APT094(3,ARG1,ILOC)                                          PAR04300
      IF(CKDEF(ARG1))GO TO 21                                           PAR04400
C   SSURF ?                                                             PAR04500
      IF(MODE.NE.29)GOTO 35                                             PAR04600
C   SSURF GIVEN                                                         PAR04700
      GOTO 3                                                            PAR04800
C    SCURV ?                                                            PAR06900
   35 IF(MODE.NE.30)GOTO 21                                             PAR07000
C   SCURV GIVEN                                                         PAR07100
C  OUTPUT FOR >PARMF(C)< OR >PARMF(C,PARAM)<                            PAR07500
   36 RES(1)=US+UT-1.D0                                                 PAR07600
      RETURN                                                            PAR07700
C  OUTPUT FOR >PARMF(UVAL)< OR >PARMF(S,UPARAM)< (NON MESH TYPE)        PAR12000
    1 RES(1)=UA                                                         PAR12100
      RETURN                                                            PAR12200
C  OUTPUT FOR >PARMF(VVAL)< OR >PARMF(S,VPARAM)< (NON MESH TYPE)        PAR12300
    2 RES(1)=VA                                                         PAR12400
      RETURN                                                            PAR12500
C  OUTPUT FOR >PARMF(PVAL)< OR >PARMF(S,PATCH)<                         PAR12600
    3 RES(1)=PNUM                                                       PAR12700
      RETURN                                                            PAR12800
C  OUTPUT FOR >PARMF(TVAL)<                                             PAR12900
    4 RES(1)=UT                                                         PAR13000
      RETURN                                                            PAR13100
C  OUTPUT FOR >PARMF(SVAL)<                                             PAR13200
    5 RES(1)=US                                                         PAR13300
      RETURN                                                            PAR13400
C    'NO PARAMETER EXISTING'                                            PAR14000
   20 CALL ERROR(42,'PARMF   ')                                         PAR14100
      GOTO 22                                                           PAR14200
C    'WRONG PARMF CALL'                                                 PAR14300
   21 CALL ERROR(43,'PARMF   ')                                         PAR14400
   22 RES(1)=0.D0                                                       PAR14500
      RETURN                                                            PAR14600
      END                                                               PAR14700
C                                                                       PAR20300
C                                                                       PAR20310
C                                                                       PAR20320
C                                                                       PAR20500
C  ENTRY WITH TWO ARGUMENTS                                             PAR20510
      SUBROUTINE PARMF2(RES,ARG1,ARG2)                                  PAR20610
C                                                                       PAR20700
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              PAR20800
C                                                                       PAR20900
      DOUBLE PRECISION RES(1),ARG1(*),ARG2(1)                           PAR20910
C                                                                       PAR21004
      INCLUDE 'BLANKCOM.INC'                                            PAR21005
C                                                                       PAR21006
      COMMON/PARMFC/UA,VA,PNUM,UT,US,FNAM                               PAR21100
C                                                                       PAR21200
      LOGICAL CKDEF                                                     PAR21210
      DOUBLE PRECISION FNAM1,RTS(3)                                     PAR21220
      CHARACTER*8 FLOW,PARAM,UPARAM,VPARAM,PATCH,TEST                   PAR21230
      DOUBLE PRECISION UA,VA,PNUM,UT,US,FNAM                            PAR21300
      DATA FLOW  /'FLOW    '/                                           PAR21700
      DATA PARAM /'PARAM   '/                                           PAR21800
      DATA UPARAM/'UPARAM  '/                                           PAR21900
      DATA VPARAM/'VPARAM  '/                                           PAR22000
      DATA PATCH /'PATCH   '/                                           PAR22100
C                                                                       PAR22300
C                                                                       PAR22400
      IART=2                                                            PAR22440
      IF (FNAM.EQ.0.D0) GOTO 20                                         PAR22450
      CALL HOLFRM(ARG2,TEST,1,8,NWD)                                    PAR22455
C  LOOK FOR FUNCTION WITH GEOMETRY INPUT                                PAR23200
   30 IF(CKDEF(ARG1))GO TO 21                                           PAR23300
      CALL UNPACK(ARG1(1),MODE,IS,ISUB)                                 PAR23400
      IF(MODE.NE.29.AND.MODE.NE.30)GOTO 21                              PAR23500
C          CHECK,IF RIGHT GEOMETRY                                      PAR23600
      FNAM1=ARG1(IS+1)                                                  PAR23700
      IF(ISUB.GE.1)FNAM1=ARG1(ISUB*IS+ISUB)                             PAR23800
      IF(FNAM.NE.FNAM1)GOTO 20                                          PAR23900
C                                                                       PAR24000
C          MOVE THE EXTERNAL CANONICAL FORM TO  CANON                   PAR24100
C                                                                       PAR24200
      CALL APT094(3,ARG1,ILOC)                                          PAR24300
      IF(CKDEF(ARG1))GO TO 21                                           PAR24400
C   SSURF ?                                                             PAR24500
      IF(MODE.NE.29)GOTO 35                                             PAR24600
C   SSURF GIVEN                                                         PAR24700
      IF(TEST.EQ.PATCH )GOTO 3                                          PAR24900
C   MESH TYPE ?                                                         PAR25000
      IF(CANON(ILOC+4).EQ.2.D0)GOTO 31                                  PAR25100
      IF(TEST.EQ.UPARAM)GOTO 1                                          PAR25200
      IF(TEST.EQ.VPARAM)GOTO 2                                          PAR25300
      GOTO 21                                                           PAR25400
C  MESH TYPE                                                            PAR25500
   31 IP=PNUM                                                           PAR25600
      NU=CANON(ILOC+9)-1.D0                                             PAR25700
      IV=(IP-1)/NU                                                      PAR25800
      IF(TEST.EQ.UPARAM)GOTO 32                                         PAR25900
      IF(TEST.EQ.VPARAM)GOTO 33                                         PAR26000
      GOTO 21                                                           PAR26100
C  GLOBAL U-PARAMETER  >PARMF(S,UPARAM)< (MESH TYPE)                    PAR26200
   32 IU=IP-1-IV*NU                                                     PAR26300
      RES(1)=IU+UA                                                      PAR26400
      RETURN                                                            PAR26500
C  GLOBAL V-PARAMETER  >PARMF(S,VPARAM)< (MESH TYPE)                    PAR26600
   33 RES(1)=IV+VA                                                      PAR26700
      RETURN                                                            PAR26800
C    SCURV ?                                                            PAR26900
   35 IF(MODE.NE.30)GOTO 21                                             PAR27000
C   SCURV GIVEN                                                         PAR27100
      IF(TEST.EQ.PARAM )GOTO 36                                         PAR27300
      IF(TEST.EQ.FLOW  )GOTO 37                                         PAR27400
C  OUTPUT FOR >PARMF(C)< OR >PARMF(C,PARAM)<                            PAR27500
   36 RES(1)=US+UT-1.D0                                                 PAR27600
      RETURN                                                            PAR27700
   37 IF(CANON(ILOC+7).EQ.0.D0)GOTO 21                                  PAR27800
C  OUTPUT FOR >PARMF(C,FLOW)<                                           PAR27900
C  SEARCH IN FLOW DESCRIPTION OF NATURAL SEGMENT                        PAR28000
      IS=US-1.D0                                                        PAR28100
      IFSEG=CANON(ILOC+6)                                               PAR28200
      IFLOW1=CANON(ILOC+IFSEG-1+4*IS)                                   PAR28300
      IFLOW2=IFLOW1+(CANON(ILOC+IFSEG+4*IS)-1.D0)*4.D0                  PAR28400
      IFLOW1=IFLOW1+ILOC-1                                              PAR28500
      IFLOW2=IFLOW2+ILOC-1                                              PAR28600
      DO 40 IFLOW=IFLOW1,IFLOW2,4                                       PAR28700
      IF(UT.GE.CANON(IFLOW+1).AND.UT.LT.CANON(IFLOW+5)) GOTO 50         PAR28800
   40 CONTINUE                                                          PAR28900
      GOTO 21                                                           PAR29000
C  COMPUTE FLOW-PARAMETER                                               PAR29100
   50 SPAN=CANON(IFLOW+4)-CANON(IFLOW)                                  PAR29200
      UA=CANON(IFLOW+1)                                                 PAR29300
      UB=CANON(IFLOW+5)                                                 PAR29400
      UMA=CANON(IFLOW+2)*SPAN                                           PAR29500
      UMB=CANON(IFLOW+6)*SPAN                                           PAR29600
      W1=3.D0*(UB-UA)-UMA-UMA-UMB                                       PAR29700
      W2=2.D0*(UA-UB)+UMA+UMB                                           PAR29800
      CALL GCUBIC(W2,W1,UMA,UA-UT,RTS,MN)                               PAR29900
      IF(MN.EQ.0) GOTO 21                                               PAR30000
      DO 60 I=1,MN                                                      PAR30100
      PU=RTS(I)                                                         PAR30200
      IF(PU.GE.-1.D-7.AND.PU.LT.1.0000001D0) GOTO 70                    PAR30300
   60 CONTINUE                                                          PAR30400
      GOTO 21                                                           PAR30500
C COMPUTE GLOBAL FLOW PARAMETER                                         PAR30600
   70 PU=CANON(IFLOW)+PU*SPAN                                           PAR30700
      ISEG1=ILOC-1+CANON(ILOC+8)                                        PAR30800
      ISEGA=CANON(ILOC+7)                                               PAR30900
      ISEG2=ISEG1+(ISEGA-1)*4                                           PAR31000
      USN=US-1.D0                                                       PAR31100
      USF=0.D0                                                          PAR31200
      DO 80 ISEG=ISEG1,ISEG2,4                                          PAR31300
      IF(CANON(ISEG)+CANON(ISEG+1).GT.USN) GOTO 90                      PAR31400
      USF=USF+1.D0                                                      PAR31500
   80 CONTINUE                                                          PAR31600
C COMPUTE FINAL GLOBAL FLOW PARAMETER                                   PAR31700
   90 RES(1) = USF+PU                                                   PAR31800
      RETURN                                                            PAR31900
C  OUTPUT FOR >PARMF(UVAL)< OR >PARMF(S,UPARAM)< (NON MESH TYPE)        PAR32000
    1 RES(1)=UA                                                         PAR32100
      RETURN                                                            PAR32200
C  OUTPUT FOR >PARMF(VVAL)< OR >PARMF(S,VPARAM)< (NON MESH TYPE)        PAR32300
    2 RES(1)=VA                                                         PAR32400
      RETURN                                                            PAR32500
C  OUTPUT FOR >PARMF(PVAL)< OR >PARMF(S,PATCH)<                         PAR32600
    3 RES(1)=PNUM                                                       PAR32700
      RETURN                                                            PAR32800
C  OUTPUT FOR >PARMF(TVAL)<                                             PAR32900
    4 RES(1)=UT                                                         PAR33000
      RETURN                                                            PAR33100
C  OUTPUT FOR >PARMF(SVAL)<                                             PAR33200
    5 RES(1)=US                                                         PAR33300
      RETURN                                                            PAR33400
C    'NO PARAMETER EXISTING'                                            PAR34000
   20 CALL ERROR(42,'PARMF   ')                                         PAR34100
      GOTO 22                                                           PAR34200
C    'WRONG PARMF CALL'                                                 PAR34300
   21 CALL ERROR(43,'PARMF   ')                                         PAR34400
   22 RES(1)=0.D0                                                       PAR34500
      RETURN                                                            PAR34600
      END                                                               PAR34700
**** SOURCE FILE : M0002891.V03   ***
*
C.....FORTRAN SUBROUTINE              SPATF                16.10.78 EC  00000010
C                                                                       00000020
C              FORTRAN SUBROUTINE SPATF                                 00000030
C PURPOSE      COMPUTATION OF THE SPAT-PRODUCT OF 3 VECTORS             00000040
C                                                                       00000050
C CALLING SEQ.: CALL SPATF(RES,ARG1,ARG2,ARG3)                          00000060
C                                                                       00000070
C ARGUMENTS    RES     FIELD FOR RESULT                                 00000080
C              ARG1    FIELD OF 1ST VECTOR                              00000090
C              ARG2    FIELD OF 2ND VECTOR                              00000100
C              ARG3    FIELD OF 3RD VECTOR                              00000110
C                                                                       00000120
C SUBPROGRAMS  TYPE                ENTRY                                00000130
C              LOGICAL FUNCTION    CKDEF                                00000140
C              SUBROUTINE          ERROR                                00000150
C              SUBROUTINE          UNPACK                               00000160
C              SUBROUTINE          UNDEF                                00000170
      SUBROUTINE SPATF(RES,ARG1,ARG2,ARG3)                              00000180
      DOUBLE PRECISION RES(*),ARG1(*),ARG2(*),ARG3(*)                   00000190
      LOGICAL CKDEF                                                     00000200
      INTEGER IS(20)                                                    00000210
      DATA IS/1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1/                  00000214
      IF(CKDEF(ARG1).OR.CKDEF(ARG2).OR.CKDEF(ARG3))GOTO 30              00000220
      CALL UNPACK (ARG1,MODE,ISI,ISU)                                   00000230
      IF(MODE.LT.1.OR.MODE.GT.20.OR.IS(MODE).NE.1) GOTO 30              00000240
      CALL UNPACK (ARG2,MODE,ISI,ISU)                                   00000250
      IF(MODE.LT.1.OR.MODE.GT.20.OR.IS(MODE).NE.1) GOTO 30              00000260
      CALL UNPACK (ARG3,MODE,ISI,ISU)                                   00000270
      IF(MODE.LT.1.OR.MODE.GT.20.OR.IS(MODE).NE.1) GOTO 30              00000280
      RES(1)=ARG1(1)*(ARG2(2)*ARG3(3)-ARG2(3)*ARG3(2))                  00000290
     1   +ARG1(2)*(ARG2(3)*ARG3(1)-ARG2(1)*ARG3(3))                     00000300
     2   +ARG1(3)*(ARG2(1)*ARG3(2)-ARG2(2)*ARG3(1))                     00000310
      RETURN                                                            00000320
C     'AT LEAST ONE OF THE VECTORS UNDEFINED OR WRONG INPUT'            00000330
   30 CALL ERROR(54,'SPATF   ')                                         00000340
      CALL UNDEF(RES(1))                                                00000350
      RETURN                                                            00000360
      END                                                               00000370
**** MODULE = AUXILARY ****
**** SOURCE FILE : AFORM000.ORG   ***
*
                                                                        00000100
*                                                                       00000200
*  * AFORM *  FORTRAN 77 SUBROUTINE  9/9/86  M.D.LIPSCOMBE              00000300
*                                                                       00000400
*  PURPOSE:  TO FORM INDISCRIMINATE VALUES INTO ONE ARRAY               00000500
*                                                                       00000600
*  CALLING SEQUENCE:                                                    00000700
*                   CALL AFORM(ARR,VALS,L)                              00000800
*                                                                       00000900
*                                                                       00001000
*  ARGUMENTS:                                                           00001100
*                   TYPE       DESCRIPTION                              00001200
*                                                                       00001300
*  ARR      DOUBLE PRECISION   ARRAY TO CONTAIN GATHERED INDISCRIMINATE 00001400
*  VALS     DOUBLE PRECISION   INDISCRIMINATE VALUES (POSSIBLY PACKED)  00001500
*  L        INTEGER            NUMBER OF CONTIGUOUS 8-BYTE WORDS HOLDING00001600
*                                                                       00001700
*                                                                       00001800
*  GLOBAL VARIABLES:  NONE                                              00001900
*                                                                       00002000
*  LOCAL VARIABLES:  NONE                                               00002100
*                                                                       00002200
*  FILES:  NONE                                                         00002300
*                                                                       00002400
*  SUBSIDIARIES:  NONE                                                  00002500
*                                                                       00002600
*                                                                       00002700
      SUBROUTINE AFORM(ARR,VALS,L)                                      00002800
C                                                                       00002900
      DOUBLE PRECISION ARR(100),VALS(L)                                 00003000
C                                                                       00003100
      DO 20 I=1,L                                                       00003200
      ARR(I)=VALS(I)                                                    00003300
   20 CONTINUE                                                          00003400
C                                                                       00003500
      RETURN                                                            00003600
      END                                                               00003700
**** SOURCE FILE : M0000695.V06   ***
*
C                                                                       A0240000
C              FORTRAN SUBROUTINE APT024                                A0240010
C                                                                       A0240020
C PURPOSE      TO SET XECUTION FLAGS SPECIFIED BY THE PPOPTN STATEMENT. A0240030
C                                                                       A0240040
C LINKAGE      CALL APT024(IARG)                                        A0240050
C                                                                       A0240060
C ARGUMENT     IARG  =1, REFMOT ON                                      A0240070
C                    =2, REFMOT OFF                                     A0240080
C                    =3, ALTMLT ON                                      A0240090
C                    =4, ALTMLT OFF                                     A0240100
C                                                                       A0240110
      SUBROUTINE APT024(IARG)                                           A0240120
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A0240130
C                                                                       A0240140
      INCLUDE 'TOTAL.INC'                                               A0240201
      INCLUDE 'LDEF.INC'                                                A0240218
C                                                                       A0240219
      LOGICAL CILPRT                                                    A0240252
      COMMON/CONST/KCOMT,KCOMF,CILPRT,KCBN                              A0240253
      INCLUDE 'DARRAY.INC'                                              A0240255
C                                                                       A0240260
      GO TO (1,2,3,4,5,6),IARG                                          A0240270
    1 REFMOT=.TRUE.                                                     A0240280
      GO TO 9                                                           A0240290
    2 REFMOT=.FALSE.                                                    A0240300
      GO TO 9                                                           A0240310
    3 ALTMLT=.TRUE.                                                     A0240320
      GO TO 9                                                           A0240330
    4 ALTMLT=.FALSE.                                                    A0240340
      GO TO 9                                                           A0240350
    5 CILPRT=.TRUE.                                                     A0240360
      CALL CFORM('0 CILPRT TURNED ON',DARRAY,1,18)                      A0240370
      CALL CPRINT(DARRAY)                                               A0240380
      GO TO 9                                                           A0240390
    6 CILPRT=.FALSE.                                                    A0240400
      CALL CFORM('0 CILPRT TURNED OFF',DARRAY,1,19)                     A0240410
      CALL CPRINT(DARRAY)                                               A0240420
      GO TO 9                                                           A0240430
    9 CONTINUE                                                          A0240440
      RETURN                                                            A0240450
      END                                                               A0240460
**** SOURCE FILE : M0000825.V03   ***
*
C                                                                       A0750001
C.....FORTRAN SUBROUTINE             APT075...              3/1/68   GK A0750002
C                                                                       A0750010
C              FORTRAN SUBROUTINE APT075                                A0750020
C                                                                       A0750030
C PURPOSE      TO GENERATE THE SOLUTION OF THREE SIMULTANEOUS           A0750040
C              EQUATIONS IN THREE UNKNOWS.                              A0750050
C                                                                       A0750060
C LINKAGE      CALL APT075 (RESULT, AIN)                                A0750070
C                                                                       A0750080
C ARGUMENTS    RESULT              ARRAY TO CONTAIN VALUES OF X, Y,     A0750090
C                                  AND Z AS RESULT (1), RESULT (2),     A0750100
C                                  AND RESULT (3), RESPECTIVELY.        A0750110
C              AIN (1-3, 1)        COEFFICIENTS OF X, Y, Z IN THE       A0750120
C                                  FIRST EQUATION                       A0750130
C              AIN (1-3, 2)        COEFFICIENTS OF X, Y, Z IN THE       A0750140
C                                  SECOND EQUATION                      A0750150
C              AIN (1-3, 3)        COEFFICIENTS OF X, Y, Z IN THE       A0750160
C                                  THIRD EQUATION                       A0750170
C              AIN (4, 1-3)        CONSTANT TERM IN EACH OF THE         A0750180
C                                  THREE EQUATIONS                      A0750190
C                                                                       A0750200
C SUBSIDIARIES TYPE                ENTRY                                A0750210
C              SUBROUTINE          CROSS                                A0750220
C              SUBROUTINE          DOTF                                 A0750230
C                                                                       A0750240
      SUBROUTINE APT075 (RESULT,AIN)                                    A0750250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0750260
      DIMENSION RESULT(3),AIN(4,3),ST(3,4)                              A0750270
C                                                                       A0750280
C                                                                       A0750290
C                                                                       A0750300
      INCLUDE 'TOTAL.INC'                                               A0750441
      INCLUDE 'DEF.INC'                                                 A0750540
      INCLUDE 'DSHAR3.INC'                                              A0750630
      INCLUDE 'ZNUMBR.INC'                                              A0750738
      INCLUDE 'IDEF.INC'                                                A0750819
      INCLUDE 'ISHR16.INC'                                              A0750882
      INCLUDE 'KNUMBR.INC'                                              A0751044
C                                                                       A0751090
      EQUIVALENCE (ST(1,1),SC(1))                                       A0751100
C                                                                       A0751110
C                                                                       A0751120
C...     STORE ARRAY IN S, INTERCHANGING ROWS AND COLUMNS               A0751130
C                                                                       A0751140
      DO 10 I=1,3                                                       A0751150
      DO 10 J=1,4                                                       A0751160
   10 ST(I,J) = AIN(J,I)                                                A0751170
C                                                                       A0751180
C...     SOLVE EQUATIONS BY KRAMER'S RULE                               A0751190
C                                                                       A0751200
      CALL CROSS(ST(1,2) ,ST(1,3),V)                                    A0751210
      CALL DOTF(DENOM,ST(1,1),V)                                        A0751220
      IF (DABS(DENOM).LE.Z1EM6) GO TO 30                                A0751230
      CALL DOTF (RESULT(1),V,ST(1,4))                                   A0751240
      RESULT(1)=RESULT(1)/DENOM                                         A0751250
      CALL CROSS (ST(1,4),ST(1,3),V)                                    A0751260
      CALL DOTF (RESULT(2),V,ST(1,1))                                   A0751270
      RESULT(2)=RESULT(2)/DENOM                                         A0751280
      CALL CROSS (ST(1,2),ST(1,4),V)                                    A0751290
      CALL DOTF (RESULT(3),V,ST(1,1))                                   A0751300
      RESULT(3)=RESULT(3)/DENOM                                         A0751310
      GO TO 99                                                          A0751311
   30 IERROR=K52                                                        A0751320
   99 RETURN                                                            A0751330
       END                                                              A0751340
**** SOURCE FILE : M0000826.V02   ***
*
C.....FORTRAN SUBROUTINE             APT076...              5/1/68   GK A0760000
C                                                                       A0760010
C              FORTRAN SUBROUTINE APT076                                A0760020
C                                                                       A0760030
C PURPOSE      TO GENERATE THE PRODUCT OF TWO SQUARE                    A0760040
C              MATRICES OF EQUAL DIMENSION AS A SQUARE                  A0760050
C              MATRIX OF THE SAME DIMENSION.                            A0760060
C                                                                       A0760070
C LINKAGE      CALL APT076 (RESULT, XM1, XM2, MN)                       A0760080
C                                                                       A0760090
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE RESULTING MATRIX            A0760100
C                      STORED BY ROWS                                   A0760110
C              XM1     ARRAY CONTAINING THE FIRST INPUT                 A0760120
C                      MATRIX STORED BY ROWS                            A0760130
C              XM2     ARRAY CONTAINING THE SECOND INPUT                A0760140
C                      MATRIX STORED BY ROWS                            A0760150
C              N       NUMBER OF ROWS (OR COLUMNS) IN THE               A0760160
C                      MATRICES                                         A0760170
C                                                                       A0760180
C SUBSIDIARIES NONE                                                     A0760190
C                                                                       A0760200
      SUBROUTINE APT076 (RESULT,XM1,XM2,MN)                             A0760210
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0760220
      DIMENSION RESULT(MN,MN),XM1(MN,MN),XM2(MN,MN)                     A0760230
C                                                                       A0760240
C                                                                       A0760250
C                                                                       A0760260
      INCLUDE 'TOTAL.INC'                                               A0760401
      INCLUDE 'DEF.INC'                                                 A0760489
      INCLUDE 'DSHAR3.INC'                                              A0760569
      INCLUDE 'ZNUMBR.INC'                                              A0760665
      INCLUDE 'ISHR16.INC'                                              A0760721
C                                                                       A0760770
C                                                                       A0760780
      K=MN                                                              A0760800
      DO 10 I=1,K                                                       A0760810
      DO 10 J=1,K                                                       A0760820
      RESULT(I,J) = Z0                                                  A0760830
C                                                                       A0760840
C...     ELEMENT I,J IS THE PRODUCT OF J-TH ROW OF MX1 WITH I-TH COLUMN A0760850
C        OF MX2                                                         A0760860
      DO 10 M=1,K                                                       A0760870
   10 RESULT(I,J) = RESULT(I,J) +XM1(M,J)*XM2(I,M)                      A0760880
      RETURN                                                            A0760890
       END                                                              A0760900
**** SOURCE FILE : M0000827.V03   ***
*
C                                                                       A0770001
C.....FORTRAN SUBROUTINE             APT077...              5/1/68   GK A0770002
C                                                                       A0770010
C              FORTRAN SUBROUTINE APT077                                A0770020
C                                                                       A0770030
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE            A0770040
C              TRANSFORMATION OF THE CANONICAL FORM OF A LINE           A0770050
C              OR PLANE WHEN A REFSYS STATEMENT IS IN EFFECT.           A0770060
C                                                                       A0770070
C LINKAGE      CALL APT077 (SI, IE)                                     A0770080
C                                                                       A0770090
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE        A0770100
C                      TRANSFORMED.                                     A0770110
C              IE      INTEGER WHICH INDICATES TRANSFORMATION           A0770120
C                      DIRECTION, AND AN ERROR CODE NUMBER WHEN         A0770130
C                      AN INPUT LINE IS TO BE CHECKED TO BE SURE        A0770140
C                      IT IS A VERTICAL PLANE.                          A0770150
C                      IE + O TRANSFORM LOCAL TO BASE                   A0770160
C                      IE = O TRANSFORM BASE TO LOCAL                   A0770170
C                      IE = O TRANSFORM BASE TO LOCAL AND CHECK         A0770180
C                          FOR VERTICAL PLANE                           A0770190
C                                                                       A0770200
C SUBSIDIARIES TYPE                ENTRY                                A0770210
C              SUBROUTINE          TRANSF                               A0770220
C                                                                       A0770230
      SUBROUTINE APT077 (SI,IE)                                         A0770240
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0770250
      DIMENSION SI(10)                                                  A0770260
C                                                                       A0770270
C                                                                       A0770280
C                                                                       A0770290
      INCLUDE 'TOTAL.INC'                                               A0770431
      INCLUDE 'DEF.INC'                                                 A0770519
      INCLUDE 'DSHAR3.INC'                                              A0770599
      INCLUDE 'KNUMBR.INC'                                              A0770743
C                                                                       A0770780
C                                                                       A0770790
      CALL TRANSF (L,SI,K4,K4,IE)                                       A0770810
       RETURN                                                           A0770820
       END                                                              A0770830
**** SOURCE FILE : M0000828.V02   ***
*
C.....FORTRAN SUBROUTINE             APT078...              5/1/68   GK A0780000
C                                                                       A0780010
C              FORTRAN SUBROUTINE APT078                                A0780020
C                                                                       A0780030
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE            A0780040
C              TRANSFORMATION OF THE CANONICAL FORM OF A VECTOR         A0780050
C              WHEN A REFSYS STATEMENT IS IN EFFECT.                    A0780060
C                                                                       A0780070
C LINKAGE      CALL APT078 (SI, IE)                                     A0780080
C                                                                       A0780090
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE        A0780100
C                      TRANSFORMED.                                     A0780110
C              IE      INTEGER INDICATING TRANSFORMATION DIRECTION.     A0780120
C                      IE + O TRANSFORM LOCAL TO BASE                   A0780130
C                      IE = O TRANSFORM BASE TO LOCAL                   A0780140
C                                                                       A0780150
C SUBSIDIARIES TYPE                ENTRY                                A0780160
C              SUBROUTINE          TRANSF                               A0780170
C                                                                       A0780180
      SUBROUTINE APT078 (SI,IE)                                         A0780190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0780200
      DIMENSION SI(10)                                                  A0780210
C                                                                       A0780220
C                                                                       A0780230
C                                                                       A0780240
      INCLUDE 'TOTAL.INC'                                               A0780381
      INCLUDE 'DEF.INC'                                                 A0780469
      INCLUDE 'DSHAR3.INC'                                              A0780549
      INCLUDE 'KNUMBR.INC'                                              A0780693
C                                                                       A0780730
      CALL TRANSF (V,SI,K3,K3,IE)                                       A0780740
       RETURN                                                           A0780750
       END                                                              A0780760
**** SOURCE FILE : M0000829.V02   ***
*
C.....FORTRAN SUBROUTINE             APT079...              5/1/68   GK A0790000
C                                                                       A0790010
C              FORTRAN SUBROUTINE APT079                                A0790020
C                                                                       A0790030
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE            A0790040
C              TRANSFORMATION OF THE CANONICAL FORM OF A QUADRIC        A0790050
C              SURFACE WHEN A REFSYS STATEMENT IS IN EFFECT.            A0790060
C                                                                       A0790070
C LINKAGE      CALL APT079 (SI, IE)                                     A0790080
C                                                                       A0790090
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE        A0790100
C                      TRANSFORMED.                                     A0790110
C              IE      INTEGER INDICATING TRANSFORMATION DIRECTION.     A0790120
C                      IE + O TRANSFORM LOCAL TO BASE                   A0790130
C                      IE = O TRANSFORM BASE TO LOCAL                   A0790140
C                                                                       A0790150
C SUBSIDIARIES TYPE                ENTRY                                A0790160
C              SUBROUTINE          TRANSF                               A0790170
C                                                                       A0790180
      SUBROUTINE APT079 (SI,IE)                                         A0790190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0790200
      DIMENSION SI(10)                                                  A0790210
C                                                                       A0790220
C                                                                       A0790230
C                                                                       A0790240
      INCLUDE 'TOTAL.INC'                                               A0790381
      INCLUDE 'DEF.INC'                                                 A0790469
      INCLUDE 'DSHAR3.INC'                                              A0790549
      INCLUDE 'KNUMBR.INC'                                              A0790693
C                                                                       A0790730
C                                                                       A0790740
      CALL TRANSF (G,SI,K1,K10,IE)                                      A0790760
       RETURN                                                           A0790770
       END                                                              A0790780
**** SOURCE FILE : M0000830.V03   ***
*
C.....FORTRAN SUBROUTINE  ....APT081         8/68                    AR A0810001
C.....FORTRAN SUBROUTINE             APT081...              5/1/68   GK A0810002
C                                                                       A0810010
C              FORTRAN SUBROUTINE APT081                                A0810020
C                                                                       A0810030
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE            A0810040
C              TRANSFORMATION OF THE CANONICAL FORM OF A                A0810050
C              POINT OR SPHERE WHEN A REFSYS STATEMENT IS               A0810060
C              IN EFFECT.                                               A0810070
C                                                                       A0810080
C LINKAGE      CALL APT081 (SI, IE)                                     A0810090
C                                                                       A0810100
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE        A0810110
C                      TRANSFORMED.                                     A0810120
C              IE      INTEGER INDICATING TRANSFORMATION DIRECTION.     A0810130
C                      IE + O TRANSFORM LOCAL TO BASE                   A0810140
C                      IE = O TRANSFORM BASE TO LOCAL                   A0810150
C                                                                       A0810160
C SUBSIDIARIES TYPE                ENTRY                                A0810170
C              SUBROUTINE          TRANSF                               A0810180
C                                                                       A0810190
      SUBROUTINE APT081 (SI,IE)                                         A0810200
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0810210
      DIMENSION SI(10)                                                  A0810220
C                                                                       A0810230
C                                                                       A0810240
C                                                                       A0810250
      INCLUDE 'TOTAL.INC'                                               A0810391
      INCLUDE 'DEF.INC'                                                 A0810479
      INCLUDE 'DSHAR3.INC'                                              A0810559
      INCLUDE 'KNUMBR.INC'                                              A0810703
C                                                                       A0810740
C                                                                       A0810750
      CALL TRANSF(P,SI,K2,K4,IE)                                        A0810770
       RETURN                                                           A0810780
       END                                                              A0810790
**** SOURCE FILE : M0000831.V02   ***
*
C.....FORTRAN SUBROUTINE             APT083...              5/1/68   GK A0830000
C                                                                       A0830010
C              FORTRAN SUBROUTINE APT083                                A0830020
C                                                                       A0830030
C PURPOSE      TO SET UP THE COMPLETE PARAMETER LIST FOR THE            A0830040
C              TRANSFORMATION OF THE CANONICAL FORM OF A                A0830050
C              CIRCLE, CONE OR CYLINDER WHEN A REFSYS STATE-            A0830060
C              MENT IS IN EFFECT.                                       A0830070
C                                                                       A0830080
C LINKAGE      CALL APT083 (SI, IE)                                     A0830090
C                                                                       A0830100
C ARGUMENTS    SI      ARRAY CONTAINING THE CANONICAL FORM TO BE        A0830110
C                      TRANSFORMED                                      A0830120
C              IE      INTEGER WHICH INDICATES TRANSFORMATION           A0830130
C                      DIRECTION AND AN ERROR CODE NUMBER WHEN AN       A0830140
C                      INPUT CIRCLE IS TO BE CHECKED TO BE SURE IT      A0830150
C                      IS A VERTICAL CYLINDER                           A0830160
C                      IE + O TRANSFORM LOCAL TO BASE                   A0830170
C                      IE = O TRANSFORM BASE TO LOCAL                   A0830180
C                      IE = O TRANSFORM BASE TO LOCAL AND CHECK         A0830190
C                             FOR VERTICAL CYLINDER.                    A0830200
C                                                                       A0830210
C SUBSIDIARIES TYPE                ENTRY                                A0830220
C              SUBROUTINE          TRANSF                               A0830230
C                                                                       A0830240
      SUBROUTINE APT083 (SI,IE)                                         A0830250
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0830260
      DIMENSION SI(10)                                                  A0830270
C                                                                       A0830280
C                                                                       A0830290
C                                                                       A0830300
      INCLUDE 'TOTAL.INC'                                               A0830431
      INCLUDE 'DEF.INC'                                                 A0830519
      INCLUDE 'DSHAR3.INC'                                              A0830599
      INCLUDE 'KNUMBR.INC'                                              A0830743
C                                                                       A0830780
      CALL TRANSF (C,SI,K5,K7,IE)                                       A0830790
       RETURN                                                           A0830800
       END                                                              A0830810
**** SOURCE FILE : M0000832.V04   ***
*
C                                                                       A0850001
C.....FORTRAN SUBROUTINE             APT085...              5/1/68   GK A0850002
C                                                                       A0850010
C              FORTRAN SUBROUTINE APT085                                A0850020
C                                                                       A0850030
C PURPOSE      TO SET THE REFSYS FLAG, REFFLG, .FALSE. AND              A0850040
C              SET UP THE CANONICAL FORM OF THE ZSURF PLANE             A0850050
C              EQUATION IN THE LOCAL COORDINATE SYSTEM EQUAL            A0850060
C              TO THE CANONICAL FORM IN THE BASE SYSTEM.                A0850070
C                                                                       A0850080
C LINKAGE      CALL APT085                                              A0850090
C                                                                       A0850100
C ARGUMENTS    NONE                                                     A0850110
C                                                                       A0850120
C SUBSIDIARIES TYPE                ENTRY                                A0850130
C              SUBROUTINE          ZSURF                                A0850140
C                                                                       A0850150
      SUBROUTINE APT085                                                 A0850160
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0850170
C                                                                       A0850180
C                                                                       A0850190
C                                                                       A0850200
C                                                                       A0850210
      INCLUDE 'TOTAL.INC'                                               A0850351
      INCLUDE 'DEF.INC'                                                 A0850451
      INCLUDE 'LDEF.INC'                                                A0850501
C                                                                       A0850520
C                                                                       A0850530
C                                                                       A0850540
      DIMENSION SC(4)                                                   A0850550
      REFFLG = .FALSE.                                                  A0850560
      IF (ZFLAG) GOTO 20                                                A0850562
      DO 10 I=1,4                                                       A0850564
   10 SC(I) = REF(2,I)                                                  A0850566
      CALL ZSURF(SC)                                                    A0850570
   20 RETURN                                                            A0850580
       END                                                              A0850590
**** SOURCE FILE : M0000833.V02   ***
*
C.....FORTRAN SUBROUTINE             APT086...              5/1/68   GK A0860000
C                                                                       A0860010
C              FORTRAN SUBROUTINE APT086                                A0860020
C                                                                       A0860030
C PURPOSE      TO GENERATE THE CANONICAL FORM OF A MATRIX AS            A0860040
C              THE TRANSPOSE OF A GIVEN SQUARE MATRIX.                  A0860050
C                                                                       A0860060
C LINKAGE      CALL APT086 (RESULT, AIN, NM)                            A0860070
C                                                                       A0860080
C ARGUMENTS    RESULT  ARRAY TO CONTAIN THE CANONICAL FORM OF           A0860090
C                      THE RESULTING MATRIX                             A0860100
C              AIN     ARRAY TO CONTAIN THE CANONICAL FORM OF           A0860110
C                      THE INPUT MATRIX                                 A0860120
C              NM      INTEGER CONTAINING THE NUMBER OF ROWS            A0860130
C                      IN THE INPUT MATRIX                              A0860140
C                                                                       A0860150
C SUBSIDIARIES NONE                                                     A0860160
C                                                                       A0860170
      SUBROUTINE APT086 (RESULT,AIN,NM)                                 A0860180
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0860190
      DIMENSION RESULT(NM,NM),AIN(NM,NM)                                A0860200
C                                                                       A0860210
C                                                                       A0860220
C                                                                       A0860230
C                                                                       A0860240
      INCLUDE 'TOTAL.INC'                                               A0860371
      INCLUDE 'ISHR16.INC'                                              A0860411
C                                                                       A0860430
C                                                                       A0860440
C                                                                       A0860450
      DO 10 I=1,NM                                                      A0860470
      DO 10 J=1,NM                                                      A0860480
   10 RESULT(J,I) = AIN(I,J)                                            A0860490
      RETURN                                                            A0860500
       END                                                              A0860510
**** SOURCE FILE : M0000834.V02   ***
*
C.....FORTRAN SUBROUTINE             APT087...              5/1/68   GK A0870000
C                                                                       A0870010
C              FORTRAN SUBROUTINE APT087                                A0870020
C                                                                       A0870030
C PURPOSE      TO GENERATE THE POLAR COORDINATES OF A GIVEN             A0870040
C              POINT.                                                   A0870050
C                                                                       A0870060
C LINKAGE      CALL APT087 (RESULT, RECT)                               A0870070
C                                                                       A0870080
C ARGUMENTS    RESULT (1)          DISTANCE FROM ORIGIN TO INPUT POINT  A0870090
C              RESULT (2)          ANGLE IN DEGREES BETWEEN INPUT POINT A0870100
C                                  AND POSITIVE X-AXIS                  A0870110
C              RECT                ARRAY CONTAINING THE CANONICAL FORM  A0870120
C                                  OF INPUT POINT IN RECTANGULAR        A0870130
C                                  COORDINATES                          A0870140
C                                                                       A0870150
C SUBSIDIARIES TYPE                ENTRY                                A0870160
C              REAL FUNCTION       ATAN2                                A0870170
C              LOGICAL FUNCTION    CKDEF                                A0870180
C              REAL FUNCTION       SQRT                                 A0870190
C                                                                       A0870200
      SUBROUTINE APT087 (RESULT,RECT)                                   A0870210
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A0870220
      DIMENSION RESULT(2), RECT(2)                                      A0870230
      LOGICAL CKDEF                                                     A0870240
C                                                                       A0870250
C                                                                       A0870260
C                                                                       A0870270
C                                                                       A0870280
      INCLUDE 'TOTAL.INC'                                               A0870421
      INCLUDE 'DSHAR3.INC'                                              A0870511
      INCLUDE 'ZNUMBR.INC'                                              A0870619
      INCLUDE 'LDEF.INC'                                                A0870664
C                                                                       A0870690
C                                                                       A0870700
C                                                                       A0870710
C                                                                       A0870730
C...     CHANGE RECTANGULAR COORDINATES TO POLAR - RESULT(1)=RAD,       A0870740
C        RESULT(2) = ANGLE                                              A0870750
      SC(1) = RECT(1)                                                   A0870760
      SC(2) = RECT(2)                                                   A0870770
      UNFLAG = CKDEF(SC)                                                A0870780
      RESULT(1)=DSQRT(SC(1)**2+SC(2)**2)                                A0870790
      RESULT(2)= Z0                                                     A0870800
      IF(RESULT(1).NE.Z0) RESULT(2)=DATAN2(SC(2),SC(1))/DEGRAD          A0870810
      RETURN                                                            A0870820
       END                                                              A0870830
**** SOURCE FILE : M0001865.W01   ***
*
      SUBROUTINE  APT094(LDAFLG,LDAARY,CANLOC)                          00000100
C                                                                       00000150
C PURPOSE      THE PURPOSE OF THIS SUBROUTINE IS TO READ OR WRITE LARGE 00000200
C              DATA ARRAY CANONICAL FORMS IN OR OUT OF UNLABELED COMMON 00000300
C              AND TO UNDEFINE ERRONEOUS L.D.A. CANONICAL FORMS.        00000400
C ARGUMENTS    LDAFLG        =1, IF WRITE                               00000500
C                            =2, IF READ INTO A SPECIFIC LOCATION.(USED 00000600
C                                  TO INCORPORATE PREVIOUSLY DEFINED    00000700
C                                  CANONICAL FORMS INTO A NEWLY CREATED 00000800
C                                  CANONICAL FORM)                      00000900
C                            =3, IF READ INTO NEXT AVAILABLE UNLABELED  00001000
C                                COMMON AREA.(USED TO RETRIEVE CANONICAL00001100
C                                  FORMS FOR USE IN ARLEM MOTION        00001200
C                                  STATEMENT PROCESSSING)               00001300
C                            =4, IF DEFINITION ERROR.                   00001400
C                            =5, LIKE =1 WITHOUT WRITING:FOR SPACE-     00001410
C                                RESERVATION IN BLANK COMMON FOR NEW    00001420
C                                GEOMETRY OR OTHER USE OF SPACE BEGINN- 00001430
C                                ING AT >BCANON(1)< .                   00001440
C                            =6, UPDATE IN PLACE (ON FILE)              00001450
C                            =7, READ THE FIRST TWO WORDS OF DATA       00001460
C              LDAARY        SURFACE                                    00001500
C              CANLOC        THE LOCATION IN UNLABELED COMMON FROM WHICH00001600
C                            TO READ OR WRITE. IF LDAFLG = 3, THEN THE  00001700
C                            CANONICAL FORM IS READ INTO THE NEXT       00001800
C                            AVAILABLE LOCATION AND ITS CANON INDEX IS  00001900
C                            RETURNED IN CANLOC.                        00002000
C SUBSIDIARIES MACHINE LANGUAGE SUBROUTINE        UNDEF                 00002100
C              FORTRAN SUBROUTINE                 ERROR                 00002200
C                                                                       00002300
C LOCAL VARIABLES                                                       00002400
C              LDATOP        BCANON INDEX INDICATING THE STARTING       00002500
C                            POSITION FOR THE NEXT CANONICAL FORM TO    00002600
C                            BE READ INTO CORE.                         00002700
C              LDACOR        ARRAY CONTAINING THE RECORD NUMBER AND     00002800
C                            BCANON INDEX OF EACH CANONICAL FORM        00002900
C                            CURRENTLY IN CORE. THE ORDER OF LDACOR     00003000
C                            ENTRIES CORRESPONDS TO THE RELATIVE        00003100
C                            POSITION OF THEIR ASSOCIATED FORMS IN      00003200
C                            BCANON.                                    00003300
C              CORTOP        LDACOR INDEX INDICATING RELATIVE POSITION  00003400
C                            OF FORM BEGINNING AT LDATOP IN BCANON.     00003500
C              NOLDAS        TOTAL NUMBER OF FORMS CURRENTLY IN CORE.   00003600
C                                                                       00003700
C              RECNUM        LAST RECORD NUMBER ASSIGNED TO A FORM.     00003800
C              KANIND        CANONICAL FORM INDEX IN BLANK COMMON       00003810
C NOTES        THE FIRST 40 POSITIONS OF UNLABELED COMMON ARE RESERVED  00003900
C              FOR NON LARGE DATA ARRAY CANONICAL FORMS OF SURFACES     00004000
C              USED IN A MOTION STATEMENT AND ARE REFERED TO BY         00004100
C              REFERENCING THE CANON ARRAY. THE REMAINING SPACE IS USED 00004200
C              FOR LARGE DATA ARRAY CANONICAL FORM STORAGE AND IS       00004300
C              REFERENCED BY REFERING TO THE BCANON ARRAY. MAXLDA       00004400
C              CONTAINS THE SIZE OF BCANON.                             00004500
C IMPLIED ASSUMPTION.  IF LDAFLG=1 FOR WRITE, IT IS ASSUMED THAT        00004600
C         THE CANON FORM IS LOCATED IN CANON(41) ON, EVEN THOUGH        00004700
C         LARGE DATA IS PASSED AS AN ADDRESS.                           00004800
C                                                                       00004900
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             00005100
      DOUBLE PRECISION LDAARY                                           00005200
C                                                                       00005310
      INCLUDE 'BLANKCOM.INC'                                            00005320
C                                                                       00005330
      INCLUDE 'SYMFIL.INC'                                              00005410
      COMMON/MAXLDA/MAXLDA                                              00005800
C                                                                       00006000
      INCLUDE 'TOTAL.INC'                                               00007201
      INCLUDE 'IDEF.INC'                                                00008001
C                                                                       00008100
C   STORAGE ADDRESS FUNCTION                                            00008130
      INTEGER ADDRSS                                                    00008170
C---       LOCAL VARIABLES                                              00008200
      DIMENSION LDACOR(2,40),LDA(2),LDAARY(2),CANLOC(*)                 00008300
C                                                                       00008400
      EQUIVALENCE (JJJ,AAA)                                             00008500
      INTEGER RECNUM,CORTOP,KANIND                                      00008600
      DOUBLE PRECISION JUNK                                             00008700
      LOGICAL CKDEF                                                     00008710
C... SAVE LOCAL VARIABLES                                               00008720
      SAVE LDACOR,CORTOP,NOLDAS,KANIND                                  00008730
C                                                                       00008800
      DATA RECNUM,NOLDAS /2*0/                                          00008900
      DATA  LDACOR,MAXLDC /80*0,40/                                     00009000
C                                                                       00009100
C---      DETERMINE IF A READ, WRITE, OR AN UNDEFINITION.               00009200
      LDA(2)=LDAARY(2)                                                  00009300
      IF (.NOT.CKDEF(LDAARY(1))) THEN                                   00009310
      LDA(1)=LDAARY(1)                                                  00009400
      ENDIF                                                             00009410
      GO TO (10,200,220,500,10,700,800), LDAFLG                         00009500
C RETURN, WHEN WRONG LDAFLG                                             00009540
      RETURN                                                            00009560
C---      WRITE NEWLY CREATED CANONICAL FORM.                           00009600
C---      ASSIGN THE C.F. A RECORD NUMBER.                              00009700
   10 RECNUM=-5                                                         00009800
      CALL TAPOP(AXFILE,RECNUM)                                         00009900
      CANLOC(1)=RECNUM                                                  00010000
      LDA(1) = RECNUM                                                   00010100
C---      WRITE THE CANONICAL FORM AND UPDATE THE DICTIONARY OF CANONICA00010200
C---      FORMS CURRENTLY IN MEMORY.                                    00010300
      NR=0                                                              00010400
C---      BRANCH TO ERROR IF LDA EXCEEDED SPACE AVAILABLE               00010500
      IF(LDA(2).GE.MAXLDA) GO TO 410                                    00010600
      IF(LDAFLG.EQ.5) GO TO 12                                          00010650
      J=LDA(2)*2                                                        00010700
C---      COMPUTE R*8 FIELD INDEX OF CANONICAL FORM IN BLANK COMMON     00010720
      KANIND=(ADDRSS(LDAARY(1))-ADDRSS(CANON(1)))/8+1                   00010740
C---      REPLACE ON EXTERNAL STORAGE RECORD NUMBER BY STORAGE INDEX    00010760
      CANLOC(1)=KANIND                                                  00010780
      CALL AWRITE(AXFILE,NR,CANLOC(1),J,IR)                             00010800
C---      RESTORE RECORD NUMBER                                         00010820
      CANLOC(1)=LDA(1)                                                  00010830
      IF(IR.NE.0) GOTO 409                                              00010850
   12 LDATOP = 1                                                        00010900
      CORTOP = 1                                                        00011000
C  KONTROLLE OB DIE OBERFLAECHE AN DER VERMUTETEN STELLE LIEGT          00011020
      DO 11 I=1,10                                                      00011030
      IF(CANLOC(I).NE.BCANON(I))GOTO 235                                00011040
   11 CONTINUE                                                          00011050
      GO TO 250                                                         00011100
C---      READ A CANONICAL FORM INTO A SPECIFIC LOCATION.               00011200
C---      READ THE CANONICAL FORM AND RETURN TO CALLER.                 00011300
  200 J=LDA(2)*2                                                        00011400
      CALL AREAD(AXFILE,LDA(1),CANLOC(1),J,IR)                          00011500
      KANIND=CANLOC(1)                                                  00011550
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5) GO TO 1100               00011600
      CANLOC(1)=LDA(1)                                                  00011650
      GO TO 9999                                                        00011700
C                                                                       00011800
C---      READ A CANONICAL FORM INTO THE NEXT AVAILABLE AREA.           00011900
C---      CHECK TO SEE IF CANONICAL FORM IS ALREADY IN CORE.            00012000
  220 AAA=CANLOC(1)                                                     00012100
      IF(NOLDAS.EQ.0) GO TO 231                                         00012200
      DO 230 I=1,NOLDAS                                                 00012300
      IF (LDACOR(1,I) .NE. LDA(1))  GO TO 230                           00012400
      JJJ=LDACOR(2,I)+40                                                00012500
      CANLOC(1)=AAA                                                     00012600
      GO TO 9999                                                        00012700
  230 CONTINUE                                                          00012800
  231 CONTINUE                                                          00012900
C                                                                       00013000
C---      CANONICAL FORM IS NOT IN CORE,POSITION TAPE TO FORM RECORD    00013100
C---      READ FORM INTO NEXT AVAILABLE LOCATION IN UNLABELED COMMON    00013200
C---      CHECK IF FORM WILL FIT ABOVE LDATOP                           00013300
  235 IF(MAXLDA-LDATOP.LT.LDA(2)) GO TO 400                             00013400
C                                                                       00013500
C---      FORM WILL FIT                                                 00013600
  240 JJJ=LDATOP+40                                                     00013700
      CANLOC(1)=AAA                                                     00013800
C   LDACOR(2,MAXLDC) KANN UEBERSPEICHERT WERDEN                         00013810
      IF(CORTOP.GE.MAXLDC)GOTO 400                                      00013820
      J=LDA(2)*2                                                        00013900
      CALL AREAD(AXFILE,LDA(1),BCANON(LDATOP),J,IR)                     00014000
      KANIND=BCANON(LDATOP)                                             00014050
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5) GO TO 1100               00014100
      BCANON(LDATOP)=LDA(1)                                             00014150
      CORTOP = CORTOP + 1                                               00014200
  250 K = 0                                                             00014300
C                                                                       00014400
C---      CHECK IF NEW CORTOP LESS THAN NOLDAS                          00014500
      IF (NOLDAS - CORTOP)  320,260,260                                 00014600
C---      DETERMINE THE NUMBER OF FORMS ABOVE LDATOP THAT WERE OVERLAID 00014700
  260 DO 270  N = CORTOP,NOLDAS                                         00014800
      IF(LDACOR(2,N) .GE. (LDATOP + LDA(2)))  GO TO 280                 00014900
  270 K = K + 1                                                         00015000
      GO TO 320                                                         00015100
C                                                                       00015200
C---      DETERMINE WHETHER LDACOR ENTRIES HAVE TO BE REPOSITIONED      00015300
  280 IF (K-1)  290,320,310                                             00015400
C                                                                       00015500
C---      SLIDE ENTRIES STARTING WITH CORTOP UP ONE POSITION            00015600
  290 IF(NOLDAS.LT.MAXLDC)GOTO 291                                      00015610
      K= 1                                                              00015620
      GOTO 320                                                          00015630
  291 DO 300  I = CORTOP,NOLDAS                                         00015700
      J = NOLDAS + CORTOP - I                                           00015800
      LDACOR(1,J+1) = LDACOR(1,J)                                       00015900
  300 LDACOR(2,J+1) = LDACOR(2,J)                                       00016000
      GO TO 320                                                         00016100
C                                                                       00016200
C---      SLIDE GOOD ENTRIES ABOVE CORTOP + 1 DOWN SO THAT THE FIRST GOO00016300
C---      ENTRY COINCIDES WITH CORTOP + 1                               00016400
  310 DO 315  I = N,NOLDAS                                              00016500
      J = CORTOP + 1 - N + I                                            00016600
      LDACOR(1,J) = LDACOR(1,I)                                         00016700
  315 LDACOR(2,J) = LDACOR(2,I)                                         00016800
C                                                                       00016900
C---      INSERT NEW ENTRY IN LDACOR, ADJUST LDATOP AND NOLDAS          00017000
  320 LDACOR(1,CORTOP) = LDA(1)                                         00017100
      LDACOR(2,CORTOP) = LDATOP                                         00017200
      LDATOP = LDATOP + LDA(2)                                          00017300
      NOLDAS = NOLDAS - K + 1                                           00017400
      GO TO 9999                                                        00017500
C---      FORM WILL NOT FIT ABOVE LDATOP. READ IT IN STARTING AT BCANON(00017600
C                                                                       00017700
  400 CONTINUE                                                          00017800
      IF(MAXLDA.GE.LDA(2)) GO TO 401                                    00017900
C                                                                       00018000
C NOT ENOUGH ROOM IN >LDA<                                              00018200
  410 CALL ERROR(5061,'APT094  ')                                       00018300
      GO TO 500                                                         00018400
C NOT ENOUGH ROOM ON FILE 9(EXTERNAL LDA)                               00018500
  409 CALL ERROR(5062,'APT094  ')                                       00018600
      LDATOP=1                                                          00018700
      CORTOP=1                                                          00018800
      NOLDAS=0                                                          00018900
      GOTO 510                                                          00019000
  401 CONTINUE                                                          00019200
      JJJ=41                                                            00019300
      CANLOC(1)=AAA                                                     00019400
  402 J=LDA(2)*2                                                        00019500
      CALL AREAD(AXFILE,LDA(1),BCANON(1),J,IR)                          00019600
      KANIND=BCANON(1)                                                  00019650
      IF(DABS(CANON(KANIND)-LDAARY(1)).GT.0.5)     GO TO 1100           00019700
      BCANON(1)=LDA(1)                                                  00019750
      LDATOP = 1                                                        00019800
      CORTOP = 1                                                        00019900
      GO TO 250                                                         00020000
C                                                                       00020100
C---      DEFINITION ERROR : ELIMINATE LDA FROM LIST                    00020200
C                                                                       00020300
  500 IF(NOLDAS.EQ.0)GOTO 510                                           00020400
      DO 503 I=1,NOLDAS                                                 00020450
      IF(LDACOR(1,I).EQ.LDA(1))GOTO 506                                 00020500
  503 CONTINUE                                                          00020550
      GOTO 510                                                          00020600
  506 IF(I.LE.CORTOP)CORTOP=CORTOP-1                                    00020650
      NOLDAS=NOLDAS-1                                                   00020700
      IF(NOLDAS.EQ.0)GOTO 510                                           00020720
      IF(NOLDAS.LT.I)GOTO 510                                           00020750
      DO 508 N=I,NOLDAS                                                 00020780
      LDACOR(1,N) = LDACOR(1,N+1)                                       00020800
  508 LDACOR(2,N) = LDACOR(2,N+1)                                       00020850
  510 CALL UNDEF(LDAARY(1))                                             00020900
      GO TO 9998                                                        00021000
C ERROR DURING READ OF A LARGE DATA ARRAY >LDA< FROM FILE 9.            00021100
C---      RECORD NUMBER ERROR                                           00021200
C---      PRINT ERROR MESSAGE ON VLFILE AND UNDEFINE THE CANONICAL FORM.00021300
 1100 CALL ERROR(5060,'APT094  ')                                       00021400
      GO TO 500                                                         00021500
 9999 LDAARY(1)=LDA(1)                                                  00021600
C.                                                                      00021700
 9998 CONTINUE                                                          00021800
      RETURN                                                            00021900
C  UPDATE IN PLACE                                                      00022000
  700 IF(NOLDAS.EQ.0)GOTO 730                                           00022100
      DO 710 I=1,NOLDAS                                                 00022200
      IF(LDACOR(1,I).EQ.LDA(1))GOTO 720                                 00022300
  710 CONTINUE                                                          00022400
      GOTO 730                                                          00022500
C   GEOMETRIE IN CORE                                                   00022600
  720 N=LDA(2)                                                          00022700
      NN=LDACOR(2,I)                                                    00022800
      DO 725 I=1,N                                                      00022900
      BCANON(NN)=CANLOC(I)                                              00023000
  725 NN=NN+1                                                           00023100
C  WRITE UPDATE                                                         00023200
  730 J=LDA(2)*2                                                        00023300
      NR=LDA(1)                                                         00023400
C---      COMPUTE R*8 FIELD INDEX OF CANONICAL FORM IN BLANK COMMON     00023420
      KANIND=(ADDRSS(LDAARY(1))-ADDRSS(CANON(1)))/8+1                   00023440
C---      REPLACE ON EXTERNAL STORAGE RECORD NUMBER BY STORAGE INDEX    00023460
      CANLOC(1)=KANIND                                                  00023480
      CALL AWRITE(AXFILE,NR,CANLOC(1),J,IR)                             00023500
C---      RESTORE RECORD NUMBER                                         00023530
      CANLOC(1)=LDA(1)                                                  00023570
      RETURN                                                            00023600
C---      READ SHORT                                                    00023700
  800 J=2                                                               00023800
      CALL AREAD(AXFILE,LDA(1),CANLOC(1),J,IR)                          00023900
      KANIND=CANLOC(1)                                                  00024000
      RETURN                                                            00024100
      END                                                               00024200
**** SOURCE FILE : M0002807.V05   ***
*
C.....FORTRAN SUBROUTINE               APT100    3/69      SR,DE        A1000000
      SUBROUTINE APT100(IFLAG,ARG)                                      A1000010
C                                                                       A1000020
C     PURPOSE       TO MOVE POINTS AND PATERNS USED AS ARGUMENTS        A1000030
C                   IN THE DEFINITION OF A RANDOM PATERN TO THE LDA     A1000040
C                   STAGING AREA, AND PERFORM ERROR CHECKS              A1000050
C                                                                       A1000060
C     CALLING SEQ   CALL APT100(IFLAG,ARG)                              A1000070
C                                                                       A1000080
C     ARGUMENTS     FLAG  INDICATOR SHOWING TYPE OF PROCESSING DESIRED  A1000090
C                   ARG   A POINT OR PATTERN WHOSE CANONICAL FORM IS TO A1000100
C                   BE MOVED TO THE LDA STAGING AREA                    A1000110
C                                                                       A1000120
C     RESTRICTIONS  CURRENT VERSION CANNOT HANDLE                       A1000190
C                   NESTED PATTERN DEFINITIONS                          A1000200
C                                                                       A1000210
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A1000240
      LOGICAL CKDEF                                                     A1000260
C                                                                       A1000274
      INCLUDE 'BLANKCOM.INC'                                            A1000275
C                                                                       A1000276
      DIMENSION ARG(3)                                                  A1000295
      INTEGER ITEMP(2),BCDF                                             A1000297
      DOUBLE PRECISION TEMP                                             A1000298
      EQUIVALENCE (TEMP,ITEMP(1))                                       A1000299
C                                                                       A1000300
C...                BRANCH IF NOT INITIALIZATION CALL                   A1000310
      IF(IFLAG.NE.0)GO TO 100                                           A1000330
C                             INITIALIZE COMMON STORAGE INDEX           A1000340
      INEXT=5                                                           A1000350
C                             INITIALIZE FIRST WORD OF COMMON STORAGE   A1000360
C                             AREA TO NO ERROR CONDITION                A1000370
      BCANON(1)=0.0                                                     A1000380
      GO TO 900                                                         A1000390
C...                IF ERROR HAS ALREADY OCCURRED IN THIS DEFINITION,   A1000420
C...                RETURN                                              A1000430
  100 IF(BCANON(1).LT.0.0)GO TO 900                                     A1000450
      IF(CKDEF(ARG))GO TO 800                                           A1000460
C...                BRANCH IF PATERN TYPE ARG                           A1000470
      IF(IFLAG.EQ.2)GO TO 200                                           A1000490
C...                PROCESS POINT TYPE ARG                              A1000510
C                             INSERT ALPHANUMERIC IDENTIFIER            A1000530
      ITEMP(1) = BCDF('ZPOI')                                           A1000532
      ITEMP(2) = BCDF('NT  ')                                           A1000534
      BCANON(INEXT)=TEMP                                                A1000540
C                             INSERT CANONICAL FORM                     A1000550
      DO 110 I=1,3                                                      A1000560
      J=INEXT+I                                                         A1000570
      BCANON(J)=ARG(I)                                                  A1000580
  110 CONTINUE                                                          A1000590
C                             UPDATE STORAGE INDEX                      A1000600
      INEXT=INEXT+4                                                     A1000610
      GO TO 900                                                         A1000630
C                                                                       A1000640
C...                PROCESS PATERN ARG                                  A1000650
  200 CALL APT094(2,ARG,BCANON(INEXT))                                  A1000670
      IF(CKDEF(ARG))GO TO 800                                           A1000680
C                             INSERT ALPHANUMERIC IDENTIFIER            A1000760
      ITEMP(1) = BCDF('ZPAT')                                           A1000762
      ITEMP(2) = BCDF('RN  ')                                           A1000764
      BCANON(INEXT)=TEMP                                                A1000770
C                             IF ARGUMENT PATERN IS ALSO RANDOM, ISSUE  A1000780
C                             DIAGNOSTIC AND STORE ERROR FLAGS          A1000790
      REAL=BCANON(INEXT+1)                                              A1000800
      IF(REAL.NE.4.0)GO TO 220                                          A1000810
      CALL ERROR(82,'APT100  ')                                         A1000820
  800 BCANON(1)=-1.0                                                    A1000830
      GO TO 900                                                         A1000840
C                             UPDATE STORAGE INDEX                      A1000860
  220 INT=BCANON(INEXT+2)+1.00001                                       A1000870
      INEXT=INEXT+INT                                                   A1000880
  900 RETURN                                                            A1000890
      END                                                               A1000900
**** SOURCE FILE : M0002815.V09   ***
*
C                                                                       A1040005
C...  FORTRAN SUBROUTINE APT104                  5/70      RW           A1040010
C                                                                       A1040020
C                         FORTRAN SUBROUTINE APT104                     A1040030
C                                                                       A1040040
C                                                                       A1040050
C PURPOSE      TO GENERATE THE CFSFIL FILE FOR THE SUBSEQUENT PREP-     A1040060
C              ARATION OF OBJECT PLOTS AND/OR ENGINEERING COMPUTATIONS  A1040070
C              AS EFFECTED BY THE FOLLOWING APT STATEMENT               A1040080
C                                                                       A1040090
C              CFSAVE/PART                                              A1040100
C                                                                       A1040110
C CALLING SEQUENCE    CALL APT104(PART)                                 A1040120
C                                                                       A1040130
C ARGUMENTS    PART          ARRAY CONTAINING THE CANONICAL FORM FOR    A1040140
C                            THE OBJECT OF INTEREST.                    A1040150
C                                                                       A1040160
C CALLED BY    NONE                                                     A1040170
C                                                                       A1040180
C SUBSIDIARIES TYPE              ENTRY                                  A1040190
C              INTEGER FUNCTION  ADDRSS                                 A1040200
C              SUBROUTINE        ERROR                                  A1040210
C              SUBROUTINE        GSURF                                  A1040220
C              SUBROUTINE        INCAN                                  A1040230
C              INTEGER FUNCTION  XCANON                                 A1040240
C              SUBROUTINE        UNPACK                                 A1040250
C                                                                       A1040260
C RESTRICTIONS NONE                                                     A1040270
C                                                                       A1040280
C DIAGNOSTICS  ERROR CODE    COMMENT                                    A1040290
C                                                                       A1040300
C              85            REFERENCED ELEMENT NOT PROPERLY DEFINED.   A1040310
C                                                                       A1040320
C              89            INVALID OR ERRONEOUS CANONICAL FORM        A1040330
C                            ENCOUNTERED.  BOUNDED GEOMETRY PROCESSING  A1040340
C                            TERMINATED.                                A1040350
C                                                                       A1040360
C              90            TOO MUCH EMBEDDEDNESS IN BOUNDS AND        A1040370
C                            OBJECT STATEMENTS.  BOUNDED GEOMETRY       A1040380
C                            PROCESSING TERMINATED.                     A1040390
C                                                                       A1040400
C                                                                       A1040410
C                                                                       A1040430
      SUBROUTINE APT104(PART)                                           A1040440
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           A1040450
      DIMENSION PART(1)                                                 A1040460
C                                                                       A1040464
      INCLUDE 'BLANKCOM.INC'                                            A1040466
C                                                                       A1040480
C                                                                       A1040510
      INCLUDE 'TOTAL.INC'                                               A1040601
      INCLUDE 'LDEF.INC'                                                A1040671
      INCLUDE 'IDEF.INC'                                                A1040672
      INCLUDE 'KNUMBR.INC'                                              A1040673
C                                                                       A1040680
C...            SYSTEM I/O FILE NAMES                                   A1040690
      INCLUDE 'SYMFIL.INC'                                              A1040710
      COMMON/DARRAY/DARRAY(15)                                          A1040720
C                                                                       A1040800
C                                                                       A1040840
C...  LOCAL VARIABLES                                                   A1040850
C                                                                       A1040860
      DIMENSION MSTK(30),IWHICH(30),ISIZE(31),COEBUF(10),               A1040870
     1               IARRAY(2,24),BNDARY(24)                            A1040880
      LOGICAL CKSTR,CKDTR                                               A1040885
      LOGICAL BNDFLG,ERRFLG                                             A1040890
      INTEGER ADDRSS,XCANON,BPRTFL,CFSFIL                               A1040900
      EXTERNAL ADDRSS,XCANON                                            A1040910
      INTEGER BCDF                                                      A1040920
      DATA   KMAX,KSMAX/30,24/                                          A1040930
C                                                                       A1040960
C...  INITIALIZE.                                                       A1040970
C                                                                       A1040980
      K = 1                                                             A1040990
      BNDFLG = .FALSE.                                                  A1041000
C                                                                       A1041010
C...  DETERMINE VIRTUAL INDEX OF PART(1) IN COM-ARRAY.                  A1041020
C                                                                       A1041030
      IABS = (ADDRSS(PART) - ADDRSS(COM))/KWRDSZ + 1                    A1041040
      INDEX = IABS                                                      A1041050
      IF (CANFLG) CALL INCAN(INDEX)                                     A1041060
      INDEX = INDEX - IBLK1                                             A1041070
C                                                                       A1041080
C...  DETERMINE SIZE AND MODE OF CANONICAL FORM FOR PART.               A1041090
C                                                                       A1041100
      CALL UNPACK(COM(IABS),MODE,ISIZE(1),ISUB)                         A1041110
C                                                                       A1041120
      IF (MODE .NE. 28) GO TO 900                                       A1041130
C                                                                       A1041140
C...  PRINT VERIFICATION LISTING.                                       A1041150
C                                                                       A1041160
      NN = ISIZE(1) + 1                                                 A1041170
      BNDNAM = PART(NN)                                                 A1041180
      CALL CFORM('0',DARRAY,0,1)                                        A1041190
      CALL CFORM('CFSAVE/',DARRAY,6,7)                                  A1041195
      CALL CFORM(BNDNAM,DARRAY,13,6)                                    A1041200
      CALL CPRINT(DARRAY)                                               A1041205
      CALL CFORM('NAME PRI.  SUB      * * *  B O U N D I N G   S U R F  A1041210
     1 A C E S   * * *',DARRAY,1,68)                                    A1041215
      CALL CPRINT(DARRAY)                                               A1041220
      CALL CFORM('SURF       1ST   SUB MOD  2ND   SUB MOD  3RD   SUB    A1041222
     1MOD  4TH   SUB MOD  5TH   SUB MOD 6TH   SUB MOD  7TH   SUB MOD    A1041224
     2 ', DARRAY,6,114)                                                 A1041230
      CALL CPRINT(DARRAY)                                               A1041235
      GO TO 40                                                          A1041240
C                                                                       A1041250
C...  DETERMINE MODE, SIZE AND SUBSCRIPT OF NEXT FORM AND CHECK VALIDITYA1041260
C                                                                       A1041270
   20 NN = K + 1                                                        A1041280
      CALL UNPACK (COM(IABS),MODE,ISIZ,ISUB)                            A1041290
      IF(ISIZ.LE.0.OR.ISIZ.GT.48.OR.ISUB.LT.0.OR.ISUB.GT.999.OR.MODE.LE.A1041300
     1        0) GO TO 900                                              A1041310
      ISIZE(NN) = ISIZ                                                  A1041320
      ASSIGN 90 TO M                                                    A1041330
C                                                                       A1041340
C...  DETERMINE IF FORM HAS BEEN DEFINED AND CHECK ITS MODE.            A1041350
C     BYPASS WRITING OF BEVISION INPUT FILE IF PRIOR ERRORS HAVE OCCUREDA1041360
C                                                                       A1041370
      IF (MODE - 28) 25,30,30                                           A1041380
   25 IF (CKDTR(COM(IABS))) GO TO 28                                    A1041390
      IF (MODE .EQ. 27) GO TO 60                                        A1041400
C                                                                       A1041410
C...  BYPASS WRITING CFSAVE FILE IF PRIOR BOUNDED GEOM. ERR DETECTED.   A1041420
C                                                                       A1041430
      IF (BNDERR) GO TO 140                                             A1041440
      CALL GSURF(COEBUF,COM(IABS),MODE,ISIZ,ERRFLG)                     A1041450
      IF (.NOT. ERRFLG) GO TO 110                                       A1041460
C                                                                       A1041470
C...  ERROR 85 - REFERENCED ELEMENT NOT PROPERLY DEFINED.               A1041480
C                                                                       A1041490
   28 BNDERR = .TRUE.                                                   A1041500
      CALL ERROR(85,'APT104  ')                                         A1041510
      GO TO 140                                                         A1041520
C...  AN OBJECT.                                                        A1041530
C                                                                       A1041540
   30 K = K + 1                                                         A1041550
      IF (K .GT. KMAX) GO TO 910                                        A1041560
C                                                                       A1041570
C...  SET MAIN STACK.                                                   A1041580
C                                                                       A1041590
   40 MSTK(K) = INDEX                                                   A1041600
      IWHICH(K) = INDEX + 1                                             A1041610
      IF (MODE .NE. 28) GO TO 70                                        A1041620
C                                                                       A1041630
C...  MAKE SURE CANONICAL FORM IN OBJECT ARGUMENT IS NOT ERRONEOUSLY DE-A1041640
C     FINED.  SAVE ITS VIRTUAL INDEX.                                   A1041650
C                                                                       A1041660
   45 IF (CKSTR(COM(IABS))) GO TO 900                                   A1041670
      INDEX = COM(IABS + 1)                                             A1041680
C                                                                       A1041690
C...  DETERMINE ABSOLUTE INDEX.                                         A1041700
C                                                                       A1041710
   50 IABS = INDEX + IBLK1                                              A1041720
      IF (CANFLG) IABS = XCANON(IABS - 1) + 1                           A1041730
      GO TO 20                                                          A1041740
C                                                                       A1041750
C...  A BOUNDS.                                                         A1041760
C     IF NOT THE FIRST BOUND AFTER AN OBJECT GO GET PRIMARY SURFACE.    A1041770
C                                                                       A1041780
   60 IF (BNDFLG) GO TO 65                                              A1041790
C                                                                       A1041800
C...  FOR FIRST BOUND AFTER ENCOUNTERING AN OBJECT STATEMENT, PUT ON STKA1041810
C                                                                       A1041820
      BNDFLG = .TRUE.                                                   A1041830
      GO TO 30                                                          A1041840
C                                                                       A1041850
C...  SET TO SAVE HALF-SPACE MODIFIER ASSOCIATED WITH BOUNDS ARGUMENT.  A1041860
C                                                                       A1041870
   65 ASSIGN 100 TO M                                                   A1041880
      GO TO 80                                                          A1041890
C                                                                       A1041900
C...  FIRST TIME THRU A BOUNDS STATEMENT.  SET TO PRINT ITS NAME.       A1041910
C                                                                       A1041920
   70 KS = 1                                                            A1041930
      NN = ISIZE(K)                                                     A1041940
      BNDNAM = COM(IABS + NN)                                           A1041950
C                                                                       A1041960
C...  DETERMINE VIRTUAL INDEX AND SUBSCRIPT FROM BOUNDS PACKED WORD.    A1041970
C     SAVE ITS NAME IN BNDARY(KS), HALF-SPACE MODIFIER IN IARRAY(1,KS), A1041980
C     AND SUBSCRIPT IN IARRAY(2,KS).                                    A1041990
C                                                                       A1042000
   80 BNDARY(KS) = COM(IABS)                                            A1042010
      NN = COM(IABS + 1)                                                A1042020
      INDEX = NN/K1E4                                                   A1042030
      IARRAY(2,KS) = (NN - INDEX * K1E4)/K10                            A1042040
      GO TO M, (90,100)                                                 A1042050
C                                                                       A1042060
C...  SAVE OLD HALF-SPACE MODIFIER IF BOUNDS ARGUMENT IS A BOUNDS.      A1042070
C                                                                       A1042080
   90 IARRAY(1,KS) = NN - INDEX * K1E4 - IARRAY(2,KS) * K10             A1042090
C                                                                       A1042100
C...  IF CANONICAL FORM IN BOUNDS ARGUMENT IS ERRONEOUSLY DEFINED,      A1042110
C     SKIP IT.  IF OKAY, DETERMINE ITS ABSOLUTE INDEX.                  A1042120
C                                                                       A1042130
  100 IF (.NOT.CKSTR(COM(IABS))) GO TO 50                               A1042140
      CALL BADNAM(BNDARY(KS))                                           A1042150
      GO TO 140                                                         A1042160
C                                                                       A1042170
C...  WRITE BEVISION INPUT FILE.                                        A1042180
C                                                                       A1042190
  110 IF (KS .EQ. 1) GO TO 120                                          A1042200
C                                                                       A1042210
C     WRITE BOUNDING SURFACE COEFFICIENTS.                              A1042220
C                                                                       A1042230
C     WRITE (CFSFIL,112) IARRAY(1,KS),(COEBUF(I), I=1,10)               A1042240
  112 FORMAT (I2,6F12.6/1X,4F12.6)                                      A1042250
      GO TO 140                                                         A1042260
C                                                                       A1042270
C     WRITE NUMBER OF BOUNDS.                                           A1042280
C                                                                       A1042290
  120 ISIZ = (ISIZE(K) - 2)/2                                           A1042300
C     WRITE (CFSFIL,125) ISIZ                                           A1042310
  125 FORMAT (I4)                                                       A1042320
C                                                                       A1042330
C     WRITE PRIMARY SURFACE COEFFICIENTS.                               A1042340
C                                                                       A1042350
C     WRITE (CFSFIL,128) (COEBUF(I), I=1,10)                            A1042360
  128 FORMAT (1X,6F12.6/1X,4F12.6)                                      A1042370
C                                                                       A1042380
C...  LOOK AT NEXT BOUNDS ARGUMENT AND SAVE POINTER UNTIL ALL BOUNDS    A1042390
C     ARE FOUND.                                                        A1042400
C                                                                       A1042410
  140 INDEX = IWHICH(K) + 2                                             A1042420
      IS = MSTK(K)                                                      A1042430
C                                                                       A1042440
C...  TEST FOR END OF A BOUNDS STATEMENT.                               A1042450
C                                                                       A1042460
      IF (INDEX .GT. IS + ISIZE(K)) GO TO 150                           A1042470
      KS = KS + 1                                                       A1042480
      IF (KS .GT. KSMAX) GO TO 910                                      A1042490
C                                                                       A1042500
C...  MORE BOUNDING SURFACES.                                           A1042510
C                                                                       A1042520
      IWHICH(K) = INDEX                                                 A1042530
      IABS = IBLK1 + INDEX - 1                                          A1042540
      IF (CANFLG) IABS = XCANON(IABS)                                   A1042550
      GO TO 80                                                          A1042560
C                                                                       A1042570
C...  END OF A BOUNDS STATEMENT.  WRITE IT OUT ON VERIFICATION LISTING. A1042580
C                                                                       A1042590
  150 DO 160 I = 2,KS                                                   A1042600
      IF (IARRAY(1,I) - 2) 152,154,156                                  A1042610
  152 IARRAY(1,I) = BCDF('IN  ')                                        A1042620
      GO TO 160                                                         A1042630
  154 IARRAY(1,I) = BCDF('OUT ')                                        A1042640
      GO TO 160                                                         A1042650
  156 IARRAY(1,I) = BCDF('  * ')                                        A1042660
  160 CONTINUE                                                          A1042670
      CALL CFORM(BNDNAM,DARRAY,1,6)                                     A1042680
      CALL CPRINT (DARRAY)                                              A1042682
      CALL CFORM(BNDARY(1),DARRAY,5,6)                                  A1042684
      CALL CFORM('(   )',DARRAY,11,5)                                   A1042686
      CALL ICONV(IARRAY(2,1),DARRAY,12,3)                               A1042688
      L=16                                                              A1042690
      DO 165 I=2,KS                                                     A1042692
      CALL CFORM(BNDARY(I),DARRAY,L,6)                                  A1042694
      CALL CFORM('(   )',DARRAY,L+6,5)                                  A1042696
      CALL ICONV(IARRAY(2,I),DARRAY,L+7,3)                              A1042698
      CALL CFORM(IARRAY(1,I),DARRAY,L+11,3)                             A1042700
      L=L+15                                                            A1042702
      IF(I.EQ.KS) GO TO 164                                             A1042704
      IF(L.LT.110) GO TO 165                                            A1042706
  164 CALL CPRINT(DARRAY)                                               A1042708
      L=16                                                              A1042710
  165 CONTINUE                                                          A1042715
      BNDFLG = .FALSE.                                                  A1042720
  170 K = K - 1                                                         A1042730
C                                                                       A1042740
C...  ARE WE FINISHED.                                                  A1042750
C                                                                       A1042760
      IF (K .EQ. 0) GO TO 180                                           A1042770
      INDEX = IWHICH(K) + 2                                             A1042780
      IS = MSTK(K)                                                      A1042790
C                                                                       A1042800
C...  TEST FOR END OF OBJECT STATEMENT.                                 A1042810
C                                                                       A1042820
      IF (INDEX .GT. IS + ISIZE(K)) GO TO 170                           A1042830
C                                                                       A1042840
C...  MORE OBJECT ARGUMENTS.                                            A1042850
C                                                                       A1042860
      IWHICH(K) = INDEX                                                 A1042870
      IABS = IBLK1 + INDEX - 1                                          A1042880
      IF (CANFLG) IABS = XCANON(IABS)                                   A1042890
      GO TO 45                                                          A1042900
C                                                                       A1042910
C...  WRITE MESSAGE IF PRIOR ERRORS DETECTED.                           A1042920
C                                                                       A1042930
  180 IF (BNDERR) GO TO 998                                             A1042940
      CALL CFORM('GEOMETRY GENERATION COMPLETED.',DARRAY,8,30)          A1042950
      CALL CPRINT(DARRAY)                                               A1042960
      GO TO 999                                                         A1042990
C                                                                       A1043000
C...  ERROR 89 - INVALID OR ERRONEOUS CANONICAL FORM ENCOUNTERED.       A1043010
C     BOUNDED GEOMETRY PROCESSING TERMINATED.                           A1043020
C                                                                       A1043030
  900 CALL ERROR(89,'APT104  ')                                         A1043040
      GO TO 998                                                         A1043050
C                                                                       A1043060
C...  ERROR 90 - TOO MUCH EMBEDDEDNESS IN BOUNDS AND OBJECT STATEMENTS. A1043070
C     BOUNDED GEOMETRY PROCESSING TERMINATED.                           A1043080
  910 CALL ERROR(90,'APT104  ')                                         A1043090
  998 CALL CFORM('***BOUNDED GEOMETRY ERRORS DETECTED. NO BEVISION INP  A1043100
     1UT FILE WRITTEN.', DARRAY,8,68)                                   A1043101
      CALL CPRINT(DARRAY)                                               A1043102
C     REWIND CFSFIL                                                     A1043110
C                                                                       A1043120
C...  WRITE END OF FILE INDICATOR.                                      A1043130
C                                                                       A1043140
  999 CONTINUE                                                          A1043150
C     WRITE (CFSFIL,125) KM1                                            A1043155
C     END FILE CFSFIL                                                   A1043160
C     REWIND CFSFIL                                                     A1043170
      RETURN                                                            A1043180
      END                                                               A1043190
**** SOURCE FILE : M0000848.V07   ***
*
C                                                                       A2020001
C.....   FORTRAN SUBROUTINE                 APT202...    4/1/69  RC     A2020002
C                                                                       A2020010
      SUBROUTINE  APT202(ADRESS,ISRFLG)                                 A2020020
      IMPLICIT  DOUBLE PRECISION (A-H,O-Z)                              A2020030
C                                                                       A2020040
C  PURPOSE         TO STORE THE SURFACE NAMES AND SUBSCRIPTS            A2020050
C                  INTO COMMON BLOCKS DSNAME AND SRFNAM                 A2020060
C                                                                       A2020070
C  CALLING SEQNCE  CALL APT202(ADRESS,ISRFLG)                           A2020080
C                                                                       A2020090
C  ARGUMENTS       ADRESS    INDEX TO SURFACE DATA                      A2020100
C                  ISRFLG    FLAG POINTER FOR SURFACE --                A2020110
C                                 1.  PART SURFACE                      A2020112
C                                 2.  DRIVE SURFACE                     A2020114
C                                 3.  CHECK SURFACE 1                   A2020116
C                                 4.  CHECK SURFACE 2                   A2020118
C                                                                       A2020120
C  CALLED BY       APT234,  FROM,  GOTO                                 A2020122
C                                                                       A2020124
C  SUBSIDIARIES    UNPACK                                               A2020126
C  DIAGNOSTICS     NONE                                                 A2020128
C                                                                       A2020130
C                                                                       A2020132
      INCLUDE 'TOTAL.INC'                                               A2020157
      INCLUDE 'LDEF.INC'                                                A2020175
      INCLUDE 'IDEF.INC'                                                A2020191
C                                                                       A2020200
C                                                                       A2020210
C        COMMON BLOCKS FOR SURFACE NAME AND SUBSCRIPT STORAGE           A2020220
C                                                                       A2020230
C     23.   DSNAME BLOCK                                                A2020240
      COMMON/DSNAME/DSNAME,NAMSUB                                       A2020250
C                                                                       A2020260
C     24.   SRFNAM BLOCK                                                A2020270
      COMMON /SRFNAM/ PSNAME,CS1NAM,CS2NAM,IPSSUB,ICS1SB,ICS2SB         A2020280
C                                                                       A2020282
C...     INFORMATION ASSOCIATED WITH CANONICAL FORMS STORAGE            A2020284
C                                                                       A2020286
      INCLUDE 'BLANKCOM.INC'                                            A2020287
      DOUBLE PRECISION X(COMSIZ)                                        A2020288
      EQUIVALENCE (COM(1),X(1))                                         A2020289
      INTEGER  XCANON,ADDRSS                                            A2020290
      EXTERNAL XCANON,ADDRSS                                            A2020292
C                                                                       A2020294
      EQUIVALENCE  (CVAL,ISKIP)                                         A2020296
C                                                                       A2020298
      DIMENSION  ADRESS(*)                                              A2020300
      CHARACTER  DOLLAR,TEMP*4,HNAME*8                                  A2020310
      LOGICAL  FIRST                                                    A2020314
      INTEGER  ITEMP(2),BCDF                                            A2020316
      EQUIVALENCE  (TMPNAM,ITEMP(1))                                    A2020318
      DATA   DOLLAR,HNAME  / '$','NONAME  ' /                           A2020330
C                                                                       A2020340
C     ------------------------------------------------------------      A2020350
C                                                                       A2020360
      CALL UNPACK(ADRESS,MODE,ISIZE,ISBSCT)                             A2020370
      IF (ISBSCT .GT. 1) GO TO 200                                      A2020390
      K=ISIZE+1                                                         A2020400
      TMPNAM=ADRESS(K)                                                  A2020410
      CALL HOLFRM(ITEMP,TEMP,1,4,NWD)                                   A2020415
    5 IF (DOLLAR .EQ. TEMP(1:1)) THEN                                   A2020420
        ITEMP(1) = BCDF(HNAME(1:4))                                     A2020422
        ITEMP(2) = BCDF(HNAME(5:6))                                     A2020424
      ENDIF                                                             A2020426
C                                                                       A2020430
C        BRANCH FOR PROPER SURFACE GIVEN BY ISRFLG                      A2020440
      GO TO (10,20,30,40), ISRFLG                                       A2020450
C                                                                       A2020460
   10 PSNAME=TMPNAM                                                     A2020470
      IPSSUB=ISBSCT                                                     A2020480
      GO TO 100                                                         A2020490
C                                                                       A2020500
   20 DSNAME=TMPNAM                                                     A2020510
      NAMSUB=ISBSCT                                                     A2020520
      GO TO 100                                                         A2020530
C                                                                       A2020540
   30 CS1NAM=TMPNAM                                                     A2020550
      ICS1SB=ISBSCT                                                     A2020560
      GO TO 100                                                         A2020570
C                                                                       A2020580
   40 CS2NAM=TMPNAM                                                     A2020590
      ICS2SB=ISBSCT                                                     A2020600
C                                                                       A2020610
  100 RETURN                                                            A2020620
C                                                                       A2020630
C                                                                       A2020635
C                                                                       A2020640
C...     DETERMINE VIRTUAL INDEX OF ADRESS(1) IN X-ARRAY                A2020650
C                                                                       A2020655
  200 I=(ADDRSS(ADRESS) - ADDRSS(X))/KWRDSZ + ISIZE + 1                 A2020660
      K = I                                                             A2020670
      IF (CANFLG) CALL INCAN(I)                                         A2020680
C                                                                       A2020690
C...     FIND BCD NAME OF THIS SURFACE                                  A2020700
C                                                                       A2020710
      DO 400 J=2,ISBSCT                                                 A2020720
  250 CVAL=X(K)                                                         A2020730
      IF (ISKIP .LE. 0 .OR. ISKIP .GT. 1024) GO TO 300                  A2020740
      I=I+ISKIP                                                         A2020750
      K = I                                                             A2020760
      IF (CANFLG) K = XCANON(I)                                         A2020770
      GO TO 250                                                         A2020775
  300 K = K + ISIZE + 1                                                 A2020780
      I = I + ISIZE + 1                                                 A2020790
  400 CONTINUE                                                          A2020800
      TMPNAM = X(K)                                                     A2020810
      GO TO 5                                                           A2020820
      END                                                               A2020830
**** SOURCE FILE : M0000861.V02   ***
*
C.....FORTRAN SUBROUTINE              APT295               4/30/68      A2950000
C                                                                       A2950010
C PURPOSE      TO HANDLE EXPONENTIATION                                 A2950030
C                                                                       A2950040
C LINKAGE      CALL APT295 (RESULT,A,B)                                 A2950050
C                                                                       A2950060
C ARGUMENTS    RESULT  ARRAY TO CONTAIN RESULT                          A2950070
C              A       BASE                                             A2950075
C              B       EXPONENT                                         A2950080
C                                                                       A2950090
C SUBSIDIARIES TYPE                ENTRY                                A2950100
C              REAL FUNCTION       DABS                                 A2950105
C                                                                       A2950110
      SUBROUTINE APT295 (RESULT,A,B)                                    A2950120
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2950125
      DIMENSION RESULT(1),A(1),B(1)                                     A2950127
C                                                                       A2950130
C                                                                       A2950140
      INCLUDE 'TOTAL.INC'                                               A2950271
      INCLUDE 'ZNUMBR.INC'                                              A2950336
C                                                                       A2950360
C                                                                       A2950370
      BABS=DABS(B(1))                                                   A2950380
      RESULT(1)=DABS(A(1))**BABS                                        A2950390
      IF(A(1).GE.Z0)GO TO 10                                            A2950400
C                                                                       A2950410
C          WARNING - THE FOLLOWING PROCEDURE WILL GIVE AN INCORRECT     A2950420
C          RESULT FOR THE PART PROGRAM COMBINATION NEGATIVE A           A2950430
C          AND NON-INTEGER B                                            A2950440
C                                                                       A2950450
      IBABS=BABS+Z1EM2                                                  A2950460
      RESULT(1)=(ZM1**IBABS)*RESULT(1)                                  A2950470
   10 IF(B(1).GE.Z0)GO TO 20                                            A2950480
      RESULT(1)=Z1/RESULT(1)                                            A2950490
   20 RETURN                                                            A2950500
       END                                                              A2950510
**** SOURCE FILE : M0000706.W01   ***
*
      SUBROUTINE APT296                                                 A2960010
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A2960020
C                                                                       A2960030
      INCLUDE 'TOTAL.INC'                                               A2960151
      INCLUDE 'IFXCOR.INC'                                              A2960275
C                                                                       A2960290
C...            SYSTEM I/O FILE NAMES                                   A2960295
C                                                                       A2960300
      INCLUDE 'SYMFIL.INC'                                              A2960307
      DIMENSION KHOLDP(8)                                               A2960325
      LOGICAL FIRST                                                     A2960326
      INTEGER Z4E,BCDF                                                  A2960328
      PARAMETER (Z4E=1308622848)                                        A2960329
      SAVE IFIRST,KHOLDP                                                A2960330
      DATA KHOLDP/0,0,Z4E,0,Z4E,1,Z4E,3/                                A2960331
      DATA FIRST/.TRUE./                                                A2960333
C                                                                       A2960335
C     THIS SUBROUTINE WRITES THE HOLDPP                                 A2960340
C      RECORD ON EXFILE AT THE BEGINNING OF MACRO OUT PUT               A2960345
C                                                                       A2960350
      IF (FIRST) THEN                                                   A2960440
        KHOLDP(1)=BCDF('HOLD')                                          A2960450
        KHOLDP(2)=BCDF('PP  ')                                          A2960455
        FIRST=.FALSE.                                                   A2960490
      ENDIF                                                             A2960495
      CALL RECORD(KHOLDP(4))                                            A2960510
      NR=0                                                              A2960520
      CALL EWRITE(EXFILE,NR,KHOLDP,8,IR)                                A2960530
      RETURN                                                            A2960550
      END                                                               A2960555
C                                                                       A2960557
C---    APT297 ENTERED TO WRITE END RECORD FOR MACRO ON EXFILE          A2960560
      SUBROUTINE APT297                                                 A2960570
C                                                                       A2960575
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A2960620
C                                                                       A2960630
      INCLUDE 'TOTAL.INC'                                               A2960640
      INCLUDE 'IFXCOR.INC'                                              A2960650
                                                                        A2960660
C...            SYSTEM I/O FILE NAMES                                   A2960670
C                                                                       A2960680
      INCLUDE 'SYMFIL.INC'                                              A2960690
      DIMENSION KHOLDP(8)                                               A2960700
      LOGICAL FIRST                                                     A2960710
      INTEGER Z4E,BCDF                                                  A2960715
      PARAMETER (Z4E=1308622848)                                        A2960720
      SAVE IFIRST,KHOLDP                                                A2960730
      DATA KHOLDP/0,0,Z4E,0,Z4E,1,Z4E,4/                                A2960740
      DATA FIRST/.TRUE./                                                A2960750
C                                                                       A2960760
C     THIS SUBROUTINE WRITES THE HOLDPP                                 A2960770
C      RECORD ON EXFILE AT THE BEGINNING OF MACRO OUT PUT               A2960780
C                                                                       A2960790
      IF (FIRST) THEN                                                   A2960800
        KHOLDP(1)=BCDF('HOLD')                                          A2960810
        KHOLDP(2)=BCDF('PP  ')                                          A2960820
        FIRST=.FALSE.                                                   A2960830
      ENDIF                                                             A2960840
      CALL RECORD(KHOLDP(4))                                            A2960850
      NR=0                                                              A2960860
      CALL EWRITE(EXFILE,NR,KHOLDP,8,IR)                                A2960870
      RETURN                                                            A2960880
      END                                                               A2960890
**** SOURCE FILE : M0004117.V11   ***
*
C                                                                       A2980001
C...  FORTRAN SUBROUTINE                    APT298                      A2980002
      SUBROUTINE  APT298(CODE,PPROC1,PPROC2)                            A2980010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2980020
C                                                                       A2980030
      INCLUDE 'TOTAL.INC'                                               A2980141
      INCLUDE 'IFXCOR.INC'                                              A2980187
C                                                                       A2980188
C... LOCAL VARIABLES                                                    A2980200
C                                                                       A2980210
      INTEGER CLPRNT,CNVERT,CODE,PPFLG,ONE,PPFLAG                       A2980220
C                                                                       A2980260
C                                                                       A2980270
      DIMENSION PPS(2,10),PPLIBR(10),NAME(2)                            A2980280
C                                                                       A2980290
      DIMENSION A4ARY(24)                                               A2980300
      DIMENSION I4ARY(48)                                               A2980320
      EQUIVALENCE (A4ARY(1),I4ARY(1))                                   A2980330
      EQUIVALENCE (ONE,I4ARY(2))                                        A2980340
      EQUIVALENCE (NOPPS,I4ARY(3))                                      A2980350
      EQUIVALENCE (CLPRNT,I4ARY(4))                                     A2980360
      EQUIVALENCE (CNVERT,I4ARY(5))                                     A2980370
      EQUIVALENCE (PPFLG,I4ARY(6))                                      A2980380
      EQUIVALENCE (MLTFLG,I4ARY(7))                                     A2980390
      EQUIVALENCE (PPS(1,1),I4ARY(9))                                   A2980400
      SAVE I4ARY                                                        A2980401
      COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS(7),       A2980403
     C           IRDSAV(20)                                             A2980404
      LOGICAL ERR,XC,CL,PX,END,FINI,ASM,ABEND                           A2980405
      INTEGER ERRX,XTRAS                                                A2980406
C                                                                       A2980410
C          SYMFIL I/O FILES NAME                                        A2980420
C                                                                       A2980430
      INCLUDE 'SYMFIL.INC'                                              A2980437
      CHARACTER*8 PPLIBR,PROC1                                          A2980442
C                                                                       A2980445
      INTEGER BCDF                                                      A2980446
C                                                                       A2980450
      DATA ONE,LIBTOP,NOPPS,CLPRNT,CNVERT,PPFLAG,PPFLG                  A2980460
     / /   1,  10,    0,    0,     0,     0,     0    /                 A2980470
      DATA PPS(1,1),PPS(2,1) /0. ,0./                                   A2980475
C                                                                       A2980480
C...     APT4 POSTPROCESSOR LIBRARY                                     A2980490
      DATA PPLIBR/'APT4PP','CLCMP4',8*'      '/                         A2980500
C                                                                       A2980580
C ********************************************************************  A2980590
C                                                                       A2980600
      GO TO (10,20,30,100), CODE                                        A2980610
   10 CLPRNT=1                                                          A2980620
      RETURN                                                            A2980630
   20 PPFLAG=1                                                          A2980640
      PX=.TRUE.                                                         A2980645
      CNVERT=0                                                          A2980646
      PPFLG=0                                                           A2980647
      NOPPS=0                                                           A2980648
      RETURN                                                            A2980650
   30 CONTINUE                                                          A2980660
      PPNAME=PPROC1                                                     A2980670
      CALL HOLFRM(PPNAME,PROC1,1,8,NWD)                                 A2980685
C                                                                       A2980784
C...     CHECK FOR APT4 POSTPROCESSOR                                   A2980785
   38 DO 40 I=1,LIBTOP                                                  A2980790
      IF (PPLIBR(I) .EQ. PROC1) GO TO 70                                A2980800
   40 CONTINUE                                                          A2980820
C                                                                       A2980830
      IF(PPFLAG.EQ.0) CNVERT=1                                          A2980840
      GO TO 90                                                          A2980850
C                                                                       A2980945
   70 IF(PPFLAG.EQ.0) PPFLG=1                                           A2980950
C                                                                       A2980960
C     STORE POSTPROCESSOR NAME                                          A2980970
C                                                                       A2980980
   90 NOPPS = NOPPS + 1                                                 A2980990
      PPS(1,NOPPS)=PPNAME                                               A2981000
      PPS(2,NOPPS) = PPROC2                                             A2981010
      RETURN                                                            A2981020
C                                                                       A2981030
  100 MLTFLG=MULOUT                                                     A2981040
      CALL TAPOP(CPFILE,-1)                                             A2981055
  110 NR =0                                                             A2981110
      NOPPS=NOPPS*2                                                     A2981115
      I4ARY(1)=BCDF('CPFL')                                             A2981117
      CALL AWRITE(CPFILE,NR,I4ARY,48,IR)                                A2981120
C                                                                       A2981130
      CALL TAPOP(CPFILE,-2)                                             A2981250
C                                                                       A2981260
      RETURN                                                            A2981270
      END                                                               A2981280
**** SOURCE FILE : M0004142.V09   ***
*
C.....FORTRAN SUBROUTINE  ....APT299         8/68                 AR,HG A2990001
C.....FORTRAN SUBROUTINE      APT299                4/18/68    AR       A2990002
C                                                                       A2990010
C PURPOSE      TO CREATE AND WRITE EXFILE RECORDS FROM DATA SUPPLIED BY A2990020
C              THE PART PROGRAM.                                        A2990030
C                                                                       A2990040
C LINKAGE      CALL APT299(ARG1,ARG2,ARG3,ARG4)                         A2990050
C                                                                       A2990060
C NOTE 1       APT299 IS CALLED REPEATEDLY BY THE PART PROGRAM UNTIL ALLA2990070
C              ARGUMENTS NECESSARY FOR THE CREATION OF THE EXFILE RECORDA2990080
C              HAVE BENN PASSED.                                        A2990090
C                                                                       A2990100
C ARGUMENTS    ARG1           IN THE FIRST CALL TO APT299 ARG1 = THE    A2990110
C                             NUMBER OF DATA ITEM ARGUMENT PAIRS.       A2990120
C                             THEREAFTER IT IS THE FIRST ELEMENT OF A   A2990130
C                             DATA ITEM ARGUMENT PAIR.                  A2990140
C              ARG2           IN THE FIRST CALL TO APT299 ARG2 = THE    A2990150
C                             MAJOR WORD OF THE PART PROGRAM STATEMENT  A2990160
C                             THAT IS CAUSING AN EXFILE RECORD TO BE    A2990170
C                             CREATED. THEREAFTER IT IS THE SECOND      A2990180
C                             ITEM OF A DATA ITEM ARGUMENT PAIR.        A2990190
C              ARGK (K=1,3)   THE FIRST ELEMENT OF A DATA ITEM ARGUMENT A2990200
C                             PAIR. IT IS USED AS AN INDEX ON THE CLSIZEA2990210
C                             ARRAY TO LOCATE THE SIZE OF AN ITEM.      A2990220
C              ARGL (L=2,4)   THE SECOND ELEMENT OF A DATA ITEM ARGUMENTA2990230
C                             PAIR. IT IS EITHER A SINGLE DATA ITEM OR  A2990240
C                             AN ARRAY CONTAINING A STRING OF DATA ITEMSA2990250
C                                                                       A2990260
C NOTE 2       A DATA ITEM ARGUMENT PAIR OCCURS FOR EACH SINGLE ITEM OR A2990270
C              EACH STRING OF ITEMS TO BE INCLUDED IN THE EXFILE RECORD.A2990280
C                                                                       A2990290
C SUBSIDARY    MACHINE LANGUAGE SUBROUTINE        RECORD                A2990300
C                                                                       A2990310
C                                                                       A2990320
      SUBROUTINE APT299(ARG1,ARG2,ARG3,ARG4)                            A2990330
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             A2990331
C                                                                       A2990332
C                                                                       A2990333
      INCLUDE 'TOTAL.INC'                                               A2990334
      INCLUDE 'KNUMBR.INC'                                              A2990347
      INCLUDE 'SYMFIL.INC'                                              A2990366
C......  LOCAL VARIABLES                                                A2990370
C                                                                       A2990380
      LOGICAL  FIRST,ODD                                                A2990400
      INTEGER  CLSIZE,SIZE,START,T,ARG1,ARG2,ARG3,ARG4,W,BLANK,BCDF     A2990410
      INTEGER  Z4E                                                      A2990412
      PARAMETER (Z4E=1308622848)                                        A2990414
C                                                                       A2990420
      DIMENSION ARG1(1),ARG2(*),ARG3(1),ARG4(*),W(200),                 A2990430
     / CLSIZE(27)                                                       A2990440
C                                                                       A2990450
      SAVE FIRST,BLANK                                                  A2990455
C                                                                       A2990470
      DATA  FIRST,IUNORM /.TRUE.,Z4E/                                   A2990480
      DATA  CLSIZE /1,1,4,4,7,7,4,3*10,7,10,0,0,79,10,3*0,12,3,3,4*1,0/ A2990490
C                                                                       A2990500
C ********************************************************************  A2990510
C                                                                       A2990520
C                                                                       A2990530
C... CHECK IF THIS IS THE FIRST CALL TO APT299 FOR THE CURRENT EXFILE   A2990540
C... RECORD BEING CREATED. IF NOT,CONTINUE INSERTING ITEMS IN THE       A2990550
C... RECORD. IF IT IS THE FIRST CALL,DO HOUSEKEEPING.                   A2990560
C                                                                       A2990570
      IF (.NOT. FIRST)  GO TO 15                                        A2990580
C                                                                       A2990590
C... SET FIRST CALL FLAG FALSE.                                         A2990600
C                                                                       A2990610
      FIRST = .FALSE.                                                   A2990620
C                                                                       A2990622
C    INITIALIZE BLANK                                                   A2990624
      BLANK = BCDF('    ')                                              A2990626
C                                                                       A2990630
C... SET NOPAIR = THE NUMBER OF DATA ITEM ARGUMENT PAIRS.               A2990640
C                                                                       A2990650
      NOPAIR=ARG1(1)                                                    A2990660
C                                                                       A2990670
C... SET FIRST RECORD WORD = MAJOR WORD.                                A2990680
C... SET SECOND RECORD WORD = PART PROGRAM STATEMENT INTERNAL SEQUENCE  A2990690
C... NUMBER                                                             A2990700
C                                                                       A2990710
      W(3)=IUNORM                                                       A2990720
      W(1)=ARG2(1)                                                      A2990730
      W(2)=ARG2(2)                                                      A2990735
      CALL RECORD(W(4))                                                 A2990740
C                                                                       A2990750
C... IF THERE ARE NO MORE ARGUMENTS,ADD ALPHANUMERIC DATA ITEM          A2990760
C... AND WRITE THE RECORD.                                              A2990770
C                                                                       A2990780
      IF (NOPAIR .GT. K0)  GO TO 10                                     A2990790
    5 W(7)=IUNORM                                                       A2990800
      W(8)=K2                                                           A2990810
      W(9)=BLANK                                                        A2990820
      W(10)=BLANK                                                       A2990825
      J=10                                                              A2990830
      GO TO 80                                                          A2990840
C                                                                       A2990850
C... INITIALIZE RECORD INDEX                                            A2990860
C                                                                       A2990870
   10 J=K6                                                              A2990880
C                                                                       A2990890
C... INSERT DATA ITEMS IN RECORD.                                       A2990900
C... INITIALIZE DO LOOP INDEX                                           A2990910
C                                                                       A2990920
      IDO = K1                                                          A2990930
   15 START = IDO                                                       A2990940
      DO 70  I = START,NOPAIR                                           A2990950
C                                                                       A2990960
C... IF I IS EVEN,SET ODD = .FALSE. INDICATING ARG1 AND ARG2 ARE TO BE  A2990970
C...    USED DURING THIS ITERATION.                                     A2990980
C... IF I IS ODD, SET ODD = .TRUE. INDICATING ARG3 AND ARG4 ARE TO BE   A2990990
C...    USED DURING THIS ITERATION.                                     A2991000
C                                                                       A2991010
      ODD = .TRUE.                                                      A2991020
      IF ((I - K2*(I/K2)) .EQ. K0)  ODD = .FALSE.                       A2991030
C                                                                       A2991040
C... INSERT ITEM INDICATOR CODE IN RECORD.                              A2991050
C                                                                       A2991060
      J=J+K2                                                            A2991070
      W(J-1)=IUNORM                                                     A2991080
      W(J)=ARG1(1)                                                      A2991090
      IF(ODD) W(J)=ARG3(1)                                              A2991100
      T=W(J)                                                            A2991110
      IF(T.GT.K2.AND.T.LT.K27)  W(J)=K4                                 A2991120
      IF(T.EQ.K27) W(J)=K3                                              A2991130
C                                                                       A2991150
C... SET SIZE = CLSIZE FOR THIS ITEM. FROM THE MAGNITUDE OF SIZE        A2991160
C... DETERMINE THE TYPE OF THE ITEM.                                    A2991170
C                                                                       A2991180
      SIZE = CLSIZE(T)                                                  A2991190
      IF (SIZE - K1)  20,40,30                                          A2991200
C                                                                       A2991210
C... ALPHANUMERIC DATA ITEM STRING --- INSERT NUMBER OF ITEMS,TOTAL     A2991220
C... CHARACTER COUNT, AND DATA ITEMS IN THE RECORD.                     A2991230
C... RESET SIZE = NUMBER OF ITEMS IN THE STRING.                        A2991240
C                                                                       A2991250
   20 J=J+K4                                                            A2991260
      W(J-1)=IUNORM                                                     A2991270
      W(J-3)=IUNORM                                                     A2991280
      SIZE=ARG4(1)                                                      A2991290
      W(J)=ARG4(2)                                                      A2991300
      IF(ODD) GO TO 22                                                  A2991310
      SIZE=ARG2(1)                                                      A2991320
      W(J)=ARG2(2)                                                      A2991330
      GO TO 25                                                          A2991335
   22 IF(W(J).NE.K0) GO TO 25                                           A2991340
      W(J-2)=K2                                                         A2991342
      J=J+K2                                                            A2991344
      W(J-1)=BLANK                                                      A2991346
      W(J)=BLANK                                                        A2991348
      GO TO 80                                                          A2991350
C                                                                       A2991355
C... SET STRING ARRAY SUBSCRIPT =3.                                     A2991360
C                                                                       A2991370
   25 W(J-2)=(SIZE+K1)/K2                                               A2991380
      L=K3                                                              A2991390
      GO TO 50                                                          A2991400
C                                                                       A2991410
C... GEOMETRIC VARIABLE --- INSERT NUMBER OF ITEMS AND GEOMETRIC DATA.  A2991420
C                                                                       A2991430
   30 J=J+K2                                                            A2991440
      W(J-1)=IUNORM                                                     A2991450
      W(J)=SIZE                                                         A2991460
C                                                                       A2991470
C... FLOATING POINT OR ALPHANUMERIC DATA ITEM.--- SET ARRAY SUBSCRIPT   A2991480
C... =1.                                                                A2991490
C                                                                       A2991500
   40 L = K1                                                            A2991510
C                                                                       A2991520
      SIZE=SIZE*2                                                       A2991525
C... ADD ARRAY ELEMENTS TO RECORD.                                      A2991530
   50 L1=L                                                              A2991540
      DO 60 L=L1,SIZE                                                   A2991550
      J = J + K1                                                        A2991560
      W(J) = ARG2(L)                                                    A2991570
      IF (ODD)  W(J) = ARG4(L)                                          A2991580
   60 CONTINUE                                                          A2991590
C                                                                       A2991600
C... CHECK IF IT IS NECESSARY TO RETURN TO THE PART PROGRAM FOR MORE    A2991610
C... ARGUMENTS.                                                         A2991620
C                                                                       A2991630
      IF ((.NOT. ODD) .OR. (I .EQ. NOPAIR))  GO TO 70                   A2991640
      IDO = I + 1                                                       A2991650
      GO TO 99                                                          A2991660
   70 CONTINUE                                                          A2991670
C                                                                       A2991680
C... SET THIRD RECORD WORD = NUMBER OF DATA ITEMS, RESET FIRST CALL FLAGA2991690
C... .TRUE., WRITE RECORD TO EXFILE ,AND RETURN TO CALLER.              A2991700
C                                                                       A2991710
   80 W(5)=IUNORM                                                       A2991720
      IF((J-K2*(J/K2)).EQ.K0) GO TO 85                                  A2991722
      J=J+1                                                             A2991724
      W(J)=BLANK                                                        A2991726
   85 W(6)=J/2-K3                                                       A2991730
      FIRST = .TRUE.                                                    A2991740
      NR=0                                                              A2991750
      CALL EWRITE(EXFILE,NR,W,J,IR)                                     A2991755
   99 RETURN                                                            A2991760
       END                                                              A2991770
**** SOURCE FILE : M0011445.W02   ***
*
C.....FORTRAN SUBROUTINE  ....ATAPE          8/68                    HG M0000100
C                                                                       M0000200
C  PURPOSE     TO FORM THE CL RECORD AND WRITE IT ON EXFILE.            M0000300
C                                                                       M0000400
C  LINKAGE     CALL  ATAPE                                              M0000500
C                                                                       M0000600
C  ARGUMENTS   NONE                                                     M0000700
C                                                                       M0000800
C  IMPORTANT VARIABLES                                                  M0000900
C              ICL     INDICATOR                                        M0001000
C                      =2  CONTINUATING CL POINT.                       M0001100
C                      =3  LAST CL POINT.                               M0001200
C              KCR     CONTAINING THE LAST ICL VALUE.                   M0001300
C              MAXNR   MAXIMUM NUMBER OF RECORD PRODUCED BY THIS        M0001400
C                      MOTION STATEMENT.                                M0001500
C              NUMCNT  MAXIMUM NUMBER OF POINT PRODUCED BY THE LAST     M0001600
C                      MOTION STATEMENT.                                M0001700
C              JAXNR   EQUAL TO MAXNR BUT SAVED UNTIL NEXT MOTION       M0001800
C                      STATEMENT.                                       M0001900
C              ISIZE   COUNTER OF THE BUFFER.                           M0002000
C              NR      RECORD NUMBER ASSIGNED BY EWRITE.                M0002100
C              CLPONT  BUFFER TO CONTAIN CL DATA.                       M0002200
C              ILPONT  INTEGER BUFFER ARRAY EQUIVALENT TO CLPONT.       M0002300
C              KB      MAXIMUM NUMBER OF CL DATA IN THE BUFFER.         M0002400
C                      63 OR 36 ACCORDING TO THE MULTAX SPECIFICATION.  M0002500
C              JB      THE RECORD NUMBER WHERE THE SPECIFIED POINT      M0002600
C                      WILL EXIST.                                      M0002700
C              IEE     ERROR RETURN INDICATOR.                          M0002800
C                                                                       M0002900
      SUBROUTINE ATAPE                                                  M0003000
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0003100
C                                                                       M0003200
C                                                                       M0003300
C                                                                       M0003400
      INCLUDE 'TOTAL.INC'                                               M0004701
      INCLUDE 'FXCOR.INC'                                               M0008301
      INCLUDE 'HOLRTH.INC'                                              M0009101
      INCLUDE 'SV.INC'                                                  M0009701
      INCLUDE 'ISV.INC'                                                 M0011501
      INCLUDE 'IFXCOR.INC'                                              M0013501
      INCLUDE 'KNUMBR.INC'                                              M0015301
C                                                                       M0015400
C...            SYSTEM I/O FILE NAMES                                   M0015500
C                                                                       M0015600
      INCLUDE 'SYMFIL.INC'                                              M0015610
C                                                                       M0016100
      INCLUDE 'BLANKCOM.INC'                                            M0016250
C                                                                       M0016260
      COMMON/SSARLM/B(64,4),U(4),V(4),ITOP(6,4,4),IFLAG(4,4),IPNUM(4)   M0016300
C                                                                       M0016510
      INCLUDE 'CLDT.INC'                                                M0016520
C                                                                       M0016530
      LOGICAL ERRCTR                                                    M0016600
      DIMENSION MODSRF(2)                                               M0016700
C                                                                       M0016800
      DIMENSION CLPONT(256),ILPONT(512),R(6)                            M0016900
      EQUIVALENCE (CLPONT(1),ILPONT(1))                                 M0017000
      CHARACTER*6 GODLTA                                                M0017010
      INTEGER Z4E,BCDF                                                  M0017020
      PARAMETER (Z4E=1308622848)                                        M0017025
      LOGICAL FIRST                                                     M0017030
      SAVE CLPONT,FIRST                                                 M0017040
      DATA FIRST/.TRUE./                                                M0017050
      DATA ILPONT(3)/Z4E/,ILPONT(5)/Z4E/                                M0017250
      DATA ISIZE,KCR,IPOW /2*3,Z4E/                                     M0017300
      DATA JMP /1/,GODLTA /'GODLTA'/                                    M0017400
C... INITIALIZE CLDAT BUFFER                                            M0017410
      IF (FIRST) THEN                                                   M0017420
        ILPONT(1)=BCDF('CLDA')                                          M0017430
        ILPONT(2)=BCDF('TA  ')                                          M0017440
        FIRST=.FALSE.                                                   M0017450
      ENDIF                                                             M0017460
C                                                                       M0017500
C...     TEST FOR AN ARELEM ERROR OR FOR DNTCUT                         M0017600
  185 IF(IAERR.NE.0.OR.ICUT.NE.0) GO TO 3                               M0017700
      IF(KCR.NE.3) GO TO 7                                              M0017800
      IF(CLDFG) ICLTAB(2,ICLINE)=ICLTAB(2,ICLINE)+NUMCNT                M0017900
      NUMCNT=0                                                          M0018000
      NSIZE =0                                                          M0018100
      ERRCTR=.FALSE.                                                    M0018200
    7 KCR=ICL                                                           M0018300
      IF(MODFER.EQ.GODLTA)GOTO 5                                        M0018400
      NUMCNT=NUMCNT+1                                                   M0018500
    5 ILPONT(2*ISIZE+1)=IPOW                                            M0018600
      ILPONT(2*ISIZE+2) = ICL                                           M0018700
      JMP=1                                                             M0018800
      IF(ICLCOD.GT.1)GOTO 100                                           M0018900
    6 DO 1 I=1,3                                                        M0019000
      CLPONT(ISIZE+2)=TE(I)                                             M0019100
C                                                                       M0019200
C...CHECK IF THERE SHOULD BE NO TOOL AXIS PRINTOUT                      M0019300
      IF (MULOUT.EQ.K0) GO TO 1                                         M0019400
C                                                                       M0019500
      CLPONT(ISIZE+5)=TA(I)                                             M0019600
    1 ISIZE=ISIZE+K1                                                    M0019700
      ISIZE = ISIZE + K4                                                M0019800
      IF (MULOUT.EQ.K0) ISIZE=ISIZE-K3                                  M0019900
    4 IF((ICL.EQ.K2).AND.(ISIZE.LT.255)) GO TO 190                      M0020000
    2 NR=0                                                              M0020100
      J=2*ISIZE                                                         M0020200
      ILPONT(4) = ISEQNO                                                M0020300
      ILPONT(6) = ISIZE - 3                                             M0020400
      CALL EWRITE(EXFILE,NR,CLPONT,J,IR)                                M0020500
      KNR=NR                                                            M0020600
      KNB=ICLBLK                                                        M0020700
      ISIZE = 3                                                         M0020800
      GOTO(190,5),JMP                                                   M0020900
    3 IF(ISIZE.GT.3) GO TO 2                                            M0021000
  190 RETURN                                                            M0021100
C                                                                       M0021200
  200 ISIZE=NSIZE                                                       M0021300
      JMP=2                                                             M0021400
      GOTO 2                                                            M0021500
C                                                                       M0021600
C...SPECIAL CLDAT - PRINTOUT REQUESTED                                  M0021700
C                                                                       M0021800
  100 IF(ERRCTR)GOTO 119                                                M0021900
      ERRCTR=.TRUE.                                                     M0022000
      MODSRF(1)=ISFIDN(IPS)                                             M0022100
      MODSRF(2)=ISFIDN(IDS)                                             M0022200
C                                                                       M0022300
      DO 120 I=1,6                                                      M0022400
      IF(MOD(ICLCOD,IPTVEC(I+3)).NE.0)GOTO 120                          M0022500
C          PDS NDS PPS NPS UVPDS UVPPS                                  M0022600
      GOTO(111,111,115,115,  113,  117),I                               M0022700
  111 IF(MODSRF(2).GT.0.AND.MODSRF(2).LT.18)GOTO 120                    M0022800
  113 IF(MODSRF(2).EQ.29)GOTO 120                                       M0022900
      GOTO 118                                                          M0023000
  115 IF(MODSRF(1).GT.0.AND.MODSRF(1).LT.18)GOTO 120                    M0023100
  117 IF(MODSRF(1).EQ.29)GOTO 120                                       M0023200
  118 CALL ERROR(98,'ATAPE   ')                                         M0023300
      GOTO 119                                                          M0023400
  120 CONTINUE                                                          M0023500
C                                                                       M0023600
  119 NSIZE=ISIZE                                                       M0023700
      IF(MODFER.EQ.GODLTA)GOTO 6                                        M0023800
      ISIZE=ISIZE+K1                                                    M0023900
      DO 140 I=1,9                                                      M0024000
      IF(MOD(ICLCOD,IPTVEC(I)).NE.0)GOTO 140                            M0024100
      ISIZE=ISIZE+K1                                                    M0024200
      IF(ISIZE.GT.253)GOTO 200                                          M0024300
      ISIZ2=2*ISIZE                                                     M0024410
      ILPONT(ISIZ2-1)=BCDF(PNTVCT(I)(1:4))                              M0024420
      ILPONT(ISIZ2)=BCDF(PNTVCT(I)(5:8))                                M0024430
      DO 130 J=1,3                                                      M0024700
      ISIZE=ISIZE+K1                                                    M0024800
      GOTO(121,122,123,124,125,126,127,128,129),I                       M0024900
  121 CLPONT(ISIZE)=TE(J)                                               M0025000
      GOTO 130                                                          M0025100
  122 CLPONT(ISIZE)=TA(J)                                               M0025200
      GOTO 130                                                          M0025300
  123 CLPONT(ISIZE)=TI(J)                                               M0025400
      GOTO 130                                                          M0025500
  124 CLPONT(ISIZE)=SP(J,IDS)                                           M0025600
      GOTO 130                                                          M0025700
  125 CLPONT(ISIZE)=SN(J,IDS)                                           M0025800
      GOTO 130                                                          M0025900
  126 CLPONT(ISIZE)=SP(J,IPS)                                           M0026000
      GOTO 130                                                          M0026100
  128 LL=IDS-1                                                          M0026200
      GOTO 131                                                          M0026300
  129 LL=IPS-1                                                          M0026400
  131 CONTINUE                                                          M0026500
      CLPONT(ISIZE)=0.                                                  M0026600
      ISIZE=ISIZE+2                                                     M0026700
      CLPONT(ISIZE)=0.                                                  M0026800
      CLPONT(ISIZE-1)=0.                                                M0026900
      IF(MODSRF(LL).NE.29)GOTO 140                                      M0027000
      CLPONT(ISIZE-2)=U(LL)                                             M0027100
      CLPONT(ISIZE-1)=V(LL)                                             M0027200
      JJ=CANON((LL-1)*10+1)                                             M0027300
      CLPONT(ISIZE)=JJ*1000+IPNUM(LL)                                   M0027400
      GOTO 140                                                          M0027500
  127 CLPONT(ISIZE)=SN(J,IPS)                                           M0027600
  130 CONTINUE                                                          M0027700
  140 CONTINUE                                                          M0027800
      GOTO 4                                                            M0027900
      END                                                               M0027950
C                                                                       M0028000
C....  ATAPER                                                           M0028100
C                                                                       M0028200
      SUBROUTINE  ATAPER (R,NN,JJ,KK,IEE)                               M0028300
C  PURPOSE  TO RETRIEVE CL POINT FROM CLTAPE.                           M0028400
C                                                                       M0028500
C  LINKAGE  CALL ATAPER (R,NN,JJ,KK,IEE)                                M0028600
C                                                                       M0028700
C  ARGUMENTS   R   ARRAY TO CONTAIN THE CL DATA.                        M0028800
C              NN  INTEGER INDICATING CL POINT NUMBER                   M0028900
C              JJ  INTEGER CLDAT SECTION NUMBER                         M0029000
C              KK  INTEGER DATA TYPE                                    M0029100
C                                                                       M0029200
C     CHECK IF THE SPECIFIED POINT NUMBER IN THE SPECIFIED SECTION.     M0029300
C                                                                       M0029400
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0029410
C                                                                       M0029412
C                                                                       M0029414
C                                                                       M0029416
      INCLUDE 'IFXCOR.INC'                                              M0029430
C                                                                       M0029434
C...            SYSTEM I/O FILE NAMES                                   M0029436
C                                                                       M0029438
      INCLUDE 'SYMFIL.INC'                                              M0029440
C                                                                       M0029442
      INCLUDE 'CLDT.INC'                                                M0029444
C                                                                       M0029458
      DIMENSION CLPONT(256),ILPONT(512),R(6)                            M0029460
      EQUIVALENCE (CLPONT(1),ILPONT(1))                                 M0029462
      INTEGER Z4E,KCST                                                  M0029470
      PARAMETER (Z4E=1308622848)                                        M0029472
      SAVE KCST                                                         M0029473
      DATA IPOW/Z4E/,KCST/Z4E/                                          M0029474
      NR=NN                                                             M0029500
      IF(JJ.GT.0)GOTO 480                                               M0029600
      IF(NR.LE.0.OR.NR.GT.NUMCNT)GOTO 610                               M0029700
C      IF(NSIZE.GT.0)GOTO 610                                           M0029800
C                                                                       M0029900
C     RETRIEVE A POINT OR A VECTOR OF THE LAST MOTION COMMAND           M0030000
C     STORE 0,0,1 AS I,J,K                                              M0030100
  440 R(4) = 0.                                                         M0030200
      R(5) = 0.                                                         M0030300
      R(6) = 1.                                                         M0030400
      ISZ=4+3*MULOUT                                                    M0030500
      I  =252/ISZ                                                       M0030600
      I1 =(NUMCNT-1)/I                                                  M0030700
      I2 =(NR    -1)/I                                                  M0030800
      IF(I1.NE.I2)GOTO 460                                              M0030900
C                                                                       M0031000
C     DESIRED POSITION OF MOTION COMMAND IS IN CLPONT                   M0031100
      J = 5+ILPONT(6)-ISZ*(NUMCNT-NR+1)                                 M0031200
      K = J-2+ISZ                                                       M0031300
      L=0                                                               M0031400
      DO 450 I=J,K                                                      M0031500
      L=L+1                                                             M0031600
  450 R(L)=CLPONT(I)                                                    M0031700
      GOTO 600                                                          M0031800
C                                                                       M0031900
C     FETCH EXFILE BLOCK CONTAINING DESIRED POSITION                    M0032000
  460 NBF=KNB-I1+I2+1                                                   M0032100
      NRP=I*(I2+1)                                                      M0032200
      CALL EREAD(EXFILE,R,NR,NBF,NRF,NRP,-ISZ,IR)                       M0032300
      GOTO 600                                                          M0032400
C                                                                       M0032500
C     SEQUENTIAL SEARCH FROM BEGIN OF  'CLDAT/START,..'  REGION         M0032600
  480 IF(JJ.EQ.KSCT)GOTO 510                                            M0032700
      DO 490 LINE=1,ICLCNT                                              M0032800
      IF(ICLTAB(1,LINE).EQ.JJ)GOTO 500                                  M0032900
  490 CONTINUE                                                          M0033000
      GOTO 610                                                          M0033100
C                                                                       M0033200
  500 KKF=IPOW                                                          M0033300
      I33=IPOW                                                          M0033400
  510 I3 =ICLTAB(3,LINE)                                                M0033500
      IF(CLDFG.OR.NR.LE.0.OR.NR.GT.ICLTAB(2,LINE))GOTO 610              M0033600
      IF(I3.GT.1)GOTO 520                                               M0033700
      IF(KK.GT.2)GOTO 610                                               M0033800
      ISZ=4+3*MULOUT                                                    M0033900
      NRP=0                                                             M0034000
      GOTO 540                                                          M0034100
C                                                                       M0034200
  520 IF(MOD(I3,IPTVEC(KK)).NE.0)GOTO 610                               M0034300
      IF(KK.EQ.KKF.AND.I33.EQ.I3)GOTO 550                               M0034400
      NRS=0                                                             M0034500
      DO 530 I=1,9                                                      M0034600
      IF(MOD(I3,IPTVEC(I)).EQ.0)NRS=NRS+1                               M0034700
      IF(KK.EQ.I)NRP=NRS                                                M0034800
  530 CONTINUE                                                          M0034900
      ISZ=NRS*4+1                                                       M0035000
  540 KSCT=JJ                                                           M0035100
      KKF   =KK                                                         M0035200
      I33   =I3                                                         M0035300
      NBF   =ICLTAB(4,LINE)                                             M0035400
      NRF   =ICLTAB(5,LINE)                                             M0035500
C                                                                       M0035600
C  NR             RECORD NUMBER IN THE DESIRED CLDAT SECTION.           M0035700
C  NBF            FISRT EXFILE BLOCK  NUMBER OF THE CLDAT SECTION.      M0035800
C  NRF            FISRT EXFILE RECORD NUMBER OF THE CLDAT SECTION.      M0035900
C  ISZ            CLDAT RECORD SIZE.(DATA OF ONE POSITION = POINT)      M0036000
C  NRP            POSITION OF THE DATA WANTED.                          M0036100
C                                                                       M0036200
  550 CALL EREAD (EXFILE,R,NR,NBF,NRF,NRP,ISZ,IR)                       M0036300
C                                                                       M0036400
  600 IEE = 0                                                           M0036500
      RETURN                                                            M0036600
  610 IEE = 1                                                           M0036700
      KSCT=IPOW                                                         M0036800
      RETURN                                                            M0036900
      END                                                               M0037000
**** SOURCE FILE : M0001039.V08   ***
*
      SUBROUTINE BAD(ICNTRL,ITYPE,ID,VALUE)                             00000100
C---  ROUTINE TO FORMAT AND PRINT LINES OF PRINT FOR DEBUGGING          00000200
C---  EACH LINE CONTAINS UP TO SIX VALUES WITH IDENTIFIERS FOR EACH     00000300
C---  ICNTRL=-1  MEANS RELEASE THE BUFFER (DARRAY) FOR PRINTING AND BLNK00000400
C---  ICNTRL=0 MEANS BLANK THE BUFFER AND SET COLUMN POINTER NCOL TO 4  00000500
C---  ICNTRL GT 0 MEANS  TO PLACE ICNTRL ITEMS INTO THE BUFFER AND      00000600
C---  ICNTRL=-N MEANS PRINT N ITEMS AND THEN RELEASE BUFFER TO PRINT.   00000700
C---  AUTOMATICALLY PRINT THE BUFFER AS ROOM IS EXHAUSTED               00000800
C---  ITYPE =0 MEANS PRINT THE INTEGER AT VALUE                         00000900
C---    AND =1 MEANS PRINT THE DOUBLE PRECISION                         00001000
C---  ID IS THE 4 CHARACTER IDENTIFYING NAME FOR VALUE AND VALUE        00001200
C---     IS THE DATA TO BE FORMATTED INTO THE PRINT LINE.               00001300
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00001400
      INCLUDE 'DARRAY.INC'                                              00001500
      CHARACTER BLANK*3,STAR*2,EQUAL,ID*4                               00001600
      INTEGER VALUE                                                     00001900
      DIMENSION VALUE(*)                                                00002000
      DIMENSION II(2)                                                   00002100
      EQUIVALENCE (AA,II(1))                                            00002200
C                                                                       00002220
      SAVE NCOL                                                         00002230
C                                                                       00002300
C                                                                       00003300
C---     BUFFUL IS A FLAG TO SIGNAL THAT A BUFFER IS NOW FULL           00003400
C---     SO THAT IT SHOULD NOW BE EMPTIED BEFORE INSERTING MORE DATA    00003500
      LOGICAL BUFFUL                                                    00003600
C                                                                       00003610
      DATA BLANK/'   '/,STAR/'**'/,NCOL/4/,EQUAL/'='/                   00003620
C---                                                                    00003700
C---  IC IS A COUNT DOWN VARIABLE FOR CASES WHEN ICNTRL GT 1            00003800
      IC=0                                                              00003900
      BUFFUL=.FALSE.                                                    00004000
C---     TRANSFER ICNTRL TO ICNTRX SO ICNTRL IS NOT ALTERED             00004100
      ICNTRX=ICNTRL                                                     00004200
C---     THIS IS A PATCH TO ENABLE DUMPING OF DATA AT END OF CALL       00004300
C---     IF ICNTRX IS NEGATIVE, THEN DATA SHOULD BE DUMPED AT           00004400
C---     AT THE END OF THE CURRENT CALL                                 00004500
      IRLSE=1                                                           00004600
      IF(ICNTRX.LT.0) IRLSE=-1                                          00004700
C---     IF ID IS ZERO AND ICNTRX IS NEGATIVE THEN RELEASE NOW          00004800
      IF(ID(1:1).EQ.' '.AND.ICNTRX.LT.0) GO TO 300                      00004900
C---     SET ICNTRX POSITIVE, SINCE IRLSE HOLDS THE NEGATIVE INDICATION 00005000
      ICNTRX=IABS(ICNTRX)                                               00005100
      IF ( ICNTRX ) 300, 100, 200                                       00005200
C                                                                       00005300
C---  INITIALIZE THE BUFFER BY BLANK FILLING AND COLUMN SETTING         00005400
  100 CONTINUE                                                          00005500
      DARRAY=BLANK                                                      00005600
      NCOL=4                                                            00005800
      IF(.NOT.BUFFUL) GO TO 999                                         00005900
C---  BUFFER HAS JUST BEEN AUTOMATICALLY EMPTIED.  NOW INSERT DATA      00006000
      BUFFUL=.FALSE.                                                    00006100
      GO TO 210                                                         00006200
C                                                                       00006300
C---   ADD A NEW DATA ELEMENT INTO THE BUFFER LINE                      00006400
  200 CONTINUE                                                          00006500
      BUFFUL=.TRUE.                                                     00006600
      IF(NCOL+18.GT.120) GO TO 300                                      00006700
  210 CALL CFORM(BLANK,DARRAY,NCOL,1)                                   00006800
      NCOL=NCOL+1                                                       00006900
      IC=IC+1                                                           00007000
C---   PLACE AN ID FOR THE FIRST ARRAY EL, COUNTERS THEREAFTER          00007100
      IF(IC.EQ.1)  CALL CFORM(ID,DARRAY,NCOL,4)                         00007200
      IF(IC.GT.1) CALL ICONV(IC,DARRAY,NCOL,4)                          00007300
      NCOL=NCOL+4                                                       00007400
      CALL CFORM(EQUAL,DARRAY,NCOL,1)                                   00007500
      NCOL=NCOL+1                                                       00007600
C---   BRANCH BASED ON TYPE OF DATA -- INTEGER OR REAL                  00007700
      IF (ITYPE.EQ.0) THEN                                              00007900
C---   ADD AN INTEGER TO THE LINE BUFFER                                00009100
C---  THE INTEGER JJ IS SETUP BY THE MOVEMENT OF VALUE INTO AA          00009300
      CALL ICONV(VALUE(IC),DARRAY,NCOL,10)                              00009400
      NCOL=NCOL+10                                                      00009500
      CALL CFORM(BLANK,DARRAY,NCOL,3)                                   00009600
      NCOL=NCOL+3                                                       00009700
      ELSE IF (ITYPE.EQ.1) THEN                                         00009810
C---   ADD A REAL TO THE LINE BUFFER                                    00009900
C---  CARE MUST BE TAKEN TO TRANSFER DATA TO A DOUBLE WORD  BOUNDARY    00010100
      II(1)=VALUE(2*IC-1)                                               00010200
      II(2)=VALUE(2*IC)                                                 00010300
C---  THE DOUBLE VALUE IS NOW AVAILABLE IN AA THRU EQUIVALENCE          00010400
      INPUT=VALUE(2*IC-1)                                               00010420
      CALL FCONV(AA,DARRAY,NCOL,13,5)                                   00010500
      NCOL=NCOL+13                                                      00010600
      ELSE                                                              00010710
        CALL CFORM('******',DARRAY,NCOL,6)                              00010720
        NCOL=NCOL+13                                                    00010730
      ENDIF                                                             00010740
      GOTO 999                                                          00010750
C                                                                       00010800
C                                                                       00013100
C---   PRINT THE BUFFER AND BLANK THE LINE                              00013200
  300 CONTINUE                                                          00013300
C---  IF THE BUFFER IS EMPTIED AUTOMATICALLY, MARK IT WITH STARS        00013400
      IF(.NOT.BUFFUL) GO TO 310                                         00013500
      IF(IRLSE.GT.0) CALL CFORM(STAR,DARRAY,2,2)                        00013600
  310 CALL CPRINT(DARRAY)                                               00013700
      GO TO 100                                                         00013800
C---                                                                    00013900
  999 CONTINUE                                                          00014000
C---  CHECK TO SEE IF AN ARRAY HAS BEEN EXHAUSTED                       00014100
      IF(ICNTRX.GT.0.AND.IC.LT.ICNTRX) GO TO 200                        00014200
C---     IF IRLSE IS NEGATIVE THEN THE BUFFER SHOULD BE                 00014300
C---     RELEASED NOW                                                   00014400
      IF(IRLSE.GT.0) GO TO 9999                                         00014500
      IF(NCOL.EQ.4) GO TO 9999                                          00014600
C---     DATA IS PRESENT SO RELEASE THE BUFFER                          00014700
      CALL CPRINT(DARRAY)                                               00014800
      NCOL=4                                                            00014900
C                                                                       00015000
 9999 CONTINUE                                                          00015100
      RETURN                                                            00015200
      END                                                               00015300
**** SOURCE FILE : M0000873.V02   ***
*
C.....FORTRAN SUBROUTINE ....CHKRET              8/68               RN  CHKR0000
C                                                                       CHKR0010
C              FORTRAN SUBROUTINE CHKRET                                CHKR0020
C                                                                       CHKR0030
C PURPOSE      THIS SUBROUTINE IS A TABCYL INTERVAL SCREENING TECHNIQUE CHKR0040
C              THAT CONSTRUCTS A RECTANGLE AROUND THE INTERVAL BEING    CHKR0050
C              CONSIDERED.                                              CHKR0060
C                                                                       CHKR0070
C LINKAGE      CALL CHKRET(IHU,RAD,INTRCT,D,S)                          CHKR0080
C                                                                       CHKR0090
C ARGUMENTS    IHU    INDEX OF CURRENT TABCYL SEGMENT                   CHKR0100
C              RAD    THE RADIUS OF THE CIRCLE                          CHKR0110
C              INTRCT                                                   CHKR0120
C                                                                       CHKR0130
C              D      THE ARRAY CONTAINING THE TABCYL EXTERNAL          CHKR0140
C                     CANONICAL FORM                                    CHKR0150
C              S      THE ARRAY CONTAINING LINE CANONICAL FORM          CHKR0160
C SUBSIDIARIES  NONE                                                    CHKR0170
C                                                                       CHKR0180
      SUBROUTINE CHKRET(IHU,RAD,INTRCT,D,S)                             CHKR0190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            CHKR0200
      DIMENSION PX(6),PY(6),D(*),S(4)                                   CHKR0210
      IVERTL=0                                                          CHKR0230
      MINUS=0                                                           CHKR0240
      IPLUS=0                                                           CHKR0250
  400 DELY=D(IHU+8)-D(IHU+1)                                            CHKR0260
      DELX=D(IHU+7)-D(IHU)                                              CHKR0270
      DIHU4=D(IHU+4)                                                    CHKR0280
      IF(DABS(DIHU4).LT.1.0D-7) DIHU4=1.0D-7                            CHKR0290
      SL1Y=DELY/DIHU4                                                   CHKR0300
      SL1X=DELX/DIHU4                                                   CHKR0310
      SL2Y=SL1X                                                         CHKR0320
      SL2X=-SL1Y                                                        CHKR0330
      RD=RAD+1.0D-6                                                     CHKR0340
      BO1=RD*SL1X                                                       CHKR0350
      BO2=RD*SL1Y                                                       CHKR0360
      BO3=DABS(D(IHU+5))+RD                                             CHKR0370
      BO4=BO3*SL2X                                                      CHKR0380
      BO5=BO3*SL2Y                                                      CHKR0390
      BO6=DABS(D(IHU+6))+RD                                             CHKR0400
      BO7=BO6*SL2X                                                      CHKR0410
      BO8=BO6*SL2Y                                                      CHKR0420
      PX(5)=D(IHU)-BO1                                                  CHKR0430
      PY(5)=D(IHU+1)-BO2                                                CHKR0440
      PX(1)=PX(5)+BO4                                                   CHKR0450
      PY(1)=PY(5)+BO5                                                   CHKR0460
      PX(4)=PX(5)-BO7                                                   CHKR0470
      PY(4)=PY(5)-BO8                                                   CHKR0480
      PX(6)=D(IHU+7)+BO1                                                CHKR0490
      PY(6)=D(IHU+8)+BO2                                                CHKR0500
      PX(2)=PX(6)+BO4                                                   CHKR0510
      PY(2)=PY(6)+BO5                                                   CHKR0520
      PX(3)=PX(6)-BO7                                                   CHKR0530
      PY(3)=PY(6)-BO8                                                   CHKR0540
      XPLINE=S(1)*S(4)                                                  CHKR0550
      IF(DABS(S(2))-1.0D-7)1,1,2                                        CHKR0560
    1 IVERTL=1                                                          CHKR0570
      GO TO 3                                                           CHKR0580
    2 SLPLIN=-S(1)/S(2)                                                 CHKR0590
      X1PLIN=S(1)*S(4)                                                  CHKR0600
      Y1PLIN=S(2)*S(4)                                                  CHKR0610
      BPLIN=Y1PLIN-SLPLIN*X1PLIN                                        CHKR0620
    3 DO 10 I=1,4                                                       CHKR0630
      IF(IVERTL) 5,5,6                                                  CHKR0640
    5 YPLINE=(SLPLIN)*PX(I)+BPLIN                                       CHKR0650
      VALUE=PY(I)-YPLINE                                                CHKR0660
      GO TO 4                                                           CHKR0670
    6 VALUE=PX(I)-XPLINE                                                CHKR0680
    4 IF(VALUE) 11,12,13                                                CHKR0690
   11 MINUS=1                                                           CHKR0700
      GO TO 10                                                          CHKR0710
   13 IPLUS=1                                                           CHKR0720
   10 CONTINUE                                                          CHKR0730
   14 IF(MINUS-IPLUS) 15,12,15                                          CHKR0740
C                                                                       CHKR0750
C     THE APPROPRIATE LINE, THAT IS,THE ACTUAL LINE FOR TABPNT OR THE   CHKR0760
C     RADIUS PARALLEL LINE FOR TABCIR DOES NOT INTERSECT THE RECTANGLE  CHKR0770
C     THUS THIS INTERVAL IS ELIMINATED FROM FURTHER CONSIDERATION.      CHKR0780
C                                                                       CHKR0790
   15 INTRCT=0                                                          CHKR0800
      GO TO 16                                                          CHKR0810
C                                                                       CHKR0820
C     THE APPROPRIATE LINE DOES INTERSECT THE RECTANGLE SO THIS INTERVALCHKR0830
C     MUST BE EXAMINED FURTHER                                          CHKR0840
C                                                                       CHKR0850
   12 INTRCT=1                                                          CHKR0860
   16 CONTINUE                                                          CHKR0870
      RETURN                                                            CHKR0880
      END                                                               CHKR0890
**** SOURCE FILE : M0002823.V03   ***
*
C.....FORTRAN SUBROUTINE             CIRDEF...              5/1/68   GK CIRD0000
C                                                                       CIRD0010
C              FORTRAN LOGICAL FUNCTION CIRDEF                          CIRD0020
C                                                                       CIRD0030
C PURPOSE      TO DETERMINE WHETHER A CIRCLE HAS BEEN DEFINED           CIRD0040
C              AND IS A VERTICAL CYLINDER.                              CIRD0050
C                                                                       CIRD0060
C LINKAGE      CALL CIRDEF (A, N)                                       CIRD0070
C                                                                       CIRD0080
C ARGUMENTS    A       ARRAY CONTAINING THE CANONICAL FORM OF THE       CIRD0090
C                      CIRCLE                                           CIRD0100
C              N       ERROR CODE OF THE DIAGNOSTIC TO BE PRINTED       CIRD0110
C                      IN CASE THE CYLINDER IS NOT VERTICAL             CIRD0120
C                                                                       CIRD0130
C SUBSIDIARIES TYPE                ENTRY                                CIRD0140
C              REAL FUNCTION       ABS                                  CIRD0150
C              LOGICAL FUNCTION    CKDEF                                CIRD0160
C              SUBROUTINE          ERROR                                CIRD0170
C                                                                       CIRD0180
      LOGICAL FUNCTION CIRDEF (CIR,MN)                                  CIRD0190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            CIRD0200
      DIMENSION CIR(7)                                                  CIRD0210
      LOGICAL CKDEF                                                     CIRD0220
C                                                                       CIRD0230
C                                                                       CIRD0240
C                                                                       CIRD0250
      INCLUDE 'TOTAL.INC'                                               CIRD0381
      INCLUDE 'ZNUMBR.INC'                                              CIRD0446
C                                                                       CIRD0470
C                                                                       CIRD0490
C...     CHECK WHETHER INPUT CANONICAL FORM IS DEFINED                  CIRD0500
C                                                                       CIRD0510
      IF (CKDEF(CIR)) GO TO 1                                           CIRD0520
C                                                                       CIRD0530
C...     CHECK WHETHER CYLINDER IS WITHIN TOLERANCE OF VERTICAL         CIRD0540
C                                                                       CIRD0550
      IF (DABS(DABS(CIR(6))-Z1).LE.Z1EM5                                CIRD0560
     1    .AND.DABS(CIR(4)) .LE.Z1EM5                                   CIRD0570
     2    .AND.DABS(CIR(5)) .LE.Z1EM5) GO TO 2                          CIRD0580
C                                                                       CIRD0590
C...     ISSUE DIAGNOSTIC                                               CIRD0600
C                                                                       CIRD0610
      CALL ERROR(MN,'CIRDEF  ')                                         CIRD0620
C                                                                       CIRD0630
C...     RETURN VALUE TRUE                                              CIRD0640
C                                                                       CIRD0650
    1 CIRDEF=.TRUE.                                                     CIRD0660
      GO TO 9                                                           CIRD0670
C                                                                       CIRD0680
C...     RETURN VALUE FALSE                                             CIRD0690
C                                                                       CIRD0700
    2 CIRDEF=.FALSE.                                                    CIRD0710
    9 RETURN                                                            CIRD0720
       END                                                              CIRD0730
**** SOURCE FILE : CKDEF000.V01   ***
*
*                                                                       00000100
*  * CKDEF *                                                            00000200
*                                                                       00000300
*  LOGICAL FUNCTION CKDEF                                               00000400
*                                                                       00000500
*  PURPOSE  TO DETERMINE THAT THE ARGUMENT IS PROPERLY DEFINED          00000600
*           THE VALUE .FALSE. IS RETURNED IF DEFINED,.TRUE. OTHERWISE   00000700
*                                                                       00000800
      LOGICAL FUNCTION CKDEF(ARG)                                       00000900
C                                                                       00001000
      INCLUDE 'SDP.INC'                                                 00001100
C                                                                       00001200
      INTEGER ARG(2),STR,DTR,ASH,I3,I2                                  00001300
      LOGICAL FIRST                                                     00001400
      SAVE STR,DTR,ASH,FIRST                                            00001500
C                                                                       00001600
      DATA FIRST/.TRUE./                                                00001700
C                                                                       00001800
      IF (FIRST) THEN                                                   00001900
        I3=3*NBCHAR                                                     00002000
        I2=2*NBCHAR                                                     00002050
        STR=ISHFT(ICHAR('*'),I3)+ISHFT(ICHAR('T'),NBCHAR)+ICHAR('R')    00002100
        DTR=ISHFT(ICHAR('$'),I3)+ISHFT(ICHAR('T'),NBCHAR)+ICHAR('R')    00002200
        ASH=ISHFT(ICHAR('A'),I3)+ISHFT(ICHAR('S'),I2)                   00002300
     +     +ISHFT(ICHAR('H'),NBCHAR)                                    00002350
        FIRST=.FALSE.                                                   00002400
      ENDIF                                                             00002500
C                                                                       00002600
      IF ((ARG(1).EQ.STR).AND.(ARG(2).EQ.ASH)) THEN                     00002700
        CKDEF=.TRUE.                                                    00002800
        CALL ERROR(1,'CKDEF   ')                                        00002900
      ELSE IF ((ARG(1).EQ.DTR).AND.(ARG(2).EQ.ASH)) THEN                00003000
        CKDEF=.TRUE.                                                    00003100
      ELSE                                                              00003200
        CKDEF=.FALSE.                                                   00003300
      END IF                                                            00003400
      RETURN                                                            00003500
      END                                                               00003600
*                                                                       00003700
*  * CKSTR *                                                            00003800
*                                                                       00003900
*  LOGICAL FUNCTION CKSTR                                               00004000
*                                                                       00004100
*  PURPOSE  TO DETERMINE THAT THE ARGUMENT HAS BEEN SET TO '* TRASH'    00004200
*           THE VALUE .TRUE. IS RETURNED IF SET ,.FALSE. OTHERWISE      00004300
*                                                                       00004400
      LOGICAL FUNCTION CKSTR(ARG)                                       00004500
C                                                                       00004600
      INCLUDE 'SDP.INC'                                                 00004700
C                                                                       00004800
      INTEGER ARG(2),STR,ASH,I3                                         00004900
      LOGICAL FIRST                                                     00005000
      SAVE STR,ASH,FIRST                                                00005100
C                                                                       00005200
      DATA FIRST/.TRUE./                                                00005300
C                                                                       00005400
      IF (FIRST) THEN                                                   00005500
        I3=3*NBCHAR                                                     00005600
        I2=2*NBCHAR                                                     00005650
        STR=ISHFT(ICHAR('*'),I3)+ISHFT(ICHAR('T'),NBCHAR)+ICHAR('R')    00005700
        ASH=ISHFT(ICHAR('A'),I3)+ISHFT(ICHAR('S'),I2)                   00005800
     +     +ISHFT(ICHAR('H'),NBCHAR)                                    00005850
        FIRST=.FALSE.                                                   00005900
      ENDIF                                                             00006000
      IF ((ARG(1).EQ.STR).AND.(ARG(2).EQ.ASH)) THEN                     00006100
       CKSTR=.TRUE.                                                     00006200
      ELSE                                                              00006300
       CKSTR=.FALSE.                                                    00006400
      END IF                                                            00006500
      RETURN                                                            00006600
      END                                                               00006700
*                                                                       00006800
*  * CKDTR *                                                            00006900
*                                                                       00007000
*  LOGICAL FUNCTION CKDTR                                               00007100
*                                                                       00007200
*  PURPOSE  TO DETERMINE THAT THE ARGUMENT IS SET TO '$ TRASH'          00007300
*           THE VALUE .TRUE. IS RETURNED IF SET, .FALSE. OTHERWISE      00007400
*                                                                       00007500
      LOGICAL FUNCTION CKDTR(ARG)                                       00007600
C                                                                       00007700
      INCLUDE 'SDP.INC'                                                 00007800
C                                                                       00007900
      INTEGER ARG(2),DTR,ASH,I3                                         00008000
      LOGICAL FIRST                                                     00008100
      SAVE DTR,ASH,FIRST                                                00008200
C                                                                       00008300
      DATA FIRST/.TRUE./                                                00008400
C                                                                       00008500
      IF (FIRST) THEN                                                   00008600
        I3=3*NBCHAR                                                     00008700
        I2=2*NBCHAR                                                     00008750
        DTR=ISHFT(ICHAR('$'),I3)+ISHFT(ICHAR('T'),NBCHAR)+ICHAR('R')    00008800
        ASH=ISHFT(ICHAR('A'),I3)+ISHFT(ICHAR('S'),I2)                   00008900
     +     +ISHFT(ICHAR('H'),NBCHAR)                                    00008950
        FIRST=.FALSE.                                                   00009000
      ENDIF                                                             00009100
      IF ((ARG(1).EQ.DTR).AND.(ARG(2).EQ.ASH)) THEN                     00009200
       CKDTR=.TRUE.                                                     00009300
      ELSE                                                              00009400
       CKDTR=.FALSE.                                                    00009500
      END IF                                                            00009600
      RETURN                                                            00009700
      END                                                               00009800
**** SOURCE FILE : DARSIN00.ORG   ***
*
      DOUBLE PRECISION FUNCTION DARSIN(X)                               00000100
C DOUBLE PRECISION ARC SINE FUNCTION USING STANDARD FUNCTION            00000200
C                                                                       00000300
      DOUBLE PRECISION X                                                00000400
C                                                                       00000500
      DARSIN=DASIN(X)                                                   00000600
      RETURN                                                            00000700
      END                                                               00000800
C                                                                       00000900
C                                                                       00001000
C                                                                       00001100
      DOUBLE PRECISION FUNCTION DARCOS(X)                               00001200
C DOUBLE PRECISION ARC COS FUNCTION USING STANDARD FUNCTION             00001300
C                                                                       00001400
      DOUBLE PRECISION X                                                00001500
C                                                                       00001600
      DARCOS=DACOS(X)                                                   00001700
      RETURN                                                            00001800
      END                                                               00001900
C                                                                       00002000
C                                                                       00002100
C                                                                       00002200
      DOUBLE PRECISION FUNCTION DCOTAN(X)                               00002300
C DOUBLE PECISION COTANGENT USING DTAN FUNCTION                         00002400
C                                                                       00002500
      DOUBLE PRECISION X,T                                              00002600
C                                                                       00002700
      T=DTAN(X)                                                         00002800
      IF(T.NE.0.0) GO TO 10                                             00002900
      DCOTAN=1.0D38                                                     00003000
      RETURN                                                            00003100
  10  DCOTAN=1.0/T                                                      00003200
      RETURN                                                            00003300
      END                                                               00003400
**** SOURCE FILE : M0002832.V06   ***
*
C                                                                       DEFE0001
C.....FORTRAN SUBROUTINE             DEFEXT...              3/1/68   GK DEFE0002
C                                                                       DEFE0010
C              FORTRAN SUBROUTINE DEFEXT                                DEFE0020
C                                                                       DEFE0030
C PURPOSE      TO PROVIDE A COMMON EXIT TO THE DEFINITION               DEFE0040
C              REDUCTION SUBROUTINES, TO MOVE THE RESULTANT             DEFE0050
C              CANONICAL FORM INTO THE RESULT CELLS, PRINT              DEFE0060
C              ERROR MESSAGES, PRINT THE CANONICAL FORM                 DEFE0070
C              IF THE APPROPRIATE PRINT COMMAND IS IN                   DEFE0080
C              EFFECT AND TO RESTORE THE ARRAY R TO ITS                 DEFE0090
C              INITIAL VALUE.                                           DEFE0100
C                                                                       DEFE0110
C LINKAGE      CALL DEFEXT (RESULT)                                     DEFE0120
C                                                                       DEFE0130
C ARGUMENTS    RESULT  AN ARRAY TO CONTAIN THE RESULTANT                DEFE0140
C                      CANONICAL FORM                                   DEFE0150
C                                                                       DEFE0160
C SUBSIDIARIES TYPE                ENTRY                                DEFE0170
C              SUBROUTINE          ERROR                                DEFE0180
C              SUBROUTINE          PRINT                                DEFE0190
C              SUBROUTINE          UNDEF                                DEFE0200
C              SUBROUTINE          UNPACK                               DEFE0210
C                                                                       DEFE0220
      SUBROUTINE DEFEXT (RESULT)                                        DEFE0230
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            DEFE0240
      DIMENSION RESULT(*)                                               DEFE0241
      INTEGER INAM(37,2)                                                DEFE0244
      CHARACTER*8  RNAME, RNAM(22)                                      DEFE0252
C                                                                       DEFE0260
C                                                                       DEFE0270
C                                                                       DEFE0280
      INCLUDE 'TOTAL.INC'                                               DEFE0421
      INCLUDE 'DEF.INC'                                                 DEFE0531
      INCLUDE 'DSHAR3.INC'                                              DEFE0631
      INCLUDE 'LDEF.INC'                                                DEFE0681
      INCLUDE 'IDEF.INC'                                                DEFE0771
      INCLUDE 'ISHR16.INC'                                              DEFE0841
C                                                                       DEFE0843
      DATA INAM / 4, 6,15,16,18,19,23,24,25,27,                         DEFE0850
     1                    29,37,38,43,44,47,48,51,57,58,                DEFE0851
     2                    59,69,70,73,74,75,76,77,79,93,                DEFE0852
     3 5153,5154,5155,5156,5157,5158,5159,                              DEFE0853
     4                     1, 2, 3, 3, 4, 5, 6, 6, 6, 7,                DEFE0854
     5                     8, 9, 9,10,11,12,13,14,15,16,                DEFE0855
     6                    10,17,17,18,18,18,18,21,21,19,                DEFE0856
     6   20,  20,  20,  20,  20,  20,  20/                              DEFE0857
      DATA RNAM                                                         DEFE0860
     1 /'APT003  ','APT004  ','APT008  ','APT009  ','APT012  ',         DEFE0861
     2  'APT016  ','APT023  ','APT027  ','APT106  ','APT013  ',         DEFE0862
     3  'APT044  ','APT059  ','APT056  ','APT073  ','APT053  ',         DEFE0863
     4  'APT055  ','APT074  ','APT070  ','APT105  ','APT109  ',         DEFE0864
     5  'APT034  ','DEFEXT??'/                                          DEFE0865
C IMAX: ANZAHL FEHLERNUMMERN, MAX: ANZAHL ROUTINENEN-NAMEN + 1 '??'     DEFE0867
      DATA IMAX /37/, MAX /22/                                          DEFE0868
C                                                                       DEFE0870
C                                                                       DEFE0880
C...     CHECK FOR ERRORS                                               DEFE0890
C                                                                       DEFE0900
      IF (IERROR.EQ.0) GO TO 20                                         DEFE0910
      DO 810 I=1,IMAX                                                   DEFE0911
      IN=MAX                                                            DEFE0912
      IF (IERROR.NE.INAM(I,1))GOTO 810                                  DEFE0913
      IN=INAM(I,2)                                                      DEFE0914
      GOTO 820                                                          DEFE0915
  810 CONTINUE                                                          DEFE0916
  820 RNAME=RNAM(IN)                                                    DEFE0918
      CALL ERROR (IERROR,RNAME)                                         DEFE0920
   10 CALL UNDEF (RESULT)                                               DEFE0930
      UNFLAG=.FALSE.                                                    DEFE0940
      GO TO 40                                                          DEFE0950
C                                                                       DEFE0960
   20 IF (UNFLAG) GO TO 10                                              DEFE0970
C                                                                       DEFE0980
C...     DEFINITION OK -- CHECK INTFLG, PRNTON AND MOVE R TO RESULT     DEFE0990
C                                                                       DEFE1000
      CALL UNPACK (RESULT,IS1,IS2,IS3)                                  DEFE1010
C   MATRIX ?                                                            DEFE1013
      IF(IS1.EQ.18)GOTO 31                                              DEFE1016
      DO 30 I=1,IS2                                                     DEFE1020
   30 RESULT(I)=R(I)                                                    DEFE1030
   31 IF(.NOT.PRNTON)GO TO 40                                           DEFE1040
      IF((IS1.GT.0).AND.(IS1.LT.27))CALL PRINT(3,RESULT,1)              DEFE1045
   40 IERROR = 0                                                        DEFE1050
      DO 41 I = 1,10                                                    DEFE1060
   41 R(I) = 0.                                                         DEFE1070
      R(6) = 1.                                                         DEFE1080
       RETURN                                                           DEFE1090
       END                                                              DEFE1100
**** SOURCE FILE : M0000897.V04   ***
*
C                                                                       DYNP0001
C.....FORTRAN SUBROUTINE             DYNDMP...              4/1/68   GK DYNP0002
CIBFTC DYNDMP  XR6                                                      DYNP0010
      SUBROUTINE DYNDMP (BRKPNT,ONOFF,PTNO)                             DYNP0020
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DYNP0030
C                                                                       DYNP0040
C                                                                       DYNP0050
C                                                                       DYNP0060
C                                                                       DYNP0070
      INCLUDE 'TOTAL.INC'                                               DYNP0204
      INCLUDE 'FXCOR.INC'                                               DYNP0456
      INCLUDE 'IFXCOR.INC'                                              DYNP0617
      INCLUDE 'ISHR18.INC'                                              DYNP0715
      INCLUDE 'KNUMBR.INC'                                              DYNP0841
      INCLUDE 'IBRKPT.INC'                                              DYNP0842
C                                                                       DYNP0910
C...  21. ADDCOM BLOCK                                                  DYNP0912
C                                                                       DYNP0914
      COMMON/ADDCOM/ ADDCOM                                             DYNP0916
      DIMENSION ADDCOM(25)                                              DYNP0918
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            DYNP0920
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),              DYNP0921
     2            (ADDCOM(25),KDYNFL)                                   DYNP0922
C                                                                       DYNP0924
C ***    VALUES OF BRKPNT SET AS FOLLOWS                                DYNP0925
C                  1 ACTIVATES ALL BREAKPOINTS                          DYNP0926
C                  100 ACTIVATES ALL AJUNDD AND AMIND BREAKPOINTS       DYNP0927
C                  200 ACTIVATES ALL ARLM3 BREAKPOINTS                  DYNP0928
C                  500 ACTIVATES ALL GO BREAKPOINTS                     DYNP0929
C                  IJK ACTIVATES THE JK BREAKPOINT IN THE I SERIES      DYNP0930
C ***                                                                   DYNP0932
C                                                                       DYNP0933
C                                                                       DYNP0934
      KDYNFL=K1                                                         DYNP0935
      N=51                                                              DYNP0938
      L = BRKPNT                                                        DYNP0940
      IF(L.EQ.K1) GOTO 30                                               DYNP0950
      J=L/100                                                           DYNP0960
      K=L-J*100                                                         DYNP0970
      L=K10*(J-K1)+K                                                    DYNP0980
      N=L                                                               DYNP0990
C...  IF K=0, ACTIVATE OR DEACTIVATE ALL BREAKPOINTS FOR THAT ROUTINE   DYNP1000
      IF(K)50,10,30                                                     DYNP1010
   10 IF(J.NE.K2)GOTO 20                                                DYNP1020
      N=N+K10                                                           DYNP1030
   20 N=N+K10                                                           DYNP1040
      L=L+K1                                                            DYNP1050
C...  EACH BREAKPOINT CORRESPONDS TO AN ELEMENT OF THE ARRAY BRAKPT(I)  DYNP1060
C        THE BREAKPOINT IS ACTIVATED OR DEACTIVATED ACCORDING AS HOW    DYNP1070
C        BRAKPT(J)=1 OR 0                                               DYNP1080
   30 DO 40 J=L,N                                                       DYNP1090
   40 IBRKPT(J) = ONOFF                                                 DYNP1100
C...  STRTNO CONTAINS THE NUMBER OF THE FIRST CUTTER POINT TO OUTPUT    DYNP1110
C     DYNDMP PRINTING FOR EACH CUT SEQUENCE                             DYNP1120
      STRTNO=PTNO                                                       DYNP1130
   50 RETURN                                                            DYNP1140
       END                                                              DYNP1150
**** SOURCE FILE : M0011449.W02   ***
*
      BLOCK DATA BDEBUF                                                 M0000010
C                                                                       M0000020
      COMMON/EBUF/EBUFF,K,N,KEB,KRF                                     M0000030
      INTEGER EBUFF(516)                                                M0000040
      DATA K/2/,N/0/,KEB/1/,KRF/0/                                      M0000050
      END                                                               M0000060
C                                                                       M0000100
C      FORTRAN SUBROUTINE  EWRITE                                       M0000200
C  PURPOSE   TO BLOCK CL RECORDS                                        M0000300
C                                                                       M0000400
C  LINKAGE     CALL EWRITE(EXFILE,MR,ICLDAT,J,IR)                       M0000500
C                                                                       M0000600
C  ARGUMENTS   EXFILE  FILE NUMBER OF EXFILE                            M0000700
C              MR      INTEGER TO CONTAIN RECORD NUMBER                 M0000800
C              ICLDAT  ARRAY CONTAINING THE RECORD TO BE WRITTEN ON     M0000900
C                      EXFILE.                                          M0001000
C              J       NUMBER OF WORD (4 BYTE) IN RECORD                M0001100
C              IR      ERROR RETURN FLAG, =0 NOERROR , =1 ERROR.        M0001200
C                                                                       M0001300
C  IMPORTANT VARIABLES                                                  M0001400
C              KEB     NUMBER OF 1ST RECORD IN A BLOCK                  M0001500
C              N       NUMBER OF LAST RECORD IN A BLOCK                 M0001600
C              EBUFF   THE BUFFER TO CONTAIN THE RECORDS.               M0001700
C                                                                       M0001800
      SUBROUTINE EWRITE(EXFILE,MR,ICLDAT,J,IR)                          M0001900
C                                                                       M0002000
      INCLUDE 'CLDT.INC'                                                M0002102
      LOGICAL GOFLG                                                     M0002210
C                                                                       M0002300
      COMMON/EBUF/EBUFF,K,N,KEB,KRF                                     M0002310
      SAVE /EBUF/                                                       M0002320
      INTEGER EBUFF(516),EXFILE,ICLDAT(516)                             M0002400
      INTEGER KFINI,BCDF                                                M0002610
      LOGICAL FIRST                                                     M0002620
      SAVE KFINI,FIRST                                                  M0002630
      DATA GOFLG/.FALSE./                                               M0002720
      DATA FIRST/.TRUE./                                                M0002730
C                                                                       M0002740
      IF (FIRST)THEN                                                    M0002750
         KFINI = BCDF('FINI')                                           M0002760
         FIRST = .FALSE.                                                M0002770
      ENDIF                                                             M0002780
C                                                                       M0002800
      IF(K+J.GT.514) GO TO 1                                            M0002900
   10 N=N+1                                                             M0003000
      ICLRCD=N                                                          M0003100
   15 EBUFF(1) = KEB                                                    M0003200
      EBUFF(2) = N                                                      M0003300
      EBUFF(K+1)=N                                                      M0003400
      EBUFF(K+2)=J                                                      M0003500
      K=K+2                                                             M0003600
      DO 20 I=1,J                                                       M0003700
      K=K+1                                                             M0003800
   20 EBUFF(K)=ICLDAT(I)                                                M0003900
C     IF THE RECORD IS FINI,  TRUNCATE THE BLOCK                        M0004000
C       AND WRITE OUT TO EXFILE.                                        M0004100
      IF(ICLDAT(1).EQ.KFINI) GO TO 30                                   M0004200
      MR = N                                                            M0004300
      RETURN                                                            M0004400
C                                                                       M0004500
C     BUFFER IS FULL, WRITE THE BLOCK ON EXFILE                         M0004600
C                                                                       M0004700
    1 NR=0                                                              M0004800
      CALL AWRITE(EXFILE,NR,EBUFF,K,IR)                                 M0004900
      ICLBLK=NR                                                         M0005000
      K=2                                                               M0005100
      KEB = N + 1                                                       M0005200
      GO TO 10                                                          M0005300
C                                                                       M0005400
   30 EBUFF(2)=N                                                        M0005500
      NR=0                                                              M0005600
      CALL AWRITE(EXFILE,NR,EBUFF,K,IR)                                 M0005700
      RETURN                                                            M0005800
      END                                                               M0005850
C                                                                       M0005900
C    ..  SUBROUTINE EREAD  ....                                         M0006000
C                                                                       M0006100
C  PURPOSE   TO GET 1 CL RECORD                                         M0006200
C                                                                       M0006300
C  LINKAGE     CALL EREAD(EXFILE,IBUFF,NN,NBF,NRF,NRP,ISZ,IR)           M0006400
C                                                                       M0006500
C  ARGUMENT    EXFILE  FILE NUMBER OF EXFILE                            M0006600
C              IBUFF   INTEGER ARRAY TO CONTAIN THE READ RECORD.        M0006700
C              NN      INTEGER SEARCHED POSITON.                        M0006800
C              NBF     INTEGER FIRST BLOCK  NUMBER TO BE READ.          M0006900
C              NRF     INTEGER FIRST RECORD NUMBER TO BE READ.          M0007000
C              NRP     INTEGER POSITION OF DESIRED DATA.                M0007100
C              ISZ     INTEGER TO CONTAIN THE SIZE OF RECORD.           M0007200
C              IR      RETURN ERROR FLAG. =0 NO ERROR  ,  =1 ERROR.     M0007300
C                                                                       M0007400
C  IMPORTANT VARIABLES                                                  M0007500
C              KK      POINTER TO FIND THE POSITION OF RECORD IN THE    M0007600
C                      BLOCK.                                           M0007700
C                                                                       M0007800
      SUBROUTINE EREAD(EXFILE,IBUFF,NN,NBF,NRF,NRP,ISZ,IR)              M0007900
      INCLUDE 'CLDT.INC'                                                M0007922
      LOGICAL GOFLG                                                     M0007930
C                                                                       M0007940
      COMMON/EBUF/EBUFF,K,N,KEB,KRF                                     M0007942
      SAVE /EBUF/                                                       M0007944
      INTEGER EBUFF(516),EXFILE,NCL(2),GODLT                            M0007950
      INTEGER BCDF                                                      M0007952
      LOGICAL FIRST                                                     M0007954
      DIMENSION IBUFF(516)                                              M0007960
      DATA GOFLG/.FALSE./                                               M0007990
      DATA FIRST/.TRUE./                                                M0007991
C                                                                       M0007992
      IF (FIRST)THEN                                                    M0007993
         NCL(1) = BCDF('CLDA')                                          M0007994
         NCL(2) = BCDF('TA  ')                                          M0007995
         GODLT = BCDF('GODL')                                           M0007996
         FIRST = .FALSE.                                                M0007997
      ENDIF                                                             M0007998
C                                                                       M0008000
C     WRITE THE CURRENT BLOCK                                           M0008100
C                                                                       M0008200
      IF(K.EQ.2)GOTO 100                                                M0008300
      NR = 0                                                            M0008400
      CALL AWRITE (EXFILE,NR,EBUFF,K,IR)                                M0008500
      ICLBLK = NR                                                       M0008600
      KEB = N + 1                                                       M0008700
      K = 2                                                             M0008800
C                                                                       M0008900
C     RETRIEVE A DEFINED BLOCK CONTAINING THE LAST MOTION COMMAND.      M0009000
C                                                                       M0009100
  100 IF(ISZ.GT.0)GOTO 130                                              M0009200
      IF(NB.EQ.NBF)GOTO 110                                             M0009300
      KS = 516                                                          M0009400
      NB = NBF                                                          M0009500
      CALL AREAD (EXFILE,NB,EBUFF,KS,IR)                                M0009600
C                                                                       M0009700
C     STANDARD EXFILE RECORD FORMAT                                     M0009800
  110 JJ=KS+3+2*ISZ*(NRP-NN+1)                                          M0009900
      MM=JJ-3-2*ISZ                                                     M0010000
      DO 120 I=JJ,MM                                                    M0010100
  120 IBUFF(I-JJ+1)=EBUFF(I)                                            M0010200
      RETURN                                                            M0010300
C                                                                       M0010400
C     EXFILE RECORD EXTENDED FORMAT. MORE THAN ONE MOTION COMMAND.      M0010500
  130 IF(KRF.NE.NRF)GOTO 150                                            M0010600
      IF(NN.GT.MAXN)GOTO 205                                            M0010700
      IF(NN.GT.MINN)GOTO 230                                            M0010800
  150 NB=NBF-1                                                          M0010900
      MINN=0                                                            M0011000
      KRF=NRF                                                           M0011100
C                                                                       M0011200
C     READ FIRST BLOCK OF THE CLDAT SECTION.                            M0011300
  160 NB = NB + 1                                                       M0011400
      IF(NB.GT.ICLBLK)CALL HELP                                         M0011500
      KS = 516                                                          M0011600
      CALL AREAD (EXFILE,NB,EBUFF,KS,IR)                                M0011700
      IF(NRF.GT.EBUFF(2)) GO TO 160                                     M0011800
C                                                                       M0011900
C     START OF THE CLDAT SECTION FOUND.                                 M0012000
  170 KK = 3                                                            M0012100
      GOTO 185                                                          M0012200
  180 KK = KK+EBUFF(KK+1) + 2                                           M0012300
      IF (KK.GE.KS) CALL HELP                                           M0012400
  185 IF (EBUFF(KK).LT.NRF)GOTO 180                                     M0012500
C                                                                       M0012600
C     IS IT A MOTION COMMAND ?                                          M0012700
  190 IF(EBUFF(KK+2).EQ.NCL(1))GOTO 220                                 M0012800
  200 KK = KK+EBUFF(KK+1) + 2                                           M0012900
      IF (KK.GE.KS-1) GOTO 160                                          M0013000
      GOTO 190                                                          M0013100
  205 MINN=MAXN                                                         M0013200
  210 GOFLG=.FALSE.                                                     M0013300
      GOTO 200                                                          M0013400
C                                                                       M0013500
C     IS IT A CLDATA RECORD GIVING POSITIONS ?                          M0013600
  220 IF(EBUFF(KK+3).NE.NCL(2))GOTO 200                                 M0013700
      IF(EBUFF(KK+10).EQ.GODLT)GOFLG=.TRUE.                             M0013800
      IF(EBUFF(KK+ 9).EQ.1)GOTO 200                                     M0013900
      IF(GOFLG)GOTO 210                                                 M0014000
C                                                                       M0014100
C     IS DEMANDED POSITION WITHIN THAT RECORD ?                         M0014200
      MAXN=MINN+EBUFF(KK+7)/ISZ                                         M0014300
      IF(MAXN.GE.NN)GOTO 230                                            M0014400
      MINN=MAXN                                                         M0014500
      GOTO 200                                                          M0014600
C                                                                       M0014700
C     POSITION FOUND                                                    M0014800
  230 JJ=KK+2*ISZ*(NN-MINN-1)                                           M0014900
      IF(NRP.EQ.0)GOTO 240                                              M0015000
C     EXFILE RECORD EXTENDED FORMAT.                                    M0015100
      JJ=JJ+8*NRP+4                                                     M0015200
      MM=JJ+5                                                           M0015300
      GOTO 250                                                          M0015400
C     EXFILE RECORD STANDARD FORMAT.                                    M0015500
  240 JJ=JJ+10                                                          M0015600
      MM=JJ+2*ISZ-3                                                     M0015700
  250 I=0                                                               M0015800
      DO 260 J=JJ,MM                                                    M0015900
      I=I+1                                                             M0016000
      IF(NRP.GT.0)IBUFF(I+6)=EBUFF(J)                                   M0016100
  260 IBUFF(I)=EBUFF(J)                                                 M0016200
C                                                                       M0016300
      RETURN                                                            M0016400
      END                                                               M0016500
**** SOURCE FILE : M0008144.V03   ***
*
      SUBROUTINE ERRLOD(IRET,NAME)                                      M0000100
C                                                                       M0000200
C CALLS APT IV ERROR ROUTINE FOR ERROR MESSAGES                         M0000300
C  FURTHER EXPLAINING ERROR TEXTS ARE OUTPUT THRU DARRAY                M0000400
C                                                                       M0000500
C                                                                       M0000600
      CHARACTER*8 NAME,ERRO,SUBNAM                                      M0000720
      INCLUDE 'DARRAY.INC'                                              M0000820
C                                                                       M0001000
      DATA ERRO/'  ERROR '/, SUBNAM/' LOADMO '/                         M0001100
C                                                                       M0001200
C                                                                       M0001300
      CALL CFORM(' ***** DYNLOAD ',DARRAY,1,15)                         M0001400
      CALL CFORM(ERRO,DARRAY,16,8)                                      M0001500
      CALL ICONV(IRET,DARRAY,24,5)                                      M0001600
      CALL CFORM('ISN',DARRAY,36,3)                                     M0001700
      CALL CFORM(' FROM SUBROUTINE ',DARRAY,44,17)                      M0001800
      CALL CFORM(SUBNAM,DARRAY,61,8)                                    M0001900
      CALL CFORM(' *****',DARRAY,69,6)                                  M0002000
      CALL CPRINT(DARRAY)                                               M0002100
C                                                                       M0002200
      GOTO(10,20,30,40,50,60,70),IRET                                   M0002300
      GOTO 90                                                           M0002400
C                                                                       M0002500
C WANTED MODULE CANNOT BE FOUND                                         M0002600
   10 CALL CFORM(' MODULE = ',DARRAY,1,10)                              M0002700
      CALL CFORM(NAME,DARRAY,11,8)                                      M0002800
      GOTO 80                                                           M0002900
C                                                                       M0003000
C EXTERNAL REFERENCE IS NOT SOLVED                                      M0003100
   20 CALL CFORM(' EXTERNAL REFERENCE = ',DARRAY,1,22)                  M0003200
      CALL CFORM(NAME,DARRAY,23,8)                                      M0003300
      GOTO 80                                                           M0003400
C                                                                       M0003500
C NOT ENOUGH CORE AVAILABLE                                             M0003600
   30 CALL CFORM(' FOR MODULE = ',DARRAY,1,14)                          M0003700
      CALL CFORM(NAME,DARRAY,15,8)                                      M0003800
      GOTO 80                                                           M0003900
C                                                                       M0004000
C MODULE NOT IN LIBRARY                                                 M0004100
   40 CALL CFORM(' MODULE = ',DARRAY,1,10)                              M0004200
      CALL CFORM(NAME,DARRAY,11,8)                                      M0004300
      GOTO 80                                                           M0004400
C                                                                       M0004500
C CESD TABLE FOR LOADED MODULES TOO SHORT                               M0004600
   50 CALL CFORM(' NEXT CESD ENTRY = ',DARRAY,1,19)                     M0004700
      CALL CFORM(NAME,DARRAY,20,8)                                      M0004800
      GOTO 80                                                           M0004900
C                                                                       M0005000
C CESD-TABLE FOR LOAD-MODULE TOO SHORT                                  M0005100
   60 CALL CFORM(' MODULE = ',DARRAY,1,10)                              M0005200
      CALL CFORM(NAME,DARRAY,11,8)                                      M0005300
      GOTO 80                                                           M0005400
C                                                                       M0005500
C TOO MANY MODULES TO BE LOADED                                         M0005600
   70 CALL CFORM(' MODULE = ',DARRAY,1,10)                              M0005700
      CALL CFORM(NAME,DARRAY,11,8)                                      M0005800
C                                                                       M0005900
   80 CALL CPRINT(DARRAY)                                               M0006000
      CALL ERROUT(1000+IRET)                                            M0006100
C                                                                       M0006200
   90 RETURN                                                            M0006300
      END                                                               M0006400
**** SOURCE FILE : M0011447.V10   ***
*
C.....FORTRAN SUBROUTINE  ....ERROR          8/68                    HG ERRO0001
C...  FORTRAN SUBROUTINE               ERROR                            ERRO0002
C                                                                       ERRO0010
C              FORTRAN SUBROUTINE ERROR                                 ERRO0020
C                                                                       ERRO0030
C PURPOSE      TO PRINT THE ERROR CODE OF A GEOMETRIC DIAGNOSTIC.       ERRO0040
C                                                                       ERRO0050
C LINKAGE      CALL ERROR (I,SUBNAM)                                    ERRO0060
C                                                                       ERRO0070
C ARGUMENTS    I       INTEGER ERROR CODE OF DIAGNOSTIC                 ERRO0080
C                                                                       ERRO0090
C SUBSIDIARIES NONE                                                     ERRO0100
C                                                                       ERRO0110
      SUBROUTINE ERROR (IARG,SUBNAM)                                    ERRO0120
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            ERRO0130
C                                                                       ERRO0131
      INCLUDE 'TOTAL.INC'                                               ERRO0137
C                                                                       ERRO0139
C...            SYSTEM I/O FILE NAMES                                   ERRO0140
C                                                                       ERRO0145
      INCLUDE 'SYMFIL.INC'                                              ERRO0152
      CHARACTER*8 SUBNAM,ERRR,ERRO,WARN                                 ERRO0188
C                                                                       ERRO0189
      LOGICAL FIRST                                                     ERRO0190
      DIMENSION KGERR(10)                                               ERRO0191
      SAVE KGERR,FIRST                                                  ERRO0192
C                                                                       ERRO0193
C...      32.  PARAMETERS REQUIRED BY SUPERVISOR                        ERRO0194
C                                                                       ERRO0195
          COMMON/SUPER/ERR,XC,CL,PX,ERRX,END,FINI,ASM,ABEND,XTRAS       ERRO0196
          DIMENSION XTRAS(7),CFLAGS(4),LXTRAS(7)                        ERRO0197
          INTEGER   ERRX,XTRAS                                          ERRO0198
          LOGICAL   ERR,FINI,XC,CL,ASM,LXTRAS,CFLAGS,PX,END,ABEND       ERRO0199
          EQUIVALENCE (LXTRAS(1),XTRAS(1)),(CFLAGS(1),ERR)              ERRO0200
      INCLUDE 'DARRAY.INC'                                              ERRO0201
      INTEGER Z4E,BCDF                                                  ERRO0202
      PARAMETER (Z4E=1308622848)                                        ERRO0203
C... INITILIZE ARRAY INDICATING WHICH ERRORS ARE OF SEVERITY LEVEL FOUR.ERRO0204
      INTEGER ERRLEV(20),IERRN                                          ERRO0205
      DATA IERRN/20/,ERRLEV/2,3,8,9,30,40,45,49,50,71,84,92,94,5129,6*0/ERRO0206
      DATA WARN/' WARNING'/,ERRO/'  ERROR '/                            ERRO0207
      DATA KGERR/0,0,Z4E,0,Z4E,1,Z4E,0,2*0/,FIRST/.TRUE./               ERRO0208
      IF (FIRST) THEN                                                   ERRO0209
        KGERR(1) = BCDF('GERR')                                         ERRO0210
        KGERR(2) = BCDF('    ')                                         ERRO0211
        FIRST = .FALSE.                                                 ERRO0212
      ENDIF                                                             ERRO0213
C                                                                       ERRO0214
      LARG=IARG                                                         ERRO0215
C... SET ERROR LEVEL INDICATOR FOR THE SUPERVISOR.                      ERRO0216
      KERRX=4                                                           ERRO0217
      DO 5 IERR=1,IERRN                                                 ERRO0218
      IF (LARG .EQ.ERRLEV(IERR))GOTO 8                                  ERRO0219
    5 CONTINUE                                                          ERRO0220
      KERRX=8                                                           ERRO0221
    8 XTRAS(8/KERRX) = XTRAS(8/KERRX) + 1                               ERRO0222
      KGERR(8)=LARG                                                     ERRO0223
      CALL CPRINT(DARRAY)                                               ERRO0224
      CALL RECORD(KGERR(4))                                             ERRO0225
      ERRR = WARN                                                       ERRO0226
      IF(KERRX.GT.4) ERRR = ERRO                                        ERRO0227
      IF(KERRX.EQ.4.AND.ERRX.LT.4) ERRX=4                               ERRO0228
      IF(KERRX.EQ.8.AND.ERRX.LT.8) ERRX=8                               ERRO0229
      NR=0                                                              ERRO0230
      KGERR( 9) = BCDF(SUBNAM(1:4))                                     ERRO0231
      KGERR(10) = BCDF(SUBNAM(5:8))                                     ERRO0232
      CALL CFORM(' ***** DEFINITION ',DARRAY,1,18)                      ERRO0234
      CALL CFORM(ERRR,DARRAY,19,8)                                      ERRO0235
      CALL ICONV(LARG,DARRAY,27,5)                                      ERRO0236
      CALL CFORM('ISN',DARRAY,36,3)                                     ERRO0237
      CALL ICONV(KGERR(4),DARRAY,39,5)                                  ERRO0238
      CALL CFORM(' FROM SUBROUTINE ',DARRAY,44,17)                      ERRO0239
      CALL CFORM(SUBNAM,DARRAY,61,8)                                    ERRO0240
      CALL CFORM('*****',DARRAY,69,5)                                   ERRO0241
      CALL CPRINT(DARRAY)                                               ERRO0242
      CALL ERROUT(LARG)                                                 ERRO0243
      KGERR( 6)=2                                                       ERRO0244
      CALL EWRITE(EXFILE,NR,KGERR,10,IR)                                ERRO0245
      RETURN                                                            ERRO0248
       END                                                              ERRO0250
**** SOURCE FILE : M0003404.V06   ***
*
C                                                                       ERT00001
C                                                                       ERT00002
C.....FORTRAN SUBROUTINE             ERROUT...                          ERT00100
C                                                                       ERT00200
C PURPOSE      TO PRINT DIAGNOSTICS                                     ERT00300
C                                                                       ERT00400
C LINKAGE      CALL ERROUT(NERR)                                        ERT00500
C                                                                       ERT00600
C ARGUMENTS    NERR       INTEGER ERROR NUMBER                          ERT00700
C                                                                       ERT00800
C                                                                       ERT00900
      SUBROUTINE ERROUT(NERR)                                           ERT01000
C                                                                       ERT01100
C...                ...SYMBOLIC FILE DEFINITIONS...                     ERT01200
C                                                                       ERT01300
C                                                                       ERT01800
C...                ...ERROR DIAGNOSTICS                                ERT01900
C                                                                       ERT02000
      INCLUDE 'EXERR.INC'                                               ERT02110
      CHARACTER  B*120,NOTEXT*52                                        ERT02310
C                                                                       ERT02400
      DATA B/' '/                                                       ERT02500
      DATA NOTEXT                                                       ERT02600
     +     /'THERE IS NO DIAGNOSTIC MESSAGE FOR THIS ERROR NUMBER'/     ERT02700
C                                                                       ERT02800
C...     POSITION OF THE CURRENT ERROR NUMBER                           ERT02900
C                                                                       ERT03000
      I=0                                                               ERT03100
      NUMMIN=1                                                          ERT03200
      NUMMAX=ERRDM                                                      ERT03300
      NUMBER=IABS(NERR)                                                 ERT03400
   10 NUMMER=(NUMMIN+NUMMAX)/2                                          ERT03500
      NUMB=ERRAD1(NUMMER)                                               ERT03600
      IF(I.GT.ERND)GOTO  40                                             ERT03700
      I=I+1                                                             ERT03800
      IF(NUMBER-NUMB)30,60,20                                           ERT03900
   20 NUMMIN=NUMMER+1                                                   ERT04000
      GOTO 10                                                           ERT04100
   30 NUMMAX=NUMMER-1                                                   ERT04200
      GOTO 10                                                           ERT04300
   40 CALL CFORM(NOTEXT,B,8,52)                                         ERT04400
      CALL CPRINT(B)                                                    ERT04500
      GOTO 80                                                           ERT04600
   60 KK=ERRAD2(NUMMER)                                                 ERT04700
      IF (NUMMER.EQ.1)THEN                                              ERT04710
        II=1                                                            ERT04720
      ELSE                                                              ERT04730
        II=ERRAD2(NUMMER-1)+1                                           ERT04900
      ENDIF                                                             ERT04910
C                                                                       ERT05200
      K=4                                                               ERT05610
      DO 70 I=II,KK                                                     ERT05620
       IF (K.GE.116) THEN                                               ERT05630
         CALL CPRINT(B)                                                 ERT05640
         K=4                                                            ERT05650
       ENDIF                                                            ERT05660
       K=K+4                                                            ERT05670
       B(K:K+3)=ERRTXT(I)                                               ERT05680
   70 CONTINUE                                                          ERT05690
      CALL CPRINT(B)                                                    ERT05700
C                                                                       ERT06500
   80 RETURN                                                            ERT06800
C                                                                       ERT06900
      END                                                               ERT07000
**** SOURCE FILE : BDEXER.V01   ***
*
C                                                                       00000100
C...FORTRAN BLOCK DATA SEGMENT EXERRW                                   00000200
C                                                                       00000300
      BLOCK DATA BDEXER                                                 00000400
C                                                                       00000500
      INCLUDE 'EXERR.INC'                                               00000600
C                                                                       00000700
      INTEGER A(ERND),B(ERND)                                           00000800
      CHARACTER*4 E(ERRDM)                                              00000900
C...ERRAD1:    EXECUTION PHASE ERROR & WARNING NUMBERS.                 00001000
C...ERRAD2:    START POSITIONS OF ERROR MESSAGES IN ERRTXT              00001100
      EQUIVALENCE (A(1),ERRAD1(1))                                      00001200
      EQUIVALENCE (B(1),ERRAD2(1))                                      00001300
      EQUIVALENCE (E(1),ERRTXT(1))                                      00001400
C                                                                       00001500
      DATA A(  1),A(  2),A(  3),A(  4)/      1,      2,      3,      4/ 00001600
      DATA A(  5),A(  6),A(  7),A(  8)/      5,      6,      7,      8/ 00001700
      DATA A(  9),A( 10),A( 11),A( 12)/      9,     10,     11,     12/ 00001800
      DATA A( 13),A( 14),A( 15),A( 16)/     13,     14,     15,     16/ 00001900
      DATA A( 17),A( 18),A( 19),A( 20)/     17,     18,     19,     20/ 00002000
      DATA A( 21),A( 22),A( 23),A( 24)/     21,     22,     23,     24/ 00002100
      DATA A( 25),A( 26),A( 27),A( 28)/     25,     26,     27,     28/ 00002200
      DATA A( 29),A( 30),A( 31),A( 32)/     29,     30,     31,     32/ 00002300
      DATA A( 33),A( 34),A( 35),A( 36)/     33,     34,     35,     36/ 00002400
      DATA A( 37),A( 38),A( 39),A( 40)/     37,     38,     39,     40/ 00002500
      DATA A( 41),A( 42),A( 43),A( 44)/     41,     42,     43,     44/ 00002600
      DATA A( 45),A( 46),A( 47),A( 48)/     45,     46,     47,     48/ 00002700
      DATA A( 49),A( 50),A( 51),A( 52)/     49,     50,     51,     52/ 00002800
      DATA A( 53),A( 54),A( 55),A( 56)/     53,     54,     55,     56/ 00002900
      DATA A( 57),A( 58),A( 59),A( 60)/     57,     58,     59,     61/ 00003000
      DATA A( 61),A( 62),A( 63),A( 64)/     62,     63,     64,     65/ 00003100
      DATA A( 65),A( 66),A( 67),A( 68)/     66,     67,     68,     69/ 00003200
      DATA A( 69),A( 70),A( 71),A( 72)/     70,     71,     72,     73/ 00003300
      DATA A( 73),A( 74),A( 75),A( 76)/     74,     75,     76,     77/ 00003400
      DATA A( 77),A( 78),A( 79),A( 80)/     78,     79,     80,     82/ 00003500
      DATA A( 81),A( 82),A( 83),A( 84)/     83,     84,     85,     86/ 00003600
      DATA A( 85),A( 86),A( 87),A( 88)/     87,     88,     89,     90/ 00003700
      DATA A( 89),A( 90),A( 91),A( 92)/     91,     92,     93,     94/ 00003800
      DATA A( 93),A( 94),A( 95),A( 96)/     95,     96,     97,     98/ 00003900
      DATA A( 97),A( 98),A( 99),A(100)/    200,   1001,   1002,   1003/ 00004000
      DATA A(101),A(102),A(103),A(104)/   1004,   1005,   1006,   1007/ 00004100
      DATA A(105),A(106),A(107),A(108)/   3501,   3502,   3503,   3504/ 00004200
      DATA A(109),A(110),A(111),A(112)/   3506,   3507,   3510,   3521/ 00004300
      DATA A(113),A(114),A(115),A(116)/   3522,   3523,   3524,   3551/ 00004400
      DATA A(117),A(118),A(119),A(120)/   3552,   3553,   3554,   3555/ 00004500
      DATA A(121),A(122),A(123),A(124)/   3561,   3562,   3563,   3564/ 00004600
      DATA A(125),A(126),A(127),A(128)/   3565,   3566,   3567,   5000/ 00004700
      DATA A(129),A(130),A(131),A(132)/   5001,   5002,   5003,   5004/ 00004800
      DATA A(133),A(134),A(135),A(136)/   5005,   5006,   5007,   5011/ 00004900
      DATA A(137),A(138),A(139),A(140)/   5012,   5013,   5016,   5019/ 00005000
      DATA A(141),A(142),A(143),A(144)/   5021,   5022,   5023,   5024/ 00005100
      DATA A(145),A(146),A(147),A(148)/   5025,   5026,   5027,   5028/ 00005200
      DATA A(149),A(150),A(151),A(152)/   5029,   5030,   5031,   5032/ 00005300
      DATA A(153),A(154),A(155),A(156)/   5033,   5034,   5035,   5036/ 00005400
      DATA A(157),A(158),A(159),A(160)/   5037,   5038,   5039,   5040/ 00005500
      DATA A(161),A(162),A(163),A(164)/   5041,   5043,   5044,   5045/ 00005600
      DATA A(165),A(166),A(167),A(168)/   5060,   5061,   5062,   5121/ 00005700
      DATA A(169),A(170),A(171),A(172)/   5122,   5123,   5124,   5125/ 00005800
      DATA A(173),A(174),A(175),A(176)/   5126,   5127,   5128,   5129/ 00005900
      DATA A(177),A(178),A(179),A(180)/   5130,   5152,   5153,   5154/ 00006000
      DATA A(181),A(182),A(183),A(184)/   5155,   5156,   5157,   5158/ 00006100
      DATA A(185),A(186),A(187),A(188)/   5159,   5160,   5210,   5211/ 00006200
      DATA A(189),A(190),A(191),A(192)/   5212,   5213,   5214,   5215/ 00006300
      DATA A(193),A(194),A(195),A(196)/   5216,   5217,   5218,   5219/ 00006400
      DATA A(197),A(198),A(199),A(200)/   5220,   5222,   5300,   5331/ 00006500
      DATA A(201),A(202),A(203),A(204)/   5352,   5353,   5354,   5355/ 00006600
      DATA A(205),A(206),A(207),A(208)/   5356,   5371,   5373,   5374/ 00006700
      DATA A(209),A(210),A(211),A(212)/   5375,   5376,   5377,   5378/ 00006800
      DATA A(213),A(214),A(215),A(216)/   5379,   5391,   5392,   5393/ 00006900
      DATA A(217),A(218),A(219),A(220)/   5396,   5402,   5403,   5501/ 00007000
      DATA A(221),A(222),A(223),A(224)/   5502,   5503,   5504,   5505/ 00007100
      DATA A(225),A(226),A(227),A(228)/   5506,   5507,   5508,   5509/ 00007200
      DATA A(229),A(230),A(231),A(232)/   5510,   5511,   5512,   5513/ 00007300
      DATA A(233),A(234),A(235),A(236)/   5514,   5515,   5516,   5517/ 00007400
      DATA A(237),A(238),A(239),A(240)/   5518,   5519,   5520,   5521/ 00007500
      DATA A(241),A(242),A(243),A(244)/   5522,   5523,   5751,   5752/ 00007600
      DATA A(245),A(246),A(247),A(248)/   5753,   5760,   5770,   5771/ 00007700
      DATA A(249),A(250),A(251),A(252)/   5772,   5901,   5902,   5903/ 00007800
      DATA A(253),A(254),A(255),A(256)/   5904,   5905,   5906,   5907/ 00007900
      DATA A(257),A(258),A(259),A(260)/   5908,   5909,   5910,   5921/ 00008000
      DATA A(261),A(262),A(263),A(264)/   5922,   5923,   5924,   5925/ 00008100
      DATA A(265),A(266),A(267),A(268)/   5926,  20001,  20101,  20102/ 00008200
      DATA A(269),A(270),A(271),A(272)/  20103,  20104,  20105,  20106/ 00008300
      DATA A(273),A(274),A(275),A(276)/  20107,  20108,  20109,  20110/ 00008400
      DATA A(277),A(278),A(279),A(280)/  20201,  20202,  20203,  20204/ 00008500
      DATA A(281),A(282),A(283),A(284)/  20205,  20206,  20901,  20902/ 00008600
      DATA A(285),A(286),A(287),A(288)/  20903,  21001,  21002,  21003/ 00008700
      DATA A(289),A(290),A(291),A(292)/  21101,  21102,  21301,  22001/ 00008800
      DATA A(293),A(294),A(295),A(296)/  22002,  22003,  22004,  22201/ 00008900
      DATA A(297),A(298),A(299),A(300)/  22202,  22203,  22204,  22205/ 00009000
      DATA A(301),A(302),A(303),A(304)/  22206,  22207,  22208,  22209/ 00009100
      DATA A(305),A(306),A(307),A(308)/  22210,  22211,  22212,  22213/ 00009200
      DATA A(309),A(310),A(311),A(312)/  22214,  22215,  22216,  22217/ 00009300
      DATA A(313),A(314),A(315),A(316)/  22218,  22219,  22220,  22221/ 00009400
      DATA A(317),A(318),A(319),A(320)/  22222,  22223,  22300,  22301/ 00009500
      DATA A(321),A(322),A(323),A(324)/  22401,  22701,  22801,  22802/ 00009600
      DATA A(325),A(326),A(327),A(328)/  22803,  22804,  22805,  22806/ 00009700
      DATA A(329),A(330),A(331),A(332)/  22830,  22831,  22832,  22833/ 00009800
      DATA A(333),A(334),A(335),A(336)/  22834,  23401,  23500,  23901/ 00009900
      DATA A(337),A(338),A(339),A(340)/  23902,  23903,  23904,  23905/ 00010000
      DATA A(341),A(342),A(343),A(344)/  23908,  24001,  24002,  24003/ 00010100
      DATA A(345),A(346),A(347),A(348)/  24004,  24005,  24006,  24007/ 00010200
      DATA A(349),A(350),A(351),A(352)/  24201,  24202,  24401,  24402/ 00010300
      DATA A(353),A(354),A(355),A(356)/  24403,  24404,  25001,  25002/ 00010400
      DATA A(357),A(358),A(359),A(360)/  25003,  25004,  25005,  25007/ 00010500
      DATA A(361),A(362),A(363),A(364)/  25008,  25009,  25402,  25403/ 00010600
      DATA A(365),A(366),A(367),A(368)/  26001,  26002,  26201,  26202/ 00010700
      DATA A(369),A(370),A(371),A(372)/  26203,  26204,  26401,  26601/ 00010800
      DATA A(373),A(374),A(375),A(376)/  26602,  26801,  26802,  26803/ 00010900
      DATA A(377),A(378),A(379),A(380)/  27001,  27002,  27003,  27004/ 00011000
      DATA A(381),A(382),A(383),A(384)/  27005,  27206,  28801,  29001/ 00011100
      DATA A(385),A(386),A(387),A(388)/  29002,  29003,  29004,  29006/ 00011200
      DATA A(389)/  29007/                                              00011300
      DATA B(  1),B(  2),B(  3),B(  4)/     18,     38,     58,     78/ 00011400
      DATA B(  5),B(  6),B(  7),B(  8)/     93,    107,    121,    140/ 00011500
      DATA B(  9),B( 10),B( 11),B( 12)/    159,    180,    194,    215/ 00011600
      DATA B( 13),B( 14),B( 15),B( 16)/    237,    246,    261,    283/ 00011700
      DATA B( 17),B( 18),B( 19),B( 20)/    296,    312,    331,    351/ 00011800
      DATA B( 21),B( 22),B( 23),B( 24)/    372,    393,    415,    441/ 00011900
      DATA B( 25),B( 26),B( 27),B( 28)/    470,    490,    515,    531/ 00012000
      DATA B( 29),B( 30),B( 31),B( 32)/    545,    561,    582,    591/ 00012100
      DATA B( 33),B( 34),B( 35),B( 36)/    599,    614,    631,    655/ 00012200
      DATA B( 37),B( 38),B( 39),B( 40)/    670,    689,    713,    740/ 00012300
      DATA B( 41),B( 42),B( 43),B( 44)/    760,    781,    800,    822/ 00012400
      DATA B( 45),B( 46),B( 47),B( 48)/    834,    861,    880,    895/ 00012500
      DATA B( 49),B( 50),B( 51),B( 52)/    915,    937,    949,    965/ 00012600
      DATA B( 53),B( 54),B( 55),B( 56)/    983,   1006,   1026,   1047/ 00012700
      DATA B( 57),B( 58),B( 59),B( 60)/   1061,   1081,   1100,   1120/ 00012800
      DATA B( 61),B( 62),B( 63),B( 64)/   1141,   1167,   1191,   1205/ 00012900
      DATA B( 65),B( 66),B( 67),B( 68)/   1224,   1243,   1261,   1271/ 00013000
      DATA B( 69),B( 70),B( 71),B( 72)/   1285,   1293,   1303,   1314/ 00013100
      DATA B( 73),B( 74),B( 75),B( 76)/   1323,   1330,   1342,   1350/ 00013200
      DATA B( 77),B( 78),B( 79),B( 80)/   1359,   1372,   1396,   1411/ 00013300
      DATA B( 81),B( 82),B( 83),B( 84)/   1422,   1433,   1444,   1465/ 00013400
      DATA B( 85),B( 86),B( 87),B( 88)/   1479,   1487,   1510,   1534/ 00013500
      DATA B( 89),B( 90),B( 91),B( 92)/   1545,   1551,   1560,   1589/ 00013600
      DATA B( 93),B( 94),B( 95),B( 96)/   1605,   1615,   1633,   1655/ 00013700
      DATA B( 97),B( 98),B( 99),B(100)/   1667,   1675,   1684,   1691/ 00013800
      DATA B(101),B(102),B(103),B(104)/   1697,   1708,   1718,   1726/ 00013900
      DATA B(105),B(106),B(107),B(108)/   1736,   1748,   1758,   1770/ 00014000
      DATA B(109),B(110),B(111),B(112)/   1778,   1805,   1815,   1838/ 00014100
      DATA B(113),B(114),B(115),B(116)/   1852,   1868,   1879,   1898/ 00014200
      DATA B(117),B(118),B(119),B(120)/   1934,   1955,   1974,   1987/ 00014300
      DATA B(121),B(122),B(123),B(124)/   2010,   2024,   2040,   2051/ 00014400
      DATA B(125),B(126),B(127),B(128)/   2075,   2101,   2125,   2136/ 00014500
      DATA B(129),B(130),B(131),B(132)/   2147,   2160,   2177,   2185/ 00014600
      DATA B(133),B(134),B(135),B(136)/   2204,   2217,   2236,   2245/ 00014700
      DATA B(137),B(138),B(139),B(140)/   2254,   2265,   2282,   2296/ 00014800
      DATA B(141),B(142),B(143),B(144)/   2312,   2327,   2341,   2357/ 00014900
      DATA B(145),B(146),B(147),B(148)/   2371,   2384,   2395,   2406/ 00015000
      DATA B(149),B(150),B(151),B(152)/   2417,   2435,   2449,   2460/ 00015100
      DATA B(153),B(154),B(155),B(156)/   2476,   2493,   2507,   2518/ 00015200
      DATA B(157),B(158),B(159),B(160)/   2541,   2563,   2579,   2601/ 00015300
      DATA B(161),B(162),B(163),B(164)/   2617,   2636,   2655,   2668/ 00015400
      DATA B(165),B(166),B(167),B(168)/   2683,   2690,   2702,   2724/ 00015500
      DATA B(169),B(170),B(171),B(172)/   2742,   2762,   2778,   2799/ 00015600
      DATA B(173),B(174),B(175),B(176)/   2814,   2849,   2871,   2899/ 00015700
      DATA B(177),B(178),B(179),B(180)/   2925,   2937,   2948,   2958/ 00015800
      DATA B(181),B(182),B(183),B(184)/   2971,   2982,   2993,   2998/ 00015900
      DATA B(185),B(186),B(187),B(188)/   3009,   3018,   3032,   3053/ 00016000
      DATA B(189),B(190),B(191),B(192)/   3059,   3071,   3087,   3096/ 00016100
      DATA B(193),B(194),B(195),B(196)/   3112,   3128,   3144,   3153/ 00016200
      DATA B(197),B(198),B(199),B(200)/   3169,   3197,   3206,   3217/ 00016300
      DATA B(201),B(202),B(203),B(204)/   3227,   3242,   3258,   3272/ 00016400
      DATA B(205),B(206),B(207),B(208)/   3282,   3291,   3298,   3308/ 00016500
      DATA B(209),B(210),B(211),B(212)/   3313,   3322,   3334,   3348/ 00016600
      DATA B(213),B(214),B(215),B(216)/   3356,   3366,   3377,   3384/ 00016700
      DATA B(217),B(218),B(219),B(220)/   3393,   3413,   3436,   3467/ 00016800
      DATA B(221),B(222),B(223),B(224)/   3493,   3528,   3573,   3616/ 00016900
      DATA B(225),B(226),B(227),B(228)/   3664,   3745,   3784,   3840/ 00017000
      DATA B(229),B(230),B(231),B(232)/   3876,   3891,   3945,   3979/ 00017100
      DATA B(233),B(234),B(235),B(236)/   4004,   4031,   4068,   4095/ 00017200
      DATA B(237),B(238),B(239),B(240)/   4123,   4155,   4166,   4190/ 00017300
      DATA B(241),B(242),B(243),B(244)/   4211,   4237,   4254,   4274/ 00017400
      DATA B(245),B(246),B(247),B(248)/   4287,   4308,   4327,   4345/ 00017500
      DATA B(249),B(250),B(251),B(252)/   4359,   4371,   4385,   4399/ 00017600
      DATA B(253),B(254),B(255),B(256)/   4406,   4414,   4430,   4446/ 00017700
      DATA B(257),B(258),B(259),B(260)/   4464,   4479,   4503,   4519/ 00017800
      DATA B(261),B(262),B(263),B(264)/   4527,   4539,   4549,   4566/ 00017900
      DATA B(265),B(266),B(267),B(268)/   4584,   4597,   4604,   4618/ 00018000
      DATA B(269),B(270),B(271),B(272)/   4632,   4647,   4657,   4677/ 00018100
      DATA B(273),B(274),B(275),B(276)/   4691,   4698,   4716,   4729/ 00018200
      DATA B(277),B(278),B(279),B(280)/   4743,   4750,   4763,   4775/ 00018300
      DATA B(281),B(282),B(283),B(284)/   4785,   4799,   4807,   4823/ 00018400
      DATA B(285),B(286),B(287),B(288)/   4834,   4842,   4858,   4869/ 00018500
      DATA B(289),B(290),B(291),B(292)/   4877,   4888,   4904,    919/ 00018600
      DATA B(293),B(294),B(295),B(296)/   4941,   4958,   4979,   4988/ 00018700
      DATA B(297),B(298),B(299),B(300)/   4996,   5003,   5015,   5023/ 00018800
      DATA B(301),B(302),B(303),B(304)/   5037,   5045,   5055,   5074/ 00018900
      DATA B(305),B(306),B(307),B(308)/   5095,   5111,   5134,   5150/ 00019000
      DATA B(309),B(310),B(311),B(312)/   5166,   5186,   5201,   5209/ 00019100
      DATA B(313),B(314),B(315),B(316)/   5219,   5235,   5248,   5256/ 00019200
      DATA B(317),B(318),B(319),B(320)/   5265,   5272,   5298,   5316/ 00019300
      DATA B(321),B(322),B(323),B(324)/   5340,   5361,   5373,   5383/ 00019400
      DATA B(325),B(326),B(327),B(328)/   5391,   5401,   5410,   5418/ 00019500
      DATA B(329),B(330),B(331),B(332)/   5432,   5439,   5465,   5491/ 00019600
      DATA B(333),B(334),B(335),B(336)/   5507,   5522,   5532,   5545/ 00019700
      DATA B(337),B(338),B(339),B(340)/   5554,   5563,   5575,   5589/ 00019800
      DATA B(341),B(342),B(343),B(344)/   5596,   5607,   5616,   5633/ 00019900
      DATA B(345),B(346),B(347),B(348)/   5655,   5671,   5683,   5693/ 00020000
      DATA B(349),B(350),B(351),B(352)/   5701,   5717,   5730,   5751/ 00020100
      DATA B(353),B(354),B(355),B(356)/   5763,   5779,   5794,   5806/ 00020200
      DATA B(357),B(358),B(359),B(360)/   5829,   5838,   5852,   5858/ 00020300
      DATA B(361),B(362),B(363),B(364)/   5876,   5900,   5916,   5934/ 00020400
      DATA B(365),B(366),B(367),B(368)/   5942,   5961,   5976,   5996/ 00020500
      DATA B(369),B(370),B(371),B(372)/   6008,   6015,   6039,   6056/ 00020600
      DATA B(373),B(374),B(375),B(376)/   6068,   6076,   6088,   6104/ 00020700
      DATA B(377),B(378),B(379),B(380)/   6131,   6159,   6172,   6185/ 00020800
      DATA B(381),B(382),B(383),B(384)/   6198,   6216,   6233,   6244/ 00020900
      DATA B(385),B(386),B(387),B(388)/   6254,   6259,   6269,   6281/ 00021000
      DATA B(389)/   6288/                                              00021100
      DATA E(   1),E(   2),E(   3),E(   4)/'CANO','NICA','L FO','RM N'/ 00021200
      DATA E(   5),E(   6),E(   7),E(   8)/'OT P','REVI','OUSL','Y CO'/ 00021300
      DATA E(   9),E(  10),E(  11),E(  12)/'RREC','TLY ','DEFI','NED '/ 00021400
      DATA E(  13),E(  14),E(  15),E(  16)/'IS B','EING','  RE','FERE'/ 00021500
      DATA E(  17),E(  18),E(  19),E(  20)/'NCED','.   ','THE ','FIRS'/ 00021600
      DATA E(  21),E(  22),E(  23),E(  24)/'T LI','NE G','IVEN',' FOR'/ 00021700
      DATA E(  25),E(  26),E(  27),E(  28)/' THE',' DEF','INIT','ION '/ 00021800
      DATA E(  29),E(  30),E(  31),E(  32)/'OF T','HE P','OINT',' IS '/ 00021900
      DATA E(  33),E(  34),E(  35),E(  36)/'NOT ',' A V','ERTI','CAL '/ 00022000
      DATA E(  37),E(  38),E(  39),E(  40)/'PLAN','E.  ','THE ','SECO'/ 00022100
      DATA E(  41),E(  42),E(  43),E(  44)/'ND L','INE ','GIVE','N FO'/ 00022200
      DATA E(  45),E(  46),E(  47),E(  48)/'R TH','E DE','FINI','TION'/ 00022300
      DATA E(  49),E(  50),E(  51),E(  52)/' OF ','THE ','POIN','T IS'/ 00022400
      DATA E(  53),E(  54),E(  55),E(  56)/' NOT','  A ','VERT','ICAL'/ 00022500
      DATA E(  57),E(  58),E(  59),E(  60)/' PLA','NE. ','POIN','T UN'/ 00022600
      DATA E(  61),E(  62),E(  63),E(  64)/'DEFI','NED.',' INT','ERSE'/ 00022700
      DATA E(  65),E(  66),E(  67),E(  68)/'CTIO','N OF',' TWO',' LIN'/ 00022800
      DATA E(  69),E(  70),E(  71),E(  72)/'ES W','HICH',' ARE',' TOO'/ 00022900
      DATA E(  73),E(  74),E(  75),E(  76)/' CLO','SE  ','TO P','ARAL'/ 00023000
      DATA E(  77),E(  78),E(  79),E(  80)/'LEL.','    ','LINE',' INV'/ 00023100
      DATA E(  81),E(  82),E(  83),E(  84)/'OLVE','D IS',' NOT',' VER'/ 00023200
      DATA E(  85),E(  86),E(  87),E(  88)/'TICA','L PL','ANE.',' POI'/ 00023300
      DATA E(  89),E(  90),E(  91),E(  92)/'NT I','S UN','DEFI','NED.'/ 00023400
      DATA E(  93),E(  94),E(  95),E(  96)/'    ','LINE',' AND',' CIR'/ 00023500
      DATA E(  97),E(  98),E(  99),E( 100)/'CLE ','DO N','OT I','NTER'/ 00023600
      DATA E( 101),E( 102),E( 103),E( 104)/'SECT','. PO','INT ','IS U'/ 00023700
      DATA E( 105),E( 106),E( 107),E( 108)/'NDEF','INED','.   ','CIRC'/ 00023800
      DATA E( 109),E( 110),E( 111),E( 112)/'LE I','S NO','T A ','VERT'/ 00023900
      DATA E( 113),E( 114),E( 115),E( 116)/'ICAL',' CYL','INDE','R. P'/ 00024000
      DATA E( 117),E( 118),E( 119),E( 120)/'OINT',' IS ','UNDE','FINE'/ 00024100
      DATA E( 121),E( 122),E( 123),E( 124)/'D.  ','THE ','GIVE','N LI'/ 00024200
      DATA E( 125),E( 126),E( 127),E( 128)/'NE I','S VE','RTIC','AL. '/ 00024300
      DATA E( 129),E( 130),E( 131),E( 132)/'SUBS','TITU','TE Y',' FOR'/ 00024400
      DATA E( 133),E( 134),E( 135),E( 136)/' X I','N  ''','XLAR','GE'' '00024500
     +/                                                                 00024600
      DATA E( 137),E( 138),E( 139),E( 140)/'OR ''','XSMA','LL''.','    '00024700
     +/                                                                 00024800
      DATA E( 141),E( 142),E( 143),E( 144)/'THE ','GIVE','N LI','NE I'/ 00024900
      DATA E( 145),E( 146),E( 147),E( 148)/'S HO','RIZO','NTAL','. SU'/ 00025000
      DATA E( 149),E( 150),E( 151),E( 152)/'BSTI','TUTE',' X F','OR Y'/ 00025100
      DATA E( 153),E( 154),E( 155),E( 156)/' IN ','''YLA','RGE''',' OR '00025200
     +/                                                                 00025300
      DATA E( 157),E( 158),E( 159),E( 160)/'''YSM','ALL''','.   ','A VE'00025400
     +/                                                                 00025500
      DATA E( 161),E( 162),E( 163),E( 164)/'CTOR',' OPE','RAND',' IN '/ 00025600
      DATA E( 165),E( 166),E( 167),E( 168)/'A DO','T PR','ODUC','T CO'/ 00025700
      DATA E( 169),E( 170),E( 171),E( 172)/'MPUT','ATIO','N IS',' UND'/ 00025800
      DATA E( 173),E( 174),E( 175),E( 176)/'EFIN','ED. ',' THE',' RES'/ 00025900
      DATA E( 177),E( 178),E( 179),E( 180)/'ULT ','IS Z','ERO.','    '/ 00026000
      DATA E( 181),E( 182),E( 183),E( 184)/'INPU','T PO','INT ','IS N'/ 00026100
      DATA E( 185),E( 186),E( 187),E( 188)/'OT O','N TA','BCYL',', NE'/ 00026200
      DATA E( 189),E( 190),E( 191),E( 192)/'AR I','NTER','SECT','ION '/ 00026300
      DATA E( 193),E( 194),E( 195),E( 196)/'POIN','T.  ','THE ','FIRS'/ 00026400
      DATA E( 197),E( 198),E( 199),E( 200)/'T CI','RCLE',' GIV','EN F'/ 00026500
      DATA E( 201),E( 202),E( 203),E( 204)/'OR T','HE D','EFIN','ITIO'/ 00026600
      DATA E( 205),E( 206),E( 207),E( 208)/'N OF',' THE',' POI','NT I'/ 00026700
      DATA E( 209),E( 210),E( 211),E( 212)/'S NO','T  A',' VER','TICA'/ 00026800
      DATA E( 213),E( 214),E( 215),E( 216)/'L CY','LIND','ER. ','THE '/ 00026900
      DATA E( 217),E( 218),E( 219),E( 220)/'SECO','ND C','IRCL','E GI'/ 00027000
      DATA E( 221),E( 222),E( 223),E( 224)/'VEN ','FOR ','THE ','DEFI'/ 00027100
      DATA E( 225),E( 226),E( 227),E( 228)/'NITI','ON O','F TH','E PO'/ 00027200
      DATA E( 229),E( 230),E( 231),E( 232)/'INT ','IS N','OT  ','A VE'/ 00027300
      DATA E( 233),E( 234),E( 235),E( 236)/'RTIC','AL C','YLIN','DER.'/ 00027400
      DATA E( 237),E( 238),E( 239),E( 240)/'    ','TRAN','SFOR','MATI'/ 00027500
      DATA E( 241),E( 242),E( 243),E( 244)/'ON M','ATRI','X UN','DEFI'/ 00027600
      DATA E( 245),E( 246),E( 247),E( 248)/'NED.','    ','THE ','LINE'/ 00027700
      DATA E( 249),E( 250),E( 251),E( 252)/' AND',' CON','IC D','O NO'/ 00027800
      DATA E( 253),E( 254),E( 255),E( 256)/'T IN','TERS','ECT.',' POI'/ 00027900
      DATA E( 257),E( 258),E( 259),E( 260)/'NT I','S UN','DEFI','NED.'/ 00028000
      DATA E( 261),E( 262),E( 263),E( 264)/'    ','THE ','GENE','RAL '/ 00028100
      DATA E( 265),E( 266),E( 267),E( 268)/'CONI','C EQ','UATI','ON S'/ 00028200
      DATA E( 269),E( 270),E( 271),E( 272)/'HOUL','D NO','T CO','NTAI'/ 00028300
      DATA E( 273),E( 274),E( 275),E( 276)/'N TH','E Z ','COOR','DINA'/ 00028400
      DATA E( 277),E( 278),E( 279),E( 280)/'TE. ',' POI','NT I','S UN'/ 00028500
      DATA E( 281),E( 282),E( 283),E( 284)/'DEFI','NED.','    ','TOO '/ 00028600
      DATA E( 285),E( 286),E( 287),E( 288)/'MANY',' TAB','CYLS',' INV'/ 00028700
      DATA E( 289),E( 290),E( 291),E( 292)/'OLVE','D IN',' THI','S MO'/ 00028800
      DATA E( 293),E( 294),E( 295),E( 296)/'TION',' STA','TEME','NT. '/ 00028900
      DATA E( 297),E( 298),E( 299),E( 300)/'ONE ','OF T','HE I','NPUT'/ 00029000
      DATA E( 301),E( 302),E( 303),E( 304)/' PLA','NES ','IS U','NDEF'/ 00029100
      DATA E( 305),E( 306),E( 307),E( 308)/'INED','. TH','E PO','INT '/ 00029200
      DATA E( 309),E( 310),E( 311),E( 312)/'IS U','NDEF','INED','.   '/ 00029300
      DATA E( 313),E( 314),E( 315),E( 316)/'THE ','TWO ','GIVE','N PO'/ 00029400
      DATA E( 317),E( 318),E( 319),E( 320)/'INTS',' ARE',' TOO',' CLO'/ 00029500
      DATA E( 321),E( 322),E( 323),E( 324)/'SE T','OGET','HER.',' THE'/ 00029600
      DATA E( 325),E( 326),E( 327),E( 328)/' LIN','E CA','NNOT','  BE'/ 00029700
      DATA E( 329),E( 330),E( 331),E( 332)/' DEF','INED','.   ','THE '/ 00029800
      DATA E( 333),E( 334),E( 335),E( 336)/'ARGU','MENT',' OF ','THE '/ 00029900
      DATA E( 337),E( 338),E( 339),E( 340)/'FUNC','TION',' IS ','NEGA'/ 00030000
      DATA E( 341),E( 342),E( 343),E( 344)/'TIVE','; GO','ING ','ON W'/ 00030100
      DATA E( 345),E( 346),E( 347),E( 348)/'ITH ',' THE',' POS','ITIV'/ 00030200
      DATA E( 349),E( 350),E( 351),E( 352)/'E AR','GUME','NT. ','THE '/ 00030300
      DATA E( 353),E( 354),E( 355),E( 356)/'FIRS','T CI','RCLE',' GIV'/ 00030400
      DATA E( 357),E( 358),E( 359),E( 360)/'EN I','N TH','E DE','FINI'/ 00030500
      DATA E( 361),E( 362),E( 363),E( 364)/'TION',' OF ','THE ','LINE'/ 00030600
      DATA E( 365),E( 366),E( 367),E( 368)/' IS ','NOT ',' A V','ERTI'/ 00030700
      DATA E( 369),E( 370),E( 371),E( 372)/'CAL ','CYLI','NDER','.   '/ 00030800
      DATA E( 373),E( 374),E( 375),E( 376)/'THE ','SECO','ND C','IRCL'/ 00030900
      DATA E( 377),E( 378),E( 379),E( 380)/'E GI','VEN ','IN T','HE D'/ 00031000
      DATA E( 381),E( 382),E( 383),E( 384)/'EFIN','ITIO','N OF',' THE'/ 00031100
      DATA E( 385),E( 386),E( 387),E( 388)/' LIN','E IS',' NOT','  A '/ 00031200
      DATA E( 389),E( 390),E( 391),E( 392)/'VERT','ICAL',' CYL','INDE'/ 00031300
      DATA E( 393),E( 394),E( 395),E( 396)/'R.  ','THE ','CIRC','LES '/ 00031400
      DATA E( 397),E( 398),E( 399),E( 400)/'USED',' IN ','THE ','DEFI'/ 00031500
      DATA E( 401),E( 402),E( 403),E( 404)/'NITI','ON O','F TH','E LI'/ 00031600
      DATA E( 405),E( 406),E( 407),E( 408)/'NE A','RE C','ONCE','NTRI'/ 00031700
      DATA E( 409),E( 410),E( 411),E( 412)/'C.  ','THE ','LINE',' IS '/ 00031800
      DATA E( 413),E( 414),E( 415),E( 416)/'UNDE','FINE','D.  ','ONE '/ 00031900
      DATA E( 417),E( 418),E( 419),E( 420)/'OF T','HE C','IRCL','ES U'/ 00032000
      DATA E( 421),E( 422),E( 423),E( 424)/'SED ','IN T','HE D','EFIN'/ 00032100
      DATA E( 425),E( 426),E( 427),E( 428)/'ITIO','N OF',' THE',' LIN'/ 00032200
      DATA E( 429),E( 430),E( 431),E( 432)/'E IS',' WHO','LLY ','INSI'/ 00032300
      DATA E( 433),E( 434),E( 435),E( 436)/'DE O','F TH','E OT','HER.'/ 00032400
      DATA E( 437),E( 438),E( 439),E( 440)/' LIN','E IS',' UND','EFIN'/ 00032500
      DATA E( 441),E( 442),E( 443),E( 444)/'ED. ','THE ','CIRC','LES '/ 00032600
      DATA E( 445),E( 446),E( 447),E( 448)/'USED',' IN ','THE ','LINE'/ 00032700
      DATA E( 449),E( 450),E( 451),E( 452)/' DEF','INIT','ION ','INTE'/ 00032800
      DATA E( 453),E( 454),E( 455),E( 456)/'RSEC','T, A','ND T','HE  '/ 00032900
      DATA E( 457),E( 458),E( 459),E( 460)/'MODI','FIER','S AR','E NO'/ 00033000
      DATA E( 461),E( 462),E( 463),E( 464)/'T ''L','EFT''',', ''L',     00033100
     +'EFT'''/                                                          00033200
      DATA E( 465),E( 466),E( 467),E( 468)/' OR ','''RIG','HT'',',      00033300
     +' ''RI'/                                                          00033400
      DATA E( 469),E( 470),E( 471),E( 472)/'GHT''','.   ','THE ','LINE'/00033500
      DATA E( 473),E( 474),E( 475),E( 476)/' GIV','EN I','N TH','E DE'/ 00033600
      DATA E( 477),E( 478),E( 479),E( 480)/'FINI','TION',' IS ','NOT '/ 00033700
      DATA E( 481),E( 482),E( 483),E( 484)/'A VE','RTIC','AL P','LANE'/ 00033800
      DATA E( 485),E( 486),E( 487),E( 488)/'.  L','INE ','IS U','NDEF'/ 00033900
      DATA E( 489),E( 490),E( 491),E( 492)/'INED','.   ','THE ','DESI'/ 00034000
      DATA E( 493),E( 494),E( 495),E( 496)/'RED ','LINE',' IS ','UNDE'/ 00034100
      DATA E( 497),E( 498),E( 499),E( 500)/'FINE','D. T','HE G','IVEN'/ 00034200
      DATA E( 501),E( 502),E( 503),E( 504)/' PLA','NES ','ARE ','EITH'/ 00034300
      DATA E( 505),E( 506),E( 507),E( 508)/'ER  ','PARA','LLEL',', CO'/ 00034400
      DATA E( 509),E( 510),E( 511),E( 512)/'INCI','DENT',' OR ','BOTH'/ 00034500
      DATA E( 513),E( 514),E( 515),E( 516)/' VER','TICA','L.  ','THE '/ 00034600
      DATA E( 517),E( 518),E( 519),E( 520)/'INPU','T LI','NE I','S NO'/ 00034700
      DATA E( 521),E( 522),E( 523),E( 524)/'T A ','VERT','ICAL',' PLA'/ 00034800
      DATA E( 525),E( 526),E( 527),E( 528)/'NE. ','CIRC','LE I','S UN'/ 00034900
      DATA E( 529),E( 530),E( 531),E( 532)/'DEFI','NED.','    ','CIRC'/ 00035000
      DATA E( 533),E( 534),E( 535),E( 536)/'LE U','NDEF','INED','. TH'/ 00035100
      DATA E( 537),E( 538),E( 539),E( 540)/'E TH','REE ','GIVE','N PO'/ 00035200
      DATA E( 541),E( 542),E( 543),E( 544)/'INTS',' ARE',' COL','LINE'/ 00035300
      DATA E( 545),E( 546),E( 547),E( 548)/'AR. ','THE ','THRE','E GI'/ 00035400
      DATA E( 549),E( 550),E( 551),E( 552)/'VEN ','POIN','TS A','RE N'/ 00035500
      DATA E( 553),E( 554),E( 555),E( 556)/'OT I','N TH','E SA','ME  '/ 00035600
      DATA E( 557),E( 558),E( 559),E( 560)/'HORI','ZONT','AL P','LANE'/ 00035700
      DATA E( 561),E( 562),E( 563),E( 564)/'.   ','CIRC','LE U','NDEF'/ 00035800
      DATA E( 565),E( 566),E( 567),E( 568)/'INED','. TH','E CI','RCLE'/ 00035900
      DATA E( 569),E( 570),E( 571),E( 572)/' GIV','EN I','N TH','E DE'/ 00036000
      DATA E( 573),E( 574),E( 575),E( 576)/'FINI','TION',' IS ','NOT '/ 00036100
      DATA E( 577),E( 578),E( 579),E( 580)/' A V','ERTI','CAL ','CYLI'/ 00036200
      DATA E( 581),E( 582),E( 583),E( 584)/'NDER','.   ','VECT','OR F'/ 00036300
      DATA E( 585),E( 586),E( 587),E( 588)/'OR C','ANTE','D TA','BCYL'/ 00036400
      DATA E( 589),E( 590),E( 591),E( 592)/' UND','EFIN','ED. ','TABC'/ 00036500
      DATA E( 593),E( 594),E( 595),E( 596)/'YL I','NPUT',' POI','NT U'/ 00036600
      DATA E( 597),E( 598),E( 599),E( 600)/'NDEF','INED','.   ','CONS'/ 00036700
      DATA E( 601),E( 602),E( 603),E( 604)/'ECUT','IVE ','INPU','T PO'/ 00036800
      DATA E( 605),E( 606),E( 607),E( 608)/'INTS',' ARE',' IDE','NTIC'/ 00036900
      DATA E( 609),E( 610),E( 611),E( 612)/'AL. ','TABC','YL U','NDEF'/ 00037000
      DATA E( 613),E( 614),E( 615),E( 616)/'INED','.   ','FOR ','XYZ-'/ 00037100
      DATA E( 617),E( 618),E( 619),E( 620)/'CASE',', IN','CORR','ECT '/ 00037200
      DATA E( 621),E( 622),E( 623),E( 624)/'PARA','METE','RS S','PECI'/ 00037300
      DATA E( 625),E( 626),E( 627),E( 628)/'FIED','.  T','ABCY','L UN'/ 00037400
      DATA E( 629),E( 630),E( 631),E( 632)/'DEFI','NED.','    ','THE '/ 00037500
      DATA E( 633),E( 634),E( 635),E( 636)/'INPU','T-GE','OMET','RIE '/ 00037600
      DATA E( 637),E( 638),E( 639),E( 640)/'OF T','HE N','UMBE','R-FU'/ 00037700
      DATA E( 641),E( 642),E( 643),E( 644)/'NCTI','ON I','S UN','DEFI'/ 00037800
      DATA E( 645),E( 646),E( 647),E( 648)/'NED ',' OR ','OF A',' WRO'/ 00037900
      DATA E( 649),E( 650),E( 651),E( 652)/'NG K','IND;',' THE',' RES'/ 00038000
      DATA E( 653),E( 654),E( 655),E( 656)/'ULT ','IS 0','.   ','THE '/ 00038100
      DATA E( 657),E( 658),E( 659),E( 660)/'LOG ','ARGU','MENT',' IS '/ 00038200
      DATA E( 661),E( 662),E( 663),E( 664)/'ZERO','; TH','E RE','SULT'/ 00038300
      DATA E( 665),E( 666),E( 667),E( 668)/' IS ','A NE','GATI','VE N'/ 00038400
      DATA E( 669),E( 670),E( 671),E( 672)/'UMBE','R.  ','THE ','ARSI'/ 00038500
      DATA E( 673),E( 674),E( 675),E( 676)/'N-AR','COS ','ARGU','MENT'/ 00038600
      DATA E( 677),E( 678),E( 679),E( 680)/' IS ','ABSO','LUT ','GREA'/ 00038700
      DATA E( 681),E( 682),E( 683),E( 684)/'TER ','THAN',' 1; ',' THE'/ 00038800
      DATA E( 685),E( 686),E( 687),E( 688)/' RES','ULT ','IS Z','ERO.'/ 00038900
      DATA E( 689),E( 690),E( 691),E( 692)/'    ','THE ','INPU','T-GE'/ 00039000
      DATA E( 693),E( 694),E( 695),E( 696)/'OMET','RIE ','AT T','HE V'/ 00039100
      DATA E( 697),E( 698),E( 699),E( 700)/'ALUE','-FET','CHIN','G IS'/ 00039200
      DATA E( 701),E( 702),E( 703),E( 704)/' UND','EFIN','ED  ','OR O'/ 00039300
      DATA E( 705),E( 706),E( 707),E( 708)/'F A ','WRON','G KI','ND; '/ 00039400
      DATA E( 709),E( 710),E( 711),E( 712)/'THE ','RESU','LT I','S 0.'/ 00039500
      DATA E( 713),E( 714),E( 715),E( 716)/'    ','THE ','FETC','H-IN'/ 00039600
      DATA E( 717),E( 718),E( 719),E( 720)/'DEX ','AT T','HE V','ALUE'/ 00039700
      DATA E( 721),E( 722),E( 723),E( 724)/'-FET','CHIN','G IS',' UND'/ 00039800
      DATA E( 725),E( 726),E( 727),E( 728)/'EFIN','ED  ','OR T','HE C'/ 00039900
      DATA E( 729),E( 730),E( 731),E( 732)/'ANON','ICAL',' FOR','M IS'/ 00040000
      DATA E( 733),E( 734),E( 735),E( 736)/' TOO',' SHO','RT; ','THE '/ 00040100
      DATA E( 737),E( 738),E( 739),E( 740)/'RESU','LT I','S 0.','    '/ 00040200
      DATA E( 741),E( 742),E( 743),E( 744)/'THE ','FETC','H-IN','DEX '/ 00040300
      DATA E( 745),E( 746),E( 747),E( 748)/'AT T','HE V','ALUE','-FET'/ 00040400
      DATA E( 749),E( 750),E( 751),E( 752)/'CHIN','G IS',' LES','S OR'/ 00040500
      DATA E( 753),E( 754),E( 755),E( 756)/' EQU','AL  ','ZERO','; TH'/ 00040600
      DATA E( 757),E( 758),E( 759),E( 760)/'E RE','SULT',' IS ','0.  '/ 00040700
      DATA E( 761),E( 762),E( 763),E( 764)/'THE ','PARA','METE','R-DE'/ 00040800
      DATA E( 765),E( 766),E( 767),E( 768)/'LIVE','RY P','RECE','DES '/ 00040900
      DATA E( 769),E( 770),E( 771),E( 772)/'NO E','QUIV','ALEN','T  I'/ 00041000
      DATA E( 773),E( 774),E( 775),E( 776)/'NTER','SECT','ION-','STMT'/ 00041100
      DATA E( 777),E( 778),E( 779),E( 780)/'; TH','E RE','SULT',' IS '/ 00041200
      DATA E( 781),E( 782),E( 783),E( 784)/'0.  ','THE ','PARA','METE'/ 00041300
      DATA E( 785),E( 786),E( 787),E( 788)/'R-DE','LIVE','RY-F','UNCT'/ 00041400
      DATA E( 789),E( 790),E( 791),E( 792)/'ION ','IS N','OT C','ORRE'/ 00041500
      DATA E( 793),E( 794),E( 795),E( 796)/'CT S','UPPL','IED;','  TH'/ 00041600
      DATA E( 797),E( 798),E( 799),E( 800)/'E RE','SULT',' IS ','0.  '/ 00041700
      DATA E( 801),E( 802),E( 803),E( 804)/'THE ','SUM ','OF T','HE S'/ 00041800
      DATA E( 805),E( 806),E( 807),E( 808)/'QUAR','ES O','F TH','E CO'/ 00041900
      DATA E( 809),E( 810),E( 811),E( 812)/'EFFI','CIEN','TS O','F X,'/ 00042000
      DATA E( 813),E( 814),E( 815),E( 816)/' Y  ','AN Z',' IS ','ZERO'/ 00042100
      DATA E( 817),E( 818),E( 819),E( 820)/'. PL','ANE ','NOT ','DEFI'/ 00042200
      DATA E( 821),E( 822),E( 823),E( 824)/'NED.','    ','''ZIG','ZAG'''00042300
     +/                                                                 00042400
      DATA E( 825),E( 826),E( 827),E( 828)/' IS ','IGNO','RED ','SINC'/ 00042500
      DATA E( 829),E( 830),E( 831),E( 832)/'E PA','TERN',' IS ','NOT '/ 00042600
      DATA E( 833),E( 834),E( 835),E( 836)/'GRID','.   ','''OMI','T'' H'00042700
     +/                                                                 00042800
      DATA E( 837),E( 838),E( 839),E( 840)/'AS B','EEN ','APPL','IED '/ 00042900
      DATA E( 841),E( 842),E( 843),E( 844)/'(OR ','''RET','AIN''',' HAS'00043000
     +/                                                                 00043100
      DATA E( 845),E( 846),E( 847),E( 848)/' NOT',' BEE','N AP','PLIE'/ 00043200
      DATA E( 849),E( 850),E( 851),E( 852)/'D)  ','TO T','HE F','IRST'/ 00043300
      DATA E( 853),E( 854),E( 855),E( 856)/' OR ','LAST',' POI','NT I'/ 00043400
      DATA E( 857),E( 858),E( 859),E( 860)/'N AN',' AVO','ID S','TRIN'/ 00043500
      DATA E( 861),E( 862),E( 863),E( 864)/'G.  ','CONE',' UND','EFIN'/ 00043600
      DATA E( 865),E( 866),E( 867),E( 868)/'ED. ','THE ','AXIS',' VEC'/ 00043700
      DATA E( 869),E( 870),E( 871),E( 872)/'TOR ','GIVE','N IN',' THE'/ 00043800
      DATA E( 873),E( 874),E( 875),E( 876)/' DEF','INIT','ION ','HAS '/ 00043900
      DATA E( 877),E( 878),E( 879),E( 880)/' ZER','O VA','LUE.','    '/ 00044000
      DATA E( 881),E( 882),E( 883),E( 884)/'CONE',' UND','EFIN','ED. '/ 00044100
      DATA E( 885),E( 886),E( 887),E( 888)/'THE ','GIVE','N AN','GLE '/ 00044200
      DATA E( 889),E( 890),E( 891),E( 892)/'IS G','REAT','ER T','HAN '/ 00044300
      DATA E( 893),E( 894),E( 895),E( 896)/'90 D','EGRE','ES. ','PLAN'/ 00044400
      DATA E( 897),E( 898),E( 899),E( 900)/'E US','ED I','N ''Z','SURF'/00044500
      DATA E( 901),E( 902),E( 903),E( 904)/''' ST','ATEM','ENT ','IS U'/00044600
      DATA E( 905),E( 906),E( 907),E( 908)/'NDEF','INED','.  ''','ZSUR'/00044700
      DATA E( 909),E( 910),E( 911),E( 912)/'F'' S','TATE','MENT',' IS '/00044800
      DATA E( 913),E( 914),E( 915),E( 916)/'IGNO','RED.','    ','PLAN'/ 00044900
      DATA E( 917),E( 918),E( 919),E( 920)/'E US','ED I','N ''Z','SURF'/00045000
      DATA E( 921),E( 922),E( 923),E( 924)/''' ST','ATEM','ENT ','IS P'/00045100
      DATA E( 925),E( 926),E( 927),E( 928)/'ARAL','LEL ','TO  ','Z AX'/ 00045200
      DATA E( 929),E( 930),E( 931),E( 932)/'IS. ','''ZSU','RF'' ','STAT'00045300
     +/                                                                 00045400
      DATA E( 933),E( 934),E( 935),E( 936)/'EMEN','T IS',' IGN','ORED'/ 00045500
      DATA E( 937),E( 938),E( 939),E( 940)/'.   ','INPU','T VE','CTOR'/ 00045600
      DATA E( 941),E( 942),E( 943),E( 944)/'S AR','E PA','RALL','EL. '/ 00045700
      DATA E( 945),E( 946),E( 947),E( 948)/'PLAN','E UN','DEFI','NED.'/ 00045800
      DATA E( 949),E( 950),E( 951),E( 952)/'    ','THE ','THRE','E SI'/ 00045900
      DATA E( 953),E( 954),E( 955),E( 956)/'MULT','ANEO','US E','QUAT'/ 00046000
      DATA E( 957),E( 958),E( 959),E( 960)/'IONS',' DO ','NOT ','HAVE'/ 00046100
      DATA E( 961),E( 962),E( 963),E( 964)/' A U','NIQU','E SO','LUTI'/ 00046200
      DATA E( 965),E( 966),E( 967),E( 968)/'ON. ','''REF','SYS''',' GIV'00046300
     +/                                                                 00046400
      DATA E( 969),E( 970),E( 971),E( 972)/'EN W','ITH ','UNDE','FINE'/ 00046500
      DATA E( 973),E( 974),E( 975),E( 976)/'D MA','TRIX','. TR','ANSF'/ 00046600
      DATA E( 977),E( 978),E( 979),E( 980)/'ORMS',' WIL','L BE','  UN'/ 00046700
      DATA E( 981),E( 982),E( 983),E( 984)/'DEFI','NED.','    ','AT L'/ 00046800
      DATA E( 985),E( 986),E( 987),E( 988)/'EAST',' ONE',' INP','UT-E'/ 00046900
      DATA E( 989),E( 990),E( 991),E( 992)/'LEME','NT O','F TH','E SP'/ 00047000
      DATA E( 993),E( 994),E( 995),E( 996)/'AT-F','UNCT','ION ','IS W'/ 00047100
      DATA E( 997),E( 998),E( 999),E(1000)/'RONG',' OR ',' UND','EFIN'/ 00047200
      DATA E(1001),E(1002),E(1003),E(1004)/'ED; ','THE ','RESU','LT I'/ 00047300
      DATA E(1005),E(1006),E(1007),E(1008)/'S 0.','    ','AT L','EAST'/ 00047400
      DATA E(1009),E(1010),E(1011),E(1012)/' ONE',' INP','UT-E','LEME'/ 00047500
      DATA E(1013),E(1014),E(1015),E(1016)/'NT O','F TH','E DI','ST-F'/ 00047600
      DATA E(1017),E(1018),E(1019),E(1020)/'UNCT','ION ','IS U','NDEF'/ 00047700
      DATA E(1021),E(1022),E(1023),E(1024)/'INED',';  T','HE R','ESUL'/ 00047800
      DATA E(1025),E(1026),E(1027),E(1028)/'T IS',' 0. ','THE ','VECT'/ 00047900
      DATA E(1029),E(1030),E(1031),E(1032)/'OR W','HOSE',' LEN','GTH '/ 00048000
      DATA E(1033),E(1034),E(1035),E(1036)/'IS T','O BE',' COM','PUTE'/ 00048100
      DATA E(1037),E(1038),E(1039),E(1040)/'D IS',' UND','EFIN','ED. '/ 00048200
      DATA E(1041),E(1042),E(1043),E(1044)/'A LE','NGTH',' OF ','ZERO'/ 00048300
      DATA E(1045),E(1046),E(1047),E(1048)/' IS ','USED','.   ','SPHE'/ 00048400
      DATA E(1049),E(1050),E(1051),E(1052)/'RE U','NDEF','INED','. TH'/ 00048500
      DATA E(1053),E(1054),E(1055),E(1056)/'E FO','UR G','IVEN',' POI'/ 00048600
      DATA E(1057),E(1058),E(1059),E(1060)/'NTS ','ARE ','COMP','LANA'/ 00048700
      DATA E(1061),E(1062),E(1063),E(1064)/'R.  ','CYLI','NDER',' UND'/ 00048800
      DATA E(1065),E(1066),E(1067),E(1068)/'EFIN','ED. ','THE ','AXIS'/ 00048900
      DATA E(1069),E(1070),E(1071),E(1072)/' VEC','TOR ','GIVE','N IN'/ 00049000
      DATA E(1073),E(1074),E(1075),E(1076)/' THE',' DEF','INIT','ION '/ 00049100
      DATA E(1077),E(1078),E(1079),E(1080)/'HAS ',' ZER','O VA','LUE.'/ 00049200
      DATA E(1081),E(1082),E(1083),E(1084)/'    ','GIVE','N PL','ANE '/ 00049300
      DATA E(1085),E(1086),E(1087),E(1088)/'IS P','ERPE','NDIC','ULAR'/ 00049400
      DATA E(1089),E(1090),E(1091),E(1092)/' TO ','AN A','XIS.',' MOD'/ 00049500
      DATA E(1093),E(1094),E(1095),E(1096)/'IFIE','R MU','ST C','ONTA'/ 00049600
      DATA E(1097),E(1098),E(1099),E(1100)/'IN  ','THIS',' AXI','S.  '/ 00049700
      DATA E(1101),E(1102),E(1103),E(1104)/'THE ','INPU','T-EL','EMEN'/ 00049800
      DATA E(1105),E(1106),E(1107),E(1108)/'T OF',' THE',' DIS','T-FU'/ 00049900
      DATA E(1109),E(1110),E(1111),E(1112)/'NCTI','ON I','S OF',' A W'/ 00050000
      DATA E(1113),E(1114),E(1115),E(1116)/'RONG',' KIN','D;  ','THE '/ 00050100
      DATA E(1117),E(1118),E(1119),E(1120)/'RESU','LT I','S 0.','    '/ 00050200
      DATA E(1121),E(1122),E(1123),E(1124)/'THE ','TWO ','PLAN','ES O'/ 00050300
      DATA E(1125),E(1126),E(1127),E(1128)/'R LI','NES ','OF T','HE D'/ 00050400
      DATA E(1129),E(1130),E(1131),E(1132)/'IST-','FUNC','TION',' ARE'/ 00050500
      DATA E(1133),E(1134),E(1135),E(1136)/' NOT',' PAR','ALLE','L;  '/ 00050600
      DATA E(1137),E(1138),E(1139),E(1140)/'THE ','RESU','LT I','S 0.'/ 00050700
      DATA E(1141),E(1142),E(1143),E(1144)/'    ','THE ','REQU','ESTE'/ 00050800
      DATA E(1145),E(1146),E(1147),E(1148)/'D NU','MBER',' OF ','ROWS'/ 00050900
      DATA E(1149),E(1150),E(1151),E(1152)/' OR ','COLU','MNS ','IN A'/ 00051000
      DATA E(1153),E(1154),E(1155),E(1156)/' GRI','D OR',' PER','IPHE'/ 00051100
      DATA E(1157),E(1158),E(1159),E(1160)/'RAL ',' PAT','ERN ','IS Z'/ 00051200
      DATA E(1161),E(1162),E(1163),E(1164)/'ERO ','OR A',' NEG','ATIV'/ 00051300
      DATA E(1165),E(1166),E(1167),E(1168)/'E NU','MBER','.   ','INCR'/ 00051400
      DATA E(1169),E(1170),E(1171),E(1172)/'EMEN','T OR',' NUM','BER '/ 00051500
      DATA E(1173),E(1174),E(1175),E(1176)/'OF I','NCRE','MENT','S IN'/ 00051600
      DATA E(1177),E(1178),E(1179),E(1180)/' A P','ATER','N DE','FINI'/ 00051700
      DATA E(1181),E(1182),E(1183),E(1184)/'TION','  IN','CREM','ENT '/ 00051800
      DATA E(1185),E(1186),E(1187),E(1188)/'LIST',' IS ','NEGA','TIVE'/ 00051900
      DATA E(1189),E(1190),E(1191),E(1192)/' OR ','ZERO','.   ','VECT'/ 00052000
      DATA E(1193),E(1194),E(1195),E(1196)/'OR S','UPPL','IED ','IN A'/ 00052100
      DATA E(1197),E(1198),E(1199),E(1200)/' PAT','ERN ','DEFI','NITI'/ 00052200
      DATA E(1201),E(1202),E(1203),E(1204)/'ON H','AS L','ENGT','H ZE'/ 00052300
      DATA E(1205),E(1206),E(1207),E(1208)/'RO. ','THE ','REQU','ESTE'/ 00052400
      DATA E(1209),E(1210),E(1211),E(1212)/'D NU','MBER',' OF ','POIN'/ 00052500
      DATA E(1213),E(1214),E(1215),E(1216)/'TS I','N A ','PATE','RN I'/ 00052600
      DATA E(1217),E(1218),E(1219),E(1220)/'S ZE','RO O','R A ',' NEG'/ 00052700
      DATA E(1221),E(1222),E(1223),E(1224)/'ATIV','E NU','MBER','.   '/ 00052800
      DATA E(1225),E(1226),E(1227),E(1228)/'THE ','PATE','RN U','SED '/ 00052900
      DATA E(1229),E(1230),E(1231),E(1232)/'IN A',' GRI','D OR',' PER'/ 00053000
      DATA E(1233),E(1234),E(1235),E(1236)/'IPHE','RAL ','PATE','RN D'/ 00053100
      DATA E(1237),E(1238),E(1239),E(1240)/'EFIN','ITIO','N MU','ST  '/ 00053200
      DATA E(1241),E(1242),E(1243),E(1244)/'BE L','INEA','R.  ','A RA'/ 00053300
      DATA E(1245),E(1246),E(1247),E(1248)/'NDOM',' PAT','ERN ','MAY '/ 00053400
      DATA E(1249),E(1250),E(1251),E(1252)/'NOT ','BE U','SED ','IN T'/ 00053500
      DATA E(1253),E(1254),E(1255),E(1256)/'HE D','EFIN','ITIO','N OF'/ 00053600
      DATA E(1257),E(1258),E(1259),E(1260)/' A R','ANDO','M  P','ATER'/ 00053700
      DATA E(1261),E(1262),E(1263),E(1264)/'N.  ','INPU','T PO','INT '/ 00053800
      DATA E(1265),E(1266),E(1267),E(1268)/'FOR ','LCON','IC I','S UN'/ 00053900
      DATA E(1269),E(1270),E(1271),E(1272)/'DEFI','NED.','    ','TWO '/ 00054000
      DATA E(1273),E(1274),E(1275),E(1276)/'INPU','T PO','INTS',' COI'/ 00054100
      DATA E(1277),E(1278),E(1279),E(1280)/'NCID','E. T','HE C','ONIC'/ 00054200
      DATA E(1281),E(1282),E(1283),E(1284)/' CAN','NOT ','BE D','EFIN'/ 00054300
      DATA E(1285),E(1286),E(1287),E(1288)/'ED. ','THIS',' IS ','A DE'/ 00054400
      DATA E(1289),E(1290),E(1291),E(1292)/'GENE','RATI','C CO','NIC.'/ 00054500
      DATA E(1293),E(1294),E(1295),E(1296)/'    ','TABC','YL I','NTER'/ 00054600
      DATA E(1297),E(1298),E(1299),E(1300)/'SECT','ION ','POIN','T IS'/ 00054700
      DATA E(1301),E(1302),E(1303),E(1304)/' NOT',' FOU','ND. ','MORE'/ 00054800
      DATA E(1305),E(1306),E(1307),E(1308)/' THA','N 1 ','POIN','T IN'/ 00054900
      DATA E(1309),E(1310),E(1311),E(1312)/' TAN','GENC','Y ON',' TAB'/ 00055000
      DATA E(1313),E(1314),E(1315),E(1316)/'CYL.','    ','TABC','YL T'/ 00055100
      DATA E(1317),E(1318),E(1319),E(1320)/'ANGE','NT L','INE ','IS N'/ 00055200
      DATA E(1321),E(1322),E(1323),E(1324)/'OT F','OUND','.   ','TABC'/ 00055300
      DATA E(1325),E(1326),E(1327),E(1328)/'YL T','ANGE','NT L','INE '/ 00055400
      DATA E(1329),E(1330),E(1331),E(1332)/'FAIL','ED. ','ARGU','MENT'/ 00055500
      DATA E(1333),E(1334),E(1335),E(1336)/' FOR',' TAB','CYL ','TANG'/ 00055600
      DATA E(1337),E(1338),E(1339),E(1340)/'ENT ','LINE',' IS ','UNDE'/ 00055700
      DATA E(1341),E(1342),E(1343),E(1344)/'FINE','D.  ','TABC','YL M'/ 00055800
      DATA E(1345),E(1346),E(1347),E(1348)/'ODIF','IER ','INDE','TERM'/ 00055900
      DATA E(1349),E(1350),E(1351),E(1352)/'INAT','E.  ','TABC','YL T'/ 00056000
      DATA E(1353),E(1354),E(1355),E(1356)/'ANGE','NT C','IRCL','E IS'/ 00056100
      DATA E(1357),E(1358),E(1359),E(1360)/' NOT',' FOU','ND. ','ARGU'/ 00056200
      DATA E(1361),E(1362),E(1363),E(1364)/'MENT',' FOR',' TAB','CYL '/ 00056300
      DATA E(1365),E(1366),E(1367),E(1368)/'TANG','ENT ','CIRC','LE I'/ 00056400
      DATA E(1369),E(1370),E(1371),E(1372)/'S UN','DEFI','NED.','    '/ 00056500
      DATA E(1373),E(1374),E(1375),E(1376)/'AT L','EAST',' ONE',' INP'/ 00056600
      DATA E(1377),E(1378),E(1379),E(1380)/'UT O','F TH','E AN','GL-F'/ 00056700
      DATA E(1381),E(1382),E(1383),E(1384)/'UNCT','ION ','IS U','NDEF'/ 00056800
      DATA E(1385),E(1386),E(1387),E(1388)/'INED',' OR ','OF A','  WR'/ 00056900
      DATA E(1389),E(1390),E(1391),E(1392)/'ONG ','KIND','; TH','E RE'/ 00057000
      DATA E(1393),E(1394),E(1395),E(1396)/'SULT',' IS ','ZERO','.   '/ 00057100
      DATA E(1397),E(1398),E(1399),E(1400)/'A RA','NDOM',' PAT','ERN '/ 00057200
      DATA E(1401),E(1402),E(1403),E(1404)/'OCCU','RS A','S A ','SUB '/ 00057300
      DATA E(1405),E(1406),E(1407),E(1408)/'ELEM','ENT ','OF A',' RAN'/ 00057400
      DATA E(1409),E(1410),E(1411),E(1412)/'DOM ','PATE','RN. ','REST'/ 00057500
      DATA E(1413),E(1414),E(1415),E(1416)/'ART ','DUE ','TO D','EFIN'/ 00057600
      DATA E(1417),E(1418),E(1419),E(1420)/'ITIO','N OR',' SYN','TAX '/ 00057700
      DATA E(1421),E(1422),E(1423),E(1424)/'ERRO','R.  ','HALF',' SPA'/ 00057800
      DATA E(1425),E(1426),E(1427),E(1428)/'CE M','ODIF','IER ','NOT '/ 00057900
      DATA E(1429),E(1430),E(1431),E(1432)/'PROP','ERLY',' SPE','CIFI'/ 00058000
      DATA E(1433),E(1434),E(1435),E(1436)/'ED. ','REFE','RENC','ED E'/ 00058100
      DATA E(1437),E(1438),E(1439),E(1440)/'LEME','NT N','OT P','ROPE'/ 00058200
      DATA E(1441),E(1442),E(1443),E(1444)/'RLY ','DEFI','NED.','    '/ 00058300
      DATA E(1445),E(1446),E(1447),E(1448)/'BOUN','DED ','GEOM','ETRY'/ 00058400
      DATA E(1449),E(1450),E(1451),E(1452)/' ELE','MENT',' HAS',' BEE'/ 00058500
      DATA E(1453),E(1454),E(1455),E(1456)/'N RE','DEFI','NED ','WITH'/ 00058600
      DATA E(1457),E(1458),E(1459),E(1460)/' A D','IFFE','RENT','  NU'/ 00058700
      DATA E(1461),E(1462),E(1463),E(1464)/'MBER',' OF ','ELEM','ENTS'/ 00058800
      DATA E(1465),E(1466),E(1467),E(1468)/'.   ','THE ','DIFF','EREN'/ 00058900
      DATA E(1469),E(1470),E(1471),E(1472)/'CE B','ETWE','EN >','P1< '/ 00059000
      DATA E(1473),E(1474),E(1475),E(1476)/'AND ','>P2<',' IS ','LESS'/ 00059100
      DATA E(1477),E(1478),E(1479),E(1480)/' THA','N .0','1 . ','>V1<'/ 00059200
      DATA E(1481),E(1482),E(1483),E(1484)/' IS ','PARA','LLEL',' TO '/ 00059300
      DATA E(1485),E(1486),E(1487),E(1488)/'THE ','CHOR','D.  ','INVA'/ 00059400
      DATA E(1489),E(1490),E(1491),E(1492)/'LID ','OR E','RRON','EOUS'/ 00059500
      DATA E(1493),E(1494),E(1495),E(1496)/' CAN','ONIC','AL F','ORM '/ 00059600
      DATA E(1497),E(1498),E(1499),E(1500)/'ENCO','UNTE','RED.',' BOU'/ 00059700
      DATA E(1501),E(1502),E(1503),E(1504)/'NDED','  GE','OMET','RY P'/ 00059800
      DATA E(1505),E(1506),E(1507),E(1508)/'ROCE','SSIN','G TE','RMIN'/ 00059900
      DATA E(1509),E(1510),E(1511),E(1512)/'ATED','.   ','TOO ','MUCH'/ 00060000
      DATA E(1513),E(1514),E(1515),E(1516)/' EMB','EDDE','DNES','S IN'/ 00060100
      DATA E(1517),E(1518),E(1519),E(1520)/' BOU','NDS ','AND ','OBJE'/ 00060200
      DATA E(1521),E(1522),E(1523),E(1524)/'CT S','TATE','MENT','S. B'/ 00060300
      DATA E(1525),E(1526),E(1527),E(1528)/'OUND','ED  ','GEOM','ETRY'/ 00060400
      DATA E(1529),E(1530),E(1531),E(1532)/' PRO','CESS','ING ','TERM'/ 00060500
      DATA E(1533),E(1534),E(1535),E(1536)/'INAT','ED. ','INCO','RREC'/ 00060600
      DATA E(1537),E(1538),E(1539),E(1540)/'T AR','GUME','NT I','N ''U'/00060700
      DATA E(1541),E(1542),E(1543),E(1544)/'NITS',''' ST','ATEM','ENT.'/00060800
      DATA E(1545),E(1546),E(1547),E(1548)/'    ','PLAN','E IS',' NOT'/ 00060900
      DATA E(1549),E(1550),E(1551),E(1552)/' VER','TICA','L.  ','SPEC'/ 00061000
      DATA E(1553),E(1554),E(1555),E(1556)/'IFIE','D CL',' POI','NT D'/ 00061100
      DATA E(1557),E(1558),E(1559),E(1560)/'OES ','NOT ','EXIS','T.  '/ 00061200
      DATA E(1561),E(1562),E(1563),E(1564)/'CLDA','T IN','DEXE','S AR'/ 00061300
      DATA E(1565),E(1566),E(1567),E(1568)/'E DI','FFER','ENT ','(FIR'/ 00061400
      DATA E(1569),E(1570),E(1571),E(1572)/'ST I','NDEX',' REM','AINS'/ 00061500
      DATA E(1573),E(1574),E(1575),E(1576)/' VAL','ID) ','OR M','ULTI'/ 00061600
      DATA E(1577),E(1578),E(1579),E(1580)/'PLE ','DEFI','NED ','CLDA'/ 00061700
      DATA E(1581),E(1582),E(1583),E(1584)/'T-SE','CTIO','N (F','ORME'/ 00061800
      DATA E(1585),E(1586),E(1587),E(1588)/'R SE','CTIO','N DE','LETE'/ 00061900
      DATA E(1589),E(1590),E(1591),E(1592)/'D). ','ICLT','AB F','ILLE'/ 00062000
      DATA E(1593),E(1594),E(1595),E(1596)/'D. U','SE A',' FOR','MER '/ 00062100
      DATA E(1597),E(1598),E(1599),E(1600)/'USED',' IND','EX O','R RE'/ 00062200
      DATA E(1601),E(1602),E(1603),E(1604)/'DIME','NSIO','N AR','RAY.'/ 00062300
      DATA E(1605),E(1606),E(1607),E(1608)/'    ','CLDA','T SE','CTIO'/ 00062400
      DATA E(1609),E(1610),E(1611),E(1612)/'N NO','T FO','UND ','OR N'/ 00062500
      DATA E(1613),E(1614),E(1615),E(1616)/'OT C','LOSE','D.  ','TRAN'/ 00062600
      DATA E(1617),E(1618),E(1619),E(1620)/'SFOR','MATI','ON M','ATRI'/ 00062700
      DATA E(1621),E(1622),E(1623),E(1624)/'X HA','S UN','EQUA','L SC'/ 00062800
      DATA E(1625),E(1626),E(1627),E(1628)/'ALE ','FUNC','TION',' IN '/ 00062900
      DATA E(1629),E(1630),E(1631),E(1632)/'X-, ','Y- O','R Z-','AXIS'/ 00063000
      DATA E(1633),E(1634),E(1635),E(1636)/'.   ','MOTI','ON C','OMMA'/ 00063100
      DATA E(1637),E(1638),E(1639),E(1640)/'ND D','OES ','NOT ','CONT'/ 00063200
      DATA E(1641),E(1642),E(1643),E(1644)/'AIN ','PART',' OR ','DRIV'/ 00063300
      DATA E(1645),E(1646),E(1647),E(1648)/'E SU','RFAC','E TO',' PRO'/ 00063400
      DATA E(1649),E(1650),E(1651),E(1652)/'DUCE','CL -',' DEF','INIT'/ 00063500
      DATA E(1653),E(1654),E(1655),E(1656)/'ION ','WANT','ED. ','WRON'/ 00063600
      DATA E(1657),E(1658),E(1659),E(1660)/'G AR','GUME','NT I','N PA'/ 00063700
      DATA E(1661),E(1662),E(1663),E(1664)/'RTPR','OGRA','M CA','LLIN'/ 00063800
      DATA E(1665),E(1666),E(1667),E(1668)/'G FU','NCTI','ON. ','WANT'/ 00063900
      DATA E(1669),E(1670),E(1671),E(1672)/'ED M','ODUL','E CA','NNOT'/ 00064000
      DATA E(1673),E(1674),E(1675),E(1676)/' BE ','FOUN','D.  ','EXTE'/ 00064100
      DATA E(1677),E(1678),E(1679),E(1680)/'RNAL',' REF','EREN','CE I'/ 00064200
      DATA E(1681),E(1682),E(1683),E(1684)/'S NO','T SO','LVED','.   '/ 00064300
      DATA E(1685),E(1686),E(1687),E(1688)/'NOT ','ENOU','GH C','ORE '/ 00064400
      DATA E(1689),E(1690),E(1691),E(1692)/'AVAI','LABL','E.  ','MODU'/ 00064500
      DATA E(1693),E(1694),E(1695),E(1696)/'LE N','OT I','N LI','BRAR'/ 00064600
      DATA E(1697),E(1698),E(1699),E(1700)/'Y.  ','CESD',' TAB','LE F'/ 00064700
      DATA E(1701),E(1702),E(1703),E(1704)/'OR L','OADE','R MO','DULE'/ 00064800
      DATA E(1705),E(1706),E(1707),E(1708)/'S TO','O SH','ORT.','    '/ 00064900
      DATA E(1709),E(1710),E(1711),E(1712)/'CESD',' TAB','LE F','OR L'/ 00065000
      DATA E(1713),E(1714),E(1715),E(1716)/'OAD-','MODU','LE T','OO S'/ 00065100
      DATA E(1717),E(1718),E(1719),E(1720)/'HORT','.   ','TO M','ANY '/ 00065200
      DATA E(1721),E(1722),E(1723),E(1724)/'MODU','LES ','TO B','E LO'/ 00065300
      DATA E(1725),E(1726),E(1727),E(1728)/'ADED','.   ','POCK','ET I'/ 00065400
      DATA E(1729),E(1730),E(1731),E(1732)/'NPUT',' CON','TAIN','S DU'/ 00065500
      DATA E(1733),E(1734),E(1735),E(1736)/'PLIC','ATE ','POIN','TS. '/ 00065600
      DATA E(1737),E(1738),E(1739),E(1740)/'POCK','ET I','NPUT',' CON'/ 00065700
      DATA E(1741),E(1742),E(1743),E(1744)/'TAIN','S TH','REE ','COLL'/ 00065800
      DATA E(1745),E(1746),E(1747),E(1748)/'INEA','R PO','INTS','.   '/ 00065900
      DATA E(1749),E(1750),E(1751),E(1752)/'POCK','ET I','NPUT',' POI'/ 00066000
      DATA E(1753),E(1754),E(1755),E(1756)/'NTS ','ARE ','NOT ','COMP'/ 00066100
      DATA E(1757),E(1758),E(1759),E(1760)/'LANA','R.  ','POCK','ET I'/ 00066200
      DATA E(1761),E(1762),E(1763),E(1764)/'NPUT',' POI','NTS ','DESC'/ 00066300
      DATA E(1765),E(1766),E(1767),E(1768)/'RIBE',' CON','CAVE',' FIG'/ 00066400
      DATA E(1769),E(1770),E(1771),E(1772)/'URE.','    ','AN I','NPUT'/ 00066500
      DATA E(1773),E(1774),E(1775),E(1776)/' POI','NT I','S UN','DEFI'/ 00066600
      DATA E(1777),E(1778),E(1779),E(1780)/'NED.','    ','THE ','ANGL'/ 00066700
      DATA E(1781),E(1782),E(1783),E(1784)/'E BE','TWEE','N TH','E TO'/ 00066800
      DATA E(1785),E(1786),E(1787),E(1788)/'OL A','XIS ','AND ','THE '/ 00066900
      DATA E(1789),E(1790),E(1791),E(1792)/'PLAN','E OF',' THE',' POC'/ 00067000
      DATA E(1793),E(1794),E(1795),E(1796)/'KET ',' BOT','TOM ','IS T'/ 00067100
      DATA E(1797),E(1798),E(1799),E(1800)/'OO S','MALL',' (LE','SS T'/ 00067200
      DATA E(1801),E(1802),E(1803),E(1804)/'HAN ','12 D','EGRE','ES).'/ 00067300
      DATA E(1805),E(1806),E(1807),E(1808)/'    ','LESS',' THA','N 3 '/ 00067400
      DATA E(1809),E(1810),E(1811),E(1812)/'POIN','TS H','AVE ','BEEN'/ 00067500
      DATA E(1813),E(1814),E(1815),E(1816)/' GEN','ERAT','ED. ','A MI'/ 00067600
      DATA E(1817),E(1818),E(1819),E(1820)/'NOR ','WORD',' OR ','CANO'/ 00067700
      DATA E(1821),E(1822),E(1823),E(1824)/'NICA','L FO','RM I','N TH'/ 00067800
      DATA E(1825),E(1826),E(1827),E(1828)/'E IN','PUT ','STRE','AM I'/ 00067900
      DATA E(1829),E(1830),E(1831),E(1832)/'S IN',' THE','  WR','ONG '/ 00068000
      DATA E(1833),E(1834),E(1835),E(1836)/'POSI','TION',' OR ','INVA'/ 00068100
      DATA E(1837),E(1838),E(1839),E(1840)/'LID.','    ','AN I','NPUT'/ 00068200
      DATA E(1841),E(1842),E(1843),E(1844)/' CAN','ONIC','AL F','ORM '/ 00068300
      DATA E(1845),E(1846),E(1847),E(1848)/'HAS ','NOT ','BEEN',' DEF'/ 00068400
      DATA E(1849),E(1850),E(1851),E(1852)/'INED',' PRO','PERL','Y.  '/ 00068500
      DATA E(1853),E(1854),E(1855),E(1856)/'AN I','NPUT',' CAN','ONIC'/ 00068600
      DATA E(1857),E(1858),E(1859),E(1860)/'AL F','ORM ','IS N','OT S'/ 00068700
      DATA E(1861),E(1862),E(1863),E(1864)/'UITA','BLE ','FOR ','THIS'/ 00068800
      DATA E(1865),E(1866),E(1867),E(1868)/' APP','LICA','TION','.   '/ 00068900
      DATA E(1869),E(1870),E(1871),E(1872)/'TOO ','MANY',' OR ','FEW '/ 00069000
      DATA E(1873),E(1874),E(1875),E(1876)/'PARA','METE','RS H','AVE '/ 00069100
      DATA E(1877),E(1878),E(1879),E(1880)/'BEEN',' INP','UT. ','THE '/ 00069200
      DATA E(1881),E(1882),E(1883),E(1884)/'CUTT','ER C','OULD',' NOT'/ 00069300
      DATA E(1885),E(1886),E(1887),E(1888)/' CON','TACT',' THE',' PAR'/ 00069400
      DATA E(1889),E(1890),E(1891),E(1892)/'T SU','RFAC','E FR','OM T'/ 00069500
      DATA E(1893),E(1894),E(1895),E(1896)/'HE P','RESE','NT  ','POSI'/ 00069600
      DATA E(1897),E(1898),E(1899),E(1900)/'TION','.   ','AT T','HE L'/ 00069700
      DATA E(1901),E(1902),E(1903),E(1904)/'AST ','POIN','T DU','RING'/ 00069800
      DATA E(1905),E(1906),E(1907),E(1908)/' PAT','H GE','NERA','TION'/ 00069900
      DATA E(1909),E(1910),E(1911),E(1912)/', TH','E SY','STEM',' COU'/ 00070000
      DATA E(1913),E(1914),E(1915),E(1916)/'LD N','OT  ','MAKE',' A C'/ 00070100
      DATA E(1917),E(1918),E(1919),E(1920)/'UTTE','R ST','EPOU','T TH'/ 00070200
      DATA E(1921),E(1922),E(1923),E(1924)/'AT S','ATIS','FIED',' ALL'/ 00070300
      DATA E(1925),E(1926),E(1927),E(1928)/' CUR','VATU','RE A','ND  '/ 00070400
      DATA E(1929),E(1930),E(1931),E(1932)/'TOLE','RANC','E CO','NDIT'/ 00070500
      DATA E(1933),E(1934),E(1935),E(1936)/'IONS','.   ','MORE',' CL '/ 00070600
      DATA E(1937),E(1938),E(1939),E(1940)/'POIN','TS W','ERE ','GENE'/ 00070700
      DATA E(1941),E(1942),E(1943),E(1944)/'RATE','D IN',' A S','INGL'/ 00070800
      DATA E(1945),E(1946),E(1947),E(1948)/'E PA','TH T','HAN ','PERM'/ 00070900
      DATA E(1949),E(1950),E(1951),E(1952)/'ITTE','D  B','Y ''N','UMPT'/00071000
      DATA E(1953),E(1954),E(1955),E(1956)/'S'' S','ETTI','NG. ','THE '/00071100
      DATA E(1957),E(1958),E(1959),E(1960)/'TOTA','L LE','NGTH',' OF '/ 00071200
      DATA E(1961),E(1962),E(1963),E(1964)/'THE ','CURR','ENT ','CUTT'/ 00071300
      DATA E(1965),E(1966),E(1967),E(1968)/'ER P','ATH ','EXCE','EDED'/ 00071400
      DATA E(1969),E(1970),E(1971),E(1972)/' THE','  ''M','AXDP',''' SE'00071500
     +/                                                                 00071600
      DATA E(1973),E(1974),E(1975),E(1976)/'TTIN','UNAB','LE T','O AV'/ 00071700
      DATA E(1977),E(1978),E(1979),E(1980)/'OID ','INTE','RFER','ENCE'/ 00071800
      DATA E(1981),E(1982),E(1983),E(1984)/' WIT','H CU','RREN','T PA'/ 00071900
      DATA E(1985),E(1986),E(1987),E(1988)/'RAME','TERS','G.  ','A MI'/ 00072000
      DATA E(1989),E(1990),E(1991),E(1992)/'NOR ','WORD',' OR ','CANO'/ 00072100
      DATA E(1993),E(1994),E(1995),E(1996)/'NICA','L FO','RM I','N TH'/ 00072200
      DATA E(1997),E(1998),E(1999),E(2000)/'E IN','PUT ','STRE','AM I'/ 00072300
      DATA E(2001),E(2002),E(2003),E(2004)/'S IN',' THE','  WR','ONG '/ 00072400
      DATA E(2005),E(2006),E(2007),E(2008)/'POSI','TION',' OR ','INVA'/ 00072500
      DATA E(2009),E(2010),E(2011),E(2012)/'LID.','    ','AN I','NPUT'/ 00072600
      DATA E(2013),E(2014),E(2015),E(2016)/' CAN','ONIC','AL F','ORM '/ 00072700
      DATA E(2017),E(2018),E(2019),E(2020)/'HAS ','NOT ','BEEN',' DEF'/ 00072800
      DATA E(2021),E(2022),E(2023),E(2024)/'INED',' PRO','PERL','Y.  '/ 00072900
      DATA E(2025),E(2026),E(2027),E(2028)/'AN I','NPUT',' CAN','ONIC'/ 00073000
      DATA E(2029),E(2030),E(2031),E(2032)/'AL F','ORM ','IS N','OT S'/ 00073100
      DATA E(2033),E(2034),E(2035),E(2036)/'UITA','BLE ','FOR ','THIS'/ 00073200
      DATA E(2037),E(2038),E(2039),E(2040)/' APP','LICA','TION','.   '/ 00073300
      DATA E(2041),E(2042),E(2043),E(2044)/'TOO ','MANY',' OR ','FEW '/ 00073400
      DATA E(2045),E(2046),E(2047),E(2048)/'PARA','METE','RS H','AVE '/ 00073500
      DATA E(2049),E(2050),E(2051),E(2052)/'BEEN',' INP','UT. ','AN '''/00073600
      DATA E(2053),E(2054),E(2055),E(2056)/'SCON',''' DA','TA A','REA '/00073700
      DATA E(2057),E(2058),E(2059),E(2060)/'(DS,','PS,F','EED,','ETC.'/ 00073800
      DATA E(2061),E(2062),E(2063),E(2064)/') HA','S NO','T BE','EN D'/ 00073900
      DATA E(2065),E(2066),E(2067),E(2068)/'EFIN','ED O','R  H','AS B'/ 00074000
      DATA E(2069),E(2070),E(2071),E(2072)/'EEN ','INCO','RREC','TLY '/ 00074100
      DATA E(2073),E(2074),E(2075),E(2076)/'DEFI','NED.','    ','GENE'/ 00074200
      DATA E(2077),E(2078),E(2079),E(2080)/'RAL ','APT ','AREL','EM C'/ 00074300
      DATA E(2081),E(2082),E(2083),E(2084)/'ONDI','TION','S FO','R RE'/ 00074400
      DATA E(2085),E(2086),E(2087),E(2088)/'GION','AL M','ILLI','NG A'/ 00074500
      DATA E(2089),E(2090),E(2091),E(2092)/'RE I','NVAL','ID  ','(PRO'/ 00074600
      DATA E(2093),E(2094),E(2095),E(2096)/'BABL','Y UN','ACCE','PTAB'/ 00074700
      DATA E(2097),E(2098),E(2099),E(2100)/'LE C','UTTE','R TY','PE).'/ 00074800
      DATA E(2101),E(2102),E(2103),E(2104)/'    ','PART',' OR ','DRIV'/ 00074900
      DATA E(2105),E(2106),E(2107),E(2108)/'E GE','OMET','RY C','OULD'/ 00075000
      DATA E(2109),E(2110),E(2111),E(2112)/' NOT',' BE ','FETC','HED '/ 00075100
      DATA E(2113),E(2114),E(2115),E(2116)/'BECA','USE ','OF  ','DEFI'/ 00075200
      DATA E(2117),E(2118),E(2119),E(2120)/'NITI','ON E','RROR',' OR '/ 00075300
      DATA E(2121),E(2122),E(2123),E(2124)/'SPAC','E LI','MITA','TION'/ 00075400
      DATA E(2125),E(2126),E(2127),E(2128)/'.   ','LARG','E DA','TA C'/ 00075500
      DATA E(2129),E(2130),E(2131),E(2132)/'OULD',' NOT',' BE ','STOR'/ 00075600
      DATA E(2133),E(2134),E(2135),E(2136)/'ED I','NTER','NALY','.   '/ 00075700
      DATA E(2137),E(2138),E(2139),E(2140)/'WRON','G SE','COND',' PAR'/ 00075800
      DATA E(2141),E(2142),E(2143),E(2144)/'AMET','ER I','N SM','ESH '/ 00075900
      DATA E(2145),E(2146),E(2147),E(2148)/'DEFI','NITI','ON. ','THE '/ 00076000
      DATA E(2149),E(2150),E(2151),E(2152)/'REQU','ESTE','D SY','NTHE'/ 00076100
      DATA E(2153),E(2154),E(2155),E(2156)/'TIC ','CURV','E WA','S NO'/ 00076200
      DATA E(2157),E(2158),E(2159),E(2160)/'T AV','AILA','BLE.','    '/ 00076300
      DATA E(2161),E(2162),E(2163),E(2164)/'THE ','WORD',' ''AX','IS'' '00076400
     +/                                                                 00076500
      DATA E(2165),E(2166),E(2167),E(2168)/'WAS ','NOT ','IN P','ROPE'/ 00076600
      DATA E(2169),E(2170),E(2171),E(2172)/'R PO','SITI','ON I','N TH'/ 00076700
      DATA E(2173),E(2174),E(2175),E(2176)/'E  I','NPUT',' STR','EAM.'/ 00076800
      DATA E(2177),E(2178),E(2179),E(2180)/'    ','A VA','LID ','AXIS'/ 00076900
      DATA E(2181),E(2182),E(2183),E(2184)/' WAS',' NOT',' DEF','INED'/ 00077000
      DATA E(2185),E(2186),E(2187),E(2188)/'.   ','THE ','WORD','S ''C'/00077100
      DATA E(2189),E(2190),E(2191),E(2192)/'CLW''',' OR ','''CLW',      00077200
     +''' WE'/                                                          00077300
      DATA E(2193),E(2194),E(2195),E(2196)/'RE N','OT I','N PR','OPER'/ 00077400
      DATA E(2197),E(2198),E(2199),E(2200)/' POS','ITIO','N IN',' THE'/ 00077500
      DATA E(2201),E(2202),E(2203),E(2204)/'  IN','PUT ','STRE','AM. '/ 00077600
      DATA E(2205),E(2206),E(2207),E(2208)/'TWO ','ANGL','ES A','RE R'/ 00077700
      DATA E(2209),E(2210),E(2211),E(2212)/'EQUI','RED ','FOR ','SURF'/ 00077800
      DATA E(2213),E(2214),E(2215),E(2216)/'ACE ','OF R','EVOL','UTIO'/ 00077900
      DATA E(2217),E(2218),E(2219),E(2220)/'N.  ','TWO ','POIN','TS O'/ 00078000
      DATA E(2221),E(2222),E(2223),E(2224)/'R ON','E VE','CTOR',' ARE'/ 00078100
      DATA E(2225),E(2226),E(2227),E(2228)/' REQ','UIRE','D TO',' SPE'/ 00078200
      DATA E(2229),E(2230),E(2231),E(2232)/'CIFY','  AN',' AXI','S OF'/ 00078300
      DATA E(2233),E(2234),E(2235),E(2236)/' A C','YLIN','DER.','    '/ 00078400
      DATA E(2237),E(2238),E(2239),E(2240)/'THE ','FIRS','T SU','RFAC'/ 00078500
      DATA E(2241),E(2242),E(2243),E(2244)/'E IS',' NOT',' DEF','INED'/ 00078600
      DATA E(2245),E(2246),E(2247),E(2248)/'.   ','THE ','FIRS','T SU'/ 00078700
      DATA E(2249),E(2250),E(2251),E(2252)/'RFAC','E IS',' NOT',' DEF'/ 00078800
      DATA E(2253),E(2254),E(2255),E(2256)/'INED','.   ','THE ','COMB'/ 00078900
      DATA E(2257),E(2258),E(2259),E(2260)/'INAT','ION ','OF S','URFA'/ 00079000
      DATA E(2261),E(2262),E(2263),E(2264)/'CES ','IS T','OO L','ARGE'/ 00079100
      DATA E(2265),E(2266),E(2267),E(2268)/'.   ','THER','E IS',' NOT'/ 00079200
      DATA E(2269),E(2270),E(2271),E(2272)/' ENO','UGH ','SPAC','E IN'/ 00079300
      DATA E(2273),E(2274),E(2275),E(2276)/' >SS','PAD<',' TO ','HOLD'/ 00079400
      DATA E(2277),E(2278),E(2279),E(2280)/'  PA','TCH ','CORN','ER P'/ 00079500
      DATA E(2281),E(2282),E(2283),E(2284)/'OINT','S.  ','ONE ','OR M'/ 00079600
      DATA E(2285),E(2286),E(2287),E(2288)/'ORE ','PATC','HES ','ARE '/ 00079700
      DATA E(2289),E(2290),E(2291),E(2292)/'DISC','ONNE','CTED',' FRO'/ 00079800
      DATA E(2293),E(2294),E(2295),E(2296)/'M AL','L OT','HERS','.   '/ 00079900
      DATA E(2297),E(2298),E(2299),E(2300)/'SEGM','ENT ','REFE','RENC'/ 00080000
      DATA E(2301),E(2302),E(2303),E(2304)/'ED F','OR D','ISSE','CTIO'/ 00080100
      DATA E(2305),E(2306),E(2307),E(2308)/'N ON',' FLO','W CU','RVE '/ 00080200
      DATA E(2309),E(2310),E(2311),E(2312)/'IS O','UT O','F RA','NGE.'/ 00080300
      DATA E(2313),E(2314),E(2315),E(2316)/'THER','E IS',' NOT',' ENO'/ 00080400
      DATA E(2317),E(2318),E(2319),E(2320)/'UGH ','ROOM',' IN ','BUFF'/ 00080500
      DATA E(2321),E(2322),E(2323),E(2324)/'ER F','OR D','ISSE','CTED'/ 00080600
      DATA E(2325),E(2326),E(2327),E(2328)/' SEG','MENT','.   ','THER'/ 00080700
      DATA E(2329),E(2330),E(2331),E(2332)/'E IS',' NOT',' ENO','UGH '/ 00080800
      DATA E(2333),E(2334),E(2335),E(2336)/'ROOM',' IN ','BUFF','ER T'/ 00080900
      DATA E(2337),E(2338),E(2339),E(2340)/'O DI','SSEC','T ON','E AR'/ 00081000
      DATA E(2341),E(2342),E(2343),E(2344)/'C.  ','AN A','RC R','EFER'/ 00081100
      DATA E(2345),E(2346),E(2347),E(2348)/'ENCE','D FO','R DI','SSEC'/ 00081200
      DATA E(2349),E(2350),E(2351),E(2352)/'TION',' IS ','OUT ','OF R'/ 00081300
      DATA E(2353),E(2354),E(2355),E(2356)/'ANGE',' FOR',' THI','S CU'/ 00081400
      DATA E(2357),E(2358),E(2359),E(2360)/'RVE.','THE ','WORD',' ''CR'/00081500
      DATA E(2361),E(2362),E(2363),E(2364)/'OSS''',' WAS',' ENC','OUNT'/00081600
      DATA E(2365),E(2366),E(2367),E(2368)/'ERED',' TWI','CE I','N A '/ 00081700
      DATA E(2369),E(2370),E(2371),E(2372)/'DEFI','NITI','ON. ','LESS'/ 00081800
      DATA E(2373),E(2374),E(2375),E(2376)/' THA','N TW','O SP','LINE'/ 00081900
      DATA E(2377),E(2378),E(2379),E(2380)/'S WE','RE I','NPUT',' BEF'/ 00082000
      DATA E(2381),E(2382),E(2383),E(2384)/'ORE ','''CRO','SS''.','    '00082100
     +/                                                                 00082200
      DATA E(2385),E(2386),E(2387),E(2388)/'AN I','NPUT',' CUR','VE W'/ 00082300
      DATA E(2389),E(2390),E(2391),E(2392)/'AS N','OT P','ROPE','RLY '/ 00082400
      DATA E(2393),E(2394),E(2395),E(2396)/'DEFI','NED.','    ','THE '/ 00082500
      DATA E(2397),E(2398),E(2399),E(2400)/'FIRS','T IN','PUT ','CURV'/ 00082600
      DATA E(2401),E(2402),E(2403),E(2404)/'E CO','ULD ','NOT ','BE F'/ 00082700
      DATA E(2405),E(2406),E(2407),E(2408)/'ETCH','ED. ','THE ','FIRS'/ 00082800
      DATA E(2409),E(2410),E(2411),E(2412)/'T IN','PUT ','CURV','E WA'/ 00082900
      DATA E(2413),E(2414),E(2415),E(2416)/'S NO','T A ','FLOW',' CUR'/ 00083000
      DATA E(2417),E(2418),E(2419),E(2420)/'VE. ','TOO ','MANY',' CUR'/ 00083100
      DATA E(2421),E(2422),E(2423),E(2424)/'VES ','HAVE',' BEE','N IN'/ 00083200
      DATA E(2425),E(2426),E(2427),E(2428)/'PUT ','FOR ','THE ','CURV'/ 00083300
      DATA E(2429),E(2430),E(2431),E(2432)/'E. D','IREC','TORY','  TA'/ 00083400
      DATA E(2433),E(2434),E(2435),E(2436)/'BLE ','SIZE','.   ','THER'/ 00083500
      DATA E(2437),E(2438),E(2439),E(2440)/'E IS',' NOT',' ENO','UGH '/ 00083600
      DATA E(2441),E(2442),E(2443),E(2444)/'BUFF','ER S','PACE',' TO '/ 00083700
      DATA E(2445),E(2446),E(2447),E(2448)/'LOAD',' THI','S CU','RVE.'/ 00083800
      DATA E(2449),E(2450),E(2451),E(2452)/'    ','AN I','NPUT',' SPL'/ 00083900
      DATA E(2453),E(2454),E(2455),E(2456)/'INE ','CURV','E CO','ULD '/ 00084000
      DATA E(2457),E(2458),E(2459),E(2460)/'NOT ','BE F','ETCH','ED. '/ 00084100
      DATA E(2461),E(2462),E(2463),E(2464)/'THE ','NUMB','ER O','F FL'/ 00084200
      DATA E(2465),E(2466),E(2467),E(2468)/'OW S','EGME','NTS ','DIFF'/ 00084300
      DATA E(2469),E(2470),E(2471),E(2472)/'ERED',' BET','WEEN',' TWO'/ 00084400
      DATA E(2473),E(2474),E(2475),E(2476)/' SPL','INE ','CURV','ES. '/ 00084500
      DATA E(2477),E(2478),E(2479),E(2480)/'THER','E IS',' NOT',' ENO'/ 00084600
      DATA E(2481),E(2482),E(2483),E(2484)/'UGH ','ROOM',' IN ','THE '/ 00084700
      DATA E(2485),E(2486),E(2487),E(2488)/'DIRE','CTOR','Y TA','BLE '/ 00084800
      DATA E(2489),E(2490),E(2491),E(2492)/'FOR ','CROS','S  C','URVE'/ 00084900
      DATA E(2493),E(2494),E(2495),E(2496)/'S.  ','THER','E IS',' NOT'/ 00085000
      DATA E(2497),E(2498),E(2499),E(2500)/' ENO','UGH ','BUFF','ER S'/ 00085100
      DATA E(2501),E(2502),E(2503),E(2504)/'PACE',' TO ','HOLD',' A C'/ 00085200
      DATA E(2505),E(2506),E(2507),E(2508)/'ROSS',' CUR','VE. ','AN I'/ 00085300
      DATA E(2509),E(2510),E(2511),E(2512)/'NPUT',' CRO','SS C','URVE'/ 00085400
      DATA E(2513),E(2514),E(2515),E(2516)/' COU','LD N','OT B','E FE'/ 00085500
      DATA E(2517),E(2518),E(2519),E(2520)/'TCHE','D.  ','THE ','NUMB'/ 00085600
      DATA E(2521),E(2522),E(2523),E(2524)/'ER O','F FL','OW S','EGME'/ 00085700
      DATA E(2525),E(2526),E(2527),E(2528)/'NTS ','IN A',' CRO','SS C'/ 00085800
      DATA E(2529),E(2530),E(2531),E(2532)/'URVE',' DID',' NOT',' MAT'/ 00085900
      DATA E(2533),E(2534),E(2535),E(2536)/'CH T','HE  ','NUMB','ER O'/ 00086000
      DATA E(2537),E(2538),E(2539),E(2540)/'F SP','LINE','S LE','SS O'/ 00086100
      DATA E(2541),E(2542),E(2543),E(2544)/'NE. ','THER','E IS',' NO '/ 00086200
      DATA E(2545),E(2546),E(2547),E(2548)/'MATC','H AT',' A S','EGME'/ 00086300
      DATA E(2549),E(2550),E(2551),E(2552)/'NT J','UNCT','ION ','POIN'/ 00086400
      DATA E(2553),E(2554),E(2555),E(2556)/'T BE','TWEE','N A ','SPLI'/ 00086500
      DATA E(2557),E(2558),E(2559),E(2560)/'NE  ','AND ','CROS','S SP'/ 00086600
      DATA E(2561),E(2562),E(2563),E(2564)/'LINE',' CUR','VE. ','TWO '/ 00086700
      DATA E(2565),E(2566),E(2567),E(2568)/'CROS','S CU','RVES',' PAS'/ 00086800
      DATA E(2569),E(2570),E(2571),E(2572)/'S TH','ROUG','H TH','E SA'/ 00086900
      DATA E(2573),E(2574),E(2575),E(2576)/'ME S','PLIN','E JU','NCTI'/ 00087000
      DATA E(2577),E(2578),E(2579),E(2580)/'ON P','OINT','S.  ','THER'/ 00087100
      DATA E(2581),E(2582),E(2583),E(2584)/'E IS',' NOT',' ENO','UGH '/ 00087200
      DATA E(2585),E(2586),E(2587),E(2588)/'BUFF','ER S','PACE',' TO '/ 00087300
      DATA E(2589),E(2590),E(2591),E(2592)/'FIT ','A CR','OSS ','CURV'/ 00087400
      DATA E(2593),E(2594),E(2595),E(2596)/'E TH','ROUG','H  S','PLIN'/ 00087500
      DATA E(2597),E(2598),E(2599),E(2600)/'E JU','NCTI','ON P','OINT'/ 00087600
      DATA E(2601),E(2602),E(2603),E(2604)/'S.  ','AN E','RROR',' WAS'/ 00087700
      DATA E(2605),E(2606),E(2607),E(2608)/' ENC','OUNT','ERED',' IN '/ 00087800
      DATA E(2609),E(2610),E(2611),E(2612)/'TRYI','NG T','O CR','OSS '/ 00087900
      DATA E(2613),E(2614),E(2615),E(2616)/'FIT ','A CR','OSS ','CURV'/ 00088000
      DATA E(2617),E(2618),E(2619),E(2620)/'E.  ','THER','E IS',' NOT'/ 00088100
      DATA E(2621),E(2622),E(2623),E(2624)/' ENO','UGH ','BUFF','ER S'/ 00088200
      DATA E(2625),E(2626),E(2627),E(2628)/'PACE',' FOR',' A F','LOW '/ 00088300
      DATA E(2629),E(2630),E(2631),E(2632)/'STRU','CTUR','E ON',' A  '/ 00088400
      DATA E(2633),E(2634),E(2635),E(2636)/'CROS','S CU','RVE.','    '/ 00088500
      DATA E(2637),E(2638),E(2639),E(2640)/'THER','E IS',' NOT',' ENO'/ 00088600
      DATA E(2641),E(2642),E(2643),E(2644)/'UGH ','BUFF','ER S','PACE'/ 00088700
      DATA E(2645),E(2646),E(2647),E(2648)/' TO ','DETE','RMIN','E CR'/ 00088800
      DATA E(2649),E(2650),E(2651),E(2652)/'OSS ','VECT','ORS ','BY  '/ 00088900
      DATA E(2653),E(2654),E(2655),E(2656)/'SPLI','NING','.   ','CROS'/ 00089000
      DATA E(2657),E(2658),E(2659),E(2660)/'S FI','TTIN','G FA','ILED'/ 00089100
      DATA E(2661),E(2662),E(2663),E(2664)/' AT ','A SE','GMEN','T IN'/ 00089200
      DATA E(2665),E(2666),E(2667),E(2668)/'TERI','OR P','OINT','.   '/ 00089300
      DATA E(2669),E(2670),E(2671),E(2672)/'ERRO','R DU','RING',' REA'/ 00089400
      DATA E(2673),E(2674),E(2675),E(2676)/'D OF',' A L','ARGE',' DAT'/ 00089500
      DATA E(2677),E(2678),E(2679),E(2680)/'A AR','RAY ','>LDA','< FR'/ 00089600
      DATA E(2681),E(2682),E(2683),E(2684)/'OM F','ILE ','9.  ','NOT '/ 00089700
      DATA E(2685),E(2686),E(2687),E(2688)/'ENOU','GH R','OOM ','IN >'/ 00089800
      DATA E(2689),E(2690),E(2691),E(2692)/'LDA<','.   ','NOT ','ENOU'/ 00089900
      DATA E(2693),E(2694),E(2695),E(2696)/'GH R','OOM ','ON F','ILE '/ 00090000
      DATA E(2697),E(2698),E(2699),E(2700)/'9. (','EXTE','RNAL',' >LD'/ 00090100
      DATA E(2701),E(2702),E(2703),E(2704)/'A<).','    ','THE ','FIRS'/ 00090200
      DATA E(2705),E(2706),E(2707),E(2708)/'T WO','RD I','N TH','E SC'/ 00090300
      DATA E(2709),E(2710),E(2711),E(2712)/'URV ','DEFI','NITI','ON D'/ 00090400
      DATA E(2713),E(2714),E(2715),E(2716)/'ID N','OT C','ORRE','SPON'/ 00090500
      DATA E(2717),E(2718),E(2719),E(2720)/'D TO','  ON','E OF',' THE'/ 00090600
      DATA E(2721),E(2722),E(2723),E(2724)/'SE P','ROGR','AMME','D.  '/ 00090700
      DATA E(2725),E(2726),E(2727),E(2728)/'AN A','RGUM','ENT ','IN A'/ 00090800
      DATA E(2729),E(2730),E(2731),E(2732)/' PRI','MARY',' CUR','VE D'/ 00090900
      DATA E(2733),E(2734),E(2735),E(2736)/'EFIN','ITIO','N WA','S NO'/ 00091000
      DATA E(2737),E(2738),E(2739),E(2740)/'T A ',' REC','OGNI','ZED '/ 00091100
      DATA E(2741),E(2742),E(2743),E(2744)/'ONE.','    ','THE ','MAXI'/ 00091200
      DATA E(2745),E(2746),E(2747),E(2748)/'MUM ','NUMB','ER O','F PO'/ 00091300
      DATA E(2749),E(2750),E(2751),E(2752)/'INTS',' IN ','A PR','IMAR'/ 00091400
      DATA E(2753),E(2754),E(2755),E(2756)/'Y CU','RVE ','DEFI','NITI'/ 00091500
      DATA E(2757),E(2758),E(2759),E(2760)/'ON  ','HAS ','BEEN',' EXC'/ 00091600
      DATA E(2761),E(2762),E(2763),E(2764)/'EEDE','D.  ','A VE','CTOR'/ 00091700
      DATA E(2765),E(2766),E(2767),E(2768)/' CON','STRA','INT ','HAS '/ 00091800
      DATA E(2769),E(2770),E(2771),E(2772)/'BEEN',' INP','UT P','RIOR'/ 00091900
      DATA E(2773),E(2774),E(2775),E(2776)/' TO ','THE ','FIRS','T PO'/ 00092000
      DATA E(2777),E(2778),E(2779),E(2780)/'INT.','    ','A VE','CTOR'/ 00092100
      DATA E(2781),E(2782),E(2783),E(2784)/' ARG','UMEN','T DI','D NO'/ 00092200
      DATA E(2785),E(2786),E(2787),E(2788)/'T FO','LLOW',' A M','INOR'/ 00092300
      DATA E(2789),E(2790),E(2791),E(2792)/' WOR','D WH','ICH ','REQU'/ 00092400
      DATA E(2793),E(2794),E(2795),E(2796)/'IRED','  A ','VECT','OR C'/ 00092500
      DATA E(2797),E(2798),E(2799),E(2800)/'ONST','RAIN','T.  ','A ''R'/00092600
      DATA E(2801),E(2802),E(2803),E(2804)/'EAL''',' ARG','UMEN','T DI'/00092700
      DATA E(2805),E(2806),E(2807),E(2808)/'D NO','T FO','LLOW',' A '''/00092800
      DATA E(2809),E(2810),E(2811),E(2812)/'WEIG','HT'' ','SPEC','IFIC'/00092900
      DATA E(2813),E(2814),E(2815),E(2816)/'ATIO','N.  ','A ''R','EAL'''00093000
     +/                                                                 00093100
      DATA E(2817),E(2818),E(2819),E(2820)/' ARG','UMEN','T DI','D NO'/ 00093200
      DATA E(2821),E(2822),E(2823),E(2824)/'T FO','LLOW',' A ''','LIMI'/00093300
      DATA E(2825),E(2826),E(2827),E(2828)/'T'' S','PECI','FICA','TION'/00093400
      DATA E(2829),E(2830),E(2831),E(2832)/' OR ','AN  ','INPU','T CU'/ 00093500
      DATA E(2833),E(2834),E(2835),E(2836)/'RVE ','TO T','HE ''','COMB'/00093600
      DATA E(2837),E(2838),E(2839),E(2840)/'IN'' ','STAT','EMEN','T HA'/00093700
      DATA E(2841),E(2842),E(2843),E(2844)/'S NO','T BE','EN  ','SUCC'/ 00093800
      DATA E(2845),E(2846),E(2847),E(2848)/'ESSF','ULLY',' DEF','INED'/ 00093900
      DATA E(2849),E(2850),E(2851),E(2852)/'.   ','THE ','JUNC','TION'/ 00094000
      DATA E(2853),E(2854),E(2855),E(2856)/' POI','NTS ','OF T','WO C'/ 00094100
      DATA E(2857),E(2858),E(2859),E(2860)/'ONSE','CUTI','VE C','URVE'/ 00094200
      DATA E(2861),E(2862),E(2863),E(2864)/'S IN',' ''CO','MBIN','''  D'00094300
     +/                                                                 00094400
      DATA E(2865),E(2866),E(2867),E(2868)/'EFIN','ITIO','N DI','D NO'/ 00094500
      DATA E(2869),E(2870),E(2871),E(2872)/'T MA','TCH.','    ','THE '/ 00094600
      DATA E(2873),E(2874),E(2875),E(2876)/'TANG','ENT ','VECT','ORS '/ 00094700
      DATA E(2877),E(2878),E(2879),E(2880)/'AT T','HE J','UNCT','ION '/ 00094800
      DATA E(2881),E(2882),E(2883),E(2884)/'OF C','ONSE','CUTI','VE C'/ 00094900
      DATA E(2885),E(2886),E(2887),E(2888)/'URVE','S IN',' A  ','''COM'/00095000
      DATA E(2889),E(2890),E(2891),E(2892)/'BIN''',' DEF','INIT','ION '/00095100
      DATA E(2893),E(2894),E(2895),E(2896)/'HAD ','DIFF','EREN','T DI'/ 00095200
      DATA E(2897),E(2898),E(2899),E(2900)/'RECT','IONS','.   ','CURV'/ 00095300
      DATA E(2901),E(2902),E(2903),E(2904)/'ES W','ITH ','FLOW',' STR'/ 00095400
      DATA E(2905),E(2906),E(2907),E(2908)/'UCTU','RE C','ANNO','T BE'/ 00095500
      DATA E(2909),E(2910),E(2911),E(2912)/' COM','BINE','D YE','T. E'/ 00095600
      DATA E(2913),E(2914),E(2915),E(2916)/'RROR','S  I','MPOS','ING '/ 00095700
      DATA E(2917),E(2918),E(2919),E(2920)/'FLOW',' RAT','ES A','CROS'/ 00095800
      DATA E(2921),E(2922),E(2923),E(2924)/'S SY','NTHE','TIC ','CURV'/ 00095900
      DATA E(2925),E(2926),E(2927),E(2928)/'ES. ','SEGM','ENT ','NUMB'/ 00096000
      DATA E(2929),E(2930),E(2931),E(2932)/'ER O','F TH','E ''S','CURV'/00096100
      DATA E(2933),E(2934),E(2935),E(2936)/''' IS',' NOT',' COR','RECT'/00096200
      DATA E(2937),E(2938),E(2939),E(2940)/'.   ','PATC','H NU','MBER'/ 00096300
      DATA E(2941),E(2942),E(2943),E(2944)/' OF ','THE ','''SSU','RF'' '00096400
     +/                                                                 00096500
      DATA E(2945),E(2946),E(2947),E(2948)/'IS N','OT C','ORRE','CT. '/ 00096600
      DATA E(2949),E(2950),E(2951),E(2952)/'PARA','METE','R SP','ECIF'/ 00096700
      DATA E(2953),E(2954),E(2955),E(2956)/'ICAT','ION ','IS N','OT C'/ 00096800
      DATA E(2957),E(2958),E(2959),E(2960)/'ORRE','CT. ','THE ','LENG'/ 00096900
      DATA E(2961),E(2962),E(2963),E(2964)/'HT O','F A ','VECT','OR I'/ 00097000
      DATA E(2965),E(2966),E(2967),E(2968)/'S TO','O SM','ALL ','TO N'/ 00097100
      DATA E(2969),E(2970),E(2971),E(2972)/'ORMA','LIZE','.   ','THE '/ 00097200
      DATA E(2973),E(2974),E(2975),E(2976)/'INTE','RSEC','TION',' POI'/ 00097300
      DATA E(2977),E(2978),E(2979),E(2980)/'NT C','ANNO','T BE',' DEF'/ 00097400
      DATA E(2981),E(2982),E(2983),E(2984)/'INED','.   ','INPU','T CA'/ 00097500
      DATA E(2985),E(2986),E(2987),E(2988)/'NON ','FORM',' NOT',' PRE'/ 00097600
      DATA E(2989),E(2990),E(2991),E(2992)/'VIOU','SLY ','DEFI','NED.'/ 00097700
      DATA E(2993),E(2994),E(2995),E(2996)/'    ','DEFI','NITI','ON E'/ 00097800
      DATA E(2997),E(2998),E(2999),E(3000)/'RROR','.   ','SPEC','IFIE'/ 00097900
      DATA E(3001),E(3002),E(3003),E(3004)/'D VE','CTOR',' OR ','POIN'/ 00098000
      DATA E(3005),E(3006),E(3007),E(3008)/'T DO','SE N','OT E','XIST'/ 00098100
      DATA E(3009),E(3010),E(3011),E(3012)/'SURF','ACE ','NORM','AL N'/ 00098200
      DATA E(3013),E(3014),E(3015),E(3016)/'OT P','ROPE','RLY ','DEFI'/ 00098300
      DATA E(3017),E(3018),E(3019),E(3020)/'NED ','.   ','MAXI','MUM '/ 00098400
      DATA E(3021),E(3022),E(3023),E(3024)/'BUFF','ER S','PACE',' FOR'/ 00098500
      DATA E(3025),E(3026),E(3027),E(3028)/' A ''','MESH',''' DE','FINI'00098600
     +/                                                                 00098700
      DATA E(3029),E(3030),E(3031),E(3032)/'TION',' EXC','EEDE','D.  '/ 00098800
      DATA E(3033),E(3034),E(3035),E(3036)/'TOO ','MANY',' POI','NTS '/ 00098900
      DATA E(3037),E(3038),E(3039),E(3040)/'IN O','NE S','PLIN','E OR'/ 00099000
      DATA E(3041),E(3042),E(3043),E(3044)/' CRO','SS S','PLIN','E FO'/ 00099100
      DATA E(3045),E(3046),E(3047),E(3048)/'R CU','RREN','T CU','RVE '/ 00099200
      DATA E(3049),E(3050),E(3051),E(3052)/' FIT','TING',' ALG','ORIT'/ 00099300
      DATA E(3053),E(3054),E(3055),E(3056)/'HM. ','A PO','INT ','WAS '/ 00099400
      DATA E(3057),E(3058),E(3059),E(3060)/'MISS','ING.','    ','TOO '/ 00099500
      DATA E(3061),E(3062),E(3063),E(3064)/'MANY',' POI','NTS ','FOR '/ 00099600
      DATA E(3065),E(3066),E(3067),E(3068)/'SPAC','E AV','AILA','BLE '/ 00099700
      DATA E(3069),E(3070),E(3071),E(3072)/'IN S','SPAD','.   ','THE '/ 00099800
      DATA E(3073),E(3074),E(3075),E(3076)/'NEXT',' ENT','RY S','HOUL'/ 00099900
      DATA E(3077),E(3078),E(3079),E(3080)/'D BE',' ''NO','RMAL',''', B'00100000
     +/                                                                 00100100
      DATA E(3081),E(3082),E(3083),E(3084)/'UT I','T WA','S NO','T RE'/ 00100200
      DATA E(3085),E(3086),E(3087),E(3088)/'COGN','IZAB','LE. ','THE '/ 00100300
      DATA E(3089),E(3090),E(3091),E(3092)/'NEXT',' ENT','RY S','HOUL'/ 00100400
      DATA E(3093),E(3094),E(3095),E(3096)/'D BE',' A V','ECTO','R.  '/ 00100500
      DATA E(3097),E(3098),E(3099),E(3100)/'THE ','NEXT',' ENT','RY S'/ 00100600
      DATA E(3101),E(3102),E(3103),E(3104)/'HOUL','D BE',' ''TA','NSPL'/00100700
      DATA E(3105),E(3106),E(3107),E(3108)/''', B','UT I','T WA','S NO'/00100800
      DATA E(3109),E(3110),E(3111),E(3112)/'T RE','COGN','IZAB','LE. '/ 00100900
      DATA E(3113),E(3114),E(3115),E(3116)/'THE ','NEXT',' ENT','RY S'/ 00101000
      DATA E(3117),E(3118),E(3119),E(3120)/'HOUL','D BE',' ''CR','SSPL'/00101100
      DATA E(3121),E(3122),E(3123),E(3124)/''', B','UT I','T WA','S NO'/00101200
      DATA E(3125),E(3126),E(3127),E(3128)/'T RE','COGN','IZAB','LE. '/ 00101300
      DATA E(3129),E(3130),E(3131),E(3132)/'THE ','NEXT',' ENT','RY S'/ 00101400
      DATA E(3133),E(3134),E(3135),E(3136)/'HOUL','D BE',' ''WE','IGHT'/00101500
      DATA E(3137),E(3138),E(3139),E(3140)/''', B','UT I','T WA','S NO'/00101600
      DATA E(3141),E(3142),E(3143),E(3144)/'T RE','COGN','IZAB','LE. '/ 00101700
      DATA E(3145),E(3146),E(3147),E(3148)/'THE ','NEXT',' ENT','RY S'/ 00101800
      DATA E(3149),E(3150),E(3151),E(3152)/'HOUL','D BE',' A S','CALA'/ 00101900
      DATA E(3153),E(3154),E(3155),E(3156)/'R.  ','THE ','NEXT',' ENT'/ 00102000
      DATA E(3157),E(3158),E(3159),E(3160)/'RY S','HOUL','D BE',' ''LI'/00102100
      DATA E(3161),E(3162),E(3163),E(3164)/'MIT''',', BU','T IT',' WAS'/00102200
      DATA E(3165),E(3166),E(3167),E(3168)/' NOT',' REC','OGNI','ZABL'/ 00102300
      DATA E(3169),E(3170),E(3171),E(3172)/'E.  ','UNRE','COGN','IZED'/ 00102400
      DATA E(3173),E(3174),E(3175),E(3176)/' DAT','A WA','S EN','COUN'/ 00102500
      DATA E(3177),E(3178),E(3179),E(3180)/'TERE','D IN',' THE',' MES'/ 00102600
      DATA E(3181),E(3182),E(3183),E(3184)/'H IN','PUT ','STRE','AM  '/ 00102700
      DATA E(3185),E(3186),E(3187),E(3188)/'OR E','LSE ','THE ','NUMB'/ 00102800
      DATA E(3189),E(3190),E(3191),E(3192)/'ER O','F IN','PUT ','POIN'/ 00102900
      DATA E(3193),E(3194),E(3195),E(3196)/'TS W','AS I','NCOR','RECT'/ 00103000
      DATA E(3197),E(3198),E(3199),E(3200)/'.   ','SMES','H IN','PUT '/ 00103100
      DATA E(3201),E(3202),E(3203),E(3204)/'POIN','TS A','RE N','OT L'/ 00103200
      DATA E(3205),E(3206),E(3207),E(3208)/'INEA','R.  ','TYPE',' DEF'/ 00103300
      DATA E(3209),E(3210),E(3211),E(3212)/'INIT','ION ','IS M','ISSI'/ 00103400
      DATA E(3213),E(3214),E(3215),E(3216)/'NG I','N ''M','ESH''',' INP'00103500
     +/                                                                 00103600
      DATA E(3217),E(3218),E(3219),E(3220)/'UT. ','NUMB','ER O','F SP'/ 00103700
      DATA E(3221),E(3222),E(3223),E(3224)/'LINE','S MU','ST B','E AT'/ 00103800
      DATA E(3225),E(3226),E(3227),E(3228)/' LEA','ST T','WO. ','THE '/ 00103900
      DATA E(3229),E(3230),E(3231),E(3232)/'SURF','ACE ','SIZE',' EXC'/ 00104000
      DATA E(3233),E(3234),E(3235),E(3236)/'EEDE','D A ','PROG','RAMM'/ 00104100
      DATA E(3237),E(3238),E(3239),E(3240)/'ED M','AXIM','UM I','N ''R'/00104200
      DATA E(3241),E(3242),E(3243),E(3244)/'EVOL','V''  ','THE ','AXIS'/00104300
      DATA E(3245),E(3246),E(3247),E(3248)/' VEC','TOR ','OF T','HE C'/ 00104400
      DATA E(3249),E(3250),E(3251),E(3252)/'YLIN','DER ','WAS ','NOT '/ 00104500
      DATA E(3253),E(3254),E(3255),E(3256)/'SPEC','IFIE','D CO','RREC'/ 00104600
      DATA E(3257),E(3258),E(3259),E(3260)/'TLY.','    ','ALL ','POIN'/ 00104700
      DATA E(3261),E(3262),E(3263),E(3264)/'TS O','F TH','E CU','RVE '/ 00104800
      DATA E(3265),E(3266),E(3267),E(3268)/'LIE ','ON T','HE A','XIS '/ 00104900
      DATA E(3269),E(3270),E(3271),E(3272)/'OF R','EVOL','UTIO','N.  '/ 00105000
      DATA E(3273),E(3274),E(3275),E(3276)/'CROS','S SE','CTIO','N CU'/ 00105100
      DATA E(3277),E(3278),E(3279),E(3280)/'RVE ','DEFI','NITI','ON F'/ 00105200
      DATA E(3281),E(3282),E(3283),E(3284)/'AILS','.   ','NOT ','ENOU'/ 00105300
      DATA E(3285),E(3286),E(3287),E(3288)/'GH S','PACE',' TO ','FETC'/ 00105400
      DATA E(3289),E(3290),E(3291),E(3292)/'H CU','RVE.','    ','CURV'/ 00105500
      DATA E(3293),E(3294),E(3295),E(3296)/'E CO','ULD ','NOT ','BE F'/ 00105600
      DATA E(3297),E(3298),E(3299),E(3300)/'ETCH','ED. ','NOT ','ENOU'/ 00105700
      DATA E(3301),E(3302),E(3303),E(3304)/'GH S','PACE',' TO ','FETC'/ 00105800
      DATA E(3305),E(3306),E(3307),E(3308)/'H CR','OSS ','CURV','E.  '/ 00105900
      DATA E(3309),E(3310),E(3311),E(3312)/'CURV','E NO','T DE','FINE'/ 00106000
      DATA E(3313),E(3314),E(3315),E(3316)/'D.  ','CROS','S CU','RVE '/ 00106100
      DATA E(3317),E(3318),E(3319),E(3320)/'COUL','D NO','T BE',' FET'/ 00106200
      DATA E(3321),E(3322),E(3323),E(3324)/'CHED','.   ','CHEC','K FO'/ 00106300
      DATA E(3325),E(3326),E(3327),E(3328)/'R EN','OUGH',' ROO','M FO'/ 00106400
      DATA E(3329),E(3330),E(3331),E(3332)/'R SU','RFAC','E IN',' ''SU'/00106500
      DATA E(3333),E(3334),E(3335),E(3336)/'RF''.','    ','SYST','EM E'/00106600
      DATA E(3337),E(3338),E(3339),E(3340)/'RROR','. AR','RAY ','>IB<'/ 00106700
      DATA E(3341),E(3342),E(3343),E(3344)/' DIM','ENSI','ON M','UST '/ 00106800
      DATA E(3345),E(3346),E(3347),E(3348)/'BE I','NCRE','ASED','.   '/ 00106900
      DATA E(3349),E(3350),E(3351),E(3352)/'INVA','LID ','INDE','X, S'/ 00107000
      DATA E(3353),E(3354),E(3355),E(3356)/'YSTE','M ER','ROR.','    '/ 00107100
      DATA E(3357),E(3358),E(3359),E(3360)/'SPLI','NE C','URVE',' COU'/ 00107200
      DATA E(3361),E(3362),E(3363),E(3364)/'LD N','OT B','E GE','NERA'/ 00107300
      DATA E(3365),E(3366),E(3367),E(3368)/'TED.','    ','CROS','S SP'/ 00107400
      DATA E(3369),E(3370),E(3371),E(3372)/'LINE',' CUR','VE C','OULD'/ 00107500
      DATA E(3373),E(3374),E(3375),E(3376)/' NOT',' BE ','GENE','RATE'/ 00107600
      DATA E(3377),E(3378),E(3379),E(3380)/'D.  ','PROB','LEMS',' WIT'/ 00107700
      DATA E(3381),E(3382),E(3383),E(3384)/'H IN','NER ','POIN','TS. '/ 00107800
      DATA E(3385),E(3386),E(3387),E(3388)/'TWIS','T VE','CTOR','S CA'/ 00107900
      DATA E(3389),E(3390),E(3391),E(3392)/'NNOT',' BE ','COMP','UTED'/ 00108000
      DATA E(3393),E(3394),E(3395),E(3396)/'.   ','COUL','D NO','T FI'/ 00108100
      DATA E(3397),E(3398),E(3399),E(3400)/'ND T','HE M','INIM','UM D'/ 00108200
      DATA E(3401),E(3402),E(3403),E(3404)/'ISTA','NCE ','BETW','EEN '/ 00108300
      DATA E(3405),E(3406),E(3407),E(3408)/'CUTT','ER A','ND A',' SCU'/ 00108400
      DATA E(3409),E(3410),E(3411),E(3412)/'LPTU','RED ','SURF','ACE.'/ 00108500
      DATA E(3413),E(3414),E(3415),E(3416)/'    ','SS R','OUTI','NE C'/ 00108600
      DATA E(3417),E(3418),E(3419),E(3420)/'ALLE','D EX','CESS','IVE '/ 00108700
      DATA E(3421),E(3422),E(3423),E(3424)/'NUMB','ER O','F TI','MES '/ 00108800
      DATA E(3425),E(3426),E(3427),E(3428)/'WITH','OUT ','A SU','CCES'/ 00108900
      DATA E(3429),E(3430),E(3431),E(3432)/'SFUL',' TOO','L PO','SITI'/ 00109000
      DATA E(3433),E(3434),E(3435),E(3436)/'ON B','EING',' FOU','ND. '/ 00109100
      DATA E(3437),E(3438),E(3439),E(3440)/'COUL','D NO','T FI','T PE'/ 00109200
      DATA E(3441),E(3442),E(3443),E(3444)/'RCEN','T OF',' ARC',' FLO'/ 00109300
      DATA E(3445),E(3446),E(3447),E(3448)/'W AC','ROSS',' A C','URVE'/ 00109400
      DATA E(3449),E(3450),E(3451),E(3452)/' AT ','SOME',' POI','NTS.'/ 00109500
      DATA E(3453),E(3454),E(3455),E(3456)/' CHE','CK C','URVE',' FOR'/ 00109600
      DATA E(3457),E(3458),E(3459),E(3460)/' UNU','SUAL',' SHA','PE O'/ 00109700
      DATA E(3461),E(3462),E(3463),E(3464)/'R FL','OW R','ATE ','AT S'/ 00109800
      DATA E(3465),E(3466),E(3467),E(3468)/'OME ','POIN','T.  ','LENG'/ 00109900
      DATA E(3469),E(3470),E(3471),E(3472)/'TH O','F NO','RMAL',' VEC'/ 00110000
      DATA E(3473),E(3474),E(3475),E(3476)/'TOR ','WHIC','H CO','NTRO'/ 00110100
      DATA E(3477),E(3478),E(3479),E(3480)/'LS D','IREC','TION',' OF '/ 00110200
      DATA E(3481),E(3482),E(3483),E(3484)/'CHOR','DAL ',' PRO','JECT'/ 00110300
      DATA E(3485),E(3486),E(3487),E(3488)/'ION ','IS T','OO S','MALL'/ 00110400
      DATA E(3489),E(3490),E(3491),E(3492)/'. VE','CTOR',' IS ','ZERO'/ 00110500
      DATA E(3493),E(3494),E(3495),E(3496)/'.   ','ANGL','E BE','TWEE'/ 00110600
      DATA E(3497),E(3498),E(3499),E(3500)/'N CH','ORD ','AND ','THE '/ 00110700
      DATA E(3501),E(3502),E(3503),E(3504)/'DIRE','CTIO','N OF',' CHO'/ 00110800
      DATA E(3505),E(3506),E(3507),E(3508)/'RDAL',' PRO','JECT','ION '/ 00110900
      DATA E(3509),E(3510),E(3511),E(3512)/'IS  ','TOO ','CLOS','E TO'/ 00111000
      DATA E(3513),E(3514),E(3515),E(3516)/' ZER','O. C','HORD','AL D'/ 00111100
      DATA E(3517),E(3518),E(3519),E(3520)/'IREC','TION',' >D<',' AND'/ 00111200
      DATA E(3521),E(3522),E(3523),E(3524)/' VEC','TOR ','>V< ','ARE '/ 00111300
      DATA E(3525),E(3526),E(3527),E(3528)/' PER','PEND','ICUL','AR. '/ 00111400
      DATA E(3529),E(3530),E(3531),E(3532)/'ANGL','E BE','TWEE','N SO'/ 00111500
      DATA E(3533),E(3534),E(3535),E(3536)/'ME T','ANGE','NT V','ECTO'/ 00111600
      DATA E(3537),E(3538),E(3539),E(3540)/'RS O','N TH','E CU','RVE '/ 00111700
      DATA E(3541),E(3542),E(3543),E(3544)/'AND ','THE ',' PRO','JECT'/ 00111800
      DATA E(3545),E(3546),E(3547),E(3548)/'ION ','CHOR','D IS',' TOO'/ 00111900
      DATA E(3549),E(3550),E(3551),E(3552)/' CLO','SE T','O 90',' DEG'/ 00112000
      DATA E(3553),E(3554),E(3555),E(3556)/'REES','. A ','PART','ICUL'/ 00112100
      DATA E(3557),E(3558),E(3559),E(3560)/'AR  ','TANG','ENT ','VECT'/ 00112200
      DATA E(3561),E(3562),E(3563),E(3564)/'OR O','N TH','E CU','RVE '/ 00112300
      DATA E(3565),E(3566),E(3567),E(3568)/'AND ','VECT','OR >','V< A'/ 00112400
      DATA E(3569),E(3570),E(3571),E(3572)/'RE P','ERPE','NDIC','ULAR'/ 00112500
      DATA E(3573),E(3574),E(3575),E(3576)/'.   ','AT S','OME ','POIN'/ 00112600
      DATA E(3577),E(3578),E(3579),E(3580)/'T TH','E CU','RVE ','HAS '/ 00112700
      DATA E(3581),E(3582),E(3583),E(3584)/'REVE','RSED',' ITS',' DIR'/ 00112800
      DATA E(3585),E(3586),E(3587),E(3588)/'ECTI','ON O','N TH','E CH'/ 00112900
      DATA E(3589),E(3590),E(3591),E(3592)/'ORD ',' OF ','PROJ','ECTI'/ 00113000
      DATA E(3593),E(3594),E(3595),E(3596)/'ON. ','A PA','RTIC','ULAR'/ 00113100
      DATA E(3597),E(3598),E(3599),E(3600)/' TAN','GENT',' VEC','TOR '/ 00113200
      DATA E(3601),E(3602),E(3603),E(3604)/'ON T','HE C','URVE',' AND'/ 00113300
      DATA E(3605),E(3606),E(3607),E(3608)/'  VE','CTOR',' >V<',' ARE'/ 00113400
      DATA E(3609),E(3610),E(3611),E(3612)/' MOV','ING ','IN O','PPOS'/ 00113500
      DATA E(3613),E(3614),E(3615),E(3616)/'ITE ','DIRE','CTIO','NS. '/ 00113600
      DATA E(3617),E(3618),E(3619),E(3620)/'COUL','D NO','T FI','T PR'/ 00113700
      DATA E(3621),E(3622),E(3623),E(3624)/'OJEC','TION',' FLO','W ON'/ 00113800
      DATA E(3625),E(3626),E(3627),E(3628)/' THE',' CHO','RD U','SING'/ 00113900
      DATA E(3629),E(3630),E(3631),E(3632)/' AVA','ILAB','LE  ','SPAC'/ 00114000
      DATA E(3633),E(3634),E(3635),E(3636)/'E. C','HECK',' CHO','RD T'/ 00114100
      DATA E(3637),E(3638),E(3639),E(3640)/'O CU','RVE ','RELA','TION'/ 00114200
      DATA E(3641),E(3642),E(3643),E(3644)/'SHIP',' OR ','ELSE',' INC'/ 00114300
      DATA E(3645),E(3646),E(3647),E(3648)/'REAS','E  B','UFFE','R SP'/ 00114400
      DATA E(3649),E(3650),E(3651),E(3652)/'ACE.',' THE',' AVA','ILAB'/ 00114500
      DATA E(3653),E(3654),E(3655),E(3656)/'LE S','PACE',' FOR',' FLO'/ 00114600
      DATA E(3657),E(3658),E(3659),E(3660)/'W SP','LINE',' >FL','< HA'/ 00114700
      DATA E(3661),E(3662),E(3663),E(3664)/'S  B','EEN ','FILL','ED. '/ 00114800
      DATA E(3665),E(3666),E(3667),E(3668)/'THE ','CHOR','DAL ','PROJ'/ 00114900
      DATA E(3669),E(3670),E(3671),E(3672)/'ECTI','ON F','LOW ','RATE'/ 00115000
      DATA E(3673),E(3674),E(3675),E(3676)/' COU','LD N','OT B','E FI'/ 00115100
      DATA E(3677),E(3678),E(3679),E(3680)/'T AT',' SOM','E PO','INT '/ 00115200
      DATA E(3681),E(3682),E(3683),E(3684)/'OF T','HE C','URVE','. CH'/ 00115300
      DATA E(3685),E(3686),E(3687),E(3688)/'ECK ','CURV','E TO',' CHO'/ 00115400
      DATA E(3689),E(3690),E(3691),E(3692)/'RD R','ELAT','IONS','HIP.'/ 00115500
      DATA E(3693),E(3694),E(3695),E(3696)/' NOT','E: C','URVE',' SHO'/ 00115600
      DATA E(3697),E(3698),E(3699),E(3700)/'ULD ','NEVE','R BE',' PER'/ 00115700
      DATA E(3701),E(3702),E(3703),E(3704)/'PEND','ICUL','AR T','O CH'/ 00115800
      DATA E(3705),E(3706),E(3707),E(3708)/'ORD.',' AN ','ARC ','HAS '/ 00115900
      DATA E(3709),E(3710),E(3711),E(3712)/'BEEN','  SU','BDIV','IDED'/ 00116000
      DATA E(3713),E(3714),E(3715),E(3716)/' 10 ','TIME','S AT',' THE'/ 00116100
      DATA E(3717),E(3718),E(3719),E(3720)/' CUR','RENT',' POS','ITIO'/ 00116200
      DATA E(3721),E(3722),E(3723),E(3724)/'N WI','THOU','T BE','ING '/ 00116300
      DATA E(3725),E(3726),E(3727),E(3728)/'ABLE','  TO',' SUC','CESS'/ 00116400
      DATA E(3729),E(3730),E(3731),E(3732)/'FULL','Y FI','T TH','E FL'/ 00116500
      DATA E(3733),E(3734),E(3735),E(3736)/'OW O','F ''C','OONS',''' PA'00116600
     +/                                                                 00116700
      DATA E(3737),E(3738),E(3739),E(3740)/'RAME','TER ','IN T','HE  '/ 00116800
      DATA E(3741),E(3742),E(3743),E(3744)/'CHOR','DAL ','PARA','METE'/ 00116900
      DATA E(3745),E(3746),E(3747),E(3748)/'R.  ','COUL','D NO','T FI'/ 00117000
      DATA E(3749),E(3750),E(3751),E(3752)/'T AN','GULA','R FL','OW W'/ 00117100
      DATA E(3753),E(3754),E(3755),E(3756)/'ITHI','N AV','AILA','BLE '/ 00117200
      DATA E(3757),E(3758),E(3759),E(3760)/'SPAC','E. C','HECK',' CUR'/ 00117300
      DATA E(3761),E(3762),E(3763),E(3764)/'VE  ','TO F','OCAL',' POI'/ 00117400
      DATA E(3765),E(3766),E(3767),E(3768)/'NT R','ELAT','IONS','HIP '/ 00117500
      DATA E(3769),E(3770),E(3771),E(3772)/'OR I','NCRE','ASE ','BUFF'/ 00117600
      DATA E(3773),E(3774),E(3775),E(3776)/'ER S','PACE','. TH','E  A'/ 00117700
      DATA E(3777),E(3778),E(3779),E(3780)/'VAIL','ABLE',' SPA','CE I'/ 00117800
      DATA E(3781),E(3782),E(3783),E(3784)/'N >F','L< U','SED ','UP. '/ 00117900
      DATA E(3785),E(3786),E(3787),E(3788)/'FAIL','ED T','O SU','CCES'/ 00118000
      DATA E(3789),E(3790),E(3791),E(3792)/'SFUL','LY F','IT R','ATE '/ 00118100
      DATA E(3793),E(3794),E(3795),E(3796)/'OF C','HANG','E OF',' ANG'/ 00118200
      DATA E(3797),E(3798),E(3799),E(3800)/'LE A','ROUN','D SO','ME  '/ 00118300
      DATA E(3801),E(3802),E(3803),E(3804)/'CURV','E PO','INT ','WITH'/ 00118400
      DATA E(3805),E(3806),E(3807),E(3808)/' RES','PECT',' TO ','FOCA'/ 00118500
      DATA E(3809),E(3810),E(3811),E(3812)/'L PO','INT.',' CHE','CK C'/ 00118600
      DATA E(3813),E(3814),E(3815),E(3816)/'URVE',' TO ','FOCA','L  P'/ 00118700
      DATA E(3817),E(3818),E(3819),E(3820)/'OINT',' REL','ATIO','NSHI'/ 00118800
      DATA E(3821),E(3822),E(3823),E(3824)/'P. A','NGLE',' FLO','W CO'/ 00118900
      DATA E(3825),E(3826),E(3827),E(3828)/'ULD ','NOT ','FIT ','IN V'/ 00119000
      DATA E(3829),E(3830),E(3831),E(3832)/'ICIN','ITY ','OF A','  CU'/ 00119100
      DATA E(3833),E(3834),E(3835),E(3836)/'RVE ','POIN','T AF','TER '/ 00119200
      DATA E(3837),E(3838),E(3839),E(3840)/'10 I','TERA','TION','S.  '/ 00119300
      DATA E(3841),E(3842),E(3843),E(3844)/'FOCA','L PO','INT ','OF A'/ 00119400
      DATA E(3845),E(3846),E(3847),E(3848)/'NGUL','AR S','PAN ','AND '/ 00119500
      DATA E(3849),E(3850),E(3851),E(3852)/'A CU','RVE ','POIN','T AR'/ 00119600
      DATA E(3853),E(3854),E(3855),E(3856)/'E TO','O CL','OSE ',' TOG'/ 00119700
      DATA E(3857),E(3858),E(3859),E(3860)/'ETHE','R FO','R DE','FINI'/ 00119800
      DATA E(3861),E(3862),E(3863),E(3864)/'TE M','EASU','REME','NT O'/ 00119900
      DATA E(3865),E(3866),E(3867),E(3868)/'F AN','GLE.',' RAT','E OF'/ 00120000
      DATA E(3869),E(3870),E(3871),E(3872)/' CHA','NGE ',' BEC','OMES'/ 00120100
      DATA E(3873),E(3874),E(3875),E(3876)/' ILL',' DEF','INED','.   '/ 00120200
      DATA E(3877),E(3878),E(3879),E(3880)/'THE ','CURV','E IS',' TOO'/ 00120300
      DATA E(3881),E(3882),E(3883),E(3884)/' CLO','SE T','O TH','E PO'/ 00120400
      DATA E(3885),E(3886),E(3887),E(3888)/'INT ','TO M','EASU','RE T'/ 00120500
      DATA E(3889),E(3890),E(3891),E(3892)/'HE A','NGLE','.   ','THE '/ 00120600
      DATA E(3893),E(3894),E(3895),E(3896)/'CURV','E IS',' MOV','ING '/ 00120700
      DATA E(3897),E(3898),E(3899),E(3900)/'IN A',' NEA','R RA','DIAL'/ 00120800
      DATA E(3901),E(3902),E(3903),E(3904)/' DIR','ECTI','ON T','O TH'/ 00120900
      DATA E(3905),E(3906),E(3907),E(3908)/'E FO','CAL ',' POI','NT. '/ 00121000
      DATA E(3909),E(3910),E(3911),E(3912)/'PROP','ER M','EASU','REME'/ 00121100
      DATA E(3913),E(3914),E(3915),E(3916)/'NT O','F AN','GULA','R RA'/ 00121200
      DATA E(3917),E(3918),E(3919),E(3920)/'TE O','F CH','ANGE',' NOT'/ 00121300
      DATA E(3921),E(3922),E(3923),E(3924)/'  PO','SSIB','LE. ','THE '/ 00121400
      DATA E(3925),E(3926),E(3927),E(3928)/'CURV','E TA','NGEN','T NE'/ 00121500
      DATA E(3929),E(3930),E(3931),E(3932)/'ARLY',' PAS','SES ','THRO'/ 00121600
      DATA E(3933),E(3934),E(3935),E(3936)/'UGH ','THE ','POIN','T  M'/ 00121700
      DATA E(3937),E(3938),E(3939),E(3940)/'AKIN','G TH','E DE','RIVA'/ 00121800
      DATA E(3941),E(3942),E(3943),E(3944)/'TIVE','S TO','O LA','RGE.'/ 00121900
      DATA E(3945),E(3946),E(3947),E(3948)/'    ','THE ','LAST',' JUN'/ 00122000
      DATA E(3949),E(3950),E(3951),E(3952)/'CTIO','N PO','INT ','REFE'/ 00122100
      DATA E(3953),E(3954),E(3955),E(3956)/'RENC','ED O','N A ','PREV'/ 00122200
      DATA E(3957),E(3958),E(3959),E(3960)/'IOUS',' ''FL','OW'' ','DETA'00122300
     +/                                                                 00122400
      DATA E(3961),E(3962),E(3963),E(3964)/'IL  ','COMM','AND ','DID '/ 00122500
      DATA E(3965),E(3966),E(3967),E(3968)/'NOT ','EQUA','L TH','E FI'/ 00122600
      DATA E(3969),E(3970),E(3971),E(3972)/'RST ','JUNC','TION',' POI'/ 00122700
      DATA E(3973),E(3974),E(3975),E(3976)/'NT I','N TH','E DE','TAIL'/ 00122800
      DATA E(3977),E(3978),E(3979),E(3980)/'  CO','MMAN','D.  ','AN A'/ 00122900
      DATA E(3981),E(3982),E(3983),E(3984)/'RC J','UNCT','ION ','POIN'/ 00123000
      DATA E(3985),E(3986),E(3987),E(3988)/'T RE','FERE','NCED',' IN '/ 00123100
      DATA E(3989),E(3990),E(3991),E(3992)/'A ''F','LOW''',' DET','AIL '00123200
     +/                                                                 00123300
      DATA E(3993),E(3994),E(3995),E(3996)/'COMM','AND ','WAS ',' NOT'/ 00123400
      DATA E(3997),E(3998),E(3999),E(4000)/' WIT','HIN ','RANG','E FO'/ 00123500
      DATA E(4001),E(4002),E(4003),E(4004)/'R TH','E CU','RVE.','    '/ 00123600
      DATA E(4005),E(4006),E(4007),E(4008)/'THE ','FINA','L JU','NCTI'/ 00123700
      DATA E(4009),E(4010),E(4011),E(4012)/'ON P','OINT',' REF','EREN'/ 00123800
      DATA E(4013),E(4014),E(4015),E(4016)/'CED ','IN T','HE F','INAL'/ 00123900
      DATA E(4017),E(4018),E(4019),E(4020)/' FLO','W DE','TAIL','  CO'/ 00124000
      DATA E(4021),E(4022),E(4023),E(4024)/'MMAN','D WA','S NO','T TH'/ 00124100
      DATA E(4025),E(4026),E(4027),E(4028)/'E LA','ST P','OINT',' OF '/ 00124200
      DATA E(4029),E(4030),E(4031),E(4032)/'THE ','CURV','E.  ','THE '/ 00124300
      DATA E(4033),E(4034),E(4035),E(4036)/'LAST',' JUN','CTIO','N PO'/ 00124400
      DATA E(4037),E(4038),E(4039),E(4040)/'INT ','REFE','RENC','ED I'/ 00124500
      DATA E(4041),E(4042),E(4043),E(4044)/'N A ','PREV','IOUS',' ''SE'/00124600
      DATA E(4045),E(4046),E(4047),E(4048)/'GMEN','T''  ','DETA','IL C'/00124700
      DATA E(4049),E(4050),E(4051),E(4052)/'OMMA','ND D','ID N','OT E'/ 00124800
      DATA E(4053),E(4054),E(4055),E(4056)/'QUAL',' THE',' FIR','ST J'/ 00124900
      DATA E(4057),E(4058),E(4059),E(4060)/'UNCT','ION ','POIN','T IN'/ 00125000
      DATA E(4061),E(4062),E(4063),E(4064)/' THE','  PR','ESEN','T DE'/ 00125100
      DATA E(4065),E(4066),E(4067),E(4068)/'TAIL',' COM','MAND','.   '/ 00125200
      DATA E(4069),E(4070),E(4071),E(4072)/'AN A','RC J','UNCT','ION '/ 00125300
      DATA E(4073),E(4074),E(4075),E(4076)/'POIN','T RE','FERE','NCED'/ 00125400
      DATA E(4077),E(4078),E(4079),E(4080)/' IN ','A ''S','EGME','NT'' '00125500
     +/                                                                 00125600
      DATA E(4081),E(4082),E(4083),E(4084)/'DETA','IL C','OMMA','ND  '/ 00125700
      DATA E(4085),E(4086),E(4087),E(4088)/'COMM','AND ','WAS ','NOT '/ 00125800
      DATA E(4089),E(4090),E(4091),E(4092)/'WITH','IN R','ANGE',' FOR'/ 00125900
      DATA E(4093),E(4094),E(4095),E(4096)/' THE',' CUR','VE. ','THE '/ 00126000
      DATA E(4097),E(4098),E(4099),E(4100)/'FINA','L JU','NCTI','ON P'/ 00126100
      DATA E(4101),E(4102),E(4103),E(4104)/'OINT',' REF','EREN','CED '/ 00126200
      DATA E(4105),E(4106),E(4107),E(4108)/'IN T','HE F','INAL',' ''SE'/00126300
      DATA E(4109),E(4110),E(4111),E(4112)/'GMEN','T''  ','DETA','IL C'/00126400
      DATA E(4113),E(4114),E(4115),E(4116)/'OMMA','ND W','AS N','OT T'/ 00126500
      DATA E(4117),E(4118),E(4119),E(4120)/'HE L','AST ','POIN','T OF'/ 00126600
      DATA E(4121),E(4122),E(4123),E(4124)/' THE',' CUR','VE. ','PROJ'/ 00126700
      DATA E(4125),E(4126),E(4127),E(4128)/'ECTI','ON O','F A ','CURV'/ 00126800
      DATA E(4129),E(4130),E(4131),E(4132)/'E PO','INT ','INTO',' PLA'/ 00126900
      DATA E(4133),E(4134),E(4135),E(4136)/'NE F','OR A','NGUL','AR M'/ 00127000
      DATA E(4137),E(4138),E(4139),E(4140)/'EASU','REME','NT  ','IS T'/ 00127100
      DATA E(4141),E(4142),E(4143),E(4144)/'OO C','LOSE',' TO ','FOCA'/ 00127200
      DATA E(4145),E(4146),E(4147),E(4148)/'L PO','INT ','FOR ','DEFI'/ 00127300
      DATA E(4149),E(4150),E(4151),E(4152)/'NITE',' MEA','SURE','MENT'/ 00127400
      DATA E(4153),E(4154),E(4155),E(4156)/' OF ','ANGL','E.  ','A ''F'/00127500
      DATA E(4157),E(4158),E(4159),E(4160)/'LOW''',' DET','AIL ','COMM'/00127600
      DATA E(4161),E(4162),E(4163),E(4164)/'AND ','WORD',' IS ','INVA'/ 00127700
      DATA E(4165),E(4166),E(4167),E(4168)/'LID.','    ','THE ','TWO '/ 00127800
      DATA E(4169),E(4170),E(4171),E(4172)/'POIN','TS A','VAIL','ABLE'/ 00127900
      DATA E(4173),E(4174),E(4175),E(4176)/' FOR',' DEF','ININ','G A '/ 00128000
      DATA E(4177),E(4178),E(4179),E(4180)/'PROJ','ECTI','ON C','HORD'/ 00128100
      DATA E(4181),E(4182),E(4183),E(4184)/' ARE','  TO','O CL','OSE '/ 00128200
      DATA E(4185),E(4186),E(4187),E(4188)/'TO D','ETER','MINE',' A C'/ 00128300
      DATA E(4189),E(4190),E(4191),E(4192)/'HORD','.   ','THER','E WA'/ 00128400
      DATA E(4193),E(4194),E(4195),E(4196)/'S NO','T EN','OUGH',' BUF'/ 00128500
      DATA E(4197),E(4198),E(4199),E(4200)/'FER ','SPAC','E FO','R A '/ 00128600
      DATA E(4201),E(4202),E(4203),E(4204)/'''FLO','W'' D','ETAI','L  P'00128700
     +/                                                                 00128800
      DATA E(4205),E(4206),E(4207),E(4208)/'ARAM','ETER','IZAT','ION '/ 00128900
      DATA E(4209),E(4210),E(4211),E(4212)/'COMM','AND.','    ','LENG'/ 00129000
      DATA E(4213),E(4214),E(4215),E(4216)/'TH O','F NO','RMAL',' VEC'/ 00129100
      DATA E(4217),E(4218),E(4219),E(4220)/'TOR ','WHIC','H CO','NTRO'/ 00129200
      DATA E(4221),E(4222),E(4223),E(4224)/'LS D','IREC','TION',' OF '/ 00129300
      DATA E(4225),E(4226),E(4227),E(4228)/'CHOR','DAL ',' PRO','JECT'/ 00129400
      DATA E(4229),E(4230),E(4231),E(4232)/'ION ','IS T','OO S','MALL'/ 00129500
      DATA E(4233),E(4234),E(4235),E(4236)/'. VE','CTOR',' IS ','ZERO'/ 00129600
      DATA E(4237),E(4238),E(4239),E(4240)/'.   ','IN A',' ''CU','RSEG'/00129700
      DATA E(4241),E(4242),E(4243),E(4244)/''' DE','FINI','TION',' ALL'/00129800
      DATA E(4245),E(4246),E(4247),E(4248)/' OF ','THE ','POIN','TS D'/ 00129900
      DATA E(4249),E(4250),E(4251),E(4252)/'O NO','T LI','E IN',' A  '/ 00130000
      DATA E(4253),E(4254),E(4255),E(4256)/'PLAN','E.  ','IN A',' ''CU'/00130100
      DATA E(4257),E(4258),E(4259),E(4260)/'RSEG',''' DE','FINI','TION'/00130200
      DATA E(4261),E(4262),E(4263),E(4264)/' ALL',' OF ','THE ','TANG'/ 00130300
      DATA E(4265),E(4266),E(4267),E(4268)/'ENT ','CONS','TRAI','NTS '/ 00130400
      DATA E(4269),E(4270),E(4271),E(4272)/'DO N','OT  ','LIE ','IN A'/ 00130500
      DATA E(4273),E(4274),E(4275),E(4276)/' PLA','NE. ','MORE',' THA'/ 00130600
      DATA E(4277),E(4278),E(4279),E(4280)/'N 5 ','COND','ITIO','NS I'/ 00130700
      DATA E(4281),E(4282),E(4283),E(4284)/'N A ','''CUR','SEG''',' DEF'00130800
     +/                                                                 00130900
      DATA E(4285),E(4286),E(4287),E(4288)/'INIT','ION.','    ','IN A'/ 00131000
      DATA E(4289),E(4290),E(4291),E(4292)/' ''CU','RSEG',''' DE','FINI'00131100
     +/                                                                 00131200
      DATA E(4293),E(4294),E(4295),E(4296)/'TION',' END',' SLO','PES '/ 00131300
      DATA E(4297),E(4298),E(4299),E(4300)/'ARE ','PARA','LLEL',' (TH'/ 00131400
      DATA E(4301),E(4302),E(4303),E(4304)/'AT I','S,  ','THEY',' DO '/ 00131500
      DATA E(4305),E(4306),E(4307),E(4308)/'NOT ','INTE','RSEC','T). '/ 00131600
      DATA E(4309),E(4310),E(4311),E(4312)/'IN A',' ''CU','RSEG',''' DE'00131700
     +/                                                                 00131800
      DATA E(4313),E(4314),E(4315),E(4316)/'FINI','TION',', TH','E PO'/ 00131900
      DATA E(4317),E(4318),E(4319),E(4320)/'INTS',' IND','ICAT','E AN'/ 00132000
      DATA E(4321),E(4322),E(4323),E(4324)/' IMP','OSSI','BLE ',' INF'/ 00132100
      DATA E(4325),E(4326),E(4327),E(4328)/'LECT','ION.','    ','IN A'/ 00132200
      DATA E(4329),E(4330),E(4331),E(4332)/' ''CU','RSEG',''' DE','FINI'00132300
     +/                                                                 00132400
      DATA E(4333),E(4334),E(4335),E(4336)/'TION',', NO','RMAL','S AT'/ 00132500
      DATA E(4337),E(4338),E(4339),E(4340)/' THE',' CUR','VE E','NDS '/ 00132600
      DATA E(4341),E(4342),E(4343),E(4344)/'DO N','OT  ','INTE','RSEC'/ 00132700
      DATA E(4345),E(4346),E(4347),E(4348)/'T.  ','NO S','UITA','BLE '/ 00132800
      DATA E(4349),E(4350),E(4351),E(4352)/'CONI','C CU','RVE ','FITS'/ 00132900
      DATA E(4353),E(4354),E(4355),E(4356)/' THE',' SPE','CIFI','ED C'/ 00133000
      DATA E(4357),E(4358),E(4359),E(4360)/'ONDI','TION','S.  ','THER'/ 00133100
      DATA E(4361),E(4362),E(4363),E(4364)/'E AR','E FE','WER ','THAN'/ 00133200
      DATA E(4365),E(4366),E(4367),E(4368)/' TWO',' POI','NTS ','IN T'/ 00133300
      DATA E(4369),E(4370),E(4371),E(4372)/'HE S','PLIN','E.  ','TWO '/ 00133400
      DATA E(4373),E(4374),E(4375),E(4376)/'CONS','ECUT','IVE ','POIN'/ 00133500
      DATA E(4377),E(4378),E(4379),E(4380)/'TS A','RE I','DENT','ICAL'/ 00133600
      DATA E(4381),E(4382),E(4383),E(4384)/' (''S','PLIN','E'' C','ASE)'00133700
     +/                                                                 00133800
      DATA E(4385),E(4386),E(4387),E(4388)/'.   ','TWO ','OF T','HE I'/ 00133900
      DATA E(4389),E(4390),E(4391),E(4392)/'NPUT',' POI','NTS ','ARE '/ 00134000
      DATA E(4393),E(4394),E(4395),E(4396)/'IDEN','TICA','L (''','CURS'/00134100
      DATA E(4397),E(4398),E(4399),E(4400)/'EG'' ','CASE',').  ','SMOO'/00134200
      DATA E(4401),E(4402),E(4403),E(4404)/'THIN','G AL','GORI','THM '/ 00134300
      DATA E(4405),E(4406),E(4407),E(4408)/'FAIL','ED. ','A VE','CTOR'/ 00134400
      DATA E(4409),E(4410),E(4411),E(4412)/' CON','STRA','INT ','WAS '/ 00134500
      DATA E(4413),E(4414),E(4415),E(4416)/'ZERO','.   ','PROJ','ECTI'/ 00134600
      DATA E(4417),E(4418),E(4419),E(4420)/'ON O','F >T','ANSP','L< O'/ 00134700
      DATA E(4421),E(4422),E(4423),E(4424)/'N TH','E PL','ANE ','PERP'/ 00134800
      DATA E(4425),E(4426),E(4427),E(4428)/'TO N','ORMA','L IS',' TOO'/ 00134900
      DATA E(4429),E(4430),E(4431),E(4432)/' SMA','LL. ','PROJ','ECTI'/ 00135000
      DATA E(4433),E(4434),E(4435),E(4436)/'ON O','F >C','RSSP','L< O'/ 00135100
      DATA E(4437),E(4438),E(4439),E(4440)/'N TH','E PL','ANE ','PERP'/ 00135200
      DATA E(4441),E(4442),E(4443),E(4444)/'TO N','ORMA','L IS',' TOO'/ 00135300
      DATA E(4445),E(4446),E(4447),E(4448)/' SMA','LL. ','TWO ','OR M'/ 00135400
      DATA E(4449),E(4450),E(4451),E(4452)/'ORE ','CONS','TRAI','NT V'/ 00135500
      DATA E(4453),E(4454),E(4455),E(4456)/'ECTO','RS A','T ON','E PO'/ 00135600
      DATA E(4457),E(4458),E(4459),E(4460)/'INT ','LIE ','IN T','HE S'/ 00135700
      DATA E(4461),E(4462),E(4463),E(4464)/'AME ',' DIR','ECTI','ON. '/ 00135800
      DATA E(4465),E(4466),E(4467),E(4468)/'PARA','BOLI','C IN','TERP'/ 00135900
      DATA E(4469),E(4470),E(4471),E(4472)/'OLAT','ION ','FAIL','ED A'/ 00136000
      DATA E(4473),E(4474),E(4475),E(4476)/'T ON','E EN','D OF',' A '''/00136100
      DATA E(4477),E(4478),E(4479),E(4480)/'SPLI','NE''.','    ','THE '/00136200
      DATA E(4481),E(4482),E(4483),E(4484)/'MID ','POIN','T OF',' THR'/ 00136300
      DATA E(4485),E(4486),E(4487),E(4488)/'EE C','ONSE','CUTI','VE P'/ 00136400
      DATA E(4489),E(4490),E(4491),E(4492)/'OINT','S PR','OJEC','TED '/ 00136500
      DATA E(4493),E(4494),E(4495),E(4496)/'OUTS','IDE ',' THE',' RAN'/ 00136600
      DATA E(4497),E(4498),E(4499),E(4500)/'GE O','F TH','E SU','RROU'/ 00136700
      DATA E(4501),E(4502),E(4503),E(4504)/'NDIN','G TW','O.  ','A DI'/ 00136800
      DATA E(4505),E(4506),E(4507),E(4508)/'STAN','CE B','ETWE','EN T'/ 00136900
      DATA E(4509),E(4510),E(4511),E(4512)/'WO C','ONSE','CUTI','VE I'/ 00137000
      DATA E(4513),E(4514),E(4515),E(4516)/'NPUT',' POI','NTS ','IS  '/ 00137100
      DATA E(4517),E(4518),E(4519),E(4520)/'TOO ','SMAL','L.  ','INPU'/ 00137200
      DATA E(4521),E(4522),E(4523),E(4524)/'T >I','DC< ','IS N','OT S'/ 00137300
      DATA E(4525),E(4526),E(4527),E(4528)/'IGNI','FICA','NT. ','ERRO'/ 00137400
      DATA E(4529),E(4530),E(4531),E(4532)/'R IN',' SOL','VING',' SIM'/ 00137500
      DATA E(4533),E(4534),E(4535),E(4536)/'ULTA','NEOU','S LI','NEAR'/ 00137600
      DATA E(4537),E(4538),E(4539),E(4540)/' EQU','ATIO','NS. ','NUMB'/ 00137700
      DATA E(4541),E(4542),E(4543),E(4544)/'ER O','F IN','PUT ','POIN'/ 00137800
      DATA E(4545),E(4546),E(4547),E(4548)/'TS I','S LE','SS T','HAN '/ 00137900
      DATA E(4549),E(4550),E(4551),E(4552)/'3.  ','A DI','STAN','CE B'/ 00138000
      DATA E(4553),E(4554),E(4555),E(4556)/'ETWE','EN T','WO C','ONSE'/ 00138100
      DATA E(4557),E(4558),E(4559),E(4560)/'CUTI','VE O','UTPU','T PO'/ 00138200
      DATA E(4561),E(4562),E(4563),E(4564)/'INTS',' IS ',' IS ','TOO '/ 00138300
      DATA E(4565),E(4566),E(4567),E(4568)/'SMAL','L.  ','AN O','UTPU'/ 00138400
      DATA E(4569),E(4570),E(4571),E(4572)/'T FI','RST ','ORDE','R DE'/ 00138500
      DATA E(4573),E(4574),E(4575),E(4576)/'RIVA','TIVE',' HAS',' A M'/ 00138600
      DATA E(4577),E(4578),E(4579),E(4580)/'AGNI','TUDE',' WHI','CH  '/ 00138700
      DATA E(4581),E(4582),E(4583),E(4584)/'IS T','OO S','MALL','.   '/ 00138800
      DATA E(4585),E(4586),E(4587),E(4588)/'MORE',' THA','N 2 ','CHEC'/ 00138900
      DATA E(4589),E(4590),E(4591),E(4592)/'K SU','RFAC','ES F','OR T'/ 00139000
      DATA E(4593),E(4594),E(4595),E(4596)/'HIS ','CUT ','SEQU','ENCE'/ 00139100
      DATA E(4597),E(4598),E(4599),E(4600)/'.   ','PART',' SUR','FACE'/ 00139200
      DATA E(4601),E(4602),E(4603),E(4604)/' IS ','A PO','INT.','    '/ 00139300
      DATA E(4605),E(4606),E(4607),E(4608)/'CUTT','ER W','AS N','OT W'/ 00139400
      DATA E(4609),E(4610),E(4611),E(4612)/'ITHI','N TO','LERA','NCE '/ 00139500
      DATA E(4613),E(4614),E(4615),E(4616)/'OF D','S AT',' STA','RT O'/ 00139600
      DATA E(4617),E(4618),E(4619),E(4620)/'F CU','T.  ','CUTT','ER W'/ 00139700
      DATA E(4621),E(4622),E(4623),E(4624)/'AS N','OT W','ITHI','N TO'/ 00139800
      DATA E(4625),E(4626),E(4627),E(4628)/'LERA','NCE ','OF P','S AT'/ 00139900
      DATA E(4629),E(4630),E(4631),E(4632)/' STA','RT O','F CU','T.  '/ 00140000
      DATA E(4633),E(4634),E(4635),E(4636)/'UNAB','LE T','O DE','TERM'/ 00140100
      DATA E(4637),E(4638),E(4639),E(4640)/'INE ','GENE','RAL ','DIRE'/ 00140200
      DATA E(4641),E(4642),E(4643),E(4644)/'CTIO','N OF',' FIR','ST C'/ 00140300
      DATA E(4645),E(4646),E(4647),E(4648)/'UT V','ECTO','R.  ','FWD '/ 00140400
      DATA E(4649),E(4650),E(4651),E(4652)/'DIRE','CTIO','N CO','ULD '/ 00140500
      DATA E(4653),E(4654),E(4655),E(4656)/'NOT ','BE D','ETER','MINE'/ 00140600
      DATA E(4657),E(4658),E(4659),E(4660)/'D.  ','INIT','IAL ','MOTI'/ 00140700
      DATA E(4661),E(4662),E(4663),E(4664)/'ON D','IREC','TION',' VEC'/ 00140800
      DATA E(4665),E(4666),E(4667),E(4668)/'TOR ','OR I','TS O','RIEN'/ 00140900
      DATA E(4669),E(4670),E(4671),E(4672)/'TATI','ON C','OULD',' NOT'/ 00141000
      DATA E(4673),E(4674),E(4675),E(4676)/'  BE',' DET','ERMI','NED.'/ 00141100
      DATA E(4677),E(4678),E(4679),E(4680)/'    ','CUTT','ER N','OT D'/ 00141200
      DATA E(4681),E(4682),E(4683),E(4684)/'EFIN','ED P','RIOR',' TO '/ 00141300
      DATA E(4685),E(4686),E(4687),E(4688)/'CUT ','SEQU','ENCE',' CAL'/ 00141400
      DATA E(4689),E(4690),E(4691),E(4692)/'CULA','TION','.   ','''FRO'/00141500
      DATA E(4693),E(4694),E(4695),E(4696)/'M'' P','OINT',' NOT',' SPE'/00141600
      DATA E(4697),E(4698),E(4699),E(4700)/'CIFI','ED. ','''MOT','ION'''00141700
     +/                                                                 00141800
      DATA E(4701),E(4702),E(4703),E(4704)/' MOD','IFIE','R (''','ON'','00141900
     +/                                                                 00142000
      DATA E(4705),E(4706),E(4707),E(4708)/'''TO''',',''PA','ST'',',    00142100
     +'''TAN'/                                                          00142200
      DATA E(4709),E(4710),E(4711),E(4712)/'TO'',','''PST','AN'')',     00142300
     +' NOT'/                                                           00142400
      DATA E(4713),E(4714),E(4715),E(4716)/'  SP','ECIF','IED.','    '/ 00142500
      DATA E(4717),E(4718),E(4719),E(4720)/'CHEC','K SU','RFAC','E MI'/ 00142600
      DATA E(4721),E(4722),E(4723),E(4724)/'SSIN','G FO','R TH','IS '''/00142700
      DATA E(4725),E(4726),E(4727),E(4728)/'MOTI','ON'' ','STAT','EMEN'/00142800
      DATA E(4729),E(4730),E(4731),E(4732)/'T.  ','CUTT','ER N','OT D'/ 00142900
      DATA E(4733),E(4734),E(4735),E(4736)/'EFIN','ED P','RIOR',' TO '/ 00143000
      DATA E(4737),E(4738),E(4739),E(4740)/'CUT ','SEQU','ENCE',' CAL'/ 00143100
      DATA E(4741),E(4742),E(4743),E(4744)/'CULA','TION','.   ','FROM'/ 00143200
      DATA E(4745),E(4746),E(4747),E(4748)/' POI','NT N','OT S','PECI'/ 00143300
      DATA E(4749),E(4750),E(4751),E(4752)/'FIED','.   ','MORE',' THA'/ 00143400
      DATA E(4753),E(4754),E(4755),E(4756)/'N ON','E CH','ECK ','SURF'/ 00143500
      DATA E(4757),E(4758),E(4759),E(4760)/'ACE ','SPEC','IFIE','D IN'/ 00143600
      DATA E(4761),E(4762),E(4763),E(4764)/' A S','TART','UP. ','''NOP'/00143700
      DATA E(4765),E(4766),E(4767),E(4768)/'S'' I','N EF','FECT',', BU'/00143800
      DATA E(4769),E(4770),E(4771),E(4772)/'T PS',' SPE','CIFI','ED I'/ 00143900
      DATA E(4773),E(4774),E(4775),E(4776)/'N ST','ARTU','P.  ','STAR'/ 00144000
      DATA E(4777),E(4778),E(4779),E(4780)/'TUP ','ITER','ATIO','N FA'/ 00144100
      DATA E(4781),E(4782),E(4783),E(4784)/'ILED',' TO ','CONV','ERGE'/ 00144200
      DATA E(4785),E(4786),E(4787),E(4788)/'.   ','INVA','LID ','DATA'/ 00144300
      DATA E(4789),E(4790),E(4791),E(4792)/' FOR',' STA','RTUP','. (S'/ 00144400
      DATA E(4793),E(4794),E(4795),E(4796)/'EE C','OMPU','TER ','PROG'/ 00144500
      DATA E(4797),E(4798),E(4799),E(4800)/'RAMM','ER).','    ','INDI'/ 00144600
      DATA E(4801),E(4802),E(4803),E(4804)/'RP V','ECTO','R HA','S NO'/ 00144700
      DATA E(4805),E(4806),E(4807),E(4808)/' LEN','GTH.','    ','DIRE'/ 00144800
      DATA E(4809),E(4810),E(4811),E(4812)/'CTIO','N OF',' MOT','ION '/ 00144900
      DATA E(4813),E(4814),E(4815),E(4816)/'GIVE','N WI','THOU','T A '/ 00145000
      DATA E(4817),E(4818),E(4819),E(4820)/'STAR','TING',' POI','NT B'/ 00145100
      DATA E(4821),E(4822),E(4823),E(4824)/'EING',' GIV','EN. ','CANN'/ 00145200
      DATA E(4825),E(4826),E(4827),E(4828)/'OT D','ETER','MINE',' SUR'/ 00145300
      DATA E(4829),E(4830),E(4831),E(4832)/'FACE',' TYP','E. D','S AS'/ 00145400
      DATA E(4833),E(4834),E(4835),E(4836)/'SUME','D.  ','INDI','RV V'/ 00145500
      DATA E(4837),E(4838),E(4839),E(4840)/'ECTO','R HA','S NO',' LEN'/ 00145600
      DATA E(4841),E(4842),E(4843),E(4844)/'GTH.','    ','DIRE','CTIO'/ 00145700
      DATA E(4845),E(4846),E(4847),E(4848)/'N OF',' MOT','ION ','GIVE'/ 00145800
      DATA E(4849),E(4850),E(4851),E(4852)/'N WI','THOU','T A ','STAR'/ 00145900
      DATA E(4853),E(4854),E(4855),E(4856)/'TING',' POI','NT B','EING'/ 00146000
      DATA E(4857),E(4858),E(4859),E(4860)/' GIV','EN. ','CANN','OT D'/ 00146100
      DATA E(4861),E(4862),E(4863),E(4864)/'ETER','MINE',' SUR','FACE'/ 00146200
      DATA E(4865),E(4866),E(4867),E(4868)/' TYP','E. D','S AS','SUME'/ 00146300
      DATA E(4869),E(4870),E(4871),E(4872)/'D.  ','SRFV','CT V','ECTO'/ 00146400
      DATA E(4873),E(4874),E(4875),E(4876)/'R HA','S NO',' LEN','GTH.'/ 00146500
      DATA E(4877),E(4878),E(4879),E(4880)/'    ','CANN','OT D','ETER'/ 00146600
      DATA E(4881),E(4882),E(4883),E(4884)/'MINE',' SUR','FACE',' TYP'/ 00146700
      DATA E(4885),E(4886),E(4887),E(4888)/'E. D','S AS','SUME','D.  '/ 00146800
      DATA E(4889),E(4890),E(4891),E(4892)/'DIRE','CTIO','N OF',' MOT'/ 00146900
      DATA E(4893),E(4894),E(4895),E(4896)/'ION ','GIVE','N WI','THOU'/ 00147000
      DATA E(4897),E(4898),E(4899),E(4900)/'T A ','STAR','TING',' POI'/ 00147100
      DATA E(4901),E(4902),E(4903),E(4904)/'NT B','EING',' GIV','EN. '/ 00147200
      DATA E(4905),E(4906),E(4907),E(4908)/'NO D','RIVE',' SUR','FACE'/ 00147300
      DATA E(4909),E(4910),E(4911),E(4912)/' NAM','ED A','FTER',' GO/'/ 00147400
      DATA E(4913),E(4914),E(4915),E(4916)/'. EN','TERI','NG R','ESTA'/ 00147500
      DATA E(4917),E(4918),E(4919),E(4920)/'RT M','ODE.','    ','ITEM'/ 00147600
      DATA E(4921),E(4922),E(4923),E(4924)/' NOT',' ''FE','DRAT',       00147700
     +''',''T'/                                                         00147800
      DATA E(4925),E(4926),E(4927),E(4928)/'O'',''','ON'',','''PAS',    00147900
     +'T'' O'/                                                          00148000
      DATA E(4929),E(4930),E(4931),E(4932)/'R SU','RFAC','E FO','UND '/ 00148100
      DATA E(4933),E(4934),E(4935),E(4936)/'AFTE','R GO','/.  ','ENTE'/ 00148200
      DATA E(4937),E(4938),E(4939),E(4940)/'RING',' RES','TART',' MOD'/ 00148300
      DATA E(4941),E(4942),E(4943),E(4944)/'E.  ','ILLE','GAL ','PERM'/ 00148400
      DATA E(4945),E(4946),E(4947),E(4948)/'ANEN','T ID','ENTI','FIER'/ 00148500
      DATA E(4949),E(4950),E(4951),E(4952)/' FOL','LOWS',' GO/','. EN'/ 00148600
      DATA E(4953),E(4954),E(4955),E(4956)/'TERI','NG R','ESTA','RT  '/ 00148700
      DATA E(4957),E(4958),E(4959),E(4960)/'MODE','.   ','ILLE','GAL '/ 00148800
      DATA E(4961),E(4962),E(4963),E(4964)/'LANG','UAGE',' USA','GE E'/ 00148900
      DATA E(4965),E(4966),E(4967),E(4968)/'NCOU','NTER','ED B','EFOR'/ 00149000
      DATA E(4969),E(4970),E(4971),E(4972)/'E DR','IVE ','SURF','ACE.'/ 00149100
      DATA E(4973),E(4974),E(4975),E(4976)/'  EN','TERI','NG R','ESTA'/ 00149200
      DATA E(4977),E(4978),E(4979),E(4980)/'RT M','ODE.','    ','INVA'/ 00149300
      DATA E(4981),E(4982),E(4983),E(4984)/'LID ','CUTT','ER D','EFIN'/ 00149400
      DATA E(4985),E(4986),E(4987),E(4988)/'ITIO','N FO','RMAT','.   '/ 00149500
      DATA E(4989),E(4990),E(4991),E(4992)/'CUTT','ER D','IAME','TER '/ 00149600
      DATA E(4993),E(4994),E(4995),E(4996)/'IS N','EGAT','IVE.','    '/ 00149700
      DATA E(4997),E(4998),E(4999),E(5000)/'CUTT','ER H','EIGH','T IS'/ 00149800
      DATA E(5001),E(5002),E(5003),E(5004)/' NEG','ATIV','E.  ','CUTT'/ 00149900
      DATA E(5005),E(5006),E(5007),E(5008)/'ER A','NGLE','S (A','LPHA'/ 00150000
      DATA E(5009),E(5010),E(5011),E(5012)/' AND',' BET','A) A','RE T'/ 00150100
      DATA E(5013),E(5014),E(5015),E(5016)/'OO L','ARGE','.   ','CUTT'/ 00150200
      DATA E(5017),E(5018),E(5019),E(5020)/'ER A','NGLE',' ALP','HA I'/ 00150300
      DATA E(5021),E(5022),E(5023),E(5024)/'S NE','GATI','VE. ','DIAM'/ 00150400
      DATA E(5025),E(5026),E(5027),E(5028)/'ETER',', AL','PHA ','AND '/ 00150500
      DATA E(5029),E(5030),E(5031),E(5032)/'HEIG','HT O','F CU','TTER'/ 00150600
      DATA E(5033),E(5034),E(5035),E(5036)/' ARE',' INC','ONSI','STEN'/ 00150700
      DATA E(5037),E(5038),E(5039),E(5040)/'T.  ','CUTT','ER A','NGLE'/ 00150800
      DATA E(5041),E(5042),E(5043),E(5044)/' BET','A IS',' NEG','ATIV'/ 00150900
      DATA E(5045),E(5046),E(5047),E(5048)/'E.  ','CORN','ER R','ADIU'/ 00151000
      DATA E(5049),E(5050),E(5051),E(5052)/'S OF',' CUT','TER ','IS N'/ 00151100
      DATA E(5053),E(5054),E(5055),E(5056)/'EGAT','IVE.','    ','CORN'/ 00151200
      DATA E(5057),E(5058),E(5059),E(5060)/'ER C','IRCL','E CE','NTER'/ 00151300
      DATA E(5061),E(5062),E(5063),E(5064)/' IS ','INCO','NSIS','TENT'/ 00151400
      DATA E(5065),E(5066),E(5067),E(5068)/' WIT','H UP','PER ','LINE'/ 00151500
      DATA E(5069),E(5070),E(5071),E(5072)/' SEG','MENT','  OF',' CUT'/ 00151600
      DATA E(5073),E(5074),E(5075),E(5076)/'TER.','    ','CORN','ER C'/ 00151700
      DATA E(5077),E(5078),E(5079),E(5080)/'IRCL','E OF',' CUT','TER '/ 00151800
      DATA E(5081),E(5082),E(5083),E(5084)/'INTE','RCEP','TS L','OWER'/ 00151900
      DATA E(5085),E(5086),E(5087),E(5088)/' LIN','E SE','GMEN','T AT'/ 00152000
      DATA E(5089),E(5090),E(5091),E(5092)/' AN ',' UNA','CCEP','TABL'/ 00152100
      DATA E(5093),E(5094),E(5095),E(5096)/'E AN','GLE.','    ','INCO'/ 00152200
      DATA E(5097),E(5098),E(5099),E(5100)/'NSIS','TENT',' CUT','TER '/ 00152300
      DATA E(5101),E(5102),E(5103),E(5104)/'DEFI','NITI','ON. ','LOWE'/ 00152400
      DATA E(5105),E(5106),E(5107),E(5108)/'R LI','NE S','EGME','NT  '/ 00152500
      DATA E(5109),E(5110),E(5111),E(5112)/'IGNO','RED.','    ','NO U'/ 00152600
      DATA E(5113),E(5114),E(5115),E(5116)/'PPER',' LIN','E SE','GMEN'/ 00152700
      DATA E(5117),E(5118),E(5119),E(5120)/'T ON',' CUT','TER,',' OR '/ 00152800
      DATA E(5121),E(5122),E(5123),E(5124)/'CORN','ER C','IRCL','E ME'/ 00152900
      DATA E(5125),E(5126),E(5127),E(5128)/'ETS ','LOWE','R  L','INE '/ 00153000
      DATA E(5129),E(5130),E(5131),E(5132)/'SEGM','ENT ','INCO','RREC'/ 00153100
      DATA E(5133),E(5134),E(5135),E(5136)/'TLY.','    ','CORN','ER C'/ 00153200
      DATA E(5137),E(5138),E(5139),E(5140)/'IRCL','E OF',' CUT','TER '/ 00153300
      DATA E(5141),E(5142),E(5143),E(5144)/'DOES',' NOT',' INT','ERSE'/ 00153400
      DATA E(5145),E(5146),E(5147),E(5148)/'CT L','OWER',' LIN','E SE'/ 00153500
      DATA E(5149),E(5150),E(5151),E(5152)/'GMEN','T.  ','CORN','ER C'/ 00153600
      DATA E(5153),E(5154),E(5155),E(5156)/'IRCL','E OF',' CUT','TER '/ 00153700
      DATA E(5157),E(5158),E(5159),E(5160)/'DOES',' NOT',' INT','ERSE'/ 00153800
      DATA E(5161),E(5162),E(5163),E(5164)/'CT U','PPER',' LIN','E SE'/ 00153900
      DATA E(5165),E(5166),E(5167),E(5168)/'GMEN','T.  ','CORN','ER C'/ 00154000
      DATA E(5169),E(5170),E(5171),E(5172)/'IRCL','E OF',' CUT','TER '/ 00154100
      DATA E(5173),E(5174),E(5175),E(5176)/'INTE','RSEC','TS U','PPER'/ 00154200
      DATA E(5177),E(5178),E(5179),E(5180)/' LIN','E SE','GMEN','T AT'/ 00154300
      DATA E(5181),E(5182),E(5183),E(5184)/'  UN','ACCE','PTAB','LE A'/ 00154400
      DATA E(5185),E(5186),E(5187),E(5188)/'NGLE','.   ','INCO','NSIS'/ 00154500
      DATA E(5189),E(5190),E(5191),E(5192)/'TENT',' CUT','TER ','DEFI'/ 00154600
      DATA E(5193),E(5194),E(5195),E(5196)/'NITI','ON. ','UPPE','R LI'/ 00154700
      DATA E(5197),E(5198),E(5199),E(5200)/'NE S','EGME','NT I','GNOR'/ 00154800
      DATA E(5201),E(5202),E(5203),E(5204)/'ED. ','CUTT','ER D','EFIN'/ 00154900
      DATA E(5205),E(5206),E(5207),E(5208)/'ITIO','N NO','T VA','LID.'/ 00155000
      DATA E(5209),E(5210),E(5211),E(5212)/'WRON','G DA','TA I','N TL'/ 00155100
      DATA E(5213),E(5214),E(5215),E(5216)/'INC,',' NO ','ARC ','OR N'/ 00155200
      DATA E(5217),E(5218),E(5219),E(5220)/'O LI','NE  ','NO C','UTTE'/ 00155300
      DATA E(5221),E(5222),E(5223),E(5224)/'R DE','FINE','D TO',' COM'/ 00155400
      DATA E(5225),E(5226),E(5227),E(5228)/'PUTE',' DIS','C RA','DIUS'/ 00155500
      DATA E(5229),E(5230),E(5231),E(5232)/' RA ','OR D','ISC ','HEIG'/ 00155600
      DATA E(5233),E(5234),E(5235),E(5236)/'HT H','I.  ','POIN','T IS'/ 00155700
      DATA E(5237),E(5238),E(5239),E(5240)/' OUT','SIDE',' OF ','THE '/ 00155800
      DATA E(5241),E(5242),E(5243),E(5244)/'U/V ','PARA','METE','RS O'/ 00155900
      DATA E(5245),E(5246),E(5247),E(5248)/'F A ','PATC','H.  ','R1 I'/ 00156000
      DATA E(5249),E(5250),E(5251),E(5252)/'S LE','SS T','HAN ','THE '/ 00156100
      DATA E(5253),E(5254),E(5255),E(5256)/'TOLE','RANC','E.  ','THE '/ 00156200
      DATA E(5257),E(5258),E(5259),E(5260)/'TOOL',' AXI','S CA','NNOT'/ 00156300
      DATA E(5261),E(5262),E(5263),E(5264)/' BE ','COMP','UTED','.   '/ 00156400
      DATA E(5265),E(5266),E(5267),E(5268)/'WRON','G TO','OL A','XIS '/ 00156500
      DATA E(5269),E(5270),E(5271),E(5272)/'INFO','RMAT','ION.','    '/ 00156600
      DATA E(5273),E(5274),E(5275),E(5276)/'A ''T','LAXI','S'' C','OMMA'00156700
     +/                                                                 00156800
      DATA E(5277),E(5278),E(5279),E(5280)/'ND H','AS B','EEN ','USED'/ 00156900
      DATA E(5281),E(5282),E(5283),E(5284)/' WIT','HOUT',' A P','REVI'/ 00157000
      DATA E(5285),E(5286),E(5287),E(5288)/'OUS ',' ''MU','LTAX',''' CO'00157100
     +/                                                                 00157200
      DATA E(5289),E(5290),E(5291),E(5292)/'MMAN','D. N','O TO','OLAX'/ 00157300
      DATA E(5293),E(5294),E(5295),E(5296)/'IS V','ALUE','S OU','TPUT'/ 00157400
      DATA E(5297),E(5298),E(5299),E(5300)/'    ','    ','TOO ','MANY'/ 00157500
      DATA E(5301),E(5302),E(5303),E(5304)/' PAR','AMET','ERS ','IN A'/ 00157600
      DATA E(5305),E(5306),E(5307),E(5308)/' ''TL','AXIS',''' ST','ATEM'00157700
     +/                                                                 00157800
      DATA E(5309),E(5310),E(5311),E(5312)/'ENT.',' EXC','ESS ','VALU'/ 00157900
      DATA E(5313),E(5314),E(5315),E(5316)/'ES  ','IGNO','RED.','    '/ 00158000
      DATA E(5317),E(5318),E(5319),E(5320)/'A ''M','ULTA','X'' C','OMMA'00158100
     +/                                                                 00158200
      DATA E(5321),E(5322),E(5323),E(5324)/'ND H','AS B','EEN ','USED'/ 00158300
      DATA E(5325),E(5326),E(5327),E(5328)/' FOL','LOWI','NG P','REVI'/ 00158400
      DATA E(5329),E(5330),E(5331),E(5332)/'OUS ',' MOT','ION ','OUTP'/ 00158500
      DATA E(5333),E(5334),E(5335),E(5336)/'UT W','ITHO','UT T','OOL '/ 00158600
      DATA E(5337),E(5338),E(5339),E(5340)/'AXIS',' VAL','UES.','    '/ 00158700
      DATA E(5341),E(5342),E(5343),E(5344)/'''THI','CK'' ','GIVE','N FO'00158800
     +/                                                                 00158900
      DATA E(5345),E(5346),E(5347),E(5348)/'R MO','RE T','HAN ','THE '/ 00159000
      DATA E(5349),E(5350),E(5351),E(5352)/'ALLO','WED ','NUMB','ER O'/ 00159100
      DATA E(5353),E(5354),E(5355),E(5356)/'F  S','URFA','CES.',' EXT'/ 00159200
      DATA E(5357),E(5358),E(5359),E(5360)/'RA V','ALUE','S IG','NORE'/ 00159300
      DATA E(5361),E(5362),E(5363),E(5364)/'REGI','ON D','ATA ','BELO'/ 00159400
      DATA E(5365),E(5366),E(5367),E(5368)/'NGS ','TO M','ORE ','THAN'/ 00159500
      DATA E(5369),E(5370),E(5371),E(5372)/' ONE',' SUR','FACE','.   '/ 00159600
      DATA E(5373),E(5374),E(5375),E(5376)/'LESS',' THA','N 3 ','POIN'/ 00159700
      DATA E(5377),E(5378),E(5379),E(5380)/'TS A','S RE','GION',' BOU'/ 00159800
      DATA E(5381),E(5382),E(5383),E(5384)/'NDAR','Y.  ','REGI','ON B'/ 00159900
      DATA E(5385),E(5386),E(5387),E(5388)/'OUND','ARY ','IS I','NCOR'/ 00160000
      DATA E(5389),E(5390),E(5391),E(5392)/'RECT','.   ','REGI','ON B'/ 00160100
      DATA E(5393),E(5394),E(5395),E(5396)/'OUND','ARY ','CONT','AINS'/ 00160200
      DATA E(5397),E(5398),E(5399),E(5400)/' INT','ERSE','CTIO','NS. '/ 00160300
      DATA E(5401),E(5402),E(5403),E(5404)/'TOO ','MANY',' REG','ION '/ 00160400
      DATA E(5405),E(5406),E(5407),E(5408)/'POIN','TS T','O PR','OCES'/ 00160500
      DATA E(5409),E(5410),E(5411),E(5412)/'S.  ','REGI','ON D','ATA '/ 00160600
      DATA E(5413),E(5414),E(5415),E(5416)/'CANN','OT B','E FE','TCHE'/ 00160700
      DATA E(5417),E(5418),E(5419),E(5420)/'D.  ','GEOM','ETRY',' ELE'/ 00160800
      DATA E(5421),E(5422),E(5423),E(5424)/'MENT',' IS ','NOT ','DEFI'/ 00160900
      DATA E(5425),E(5426),E(5427),E(5428)/'NED ','- RE','TURN',' WIT'/ 00161000
      DATA E(5429),E(5430),E(5431),E(5432)/'HOUT',' RES','ULT.','NO I'/ 00161100
      DATA E(5433),E(5434),E(5435),E(5436)/'NTER','SECT','ION ','POSS'/ 00161200
      DATA E(5437),E(5438),E(5439),E(5440)/'IBLE','.   ','SAME',' SSU'/ 00161300
      DATA E(5441),E(5442),E(5443),E(5444)/'RF F','OUND',' TWI','CE B'/ 00161400
      DATA E(5445),E(5446),E(5447),E(5448)/'EFOR','E >W','ITH<',' ONL'/ 00161500
      DATA E(5449),E(5450),E(5451),E(5452)/'Y FI','RST ','FOUN','D SS'/ 00161600
      DATA E(5453),E(5454),E(5455),E(5456)/'URF ','IN F','IRST',' PAR'/ 00161700
      DATA E(5457),E(5458),E(5459),E(5460)/'T OF',' THE',' STA','TEME'/ 00161800
      DATA E(5461),E(5462),E(5463),E(5464)/'NT W','ILL ','BE U','SED.'/ 00161900
      DATA E(5465),E(5466),E(5467),E(5468)/'SAME',' SSU','RF F','OUND'/ 00162000
      DATA E(5469),E(5470),E(5471),E(5472)/' TWI','CE A','FTER',' >WI'/ 00162100
      DATA E(5473),E(5474),E(5475),E(5476)/'TH< ','ONLY',' FIR','ST F'/ 00162200
      DATA E(5477),E(5478),E(5479),E(5480)/'OUND',' SSU','RF I','N SE'/ 00162300
      DATA E(5481),E(5482),E(5483),E(5484)/'COND',' PAR','T OF',' THE'/ 00162400
      DATA E(5485),E(5486),E(5487),E(5488)/' STA','TEME','NT W','ILL '/ 00162500
      DATA E(5489),E(5490),E(5491),E(5492)/'BE U','SED.','SAME',' SSU'/ 00162600
      DATA E(5493),E(5494),E(5495),E(5496)/'RF W','ILL ','BE I','NTER'/ 00162700
      DATA E(5497),E(5498),E(5499),E(5500)/'SECT','ED B','Y IT','SELF'/ 00162800
      DATA E(5501),E(5502),E(5503),E(5504)/' THI','S IS',' NOT',' POS'/ 00162900
      DATA E(5505),E(5506),E(5507),E(5508)/'SIBL','E.  ','D.  ','SURF'/ 00163000
      DATA E(5509),E(5510),E(5511),E(5512)/'ACE ','TYPE',' NOT',' IDE'/ 00163100
      DATA E(5513),E(5514),E(5515),E(5516)/'NTIF','IABL','E. (','SEE '/ 00163200
      DATA E(5517),E(5518),E(5519),E(5520)/'COMP','UTER',' PRO','GRAM'/ 00163300
      DATA E(5521),E(5522),E(5523),E(5524)/'MER)','.   ','CANO','NICA'/ 00163400
      DATA E(5525),E(5526),E(5527),E(5528)/'L FO','RM O','F SU','RFAC'/ 00163500
      DATA E(5529),E(5530),E(5531),E(5532)/'E UN','DEFI','NED.','    '/ 00163600
      DATA E(5533),E(5534),E(5535),E(5536)/'CUTT','ER N','OT W','ITHI'/ 00163700
      DATA E(5537),E(5538),E(5539),E(5540)/'N TO','LERA','NCE ','OF D'/ 00163800
      DATA E(5541),E(5542),E(5543),E(5544)/'S AT',' STA','RT O','F CU'/ 00163900
      DATA E(5545),E(5546),E(5547),E(5548)/'T.  ','DS A','ND C','S CI'/ 00164000
      DATA E(5549),E(5550),E(5551),E(5552)/'RCLE','S HA','VE S','AME '/ 00164100
      DATA E(5553),E(5554),E(5555),E(5556)/'CENT','ER. ','DS A','ND C'/ 00164200
      DATA E(5557),E(5558),E(5559),E(5560)/'S NO','T TA','NGEN','T AS'/ 00164300
      DATA E(5561),E(5562),E(5563),E(5564)/' STA','RTED','.   ','REQU'/ 00164400
      DATA E(5565),E(5566),E(5567),E(5568)/'ESTE','D FI','NAL ','CUTT'/ 00164500
      DATA E(5569),E(5570),E(5571),E(5572)/'ER P','OSIT','ION ','NOT '/ 00164600
      DATA E(5573),E(5574),E(5575),E(5576)/'POSS','IBLE','.   ','DS D'/ 00164700
      DATA E(5577),E(5578),E(5579),E(5580)/'OES ','NOT ','INTE','RSEC'/ 00164800
      DATA E(5581),E(5582),E(5583),E(5584)/'T CS',' GOI','NG I','N SP'/ 00164900
      DATA E(5585),E(5586),E(5587),E(5588)/'ECIF','IED ','DIRE','CTIO'/ 00165000
      DATA E(5589),E(5590),E(5591),E(5592)/'N.  ','CS A','ND D','S DO'/ 00165100
      DATA E(5593),E(5594),E(5595),E(5596)/' NOT',' INT','ERSE','CT. '/ 00165200
      DATA E(5597),E(5598),E(5599),E(5600)/'CUT ','VECT','OR I','TERA'/ 00165300
      DATA E(5601),E(5602),E(5603),E(5604)/'TION',' TO ','DS A','ND P'/ 00165400
      DATA E(5605),E(5606),E(5607),E(5608)/'S FA','ILED','.   ','CUT '/ 00165500
      DATA E(5609),E(5610),E(5611),E(5612)/'VECT','OR I','TERA','TION'/ 00165600
      DATA E(5613),E(5614),E(5615),E(5616)/' TO ','CS F','AILE','D.  '/ 00165700
      DATA E(5617),E(5618),E(5619),E(5620)/'''NUM','PTS''',' COU','NT E'00165800
     +/                                                                 00165900
      DATA E(5621),E(5622),E(5623),E(5624)/'XHAU','STED','. MI','SSED'/ 00166000
      DATA E(5625),E(5626),E(5627),E(5628)/' CS ','OR C','UT S','EQUE'/ 00166100
      DATA E(5629),E(5630),E(5631),E(5632)/'NCE ','IS T','OO  ','LONG'/ 00166200
      DATA E(5633),E(5634),E(5635),E(5636)/'.   ','COUL','D NO','T DE'/ 00166300
      DATA E(5637),E(5638),E(5639),E(5640)/'TERM','INE ','TRIA','L MO'/ 00166400
      DATA E(5641),E(5642),E(5643),E(5644)/'VE A','LONG',' DS ','AND '/ 00166500
      DATA E(5645),E(5646),E(5647),E(5648)/'PS. ','CHEC','K CU','TTER'/ 00166600
      DATA E(5649),E(5650),E(5651),E(5652)/'  TO',' SUR','FACE',' CON'/ 00166700
      DATA E(5653),E(5654),E(5655),E(5656)/'FIGU','RATI','ON. ','MAXI'/ 00166800
      DATA E(5657),E(5658),E(5659),E(5660)/'MUM ','CUT ','SEQU','ENCE'/ 00166900
      DATA E(5661),E(5662),E(5663),E(5664)/' LEN','GTH ','EXCE','EDED'/ 00167000
      DATA E(5665),E(5666),E(5667),E(5668)/'. CS',' COU','LD N','OT B'/ 00167100
      DATA E(5669),E(5670),E(5671),E(5672)/'E FO','UND.','    ','MULT'/ 00167200
      DATA E(5673),E(5674),E(5675),E(5676)/'IPLE',' CS ','ERRO','R. ('/ 00167300
      DATA E(5677),E(5678),E(5679),E(5680)/'SEE ','COMP','UTER',' PRO'/ 00167400
      DATA E(5681),E(5682),E(5683),E(5684)/'GRAM','MER)','NEGA','TIVE'/ 00167500
      DATA E(5685),E(5686),E(5687),E(5688)/' DIS','TANC','E TO',' CS '/ 00167600
      DATA E(5689),E(5690),E(5691),E(5692)/'AT S','TART',' OF ','CUT '/ 00167700
      DATA E(5693),E(5694),E(5695),E(5696)/'.   ','CUTT','ER I','S MO'/ 00167800
      DATA E(5697),E(5698),E(5699),E(5700)/'VING',' AWA','Y FR','OM C'/ 00167900
      DATA E(5701),E(5702),E(5703),E(5704)/'S.  ','DIST','ANCE',' TO '/ 00168000
      DATA E(5705),E(5706),E(5707),E(5708)/'TANG','ENT ','CS S','TOPP'/ 00168100
      DATA E(5709),E(5710),E(5711),E(5712)/'ING ','POSI','TION',' CAN'/ 00168200
      DATA E(5713),E(5714),E(5715),E(5716)/'NOT ','BE  ','DETE','RMIN'/ 00168300
      DATA E(5717),E(5718),E(5719),E(5720)/'ED. ','ITER','ATIO','N TO'/ 00168400
      DATA E(5721),E(5722),E(5723),E(5724)/' PS,',' DS,',' CS ','GONE'/ 00168500
      DATA E(5725),E(5726),E(5727),E(5728)/' THR','U RE','STAR','T RO'/ 00168600
      DATA E(5729),E(5730),E(5731),E(5732)/'UTE.','    ','CENT','ER C'/ 00168700
      DATA E(5733),E(5734),E(5735),E(5736)/'SNR ','EXIT',' TAK','EN D'/ 00168800
      DATA E(5737),E(5738),E(5739),E(5740)/'URIN','G PL','ANE ','ROUT'/ 00168900
      DATA E(5741),E(5742),E(5743),E(5744)/'INE ','ITER','ATIO','N.  '/ 00169000
      DATA E(5745),E(5746),E(5747),E(5748)/'(SEE',' COM','PUTE','R PR'/ 00169100
      DATA E(5749),E(5750),E(5751),E(5752)/'OGRA','MMER',').  ','CS N'/ 00169200
      DATA E(5753),E(5754),E(5755),E(5756)/'OT F','OUND',' IN ','MOVE'/ 00169300
      DATA E(5757),E(5758),E(5759),E(5760)/' ALO','NG D','S AN','D PS'/ 00169400
      DATA E(5761),E(5762),E(5763),E(5764)/' PLA','NES.','    ','MAXI'/ 00169500
      DATA E(5765),E(5766),E(5767),E(5768)/'MUM ','CUT ','SEQU','ENCE'/ 00169600
      DATA E(5769),E(5770),E(5771),E(5772)/' LEN','GTH ','EXCE','EDED'/ 00169700
      DATA E(5773),E(5774),E(5775),E(5776)/'. CS',' COU','LD N','OT B'/ 00169800
      DATA E(5777),E(5778),E(5779),E(5780)/'E FO','UND.','    ','DIFF'/ 00169900
      DATA E(5781),E(5782),E(5783),E(5784)/'ICUL','TY E','NCOU','NTER'/ 00170000
      DATA E(5785),E(5786),E(5787),E(5788)/'ED I','N IT','ERAT','ING '/ 00170100
      DATA E(5789),E(5790),E(5791),E(5792)/'CUTT','ER T','O  S','URFA'/ 00170200
      DATA E(5793),E(5794),E(5795),E(5796)/'CES.','    ','CANN','OT I'/ 00170300
      DATA E(5797),E(5798),E(5799),E(5800)/'TERA','TE C','UTTE','R IN'/ 00170400
      DATA E(5801),E(5802),E(5803),E(5804)/'TO S','PECI','FIED',' SUR'/ 00170500
      DATA E(5805),E(5806),E(5807),E(5808)/'FACE','S.  ','COUL','D NO'/ 00170600
      DATA E(5809),E(5810),E(5811),E(5812)/'T DE','TERM','INE ','NEW '/ 00170700
      DATA E(5813),E(5814),E(5815),E(5816)/'TOOL',' AXI','S DU','RING'/ 00170800
      DATA E(5817),E(5818),E(5819),E(5820)/' 5 A','XIS ','CALC','ULAT'/ 00170900
      DATA E(5821),E(5822),E(5823),E(5824)/'ION.','  (S','EE C','OMPU'/ 00171000
      DATA E(5825),E(5826),E(5827),E(5828)/'TER ','PROG','RAMM','ER).'/ 00171100
      DATA E(5829),E(5830),E(5831),E(5832)/'    ','5 AX','IS I','TERA'/ 00171200
      DATA E(5833),E(5834),E(5835),E(5836)/'TION',' DID',' NOT',' CON'/ 00171300
      DATA E(5837),E(5838),E(5839),E(5840)/'VERG','E.  ','TANG','ENT '/ 00171400
      DATA E(5841),E(5842),E(5843),E(5844)/'CS S','TOPP','ING ','POSI'/ 00171500
      DATA E(5845),E(5846),E(5847),E(5848)/'TION',' COU','LD N','OT B'/ 00171600
      DATA E(5849),E(5850),E(5851),E(5852)/'E DE','TERM','INED','.   '/ 00171700
      DATA E(5853),E(5854),E(5855),E(5856)/'5 AX','IS C','OUNT',' EXH'/ 00171800
      DATA E(5857),E(5858),E(5859),E(5860)/'AUST','ED. ','TANG','ENT '/ 00171900
      DATA E(5861),E(5862),E(5863),E(5864)/'CS A','ND P','S/DS','-NOR'/ 00172000
      DATA E(5865),E(5866),E(5867),E(5868)/'MALS',' NEA','RLY ','ORTH'/ 00172100
      DATA E(5869),E(5870),E(5871),E(5872)/'OGON','AL. ',' CHE','CK P'/ 00172200
      DATA E(5873),E(5874),E(5875),E(5876)/'ART ','PROG','RAM.','    '/ 00172300
      DATA E(5877),E(5878),E(5879),E(5880)/'TWO ','PLAN','ES, ','NOT '/ 00172400
      DATA E(5881),E(5882),E(5883),E(5884)/'PERP','ENDI','CULA','R TO'/ 00172500
      DATA E(5885),E(5886),E(5887),E(5888)/' THE',' XY ','PLAN','E,  '/ 00172600
      DATA E(5889),E(5890),E(5891),E(5892)/'CANN','OT B','E US','ED A'/ 00172700
      DATA E(5893),E(5894),E(5895),E(5896)/'S DS',' AND',' CS ','FOR '/ 00172800
      DATA E(5897),E(5898),E(5899),E(5900)/'''TAN','TO'' ','CASE','.   '00172900
     +/                                                                 00173000
      DATA E(5901),E(5902),E(5903),E(5904)/'COUL','D NO','T FI','ND A'/ 00173100
      DATA E(5905),E(5906),E(5907),E(5908)/'N IN','TERS','ECTI','ON B'/ 00173200
      DATA E(5909),E(5910),E(5911),E(5912)/'ETWE','EN T','OOL ','RAY '/ 00173300
      DATA E(5913),E(5914),E(5915),E(5916)/'AND ','SURF','ACE.','    '/ 00173400
      DATA E(5917),E(5918),E(5919),E(5920)/'TOO ','MANY',' CAL','LS T'/ 00173500
      DATA E(5921),E(5922),E(5923),E(5924)/'O DD','SSRF',' WIT','HOUT'/ 00173600
      DATA E(5925),E(5926),E(5927),E(5928)/' DET','ERMI','NING',' A N'/ 00173700
      DATA E(5929),E(5930),E(5931),E(5932)/'EW C','UTTE','R  P','OSIT'/ 00173800
      DATA E(5933),E(5934),E(5935),E(5936)/'ION.','    ','MODI','FIED'/ 00173900
      DATA E(5937),E(5938),E(5939),E(5940)/' FLI','PCK ','TEST',' PAS'/ 00174000
      DATA E(5941),E(5942),E(5943),E(5944)/'SED.','    ','COUL','D NO'/ 00174100
      DATA E(5945),E(5946),E(5947),E(5948)/'T DE','TERM','INE ','NORM'/ 00174200
      DATA E(5949),E(5950),E(5951),E(5952)/'AL D','ISTA','NCE ','DIRE'/ 00174300
      DATA E(5953),E(5954),E(5955),E(5956)/'CTIO','N BE','TWEE','N CU'/ 00174400
      DATA E(5957),E(5958),E(5959),E(5960)/'TTER','  AN','D SU','RFAC'/ 00174500
      DATA E(5961),E(5962),E(5963),E(5964)/'E.  ','INIT','IAL ','PREF'/ 00174600
      DATA E(5965),E(5966),E(5967),E(5968)/'ERRE','D DI','RECT','ION '/ 00174700
      DATA E(5969),E(5970),E(5971),E(5972)/'DOES',' NOT',' INT','ERSE'/ 00174800
      DATA E(5973),E(5974),E(5975),E(5976)/'CT  ','SURF','ACE.','    '/ 00174900
      DATA E(5977),E(5978),E(5979),E(5980)/'COUL','D NO','T CA','LCUL'/ 00175000
      DATA E(5981),E(5982),E(5983),E(5984)/'ATE ','SURF','ACE ','NORM'/ 00175100
      DATA E(5985),E(5986),E(5987),E(5988)/'AL A','T SU','RFAC','E PO'/ 00175200
      DATA E(5989),E(5990),E(5991),E(5992)/'INT ',' (SE','E CO','MPUT'/ 00175300
      DATA E(5993),E(5994),E(5995),E(5996)/'ER P','ROGR','AMME','R). '/ 00175400
      DATA E(5997),E(5998),E(5999),E(6000)/'SYNT','HETI','C CU','RVE '/ 00175500
      DATA E(6001),E(6002),E(6003),E(6004)/'NOT ','NOW ','PROG','RAMM'/ 00175600
      DATA E(6005),E(6006),E(6007),E(6008)/'ED F','OR A','RELE','M   '/ 00175700
      DATA E(6009),E(6010),E(6011),E(6012)/'RADA','R EX','HAUS','TED '/ 00175800
      DATA E(6013),E(6014),E(6015),E(6016)/'ALL ','TRIE','S   ','COUL'/ 00175900
      DATA E(6017),E(6018),E(6019),E(6020)/'D NO','T CA','LCUL','ATE '/ 00176000
      DATA E(6021),E(6022),E(6023),E(6024)/'UI V','ECTO','R ST','ARTI'/ 00176100
      DATA E(6025),E(6026),E(6027),E(6028)/'NG W','ITH ','TWO ','OR M'/ 00176200
      DATA E(6029),E(6030),E(6031),E(6032)/'ORE ',' DIR','ECTI','ONS.'/ 00176300
      DATA E(6033),E(6034),E(6035),E(6036)/' (SE','E CO','MPUT','ER P'/ 00176400
      DATA E(6037),E(6038),E(6039),E(6040)/'ROGR','AMME','R). ','CUTT'/ 00176500
      DATA E(6041),E(6042),E(6043),E(6044)/'ER R','EFER','ENCE',' POI'/ 00176600
      DATA E(6045),E(6046),E(6047),E(6048)/'NT A','ND S','URFA','CE C'/ 00176700
      DATA E(6049),E(6050),E(6051),E(6052)/'ENTE','R OF',' CUR','VATU'/ 00176800
      DATA E(6053),E(6054),E(6055),E(6056)/'RE  ','COIN','CIDE','.   '/ 00176900
      DATA E(6057),E(6058),E(6059),E(6060)/'UNAB','LE T','O CA','LCUL'/ 00177000
      DATA E(6061),E(6062),E(6063),E(6064)/'ATE ','SATI','SFAC','TORY'/ 00177100
      DATA E(6065),E(6066),E(6067),E(6068)/' TOO','L NO','RMAL','.   '/ 00177200
      DATA E(6069),E(6070),E(6071),E(6072)/'DIFF','ICUL','TY I','N LO'/ 00177300
      DATA E(6073),E(6074),E(6075),E(6076)/'CATI','NG S','URFA','CE. '/ 00177400
      DATA E(6077),E(6078),E(6079),E(6080)/'ZERO',' TOO','L NO','RMAL'/ 00177500
      DATA E(6081),E(6082),E(6083),E(6084)/'. (S','EE C','OMPU','TER '/ 00177600
      DATA E(6085),E(6086),E(6087),E(6088)/'PROG','RAMM','ER).','    '/ 00177700
      DATA E(6089),E(6090),E(6091),E(6092)/'COUL','D NO','T FI','ND D'/ 00177800
      DATA E(6093),E(6094),E(6095),E(6096)/'IREC','TION',' VEC','TOR '/ 00177900
      DATA E(6097),E(6098),E(6099),E(6100)/'THAT',' INT','ERSE','CTS '/ 00178000
      DATA E(6101),E(6102),E(6103),E(6104)/'THE ','SURF','ACE.','    '/ 00178100
      DATA E(6105),E(6106),E(6107),E(6108)/'''NOD','ER'' ','OR ''',     00178200
     +'DERI'/                                                           00178300
      DATA E(6109),E(6110),E(6111),E(6112)/'V'' N','OT D','EFIN','ED. '/00178400
      DATA E(6113),E(6114),E(6115),E(6116)/'INCO','NSIS','TENT',' WIT'/ 00178500
      DATA E(6117),E(6118),E(6119),E(6120)/'H  P','ARAM','ETRI','C SU'/ 00178600
      DATA E(6121),E(6122),E(6123),E(6124)/'RFAC','E SO','UBRO','UTIN'/ 00178700
      DATA E(6125),E(6126),E(6127),E(6128)/'E. M','ODIF','IER ','DISR'/ 00178800
      DATA E(6129),E(6130),E(6131),E(6132)/'EGAR','DED.','    ','COUL'/ 00178900
      DATA E(6133),E(6134),E(6135),E(6136)/'D NO','T PE','RFOR','M AR'/ 00179000
      DATA E(6137),E(6138),E(6139),E(6140)/'ELEM',' COM','PUTA','TION'/ 00179100
      DATA E(6141),E(6142),E(6143),E(6144)/' DUE',' TO ','ZERO',' SUR'/ 00179200
      DATA E(6145),E(6146),E(6147),E(6148)/'FACE','  NO','RMAL','. CH'/ 00179300
      DATA E(6149),E(6150),E(6151),E(6152)/'ECK ','DERI','VATI','VES '/ 00179400
      DATA E(6153),E(6154),E(6155),E(6156)/'IN P','ARAM','ETRI','C SU'/ 00179500
      DATA E(6157),E(6158),E(6159),E(6160)/'BROU','TINE','.   ','PARA'/ 00179600
      DATA E(6161),E(6162),E(6163),E(6164)/'METR','IC S','URFA','CE F'/ 00179700
      DATA E(6165),E(6166),E(6167),E(6168)/'AMIL','Y PA','RAME','TER '/ 00179800
      DATA E(6169),E(6170),E(6171),E(6172)/'IS N','OT D','EFIN','ED. '/ 00179900
      DATA E(6173),E(6174),E(6175),E(6176)/'PARA','METR','IC S','URFA'/ 00180000
      DATA E(6177),E(6178),E(6179),E(6180)/'CE P','ARAM','ETER',' >U<'/ 00180100
      DATA E(6181),E(6182),E(6183),E(6184)/' IS ','NOT ','DEFI','NED.'/ 00180200
      DATA E(6185),E(6186),E(6187),E(6188)/'    ','PARA','METR','IC S'/ 00180300
      DATA E(6189),E(6190),E(6191),E(6192)/'URFA','CE P','ARAM','ETER'/ 00180400
      DATA E(6193),E(6194),E(6195),E(6196)/' >V<',' IS ','NOT ','DEFI'/ 00180500
      DATA E(6197),E(6198),E(6199),E(6200)/'NED.','    ','THE ','PARA'/ 00180600
      DATA E(6201),E(6202),E(6203),E(6204)/'METR','IC S','UBRO','UTIN'/ 00180700
      DATA E(6205),E(6206),E(6207),E(6208)/'E (L','OAD ','MODU','LE) '/ 00180800
      DATA E(6209),E(6210),E(6211),E(6212)/'DOES',' NOT',' EXI','ST  '/ 00180900
      DATA E(6213),E(6214),E(6215),E(6216)/'IN J','OB L','IBRA','RY. '/ 00181000
      DATA E(6217),E(6218),E(6219),E(6220)/'CANN','OT I','TERA','TE T'/ 00181100
      DATA E(6221),E(6222),E(6223),E(6224)/'O A ','ROOT',' OF ','THE '/ 00181200
      DATA E(6225),E(6226),E(6227),E(6228)/'CUBI','C EQ','UATI','ON I'/ 00181300
      DATA E(6229),E(6230),E(6231),E(6232)/'N  T','HIS ','SEGM','ENT.'/ 00181400
      DATA E(6233),E(6234),E(6235),E(6236)/'    ','TOO ','MANY',' STA'/ 00181500
      DATA E(6237),E(6238),E(6239),E(6240)/'TEME','NTS ','IN T','HIS '/ 00181600
      DATA E(6241),E(6242),E(6243),E(6244)/'PART',' PRO','GRAM','.   '/ 00181700
      DATA E(6245),E(6246),E(6247),E(6248)/'LARG','EST ','CANO','NICA'/ 00181800
      DATA E(6249),E(6250),E(6251),E(6252)/'L FO','RM I','S TO','O LA'/ 00181900
      DATA E(6253),E(6254),E(6255),E(6256)/'RGE.','    ','INDE','X OU'/ 00182000
      DATA E(6257),E(6258),E(6259),E(6260)/'T OF',' RAN','GE. ','SYST'/ 00182100
      DATA E(6261),E(6262),E(6263),E(6264)/'EM E','RROR','. IL','LEGA'/ 00182200
      DATA E(6265),E(6266),E(6267),E(6268)/'L I.','L. I','NSTR','UCTI'/ 00182300
      DATA E(6269),E(6270),E(6271),E(6272)/'ON. ','SYST','EM E','RROR'/ 00182400
      DATA E(6273),E(6274),E(6275),E(6276)/'. IL','LEGA','L CA','LL I'/ 00182500
      DATA E(6277),E(6278),E(6279),E(6280)/'.L. ','INST','RUCT','ION.'/ 00182600
      DATA E(6281),E(6282),E(6283),E(6284)/'    ','UNDE','FINE','D LA'/ 00182700
      DATA E(6285),E(6286),E(6287),E(6288)/'BEL ','REFE','RENC','ED. '/ 00182800
C                                                                       00182900
      END                                                               00183000
**** SOURCE FILE : M0000903.V06   ***
*
C.....FORTRAN SUBROUTINE  ....FINI           8/68                 AR,HG FINI0001
C.....FORTRAN SUBROUTINE             FINI.....              3/1/68   GK FINI0002
      SUBROUTINE FINI                                                   FINI0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              FINI0020
C                                                                       FINI0030
C                                                                       FINI0040
C                                                                       FINI0050
C                                                                       FINI0060
      INCLUDE 'TOTAL.INC'                                               FINI0194
      INCLUDE 'IFXCOR.INC'                                              FINI0334
      INCLUDE 'ISHR18.INC'                                              FINI0432
      INCLUDE 'KNUMBR.INC'                                              FINI0558
C                                                                       FINI0590
C...            SYSTEM I/O FILE NAMES                                   FINI0595
C                                                                       FINI0600
      INCLUDE 'SYMFIL.INC'                                              FINI0607
C                                                                       FINI0660
      DIMENSION KFINI(8)                                                FINI0670
C                                                                       FINI0680
      INTEGER Z4E,BCDF                                                  FINI0682
      PARAMETER (Z4E=1308622848)                                        FINI0684
      LOGICAL FIRST                                                     FINI0686
      SAVE KFINI,FIRST                                                  FINI0688
      DATA KFINI /0,0,Z4E,0,Z4E,1,Z4E,1/,FIRST/.TRUE./                  FINI0691
C... INITIALIZE FINI RECORD                                             FINI0692
      IF (FIRST) THEN                                                   FINI0693
        KFINI(1)=BCDF('FINI')                                           FINI0694
        KFINI(2)=BCDF('    ')                                           FINI0695
        FIRST=.FALSE.                                                   FINI0696
      ENDIF                                                             FINI0697
C                                                                       FINI0702
C...  WRITE EXFILE RECORD                                               FINI0704
C                                                                       FINI0706
      CALL APT298(4,X,X)                                                FINI0708
      CALL RECORD(KFINI(4))                                             FINI0710
      NR=0                                                              FINI0765
      CALL EWRITE(EXFILE,NR,KFINI,8,IR)                                 FINI0770
      CALL TAPOP(EXFILE,-2)                                             FINI0772
      CALL TAPOP(ELFIL2,-1)                                             FINI0773
      CALL TAPOP(ELFIL3,-1)                                             FINI0774
      CALL TAPOP(AXFILE,-1)                                             FINI0775
      CALL TAPOP(XNUM,-1)                                               FINI0776
      RETURN                                                            FINI0790
       END                                                              FINI0800
**** SOURCE FILE : M0000906.V01   ***
*
C...  FORTRAN SUBROUTINE GCIRCL                  7/70      RW           GCIR0010
C                                                                       GCIR0020
C  PURPOSE                                                              GCIR0030
C        THIS SUBROUTINE TRANSLATES THE CANONICAL FORMS                 GCIR0040
C        OF THE APT GEOMETRY (CIRCLE) INTO THE COEFFICIENTS             GCIR0050
C        OF THE QUADRATIC. COEFFICIENTS ARE STORED                      GCIR0060
C        IN "QUADBF" AND THE QUADRATIC OUTPUT                           GCIR0070
C        SUBROUTINE IS CALLED.                                          GCIR0080
C                                                                       GCIR0090
C        CANONICAL FORM OF CIRCLE                                       GCIR0100
C        1. X-COORD OF CENTER          (XC)                             GCIR0110
C        2. Y-COORD OF CENTER          (YC)                             GCIR0120
C        3. Z-COORD OF CENTER                                           GCIR0130
C        4. X-COMPONENT OF AXIS VECTOR = 0                              GCIR0140
C        5. Y-COMPONENT OF AXIS VECTOR = 0                              GCIR0150
C        6. Z-COMPONENT OF AXIS VECTOR = 1                              GCIR0160
C        7. RADIUS OF CIRCLE           (R)                              GCIR0170
C                                                                       GCIR0180
C        EQUATION                                                       GCIR0190
C        X**2 + Y**2 - 2XC*X - 2YC*Y + (XC**2+YC**2-R**2) = 0.          GCIR0200
C                                                                       GCIR0210
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GCIR0220
C                                                                       GCIR0230
      SUBROUTINE GCIRCL(CANON,QUADBF)                                   GCIR0240
C                                                                       GCIR0250
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           GCIR0260
      DIMENSION CANON(10),QUADBF(10)                                    GCIR0270
C                                                                       GCIR0280
      DO 2 J=1,2                                                        GCIR0290
 2    QUADBF(J)=1.0                                                     GCIR0300
C                                                                       GCIR0310
      DO 3 J=3,6                                                        GCIR0320
 3    QUADBF(J)=0.0                                                     GCIR0330
C                                                                       GCIR0340
      KX=1                                                              GCIR0350
      KY=2                                                              GCIR0360
C        COMPUTE C*X TERM                                               GCIR0370
C                                                                       GCIR0380
      QUADBF(7)=CANON(KX)*(-2.0)                                        GCIR0390
C                                                                       GCIR0400
C        COMPUTE C*Y TERM                                               GCIR0410
C                                                                       GCIR0420
      QUADBF(8)=CANON(KY)*(-2.0)                                        GCIR0430
C                                                                       GCIR0440
C        C*Z TERM EQUAL ZERO                                            GCIR0450
C                                                                       GCIR0460
      QUADBF(9)=0.0                                                     GCIR0470
C                                                                       GCIR0480
C        COMPUTE CONSTANT TERM                                          GCIR0490
C                                                                       GCIR0500
      KR=7                                                              GCIR0510
      QUADBF(10)=(CANON(KX)**2)+(CANON(KY)**2)                          GCIR0520
      QUADBF(10)=QUADBF(10)-(CANON(KR)**2)                              GCIR0530
C                                                                       GCIR0540
C        RETURN TO CALLING PROGRAM                                      GCIR0550
C                                                                       GCIR0560
      RETURN                                                            GCIR0570
      END                                                               GCIR0580
**** SOURCE FILE : M0000907.V01   ***
*
C...  FORTRAN SUBROUTINE GCONE                   7/70      RW           CONE0010
C                                                                       CONE0020
C        CANONICAL FORM OF CONE                                         CONE0030
C        1. X-COORDINATE OF VERTEX                (XO)                  CONE0040
C        2. Y-COORDINATE OF VERTEX                (YO)                  CONE0050
C        3. Z-COORDINATE OF VERTEX                (ZO)                  CONE0060
C        4. X-COMPONENT OF NORMALIZED AXIS VECTOR (A)                   CONE0070
C        5. Y-COMPONENT OF NORMALIZED AXIS VECTOR (B)                   CONE0080
C        6. Z-COMPONENT OF NORMALIZED AXIS VECTOR (C)                   CONE0090
C        7. COSINE OF VERTEX HALF-ANGLE           (V)                   CONE0100
C                                                                       CONE0110
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   CONE0120
C                                                                       CONE0130
      SUBROUTINE GCONE(CANON,QUADBF)                                    CONE0140
C                                                                       CONE0150
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           CONE0160
      DIMENSION CANON(10),QUADBF(10)                                    CONE0170
C        INITIALIZATION                                                 CONE0180
C                                                                       CONE0190
      XO=CANON(1)                                                       CONE0200
      YO=CANON(2)                                                       CONE0210
      ZO=CANON(3)                                                       CONE0220
      A=CANON(4)                                                        CONE0230
      B=CANON(5)                                                        CONE0240
      C=CANON(6)                                                        CONE0250
      V=CANON(7)                                                        CONE0260
      DI=1.-C**2                                                        CONE0270
      FR=V**2/(1.-V**2)                                                 CONE0280
C                                                                       CONE0290
C     CHECK FOR DEFAULT CASE                                            CONE0300
C                                                                       CONE0310
      IF(A.NE.B) GO TO 10                                               CONE0320
      IF(A.NE.0) GO TO 10                                               CONE0330
C                                                                       CONE0340
      DO 2 J=1,2                                                        CONE0350
    2 QUADBF(J)=FR                                                      CONE0360
C                                                                       CONE0370
      QUADBF(3)= -1.0                                                   CONE0380
C                                                                       CONE0390
      DO 3 J=4,6                                                        CONE0400
    3 QUADBF(J)=0.0                                                     CONE0410
C                                                                       CONE0420
      QUADBF(7)=-2.0*XO*FR                                              CONE0430
      QUADBF(8)=-2.0*YO*FR                                              CONE0440
      QUADBF(9)= 2.0*ZO                                                 CONE0450
      QUADBF(10)=FR*XO**2+FR*YO**2-ZO**2                                CONE0460
C                                                                       CONE0470
      GO TO 100                                                         CONE0480
C                                                                       CONE0490
C     ALL OTHER CASES                                                   CONE0500
C                                                                       CONE0510
   10 QUADBF(1)=FR*((C**2*A**2+B**2)/DI)-A**2                           CONE0520
      QUADBF(2)=FR*((C**2*B**2+A**2)/DI)-B**2                           CONE0530
      QUADBF(3)=FR*DI-C**2                                              CONE0540
      QUADBF(4)=-2.0*(B*C*FR+B*C)                                       CONE0550
      QUADBF(5)=-2.0*(A*C*FR+A*C)                                       CONE0560
      QUADBF(6)=2.0*(FR*((A*B*C**2-A*B)/DI)-A*B)                        CONE0570
      QUADBF(7)=2.0*(FR*((-XO*A**2*C**2-YO*A*B*C**2-XO*B**2+YO*A*B)/DI+ZCONE0580
     1O*A*C)+XO*A**2+YO*A*B+ZO*A*C)                                     CONE0590
      QUADBF(8)=2.0*(FR*((-YO*B**2*C**2-XO*A*B*C**2-YO*A**2+XO*A*B)/DI+ZCONE0600
     1O*B*C)+YO*B**2+XO*A*B+ZO*B*C)                                     CONE0610
      QUADBF(9)=2.0*(FR*(-DI*ZO+XO*A*C+YO*B*C)+ZO*C**2+XO*A*C+YO*B*C)   CONE0620
      QUADBF(10)=FR*((XO**2*A**2*C**2+YO**2*B**2*C**2+2.0*XO*YO*A*B*C**2CONE0630
     1+XO**2*B**2+YO**2*A**2-2.0*XO*YO*A*B)/DI+DI*ZO**2-2.0*XO*ZO*A*C-2.CONE0640
     20*YO*ZO*B*C)-XO**2*A**2-YO**2*B**2-ZO**2*C**2-2.0*XO*YO*A*B-2.0*XOCONE0650
     3*ZO*A*C-2.0*YO*ZO*B*C                                             CONE0660
C                                                                       CONE0670
C     ONLY ONE OF THE THREE SQUARED-TERM COEFFICIENTS SHOULD BE NEGATIVECONE0680
C     IF TWO ARE NEGATIVE, MULTIPLY THE EQUATION BY MINUS ONE.          CONE0690
C                                                                       CONE0700
      IT = 0                                                            CONE0710
      IF (QUADBF(1) .LT. 0.0) IT=IT+1                                   CONE0720
      IF (QUADBF(2) .LT. 0.0) IT=IT+1                                   CONE0730
      IF (QUADBF(3) .LT. 0.0) IT=IT+1                                   CONE0740
      IF (IT .LE. 1) GO TO 100                                          CONE0750
      DO 60 I=1,10                                                      CONE0760
 60   QUADBF(I) = -QUADBF(I)                                            CONE0770
 100  RETURN                                                            CONE0780
      END                                                               CONE0790
**** SOURCE FILE : M0000630.V01   ***
*
C                                                                       00000020
      SUBROUTINE GCUBIC(P,Q,R,S,Z,NZ)                                   00000040
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000060
C------ MODULAR SCULPTURED SURFACE ROUTINE ALSO SHARED BY PARAMETRIC    00000080
C------ SURFACES. GENERAL SOLUTION OF CUBIC EQN.                        00000100
C------ INPUT ARE COEFFICIENTS OF CUBIC EQN' P*X**3+Q*X**2+R*X+S=0.     00000120
C------ OUTPUT IS SET OF REAL ROOTS Z(I), WHERE I=1 TO NZ               00000140
C------ NZ IS THE TOTAL NUMBER OF REAL ROOTS.                           00000160
C------ PROGRAM HANDLES QUADRATICS AND LINEAR EQNS AS SPECIAL CASES     00000180
      DIMENSION Z(3)                                                    00000200
      DATA ONE,THD,SMAL/1.D0,0.333333333333333D0,1.0D-10/               00000220
      DATA PI,HPI,TPI,TPIO3/3.1415926536D0,1.5707963268D0,              00000240
     X                    6.2831853072D0,2.0943951024D0/                00000260
      NZ=0                                                              00000280
      Z(1)=9999.0D0                                                     00000300
      Z(2)=9999.0D0                                                     00000320
      Z(3)=9999.0D0                                                     00000340
      IF(DABS(P).LT.SMAL) GO TO 200                                     00000360
      TR=Q/(3.0*P)                                                      00000380
      A=(R-Q*TR)/P                                                      00000400
      B=((2*THD*Q*TR-R)*TR+S)/P                                         00000420
      D=B*B/4.0+A*A*A/27.0                                              00000440
      BH=-B/2.0                                                         00000460
      IF(D) 20,10,10                                                    00000480
   10 DS=DSQRT(D)                                                       00000500
      T1=BH+DS                                                          00000520
      T2=BH-DS                                                          00000540
      S1=DSIGN(ONE,T1)                                                  00000560
      S2=DSIGN(ONE,T2)                                                  00000580
      E=S1*(S1*T1)**THD+S2*(S2*T2)**THD                                 00000600
      F=A+E*E                                                           00000620
      D=E*E-4.0*F                                                       00000640
      NZ=1                                                              00000660
      Z(1)=E-TR                                                         00000680
      IF(D) 999,30,30                                                   00000700
   30 D=DSQRT(D)                                                        00000720
      Z(2)=(-E+D)/2.0-TR                                                00000740
      Z(3)=(-E-D)/2.0-TR                                                00000760
      NZ=3                                                              00000761
  999 RETURN                                                            00000780
   20 S2=DSQRT(-D)                                                      00000800
      S1=BH                                                             00000820
      T1=DSQRT(S1*S1+S2*S2)                                             00000840
      T2=DARCOS(S1/T1)                                                  00000860
      IF(S2.LT.0.0) T2=T2+PI                                            00000880
      BH=2.0*T1**THD                                                    00000900
      W1=T2/3.0                                                         00000920
      Z(1)=BH*DCOS(W1)-TR                                               00000940
      Z(2)=BH*DCOS(W1-TPIO3)-TR                                         00000960
      Z(3)=BH*DCOS(W1-TPIO3-TPIO3)-TR                                   00000980
      NZ=3                                                              00001000
      RETURN                                                            00001020
  200 IF(DABS(Q).LT.SMAL) GO TO 300                                     00001040
      D=R*R-4.0*Q*S                                                     00001060
      IF(D.LT.0.0) RETURN                                               00001080
      D=DSQRT(D)                                                        00001100
      W1=Q+Q                                                            00001120
      Z(1)=(-R+D)/W1                                                    00001140
      Z(2)=(-R-D)/W1                                                    00001160
      NZ=2                                                              00001180
      RETURN                                                            00001200
  300 IF(DABS(R).LT.SMAL) RETURN                                        00001220
      Z(1)=-S/R                                                         00001240
      NZ=1                                                              00001260
      RETURN                                                            00001280
      END                                                               00001300
**** SOURCE FILE : M0000909.V01   ***
*
C...  FORTRAN SUBROUTINE GCYL                    6/70      RW           GCYL0010
C                                                                       GCYL0020
C        CANONICAL FORM OF CYLINDER                                     GCYL0030
C        1. X-COORDINATE OF POINT ON AXIS         (XO)                  GCYL0040
C        2. Y-COORDINATE OF POINT ON AXIS         (YO)                  GCYL0050
C        3. Z-COORDINATE OF POINT ON AXIS         (ZO)                  GCYL0060
C        4. X-COMPONENT OF NORMALIZED AXIS VECTOR (A)                   GCYL0070
C        5. Y-COMPONENT OF NORMALIZED AXIS VECTOR (B)                   GCYL0080
C        6. Z-COMPONENT OF NORMALIZED AXIS VECTOR (C)                   GCYL0090
C        7. RADIUS OF CYLINDER                    (R)                   GCYL0100
C                                                                       GCYL0110
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GCYL0120
      SUBROUTINE GCYL(CANON,QUADBF)                                     GCYL0130
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               GCYL0140
      DIMENSION CANON(10),QUADBF(10)                                    GCYL0150
C                                                                       GCYL0160
C        INITALIZATION                                                  GCYL0170
C                                                                       GCYL0180
      XO=CANON(1)                                                       GCYL0190
      YO=CANON(2)                                                       GCYL0200
      ZO=CANON(3)                                                       GCYL0210
      A=CANON(4)                                                        GCYL0220
      B=CANON(5)                                                        GCYL0230
      C=CANON(6)                                                        GCYL0240
      R=CANON(7)                                                        GCYL0250
      DI=1.-C**2                                                        GCYL0260
C                                                                       GCYL0270
C                                                                       GCYL0280
C       DEFAULT CASE                                                    GCYL0290
C                                                                       GCYL0300
      IF(A.NE.B)GO TO 10                                                GCYL0310
      IF(A.NE.0)GO TO 10                                                GCYL0320
C                                                                       GCYL0330
      DO 2 J=1,2                                                        GCYL0340
    2 QUADBF(J)=1.0                                                     GCYL0350
C                                                                       GCYL0360
      DO 3 J=3,6                                                        GCYL0370
    3 QUADBF(J)=0.0                                                     GCYL0380
C                                                                       GCYL0390
      QUADBF(7)=-2.0*XO                                                 GCYL0400
      QUADBF(8)=-2.0*YO                                                 GCYL0410
      QUADBF(9)=0.0                                                     GCYL0420
      QUADBF(10)=XO**2+YO**2-R**2                                       GCYL0430
C                                                                       GCYL0440
      GO TO 50                                                          GCYL0450
C                                                                       GCYL0460
C                                                                       GCYL0470
C                                                                       GCYL0480
   10 QUADBF(1)=(A**2*C**2+B**2)/DI                                     GCYL0490
C                                                                       GCYL0500
      QUADBF(2)=(B**2*C**2+A**2)/DI                                     GCYL0510
C                                                                       GCYL0520
      QUADBF(3)=DI                                                      GCYL0530
C                                                                       GCYL0540
      QUADBF(4)=-2.0*B*C                                                GCYL0550
C                                                                       GCYL0560
      QUADBF(5)=-2.0*A*C                                                GCYL0570
C                                                                       GCYL0580
      QUADBF(6)=2.0*((A*B*C**2-A*B)/DI)                                 GCYL0590
C                                                                       GCYL0600
      QUADBF(7)=2.0*((-XO*A**2*C**2-YO*A*B*C**2-XO*B**2+YO*A*B)/DI+ZO*A*GCYL0610
     1C)                                                                GCYL0620
C                                                                       GCYL0630
      QUADBF(8)=2.0*((-YO*B**2*C**2-XO*A*B*C**2+XO*A*B-YO*A**2)/DI+ZO*B*GCYL0640
     1C)                                                                GCYL0650
C                                                                       GCYL0660
      QUADBF(9)=2.0*(-ZO*DI+A*C*XO+YO*B*C)                              GCYL0670
C                                                                       GCYL0680
      QUADBF(10)=(XO**2*A**2*C**2+YO**2*B**2*C**2+2.0*XO*YO*A*B*C**2+XO*GCYL0690
     1*2*B**2-2.0*XO*YO*A*B+YO**2*A**2)/DI+ZO**2*DI-2.0*XO*ZO*A*C-2.0*YOGCYL0700
     2*ZO*B*C-R**2                                                      GCYL0710
C                                                                       GCYL0720
 50    CONTINUE                                                         GCYL0730
C       RETURN TO CALLING PROGRAM                                       GCYL0740
      RETURN                                                            GCYL0750
      END                                                               GCYL0760
**** SOURCE FILE : M0000918.V01   ***
*
C...  FORTRAN SUBROUTINE GPLANE                  6/70      RW           GPLN0010
C                                                                       GPLN0020
C  PURPOSE                                                              GPLN0030
C        THIS SUBROUTINE TRANSLATES THE CANONICAL FORMS                 GPLN0040
C        OF THE APT GEOMETRY (PLANE) INTO THE COEFFICIENTS OF           GPLN0050
C        THE QUADRATIC. COEFFICIENTS ARE STORED                         GPLN0060
C        IN "QUADBF".                                                   GPLN0070
C        SUBROUTINE IS CALLED.                                          GPLN0080
C                                                                       GPLN0090
C        THE CANONICAL FORM OF PLANE IS C*X + C*Y + C*Z + D = 0         GPLN0100
C        QUADRATIC EQUATION IS C*X + C*Y + C*Z - D = 0                  GPLN0110
C                                                                       GPLN0120
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GPLN0130
C                                                                       GPLN0140
      SUBROUTINE GPLANE(CANON,QUADBF)                                   GPLN0150
C                                                                       GPLN0160
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               GPLN0170
      DIMENSION CANON(10),QUADBF(10)                                    GPLN0180
C                                                                       GPLN0190
C        ZERO COEFFICIENTS                                              GPLN0200
C                                                                       GPLN0210
      DO 5 J=1,6                                                        GPLN0220
 5    QUADBF(J)=0.0                                                     GPLN0230
C                                                                       GPLN0240
C        TEST FOR NEGATIVE COEFFICIENTS                                 GPLN0250
C                                                                       GPLN0260
      M = 0                                                             GPLN0270
      DO 6 J = 1,3                                                      GPLN0280
      IF (CANON(J).LT. 0.0) M = M - 1                                   GPLN0290
      IF (CANON(J).GT. 0.0) M = M + 1                                   GPLN0300
 6    CONTINUE                                                          GPLN0310
C                                                                       GPLN0320
C        IF A MAJORITY OF COEFFICIENTS ARE NEGATIVE, MULTIPLY BY -1     GPLN0330
      S = 1.0                                                           GPLN0340
      IF (M.LT.0) S = -1.0                                              GPLN0350
      QUADBF(7) = S * CANON(1)                                          GPLN0360
      QUADBF(8) = S * CANON(2)                                          GPLN0370
      QUADBF(9) = S * CANON(3)                                          GPLN0380
      QUADBF(10)=-S * CANON(4)                                          GPLN0390
C                                                                       GPLN0400
C                                                                       GPLN0410
C     RETURN TO CALLING PROGRAM                                         GPLN0420
C                                                                       GPLN0430
 8    RETURN                                                            GPLN0440
      END                                                               GPLN0450
**** SOURCE FILE : M0000919.V01   ***
*
C...  FORTRAN SUBROUTINE GQUAD                   7/70      RW           GQUD0010
C        CANONICAL FORM OF QUADRATIC                                    GQUD0020
C        1. COEFFICIENT OF X**2 (A)                                     GQUD0030
C        2. COEFFICIENT OF Y**2 (B)                                     GQUD0040
C        3. COEFFICIENT OF Z**2 (C)                                     GQUD0050
C        4. CONSTANT TERM       (D)                                     GQUD0060
C        5. COEFFICIENT OF 2YZ  (F)                                     GQUD0070
C        6. COEFFICIENT OF 2XZ  (G)                                     GQUD0080
C        7. COEFFICIENT OF 2XY  (H)                                     GQUD0090
C        8. COEFFICIENT OF 2X   (P)                                     GQUD0100
C        9. COEFFICIENT OF 2Y   (Q)                                     GQUD0110
C       10. COEFFICIENT OF 2Z   (R)                                     GQUD0120
C                                                                       GQUD0130
C        EQUATION                                                       GQUD0140
C                                                                       GQUD0150
C        A*X**2+B*Y**2+C*Z**2+2*F*Y*Z+                                  GQUD0160
C        2*G*X*Z+2*H*X*Y+2*P*X+2*Q*Y+                                   GQUD0170
C        2*R*Z+D=0                                                      GQUD0180
C                                                                       GQUD0190
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GQUD0200
C                                                                       GQUD0210
      SUBROUTINE GQUAD(CANON,QUADBF)                                    GQUD0220
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           GQUD0230
      DIMENSION CANON(10),QUADBF(10)                                    GQUD0240
C                                                                       GQUD0250
      DO 2 I=1,3                                                        GQUD0260
 2    QUADBF(I)=CANON(I)                                                GQUD0270
      DO 5 I=4,9                                                        GQUD0280
 5    QUADBF(I)=CANON(I+1) * 2.0                                        GQUD0290
      QUADBF(10)=CANON(4)                                               GQUD0300
C                                                                       GQUD0310
      RETURN                                                            GQUD0320
      END                                                               GQUD0330
**** SOURCE FILE : M0000920.V01   ***
*
C...  FORTRAN SUBROUTINE GSPHER                  7/70      RW           GSPH0010
C                                                                       GSPH0020
C  PURPOSE                                                              GSPH0030
C        THIS SUBROUTINE TRANSLATES THE CANONICAL FORMS                 GSPH0040
C        OF THE APT GEOMETRY (SPHERE) INTO THE COEFFICIENTS             GSPH0050
C        OF THE QUADRATIC. COEFFICIENTS ARE STORED IN                   GSPH0060
C        "QUADBF" AND THE QUADRATIC OUTPUT                              GSPH0070
C        SUBROUTINE IS CALLED.                                          GSPH0080
C                                                                       GSPH0090
C                                                                       GSPH0100
C        CANONICAL FORM OF SPHERE                                       GSPH0110
C        1. X-COORDINATE OF CENTER OF SPHERE     (XC)                   GSPH0120
C        2. Y-COORDINATE OF CENTER OF SPHERE     (YC)                   GSPH0130
C        3. Z-COORDINATE OF CENTER OF SPHERE     (ZC)                   GSPH0140
C        4. RADIUS OF SPHERE                     (R)                    GSPH0150
C                                                                       GSPH0160
C        EQUATION                                                       GSPH0170
C        X**2 + Y**2 + Z**2 - 2XC*X - 2YC*Y - 2ZC*Z +                   GSPH0180
C                            (XC**2 + YC**2 + ZC**2 - R**2)             GSPH0190
C                                                                       GSPH0200
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GSPH0210
C                                                                       GSPH0220
      SUBROUTINE GSPHER(CANON,QUADBF)                                   GSPH0230
C                                                                       GSPH0240
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           GSPH0250
      DIMENSION CANON(10),QUADBF(10)                                    GSPH0260
C                                                                       GSPH0270
      DO 2 J=1,3                                                        GSPH0280
 2    QUADBF(J)=1.0                                                     GSPH0290
C                                                                       GSPH0300
      DO 3 J=4,6                                                        GSPH0310
 3    QUADBF(J)=0.0                                                     GSPH0320
C                                                                       GSPH0330
C        COMPUTE C*X TERM                                               GSPH0340
C                                                                       GSPH0350
      KX=1                                                              GSPH0360
      KY=2                                                              GSPH0370
      KZ=3                                                              GSPH0380
      KR=4                                                              GSPH0390
      QUADBF(7)=CANON(KX)*(-2.0)                                        GSPH0400
C                                                                       GSPH0410
C        COMPUTE C*Y TERM                                               GSPH0420
C                                                                       GSPH0430
      QUADBF(8)=CANON(KY)*(-2.0)                                        GSPH0440
C                                                                       GSPH0450
C        COMPUTE C*Z TERM                                               GSPH0460
C                                                                       GSPH0470
      QUADBF(9)=CANON(KZ)*(-2.0)                                        GSPH0480
C                                                                       GSPH0490
C        COMPUTE CONSTANT TERM                                          GSPH0500
C                                                                       GSPH0510
      QUADBF(10)=(CANON(KX)**2)+(CANON(KY)**2)+(CANON(KZ)**2)           GSPH0520
      QUADBF(10)=QUADBF(10)-(CANON(KR)**2)                              GSPH0530
C                                                                       GSPH0540
C        RETURN TO CALLING PROGRAM                                      GSPH0550
C                                                                       GSPH0560
      RETURN                                                            GSPH0570
      END                                                               GSPH0580
**** SOURCE FILE : M0000921.V02   ***
*
C...  FORTRAN SUBROUTINE GSURF                   7/70      RW           GSUR0010
C                                                                       GSUR0020
C PURPOSE      CONTROL ROUTINE TO TRANSFORM APT SURFACE CANONICAL FORMS GSUR0030
C              INTO QUADRIC EQUATION COEFFICIENTS.                      GSUR0040
C                                                                       GSUR0050
C CALLING SEQUENCE    CALL GSURF(COEBUF,CANON,MODE,ISIZ,ERRFLG)         GSUR0060
C                                                                       GSUR0070
C ARGUMENTS    COEBUF        ARRAY TO CONTAIN QUADRIC EQUATION COEF.    GSUR0080
C                                                                       GSUR0090
C              CANON         INPUT ARRAY CONTAINING CANONICAL FORM      GSUR0100
C                                                                       GSUR0110
C              MODE          MODE OF CANONICAL FORM                     GSUR0120
C                                                                       GSUR0130
C              ISIZ          SIZE OF CANONICAL FORM                     GSUR0140
C                                                                       GSUR0150
C              ERRFLG        LOGICAL FLAG WHICH IS RETURNED AS TRUE ONLYGSUR0160
C                            IF MODE IS NOT A QUADRIC SURFACE.          GSUR0170
C                                                                       GSUR0180
C CALLED BY    APT102                                                   GSUR0190
C              APT104                                                   GSUR0200
C                                                                       GSUR0210
C SUBSIDIARIES TYPE              ENTRY                                  GSUR0220
C              SUBROUTINE        GCIRCL                                 GSUR0230
C              SUBROUTINE        GCONE                                  GSUR0240
C              SUBROUTINE        GCYL                                   GSUR0250
C              SUBROUTINE        GPLANE                                 GSUR0260
C              SUBROUTINE        GQUAD                                  GSUR0270
C              SUBROUTINE        GSPHER                                 GSUR0280
C              SUBROUTINE        TRANSF                                 GSUR0290
C                                                                       GSUR0300
C RESTRICTIONS NONE                                                     GSUR0310
C                                                                       GSUR0320
C DIAGNOSTICS  NONE                                                     GSUR0330
C                                                                       GSUR0340
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GSUR0350
C                                                                       GSUR0360
      SUBROUTINE GSURF(COEBUF,CANON,MODE,ISIZ,ERRFLG)                   GSUR0370
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           GSUR0380
      LOGICAL ERRFLG                                                    GSUR0390
      DIMENSION COEBUF(10),CANON(10),REFSRF(10)                         GSUR0400
C                                                                       GSUR0410
C                                                                       GSUR0440
      INCLUDE 'TOTAL.INC'                                               GSUR0531
      INCLUDE 'LDEF.INC'                                                GSUR0601
      INCLUDE 'KNUMBR.INC'                                              GSUR0609
C                                                                       GSUR0610
C                                                                       GSUR0650
      DO 5 I=1,ISIZ                                                     GSUR0660
    5 REFSRF(I) = CANON(I)                                              GSUR0670
      ERRFLG = .FALSE.                                                  GSUR0680
C                                                                       GSUR0690
C      MODE = 1   2   3   4   5   6   7   8   9 10  11  12  13  14  15  GSUR0700
      GO TO(101,101,103,104,105,106,106,106,109,106,130,130,130,106,130,GSUR0710
C      MODE = 16 17  18  19  20  21  22  23  24  25  26                 GSUR0720
     1      130,130,130,130,130,130,130,130,130,130,130), MODE          GSUR0730
C                                                                       GSUR0740
C...  A LINE OR PLANE.                                                  GSUR0750
C                                                                       GSUR0760
   10 CALL GPLANE (REFSRF, COEBUF)                                      GSUR0770
      GO TO 100                                                         GSUR0780
C                                                                       GSUR0790
C...  A CYLINDER.                                                       GSUR0800
C                                                                       GSUR0810
   30 CALL GCYL (REFSRF, COEBUF)                                        GSUR0820
      GO TO 100                                                         GSUR0830
C                                                                       GSUR0840
C...  A CIRCLE.                                                         GSUR0850
C                                                                       GSUR0860
   40 CALL GCIRCL (REFSRF, COEBUF)                                      GSUR0870
      GO TO 100                                                         GSUR0880
C                                                                       GSUR0890
C...  A SPHERE.                                                         GSUR0900
C                                                                       GSUR0910
   50 CALL GSPHER (REFSRF, COEBUF)                                      GSUR0920
      GO TO 100                                                         GSUR0930
C                                                                       GSUR0940
C...  A HYPERBOLA, LCONIC, ELLIPSE, GCONIC, OR QUADRIC.                 GSUR0950
C                                                                       GSUR0960
   60 CALL GQUAD (REFSRF, COEBUF)                                       GSUR0970
      GO TO 100                                                         GSUR0980
C                                                                       GSUR0990
C...  A CONE.                                                           GSUR1000
C                                                                       GSUR1010
   90 CALL GCONE (REFSRF, COEBUF)                                       GSUR1020
  100 RETURN                                                            GSUR1030
C                                                                       GSUR1040
C...  TRANSFORM TO LOCAL COORDINATE SYSTEM IF REFSYS IN EFFECT.         GSUR1050
C                                                                       GSUR1060
  101 IR = K4                                                           GSUR1070
      ASSIGN 10 TO M                                                    GSUR1080
      GO TO 110                                                         GSUR1090
  103 IR = K5                                                           GSUR1100
      ASSIGN 30 TO M                                                    GSUR1110
      GO TO 110                                                         GSUR1120
  104 IR = K5                                                           GSUR1130
      ASSIGN 40 TO M                                                    GSUR1140
      GO TO 110                                                         GSUR1150
  105 IR = K2                                                           GSUR1160
        ASSIGN 50 TO M                                                  GSUR1170
      GO TO 110                                                         GSUR1180
  106 IR = K1                                                           GSUR1190
      ASSIGN 60 TO M                                                    GSUR1200
      GO TO 110                                                         GSUR1210
  109 IR = K5                                                           GSUR1220
      ASSIGN 90 TO M                                                    GSUR1230
  110 IF(REFFLG) CALL TRANSF(REFSRF,CANON,IR,ISIZ,K0)                   GSUR1240
      GO TO M,(10,30,40,50,60,90)                                       GSUR1250
C                                                                       GSUR1260
  130 ERRFLG = .TRUE.                                                   GSUR1270
      GO TO 100                                                         GSUR1280
      END                                                               GSUR1290
**** SOURCE FILE : M0002844.V04   ***
*
C                                                                       LIND0001
C.....FORTRAN SUBROUTINE             LINDEF...              5/1/68   GK LIND0002
C                                                                       LIND0010
C              FORTRAN LOGICAL FUNCTION LINDEF                          LIND0020
C                                                                       LIND0030
C PURPOSE      TO DETERMINE WHETHER A LINE HAS BEEN DEFINED             LIND0040
C              AND IS A VERTICAL PLANE.                                 LIND0050
C                                                                       LIND0060
C LINKAGE      CALL LINDEF (A, N)                                       LIND0070
C                                                                       LIND0080
C ARGUMENTS    A       ARRAY CONTAINING THE CANONICAL FORM OF           LIND0090
C                      THE LINE                                         LIND0100
C              N       ERROR CODE OF THE DIAGNOSTIC TO BE PRINTED       LIND0110
C                      IN CASE THE PLANE IS NOT VERTICAL                LIND0120
C                                                                       LIND0130
C SUBSIDIARIES TYPE                ERROR                                LIND0140
C              REAL FUNCTION       ABS                                  LIND0150
C              LOGICAL FUNCTION    CKDEF                                LIND0160
C              SUBROUTINE          ERROR                                LIND0170
C                                                                       LIND0180
      LOGICAL FUNCTION LINDEF (LIN,NM)                                  LIND0190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            LIND0200
      DIMENSION LIN(4)                                                  LIND0210
      DOUBLE PRECISION LIN                                              LIND0220
      LOGICAL CKDEF                                                     LIND0230
C                                                                       LIND0240
C                                                                       LIND0250
C                                                                       LIND0260
      INCLUDE 'TOTAL.INC'                                               LIND0391
      INCLUDE 'ZNUMBR.INC'                                              LIND0456
      MN=NM                                                             LIND0475
C                                                                       LIND0480
C                                                                       LIND0490
C...     CHECK WHETHER INPUT CANONICAL FORM IS DEFINED                  LIND0510
C                                                                       LIND0520
      IF (CKDEF(LIN)) GO TO 1                                           LIND0530
C                                                                       LIND0540
C...     CHECK WHETHER LINE IS WITHIN TOLERANCE OF VERTICAL             LIND0550
C                                                                       LIND0560
      IF (DABS(LIN(3)).LE.Z1EM5) GO TO 2                                LIND0570
C                                                                       LIND0580
C...     ISSUE DIAGNOSTIC                                               LIND0590
C                                                                       LIND0600
      CALL ERROR(MN,'LINDEF  ')                                         LIND0610
      IF(MN.EQ.2.OR.MN.EQ.3.OR.MN.EQ.92) GO TO 2                        LIND0615
C                                                                       LIND0620
C...     RETURN VALUE TRUE                                              LIND0630
C                                                                       LIND0640
    1 LINDEF=.TRUE.                                                     LIND0650
      GO TO 9                                                           LIND0660
C                                                                       LIND0670
C...     RETURN VALUE FALSE                                             LIND0680
C                                                                       LIND0690
    2 LINDEF=.FALSE.                                                    LIND0700
    9 RETURN                                                            LIND0710
       END                                                              LIND0720
**** SOURCE FILE : M0008153.W01   ***
*
C                                                                       LGF00000
C              FORTRAN SUBROUTINE LOGIF                                 LGF00100
C                                                                       LGF00200
C LINKAGE      SUBROUTINE LOGIF(TEMP,MODE,COM1,COM2)                    LGF00300
C                                                                       LGF00400
C         SUBSIDIARIES              CALLED FROM                         LGF00500
C         NONE                      TYPE           ENTRY                LGF00600
C                                                  XCALL                LGF00700
C                                                                       LGF00800
      SUBROUTINE LOGIF(TEMP,MODE,COM1,COM2)                             LGF00900
C                                                                       LGF01000
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            LGF01100
C*                                                                      LGF01200
C     TEMP   1.D0 = .TRUE. ; 0.D0 = .FALSE.                             LGF01300
C     MODE   COMPARATIVE CODE                                           LGF01400
C            1      2      3      4      5      6      7      8     9   LGF01500
C            EQ     NE     GE     LE     GT     LT     NOT    OR    AND LGF01600
C     COM1  1ST LOGICAL OR RELATIONAL OPERATOR                          LGF01700
C     COM2  2ND LOGICAL OR RELATIONAL OPERATOR                          LGF01800
C**                                                                     LGF01900
      DATA TRUE,FALSE,SMAL,DIVIS/1.D0,0.D0,1.D-12,2.D0/                 LGF02000
C                                                                       LGF02100
      COMP1=COM1                                                        LGF02110
      COMP2=COM2                                                        LGF02120
C                                                                       LGF02200
      GOTO(10,20,30,40,50,60,70,80,90),MODE                             LGF02300
C                   ** COMP1 EQUAL COMP2 **                             LGF02400
   10 IF(DABS(COMP1-COMP2).GT.SMAL)GOTO 110                             LGF02500
      GOTO 100                                                          LGF02600
C                   ** COMP1 NOT EQUAL COMP2 **                         LGF02700
   20 IF(DABS(COMP1-COMP2).GT.SMAL)GOTO 100                             LGF02800
      GOTO 110                                                          LGF02900
C                   ** COMP1 GREATER EQUAL COMP2 **                     LGF03000
   30 IF(COMP1.GT.COMP2)GOTO 100                                        LGF03100
      GOTO 10                                                           LGF03200
C                   ** COMP1 LESS EQUAL COMP2 **                        LGF03300
   40 IF(COMP1.LT.COMP2)GOTO 100                                        LGF03400
      GOTO 10                                                           LGF03500
C                   ** COMP1 GREATER THAN COMP2 **                      LGF03600
   50 IF(COMP1.GT.(COMP2+SMAL))GOTO 100                                 LGF03700
      GOTO 110                                                          LGF03800
C                   ** COMP1 LESS THAN COMP2 **                         LGF03900
   60 IF(COMP1.LT.(COMP2-SMAL))GOTO 100                                 LGF04000
      GOTO 110                                                          LGF04100
C                   ** .NOT. COMP1 **                                   LGF04200
   70 TEMP=DINT(DABS(COMP1-TRUE)+SMAL)                                  LGF04300
      GOTO 120                                                          LGF04400
C                   ** COMP1 .OR. COMP2 **                              LGF04500
   80 TEMP=DINT((COMP1+COMP2+TRUE)/DIVIS+SMAL)                          LGF04600
      GOTO 120                                                          LGF04700
C                   ** COMP1 .AND. COMP2 **                             LGF04800
   90 TEMP=DINT(COMP1*COMP2+SMAL)                                       LGF04900
      GOTO 120                                                          LGF05000
C                                                                       LGF05100
  100 TEMP=TRUE                                                         LGF05200
      GOTO 120                                                          LGF05210
  110 TEMP=FALSE                                                        LGF05300
  120 RETURN                                                            LGF05310
      END                                                               LGF05400
**** SOURCE FILE : M0000938.V06   ***
*
C                                                                       NPAT0001
C...  FORTRAN SUBROUTINE               NPAT      3/69      SR           NPAT0002
C                                                                       NPAT0010
C PURPOSE      TO COMPUTE THE COORDINATES OF THE NTH POINT OF A PATERN  NPAT0020
C                                                                       NPAT0030
C LINKAGE      CALL NPAT(RES,NPT)                                       NPAT0040
C                                                                       NPAT0050
C ARGUMENTS    RES     ARRAY TO CONTAIN THE COORDINATES                 NPAT0060
C                      OF THE COMPUTED POINT                            NPAT0070
C              NPT     NUMBER OF THE POINT                              NPAT0080
C                                                                       NPAT0090
C SUBSIDIARIES TYPE                ENTRY                                NPAT0100
C              REAL FUNCTION       DCOS                                 NPAT0110
C              REAL FUNCTION       DSIN                                 NPAT0120
C                                                                       NPAT0130
      SUBROUTINE NPAT(RES,NPT)                                          NPAT0140
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              NPAT0150
      DIMENSION RES(3)                                                  NPAT0160
C                                                                       NPAT0170
      INCLUDE 'TOTAL.INC'                                               NPAT0291
      INCLUDE 'DEF.INC'                                                 NPAT0391
      INCLUDE 'ZNUMBR.INC'                                              NPAT0511
      INCLUDE 'KNUMBR.INC'                                              NPAT0691
      INCLUDE 'BLANKCOM.INC'                                            NPAT0701
C                                                                       NPAT0710
C...       INITIALIZE                                                   NPAT0720
C                                                                       NPAT0730
      CHARACTER*6 HPOINT,TEST                                           NPAT0734
      DATA HPOINT /'ZPOINT'/                                            NPAT0740
      N=NPT                                                             NPAT0750
      INDEX=K0                                                          NPAT0760
      TNC=Z0                                                            NPAT0770
C                                                                       NPAT0780
C...       DETERMINE PATERN TYPE AND BRANCH                             NPAT0790
C                                                                       NPAT0800
      K=BCANON(2)+Z1EM5                                                 NPAT0810
      GO TO(100,200,300,400,500),K                                      NPAT0820
C                                                                       NPAT0830
C...       LINEAR PATERN                                                NPAT0840
C                                                                       NPAT0850
  100 IF(N.EQ.K1)GO TO 120                                              NPAT0860
      NN=N+K9                                                           NPAT0870
      DO 110 I=11,NN                                                    NPAT0880
      II=INDEX+I                                                        NPAT0890
  110 TNC=TNC+BCANON(II)                                                NPAT0900
  120 DO 130 I=1,3                                                      NPAT0910
      II=INDEX+I+K4                                                     NPAT0920
  130 RES(I)=BCANON(II)+(TNC*BCANON(II+3))                              NPAT0930
      GO TO 999                                                         NPAT0940
C                                                                       NPAT0950
C...       CIRCULAR PATERN                                              NPAT0960
C                                                                       NPAT0970
  200 IF(N.EQ.K1)GO TO 220                                              NPAT0980
      NN=N+K9                                                           NPAT0990
      DO 210 I=11,NN                                                    NPAT1000
      II=INDEX+I                                                        NPAT1010
  210 TNC=TNC+BCANON(II)                                                NPAT1020
  220 ANG=DEGRAD*(BCANON(INDEX+9)+(BCANON(INDEX+10)*TNC))               NPAT1030
      RES(1)=BCANON(INDEX+5)+(BCANON(INDEX+8)*DCOS(ANG))                NPAT1040
      RES(2)=BCANON(INDEX+6)+(BCANON(INDEX+8)*DSIN(ANG))                NPAT1050
      RES(3)=BCANON(INDEX+7)                                            NPAT1060
      GO TO 999                                                         NPAT1070
C                                                                       NPAT1080
C...       GRID PATERN                                                  NPAT1090
C                                                                       NPAT1100
  300 ISIZE=BCANON(INDEX+6)+Z1EM5                                       NPAT1110
      NOPTS=BCANON(INDEX+7)+Z1EM5                                       NPAT1120
      TTNC=Z0                                                           NPAT1130
      IF(N.EQ.K1)GO TO 350                                              NPAT1140
      NN=N-K1                                                           NPAT1150
      IONE=MOD(NN,NOPTS)                                                NPAT1160
      ITWO=NN/NOPTS                                                     NPAT1170
      IF(MOD(ITWO,K2).EQ.K1)IONE=NOPTS-IONE-K1                          NPAT1180
      IF(IONE.EQ.K0)GO TO 320                                           NPAT1190
      DO 310 I=1,IONE                                                   NPAT1200
      II=(INDEX+13)+I                                                   NPAT1210
  310 TNC=TNC+BCANON(II)                                                NPAT1220
  320 IF(ITWO.EQ.K0)GO TO 350                                           NPAT1230
      DO 330 I=1,ITWO                                                   NPAT1240
      II=(INDEX+13+ISIZE)+I                                             NPAT1250
  330 TTNC=TTNC+BCANON(II)                                              NPAT1260
  350 DO 360 I=1,3                                                      NPAT1270
      II=(INDEX+10)+I                                                   NPAT1280
      III=ISIZE+II                                                      NPAT1290
  360 RES(I)=BCANON(II-3)+(TNC*BCANON(II))+(TTNC*BCANON(III))           NPAT1300
      GO TO 999                                                         NPAT1310
C                                                                       NPAT1320
C...       RANDOM PATERN                                                NPAT1330
C                                                                       NPAT1340
  400 IPNTCT=K0                                                         NPAT1350
      INDEX=K4                                                          NPAT1360
  410 CALL HOLFRM(BCANON(INDEX+1),TEST,1,6,NWD)                         NPAT1370
      IF (TEST.NE.HPOINT) GO TO 450                                     NPAT1375
      IPNTCT=IPNTCT+K1                                                  NPAT1380
      IF(IPNTCT.NE.N)GO TO 430                                          NPAT1390
      DO 420 I=1,3                                                      NPAT1400
      II=INDEX+I+K1                                                     NPAT1410
  420 RES(I)=BCANON(II)                                                 NPAT1420
      GO TO 999                                                         NPAT1430
  430 INDEX=INDEX+K4                                                    NPAT1440
      GO TO 410                                                         NPAT1450
  450 NOPTS=BCANON(INDEX+4)+Z1EM5                                       NPAT1460
      IPNTCT=IPNTCT+NOPTS                                               NPAT1470
      IF(IPNTCT.LT.N)GO TO 460                                          NPAT1480
      N=N+NOPTS-IPNTCT                                                  NPAT1490
      K=BCANON(INDEX+2)+Z1EM5                                           NPAT1500
      GO TO(100,200,300),K                                              NPAT1510
  460 ISIZE=BCANON(INDEX+3)                                             NPAT1520
      INDEX=INDEX+ISIZE+K1                                              NPAT1530
      GO TO 410                                                         NPAT1540
C                                                                       NPAT1550
C...       PERIM PATERN                                                 NPAT1560
C                                                                       NPAT1570
  500 GO TO 999                                                         NPAT1580
C                                                                       NPAT1590
  999 RETURN                                                            NPAT1600
      END                                                               NPAT1610
**** SOURCE FILE : M0000726.ORG   ***
*
      SUBROUTINE NULL                                                   00000100
C---    PROVIDES A COMMON ENTRY POINT FOR DUMMY ROUTINES                00000200
      RETURN                                                            00000300
      END                                                               00000400
**** SOURCE FILE : M0001206.W02   ***
*
C                                                                       00000100
C                                                                       00000200
C.....FORTRAN SUBROUTINE           PRINT                                00000300
C                                                                       00000400
C     NEW REORGANIZED VERSION  OCT-1988 E.MCLELLAN                      00000500
C                                                                       00000600
C PURPOSE          TO EJECT A PAGE,TAKE A DUMP,TURN THE PRINT FLAG      00000700
C                  INTERROGATED BY DEFEXT ON OR OFF,OR PRINT TITLES,    00000800
C                  NUMBER IDENTIFIERS OR A SPECIFIED NUMBER OF CANONICAL00000900
C                  FORMS.                                               00001000
C                                                                       00001100
C CALLING SEQUENCE CALL PRINT(CODE,ARRAY,NUMBER)                        00001200
C                                                                       00001300
C ARGUMENTS        CODE             =1,TO PRINT BLOCK 1 SCALARS WITH A  00001400
C                                      DESCRIPTIVE HEADER               00001500
C                                   =2,TO PRINT BLOCK 2 SCALARS WITH A  00001600
C                                      DESCRIPTIVE HEADER               00001700
C                                   =3,TO PRINT BLOCK 3 CANONICAL FORMS 00001800
C                                      WITH A DESCRIPTIVE HEADER        00001900
C                                   =4,TO PRINT BLOCK 1 SCALARS WITH NO 00002000
C                                      HEADER                           00002100
C                                   =5,TO PRINT BLOCK 2 SCALARS WITH NO 00002200
C                                      HEADER                           00002300
C                                   =6,TO PRINT BLOCK 3 CANONICAL FORMS 00002400
C                                      WITH NO HEADER                   00002500
C                                   =7,TO EJECT A PAGE                  00002600
C                                   =8,TO TAKE A DUMP                   00002700
C                                   =9,TO PRINT A TITLE                 00002800
C                                   =10, TO PRINT A NUMBER IDENTIFIER   00002900
C                                       (I.E. HANDLES PRINT/2,NUMBER)   00003000
C                                   =11,TO TURN PRINT FLAG ON           00003100
C                                   =12,TO TURN PRINT FLAG OFF          00003200
C                                   =13, TO TURN PCHLST FLAG ON         00003300
C                                   =14, TO TURN PCHLST FLAG OFF        00003400
C                                   =15, TO PRINT NAME ON TABCYL LISTING00003500
C                                   =16, FOR TABCYL PRINT ON            00003600
C                                   =17, FOR TABCYL PRINT OFF           00003700
C                                   =18/19 FOR SS-PRINT ON/OFF          00003800
C                                   =20/21 FOR SS-TEST-PRINT ON/OFF     00003900
C                                   =22/23 FOR AVOIDANCE ACTION PRINT   00003910
C                                          (AVPRT) ON/OFF               00003920
C                  ARRAY            IF PRINTING IS TO TAKE PLACE,ARRAY  00004000
C                                   CONTAINS THE TITLE,NUMBER,OR FIRST  00004100
C                                   CANONICAL FORM TO BE PRINTED.       00004200
C                                   OTHERWISE ARRAY IS A DUMMY ARGUMENT.00004300
C                  NUMBER           IF CANONICAL FORMS ARE TO BE PRINTED00004400
C                                   NUMBER CONTAINS THE NUMBER OF FORMS 00004500
C                                   TO PRINT.                           00004600
C                                                                       00004700
C CALLED BY        DEFEXT,APT040,APT045,APT102,APT103,APT089            00004800
C                                                                       00004900
C SUBSIDIARIES     TYPE             ENTRY                               00005000
C                  ----             -----                               00005100
C                  INTEGER FUNCTION ADDRSS                              00005200
C                  SUBROUTINE       INCAN                               00005300
C                  SUBROUTINE       RECORD                              00005400
C                  SUBROUTINE       TRANSF                              00005500
C                  SUBROUTINE       UNPACK                              00005600
C                  INTEGER FUNCTION XCANON                              00005700
C                  INTEGER FUNCTION BCDF                                00005800
C                  SUBROUTINE       HOLFRM                              00005900
C                                                                       00006000
C RESTRICTIONS     CANONICAL FORMS TO BE PRINTED MUST BE CONTIGUOUS     00006100
C                                                                       00006200
C DIAGNOSTICS      ERROR CODE       COMMENT                             00006300
C                  ----------       -------                             00006400
C                   NONE            INVALID CANONICAL FORM ENCOUNTERED. 00006500
C                                   PRINTING SUPPRESSED                 00006600
C                                                                       00006700
C METHOD           AN 'IF THEN ELSE' STRUCTURE IS USED TO DIRECT        00006800
C                  PROCESSING ACCORDING TO CODE.                        00006900
C                  NOTE THAT BECAUSE THERE IS MUCH COMMON PROCESSING    00007000
C                  FOR CODE=1,2,3,4,5,6 AND 15, THESE ARE PROCESSED     00007100
C                  IN THE FIRST BLOCK OF THE STRUCTURE WITH ADDITIONAL  00007200
C                  'IF THEN ELSE' STRUCTURES TO DIRECT SUBSEQUENT       00007300
C                  PROCESSING ACCORDING TO THE INDIVIDUAL CODES         00007400
C                                                                       00007500
      SUBROUTINE  PRINT(CODE,ARRAY,NUMBER)                              00007600
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00007700
      DIMENSION  ARRAY(1)                                               00007800
C                                                                       00007900
C                                                                       00008000
      INCLUDE 'TOTAL.INC'                                               00008100
      INCLUDE 'LDEF.INC'                                                00008200
      INCLUDE 'IDEF.INC'                                                00008300
C                                                                       00008400
C                                                                       00008500
C                                                                       00008600
C                                                                       00008700
C...  LOCAL VARIABLES                                                   00008800
      INCLUDE 'BLANKCOM.INC'                                            00008900
      DIMENSION X(COMSIZ)                                               00009000
      EQUIVALENCE (COM(1),X(1))                                         00009100
C                                                                       00009200
      DOUBLE PRECISION NAME                                             00009300
      CHARACTER F13*18,F30*19,F40*55                                    00009400
      INCLUDE  'DARRAY.INC'                                             00009500
      COMMON/SSPRT/SSPRT,SSTEST                                         00009600
      LOGICAL SSPRT,SSTEST                                              00009700
      INCLUDE 'AVCPRM.INC'                                              00009710
C                                                                       00009800
      INTEGER DLR,LP,RP,ZERO,SUB,BCD,CODE,COUNT,SIZE,PLUS,BBBB,STR      00009900
C                                                                       00010000
      LOGICAL LDAFLG,BNDFLG,BNDSUB,NAMFLG                               00010100
      CHARACTER BLK,LPAREN,DOLLAR,NUMB,RPAREN,B,Z,STAR,NAM(16),CNAM*16, 00010200
     + STG(8),STAGE*8,CHECK*8,RIGHT*5,MODHS*4,                          00010300
     + TYPE*6,NO(4),CNUM*4                                              00010400
C                                                                       00010500
      DIMENSION TYPE(30),NAME(2),A(17),IA(34),REFSRF(16),IRFSRF(32),    00010600
     1            MODHS(2),INAM(4),ITEMP(2)                             00010700
C                                                                       00010800
      EQUIVALENCE  (C,ISKIP),(A(1),IA(1)),(REFSRF(1),IRFSRF(1)),        00010900
     +             (NAME(1),INAM(1)),(ITEMP(1),TEMP),                   00011000
     +             (STG(1),STAGE),(NO(4),NUMB),                         00011100
     +             (NAM(1),CNAM),(NO(1),CNUM)                           00011200
      EXTERNAL XCANON,ADDRSS,CKDTR,CKSTR                                00011300
      INTEGER XCANON,ADDRSS,BCDF                                        00011400
      LOGICAL CKDTR,CKSTR                                               00011500
      SAVE KRIGHT                                                       00011600
C                                                                       00011700
      DATA MODHS/'  IN',' OUT'/                                         00011800
      DATA B,Z,STAR/' ','Z','*'/                                        00011900
      DATA  BLK,LPAREN,ZERO,STAGE,DOLLAR,RIGHT,RPAREN                   00012000
     1 /' ','(',0,'0000000)','$','RIGHT',')'/                           00012100
      DATA  TYPE /'LINE  ','PLANE ','CYLNDR','CIRCLE','SPHERE','HYPERB',00012200
     1                     'LCONIC','ELLIPS','CONE  ','GCONIC','TABCYL',00012300
     2            'RLDSRF','PCONIC','QADRIC','PARSRF','**16**','**17**',00012400
     3            'MATRIX','POINT ','VECTOR','SCALAR','**22**','**23**',00012500
     4'**24**','STRING','PATERN','BOUNDS','OBJECT','SSURF ','SCURV '/   00012600
C                                                                       00012700
      DATA F13/'TABULATED CYLINDER'/                                    00012800
      DATA F30/'INCORRECTLY DEFINED'/                                   00012900
      DATA F40                                                          00013000
     +    /'INVALID CANONICAL FORM ENCOUNTERED. PRINTING SUPPRESSED'/   00013100
      DATA KRIGHT /0/                                                   00013200
      DATA     KU,KV/10000,10/                                          00013300
C                                                                       00013400
C ********************************************************************  00013500
C                                                                       00013600
C                                                                       00013700
C...      P R O C E S S   A C C O R D I N G   T O   C O D E             00013800
C                                                                       00013900
      IF ( (CODE.LE.6).OR.(CODE.EQ.15) ) THEN                           00014000
        NAMFLG = .FALSE.                                                00014100
        IPH=1                                                           00014200
        MODE = 21                                                       00014300
        JJ = 0                                                          00014400
        SIZE=1                                                          00014500
        BNDFLG=.FALSE.                                                  00014600
        LDAFLG = .FALSE.                                                00014700
C                                                                       00014800
C ... DETERMINE VIRTUAL INDEX OF ARRAY(1) IN X-ARRAY.                   00014900
C                                                                       00015000
        INDEX = (ADDRSS(ARRAY) - ADDRSS(X))/KWRDSZ + 1                  00015100
        IABS = INDEX                                                    00015200
        IF (CANFLG) CALL INCAN(INDEX)                                   00015300
C                                                                       00015400
C... PROCESS ACCORDING TO TYPE                                          00015500
C                                                                       00015600
        IC=MOD(CODE,3)                                                  00015700
        IF (IC.EQ.0) THEN                                               00015800
C.... CODE = 3,6 OR 15                                                  00015900
          JJ=1                                                          00016000
        ELSE IF (IC.EQ.1) THEN                                          00016100
C.... CODE = 1 OR 4                                                     00016200
          SUB=0                                                         00016300
        ELSE                                                            00016400
C.... CODE = 2 OR 5                                                     00016500
          CONTINUE                                                      00016600
        ENDIF                                                           00016700
C                                                                       00016800
C.... FOR EACH CANONICAL FORM REQUIRED                                  00016900
C                                                                       00017000
        DO 5000 II = 1,NUMBER                                           00017100
C                                                                       00017200
C ... DETERMINE ABSOLUTE INDEX.                                         00017300
C                                                                       00017400
60000     C = X(IABS - JJ)                                              00017500
          IF (ISKIP .GT. 0 .AND. ISKIP .LE. 1024) THEN                  00017600
            INDEX = INDEX + ISKIP                                       00017700
            IABS = INDEX                                                00017800
            IF (CANFLG) IABS = XCANON(INDEX)                            00017900
            GO TO 60000                                                 00018000
          ENDIF                                                         00018100
C                                                                       00018200
          IF (IC.EQ.1) THEN                                             00018300
C                                                                       00018400
C...  P R I N T   B L O C K   1   S C A L A R S                         00018500
C                                                                       00018600
            NAMEPT = IABS + 1                                           00018700
            GO TO 50000                                                 00018800
C                                                                       00018900
          ELSE IF (IC.EQ.2) THEN                                        00019000
C                                                                       00019100
C...  P R I N T   B L O C K   2   S C A L A R S                         00019200
C                                                                       00019300
            SUB = X(IABS + 1)                                           00019400
C                                                                       00019500
          ELSE                                                          00019600
C                                                                       00019700
C...  P R I N T   B L O C K   3   S U R F A C E S                       00019800
C                                                                       00019900
C                                                                       00020000
C... GET SIZE,MODE,AND SUBSCRIPT OF NEXT FORM                           00020100
C                                                                       00020200
            CALL UNPACK(X(IABS),MODE,SIZE,SUB)                          00020300
            IF (MODE .EQ. 27 .OR. MODE .EQ. 28) BNDFLG=.TRUE.           00020400
            IF (MODE.GT.0.AND.MODE.LT.31.AND.SIZE.GT.0.AND.             00020500
     /         (SIZE.LT.13 .OR. BNDFLG)) THEN                           00020600
C                                                                       00020700
C... IF FORM IS A LARGE DATA ARRAY, TURN ON LDAFLG                      00020800
C                                                                       00020900
              IF (MODE.EQ.11.OR.MODE.EQ.12.OR.MODE.EQ.26.OR.            00021000
     1            MODE.EQ.29.OR.MODE.EQ.30) THEN                        00021100
                LDAFLG = .TRUE.                                         00021200
              ENDIF                                                     00021300
            ELSE                                                        00021400
              CALL CFORM(F40,DARRAY,5,55)                               00021500
              CALL CPRINT (DARRAY)                                      00021600
              GOTO 99999                                                00021700
            ENDIF                                                       00021800
          ENDIF                                                         00021900
C                                                                       00022000
C ... FIND ALPHANUMERIC NAME.                                           00022100
C                                                                       00022200
          IF (SUB .LT. 0 .OR. SUB .GT. 9999) THEN                       00022300
            CALL CFORM(F40,DARRAY,5,55)                                 00022400
            CALL CPRINT (DARRAY)                                        00022500
            GOTO 99999                                                  00022600
          ELSE IF (SUB .GT. 1) THEN                                     00022700
C                                                                       00022800
C ... DETERMINE ABSOLUTE LOCATION OF FORM NAME.                         00022900
C                                                                       00023000
            IF (.NOT.NAMFLG) THEN                                       00023100
              NAMFLG = .TRUE.                                           00023200
              NAMEPT = IABS + SIZE + 1 - JJ                             00023300
              IK = INDEX + SIZE + 1 - JJ                                00023400
              DO 60110 MM = 2,SUB                                       00023500
60102           C = X(NAMEPT)                                           00023600
                IF (ISKIP .LE. 0 .OR. ISKIP .GT. 1024) THEN             00023700
                  NAMEPT = NAMEPT + SIZE + 1                            00023800
                  IK = IK + SIZE + 1                                    00023900
                ELSE                                                    00024000
                  IK = IK + ISKIP                                       00024100
                  NAMEPT = IK                                           00024200
                  IF (CANFLG) NAMEPT = XCANON(IK)                       00024300
                  GO TO 60102                                           00024400
                ENDIF                                                   00024500
60110         CONTINUE                                                  00024600
C                                                                       00024700
              IF (CANFLG) IABS = XCANON(INDEX)                          00024800
              SAVNAM = X(NAMEPT)                                        00024900
            ENDIF                                                       00025000
C                                                                       00025100
            NAME(1) = SAVNAM                                            00025200
            GO TO 50002                                                 00025300
          ELSE                                                          00025400
            NAMFLG = .FALSE.                                            00025500
            NAMEPT = IABS + SIZE + 1 - JJ                               00025600
          ENDIF                                                         00025700
C                                                                       00025800
C...  U T I L I T Y   P R I N T   M O D U L E                           00025900
C                                                                       00026000
C                                                                       00026100
C... SET NAME(1) = CURRENT CANONICAL FORM NAME                          00026200
C     AND, IF LDA, SET SIZE = SIZE OF EXTERNAL CANONICAL FORM.          00026300
C                                                                       00026400
50000     NAME(1) = X(NAMEPT)                                           00026500
50002     IF (LDAFLG) SIZE = X(IABS + 1)                                00026600
          INAM(3) = BCDF('    ')                                        00026700
          INAM(4) = INAM(3)                                             00026800
C                                                                       00026900
C...  IF FORM NAME BEGINS WITH $ OR Z$, SUPPRESS PRINTING IT            00027000
C                                                                       00027100
          CALL HOLFRM(INAM,CNAM,1,16,NWD)                               00027200
          IF((NAM(1).EQ.DOLLAR).OR.((NAM(1).EQ.Z).AND.                  00027300
     1      (NAM(2) .EQ. DOLLAR))) THEN                                 00027400
C                                                                       00027500
C ... PRINT UNASSIGNED NESTED ELEMENTS FOR PRINT/ON.                    00027600
C                                                                       00027700
            IF (NUMBER .GT. 1 .OR. MODE .EQ. 21) GO TO 50100            00027800
            CALL DNONAM(NAME(1))                                        00027900
          ELSE                                                          00028000
C                                                                       00028100
C... IF THE FORM IS SUBSCRIPTED, CONVERT THE SUBSCRIPT TO CHARACTERS    00028200
C... AND LEFT JUSTIFY IT NEXT TO THE FORM NAME READY FOR PRINTING       00028300
C                                                                       00028400
            IF (SUB .NE. 0) THEN                                        00028500
              IF (CODE .EQ. 6 .OR. CODE .EQ. 5) GO TO 50060             00028600
              DO 50010 J=4,9                                            00028700
                IF (NAM(J-2) .EQ. BLK)  GO TO 50020                     00028800
50010         CONTINUE                                                  00028900
50020         NAM(J-1) = LPAREN                                         00029000
              N = SUB                                                   00029100
              DO 50030  I = 1,7                                         00029200
                K=8-I                                                   00029300
                BCD = MOD(N,10)                                         00029400
                CALL ICONV(BCD,NUMB,1,1)                                00029500
                STG(K) = NUMB                                           00029600
                N = N/10                                                00029700
                IF (N .EQ. 0)  GO TO 50040                              00029800
50030         CONTINUE                                                  00029900
50040         DO 50050 I=K,8                                            00030000
                NAM(J) = STG(I)                                         00030100
                J = J + 1                                               00030200
50050         CONTINUE                                                  00030300
              NAM(J-1)=RPAREN                                           00030400
            ENDIF                                                       00030500
          ENDIF                                                         00030600
C                                                                       00030700
C... WRITE HEADER CONTAINING FORM NAME,MODE AND SIZE                    00030800
C     BUT SUPPRESS IF FORM IS UNDEFINED.                                00030900
C                                                                       00031000
50060     IF (CKDTR(X(IABS))) GO TO 50100                               00031100
          IF(IPH.EQ.1) THEN                                             00031200
            ISEQ = ISEQNO                                               00031300
            CALL RECORD(ISEQNO)                                         00031400
            IF (ISEQ .EQ. ISEQNO) THEN                                  00031500
              IPH = 2                                                   00031600
            ELSE                                                        00031700
              CALL CFORM('-',DARRAY,1,1)                                00031800
              IPH=2                                                     00031900
              CALL ICONV (ISEQNO,DARRAY,2,4)                            00032000
              CALL CFORM('.',DARRAY,6,1)                                00032100
            ENDIF                                                       00032200
          ENDIF                                                         00032300
C                                                                       00032400
C... IF PROCESSING A PRINT/2 STATEMENT, SUPPRESS PRINTING THE HEADER.   00032500
C                                                                       00032600
50062     IF (CODE .LE. 3) THEN                                         00032700
            CALL CFORM(CNAM,DARRAY,7,12)                                00032800
            CALL CFORM(TYPE(MODE),DARRAY,19,6)                          00032900
            CALL ICONV(SIZE,DARRAY,25,5)                                00033000
            IF(LDAFLG) CALL CPRINT(DARRAY)                              00033100
          ENDIF                                                         00033200
C                                                                       00033300
C ... PRINT DIAGNOSTIC IF INCORRECTLY DEFINED.                          00033400
C                                                                       00033500
          IF (CKSTR(X(IABS))) THEN                                      00033600
            CALL CFORM(F30,DARRAY,30,19)                                00033700
            CALL CPRINT (DARRAY)                                        00033800
            GOTO 50100                                                  00033900
          ENDIF                                                         00034000
          IF (LDAFLG .OR. MODE.EQ.15) GOTO 50100                        00034100
C                                                                       00034200
          IF (IC.EQ.1) THEN                                             00034300
C                                                                       00034400
C BLOCK 1 SCALARS                                                       00034500
C                                                                       00034600
            K=30                                                        00034700
            CALL FCONV ( X(IABS) , DARRAY,K,13,6)                       00034800
            CALL CPRINT (DARRAY)                                        00034900
C                                                                       00035000
          ELSE IF (IC.EQ.2) THEN                                        00035100
C                                                                       00035200
C BLOCK 2 SCALARS                                                       00035300
C                                                                       00035400
            K=30                                                        00035500
            CALL FCONV (X(IABS),DARRAY,K,13,6)                          00035600
            CALL CPRINT (DARRAY)                                        00035700
C                                                                       00035800
          ELSE                                                          00035900
C                                                                       00036000
C BLOCK 3 SURFACES                                                      00036100
C                                                                       00036200
C... CHECK IF REFSYS IN EFFECT. IF SO,PRINT FORM IN LOCAL SYSTEM        00036300
C                                                                       00036400
            IF(.NOT.BNDFLG) THEN                                        00036500
              IF (MODE .EQ. 25) THEN                                    00036600
C                                                                       00036700
C...  PRINT A STRING FORM                                               00036800
C                                                                       00036900
                A(1) = X(IABS)                                          00037000
                COUNT=(IA(2)+3)/4                                       00037100
                J=COUNT/2+MOD(COUNT,2)                                  00037200
                DO 3020  I = 1,J                                        00037300
                  A(I) = X(IABS + I)                                    00037400
 3020           CONTINUE                                                00037500
                CALL HOLFRM(IA(1),DARRAY,30,COUNT*4,NWD)                00037600
                CALL CPRINT (DARRAY)                                    00037700
                GOTO 50100                                              00037800
              ENDIF                                                     00037900
C                                                                       00038000
              DO 3030 J=1,SIZE                                          00038100
                K = IABS + J - 1                                        00038200
                REFSRF(J) = X(K)                                        00038300
 3030         CONTINUE                                                  00038400
              IF (REFFLG) THEN                                          00038500
                IF (MODE.EQ.1. OR. MODE.EQ.2) THEN                      00038600
                  IR = 4                                                00038700
                ELSE IF (MODE.EQ.3 .OR. MODE.EQ.4 .OR. MODE.EQ.9) THEN  00038800
                  IR = 5                                                00038900
                ELSE IF (MODE.EQ.5 .OR. MODE.EQ.19) THEN                00039000
                  IR = 2                                                00039100
                ELSE IF (MODE.EQ.6 .OR. MODE.EQ.7 .OR. MODE.EQ.8 .OR.   00039200
     +                   MODE.EQ.10 .OR. MODE.EQ.14 ) THEN              00039300
                  IR = 1                                                00039400
                ELSE IF (MODE.EQ.20) THEN                               00039500
                  IR = 3                                                00039600
                ELSE                                                    00039700
                  GOTO 3038                                             00039800
                ENDIF                                                   00039900
                CALL TRANSF(REFSRF,X(IABS),IR,SIZE,0)                   00040000
              ENDIF                                                     00040100
C                                                                       00040200
C... WRITE FORM ELEMENTS                                                00040300
C                                                                       00040400
 3038         K=29                                                      00040500
              DO 13039 J=1,SIZE                                         00040600
                IF(K+13.LE.120) GO TO 13038                             00040700
                CALL CPRINT(DARRAY)                                     00040800
                K=17                                                    00040900
13038           CALL FCONV (REFSRF(J),DARRAY,K,13,6)                    00041000
                K=K+13                                                  00041100
13039         CONTINUE                                                  00041200
              CALL CPRINT(DARRAY)                                       00041300
C                                                                       00041400
            ELSE                                                        00041500
C                                                                       00041600
C... P R I N T   B O U N D S   A N D   O B J E C T                      00041700
C                                                                       00041800
              ISUB = SUB                                                00041900
              DO 50250 L =2,SIZE,2                                      00042000
                K = IABS + L                                            00042100
                NAME(1) = X(K-2)                                        00042200
                CALL HOLFRM(INAM,CNAM,1,8,NWD)                          00042300
                IF (NAM(1) .EQ. STAR) CALL BADNAM(NAME(1))              00042400
                IF (NAM(1) .EQ. DOLLAR) CALL DNONAM(NAME(1))            00042500
                ITEMP(1)=BCDF('    ')                                   00042600
                ITEMP(2)=ITEMP(1)                                       00042700
                REFSRF(L) = TEMP                                        00042800
                IF(MODE.EQ.28) GO TO 50235                              00042900
C                                                                       00043000
C... BOUNDS                                                             00043100
C                                                                       00043200
50220           INAM(3)=BCDF('    ')                                    00043300
                INAM(4)=INAM(3)                                         00043400
                IUVW = X(K-1)                                           00043500
                IU=IUVW/KU                                              00043600
                SUB=(IUVW-IU*KU)/KV                                     00043700
                IW=IUVW-IU*KU-SUB*KV                                    00043800
                IF(SUB .NE. 0) THEN                                     00043900
C                                                                       00044000
C... IF THE FORM IS SUBSCRIPTED, CONVERT THE SUBSCRIPT TO CHARACTERS    00044100
C... AND LEFT JUSTIFY IT NEXT TO THE FORM NAME READY FOR PRINTING       00044200
C                                                                       00044300
                  DO 50221 J=4,9                                        00044400
                    IF (NAM(J-2) .EQ. BLK)  GO TO 50222                 00044500
50221             CONTINUE                                              00044600
50222             NAM(J-1) = LPAREN                                     00044700
                  N = SUB                                               00044800
                  DO 50223  I = 1,7                                     00044900
                    K=8-I                                               00045000
                    BCD = MOD(N,10)                                     00045100
                    CALL ICONV(BCD,NUMB,1,1)                            00045200
                    STG(K) = NUMB                                       00045300
                    N = N/10                                            00045400
                    IF (N .EQ. 0)  GO TO 50224                          00045500
50223             CONTINUE                                              00045600
50224             DO 50225 I=K,8                                        00045700
                    NAM(J) = STG(I)                                     00045800
                    J = J + 1                                           00045900
50225             CONTINUE                                              00046000
                  NAM(J-1)=RPAREN                                       00046100
                ELSE                                                    00046200
                  J=9                                                   00046300
                ENDIF                                                   00046400
50230           IF (L .EQ. 2) GO TO 50232                               00046500
                BCD=IW                                                  00046600
                IF (IW .EQ. 1 .OR. IW .EQ. 2) THEN                      00046700
                  CNUM=MODHS(IW)                                        00046800
                ELSE                                                    00046900
                  CALL ICONV(BCD,CNUM,1,4)                              00047000
                ENDIF                                                   00047100
                NAM(J+1)=NO(2)                                          00047200
                NAM(J+2)=NO(3)                                          00047300
                NAM(J+3)=NO(4)                                          00047400
                INAM(3)=BCDF(CNAM(9:12))                                00047500
50232           REFSRF(L )=NAME(2)                                      00047600
C                                                                       00047700
50235           REFSRF(L -1)=NAME(1)                                    00047800
50250         CONTINUE                                                  00047900
              CALL CPRINT(DARRAY)                                       00048000
              K=12                                                      00048100
              IF(MODE.EQ.28) K=16                                       00048200
              DO 20251 J=1,SIZE*2,4                                     00048300
                CALL HOLFRM(IRFSRF(J),DARRAY,K,16,NWD)                  00048400
                K=K+14                                                  00048500
                IF(MODE.EQ.27) K=K+4                                    00048600
                IF(K.LE.108) GO TO 20251                                00048700
                CALL CPRINT (DARRAY)                                    00048800
                K=12                                                    00048900
                IF(MODE.EQ.28) K=16                                     00049000
20251         CONTINUE                                                  00049100
              CALL CPRINT (DARRAY)                                      00049200
              IPH = 2                                                   00049300
              BNDFLG=.FALSE.                                            00049400
              SUB = ISUB                                                00049500
            ENDIF                                                       00049600
          ENDIF                                                         00049700
C                                                                       00049800
50100     IF(CODE.EQ.15) THEN                                           00049900
C                                                                       00050000
C ... P R I N T   N A M E   O N   T A B C Y L   L I S T I N G           00050100
C                                                                       00050200
            CALL RECORD(ISEQNO)                                         00050300
            CALL CFORM('-',DARRAY,1,1)                                  00050400
            CALL ICONV(ISEQNO,DARRAY,2,4)                               00050500
            CALL CFORM('.',DARRAY,6,1)                                  00050600
            CALL CFORM(F13,DARRAY,8,18)                                 00050700
            CALL CFORM(CNAM,DARRAY,28,12)                               00050800
            CALL CPRINT (DARRAY)                                        00050900
            GOTO 99999                                                  00051000
          ELSE                                                          00051100
C                                                                       00051200
C.... ADVANCE CURRENT FORM INDEX                                        00051300
C                                                                       00051400
            IF (IC.EQ.1) THEN                                           00051500
              INDEX = INDEX + 2                                         00051600
              IABS = IABS + 2                                           00051700
            ELSE IF (IC.EQ.2) THEN                                      00051800
              D = 3 - MIN0(1,SUB-1)                                     00051900
              INDEX = INDEX + D                                         00052000
              IABS = IABS + D                                           00052100
            ELSE                                                        00052200
              IF (LDAFLG) THEN                                          00052300
                SIZE=2                                                  00052400
                LDAFLG=.FALSE.                                          00052500
              ENDIF                                                     00052600
              D = SIZE + 2 - MIN0(SUB/2,1)                              00052700
              INDEX = INDEX + D                                         00052800
              IABS = IABS + D                                           00052900
            ENDIF                                                       00053000
          ENDIF                                                         00053100
 5000   CONTINUE                                                        00053200
C                                                                       00053300
      ELSE IF (CODE.EQ.7) THEN                                          00053400
C                                                                       00053500
C...  E J E C T   A   P A G E                                           00053600
C                                                                       00053700
        CALL CFORM('1',DARRAY,1,1)                                      00053800
        CALL CPRINT (DARRAY)                                            00053900
C                                                                       00054000
      ELSE IF (CODE.EQ.8) THEN                                          00054100
C                                                                       00054200
C...  T A K E   A   C O R E   D U M P                                   00054300
C                                                                       00054400
        CONTINUE                                                        00054500
C                                                                       00054600
      ELSE IF (CODE.EQ.9) THEN                                          00054700
C                                                                       00054800
C...  P R I N T   A   T I T L E                                         00054900
C                                                                       00055000
        NAMFLG = .FALSE.                                                00055100
        IPH=1                                                           00055200
        MODE = 21                                                       00055300
        JJ = 0                                                          00055400
        SIZE=1                                                          00055500
        BNDFLG=.FALSE.                                                  00055600
        LDAFLG = .FALSE.                                                00055700
C                                                                       00055800
C ... DETERMINE VIRTUAL INDEX OF ARRAY(1) IN X-ARRAY.                   00055900
C                                                                       00056000
        INDEX = (ADDRSS(ARRAY) - ADDRSS(X))/KWRDSZ + 1                  00056100
        IABS = INDEX                                                    00056200
        IF (CANFLG) CALL INCAN(INDEX)                                   00056300
C                                                                       00056400
        A(1) = X(IABS)                                                  00056500
        COUNT=(IA(2)+3)/4                                               00056600
        CALL CFORM('0',DARRAY,1,1)                                      00056700
        IF (COUNT.EQ.0) THEN                                            00056800
          CALL CPRINT (DARRAY)                                          00056900
        ELSE                                                            00057000
          J=COUNT/2+MOD(COUNT,2)                                        00057100
          DO 9010  I = 1,J                                              00057200
            A(I) = X(IABS + I)                                          00057300
 9010     CONTINUE                                                      00057400
          CALL HOLFRM(A(1),CHECK,1,8,NWD)                               00057500
          IF (CHECK(2:6) .EQ. RIGHT)  THEN                              00057600
            CHECK(5:6)='  '                                             00057700
            IA(2)=BCDF(CHECK(5:8))                                      00057800
            K=(COUNT-1)*4                                               00057900
            IF(K.GT.54) K=54                                            00058000
            CALL HOLFRM(IA(2),DARRAY,66,K,NWD)                          00058100
            KRIGHT = 1                                                  00058200
            CALL CPRINT (DARRAY)                                        00058300
          ELSE                                                          00058400
            CALL HOLFRM(IA(1),DARRAY,2,COUNT*4,NWD)                     00058500
            IF (KRIGHT .EQ. 1) CALL CFORM('+',DARRAY,1,1)               00058600
            KRIGHT = 0                                                  00058700
            CALL CPRINT (DARRAY)                                        00058800
          ENDIF                                                         00058900
        ENDIF                                                           00059000
C                                                                       00059100
      ELSE IF (CODE.EQ.10) THEN                                         00059200
C                                                                       00059300
C...  P R I N T   N U M  B E R   I D E N T I F I E R                    00059400
C                                                                       00059500
        ISEQ = ISEQNO                                                   00059600
        CALL RECORD(ISEQNO)                                             00059700
        IF (ISEQ .EQ. ISEQNO) GO TO 10010                               00059800
        CALL ICONV(ISEQNO,DARRAY,2,4)                                   00059900
        CALL CFORM('.',DARRAY,6,1)                                      00060000
10010   CALL FCONV(ARRAY(1),DARRAY,30,13,6)                             00060100
        CALL CPRINT (DARRAY)                                            00060200
      ELSE IF (CODE.EQ.11) THEN                                         00060300
                                                                        00060400
C                                                                       00060500
C...  T U R N   P R I N T   F L A G   O N                               00060600
C                                                                       00060700
        PRNTON = .TRUE.                                                 00060800
C                                                                       00060900
      ELSE IF (CODE.EQ.12) THEN                                         00061000
C                                                                       00061100
C...  T U R N   P R I N T   F L A G   O F F                             00061200
C                                                                       00061300
        PRNTON = .FALSE.                                                00061400
C                                                                       00061500
      ELSE IF (CODE.EQ.13) THEN                                         00061600
C                                                                       00061700
C ... T U R N   P C H L S T   F L A G   O N                             00061800
C                                                                       00061900
        PCHLST = .TRUE.                                                 00062000
C                                                                       00062100
      ELSE IF (CODE.EQ.14) THEN                                         00062200
C                                                                       00062300
C ... T U R N   P C H L S T   F L A G   O F F                           00062400
C                                                                       00062500
        PCHLST = .FALSE.                                                00062600
C                                                                       00062700
      ELSE IF (CODE.EQ.16) THEN                                         00062800
C                                                                       00062900
C ... T U R N   T A B P R T   F L A G   O F F                           00063000
C                                                                       00063100
C         T O   P R I N T   T A B C Y L S                               00063200
C                                                                       00063300
        TABPRT = .FALSE.                                                00063400
C                                                                       00063500
      ELSE IF (CODE.EQ.17) THEN                                         00063600
C                                                                       00063700
C ... T U R N   T A B P R T   F L A G   O N                             00063800
C                                                                       00063900
C     T O   S U P P R E S S   T A B C Y L   P R I N T O U T             00064000
C                                                                       00064100
        TABPRT = .TRUE.                                                 00064200
C                                                                       00064300
      ELSE IF (CODE.EQ.18) THEN                                         00064400
C                                                                       00064500
C ... T U R N   S S P R T   F L A G  O N                                00064600
C                                                                       00064700
C     T O  P R I N T   S S U R F   A N D   S C U R V                    00064800
C                                                                       00064900
C     PRINT/SSPRT ,ON                                                   00065000
C                                                                       00065100
        SSPRT = .TRUE.                                                  00065200
C                                                                       00065300
      ELSE IF (CODE.EQ.19) THEN                                         00065400
C                                                                       00065500
C ... T U R N   S S P R T   F L A G  O F F                              00065600
C                                                                       00065700
C     T O  S U P P R E S S   S S U R F   A N D   S C U R V   P R I N T  00065800
C                                                                       00065900
C     PRINT/SSPRT ,OFF                                                  00066000
C                                                                       00066100
        SSPRT =.FALSE.                                                  00066200
C                                                                       00066300
      ELSE IF (CODE.EQ.20) THEN                                         00066400
C                                                                       00066500
C     PRINT/SSTEST,ON                                                   00066600
C                                                                       00066700
        SSTEST= .TRUE.                                                  00066800
C                                                                       00066900
      ELSE IF (CODE.EQ.21) THEN                                         00067000
C                                                                       00067100
C    PRINT/SSTEST,OFF                                                   00067200
C                                                                       00067300
        SSTEST=.FALSE.                                                  00067400
C                                                                       00067410
      ELSE IF (CODE.EQ.22) THEN                                         00067412
C                                                                       00067414
C     PRINT/AVPRT,ON   - PRINT AVOIDANCE ACTION DETAILS                 00067415
C                                                                       00067416
        AVLIST=.TRUE.                                                   00067418
C                                                                       00067420
      ELSE IF (CODE.EQ.23) THEN                                         00067422
C                                                                       00067424
C     PRINT/AVPRT,OFF   - SUPPRESS PRINT OF AVOIDANCE ACTION DETAILS    00067425
C                                                                       00067426
        AVLIST=.FALSE.                                                  00067428
C                                                                       00067430
      ELSE                                                              00067500
C.... NON VALID CODE                                                    00067600
      ENDIF                                                             00067700
C                                                                       00067800
C...  E X I T                                                           00067900
C                                                                       00068000
99999 CONTINUE                                                          00068100
      END                                                               00068200
**** SOURCE FILE : M0002773.V01   ***
*
C....    FORTRAN FUNCTION SUBPROGRAM      PSIGN      4/1/69     RC      QSGN0000
C                                                                       QSGN0010
      REAL FUNCTION PSIGN(A,B)                                          QSGN0020
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            QSGN0030
C                                                                       QSGN0040
C  PURPOSE         TO MULTIPLY THE FIRST ARGUMENT BY THE SIGN OF THE    QSGN0050
C                  SECOND ARGUMENT  -AND- IF THE SECOND ARGUMENT        QSGN0060
C                  IS EQUAL TO ZERO, TO RETURN THE VALUE ZERO           QSGN0070
C                                                                       QSGN0080
C  LINKAGE         VALUE=PSIGN(A,B)                                     QSGN0090
C                                                                       QSGN0100
C  ARGUMENTS       A AND B ANY REAL VARIABLES                           QSGN0110
C                                                                       QSGN0120
C  CALLED BY       QSD                                                  QSGN0130
C                                                                       QSGN0140
C     ------------------------------------------------------------      QSGN0150
C                                                                       QSGN0160
      IF (B) 10,20,10                                                   QSGN0170
C                                                                       QSGN0180
   10 PSIGN=DSIGN(A,B)                                                  QSGN0190
      RETURN                                                            QSGN0200
C                                                                       QSGN0210
   20 PSIGN=0.0                                                         QSGN0220
      RETURN                                                            QSGN0230
      END                                                               QSGN0240
**** SOURCE FILE : M0001210.W01   ***
*
C.....FORTRAN SUBROUTINE   ...PUNCH         8/68           SR,KH        PNCH0000
C                                                                       PNCH0001
C                                                10/70     RW           PNCH0005
C                                                                       PNCH0010
C PURPOSE          TO WRITE A SPECIFIED NUMBER OF CONTIGUOUS CANONICAL  PNCH0020
C                  FORMS,STARTING WITH A GIVEN CANONICAL FORM,ON THE    PNCH0030
C                  SYSTEM PUNCH OUTPUT FILE AS APT DEFINITION           PNCH0040
C                  STSTEMENTS WHICH CAN BE INCLUDED IN SUBSEQUENT PART  PNCH0050
C                  PROGRAMS. SCALARS ARE WRITTEN INTHE FORM---          PNCH0060
C                      VSCALAR VARIABLE = NUMBER.                       PNCH0070
C                  SURFACE DATA IS WRITTEN IN THE FORM---               PNCH0080
C                       SURFACE VARIABLE = SURFACE TYPE/CANON,ELEMENT1, PNCH0090
C                       ELEMENT2,...,ELEMENTN.                          PNCH0100
C                                                                       PNCH0110
C CALLING SEQUENCE CALL PUNCH(BLOCK,FORM,NUMBER)                        PNCH0120
C                                                                       PNCH0130
C ARGUMENTS        BLOCK            NUMBER OF THE CANONICAL FORM BLOCK  PNCH0140
C                                   CONTAINING THE FORMS TO BE PUNCHED. PNCH0150
C                                   (BLOCK 1 CONTAINS UNSUBSCRIPTED     PNCH0160
C                                    SCALARS,BLOCK 2 CONTAINS           PNCH0170
C                                    SUBSCRIPTED SCALARS,BLOCK 3        PNCH0180
C                                    CONTAINS SURFACE CANONICAL FORMS)  PNCH0190
C                  FORM             FIRST CANONICAL FORM TO BE PUNCHED. PNCH0200
C                  NUMBER           NUMBER OF CONTIGUOUS FORMS TO BE    PNCH0210
C                                   PUNCHED.                            PNCH0220
C                                                                       PNCH0230
C CALLED BY        NONE                                                 PNCH0240
C                                                                       PNCH0250
C SUBSIDIARIES     TYPE             ENTRY                               PNCH0260
C                  ----             -----                               PNCH0270
C                                                                       PNCH0280
C                  INTEGER FUNCTION ADDRSS                              PNCH0285
C                  SUBROUTINE       APT094                              PNCH0290
C                  SUBROUTINE       INCAN                               PNCH0295
C                  SUBROUTINE       TRANSF                              PNCH0300
C                  SUBROUTINE       UNPACK                              PNCH0310
C                  INTEGER FUNCTION XCANON                              PNCH0315
C                                                                       PNCH0320
C RESTRICTIONS     IF THERE IS MORE THAN ONE FORM TO BE PUNCHED,ALL     PNCH0330
C                  FORMS MUST LIE IN THE SAME BLOCK AND BE CONTIGUOUS.  PNCH0340
C                  THE PUNCHING OF TEMPORIES IS SUPPRESSED.             PNCH0350
C                                                                       PNCH0360
C DIAGNOSTICS      ERROR CODE       COMMENT                             PNCH0370
C                  ----------       -------                             PNCH0380
C                                                                       PNCH0390
C                  NONE             X WAS INCORRECTLY DEFINED AND       PNCH0400
C                                   WAS NOT PUNCHED.                    PNCH0410
C                                                                       PNCH0420
C                                                                       PNCH0430
C METHOD           A COMPUTED GO TO ON BLOCK IS EXECUTED TO BRANCH TO   PNCH0440
C                  THE PROCESSING APPROPRIATE TO THE BLOCK CONTAINING   PNCH0450
C                  THE CANONICAL FORMS TO BE PUNCHED.THE VALUE OF NUMBERPNCH0460
C                  SPECIFIES HOW MANY FORMS ARE TO BE PUNCHED.EACH FORM PNCH0470
C                  IS CHECKED TO DETERMINE IF IT IS UNDEFINED OR A      PNCH0480
C                  TEMPORARY. IF IT IS UNDEFINED,A DIAGNOSTIC IS ISSUED.PNCH0490
C                  IF IT IS UNDEFINED OR A TEMPORARY,PUNCHING IS        PNCH0500
C                  SUPPRESSED.IN THE CASE OF BLOCK 3 AN ADDITIONAL      PNCH0510
C                  CHECK IS MADE TO SEE IF THE FORM IS A LARGE DATA     PNCH0520
C                  ARRAY. IF SO,APT094 IS CALLED TO RETRIEVE THE        PNCH0530
C                  EXTERNAL FORM.                                       PNCH0540
C                       THE FORMS ARE OUTPUT TO THE SYSTEM PUNCH FILE ASPNCH0550
C                  APT PART PROGRAMMING DEFINITIONS IN THE FORMATS      PNCH0560
C                  DESCRIBED UNDER PURPOSE.EACH CARD IMAGE IS SERIALIZEDPNCH0570
C                  STARTING WITH SERIALIZATION 00000001 AND INCREASING  PNCH0580
C                  BY 1 FOR SUBSEQUENT CARD IMAGES.                     PNCH0590
C                                                                       PNCH0600
C ********************************************************************  PNCH0610
C                                                                       PNCH0620
      SUBROUTINE PUNCH(BLOCK,FORM,NUMBER)                               PNCH0630
      IMPLICIT  DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)          PNCH0640
      INCLUDE 'BLANKCOM.INC'                                            PNCH0642
      DOUBLE PRECISION X(COMSIZ)                                        PNCH0644
      EQUIVALENCE (COM(1),X(1))                                         PNCH0646
C                                                                       PNCH0648
      DIMENSION FORM(1)                                                 PNCH0660
      INTEGER BLOCK                                                     PNCH0670
C                                                                       PNCH0671
C                                                                       PNCH0689
      INCLUDE 'TOTAL.INC'                                               PNCH0691
      INCLUDE 'LDEF.INC'                                                PNCH0692
      INCLUDE 'IDEF.INC'                                                PNCH0693
      INCLUDE 'KNUMBR.INC'                                              PNCH0694
C                                                                       PNCH0695
C                                                                       PNCH0700
      INCLUDE 'DARRAY.INC'                                              PNCH0778
C                                                                       PNCH0791
C                                                                       PNCH0795
C...  LOCAL VARIABLES                                                   PNCH0796
C                                                                       PNCH0798
      DIMENSION FMT(4),LDAMOD(5),TYPE(30)                               PNCH0800
      LOGICAL LDASRF,BNDPCH,NAMFLG                                      PNCH0805
      INTEGER PNCHFL,SIZE,SUB,SERIAL,BCD,CNT,D                          PNCH0810
     1        ,PRNTFL,ADDRSS,XCANON                                     PNCH0815
      EXTERNAL ADDRSS,XCANON                                            PNCH0830
      CHARACTER*2 TWOCHR(4)                                             PNCH0865
      INTEGER IBLNK(2),BCDF                                             PNCH0866
      DIMENSION OUTLST(16),BUFFER(2),IU(8),REFSRF(12),INOUT(2)          PNCH0870
      CHARACTER LTEST(8),BUCK,BLK,LPAREN,RPAREN,NO*4,CMA,BUF(16),NUMB,Z PNCH0880
      CHARACTER BLANK*8,DTEST*8,OUTLST*8,BUFFER*8,INOUT*4,TYPE*6        PNCH0881
      EQUIVALENCE (LTEST(1),DTEST),(NO(4:4),NUMB)                       PNCH0885
      EQUIVALENCE (BUFFER,BUF(1)),(BLANK,BLK)                           PNCH0890
     1,(A,IA),(TWOCHR(1),DTEST),(CANLOC,II)                             PNCH0895
      DOUBLE PRECISION NAME,MEMBER,RSUB                                 PNCH0970
      CHARACTER LNAME*8,LMEM*8                                          PNCH0980
      LOGICAL CKSTR,CKDTR                                               PNCH0990
      DOUBLE PRECISION ARRAY(10)                                        PNCH0992
      INTEGER IARRAY(2,10)                                              PNCH0993
      EQUIVALENCE (ARRAY(1),IARRAY(1,1))                                PNCH0994
      DATA LDASRF /.FALSE. /                                            PNCH1002
      DATA  MODTOP,LDAMOD,CNT                                           PNCH1004
     1   / 5,  11,12,26,29,30,  0/                                      PNCH1005
      DATA LPAREN,RPAREN,INOUT/'(',')','  IN',' OUT'/                   PNCH1008
      DATA BUCK,CMA,BLANK/'$', ',' ,'        '/                         PNCH1011
      DATA Z/'Z'/                                                       PNCH1012
      DATA  TYPE /'LINE  ','PLANE ','CYLNDR','CIRCLE','SPHERE',         PNCH1013
     1            'HYPERB','LCONIC','ELLIPS','CONE  ','GCONIC',         PNCH1014
     2                     'TABCYL','RLDSRF','POLCON','QADRIC',         PNCH1015
     3            'PARSRF','      ','      ','MATRIX','POINT ',         PNCH1016
     4            'VECTOR','      ','      ','      ','      ',         PNCH1017
     5 '      ','PATERN','BOUNDS','OBJECT','SSURF ','SCURV '/           PNCH1018
C                                                                       PNCH1019
C...  CNVRT IS AN ARITHMETIC FUNCTION THAT CONVERTS AN INTEGER TO A     PNCH1020
C     LEFT-JUSTIFIED 2-DIGIT REPRESENTATION WITH LEADING ZEROS.         PNCH1030
C                                                                       PNCH1040
C.... SET UP EQUIVALENT OF 8 BLANK CHARACTERS IN D.P.WORD               PNCH1042
      IBLNK(1)=BCDF('    ')                                             PNCH1043
      IBLNK(2)=IBLNK(1)                                                 PNCH1044
C                                                                       PNCH1080
C ... DETERMINE VIRTUAL INDEX OF FORM(1) IN X-ARRAY.                    PNCH1090
C                                                                       PNCH1100
      I=(ADDRSS(FORM) - ADDRSS(X))/KWRDSZ + 1                           PNCH1110
      IABS = I                                                          PNCH1115
      IF (CANFLG) CALL INCAN(I)                                         PNCH1120
      NAMFLG = .FALSE.                                                  PNCH1125
C                                                                       PNCH1130
C ... BRANCH TO APPROPRIATE PROCESSING FOR SPECIFIED BLOCK.             PNCH1140
C                                                                       PNCH1150
C                                                                       PNCH1160
      GO TO (10,1000,2000,1999,1999),BLOCK                              PNCH1170
C                                                                       PNCH1180
C                  B L O C K   O N E                                    PNCH1190
C                                                                       PNCH1200
   10 N=1                                                               PNCH1210
   50 CONTINUE                                                          PNCH1215
      CNT = 100                                                         PNCH1220
C                                                                       PNCH1230
C ... DETERMINE ABSOLUTE INDEX.                                         PNCH1232
C                                                                       PNCH1234
      GO TO 3150                                                        PNCH1236
C                                                                       PNCH1238
C... SET K = INDEX OF NEXT SCALAR NAME                                  PNCH1240
C                                                                       PNCH1250
   15 K=IABS+1                                                          PNCH1260
C                                                                       PNCH1270
C... CHECK IF FORM IS A TEMPORARY OR UNDEFINED                          PNCH1280
C                                                                       PNCH1290
      GO TO 3000                                                        PNCH1300
C                                                                       PNCH1310
C... WRITE SCALAR DEFINITION                                            PNCH1320
C                                                                       PNCH1330
   20 CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH1335
      CALL CFORM(LNAME,DARRAY,14,6)                                     PNCH1340
      CALL CFORM('=',DARRAY,21,1)                                       PNCH1341
      CALL FCONV(X(IABS),DARRAY,22,14,6)                                PNCH1343
      CALL ICONV(CNT,DARRAY,85,3)                                       PNCH1344
      CALL CFORM(LNAME,DARRAY,80,6)                                     PNCH1345
      CALL CPUNCH(DARRAY(9:88),PCHLST)                                  PNCH1349
      IF(PCHLST) CALL CPRINT(DARRAY)                                    PNCH1350
   40 I = I + 2                                                         PNCH1360
      IABS = IABS + 2                                                   PNCH1365
      N=N+1                                                             PNCH1370
      IF (N.LE.NUMBER) GOTO 50                                          PNCH1375
      RETURN                                                            PNCH1380
C                                                                       PNCH1390
C                  B L O C K   T W O                                    PNCH1400
C                                                                       PNCH1410
 1000 SIZE = 1                                                          PNCH1415
      N = 1                                                             PNCH1420
 1040 CONTINUE                                                          PNCH1425
C                                                                       PNCH1430
C ... DETERMINE ABSOLUTE INDEX.                                         PNCH1432
C                                                                       PNCH1434
      GO TO 3150                                                        PNCH1436
C                                                                       PNCH1438
C... SET SUB = NEXT SUBSCRIPT. SET K = INDEX OF NEXT SCALAR NAME.       PNCH1440
C                                                                       PNCH1450
 1005 SUB = X(IABS + 1)                                                 PNCH1460
      CNT = 0                                                           PNCH1470
C                                                                       PNCH1480
      GO TO 2007                                                        PNCH1490
C                                                                       PNCH1520
C... WRITE SCALAR DEFINITION                                            PNCH1530
C                                                                       PNCH1540
 1010 CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH1542
      CALL CFORM(LNAME,DARRAY,14,6)                                     PNCH1543
      CALL CFORM('(    ) =',DARRAY,20,8)                                PNCH1544
      CALL ICONV(SUB,DARRAY,21,4)                                       PNCH1546
      CALL FCONV(X(IABS),DARRAY,28,14,6)                                PNCH1548
      CALL ICONV(CNT,DARRAY,85,3)                                       PNCH1549
      CALL CFORM(LNAME,DARRAY,80,6)                                     PNCH1550
      CALL CPUNCH(DARRAY(9:88),PCHLST)                                  PNCH1555
      IF(PCHLST) CALL CPRINT(DARRAY)                                    PNCH1560
C                                                                       PNCH1570
C... ADVANCE CURRENT CANONICAL FORM INDEX                               PNCH1580
C                                                                       PNCH1590
 1030 D = 3 - MIN0(1,SUB-1)                                             PNCH1600
      I = I + D                                                         PNCH1610
      IABS = IABS + D                                                   PNCH1615
      N=N+1                                                             PNCH1620
      IF (N.LE.NUMBER) GOTO 1040                                        PNCH1625
      RETURN                                                            PNCH1630
C                                                                       PNCH1640
C                  B L O C K   T H R E E                                PNCH1650
C                                                                       PNCH1652
C     VORBEREITUNG FUER MEMBERAUSGABE                                   PNCH1654
 1999 CALL DATE(DATUM)                                                  PNCH1656
C                                                                       PNCH1658
C                                                                       PNCH1660
 2000 BNDPCH=.FALSE.                                                    PNCH1665
      N=1                                                               PNCH1670
 2005 CNT=100                                                           PNCH1675
C                                                                       PNCH1680
C ... DETERMINE ABSOLUTE INDEX.                                         PNCH1683
      GO TO 3150                                                        PNCH1686
C                                                                       PNCH1689
C... GET MODE,SIZE AND SUBSCRIPT OF NEXT CANONICAL FORM                 PNCH1690
C     AND CHECK VALIDITY.                                               PNCH1695
C                                                                       PNCH1700
 2006 CALL UNPACK(X(IABS),MODE,SIZE,SUB)                                PNCH1710
      IF(MODE.LE.0.OR.MODE.GT.30.OR.SIZE.LE.0.OR.SIZE.GT.               PNCH1715
     1 50) GO TO 3200                                                   PNCH1716
C                                                                       PNCH1720
C ... BYPASS IF THIS FORM HAS ALREADY BEEN PUNCHED.                     PNCH1721
C                                                                       PNCH1722
      IF (X(IABS-1) .GT. 0) GO TO 2007                                  PNCH1724
      IF (SUB .LE. 1) NAMFLG = .FALSE.                                  PNCH1725
      GO TO 2110                                                        PNCH1726
C                                                                       PNCH1728
C ... FIND ALPHANUMERIC NAME.                                           PNCH1730
C                                                                       PNCH1740
 2007 IF (SUB .LT. 0 .OR. SUB .GT. 9999) GO TO 3200                     PNCH1745
      IF (SUB .GT. 1) GO TO 3170                                        PNCH1748
      NAMFLG = .FALSE.                                                  PNCH1750
      K = IABS + SIZE + 1 - BLOCK/3                                     PNCH1754
 2008 IF (BLOCK .EQ. 2) GO TO 3000                                      PNCH1758
      X(IABS-1) = -X(IABS-1)                                            PNCH1759
C                                                                       PNCH1760
C... SET II = INDEX OF FIRST ELEMENT IN CURRENT CANONICAL FORM          PNCH1770
C                                                                       PNCH1780
      II = 1                                                            PNCH1790
C                                                                       PNCH1791
C...  SKIP PUNCHING IF PARAMETRIC SURFACE OR NO SURFACE                 PNCH1792
C                                                                       PNCH1793
      IF((MODE.EQ.15).OR.(MODE.GT.20.AND.MODE.LT.26))GO TO 2110         PNCH1795
C                                                                       PNCH1796
C...  CHECK IF FORM IS TEMPORARY OR UNDEFINED                           PNCH1797
C                                                                       PNCH1798
      GO TO 3000                                                        PNCH1799
C                                                                       PNCH1800
C... IF THE CANONICAL FORM IS A LARGE DATA ARRAY,RETRIEVE THE EXTERNAL  PNCH1810
C... FORMAND SET LDASRF = .TRUE.  RESET SIZE TO THE SIZE OF THE EXTERNALPNCH1820
C... FORM. RESET II TO THE RELATIVE POSITION IN BLANK COMMON OF THE     PNCH1830
C... FIRST ELEMENT OF THE EXTERNAL FORM                                 PNCH1840
C                                                                       PNCH1850
 2020 LDASRF=.FALSE.                                                    PNCH1860
      DO 2010  J = 1,MODTOP                                             PNCH1870
      IF (MODE .NE. LDAMOD(J))  GO TO 2010                              PNCH1880
      CALL APT094(3,X(IABS),CANLOC)                                     PNCH1890
      SIZE = X(IABS+1) + II -2                                          PNCH1900
      LDASRF = .TRUE.                                                   PNCH1910
 2010 CONTINUE                                                          PNCH1920
      GO TO 2015                                                        PNCH1930
C                                                                       PNCH1991
C ... WRITE FIRST DEFINITION CARD FOR SUBSCRIPTED SURFACE NAME.         PNCH1992
C                                                                       PNCH1993
 2012 CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH1994
      CALL CFORM(LNAME,DARRAY,14,6)                                     PNCH1995
      CALL CFORM('(    ) =',DARRAY,20,8)                                PNCH1996
      CALL ICONV(SUB,DARRAY,21,4)                                       PNCH1997
      CALL CFORM(TYPE(MODE),DARRAY,29,6)                                PNCH1998
      CALL CFORM('/CANON,$',DARRAY,35,8)                                PNCH1999
      CALL ICONV(CNT,DARRAY,85,3)                                       PNCH2000
      CALL CFORM(LNAME,DARRAY,80,6)                                     PNCH2001
      CALL CPUNCH(DARRAY(9:88),PCHLST)                                  PNCH2002
      IF(PCHLST) CALL CPRINT(DARRAY)                                    PNCH2003
      GO TO 2045                                                        PNCH2004
C                                                                       PNCH2005
C... SPECIAL PROCESSING IS REQUIRED FOR BOUNDS OR OBJECT CANON FORMS.   PNCH2006
C                                                                       PNCH2007
 2015 IF(BLOCK.GE.4)GO TO 5000                                          PNCH2008
      IF(MODE.EQ.27 .OR. MODE.EQ.28)GO TO 4000                          PNCH2009
C                                                                       PNCH2010
C... WRITE FIRST DEFINITION CARD                                        PNCH2020
C                                                                       PNCH2030
      IF(SUB .NE. 0) GO TO 2012                                         PNCH2040
      CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH2044
      CALL CFORM(LNAME,DARRAY,14,6)                                     PNCH2045
      CALL CFORM('=',DARRAY,21,1)                                       PNCH2046
      CALL CFORM(TYPE(MODE),DARRAY,23,6)                                PNCH2047
      CALL CFORM('/CANON,$',DARRAY,29,8)                                PNCH2050
      CALL ICONV(CNT,DARRAY,85,3)                                       PNCH2051
      CALL CFORM(LNAME,DARRAY,80,6)                                     PNCH2052
      CALL CPUNCH(DARRAY(9:88),PCHLST)                                  PNCH2053
      IF(PCHLST) CALL CPRINT(DARRAY)                                    PNCH2055
C                                                                       PNCH2060
C ... IF LDASRF = FALSE, PUT C.F. INTO REFSRF AND CHK FOR REFSYS.       PNCH2065
C                                                                       PNCH2070
 2045 IF (.NOT. LDASRF) GO TO 3050                                      PNCH2075
C                                                                       PNCH2080
 2050 CNT=CNT+1                                                         PNCH2090
      L=14                                                              PNCH2100
      DO 2055 JJ=1,4                                                    PNCH2110
      IF(LDASRF) XX=X(II+1)                                             PNCH2120
      IF(.NOT.LDASRF) XX=REFSRF(II)                                     PNCH2130
      CALL FCONV(XX,DARRAY,L,14,6)                                      PNCH2140
      L=L+14                                                            PNCH2150
      II=II+1                                                           PNCH2160
      IF(II.GT.SIZE) GO TO 2060                                         PNCH2170
      CALL CFORM(',',DARRAY,L,1)                                        PNCH2180
 2055 L=L+1                                                             PNCH2190
      CALL CFORM('$',DARRAY,L,1)                                        PNCH2200
 2060 CALL ICONV(CNT,DARRAY,85,3)                                       PNCH2210
      CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH2220
      CALL CFORM(LNAME,DARRAY,80,6)                                     PNCH2222
      CALL CPUNCH(DARRAY(9:88),PCHLST)                                  PNCH2230
      IF (PCHLST) CALL CPRINT (DARRAY)                                  PNCH2240
      IF(II.LE.SIZE) GO TO 2050                                         PNCH2245
C                                                                       PNCH2490
C... IF SURFACE IS A LARGE DATA ARRAY, RESET SIZE = 2                   PNCH2500
C                                                                       PNCH2510
 2110 IF (.NOT. LDASRF) GO TO 2115                                      PNCH2515
      SIZE = 2                                                          PNCH2520
      LDASRF = .FALSE.                                                  PNCH2522
C                                                                       PNCH2525
C...  IF IN SUBSIDIARY BOUNDS PUNCH MODE, RETURN TO BOUNDS PROCESSING.  PNCH2528
C                                                                       PNCH2530
 2115 IF (BNDPCH) GO TO 4260                                            PNCH2535
C                                                                       PNCH2538
C... ADVANCE CURRENT CANONICAL FORM INDEX                               PNCH2540
C                                                                       PNCH2550
 2120 D = SIZE + 2 - MIN0(SUB/2,1)                                      PNCH2555
      I = I + D                                                         PNCH2560
      IABS = IABS + D                                                   PNCH2565
      N = N + 1                                                         PNCH2570
      IF (N .LE. NUMBER) GO TO 2005                                     PNCH2580
      RETURN                                                            PNCH2590
C                                                                       PNCH2600
C ... C H E C K   I F    T E M P   O R   U N D E F I N E D.             PNCH2610
C                                                                       PNCH2620
 2970 CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH2621
      CALL CFORM(LNAME,DARRAY,14,6)                                     PNCH2622
      L=21                                                              PNCH2623
      IF(SUB.EQ.0) GO TO 2971                                           PNCH2624
      CALL CFORM('(    )',DARRAY,20,6)                                  PNCH2626
      CALL ICONV(SUB,DARRAY,21,4)                                       PNCH2628
      L=27                                                              PNCH2630
 2971 CALL CFORM('IS INCORRECTLY DEFINED AND WAS NOT PUNCHED.           PNCH2632
     C    ',DARRAY,L,43)                                                PNCH2633
      CALL CPRINT(DARRAY)                                               PNCH2635
 2980 GO TO (40,1030,2110,2110,2110), BLOCK                             PNCH2640
C                                                                       PNCH2645
C... IF THE FORM IS UNDEFINED OR A TEMPORARY,SUPPRESS PUNCHING IT       PNCH2650
C                                                                       PNCH2660
 3000 IF (CKDTR(X(IABS))) GO TO 2980                                    PNCH2670
      CALL HOLFRM(X(K),DTEST,1,8,NWD)                                   PNCH2680
      IF (LTEST(1) .EQ. BUCK .OR. (LTEST(2) .EQ. BUCK .AND. LTEST(1)    PNCH2685
     1 .EQ. Z)) GO TO 2980                                              PNCH2690
C                                                                       PNCH2695
C ... IF FORM INCORRECTLY DEFINED, WRITE A DIAGNOSTIC.                  PNCH2700
C                                                                       PNCH2705
      IF (CKSTR(X(IABS))) GO TO 2970                                    PNCH2710
C                                                                       PNCH2715
C                                                                       PNCH2740
C... ADVANCE CARD SERIALIZATION                                         PNCH2750
C                                                                       PNCH2760
      CNT = CNT + 1                                                     PNCH2770
      GO TO (20,1010,2020,2020,2020), BLOCK                             PNCH2790
C                                                                       PNCH2800
C ... REFSYS TEST.                                                      PNCH2810
C                                                                       PNCH2820
 3050 DO 3060 J=1,SIZE                                                  PNCH2830
      KK=IABS+J-1                                                       PNCH2840
 3060 REFSRF(J) = X(KK)                                                 PNCH2850
      IF (.NOT.REFFLG.OR.MODE.LE.0.OR.MODE.GT.20) GO TO 2050            PNCH2860
      GO TO (3070,3070,3080,3080,3090,3100,3100,3100,3080,3100,2050,    PNCH2870
     1 2050,2050,3100,2050,2050,2050,2050,3090,3110), MODE              PNCH2880
 3070 IR=4                                                              PNCH2890
      GO TO 3120                                                        PNCH2900
 3080 IR=5                                                              PNCH2910
      GO TO 3120                                                        PNCH2920
 3090 IR=2                                                              PNCH2930
      GO TO 3120                                                        PNCH2940
 3100 IR=1                                                              PNCH2950
      GO TO 3120                                                        PNCH2960
 3110 IR=3                                                              PNCH2970
 3120 CALL  TRANSF(REFSRF,X(IABS),IR,SIZE,0)                            PNCH2980
      GO TO 2050                                                        PNCH2990
C                                                                       PNCH3000
C ... DETERMINE ABSOLUTE INDEX.                                         PNCH3010
C                                                                       PNCH3020
 3150 A = X(IABS - BLOCK/3)                                             PNCH3030
      IF (IA .LE. 0 .OR. IA .GT. 1024) GO TO 3160                       PNCH3040
      I = I + IA                                                        PNCH3050
      IABS = I                                                          PNCH3060
      IF (CANFLG) IABS = XCANON(I)                                      PNCH3070
      GO TO 3150                                                        PNCH3080
 3160 GO TO (15,1005,2006,2006,2006), BLOCK                             PNCH3090
C                                                                       PNCH3100
C ... DETERMINE ABSOLUTE LOCATION OF FORM NAME.                         PNCH3110
C                                                                       PNCH3120
 3170 IF (.NOT. NAMFLG) GO TO 3175                                      PNCH3130
      IF (CANFLG) K = XCANON(IK)                                        PNCH3140
      GO TO 3195                                                        PNCH3150
C                                                                       PNCH3160
 3175 NAMFLG = .TRUE.                                                   PNCH3170
      INCR = SIZE + 1 - BLOCK/3                                         PNCH3180
      K = IABS + INCR                                                   PNCH3190
      IK = I + INCR                                                     PNCH3200
      DO 3190 MM = 2,SUB                                                PNCH3210
 3178 A = X(K)                                                          PNCH3220
      IF (IA .LE. 0 .OR. IA .GT. 1024) GO TO 3180                       PNCH3230
      IK = IK + IA                                                      PNCH3240
      K = IK                                                            PNCH3250
      IF (CANFLG) K = XCANON(IK)                                        PNCH3260
      GO TO 3178                                                        PNCH3270
 3180 K = K + SIZE + 1                                                  PNCH3280
      IK = IK + SIZE + 1                                                PNCH3290
 3190 CONTINUE                                                          PNCH3300
 3195 IF (CANFLG) IABS = XCANON(I)                                      PNCH3310
      GO TO 2008                                                        PNCH3320
C                                                                       PNCH3330
C ... IF CANONICAL FORM IS INVALID, PRINT DIAGNOSTIC AND RETURN.        PNCH3340
C                                                                       PNCH3350
 3200 CALL CFORM('INVALID CANONICAL FORM PUNCHING SUPPRESSED            PNCH3360
     C      ',  DARRAY,14,42)                                           PNCH3370
      CALL CPRINT (DARRAY)                                              PNCH3380
      RETURN                                                            PNCH3390
C                                                                       PNCH3400
C...  PROCESSING FOR BOUNDS AND OBJECTS                                 PNCH3410
C                                                                       PNCH3420
 4000 IF (BNDPCH) GO TO 4260                                            PNCH3425
      JK = SIZE + 16                                                    PNCH3428
      IF (MODE .EQ. 27) GO TO 4050                                      PNCH3435
C                                                                       PNCH3440
C... P U N C H   O B J E C T   C A R D                                  PNCH3450
C                                                                       PNCH3460
      CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH3470
      CALL CFORM(LNAME,DARRAY,14,6)                                     PNCH3472
      CALL CFORM('=OBJECT/',DARRAY,20,8)                                PNCH3480
      M=101                                                             PNCH3490
      J=-2                                                              PNCH3500
 4004 L=28                                                              PNCH3510
 4005 J=J+2                                                             PNCH3520
      CALL HOLFRM(X(IABS+J),DTEST,1,8,NWD)                              PNCH3530
      IF(LTEST(1).EQ.BUCK.OR.CKSTR(X(IABS+J))) GO TO 2970               PNCH3535
      CALL CFORM(DTEST,DARRAY,L,6)                                      PNCH3540
      CALL CFORM(',' ,DARRAY,L+6,1)                                     PNCH3545
      IF(J.EQ.SIZE-2) GO TO 4010                                        PNCH3550
      L=L+7                                                             PNCH3560
      IF (L.LT.73) GO TO 4005                                           PNCH3570
      CALL CFORM ('$',DARRAY,L,1)                                       PNCH3575
 4006 CALL ICONV(M,DARRAY,85,3)                                         PNCH3580
      CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH3590
      CALL CFORM(LNAME,DARRAY,80,6)                                     PNCH3592
      M=M+1                                                             PNCH3600
      CALL CPUNCH(DARRAY(9:88),PCHLST)                                  PNCH3610
      IF(PCHLST) CALL CPRINT(DARRAY)                                    PNCH3620
      IF(J.EQ.SIZE-2) GO TO 4011                                        PNCH3622
      GO TO 4004                                                        PNCH3624
 4010 CALL CFORM(' ',DARRAY,L+6,1)                                      PNCH3626
      GO TO 4006                                                        PNCH3628
 4011 GO TO 2120                                                        PNCH3630
C                                                                       PNCH3635
C ... P U N C H   B O U N D S   C A R D S                               PNCH3640
C                                                                       PNCH3645
 4050 DO 4051 JJ=1,66                                                   PNCH3650
 4051 OUTLST(JJ) = BLANK                                                PNCH3651
      DO 4130 JJ=2,SIZE,2                                               PNCH3652
C                                                                       PNCH3660
C ... CHECK FOR INVALID OR UNASSIGNED NESTED ARGUMENTS.                 PNCH3670
C                                                                       PNCH3680
      CALL HOLFRM(X(IABS+JJ-2),BUFFER(1),1,8,NWD)                       PNCH3690
      IF (BUF(1) .EQ. BUCK .OR. CKSTR(X(IABS+JJ-2))) GO TO 2970         PNCH3700
C                                                                       PNCH3710
C... DETERMINE INDEX,SUBSCRIPT, AND HALF-SPACE MODIFIER FOR EA. OPERAND.PNCH3720
C                                                                       PNCH3730
      J=JJ/2                                                            PNCH3740
      BUFFER(2)=BLANK                                                   PNCH3750
      IUVW=X(IABS+JJ-1)                                                 PNCH3760
      IU(J)=IUVW/K1E4                                                   PNCH3770
      ISUB=(IUVW-IU(J)*K1E4)/K10                                        PNCH3780
      IHSMOD=IUVW-IU(J)*K1E4-ISUB*K10                                   PNCH3790
C                                                                       PNCH3800
C...  IF REFERENCED SURFACE IS SUBSCRIPTED, CONVERT SUBSCRIPT TO ALPHA- PNCH3810
C     NUMERIC FORM AND LEFT-JUSTIFY IT NEXT TO THE NAME.                PNCH3820
C                                                                       PNCH3830
      DO 4060 M=3,8                                                     PNCH3840
      IF (BUF(M-1) .EQ. BLK) GO TO 4070                                 PNCH3850
 4060 CONTINUE                                                          PNCH3860
 4070 IF (ISUB .EQ. 0) GO TO 4110                                       PNCH3870
      BUF(M-1)=LPAREN                                                   PNCH3880
      DO 4080 KK=1,3                                                    PNCH3890
      L=4-KK                                                            PNCH3900
      BCD=MOD(ISUB,10)                                                  PNCH3910
      CALL HOLFRM(BCD,NO,1,4,NWD)                                       PNCH3912
      LTEST(L)=NUMB                                                     PNCH3920
      ISUB = ISUB/K10                                                   PNCH3930
      IF (ISUB .EQ. 0) GO TO 4090                                       PNCH3940
 4080 CONTINUE                                                          PNCH3950
 4090 DO 4100 KK=L,4                                                    PNCH3960
      BUF(M)=LTEST(KK)                                                  PNCH3970
 4100 M=M+1                                                             PNCH3980
      BUF(M-1)=RPAREN                                                   PNCH3990
 4110 BUF(M)=CMA                                                        PNCH4000
C                                                                       PNCH4010
C...  SUPPRESS HSMOD AND COMMA IF PRIMARY SURFACE.                      PNCH4020
C                                                                       PNCH4030
      IF (J .EQ. 1) GO TO 4125                                          PNCH4040
      IF (IHSMOD .EQ. 1 .OR. IHSMOD .EQ. 2) GO TO 4112                  PNCH4050
      BCD=IHSMOD                                                        PNCH4060
      CALL HOLFRM(BCD,NO,1,4,NWD)                                       PNCH4062
      GO TO 4116                                                        PNCH4070
 4112 NO=INOUT(IHSMOD)                                                  PNCH4080
      BUF(M+1) = NO(2:2)                                                PNCH4090
      BUF(M+2) = NO(3:3)                                                PNCH4100
 4116 BUF(M+3)=NUMB                                                     PNCH4110
C                                                                       PNCH4120
C...  SUPPRESS FINAL COMMA IF LAST BOUNDING SURFACE.                    PNCH4130
C                                                                       PNCH4140
      IF (JJ .EQ. SIZE) GO TO 4125                                      PNCH4150
      BUF(M+4)=CMA                                                      PNCH4160
C                                                                       PNCH4170
C...  WILL NEED SECOND CARD IF MORE THAN TWO BOUNDING SURFACES, AND     PNCH4180
C     THIRD CARD IF MORE THAN SIX SURFACES, ETC.                        PNCH4190
      JK =JJ - 6                                                        PNCH4200
      IF ((JK - (JK/8)*8) .EQ. 0) BUF(M + 4) = BUCK                     PNCH4210
C                                                                       PNCH4220
 4125 OUTLST(JJ-1)=BUFFER(1)                                            PNCH4230
 4130 OUTLST(JJ)=BUFFER(2)                                              PNCH4240
C                                                                       PNCH4250
C...  PUNCH FIRST CARD.                                                 PNCH4260
C                                                                       PNCH4270
      CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH4280
      CALL CFORM(LNAME,DARRAY,14,6)                                     PNCH4282
      CALL CFORM('=BOUNDS/',DARRAY,20,8)                                PNCH4284
      CALL CFORM(OUTLST(1),DARRAY,28,48)                                PNCH4288
      CALL CFORM(LNAME,DARRAY,80,6)                                     PNCH4290
      CALL CFORM('01',DARRAY, 86,2)                                     PNCH4292
      CALL CPUNCH(DARRAY(9:88),PCHLST)                                  PNCH4294
      IF(PCHLST) CALL CPRINT(DARRAY)                                    PNCH4300
      IF (SIZE .LE. 6) GO TO 4250                                       PNCH4310
C                                                                       PNCH4320
C...  PUNCH INTERMEDIATE CARDS.                                         PNCH4330
C                                                                       PNCH4340
      INTCDS = SIZE/8                                                   PNCH4350
      CNT=101                                                           PNCH4360
      JK = -1                                                           PNCH4365
      DO 4170 JJ = 1,INTCDS                                             PNCH4370
      JK = JK + 8                                                       PNCH4380
      CNT = CNT + 1                                                     PNCH4400
      CALL CFORM(',',DARRAY,14,1)                                       PNCH4401
      CALL CFORM(OUTLST(JK),DARRAY,15,64)                               PNCH4405
      CALL ICONV(CNT,DARRAY,85,3)                                       PNCH4410
      CALL HOLFRM(X(K),LNAME,1,8,NWD)                                   PNCH4415
      CALL CFORM(LNAME,DARRAY,80,6)                                     PNCH4416
      CALL CPUNCH(DARRAY(9:88),PCHLST)                                  PNCH4420
      IF(PCHLST) CALL CPRINT(DARRAY)                                    PNCH4430
 4170 CONTINUE                                                          PNCH4440
C                                                                       PNCH4450
C...  P U N C H   C A R D S   F O R   B O U N D I N G   S U R F A C E S PNCH4460
C                                                                       PNCH4470
C ... BYPASS IF PUNCH/ALL OR PUNCH/GEOM IS SPECIFIED.                   PNCH4480
C                                                                       PNCH4490
 4250 IF (NUMBER .GT. 1) GO TO 2120                                     PNCH4500
C                                                                       PNCH4510
C...  SET FLAG FOR SUBSIDIARY BOUNDS PUNCHING MODE AND PUNCH CARD(S).   PNCH4520
C                                                                       PNCH4530
      BNDPCH=.TRUE.                                                     PNCH4540
C                                                                       PNCH4550
      JJJ=SIZE/2                                                        PNCH4560
      DO 4260 JK=1,JJJ                                                  PNCH4570
      I=IU(JK)+IBLK1                                                    PNCH4580
      IABS = I                                                          PNCH4590
      IF (CANFLG) IABS = XCANON(I - 1) + 1                              PNCH4600
      NAMFLG = .FALSE.                                                  PNCH4610
      GO TO 2005                                                        PNCH4620
 4260 CONTINUE                                                          PNCH4630
      RETURN                                                            PNCH4640
C    MEMBER-AUSGABE AUF PDS                                             PNCH4650
 5000 ARRAY(1)=X(K)                                                     PNCH4660
      MEMBER=X(K)                                                       PNCH4662
      CALL HOLFRM(MEMBER,LMEM,1,8,NWD)                                  PNCH4663
      RSUB=0.D0                                                         PNCH4664
      IF(SUB.EQ.0)GOTO 5004                                             PNCH4666
      RSUB=SUB                                                          PNCH4668
      NAME=X(K)                                                         PNCH4670
      CALL HOLFRM(NAME,LNAME,1,8,NWD)                                   PNCH4671
      CALL ICONV(SUB+10000000,LMEM,1,8)                                 PNCH4672
      DO 5001 I1=1,8                                                    PNCH4674
      IF(LNAME(I1:I1).EQ.BLK)GOTO 5004                                  PNCH4676
 5001 LMEM(I1:I1)=LNAME(I1:I1)                                          PNCH4678
C INDEX                                                                 PNCH4679
 5004 ARRAY(2)=RSUB                                                     PNCH4680
C OBERFLAECHENART                                                       PNCH4690
      IARRAY(1,3)=MODE                                                  PNCH4700
C KENNUNG FUER GROSSFLAECHEN                                            PNCH4710
      IARRAY(2,3)=5                                                     PNCH4720
C ANZAHL DER CANON-ELEMENTE                                             PNCH4730
      IARRAY(1,4)=0                                                     PNCH4740
      ILA=X(IABS+1)                                                     PNCH4750
      IARRAY(2,4)=ILA                                                   PNCH4760
      ARRAY(5)=0.D0                                                     PNCH4770
C *** VAX VERSION - OPEN FILE ON APTLIB BEFORE WRITE   ***              PNCH4771
C *** PUNCH/RANDOM (BLOCK=5) GEOMETRY ALWAYS STORED    ***              PNCH4772
C *** PUNCH/RETAIN (BLOCK=4) ONLY NEW GEOMETRY STORED  ***              PNCH4773
      CALL WTDIRE(19,MEMBER,DATUM,8,IRET)                               PNCH4774
      IF(IRET.EQ.9.AND.BLOCK.EQ.4)                                      PNCH4775
     /CALL WTDIRE(-19,MEMBER,DATUM,8,IRET)                              PNCH4776
      IF(IRET.NE.0)GOTO 5020                                            PNCH4777
      JJ=6                                                              PNCH4780
      DO 5010 JJJ=II,SIZE                                               PNCH4790
      ARRAY(JJ)=X(JJJ+1)                                                PNCH4800
      IF(JJJ.EQ. SIZE)GOTO 5005                                         PNCH4805
      JJ=JJ+1                                                           PNCH4810
      IF(JJ.LE.9)GOTO 5010                                              PNCH4820
 5005 CNT=CNT+1                                                         PNCH4830
      ARRAY(10)=CNT                                                     PNCH4840
      CALL WTSATZ(19,ARRAY,10,IRET)                                     PNCH4850
      DO 5006 I=1,10                                                    PNCH4872
        ARRAY(I)=0.0D0                                                  PNCH4873
 5006 CONTINUE                                                          PNCH4874
      JJ=1                                                              PNCH4880
      IF(IRET.NE.0)GOTO 5020                                            PNCH4890
 5010 CONTINUE                                                          PNCH4900
C    ABSCHLUSS                                                          PNCH4910
C  *** VAX VERSION - WTDIRE OPENS FILE IN APTLIB    ***                 PNCH4911
C  ***               NEEDS TO BE DONE BEFORE WRITE  ***                 PNCH4912
C      CALL WTDIRE(19,MEMBER,DATUM,8,IRET)                              PNCH4920
C      IF(IRET.EQ.9.AND.BLOCK.EQ.4)                                     PNCH4930
C     /CALL WTDIRE(-19,MEMBER,DATUM,8,IRET)                             PNCH4940
      IF(IRET.EQ.0)GOTO 5040                                            PNCH4950
 5020 ILEN=0                                                            PNCH4951
      IF (IRET.EQ.3) THEN                                               PNCH4952
          CALL CFORM('0 ERROR WRITING TO FILE :',DARRAY,1,ILEN)         PNCH4953
      ELSE IF (IRET.EQ.5) THEN                                          PNCH4954
        CALL CFORM('0 ERROR OPENING FILE :',DARRAY,1,ILEN)              PNCH4956
      ELSE                                                              PNCH4957
        CALL CFORM('0 I/O ERROR FILE :',DARRAY,1,ILEN)                  PNCH4958
      ENDIF                                                             PNCH4959
      IPOS=ILEN+2                                                       PNCH4964
      CALL CFORM(LMEM,DARRAY,IPOS,8)                                    PNCH4965
      CALL CPRINT(DARRAY)                                               PNCH4970
 5040 CALL CLOSPE(19,IRET)                                              PNCH4980
      RETURN                                                            PNCH4990
      END                                                               PNCH5000
**** SOURCE FILE : M0002772.V02   ***
*
C                                                                       QSD00001
C....    FORTRAN SUBROUTINE            QSD            4/1/69     RC     QSD00002
C                                                                       QSD00010
      SUBROUTINE  QSD(CANFRM,IQ,COEFF,TRANS)                            QSD00020
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            QSD00030
      DIMENSION  CANFRM(10), COEFF(10), QL(4,4), TRANS(3,4)             QSD00040
C                                                                       QSD00050
C  PURPOSE         TO IDENTIFY QUADRIC, LCONIC, AND GCONIC SURFACES     QSD00060
C                                                                       QSD00070
C  CALLING SEQNCE  CALL  QSD(CANFRM,IQ,COEFF,TRANS)                     QSD00080
C                                                                       QSD00090
C  ARGUMENTS       CANFRM....ARRAY CONTAINING ORIGINAL CANONICAL FORM   QSD00100
C                  IQ .......FLAG SET TO INDICATE TYPE OF QUADRIC       QSD00110
C                            SURFACE FOUND BY THIS ROUTINE              QSD00120
C                  COEFF.....ARRAY CONTAINING NEW VALUES CALCULATED     QSD00130
C                            FOR THE QUADRIC EQUATION                   QSD00140
C                  TRANS.....TRANSFORMATION MATRIX FROM THE ORIGINAL    QSD00150
C                            TO THE LOCAL COORDINATE SYSTEM             QSD00160
C                                                                       QSD00170
C  CALLED BY       AERR                                                 QSD00180
C                                                                       QSD00190
C  SUBSIDIARIES    REAL FUNCTION SUBPROGRAM - PSIGN                     QSD00200
C                                                                       QSD00210
C  DIAGNOSTICS     NONE                                                 QSD00220
C                                                                       QSD00230
C     -----------------------------------------------------------       QSD00240
C                                                                       QSD00250
C              ** INITIALIZE **                                         QSD00260
C                                                                       QSD00270
      ONE=1.0                                                           QSD00280
      DO 20 I=1,4                                                       QSD00290
      DO 20 J=1,4                                                       QSD00300
20    QL(I,J)=0                                                         QSD00310
      DO 30 I=1,3                                                       QSD00320
      DO 30 J=1,4                                                       QSD00330
30    TRANS(I,J)=0                                                      QSD00340
      DO 40 I=1,3                                                       QSD00350
40    TRANS(I,I)=1                                                      QSD00360
C                                                                       QSD00370
C        ** SET UP INITIAL CANONICAL VALUES                             QSD00380
C                                                                       QSD00390
      QL(1,1)=CANFRM(1)                                                 QSD00400
      QL(2,2)=CANFRM(2)                                                 QSD00410
      QL(3,3)=CANFRM(3)                                                 QSD00420
      QL(4,4)=CANFRM(4)                                                 QSD00430
      QL(2,3)=CANFRM(5)                                                 QSD00440
      QL(3,2)=CANFRM(5)                                                 QSD00450
      QL(1,3)=CANFRM(6)                                                 QSD00460
      QL(3,1)=CANFRM(6)                                                 QSD00470
      QL(1,2)=CANFRM(7)                                                 QSD00480
      QL(2,1)=CANFRM(7)                                                 QSD00490
      P=CANFRM(8)                                                       QSD00500
      Q=CANFRM(9)                                                       QSD00510
      R=CANFRM(10)                                                      QSD00520
C                                                                       QSD00530
C               * FIND ROTATION MATRIX AND LOCAL QL                     QSD00540
C                                                                       QSD00550
100   AMAX=0                                                            QSD00560
      AMIN=DABS(QL(3,3))                                                QSD00570
      DO 120 I=1,2                                                      QSD00580
      IF (DABS(QL(I,I))-AMIN) 102,103,103                               QSD00590
102   AMIN=DABS(QL(I,I))                                                QSD00600
103   I1=I+1                                                            QSD00610
      DO 120 J=I1,3                                                     QSD00620
      IF (DABS(QL(I,J))-AMAX) 120,120,110                               QSD00630
110   AMAX=DABS(QL(I,J))                                                QSD00640
      K=I                                                               QSD00650
      L=J                                                               QSD00660
120   CONTINUE                                                          QSD00670
C               * SET SMALL TERMS TO ZERO                               QSD00680
C                                                                       QSD00690
      IF (AMIN) 130,140,130                                             QSD00700
130   IF (AMAX/AMIN-1.E-15) 160,140,140                                 QSD00710
140   IF (AMAX-1.E-25) 160,200,200                                      QSD00720
160   DO 170 I=1,2                                                      QSD00730
      I1=I+1                                                            QSD00740
      DO 170 J=I1,3                                                     QSD00750
      QL(I,J)=0                                                         QSD00760
      QL(J,I)=0                                                         QSD00770
170   CONTINUE                                                          QSD00780
      GOTO 250                                                          QSD00790
C                                                                       QSD00800
C               * JACOBI CALCULATION                                    QSD00810
200   AKK=QL(K,K)                                                       QSD00820
      AKL=QL(K,L)                                                       QSD00830
      ALL=QL(L,L)                                                       QSD00840
      IF (ALL-AKK) 205,208,205                                          QSD00850
205   S=AKL/(ALL-AKK)                                                   QSD00860
      GOTO 210                                                          QSD00870
208   S=PSIGN(ONE,AKL)                                                  QSD00880
210   IF (DABS(S)-.5)214,212,212                                        QSD00890
212   S=PSIGN(.5*ONE,S)                                                 QSD00900
214   SS=S*S                                                            QSD00910
      CC=1-SS                                                           QSD00920
      C=DSQRT(CC)                                                       QSD00930
      SC=S*C                                                            QSD00940
      QL(K,K)=CC*AKK-2*SC*AKL+SS*ALL                                    QSD00950
      QL(L,L)=SS*AKK+2*SC*AKL+CC*ALL                                    QSD00960
      QL(L,K)=(CC-SS)*AKL+SC*(AKK-ALL)                                  QSD00970
      QL(K,L)=QL(L,K)                                                   QSD00980
      J=6-K-L                                                           QSD00990
      AKK=QL(J,K)                                                       QSD01000
      ALL=QL(J,L)                                                       QSD01010
      QL(J,K)=C*AKK-S*ALL                                               QSD01020
      QL(K,J)=QL(J,K)                                                   QSD01030
      QL(J,L)=S*AKK+C*ALL                                               QSD01040
      QL(L,J)=QL(J,L)                                                   QSD01050
      DO 230 I=1,3                                                      QSD01060
      AKK=TRANS(K,I)                                                    QSD01070
      ALL=TRANS(L,I)                                                    QSD01080
      TRANS(K,I)=C*AKK-S*ALL                                            QSD01090
      TRANS(L,I)=S*AKK+C*ALL                                            QSD01100
230   CONTINUE                                                          QSD01110
      GOTO 100                                                          QSD01120
C                                                                       QSD01130
C               * ROTATION COMPLETE                                     QSD01140
250   ALL=0                                                             QSD01150
      DO 280 I=1,3                                                      QSD01160
      QL(I,4)=.5*P*TRANS(I,1)+.5*Q*TRANS(I,2)+.5*R*TRANS(I,3)           QSD01170
      QL(4,I)=QL(I,4)                                                   QSD01180
280   ALL=ALL+DABS(QL(I,I))                                             QSD01190
      ALL=ALL/3.E10                                                     QSD01200
C                                                                       QSD01210
C               * COMPUTE TRANSLATION                                   QSD01220
      DO 300 K=1,3                                                      QSD01230
      AKK=QL(K,K)                                                       QSD01240
      IF (DABS(AKK)-ALL) 290,290,285                                    QSD01250
285   TRANS(K,4)=QL(K,4)/AKK                                            QSD01260
      AKL=TRANS(K,4)                                                    QSD01270
      QL(4,4)=QL(4,4)-AKL*QL(K,4)                                       QSD01280
      QL(K,4)=0                                                         QSD01290
      QL(4,K)=0                                                         QSD01300
      GOTO 300                                                          QSD01310
290   QL(K,K)=0                                                         QSD01320
300   CONTINUE                                                          QSD01330
      IF (DABS(QL(4,4))-ALL) 305,305,310                                QSD01340
305   QL(4,4)=0                                                         QSD01350
310   AKK=0                                                             QSD01360
      DO 320 J=1,4                                                      QSD01370
      IF (DABS(QL(J,J))-AKK)320,320,315                                 QSD01380
315   AKK=DABS(QL(J,J))                                                 QSD01390
320   CONTINUE                                                          QSD01400
      IF (AKK) 325,330,325                                              QSD01410
325   DO 328 I=1,4                                                      QSD01420
      DO 328 J=1,4                                                      QSD01430
328   QL(I,J)=QL(I,J)/AKK                                               QSD01440
330   CONTINUE                                                          QSD01450
C                                                                       QSD01460
C               * CLASSIFY SURFACE TYPE                                 QSD01470
C                                                                       QSD01480
      I=0                                                               QSD01490
      J=0                                                               QSD01500
      L=0                                                               QSD01510
      N=0                                                               QSD01520
      DO 400 K=1,3                                                      QSD01530
      KK=PSIGN(ONE,QL(K,K))                                             QSD01540
340   I=I+PSIGN(ONE,DABS(QL(K,K)))                                      QSD01550
      J=J+KK                                                            QSD01560
      L=L+PSIGN(ONE,DABS(QL(K,4)))                                      QSD01570
400   N=N+PSIGN(ONE,QL(K,K))                                            QSD01580
      K=DABS(J+PSIGN(ONE,QL(4,4)))                                      QSD01590
      J=IABS(J)                                                         QSD01600
C                                                                       QSD01610
C        ** SURFACE TYPE MARKER IS IIT **                               QSD01620
      IIT=10*I+J+K+3*L+1                                                QSD01630
C                                                                       QSD01640
      IF (N) 404,402,410                                                QSD01650
402   IF (QL(4,4)) 404,410,410                                          QSD01660
404   DO 408 IL=1,4                                                     QSD01670
      DO 408 LL=1,4                                                     QSD01680
408   QL(IL,LL)=-QL(IL,LL)                                              QSD01690
C                                                                       QSD01700
C        SET IQ TO 1 - NO RECOGNIZABLE SURFACE - AND BRANCH             QSD01710
C                  IF SURFACE TYPE SHOULD BE RESET ACCORDING            QSD01720
C                  TO SURFACE TYPE MARKER (IIT)                         QSD01730
410   IQ=1                                                              QSD01740
C                                                                       QSD01750
      GO TO (1000,1000,1000,520,520,  1000,520,520,1000,520,            QSD01760
     +       520,530,530,530,540,     540,540,540,540,1000,             QSD01770
     +       550,560,1000,570,550,    580,590,590,590,1000,             QSD01780
     +       1000,610,620,630,1000,   640,650,660),  IIT                QSD01790
C                                                                       QSD01800
C        PLANE SURFACE                                                  QSD01810
520   IQ=2                                                              QSD01820
      CC=DSQRT(QL(1,4)**2+QL(2,4)**2+QL(3,4)**2)                        QSD01830
      DO 525 IL=1,4                                                     QSD01840
      QL(IL,4)=QL(IL,4)/CC                                              QSD01850
      QL(4,IL)=QL(IL,4)                                                 QSD01860
525   CONTINUE                                                          QSD01870
      GOTO 1000                                                         QSD01880
C                                                                       QSD01890
C        TWO PARALLEL OR COINCIDENT PLANES                              QSD01900
530   IQ=3                                                              QSD01910
      GOTO 1000                                                         QSD01920
C                                                                       QSD01930
C        PARABOLIC CYLINDER                                             QSD01940
540   IQ=4                                                              QSD01950
      GOTO 1000                                                         QSD01960
C                                                                       QSD01970
550   IF (L-1)552,600,552                                               QSD01980
C                                                                       QSD01990
C        TWO INTERSECTING PLANES                                        QSD02000
552   IQ=5                                                              QSD02010
      GOTO 1000                                                         QSD02020
C                                                                       QSD02030
C        HYPERBOLIC CYLINDER                                            QSD02040
560   IQ=6                                                              QSD02050
      GOTO 1000                                                         QSD02060
C                                                                       QSD02070
570   IF (L-1) 572,600,572                                              QSD02080
C                                                                       QSD02090
C        ELLIPTIC CYLINDER                                              QSD02100
572   IQ=7                                                              QSD02110
      GOTO 1000                                                         QSD02120
C                                                                       QSD02130
C        IMAGINARY ELLIPTIC CYLINDER                                    QSD02140
580   IQ=9                                                              QSD02150
      GOTO 1000                                                         QSD02160
C                                                                       QSD02170
C        ELLIPTIC PARABOLOID                                            QSD02180
590   IQ=10                                                             QSD02190
      GOTO 1000                                                         QSD02200
C                                                                       QSD02210
C        HYPERBOLIC PARABOLOID                                          QSD02220
600   IQ=8                                                              QSD02230
      GOTO 1000                                                         QSD02240
C                                                                       QSD02250
C        HYPERBOLOID OF ONE SHEET                                       QSD02260
610   IQ=11                                                             QSD02270
      GOTO 1000                                                         QSD02280
C                                                                       QSD02290
C        CONE                                                           QSD02300
620   IQ=12                                                             QSD02310
      GOTO 1000                                                         QSD02320
C                                                                       QSD02330
C        HYPERBOLOID OF TWO SHEETS                                      QSD02340
630   IQ=13                                                             QSD02350
      GOTO 1000                                                         QSD02360
C                                                                       QSD02370
C        ELLIPSOID                                                      QSD02380
640   IQ=14                                                             QSD02390
      GOTO 1000                                                         QSD02400
C                                                                       QSD02410
C        POINT ELLIPSOID                                                QSD02420
650   IQ=15                                                             QSD02430
      GOTO 1000                                                         QSD02440
C                                                                       QSD02450
C        IMAGINARY ELLIPSOID                                            QSD02460
660   IQ=16                                                             QSD02470
C                                                                       QSD02480
C            ** RESET COEFFICIENTS INTO PROPER ORDER **                 QSD02490
C                                                                       QSD02500
1000  COEFF(1)=QL(1,1)                                                  QSD02510
      COEFF(2)=QL(2,2)                                                  QSD02520
      COEFF(3)=QL(3,3)                                                  QSD02530
      COEFF(4)=QL(4,4)                                                  QSD02540
      COEFF(5)=QL(2,3)                                                  QSD02550
      COEFF(6)=QL(1,3)                                                  QSD02560
      COEFF(7)=QL(1,2)                                                  QSD02570
      COEFF(8)=QL(1,4)                                                  QSD02580
      COEFF(9)=QL(2,4)                                                  QSD02590
      COEFF(10)=QL(3,4)                                                 QSD02600
C                                                                       QSD02610
      RETURN                                                            QSD02620
      END                                                               QSD02630
**** SOURCE FILE : M0000957.V01   ***
*
C.....FORTRAN SUBROUTINE             RECORD...              3/1/68   GK RECD0000
      SUBROUTINE RECORD (ISEQNO)                                        RECD0010
      COMMON/SQNC/SQNO                                                  RECD0020
      INTEGER SQNO                                                      RECD0030
C                                                                       RECD0040
      ISEQNO = SQNO                                                     RECD0050
      RETURN                                                            RECD0060
      END                                                               RECD0070
**** SOURCE FILE : M0002856.V03   ***
*
C.....FORTRAN SUBROUTINE  ....REFSYS         8/68                    RN REFS0001
C.....FORTRAN SUBROUTINE             REFSYS...              3/1/68   GK REFS0002
C                                                                       REFS0010
C              FORTRAN SUBROUTINE REFSYS                                REFS0020
C PURPOSE      TO DEFINE THE TRANSFORMATION MATRICES FOR                REFS0030
C              LOCAL TO BASE AND BASE TO LOCAL COORDINATE               REFS0040
C              SYSTEMS AND TO GENERATE THE ZSURF PLANE CANONICAL        REFS0050
C              FORM IN THE LOCAL SYSTEM.                                REFS0060
C                                                                       REFS0070
C LINKAGE      CALL REFSYS (MATRIX)                                     REFS0080
C                                                                       REFS0090
C ARGUMENTS    MATRIX  ARRAY CONTAINING THE TRANSFORMATION              REFS0100
C                      MATRIX RELATING A NEW REFERENCE SYSTEM           REFS0110
C                      TO THE BASE COORDINATE SYSTEM                    REFS0120
C                                                                       REFS0130
C SUBSIDIARIES TYPE                ENTRY                                REFS0140
C              SUBROUTINE          APT067                               REFS0150
C              LOGICAL FUNCTION    CKDEF                                REFS0160
C              SUBROUTINE          ERROR                                REFS0170
C              SUBROUTINE          ZSURF                                REFS0180
C                                                                       REFS0190
      SUBROUTINE REFSYS (MATRIX)                                        REFS0200
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            REFS0210
      DIMENSION MATRIX(12)                                              REFS0220
      DOUBLE PRECISION MATRIX                                           REFS0230
      LOGICAL CKDEF                                                     REFS0240
C                                                                       REFS0250
C                                                                       REFS0260
C                                                                       REFS0270
C                                                                       REFS0280
      INCLUDE 'TOTAL.INC'                                               REFS0421
      INCLUDE 'DEF.INC'                                                 REFS0531
      INCLUDE 'DSHAR3.INC'                                              REFS0631
      INCLUDE 'LDEF.INC'                                                REFS0681
      INCLUDE 'ISHR16.INC'                                              REFS0751
C                                                                       REFS0770
C                                                                       REFS0780
C                                                                       REFS0790
C                                                                       REFS0800
C                                                                       REFS0810
C...     CHECK INPUT DEFINED                                            REFS0820
C                                                                       REFS0830
      IF (.NOT.CKDEF(MATRIX)) GO TO 10                                  REFS0840
      CALL ERROR( 53,'REFSYS  ')                                        REFS0850
      GO TO 9                                                           REFS0860
C                                                                       REFS0870
C...     MOVE MATRIX TO A(1,2) AND THE INVERSE TO A(2,2) FOR TRANSF     REFS0880
C                                                                       REFS0890
   10 DO 20 I=1,12                                                      REFS0900
   20 A(I,2)=MATRIX(I)                                                  REFS0910
      CALL APT067 (A(1,1),A(1,2))                                       REFS0920
C                                                                       REFS0930
C...     IF ZSURF IS IN EFFECT TRANSFORM ZSURF PLANE                    REFS0940
C                                                                       REFS0950
      IF (ZFLAG) GO TO 30                                               REFS0960
      DO 25 I= 1,4                                                      REFS0970
   25 SC(I)=REF(1,I)                                                    REFS0980
      CALL ZSURF (SC)                                                   REFS0990
   30 REFFLG=.TRUE.                                                     REFS1000
    9 RETURN                                                            REFS1010
       END                                                              REFS1020
**** SOURCE FILE : M0000960.V01   ***
*
C...  FORTRAN SUBROUTINE               ROTAT                            RTAT0000
      SUBROUTINE ROTAT(ARRAY,XMATRX)                                    RTAT0010
      IMPLICIT DOUBLE PRECISION(A-H), DOUBLE PRECISION(O-Z)             RTAT0020
C                  SUBROUTINE USED TO ROTATE THE AXIS SYSTEM IN ARLM2   RTAT0030
C                  SO THAT THE TOOL AXIS POINTS IN THE Z-DIRECTION      RTAT0040
      DIMENSION ARRAY(3),XMATRX(3,3),TMP(3)                             RTAT0050
      DO 2 K=1,3                                                        RTAT0070
      TMP(K) = 0.0                                                      RTAT0080
      DO 2 J=1,3                                                        RTAT0090
      TMP(K) = TMP(K)+XMATRX(J,K)*ARRAY(J)                              RTAT0100
 2    CONTINUE                                                          RTAT0110
      DO 4 I=1,3                                                        RTAT0120
 4    ARRAY(I) = TMP(I)                                                 RTAT0130
      RETURN                                                            RTAT0140
       END                                                              RTAT0150
**** SOURCE FILE : M0002860.V04   ***
*
C.....FORTRAN SUBROUTINE  ....SCHTB          8/68                    RN SCHT0001
C.....FORTRAN SUBROUTINE             SCHTB....              3/1/68   GK SCHT0002
C                                                                       SCHT0010
C              FORTRAN SUBROUTINE SCHTB                                 SCHT0020
C                                                                       SCHT0030
C PURPOSE      TO IDENTIFY A POINT ON THE INPUT TABCYL WHICH IS         SCHT0040
C              CLOSE TO THE POINT P.                                    SCHT0050
C                                                                       SCHT0060
C LINKAGE      CALL SCHTB (TAB)                                         SCHT0070
C                                                                       SCHT0080
C ARGUMENTS    TAB     ARRAY CONTAINING THE CANONICAL FORM OF THE       SCHT0090
C                      INPUT TABCYL                                     SCHT0100
C              P       ARRAY (IN COMMON) CONTAINING THE CANONICAL       SCHT0110
C                      FORM OF THE INPUT POINT                          SCHT0120
C                                                                       SCHT0130
C SUBSIDIARIES TYPE                ENTRY                                SCHT0140
C              SUBROUTINE          ERROR                                SCHT0150
C                                                                       SCHT0160
      SUBROUTINE SCHTB(TAB)                                             SCHT0170
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            SCHT0180
      DIMENSION TAB(*)                                                  SCHT0190
C                                                                       SCHT0200
C                                                                       SCHT0210
C                                                                       SCHT0220
C                                                                       SCHT0230
      INCLUDE 'TOTAL.INC'                                               SCHT0371
      INCLUDE 'DSHAR3.INC'                                              SCHT0461
      INCLUDE 'ZNUMBR.INC'                                              SCHT0569
      INCLUDE 'LDEF.INC'                                                SCHT0614
      INCLUDE 'ISHR16.INC'                                              SCHT0677
      INCLUDE 'KNUMBR.INC'                                              SCHT0839
C                                                                       SCHT0860
C                                                                       SCHT0870
C                                                                       SCHT0880
C                                                                       SCHT0890
C                                                                       SCHT0900
      N=(TAB(12)-2.0)*7.0+14.1                                          SCHT0910
      DO 10 I=14,N,7                                                    SCHT0920
      J = I                                                             SCHT0930
      IF (DABS(TAB(I)-P(1)).GT.Z1EM2) GO TO 10                          SCHT0940
      IF (DABS(TAB(I+1)-P(2)).LE.Z1EM2) GO TO 20                        SCHT0950
   10 CONTINUE                                                          SCHT0960
      CALL ERROR(11,'SCHTB   ')                                         SCHT0970
      UNFLAG =.TRUE.                                                    SCHT0980
      GO TO 9                                                           SCHT0990
   20 TAB(13) = J                                                       SCHT1000
      UNFLAG = .FALSE.                                                  SCHT1010
    9 RETURN                                                            SCHT1020
       END                                                              SCHT1030
**** SOURCE FILE : M0000978.V01   ***
*
C.....FORTRAN SUBROUTINE ....TRANRO              8/68               RN  TRNR0000
C                                                                       TRNR0010
C              FORTRAN SUBROUTINE TRANRO                                TRNR0020
C                                                                       TRNR0030
C PURPOSE      ROTATE (X1,Y1) BY ANGLE RA IN DIRECTION DETERMINED       TRNR0040
C              BY SIGN OF IZ.                                           TRNR0050
C              PUT ROTATED COORDINATES IN (X11,Y11).                    TRNR0060
C                                                                       TRNR0070
      SUBROUTINE TRANRO (X1,Y1,X11,Y11,RA,IZ)                           TRNR0080
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                TRNR0090
      DOUBLE PRECISION X1,Y1,X11,Y11,RA                                 TRNR0100
      TS = DSIN(RA)                                                     TRNR0120
      TC = DCOS(RA)                                                     TRNR0130
      IF(IZ.LT.0) GO TO 1                                               TRNR0140
      X11=X1*TC-Y1*TS                                                   TRNR0150
      Y11=X1*TS+Y1*TC                                                   TRNR0160
      GO TO 2                                                           TRNR0170
    1 X11=X1*TC+Y1*TS                                                   TRNR0180
      Y11=-X1*TS+Y1*TC                                                  TRNR0190
    2 CONTINUE                                                          TRNR0200
      RETURN                                                            TRNR0210
      END                                                               TRNR0220
**** SOURCE FILE : M0000736.V04   ***
*
C.....FORTRAN SUBROUTINE  ....TRANSM        3/72                     RN TRSM0010
C.... SUBROUTINE                     TRANSM              3/72           TRSM0020
C                                                                       TRSM0030
C              FORTRAN SUBROUTINE TRANSM                                TRSM0040
C                                                                       TRSM0050
C PURPOSE      TO TRANSFORM THE CANONICAL FORMS OF POINTS,              TRSM0060
C              SPHERES, VECTORS, LINES, PLANES, CIRCLES,                TRSM0070
C              CYLINDERS, CONES AND QUADRIC SURFACES WHEN A             TRSM0080
C              REFSYS STATEMENT IS IN EFFECT.                           TRSM0090
C                                                                       TRSM0100
C LINKAGE      CALL TRANSM (SO, SI, IR, IN, IE)                         TRSM0110
C                                                                       TRSM0120
C ARGUMENTS    SO      ARRAY TO CONTAIN THE RESULTING CANONICAL         TRSM0130
C                      FORM                                             TRSM0140
C              SI      ARRAY CONTAINING THE INPUT CANONICAL FORM        TRSM0150
C              IN      INTEGER CONTAINING THE NUMBER OF WORDS           TRSM0160
C                      IN THE CANONICAL FORM                            TRSM0170
C              IR      INTEGER CONTAINING THE SURFACE INDICATOR         TRSM0180
C                      IR=1 QUADRICS (IN=10)                            TRSM0190
C                        =2 POINTS AND SPHERES (IN=3)                   TRSM0200
C                        =3 VECTORS (IN=3)                              TRSM0210
C                        =4 LINES AND PLANES (IN=4)                     TRSM0220
C                        =5 CIRCLES, CONES AND CYLINDERS (IN=7)         TRSM0230
C              IE      INTEGER WHICH INDICATES TRANSFORMATION           TRSM0240
C                      DIRECTION AND ERROR CODE NUMBER WHEN A           TRSM0250
C                      LINE OR CIRCLE IS TO BE CHECKED TO BE            TRSM0260
C                      SURE IT IS A VERTICAL PLANE OR CYLINDER          TRSM0270
C                      RESPECTIVELY.                                    TRSM0280
C                      IE =-1 TRANSFORM LOCAL TO BASE COORDINATE        TRSM0290
C                           SYSTEM                                      TRSM0300
C                      IE = O TRANSFORM BASE TO LOCAL COORDINATE        TRSM0310
C                           SYSTEM                                      TRSM0320
C                                                                       TRSM0330
C SUBSIDIARIES TYPE                ENTRY                                TRSM0340
C                                                                       TRSM0350
      SUBROUTINE TRANSM (SO,SI,IR,IN,IE)                                TRSM0360
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            TRSM0370
      LOGICAL CKDEF,CIRDEF,LINDEF                                       TRSM0375
      DIMENSION SO(IN),SI(IN)                                           TRSM0380
C                                                                       TRSM0390
C                                                                       TRSM0400
C                                                                       TRSM0410
      INCLUDE 'TOTAL.INC'                                               TRSM0521
      INCLUDE 'DEF.INC'                                                 TRSM0651
      INCLUDE 'LDEF.INC'                                                TRSM0691
C...  ISHR16.INC HAS BEEN OMITTED, AS USEAGE OF I,J,                    TRSM0781
C...  M & M11 SEEMS TO BE LOCAL.                                        TRSM0782
      INCLUDE 'KNUMBR.INC'                                              TRSM0961
C                                                                       TRSM0970
C                                                                       TRSM0980
      DIMENSION T(16),T1(16),T2(16),T3(16)                              TRSM0990
      DIMENSION XT(4,4),XT1(4,4),XT2(4,4),XT3(4,4)                      TRSM1000
      EQUIVALENCE (T(1),XT(1,1)),(T1(1),XT1(1,1))                       TRSM1010
      EQUIVALENCE(T2(1),XT2(1,1)),(T3(1),XT3(1,1))                      TRSM1020
C                                                                       TRSM1030
C                                                                       TRSM1150
C...     DETERMINE WHETHER INPUT SURFACE HAS BEEN DEFINED               TRSM1160
C                                                                       TRSM1170
      DO 10 I=1,IN                                                      TRSM1180
   10 T(I)=SI(I)                                                        TRSM1190
C                                                                       TRSM1200
C...     IF REFSYS NOT IN EFFECT MOVE ARRAY TO OUTPUT ARRAY             TRSM1210
C                                                                       TRSM1220
C                                                                       TRSM1380
      IF(.NOT.REFMOT) GO TO 20                                          TRSM1390
      IF(.NOT.REFFLG) GO TO 20                                          TRSM1400
      J=0                                                               TRSM1410
      IF(SI(J).GE.21000000.0.OR.SI(J).LT.999999.) GO TO 20              TRSM1420
      CALL UNPACK(SI,MODE,ISIZE,ISUB)                                   TRSM1430
      IF(MODE.LE.0.OR.MODE.GT.20) GO TO 20                              TRSM1440
      IF(IR.EQ.3.AND.MODE.NE.20) GO TO 20                               TRSM1450
      GO TO 90                                                          TRSM1460
   20 CONTINUE                                                          TRSM1470
      DO 30 I=1,IN                                                      TRSM1490
   30 SO(I)=T(I)                                                        TRSM1500
  999 RETURN                                                            TRSM1510
C                                                                       TRSM1520
C...     SET M=1 FOR BASE TO LOCAL OR M=2 FOR LOCAL TO BASE AND         TRSM1530
C...     TRANSFORM CANONICAL FORMS                                      TRSM1540
C                                                                       TRSM1550
   90 DO 95 I=1,IN                                                      TRSM1560
   95 T1(I)=T(I)                                                        TRSM1570
      M=K1                                                              TRSM1580
      IF (IE.LT.0) M=K2                                                 TRSM1590
      M11 = K3 - M                                                      TRSM1600
      GO TO (100,300,300,400,300),IR                                    TRSM1610
C                                                                       TRSM1620
C...     QUADRIC CANONICAL FORM TRANSFORMATION                          TRSM1630
C                                                                       TRSM1640
  100 T(2)=T1(7)                                                        TRSM1650
      T(3)=T1(6)                                                        TRSM1660
      T(4)=T1(8)                                                        TRSM1670
      T(5)=T1(7)                                                        TRSM1680
      T(6)=T1(2)                                                        TRSM1690
      T(7)=T1(5)                                                        TRSM1700
      T(8)=T1(9)                                                        TRSM1710
      T(9)=T1(6)                                                        TRSM1720
      T(10)=T1(5)                                                       TRSM1730
      T(11)=T1(3)                                                       TRSM1740
      T(12)=T1(10)                                                      TRSM1750
      T(13)=T1(8)                                                       TRSM1760
      T(14)=T1(9)                                                       TRSM1770
      T(15)=T1(10)                                                      TRSM1780
      T(16)=T1(4)                                                       TRSM1790
      DO 200 I=1,12                                                     TRSM1800
  200 T3(I)=A(I,M11)                                                    TRSM1810
      T3(13)=0.                                                         TRSM1820
      T3(14)=0.                                                         TRSM1830
      T3(15)=0.                                                         TRSM1840
      T3(16)=1.                                                         TRSM1850
C                                                                       TRSM1860
C                                                                       TRSM1930
      DO 250 I=1,4                                                      TRSM1940
      DO 250 J=1,4                                                      TRSM1950
      XT1(I,J) = 0.0                                                    TRSM1960
      DO 250 M=1,4                                                      TRSM1970
  250 XT1(I,J)=XT1(I,J)+XT(M,J)*XT3(I,M)                                TRSM1980
      DO 260 I=1,4                                                      TRSM1990
      DO 260 J=1,4                                                      TRSM2000
  260 XT2(J,I)=XT3(I,J)                                                 TRSM2010
      DO 270 I=1,4                                                      TRSM2020
      DO 270 J=1,4                                                      TRSM2030
      XT(I,J)=0.0                                                       TRSM2040
      DO 270 M=1,4                                                      TRSM2050
  270 XT(I,J)=XT(I,J)+XT2(M,J)*XT1(I,M)                                 TRSM2060
  271 T(5)=T(7)                                                         TRSM2070
      T(7)=T(2)                                                         TRSM2080
      T(2)=T(6)                                                         TRSM2090
      T(6)=T(3)                                                         TRSM2100
      T(3)=T(11)                                                        TRSM2110
      T(9)=T(8)                                                         TRSM2120
      T(8)=T(4)                                                         TRSM2130
      T(4)=T(16)                                                        TRSM2140
      T(10)=T(12)                                                       TRSM2150
      GO TO 20                                                          TRSM2160
C                                                                       TRSM2170
C...     VECTOR CANONICAL FORM TRANSFORMATION                           TRSM2180
C                                                                       TRSM2190
  300 DO 310 I=1,3                                                      TRSM2200
  310 T(I)=A(4*I-3,M)*T1(1)+A(4*I-2,M)*T1(2)+A(4*I-1,M)*T1(3)           TRSM2210
      GO TO (20,320,20, 20,320),IR                                      TRSM2220
C                                                                       TRSM2240
C...     FINISH TRANSFORMATION FOR POINTS                               TRSM2250
C                                                                       TRSM2260
  320 DO 330 I=1,3                                                      TRSM2270
  330 T(I)=T(I)+A(4*I,M)                                                TRSM2280
      IF(IR.NE.K5) GO TO 20                                             TRSM2290
C                                                                       TRSM2300
C...     FINISH TRANSFORMATION FOR CIRCLES                              TRSM2310
C                                                                       TRSM2320
      DO 340 I=4,6                                                      TRSM2330
  340 T(I)=A(4*I-15,M)*T1(4)+A(4*I-14,M)*T1(5)+A(4*I-13,M)*T1(6)        TRSM2340
      GO TO 20                                                          TRSM2350
C                                                                       TRSM2360
C...     TRANSFORM NORMAL DISTANCE FOR LINES                            TRSM2370
C                                                                       TRSM2380
  400 T(4)=T1(4)-T1(1)*A(4,M11)-T1(2)*A(8,M11)-T1(3)*A(12,M11)          TRSM2390
      GO TO 300                                                         TRSM2400
       END                                                              TRSM2410
C                                                                       TRSM3000
C.....FORTRAN SUBROUTINE  ....TRANSF        3/72                     RN TRSM3010
C.... SUBROUTINE                    TRANSF               3/72           TRSM3020
C                                                                       TRSM3030
C              FORTRAN SUBROUTINE TRANSF                                TRSM3040
C                                                                       TRSM3050
C PURPOSE      TO TRANSFORM THE CANONICAL FORMS OF POINTS,              TRSM3060
C              SPHERES, VECTORS, LINES, PLANES, CIRCLES,                TRSM3070
C              CYLINDERS, CONES AND QUADRIC SURFACES WHEN A             TRSM3080
C              REFSYS STATEMENT IS IN EFFECT.                           TRSM3090
C                                                                       TRSM3100
C LINKAGE      CALL TRANSF (SO, SI, IR, IN, IE)                         TRSM3110
C                                                                       TRSM3120
C ARGUMENTS    SO      ARRAY TO CONTAIN THE RESULTING CANONICAL         TRSM3130
C                      FORM                                             TRSM3140
C              SI      ARRAY CONTAINING THE INPUT CANONICAL FORM        TRSM3150
C              IN      INTEGER CONTAINING THE NUMBER OF WORDS           TRSM3160
C                      IN THE CANONICAL FORM                            TRSM3170
C              IR      INTEGER CONTAINING THE SURFACE INDICATOR         TRSM3180
C                      IR=1 QUADRICS (IN=10)                            TRSM3190
C                        =2 POINTS AND SPHERES (IN=3)                   TRSM3200
C                        =3 VECTORS (IN=3)                              TRSM3210
C                        =4 LINES AND PLANES (IN=4)                     TRSM3220
C                        =5 CIRCLES, CONES AND CYLINDERS (IN=7)         TRSM3230
C              IE      INTEGER WHICH INDICATES TRANSFORMATION           TRSM3240
C                      DIRECTION AND ERROR CODE NUMBER WHEN A           TRSM3250
C                      LINE OR CIRCLE IS TO BE CHECKED TO BE            TRSM3260
C                      SURE IT IS A VERTICAL PLANE OR CYLINDER          TRSM3270
C                      RESPECTIVELY.                                    TRSM3280
C                      IE =-1 TRANSFORM LOCAL TO BASE COORDINATE        TRSM3290
C                           SYSTEM                                      TRSM3300
C                      IE = O TRANSFORM BASE TO LOCAL COORDINATE        TRSM3310
C                           SYSTEM                                      TRSM3320
C                                                                       TRSM3330
C SUBSIDIARIES TYPE                ENTRY                                TRSM3340
C                                                                       TRSM3350
      SUBROUTINE TRANSF (SO,SI,IR,IN,IE)                                TRSM3360
      LOGICAL CKDEF,CIRDEF,LINDEF                                       TRSM3375
      DOUBLE PRECISION SO(IN),SI(IN)                                    TRSM3380
C                                                                       TRSM3390
C                                                                       TRSM3400
C                                                                       TRSM3410
      INCLUDE 'DEF.INC'                                                 TRSM3651
      INCLUDE 'LDEF.INC'                                                TRSM3691
C...  ISHR16.INC HAS BEEN OMITTED, AS USEAGE OF I,J,                    TRSM3781
C...  M & M11 SEEMS TO BE LOCAL.                                        TRSM3782
      INCLUDE 'KNUMBR.INC'                                              TRSM3961
C                                                                       TRSM3970
C                                                                       TRSM3980
      DOUBLE PRECISION T(16),T1(16),T2(16),T3(16)                       TRSM3990
C                                                                       TRSM4030
      IF(IE.LT.0) GO TO 5                                               TRSM4120
      UNFLAG=CKDEF(SI)                                                  TRSM4130
      IF(UNFLAG) GO TO 999                                              TRSM4140
C                                                                       TRSM4150
C...     DETERMINE WHETHER INPUT SURFACE HAS BEEN DEFINED               TRSM4160
C                                                                       TRSM4170
    5 DO 10 I=1,IN                                                      TRSM4180
      T(I)=SI(I)                                                        TRSM4190
   10 CONTINUE                                                          TRSM4192
C                                                                       TRSM4200
C...     IF REFSYS NOT IN EFFECT MOVE ARRAY TO OUTPUT ARRAY             TRSM4210
C                                                                       TRSM4220
C---    GEOMETRIC MODE IS IN EFFECT                                     TRSM4240
      IF(REFFLG) GO TO 90                                               TRSM4250
   20 IF(IE.LT.0) GO TO 61                                              TRSM4260
      DO 31 I=1,IN                                                      TRSM4270
      SO(I)=T(I)                                                        TRSM4280
   31 CONTINUE                                                          TRSM4285
      IF(IE.EQ.0) GO TO 999                                             TRSM4290
      GO TO (999,999,999,41,51),IR                                      TRSM4300
   41 UNFLAG=LINDEF(T,IE)                                               TRSM4310
      GO TO 999                                                         TRSM4320
   51 UNFLAG=CIRDEF(T,IE)                                               TRSM4330
      GO TO 999                                                         TRSM4340
   61 DO 71 I=1,IN                                                      TRSM4350
      R(I)=T(I)                                                         TRSM4360
   71 CONTINUE                                                          TRSM4365
      GO TO 999                                                         TRSM4370
  999 RETURN                                                            TRSM4510
C                                                                       TRSM4520
C...     SET M=1 FOR BASE TO LOCAL OR M=2 FOR LOCAL TO BASE AND         TRSM4530
C...     TRANSFORM CANONICAL FORMS                                      TRSM4540
C                                                                       TRSM4550
   90 DO 95 I=1,IN                                                      TRSM4560
      T1(I)=T(I)                                                        TRSM4570
   95 CONTINUE                                                          TRSM4575
      M=K1                                                              TRSM4580
      IF (IE.LT.0) M=K2                                                 TRSM4590
      M11 = K3 - M                                                      TRSM4600
      GO TO (100,300,300,400,300),IR                                    TRSM4610
C                                                                       TRSM4620
C...     QUADRIC CANONICAL FORM TRANSFORMATION                          TRSM4630
C                                                                       TRSM4640
  100 T(2)=T1(7)                                                        TRSM4650
      T(3)=T1(6)                                                        TRSM4660
      T(4)=T1(8)                                                        TRSM4670
      T(5)=T1(7)                                                        TRSM4680
      T(6)=T1(2)                                                        TRSM4690
      T(7)=T1(5)                                                        TRSM4700
      T(8)=T1(9)                                                        TRSM4710
      T(9)=T1(6)                                                        TRSM4720
      T(10)=T1(5)                                                       TRSM4730
      T(11)=T1(3)                                                       TRSM4740
      T(12)=T1(10)                                                      TRSM4750
      T(13)=T1(8)                                                       TRSM4760
      T(14)=T1(9)                                                       TRSM4770
      T(15)=T1(10)                                                      TRSM4780
      T(16)=T1(4)                                                       TRSM4790
      DO 200 I=1,12                                                     TRSM4800
      T3(I)=A(I,M11)                                                    TRSM4810
  200 CONTINUE                                                          TRSM4815
      T3(13)=0.                                                         TRSM4820
      T3(14)=0.                                                         TRSM4830
      T3(15)=0.                                                         TRSM4840
      T3(16)=1.                                                         TRSM4850
C                                                                       TRSM4860
C---    GEOMETRIC TRANSFORM CASE                                        TRSM4880
      CALL APT076(T1,T,T3,K4)                                           TRSM4890
      CALL APT086(T2,T3,K4)                                             TRSM4900
      CALL APT076(T,T2,T1,K4)                                           TRSM4910
C                                                                       TRSM4930
      T(5)=T(7)                                                         TRSM5070
      T(7)=T(2)                                                         TRSM5080
      T(2)=T(6)                                                         TRSM5090
      T(6)=T(3)                                                         TRSM5100
      T(3)=T(11)                                                        TRSM5110
      T(9)=T(8)                                                         TRSM5120
      T(8)=T(4)                                                         TRSM5130
      T(4)=T(16)                                                        TRSM5140
      T(10)=T(12)                                                       TRSM5150
      GO TO 20                                                          TRSM5160
C                                                                       TRSM5170
C...     VECTOR CANONICAL FORM TRANSFORMATION                           TRSM5180
C                                                                       TRSM5190
  300 DO 310 I=1,3                                                      TRSM5200
      T(I)=A(4*I-3,M)*T1(1)+A(4*I-2,M)*T1(2)+A(4*I-1,M)*T1(3)           TRSM5210
  310 CONTINUE                                                          TRSM5215
      GO TO (20,320,20, 20,320),IR                                      TRSM5220
C                                                                       TRSM5240
C...     FINISH TRANSFORMATION FOR POINTS                               TRSM5250
C                                                                       TRSM5260
  320 DO 330 I=1,3                                                      TRSM5270
      T(I)=T(I)+A(4*I,M)                                                TRSM5280
  330 CONTINUE                                                          TRSM5285
      IF(IR.NE.K5) GO TO 20                                             TRSM5290
C                                                                       TRSM5300
C...     FINISH TRANSFORMATION FOR CIRCLES                              TRSM5310
C                                                                       TRSM5320
      DO 340 I=4,6                                                      TRSM5330
      T(I)=A(4*I-15,M)*T1(4)+A(4*I-14,M)*T1(5)+A(4*I-13,M)*T1(6)        TRSM5340
  340 CONTINUE                                                          TRSM5345
      GO TO 20                                                          TRSM5350
C                                                                       TRSM5360
C...     TRANSFORM NORMAL DISTANCE FOR LINES                            TRSM5370
C                                                                       TRSM5380
  400 T(4)=T1(4)-T1(1)*A(4,M11)-T1(2)*A(8,M11)-T1(3)*A(12,M11)          TRSM5390
      GO TO 300                                                         TRSM5400
       END                                                              TRSM5410
**** SOURCE FILE : M0000981.V02   ***
*
C.....FORTRAN SUBROUTINE             UNDEF....              3/1/68   GK UNDF0000
C                                                                       UNDF0010
C             FORTRAN SUBROUTINE UNDEF                                  UNDF0020
C                                                                       UNDF0030
C PURPOSE     TO STORE THE BCD WORD *TRASH IN THE FIRST WORD OF THE     UNDF0040
C             CANONICAL FORM ARRAY SET AN UNDEFINED SURFACE             UNDF0050
C                                                                       UNDF0060
C LINKAGE     CALL UNDEF(A)                                             UNDF0070
C                                                                       UNDF0080
C ARG MENT    A    ARRAY CONTAINING ELEMENT TO BE DECLA RED UNDEFINED   UNDF0090
      SUBROUTINE UNDEF (A)                                              UNDF0100
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            UNDF0110
      DIMENSION A(10)                                                   UNDF0120
C                                                                       UNDF0140
      CALL STRTSH(A(1))                                                 UNDF0155
      RETURN                                                            UNDF0160
      END                                                               UNDF0170
**** SOURCE FILE : M0002783.W02   ***
*
C                                                                       UNI00005
      SUBROUTINE UNITS(IMOD)                                            UNI00010
C        NEW ROUTINE TO HANDLE UNITS/ IMPLEMENTATION                    UNI00011
C                                                                       UNI00012
C        IMOD= FIRST FOUR CHAR. OF UNITS/ ARGUMENT                      UNI00013
C                                                                       UNI00014
C        CALLED BY NO OTHER ROUTINE                                     UNI00015
C                                                                       UNI00016
C        CALLS SUBROUTINES  RECORD, ERROR, CUTTER(ENTRY CUTRED)         UNI00017
C                                                                       UNI00018
C                                                                       UNI00019
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                UNI00020
C                                                                       UNI00062
C                                                                       UNI00064
      INCLUDE 'TOTAL.INC'                                               UNI00066
      INCLUDE 'FXCOR.INC'                                               UNI00068
      INCLUDE 'SV.INC'                                                  UNI00072
      INCLUDE 'ISV.INC'                                                 UNI00074
      INCLUDE 'IFXCOR.INC'                                              UNI00076
C                                                                       UNI00082
C                                                                       UNI00084
      LOGICAL FIRST                                                     UNI00086
      INTEGER W,Z4E,BCDF                                                UNI00100
      DIMENSION W(10)                                                   UNI00101
      PARAMETER (Z4E=1308622848)                                        UNI00105
      DIMENSION UNITC(4),MODC(4)                                        UNI00168
      SAVE W,FIRST,MODC                                                 UNI00169
      COMMON /ADDCOM/ ELMAX,ADDC(24)                                    UNI00170
      INCLUDE 'SYMFIL.INC'                                              UNI00201
      INCLUDE 'XUNITS.INC'                                              UNI00250
      DATA W/0,0,Z4E,0,Z4E,2,Z4E,2,0,0/                                 UNI00252
      DATA FIRST/.TRUE./                                                UNI00253
      DATA UNITC(1),UNITC(2),UNITC(3),UNITC(4)                          UNI00255
     1    /304.8   ,  30.48 ,   12.0 ,  1.0  /                          UNI00256
      IF (FIRST) THEN                                                   UNI00257
        W(1) = BCDF('UNIT')                                             UNI00258
        W(2) = BCDF('S   ')                                             UNI00259
        IBL  = BCDF('    ')                                             UNI00261
        INS  = BCDF('ES  ')                                             UNI00262
        MODC(1) = BCDF('MM  ')                                          UNI00263
        MODC(2) = BCDF('CM  ')                                          UNI00264
        MODC(3) = BCDF('INCH')                                          UNI00265
        MODC(4) = BCDF('FEET')                                          UNI00266
        FIRST =.FALSE.                                                  UNI00267
      ENDIF                                                             UNI00268
C                                                                       UNI00270
      NUMOD=IMOD                                                        UNI00280
      IOLDMD=BCDF(OLDMOD(1:4))                                          UNI00282
      IF ( NUMOD .EQ. IOLDMD ) RETURN                                   UNI00290
C                                                                       UNI00300
      DO 1 I = 1,4                                                      UNI00310
    1  IF(NUMOD .EQ. MODC(I)) GO TO 2                                   UNI00320
      CALL ERROR (91,'UNITS   ')                                        UNI00330
      RETURN                                                            UNI00340
C                                                                       UNI00350
    2 SCALE= UNITC(I) / UNITC(IOLD)                                     UNI00360
      IOLDMD= NUMOD                                                     UNI00370
      CALL HOLFRM(IOLDMD,OLDMOD,1,4,NWD)                                UNI00372
      IOLD = I                                                          UNI00380
      TABEXT=TABEXT*SCALE                                               UNI00382
      SSEXT=SSEXT*SCALE                                                 UNI00384
      TLHIT = TLHIT * SCALE                                             UNI00390
      DO 3 I= 1,4                                                       UNI00400
    3 CUTDAT(I) = CUTDAT(I) * SCALE                                     UNI00410
      CUTDAT(1) = CUTDAT(1) * 2.                                        UNI00420
      CUTDAT(7) = CUTDAT(7) * SCALE                                     UNI00430
      DPMAX = DPMAX * SCALE                                             UNI00440
      ELMAX =ELMAX  * SCALE                                             UNI00450
      HI = HI * SCALE                                                   UNI00460
      RA = RA * SCALE                                                   UNI00470
      RC1 = RC1 * SCALE                                                 UNI00480
      I= IPS                                                            UNI00490
      J=1                                                               UNI00500
   10 TAU (I)=TAU (I) * SCALE                                           UNI00510
      TAU1(I)=TAU1(I) * SCALE                                           UNI00520
      TAU2(I)=TAU2(I) * SCALE                                           UNI00530
      EPS1(I)=EPS1(I) * SCALE                                           UNI00540
      EPS2(I)=EPS2(I) * SCALE                                           UNI00550
      EPS3(I)=EPS3(I) * SCALE                                           UNI00560
      EPS4(I)=EPS4(I) * SCALE                                           UNI00570
      EPS6(I)=EPS6(I) * SCALE                                           UNI00580
      EPS8(I)=EPS8(I) * SCALE                                           UNI00590
      IF (I-ICS) 4,5,5                                                  UNI00600
    4 I = I + LSV                                                       UNI00610
      J = J + 1                                                         UNI00620
      GO TO 10                                                          UNI00630
    5 IF (J- 4 ) 6,7,7                                                  UNI00640
    6 I = I + LSV1                                                      UNI00650
      J=J+1                                                             UNI00660
      GO TO 10                                                          UNI00670
    7 CALL CUTRED                                                       UNI00680
      JENT(IPS) = 1                                                     UNI00690
      JENT(IPS+LSV) = 1                                                 UNI00700
      CALL RECORD(W(4))                                                 UNI00710
      W(9)=IOLDMD                                                       UNI00720
      W(10)=IBL                                                         UNI00730
      IF(IOLD  .EQ.3) W(10)= INS                                        UNI00740
      NR = 0                                                            UNI00750
      CALL EWRITE(EXFILE,NR,W,10,IR)                                    UNI00755
      RETURN                                                            UNI00760
      END                                                               UNI00770
**** SOURCE FILE : M0000983.V01   ***
*
C.....FORTRAN SUBROUTINE             UNPACK...              3/1/68   GK UNPK0000
C                                                                       UNPK0001
C                                                7/69      RW           UNPK0005
C                                                                       UNPK0010
C             FORTRAN SUBROUTINE UNPACK                                 UNPK0020
C                                                                       UNPK0030
C PURPOSE     TO UNPACK THE INDICATOR WORD FOR AN ENTRY IN THE          UNPK0040
C             CANONICAL FORM TABLE                                      UNPK0050
C                                                                       UNPK0060
C LINKAGE     CALL UNPACK (RESULT,MODE,SIZE,SUB)                        UNPK0070
C                                                                       UNPK0080
C ARGUMENTS   RESULT  AN ARRAY WITHIN THE CANONICAL FORM TABLE          UNPK0090
C            IMODE  INTEGER TO CONTAIN MODE OF THE SURFACE              UNPK0100
C            ISIZE  INTEGER TO CONTAIN SIZE OF CANONICAL FORM           UNPK0110
C            ISUB   INTEGER TO CONTAIN TEH NAME SUBSCRIPT OF SURFACE    UNPK0120
C                                                                       UNPK0130
      SUBROUTINE UNPACK (RESULT,IMODE,ISIZE,ISUB)                       UNPK0140
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            UNPK0150
      DIMENSION RESULT (10)                                             UNPK0160
      DATA KLIT1,KLIT2/1000000,10000/                                   UNPK0170
      J = 0                                                             UNPK0180
   10 IPACK=DABS(RESULT(J))                                             UNPK0190
      IMODE = IPACK/KLIT1                                               UNPK0200
      ISIZE = (IPACK-IMODE*KLIT1)/KLIT2                                 UNPK0210
      ISUB = IPACK-IMODE*KLIT1 -ISIZE*KLIT2                             UNPK0220
      RETURN                                                            UNPK0230
      END                                                               UNPK0240
**** SOURCE FILE : M0001127.V02   ***
*
      FUNCTION VDOTF(B,C)                                               00000100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000200
      DIMENSION B(*),C(*)                                               00000300
      VDOTF=B(1)*C(1)+B(2)*C(2)+B(3)*C(3)                               00000400
      RETURN                                                            00000500
      END                                                               00000600
**** SOURCE FILE : VSCALE.ORG   ***
*
      SUBROUTINE VSCALE(S,V1,V2)                                        00000100
C                                                                       00000200
C    PURPOSE: TO APPLY A SCALE FACTOR TO A VECTOR  ( V2=S*V1 )          00000300
C                                                                       00000400
      DOUBLE PRECISION S,V1,V2                                          00000500
      DIMENSION V1(3),V2(3)                                             00000600
C                                                                       00000700
      DO 10 I=1,3                                                       00000800
        V2(I)=S*V1(I)                                                   00000900
   10 CONTINUE                                                          00001000
C                                                                       00001100
      END                                                               00001200
**** SOURCE FILE : M0002876.V03   ***
*
C                                                                       ZSUR0001
C.....FORTRAN SUBROUTINE             ZSURF....              6/10/68 EAN ZSUR0002
C                                                                       ZSUR0010
C              FORTRAN SUBROUTINE ZSURF                                 ZSUR0020
C                                                                       ZSUR0030
C PURPOSE      TO DEFINE A PLANE WHICH WILL GIVE THE Z COORDINATE       ZSUR0040
C              OF A POINT WHICH HAS NOT BEEN EXPLICITY DEFINED, BY      ZSUR0050
C              THE FOLLOWING APT STATEMENT                              ZSUR0060
C                   ZSURF/P                                             ZSUR0070
C                                                                       ZSUR0080
C LINKAGE      CALL ZSURF (PL)                                          ZSUR0090
C                                                                       ZSUR0100
C ARGUMENTS    PL      ARRAY CONTAINING THE CANONICAL FORM OF THE       ZSUR0110
C                      INPUT PLANE                                      ZSUR0120
C                                                                       ZSUR0130
C SUBSIDIARIES TYPE                ENTRY                                ZSUR0140
C              SUBROUTINE          APT077                               ZSUR0150
C              REAL FUNCTION       ABS                                  ZSUR0160
C              SUBROUTINE          ERROR                                ZSUR0170
C                                                                       ZSUR0180
      SUBROUTINE ZSURF (PL)                                             ZSUR0190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            ZSUR0200
      DIMENSION PL(4)                                                   ZSUR0210
C                                                                       ZSUR0220
C                                                                       ZSUR0230
C                                                                       ZSUR0240
C                                                                       ZSUR0250
      INCLUDE 'TOTAL.INC'                                               ZSUR0391
      INCLUDE 'DEF.INC'                                                 ZSUR0490
      INCLUDE 'DSHAR3.INC'                                              ZSUR0580
      INCLUDE 'ZNUMBR.INC'                                              ZSUR0688
      INCLUDE 'LDEF.INC'                                                ZSUR0733
C...  13. IBRKPT BLOCK. USED FOR DYNDMP BREAKPNTS. INTEGER EQUIVALENCED ZSUR0741
C...      TO ISV(30).                                                   ZSUR0750
C                                                                       ZSUR0759
      INCLUDE 'ISHR16.INC'                                              ZSUR0823
      INCLUDE 'KNUMBR.INC'                                              ZSUR0985
C                                                                       ZSUR1030
C                                                                       ZSUR1040
      DATA ZLIT1/1.0D-1/                                                ZSUR1050
C                                                                       ZSUR1060
C                                                                       ZSUR1070
C                                                                       ZSUR1080
C...     CHECK VALIDITY AND TRANSFORM                                   ZSUR1090
C                                                                       ZSUR1100
      CALL APT077 (PL,K0)                                               ZSUR1110
      IF (UNFLAG) GO TO 30                                              ZSUR1120
C.... ERROR WHEN ZSURF IS PARALEL TO ZAXIS OF LOCAL SYSTEM              ZSUR1121
      IF(DABS(L(3)).LT.ZLIT1) GO TO 30                                  ZSUR1122
      ZFLAG=.FALSE.                                                     ZSUR1123
C                                                                       ZSUR1130
C...     MOVE ZSURF INTO REF ARRAY                                      ZSUR1140
C                                                                       ZSUR1150
      DO 10 I=1,4                                                       ZSUR1160
      REF(1,I) = PL(I)                                                  ZSUR1170
   10 REF(2,I) =  L(I)                                                  ZSUR1180
C                                                                       ZSUR1190
   20 CONTINUE                                                          ZSUR1250
      RETURN                                                            ZSUR1251
   30 CALL ERROR (49,'ZSURF   ')                                        ZSUR1252
      GO TO 20                                                          ZSUR1253
       END                                                              ZSUR1260
**** SOURCE FILE : M0000991.V03   ***
*
C.....FORTRAN SUBROUTINE             ZVECT....              3/1/68   GK ZVEC0000
C                                                                       ZVEC0010
C              FORTRAN LOGICAL FUNCTION ZVECT                           ZVEC0020
C                                                                       ZVEC0030
C PURPOSE      TO DETERMINE WHETHER A VECTOR HAS BEEN DEFINED           ZVEC0040
C              AND IS NOT WITHIN TOLERANCE OF ZERO.                     ZVEC0050
C                                                                       ZVEC0060
C LINKAGE      CALL AVECT (RESULT)                                      ZVEC0070
C                                                                       ZVEC0080
C ARGUMENTS    RESULT  ARRAY CONTAINING THE CANONICAL FORM OF           ZVEC0090
C                      THE VECTOR                                       ZVEC0100
C                                                                       ZVEC0110
C SUBSIDIARIES TYPE                ENTRY                                ZVEC0120
C              REAL FUNCTION       ABS                                  ZVEC0130
C              LOGICAL FUNCTION    CKDEF                                ZVEC0140
C                                                                       ZVEC0150
      LOGICAL FUNCTION ZVECT (RESULT)                                   ZVEC0160
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            ZVEC0170
      DIMENSION RESULT(3)                                               ZVEC0180
      LOGICAL CKDEF                                                     ZVEC0190
C                                                                       ZVEC0200
C                                                                       ZVEC0210
C                                                                       ZVEC0220
      INCLUDE 'TOTAL.INC'                                               ZVEC0351
      INCLUDE 'ZNUMBR.INC'                                              ZVEC0416
C                                                                       ZVEC0440
C                                                                       ZVEC0450
C                                                                       ZVEC0460
      ZVECT=(.NOT.CKDEF(RESULT)).AND.((DABS(RESULT(1))+DABS(RESULT(2))+ ZVEC0470
     1    DABS(RESULT(3))).GT.Z5EM6)                                    ZVEC0480
      RETURN                                                            ZVEC0490
       END                                                              ZVEC0500
**** MODULE = CLEDITOR ****
**** SOURCE FILE : M0011533.W02   ***
*
C                                                                       A3010001
C.....FORTRAN SUBROUTINE                   APT301                       A3010002
C*********************************************************              A3010010
C******                                            *******              A3010020
C******               CLTAPE EDITOR                *******              A3010030
C******                                            *******              A3010040
C*********************************************************              A3010050
CIBFTC A301    FULIST,REF                                               A3010060
C PURPOSE      TO CONTROL OPERATION OF THE GROUP OF SUBROUTINES         A3010070
C              COMPRISING THE CLTAPE EDITOR FUNCTION.                   A3010080
C LINKAGE      CALL APT301                                              A3010090
C ARGUMENTS    NONE - ALL THE DATA REQUIRED BY APT301 IS ON             A3010100
C              EXFILE.                                                  A3010110
C SUBSIDIARIES APT302, APT303, APT304, APT305, APT306, APT307,          A3010120
C              APT308, APT309, APT310, APT311, APT312, APT313,          A3010130
C              APT314, APT315, APT318, APT319, APT320, APT321,          A3010140
C              APT322, APT325, APT326, APT327, APT328, APT329,          A3010150
C              ALT330, APT331, APT332                                   A3010160
C...NOTE   THIS ROUTINE HAS BEEN MODIFIED SO THAT IT NO LONGER          A3010181
C          USES MIXED ARITHMETIC (DOUBLE PRECISION NORMALIZED,          A3010182
C          DOUBLE PRECISION UNNORMALIZED,AND INTEGER )                  A3010183
      SUBROUTINE APT301                                                 A3010190
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3010200
C                                                                       A3010210
C     THE FOLLOWING PROGRAM IS THE EXECUTIVE ROUTINE FOR THE CLTAPE     A3010220
C     EDITOR.IT HAS THREE FUNCTIONS                                     A3010230
C     TO PROVIDE A VERIFICATION LISTING OF THE CLFILE,INCLUDING ERROR   A3010240
C     DIAGNOSTICS                                                       A3010250
C     TO PROCESS COPY AND VTLAXS COMMANDS                               A3010260
C     TO PROVIDE THE BASE STRUCTURE FOR ANY FUTURE PLOTTING PROGRAMS    A3010270
C                                                                       A3010280
C     THE EXECUTION OF A PART PROGRAM RESULTS IN THE PREPARATION OF     A3010290
C     EXFILE.  THE CLEDITOR USES EXFILE  AS INPUT TO PREPARE THE        A3010300
C     CLFILE.  THE FORMAT OF EXFILE IS NOT IDENTICAL TO THE CLFILE.     A3010310
C                                                                       A3010320
C                                                                       A3010330
C     ***** COMMON-EQUIVALENCE BLOCK VARIABLES *****                    A3010340
C                                                                       A3010350
      COMMON /EDITOR/ EDITOR                                            A3010360
      DIMENSION  EDITOR(1500)                                           A3010370
C                                                                       A3010380
      DIMENSION  AREA1(1500), AREA2(1000), AREA3(250)                   A3010390
      EQUIVALENCE  (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))    A3010400
C                                                                       A3010410
      EQUIVALENCE             (AREA1(1),RECORD(1)),(AREA1(1),IRECRD(1)),A3010420
     1  (AREA1(257),CURRNT),(AREA1(258),IDPLOT(1)),(AREA1(260),IPLOTI), A3010430
     2   (AREA1(261),IPX)   , (AREA1(262),IPY)   , (AREA1(263),NCAMRA), A3010435
     3   (AREA1(264),NRECNO), (AREA1(265),SEQNO) , (AREA1(266),NX)    , A3010440
     4   (AREA1(267),NY), (AREA1(268),PARTNO(1)),  (AREA1(280),PT0(1)), A3010450
     5   (AREA1(283),PTU(1)), (AREA1(286),KPLOT) ,                      A3010460
     6 (AREA1(335),IPLTAB(1)),(AREA1(375),MLTFLG), (AREA1(376),NREAD) , A3010470
     7 (AREA1(377),NNNNN(1)), (AREA1(381),NRECF) , (AREA1(382),NRECL) , A3010480
     8   (AREA1(383),NCFL)  , (AREA1(384),NPWDS) , (AREA1(385),NPTAB) , A3010490
     9   (AREA1(386),INDXR) , (AREA1(387),INDXN) , (AREA1(388),NRECN1)  A3010500
      EQUIVALENCE             (AREA1(389),NTAPE) , (AREA1(390),NCLEND), A3010510
     1 (AREA1(391),NRECLS), (AREA1(392),NTAPE1),(AREA1(393),INDTBS(1)), A3010520
     2   (AREA1(473),INDXS) , (AREA1(474),EMPTY) , (AREA1(475),ISTFLG), A3010530
     3   (AREA1(476),ICPYSW),     (AREA1(287),MATTAB(1,1,1))            A3010540
      EQUIVALENCE             (AREA1(477),SAVSEQ)                       A3010542
C                                                                       A3010545
      EQUIVALENCE      (AREA2(1),AMATRX(1,1)),     (AREA2(1),AMTR(1)) , A3010550
     1   (AREA2( 37),AN1)   , (AREA2( 38),AN2)   , (AREA2( 39),BRANCH), A3010560
     2   (AREA2( 40),CMAT(1,1)),  (AREA2(52),CNTMAT(1,1)),              A3010570
     3   (AREA2(52),CNTM(1)),  (AREA2(88),CONT(1)),                     A3010580
     4                       (AREA2(91),COUNT(1)), (AREA2( 94),ICLWAS), A3010590
     5   (AREA2( 95),ICOPY) , (AREA2( 96),INDN)  ,                      A3010600
     6   (AREA2( 99),INDTAB(1)),  (AREA2( 99),TABIND(1)),               A3010610
     7                      (AREA2(259),INDXNO(1)),(AREA2(262),IPLOTX), A3010620
     8 (AREA2(463),IPLWAS),(AREA2(464),IRECNI(1)),(AREA2(465),JCOPY)  , A3010630
     9   (AREA2(466),KCOPY) , (AREA2(467),LPRINT), (AREA2(468),MAXCOP)  A3010640
      EQUIVALENCE             (AREA2(485),TNTM(1)),(AREA2(521),VUN)   , A3010650
     1   (AREA2(469),MULTAX), (AREA2(470),NLETRS), (AREA2(471),NTAB)  , A3010660
     2   (AREA2(472),ORIGIN), (AREA2(473),PPRINT(1)),                   A3010670
     3   (AREA2(485),TMATRX(1,1)),  (AREA2(522),TRAMAT(1,1)),           A3010680
     4   (AREA2(534),NCSMAX), (AREA2(535),LVLCPY), (AREA2(536),NOCPY)   A3010690
C                                                                       A3010695
      EQUIVALENCE             (AREA3(  1),AX0)   , (AREA3(  2),AX)    , A3010700
     1   (AREA3(  3),AY0)   , (AREA3(  4),AY)    , (AREA3(  5),DC)    , A3010710
     2   (AREA3(  6),DX)    , (AREA3(  7),DY)    , (AREA3(  8),DELX)  , A3010720
     3   (AREA3(  9),DELY)  , (AREA3( 10),IERR)  , (AREA3( 11),ITRUNC), A3010730
     4   (AREA3( 12),LOKATE), (AREA3( 13),MCODE) , (AREA3( 14),NX0)   , A3010740
     5   (AREA3( 15),NX1)   , (AREA3( 16),NX2)   , (AREA3( 17),NX4)   , A3010750
     6   (AREA3( 18),NX5)   , (AREA3( 19),NY0)   , (AREA3( 20),NY1)   , A3010760
     7   (AREA3( 21),NY2)   , (AREA3( 22),NY4)   , (AREA3( 23),NY5)   , A3010770
     8   (AREA3( 24),PARAM),                       (AREA3( 75),PNAME) , A3010780
     9   (AREA3( 76),PPT(1)), (AREA3( 79),EMPTY2), (AREA3( 80),TL)      A3010790
      EQUIVALENCE             (AREA3( 81),X0)    , (AREA3( 82),X1)    , A3010800
     1   (AREA3( 83),X2)    , (AREA3( 84),X3)    , (AREA3( 85),XNEW)  , A3010810
     2   (AREA3( 86),Y0)    , (AREA3( 87),Y1)    , (AREA3( 88),Y2)    , A3010820
     3   (AREA3( 89),Y3)    , (AREA3( 90),YNEW)  , (AREA3( 91),EMPTY3)  A3010830
C                                                                       A3010840
      DIMENSION   AMATRX(3,4),AMTR  ( 36),CMAT  (3,4),CNTMAT(3,4),      A3011040
     1CNTM  ( 36),CONT  (  3),COUNT (  3),IDPLOT(  2),INDTAB(160),      A3011050
     2INDXNO(  3),IRECNI(  3),IRECRD(256),            PARTNO( 12),      A3011060
     3PPRINT( 12),PPT   (  3),PT0   (  3),PTU   (  3),NNNNN (  4),      A3011070
     4RECORD(256),TRAMAT(3,4),TABIND(160),TMATRX(3,4),TNTM  ( 36)       A3011080
C                                                                       A3011085
C                                                                       A3011086
      INCLUDE 'KNUMBR.INC'                                              A3011116
C                                                                       A3011120
      COMMON /KFLAGS/ KFLAGS                                            A3011125
      DIMENSION  KFLAGS(5)                                              A3011130
      EQUIVALENCE             (KFLAGS( 1),CLPRT) , (KFLAGS( 2),CLWRT) , A3011135
     1   (KFLAGS( 3),CLPLOT), (KFLAGS( 4),TAPFLG), (KFLAGS( 5),ITRAFL)  A3011140
C                                                                       A3011145
      INCLUDE 'CLHOLRTH.INC'                                            A3011212
C                                                                       A3011215
      COMMON /NCFSTO/ NCFSTO,CSCALE                                     A3011220
      DIMENSION NCFSTO(60000),MATTAB(4,4,3),AMTTAB(4,4,3),IPLTAB(40)    A3011225
      EQUIVALENCE  (MATTAB(1,1,1),AMTTAB(1,1,1))                        A3011230
C                                                                       A3011235
      COMMON /VERSON/ NEWSYS,ISTAND,IMACHN,IFIRST,NUM,KONSYS(2)         A3011240
C                                                                       A3011245
      COMMON /NRECC/ NRECC                                              A3011250
      DIMENSION  NRECC(21)                                              A3011255
C                                                                       A3011260
C...     TYPE DECLARATIONS AND MISCELLANEOUS EQUIVALENCES               A3011265
C                                                                       A3011270
      DOUBLE PRECISION  NCFSTO, IRECRD, MATTAB, KKSTAK, INDEX           A3011280
      INTEGER  CLPRT,CLWRT,CLPLOT,CURRNT,BRANCH,PPFLAG,CPFL             A3011285
      INTEGER  TAPFLG                                                   A3011286
C                                                                       A3011290
      DIMENSION  ALETRA(3), INDTBS(80)                                  A3011295
      DIMENSION PPSTAK(15,30),KKSTAK(15,30),CPFL(48)                    A3011300
      EQUIVALENCE (PPSTAK(1,1),KKSTAK(1,1))                             A3011305
C                                                                       A3011310
      DIMENSION  JRECRD(512)                                            A3011315
      EQUIVALENCE  (RECORD(1),JRECRD(1)), (JRECRD(6),NUMWDS)            A3011320
C                                                                       A3011325
      INTEGER Z4E                                                       A3011326
      PARAMETER (Z4E=1308622848)                                        A3011327
      INTEGER IZERO(2)                                                  A3011328
      EQUIVALENCE (IZERO(1),ZERO)                                       A3011329
C                                                                       A3011330
      CHARACTER*8 CTEST,ENDIND,ENORM,VTLAXS,CLDATA,CLOCK                A3011332
      CHARACTER HMACR*16,CPFLID*4,IBLK2*2,HENDS*4,HBIGIN*6              A3011333
      INTEGER BCDF,ITEMP(2)                                             A3011336
      EQUIVALENCE (ITEMP(1),DTEMP)                                      A3011337
C                                                                       A3011340
C...            SYSTEM I/O FILE NAMES                                   A3011345
C                                                                       A3011350
      INCLUDE 'SYMFIL.INC'                                              A3011357
      COMMON/R5AXIS/                                                    A3011391
     1Z1    ,Z2    ,ZSTART,YSTART,XSTART,ZD    ,YD    ,XD    ,ZCV   ,   A3011392
     2YCV   ,XCV   ,ZDO   ,YDO   ,XDO   ,ZCC  ,YCC    ,XCC    ,ZUN   ,  A3011393
     3YUN   ,XUN   ,ZTR   ,YTR   ,XTR   ,ZTA   ,YTA   ,XTA   ,Z     ,   A3011394
     4STANG ,ENDANG,DANG  ,CANG  ,DLNGTH,TLNGTH,VCUTER,TEST  ,CRADUS    A3011395
      COMMON/I5AXIS/                                                    A3011396
     1IVTFLG,IS,IR,IL,IE,JSUBER,IABOVE,NRECEX,NRECCL,NCFLSV             A3011397
C                                                                       A3011400
      CHARACTER*20 IFMT1,IFMT3                                          A3011420
C                                                                       A3011424
      INCLUDE 'DARRAY.INC'                                              A3011425
C                                                                       A3011428
C                                                                       A3011429
      DATA IFMT1/'** START CLEDITOR **'/                                A3011440
      DATA IFMT3/'** END   CLEDITOR **'/                                A3011450
      DATA IZERO/Z4E,0/                                                 A3011540
      DATA ENDIND/'NOMORE  '/,CPFLID/'CPFL'/,IBLK2/'  '/,ENORM/'NORMAL'/A3011542
      DATA VTLAXS/'VTLAXS  '/,CLDATA/'CLDATA  '/,CLOCK/' CLOCK  '/      A3011544
      DATA HMACR/'MACRO PROCESSING'/                                    A3011546
      DATA HENDS /'ENDS'/                                               A3011547
      DATA HBIGIN/'BEGINS'/                                             A3011548
C                                                                       A3011550
C     PRINT WHAT SECTION THIS IS                                        A3011560
C                                                                       A3011570
   10 CALL CFORM('1',DARRAY,1,1)                                        A3011580
      CALL CFORM(IFMT1,DARRAY,45,20)                                    A3011585
      CALL CPRINT(DARRAY)                                               A3011590
C                                                                       A3011600
C... READ CPFILE TO OBTAIN CLPRNT AND APTIII CONVERSION REQUIREMENTS    A3011601
C                                                                       A3011602
      CALL AREAD (CPFILE,1,CPFL,48,IR)                                  A3011603
      CALL HOLFRM(CPFL(1),CTEST,1,4,NWD)                                A3011605
      IF ((CTEST(1:4) .EQ. CPFLID) .AND. (CPFL(2) .EQ. 1))  GO TO 6     A3011606
C                                                                       A3011607
      CALL APT336(30032,'APT301  ')                                     A3011608
      RETURN                                                            A3011609
C                                                                       A3011610
C... INITIALIZE ALL VARIABLES                                           A3011611
C                                                                       A3011612
    6 CLPRT=CPFL(4)                                                     A3011613
      ICLSV=1                                                           A3011615
      CLWRT=1                                                           A3011620
      IPLWAS=0                                                          A3011630
      CLPLOT=0                                                          A3011640
C...     CHECK CLPRNT REQUIREMENTS                                      A3011642
      IF (CLPRT .EQ. 0) GO TO 35                                        A3011644
      CALL CFORM('0TAPENO/ISN',DARRAY,1,11)                             A3011646
      CALL CPRINT(DARRAY)                                               A3011648
      GO TO 45                                                          A3011650
   35 CALL CFORM('*** NO CLPRNT HAS BEEN REQUESTED ***',DARRAY,11,36)   A3011652
      CALL CFORM('0',DARRAY,1,1)                                        A3011653
      CALL CPRINT(DARRAY)                                               A3011654
C...     CLEAR INDEX NUMBERS FROM TABLE                                 A3011656
   45 DO 80 I=1,80                                                      A3011660
   80 TABIND(I)=K0                                                      A3011670
 90    COUNT(1) =K0                                                     A3011680
      IVCUT=0                                                           A3011684
      ICUT = 0                                                          A3011685
      IPLFLG=0                                                          A3011690
      IVTFLG=1                                                          A3011692
      NRECEX=0                                                          A3011694
      NRECCL=0                                                          A3011696
      NCFLSV=1                                                          A3011698
      ISTFLG=3                                                          A3011700
      MLTFLG=1                                                          A3011710
      NREAD=1                                                           A3011720
      INDXS=0                                                           A3011730
      NRECF=0                                                           A3011740
      NRECL=0                                                           A3011750
      NCFL=1                                                            A3011760
      NPWDS=0                                                           A3011770
      NTAB=1                                                            A3011780
      NPTAB=0                                                           A3011790
      MAXCOP=3                                                          A3011800
      NCAMRA=1                                                          A3011810
      MULTAX=0                                                          A3011820
      ICLWAS=0                                                          A3011830
      IDPLOT(1) =0                                                      A3011840
      IPLOTI=0                                                          A3011850
      LVLCPY=0                                                          A3011852
      NOCPY=0                                                           A3011854
      ICOPY =0                                                          A3011860
      NCSMAX=60000                                                      A3011862
      NCSSV=NCSMAX                                                      A3011863
      ICRDEF=0                                                          A3011864
      ITRCPY=0                                                          A3011868
      CURRNT=0                                                          A3011870
      ITRAFL=0                                                          A3011880
      ICP3=-1                                                           A3011882
       CSCALE = 1.                                                      A3011890
             TSCALE= 1.0                                                A3011900
            PPFLAG = K0                                                 A3011910
                J1 = K1                                                 A3011920
      CALL APT314(-1,-1)                                                A3011922
      I=1                                                               A3011923
      CALL APT314(EXFILE,I)                                             A3011924
      NTAPE = EXFILE                                                    A3011930
      NTAPE1=K1                                                         A3011940
      NFIL12=12                                                         A3011945
      NFIL13=13                                                         A3011946
C                                                                       A3011950
C**   SET = 1 IF NEW SYSTEM CLTAPE RECS. TO BE WRITTEN                  A3011960
      NEWSYS =K0                                                        A3011970
C                                                                       A3011980
C**   SET = 1 IF APT III STANDARD CLTAPE TO BE WRITTEN                  A3011990
      ISTAND = K0                                                       A3012000
C                                                                       A3012010
C**   SET = 1 IF A MACHINE P. P. COMMAND DETECTED IN A-301              A3012020
      IMACHN = K0                                                       A3012030
C                                                                       A3012040
C**   FLAG FOR LMCT                                                     A3012050
      IFIRST = K1                                                       A3012060
C                                                                       A3012070
C**   INDEX INTO TABLE OF AVAILABLE POST PROCESSORS                     A3012080
      NUM = K1                                                          A3012090
C                                                                       A3012100
C**   CONTROL SYSTEM NAME FROM W(5), MACHIN P.P.C. RECORD.              A3012110
      KONSYS(1) = Z4E                                                   A3012120
      KONSYS(2) = K0                                                    A3012121
      DO 110 I=1,4                                                      A3012130
  110 NRECC(I)=K0                                                       A3012140
      NRECN1=1                                                          A3012150
C                                                                       A3012160
C     READ EXFILE OR OLD CLFILE OR NCFSTO                               A3012170
C                                                                       A3012180
  190 ICRDEF = K0                                                       A3012185
      IF(IVTFLG.EQ.6) GO TO 8025                                        A3012186
      GO TO (210,200,220,240),NREAD                                     A3012190
  200 NRECC(NTAPE1) = NRECC(NTAPE1)-1                                   A3012200
      GO TO 211                                                         A3012210
  210 NRECC(NTAPE1)=NRECC(NTAPE1)+1                                     A3012240
  211 CALL APT314(NTAPE,NRECC(NTAPE1))                                  A3012250
      GO TO 270                                                         A3012280
  220 IF (NCFL .GE. (NCSSV-1)) GO TO 229                                A3012290
      K=NCFSTO(NCFL+2)/1000                                             A3012310
      K=NCFSTO(NCFL+2)+3-K *1000                                        A3012320
      DO 222 I = 1,K                                                    A3012330
      IRECRD(I) = NCFSTO(NCFL)                                          A3012340
  222 NCFL=NCFL+1                                                       A3012350
      IRECRD(3)=ZERO                                                    A3012360
      NUMWDS=K-3                                                        A3012370
      GO TO 270                                                         A3012380
  229 NREAD=K1                                                          A3012390
  230 IF (NTAPE1.EQ.K1) GO TO 235                                       A3012400
      I=NCFL-NPWDS+1                                                    A3012410
      K=NCFSTO(I)/1000                                                  A3012420
      NRECC(NTAPE1) = K                                                 A3012430
      CALL APT314 (NTAPE,K)                                             A3012440
      IF ((IRECRD(1)-NCFSTO(I-1).EQ.0).AND.(IRECRD(2)-NCFSTO(I).EQ.0))  A3012450
     1  GO TO 235                                                       A3012460
C                                                                       A3012468
  232 I=AMTTAB(1,4,ICOPY)                                               A3012470
      CALL APT336(30024,'APT301  ')                                     A3012480
      CALL HELP                                                         A3012520
      GO TO 341                                                         A3012530
C                                                                       A3012540
  235 NRECC(     1) = NRECL                                             A3012555
      CALL APT314(NTAPE,NRECL)                                          A3012560
      IF ((IRECRD(1)-NCFSTO(NRECLS).EQ.0).AND.(IRECRD(2)-NCFSTO(NRECLS+1A3012570
     1).EQ.0))GO TO 190                                                 A3012580
      GO TO 232                                                         A3012590
  240 IF (NCFL.GT.K0) GO TO 245                                         A3012600
      NREAD=K2                                                          A3012610
      GO TO 230                                                         A3012620
  245 K=NCFSTO(NCFL+2)/1000                                             A3012630
      K=NCFSTO(NCFL+2)+3-K*1000                                         A3012640
      J=NCFSTO(NCFL+2)/1000                                             A3012650
      M=NCFL                                                            A3012660
      DO 246 I=1,K                                                      A3012670
      IRECRD(I)   = NCFSTO(M)                                           A3012680
  246 M=M+1                                                             A3012690
      IRECRD(3)=ZERO                                                    A3012700
      NUMWDS=K-K3                                                       A3012710
      NCFL=NCFL-J                                                       A3012720
C                                                                       A3012730
  270 CALL APT310 (BRANCH,RECORD(1))                                    A3012740
C                                                                       A3012750
C     BRANCH ACCORDING TO RECORD NAME                                   A3012760
C                                                                       A3012770
      GOTO(300,2000,1400,3000,1450,300,6000,1300,300,1200,7000,1100     A3012780
     1,7000,1600,8100,8000,5000,9100,5500,9500,4000,9600,8200,9800,9810,A3012790
     29000),BRANCH                                                      A3012800
C                                                                       A3012810
C     THIS IS THE COMMON RETURN POINT FOR ALL SECTIONS OF THE CL EDITOR A3012820
C     AND THE POINT AT WHICH THE RECORDS ARE WRITTEN ON CLFILE IF CLWRT A3012830
C     =1 AND PRINTED IF CLPRT=1                                         A3012840
C                                                                       A3012850
C                                                                       A3012860
C...  WRITE CLFILE,VLFILE AND CLFIL3 IF THE APPROPRIATE FLAGS ARE SET   A3012870
C                                                                       A3012880
  300 SEQSTO = RECORD(2)                                                A3012890
      IF (BRANCH .NE. 3) SAVSEQ=RECORD(2)                               A3012895
      IF(CLWRT.EQ.1.AND.CPFL(6).EQ.1) CALL APT312                       A3012900
      GO TO 335                                                         A3012910
  330 SEQSTO=RECORD(2)                                                  A3012920
  335 IF(CLWRT.EQ.1.AND.CPFL(5).EQ.1) CALL CNVRT3(CPFL(7))              A3012930
      GO TO 337                                                         A3012932
  336 SEQSTO=RECORD(2)                                                  A3012934
      SAVSEQ=RECORD(2)                                                  A3012936
  337 IF(CLPRT.EQ.1.AND.BRANCH.NE.21)CALL APT302                        A3012940
      RECORD(2)=SEQSTO                                                  A3012950
      IF(IVTFLG.EQ.6.AND.ISTFLG.NE.K1) GO TO 8025                       A3012951
C                                                                       A3012960
C                                                                       A3013110
C     IF FINI START OVER FOR NEXT PART PROGRAM                          A3013120
C                                                                       A3013130
  340 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)                              A3013138
      IF(CTEST.NE.FINI) GO TO 350                                       A3013140
  341 IF(NRECN1.NE.1.AND.CLWRT.EQ.1.AND.CPFL(6).EQ.0) CALL APT312       A3013145
      IF(NRECN1.NE.1.AND.CLWRT.EQ.1)  CALL APT313                       A3013150
      IF(CLWRT.EQ.1.AND.CPFL(5).EQ.0) CALL CNVRT3(CPFL(7))              A3013155
      CALL CFORM('0',DARRAY,1,1)                                        A3013160
      CALL CFORM(IFMT3,DARRAY,45,20)                                    A3013162
      CALL CPRINT(DARRAY)                                               A3013170
      CALL TAPOP(EXFILE,-3)                                             A3013175
      CALL TAPOP(NFIL12,-3)                                             A3013176
      CALL TAPOP(NFIL13,-3)                                             A3013177
      RETURN                                                            A3013180
C                                                                       A3013190
C     CHECK RECORD FOR LAST ONE FROM AN OLD CLFILE                      A3013200
C                                                                       A3013210
  350 IF (NTAPE1.EQ.K1) GO TO 380                                       A3013220
      IF (NCLEND-JRECRD(4)) 400,360,380                                 A3013230
  360 CALL APT314(-1,-1)                                                A3013235
      NTAPE=EXFILE                                                      A3013240
      NTAPE1=K1                                                         A3013250
C                                                                       A3013252
C...     IF WE ARE IN COPY LOOP, STORE RECORD IN NCFSTO                 A3013254
  380 IF (ISTFLG .NE. K1) GO TO 190                                     A3013256
C                                                                       A3013257
C IF WE ARE IN CLDAT/OFF-ON PART, NO COPY STORAGE                       A3013258
      IF(CPFL(5).EQ.K0) GOTO 190                                        A3013259
C                                                                       A3013260
C...     IF FIRST PASS INSIDE VTLAXS LOOP, NO COPY STORAGE              A3013261
      CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)                              A3013262
      IF (IVTFLG .EQ. 2 .OR. CTEST .EQ. VTLAXS) GO TO 190               A3013263
C                                                                       A3013264
C...     IF THIS IS CLDATA RECORD, CHECK FOR TRACUT TRANSFORMATION      A3013266
      IF (ITRCPY .NE. K1) GO TO 387                                     A3013268
      ITRCPY=0                                                          A3013270
      GO TO 190                                                         A3013272
C                                                                       A3013273
  385 CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)                              A3013274
      IF (IVTFLG .EQ. 2 .OR. CTEST .EQ. VTLAXS) GO TO 190               A3013275
      ITRCPY=1                                                          A3013276
  387 IF ((NCFL + (NUMWDS+3)) .LT. NCSMAX) GO TO 390                    A3013278
      IF((NCFL+(NUMWDS+3)).GE.NCSMAX)CALL APT336(30039,'APT301  ')      A3013279
      ISTFLG=K2                                                         A3013280
      NCSSV=NCFL                                                        A3013285
      GO TO 397                                                         A3013290
C                                                                       A3013300
C     MOVE RECORD TO STORAGE (NCFSTO)                                   A3013310
C                                                                       A3013320
  390 NRECLS=NCFL                                                       A3013330
      NRECL=NRECC(1)                                                    A3013340
      K=NUMWDS+3                                                        A3013350
      DO 395 I=1,K                                                      A3013360
      NCFSTO(NCFL) = IRECRD(  I)                                        A3013370
  395 NCFL=NCFL+1                                                       A3013380
      IF(NCFL.GE.NCSMAX)CALL APT336(30039,'APT301  ')                   A3013385
      NCFSTO(NRECLS+2)=JRECRD(6)+NPWDS*1000                             A3013390
      NPWDS=NUMWDS+3                                                    A3013400
C                                                                       A3013406
C..      CHECK FOR A TRACUT TRANSFORMATION OF THIS CLDATA RECORD        A3013408
  397 IF (ITRCPY .NE. K1) GO TO 190                                     A3013410
      IF (ICRDEF .EQ. K1) GO TO 2039                                    A3013412
      GO TO 2100                                                        A3013414
C                                                                       A3013420
C     THE LAST RECORD FROM THE OLD CLFILE WAS NOT FOUND                 A3013430
C                                                                       A3013440
  400 CALL APT336(30031,'APT301  ')                                     A3013450
      GO TO 360                                                         A3013460
C                                                                       A3013470
C     SAVE THE PARTNO BCD TEXT-TO BE PLOTTED IN THE SETUPP SUBROUTINE   A3013570
C                                                                       A3013580
 1100 K = JRECRD(10)-1                                                  A3013590
      DO 1110 I=1,K                                                     A3013600
 1110 PARTNO(I)=RECORD(I+6)                                             A3013610
      GO TO 300                                                         A3013620
C     SET THE MULTAX FLAG                                               A3013630
 1200 MULTAX=K1                                                         A3013640
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)                              A3013648
      IF(CTEST.EQ.OFF) MULTAX=0                                         A3013650
      GO TO 300                                                         A3013660
C     INSERT COMMAND                                                    A3013670
 1300 GO TO 300                                                         A3013680
C                                                                       A3013682
C...     **** AERR PROCESSING ****                                      A3013684
C                                                                       A3013686
 1400 CLWRT=K1                                                          A3013688
      IF (JRECRD(8) .LT. 0) GO TO 1402                                  A3013690
      IF (IVTFLG .EQ. 2) GO TO 1430                                     A3013692
C...     SET FLAG IF COPY TRANSFORMATION SHOULD BE BYPASSED             A3013693
      IF (ISTFLG .LT. 3 .OR. ICOPY .NE. 0) NOCPY=1                      A3013694
      IF (CLPRT .EQ. 0) GO TO 1405                                      A3013695
      IF (JRECRD(4) .NE. 2) GO TO 300                                   A3013696
      CLPRT=ICLSV                                                       A3013697
 1402 IF (CLPRT .EQ. 0) CALL APT302                                     A3013698
      GO TO 300                                                         A3013699
C...     TURN ON CLPRNT AND BACKSPACE TO LAST CLDATA RECORD             A3013700
 1405 DO 1410 JBCK=1,50                                                 A3013702
      NRECC(1)=NRECC(1)-1                                               A3013706
      CALL APT314(NTAPE,NRECC(1))                                       A3013708
      CALL HOLFRM(RECORD(1),CTEST,1,8,NWD)                              A3013709
      IF (CTEST .EQ. CLDATA .AND. JRECRD(8) .NE. 1) GO TO 1420          A3013710
      IF (CTEST .EQ. CLOCK) GO TO 1425                                  A3013711
 1410 CONTINUE                                                          A3013712
C                                                                       A3013713
C...     START CLPRNT AT CL MOTION COMMAND AND ISSUE DIAGNOSTIC         A3013714
 1420 NRECC(1)=NRECC(1)-2                                               A3013716
 1425 CALL APT336(30037,'APT301  ')                                     A3013718
      ICLSV=0                                                           A3013720
      CLPRT=1                                                           A3013722
      GO TO 190                                                         A3013724
C                                                                       A3013726
C...     IF VTLAXS LOOP, BACKSPACE TO VTLAXS/ON AND BYPASS TRANSFORMING A3013728
 1430 IVTFLG=1                                                          A3013730
      CALL APT336(30036,'APT301  ')                                     A3013732
      NRECC(1)=IR                                                       A3013734
      CALL APT314(NTAPE,NRECC(1))                                       A3013736
      CLPRT=1                                                           A3013740
      BRANCH=16                                                         A3013741
      GO TO 330                                                         A3013742
C                                                                       A3013744
C        **** DYNDMP PROCESSING ***                                     A3013746
C                                                                       A3013748
 1450 CALL APT302                                                       A3013750
      GO TO 340                                                         A3013760
C                                                                       A3013805
C     PPRINT-SAVE THE BCD TEXT                                          A3013810
C                                                                       A3013815
 1600 IF (IDPLOT(1) .EQ. K2) GO TO 300                                  A3013820
      DO 1620 I=1,NUMWDS,2                                              A3013830
 1620 PPRINT (I)= RECORD(I+4)                                           A3013840
      GO TO 300                                                         A3013850
C     FINI. PREPARE FOR END OF FILE EXIT FROM CLTAPE EDITOR             A3013860
C     IF CLFILE WAS WRITTEN, PLACE AN EOF ON IT                         A3013870
C      RETURN TO BEGINNING OF CLTAPE EDITOR.                            A3013880
C                                                                       A3013890
C     CLDATA.THIS SECTION WILL PROCESS THE CUTTER LOCATION POINTS.IT WILA3013900
C     L TRANSFORM THE POINTS IF A COPY IS IN EFFECT.IT WILL ALSO PLOT THA3013910
C     E TOOL PATH IF THE PLOTTING ROUTINES ARE IN THE SYSTEM.           A3013920
C                                                                       A3013930
 2000 IF ((JRECRD(8)-K1).NE.0) GO TO 2070                               A3013940
      IF(ICUT.NE.0) GO TO 190                                           A3013945
C     STORE THE ORIGIN NAME IF THIS IS AN INITIAL CLDATA RECORD         A3013950
      ORIGIN=RECORD(5)                                                  A3013960
      CALL HOLFRM(ORIGIN,CTEST,1,8,NWD)                                 A3013964
      IF (CTEST.EQ.GODLTA) GO TO 336                                    A3013965
C                                                                       A3013970
C     IF A CANONICAL FORM IS     INCLUDED CHECK FOR CIRCLE              A3013980
C                                                                       A3013990
      IF(JRECRD(6).EQ.K2) GO TO 300                                     A3014000
      IF (JRECRD(18).NE.K4) GO TO 300                                   A3014010
C                                                                       A3014020
C...     CHECK FOR A COPY OR TRACUT TRANSFORMATION. IF BOTH ARE ON,     A3014030
C        STORE THE ORIGINAL CANONICAL FORM BEFORE TRANSFORMING          A3014032
C                                                                       A3014040
       IF (ICOPY.GT.K0) GO TO 2040                                      A3014050
       IF (ITRAFL.NE.K1)  GO TO 300                                     A3014060
      IF(ISTFLG.EQ.K3) GO TO 2040                                       A3014062
      ICRDEF=K1                                                         A3014064
      GO TO 385                                                         A3014066
 2039 ICRDEF=K0                                                         A3014068
 2040 CALL APT303 (RECORD(10),TMATRX,RECORD(10))                        A3014070
      CALL APT304 (RECORD(13),TMATRX,RECORD(13))                        A3014080
      CALL APT315 (RECORD(13),RECORD(13))                               A3014090
      RECORD(16)=CSCALE*TSCALE*RECORD(16)                               A3014100
      GO TO 300                                                         A3014110
 2070 CALL HOLFRM(ORIGIN,CTEST,1,8,NWD)                                 A3014118
      IF(CTEST.NE.GODLTA) GO TO 2090                                    A3014120
      IF(ICUT.NE.0) GO TO 190                                           A3014130
      GO TO 336                                                         A3014140
C...    SET VTLAXS FLAGS AND SAVE LAST SET OF COORDINATES               A3014160
 2090 IF(IVCUT.NE.1) GO TO 2091                                         A3014162
      IVCUT=2                                                           A3014163
      GO TO 190                                                         A3014164
 2091 NRECEX=1                                                          A3014165
      XSTART=RECORD(NUMWDS-2)                                           A3014170
      YSTART=RECORD(NUMWDS-1)                                           A3014171
      ZSTART=RECORD(NUMWDS)                                             A3014172
      IF(ICUT.NE.0) GO TO 190                                           A3014173
C...    CHECK IF VTLAXS IS IN EFFECT                                    A3014174
      IF(IVTFLG.EQ.K1) GO TO 2095                                       A3014175
      CALL APT311                                                       A3014176
 2095 ITEMP(1)=BCDF(DUMMY9(1:4))                                        A3014177
      ITEMP(2)=BCDF(DUMMY9(5:8))                                        A3014178
      ORIGIN=DTEMP                                                      A3014179
C                                                                       A3014180
C...     CHECK FOR A COPY OR TRACUT TRANSFORMATION. IF BOTH ARE ON,     A3014181
C        STORE THE ORIGINAL CUTTER POINTS BEFORE TRANSFORMING           A3014182
C                                                                       A3014184
 2097 IF (ITRAFL .EQ. K1 .AND. ISTFLG .EQ. K1) GO TO 385                A3014186
      IF (ITRAFL .EQ. K1 ) GO TO 2100                                   A3014188
      IF (ICOPY) 3719,300,2100                                          A3014190
C                                                                       A3014192
C        CHECK FOR NO TOOL AXIS VECTOR TRANSFORMING                     A3014194
 2100 IF (MULTAX .NE. K1) GO TO 2120                                    A3014196
      DO 2110 I=5,NUMWDS,7                                              A3014200
      CALL APT303 (RECORD(I),TMATRX,RECORD(I))                          A3014210
C     TRANSFORM TOOL AXIS VECTOR                                        A3014220
      CALL APT304 (RECORD(I+3),TMATRX,RECORD(I+3))                      A3014230
C     NORMALIZE VECTOR OUTPUT                                           A3014240
       CALL APT315 (RECORD(I+3),RECORD(I+3))                            A3014250
 2110 CONTINUE                                                          A3014260
      GOTO 300                                                          A3014270
C                                                                       A3014280
C                                                                       A3014282
 2120 NLAST=NUMWDS+3                                                    A3014284
      DO 2125 I=5,NLAST,4                                               A3014286
      CALL APT303(RECORD(I),TMATRX,RECORD(I))                           A3014288
 2125 CONTINUE                                                          A3014290
      GO TO 300                                                         A3014292
C                                                                       A3014295
C...     *** COPY COMMAND PROCESSING ***                                A3014300
C                                                                       A3014310
C...     IF VTLAXS IS IN EFFECT ISSUE DIAGNOSTIC                        A3014312
 3000 IF (ICP3.GE.0)GOTO 4011                                           A3014314
      IF (IVTFLG .EQ. K4) GO TO 8010                                    A3014316
      IF (IVTFLG .EQ. K2) GO TO 330                                     A3014318
      CALL APT335                                                       A3014320
      IF (ICPYSW.EQ.0) GO TO 330                                        A3014330
      IF (ICPYSW.GT.0) GO TO 190                                        A3014340
      GO TO 232                                                         A3014350
C                                                                       A3014380
C...     COPY LOGIC ERROR                                               A3014385
 3719 CALL APT336(30018,'APT301  ')                                     A3014390
      GO TO 330                                                         A3014400
C                                                                       A3014410
C                                                                       A3014420
C     THIS SECTION PROCESSES THE CLFILE RECORD - CHECKS PARAMETERS FOR  A3014430
C     VALIDITY AND POSITIONS THE OLD CLFILE IF NECESSARY                A3014440
C                                                                       A3014450
 4000 CALL APT302                                                       A3014451
C...     CHECK FOR A CLDAT/2 COMMAND - SET FLAG TO START SAVING CLFILE  A3014453
C...     WRITE IF XECUTION COMMAND CLDAT/START-NOMORE                   A3014454
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)                              A3014458
      IF(CTEST(7:8).NE.IBLK2)GOTO 4006                                  A3014459
      IF(CTEST.EQ.ENDIND.OR.CTEST.EQ.ENORM)GOTO 4008                    A3014464
      ICP3=CPFL(5)                                                      A3014465
      CPFL(5)=0                                                         A3014466
      GOTO 4009                                                         A3014467
 4008 CPFL(5)=ICP3                                                      A3014468
      ICP3=-1                                                           A3014469
 4009 IF(ICOPY.EQ.0.AND.ITRAFL.EQ.0)GOTO 9000                           A3014470
 4011 CALL APT336(30040,'APT301  ')                                     A3014471
      ITRAFL=0                                                          A3014472
      TSCALE=1.                                                         A3014473
      ICOPY=0                                                           A3014474
      ICPYSW=0                                                          A3014475
      NCFL=0                                                            A3014476
      NRECL=0                                                           A3014477
      GOTO 330                                                          A3014478
C                                                                       A3014479
 4006 ICLDWR=JRECRD(14)                                                 A3014480
      I34FLG=JRECRD(18)                                                 A3014481
      IF(ICLDWR.EQ.1) GO TO 4002                                        A3014482
      IF(ICLDWR.EQ.2) GO TO 4005                                        A3014483
 4001 CALL APT336(30025,'APT301  ')                                     A3014484
      GO TO 350                                                         A3014485
C     WRITE                                                             A3014486
 4002 CALL HOLFRM(IRECRD(11),CTEST,1,8,NWD)                             A3014488
      IF(CTEST.EQ.ON) GO TO 4003                                        A3014490
      IF(CTEST.EQ.OFF) GO TO 4004                                       A3014495
      GO TO 4001                                                        A3014500
C     ON                                                                A3014505
 4003 IF(I34FLG.EQ.3) CPFL(5)=1                                         A3014510
      IF(I34FLG.EQ.4) CPFL(6)=1                                         A3014515
      GO TO 9000                                                        A3014520
C     OFF                                                               A3014525
 4004 IF(I34FLG.EQ.3) GO TO 4007                                        A3014530
      JRECRD(13)=Z4E                                                    A3014531
      JRECRD(14)=2                                                      A3014532
      CPFL(6)=0                                                         A3014533
      GO TO 190                                                         A3014534
 4007 CPFL(5)=0                                                         A3014536
      GO TO 9000                                                        A3014545
C     READ                                                              A3014550
 4005 IF(I34FLG.NE.4) GO TO 4001                                        A3014555
      IF(JRECRD(20).EQ.1) K=JRECRD(22)                                  A3014560
      CALL HOLFRM(IRECRD(11),CTEST,1,8,NWD)                             A3014568
      IF(CTEST.EQ.ON) K=10000                                           A3014570
      IF(CTEST.EQ.OFF) GO TO 360                                        A3014580
      NCLEND=JRECRD(26)                                                 A3014590
      IF(CTEST.EQ.ON) NCLEND=99990000                                   A3014600
      J=K                                                               A3014605
      K=K/10000                                                         A3014610
      JTAPE=JRECRD(10)                                                  A3014620
      IF(JTAPE.NE.12.AND.JTAPE.NE.13) GO TO 4001                        A3014630
      NTAPE1=JTAPE-10                                                   A3014640
      IF(JTAPE.EQ.12) NTAPE=NFIL12                                      A3014642
      IF(JTAPE.EQ.13) NTAPE=NFIL13                                      A3014644
      CALL APT314(-1,-1)                                                A3014650
      GO TO (4110,4110,4130,4130),NREAD                                 A3014700
C                                                                       A3014710
C     POSITION OLD CLFILE AND CHECK RECORD NUMBER                       A3014720
C                                                                       A3014730
 4110 NRECC(NTAPE1)=K                                                   A3014740
      IF (ISTFLG.NE.K1) GO TO 4120                                      A3014770
      IF ((NCFL + (NUMWDS+3)) .GE. NCSMAX) GO TO 4120                   A3014780
      NRECLS=NCFL                                                       A3014790
      NRECL=NRECC(1)                                                    A3014800
      K=NUMWDS+3                                                        A3014810
      DO 4115 I= 1,K                                                    A3014820
      NCFSTO(NCFL)=IRECRD(I)                                            A3014830
 4115 NCFL=NCFL+1                                                       A3014840
      NCFSTO(NRECLS+2)=JRECRD(6)+NPWDS*1000                             A3014850
      NPWDS=K                                                           A3014860
 4120 CALL APT314(NTAPE,NRECC(NTAPE1))                                  A3014870
      IF(JTAPE.EQ.12) NFIL12=NTAPE                                      A3014872
      IF(JTAPE.EQ.13) NFIL13=NTAPE                                      A3014873
      IF(J.EQ.10000) GO TO 270                                          A3014875
      IF (JRECRD(4)-J.EQ.0) GO TO 270                                   A3014880
C                                                                       A3014885
      CALL APT336(30026,'APT301  ')                                     A3014890
      GO TO 360                                                         A3014900
 4130 NRECC(NTAPE1)=K-1                                                 A3014910
      GO TO 190                                                         A3014920
C                                                                       A3014930
C     THIS SECTION PROCESSES THE GEOMETRY ERROR RECORD                  A3014940
C                                                                       A3014950
 5000 CLWRT = 1                                                         A3014960
      IF (CLPRT .EQ. 0) CALL APT302                                     A3014970
      GO TO 300                                                         A3014980
C                                                                       A3014990
C     THIS SECTION PROCESSES THE ARLEM RECORD                           A3015000
C                                                                       A3015010
 5500 GO TO 300                                                         A3015020
C                                                                       A3015030
C     THIS SECTION PROCESSES THE INDEX INSTRUCTION.IT ALSO SETS PLOT    A3015040
C     FLAGS AND TESTS TO SEE IF THE PRESENT INDEX IS FOR A PLOT         A3015050
C                                                                       A3015060
C     CHECK FOR PLOT COMMANDS                                           A3015070
C                                                                       A3015080
 6000 IF (IPLFLG.EQ.0) GO TO 6020                                       A3015090
C                                                                       A3015100
C     IS THIS INDEX NUMBER ASSOCIATED WITH A PLOT                       A3015110
C                                                                       A3015120
      DO 6010 I=1,NPTAB                                                 A3015130
      IF (INT(IRECRD(5))-IPLTAB(I).EQ.0) GO TO 300                      A3015140
 6010 CONTINUE                                                          A3015150
C                                                                       A3015160
C     NOW CHECK COPY COMMANDS INDEX TABLE                               A3015170
C                                                                       A3015180
 6020 IF (NTAB.GT.160) GO TO 6070                                       A3015190
      CALL HOLFRM(RECORD(7),CTEST,1,8,NWD)                              A3015194
      IF(JRECRD(6).EQ.4 .AND. CTEST.EQ.ENDIND) GO TO 3000               A3015195
      IF(NTAB.EQ.1) GO TO 6031                                          A3015197
      DO 6030 I = 1,NTAB,2                                              A3015200
      IF (INT(IRECRD(5)).EQ. INDTAB(I)) GO TO 6060                      A3015210
 6030 CONTINUE                                                          A3015220
 6031 INDTAB(NTAB)=INT(IRECRD(5))                                       A3015230
      INDTAB(NTAB+1) = NRECC(1)                                         A3015240
      I=(NTAB+1)/2                                                      A3015250
      INDTBS(  I) = NCFL                                                A3015260
      NTAB=NTAB+2                                                       A3015270
 6040 GO TO (6045,330,6050),ISTFLG                                      A3015280
C                                                                       A3015282
C        NESTED COPY ENCOUNTERED, INCREASE COPY LEVEL MARKER            A3015284
 6045 LVLCPY=LVLCPY+1                                                   A3015286
      GO TO 330                                                         A3015288
C                                                                       A3015290
C     THIS IS THE FIRST INDEX/N COMMAND SET PARAMETERS TO STORE CLFILE  A3015300
C                                                                       A3015310
 6050 IF (ICOPY .NE. 0) GO TO 330                                       A3015315
      ISTFLG=1                                                          A3015320
      LVLCPY=1                                                          A3015325
      GO TO 330                                                         A3015330
C                                                                       A3015340
C     CHECK TO SEE IF A COPY IS IN EFFECT                               A3015350
C                                                                       A3015360
 6060 IF (ICOPY.NE.0) GO TO 6040                                        A3015370
      I=RECORD(5)                                                       A3015380
      CALL APT336(30020,'APT301  ')                                     A3015390
      GO TO 330                                                         A3015400
C                                                                       A3015410
C                                                                       A3015420
C     ERROR - INDEX TABLE FULL                                          A3015430
C                                                                       A3015440
 6070 CALL APT336(30021,'APT301  ')                                     A3015450
      GO TO 330                                                         A3015460
C                                                                       A3015470
C                                                                       A3015480
C     THIS SECTION SETS UP THE PLOT PARAMETERS                          A3015490
C                                                                       A3015500
 7000 IF(JRECRD(8).EQ.2) GOTO300                                        A3015510
      IPLFLG=1                                                          A3015515
      NPTAB=NPTAB+1                                                     A3015520
      IPLTAB(NPTAB)=INT(IRECRD(5))                                      A3015525
      GO TO 300                                                         A3015530
C                                                                       A3015532
C...     PROCESS THE VTLAXS COMMAND                                     A3015534
C                                                                       A3015536
C        CHECK FOR NO PREVIOUS MULTAX COMMAND                           A3015538
 8000 IF (ICOPY.NE.0) GO TO 300                                         A3015539
      IF (MULTAX.EQ.1) GO TO 8002                                       A3015540
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)                              A3015541
      IF (CTEST .EQ. ON) CALL APT336(30006,'APT301  ')                  A3015542
      GO TO 330                                                         A3015544
C                                                                       A3015545
 8002 IF(CLWRT.EQ.0.AND.IVTFLG.EQ.1.AND.CLPRT.EQ.0) GO TO 300           A3015548
      IF(IVTFLG.EQ.K2.OR.IVTFLG.EQ.K4) IVTFLG=IVTFLG+K1                 A3015550
      IF(IVTFLG.EQ.3.OR.IVTFLG.EQ.5) IVCUT=0                            A3015552
      CALL APT311                                                       A3015555
      IF(IVTFLG.NE.6) GO TO 300                                         A3015557
      GO TO 2000                                                        A3015558
 8025 CALL APT311                                                       A3015560
      GO TO 2097                                                        A3015561
 8010 CALL APT336(30012,'APT301  ')                                     A3015562
      GO TO 330                                                         A3015564
 8020 CALL APT336(30011,'APT301  ')                                     A3015566
      GO TO 330                                                         A3015570
C     PROCESS THE TRANS COMMAND                                         A3015580
 8100 GO TO 300                                                         A3015584
C                                                                       A3015586
C...  PROCESS CLPRNT/ON OR OFF RECORDS                                  A3015590
C                                                                       A3015591
C...  CHECK VTLAXS FLAG                                                 A3015592
 8200 IF(IVTFLG.EQ.K2) GO TO 330                                        A3015593
      CALL HOLFRM(RECORD(5),CTEST,1,8,NWD)                              A3015594
      IF (CTEST.EQ.ON) CLPRT=K1                                         A3015595
      IF ((CTEST .EQ. OFF) .AND. (CPFL(4) .EQ. 1))  CLPRT = 0           A3015596
      GO TO 330                                                         A3015597
C                                                                       A3015600
C     PROCESS POST PROCESSOR LIKE COMMANDS                              A3015610
C                                                                       A3015620
 9000 IF (PPFLAG.NE.K1) GO TO 300                                       A3015630
C                                                                       A3015640
C      STACK THE RECORD                                                 A3015650
C                                                                       A3015660
               KNT =NUMWDS+K3                                           A3015670
      J1=J1+1                                                           A3015672
      IF (J1 .GT. 15 .OR. KNT .GT. 30) GO TO 9055                       A3015674
         DO 9050 I = 1,KNT                                              A3015680
      PPSTAK(J1,I) = RECORD(I)                                          A3015690
 9050 CONTINUE                                                          A3015700
      GO TO 350                                                         A3015710
C                                                                       A3015715
 9055 CALL APT336(30035,'APT301  ')                                     A3015720
      GO TO 350                                                         A3015725
C                                                                       A3015730
C      THIS SECTION PROCESSES THE TRACUT INSTRUCTION                    A3015740
C                                                                       A3015750
 9100  IF (ICP3.GE.0)GOTO 4011                                          A3015760
       IF (CLWRT.NE.K1) GO TO 330                                       A3015762
      IF (JRECRD(6)-K2 .EQ. 0) GO TO 9290                               A3015764
C...    CHECK IF VTLAXS IS IN EFFECT                                    A3015766
      IF (IVTFLG .EQ. K4) GO TO 8020                                    A3015770
      ITRAFL=K1                                                         A3015780
C                                                                       A3015790
C      STORE TRACUT MATRIX FROM TAPE AND STORE BY COLUMNS               A3015800
C                                                                       A3015810
      K = K5                                                            A3015820
       DO 9180 I=1,3                                                    A3015830
       DO 9180 J=1,4                                                    A3015840
      K = K + K1                                                        A3015850
 9180  TRAMAT(I,J) = RECORD(K)                                          A3015860
C                                                                       A3015870
 9190  DO  9210 I=1,3                                                   A3015880
      IF (DABS(TRAMAT(I,4))-0.000001D0) 9210,9210,9270                  A3015900
 9210  CONTINUE                                                         A3015920
C                                                                       A3015930
       DO 9240 I=2,3                                                    A3015940
       IF (TRAMAT(1,1)-TRAMAT(I,I)) 9270,9240,9270                      A3015960
 9240  CONTINUE                                                         A3015980
C                                                                       A3015990
             TSCALE= TRAMAT(1,1)                                        A3016000
      GO TO 9300                                                        A3016020
C                                                                       A3016030
 9270        TSCALE= 1.0                                                A3016040
       GO TO 9300                                                       A3016060
C                                                                       A3016070
 9290  ITRAFL =K0                                                       A3016080
             TSCALE= 1.0                                                A3016090
C                                                                       A3016100
 9300  CALL APT305                                                      A3016110
      GO TO 330                                                         A3016120
C                                                                       A3016130
C     PROCESS THE HOLDPP RECORD                                         A3016140
C                                                                       A3016150
 9500      PPFLAG = JRECRD(8)                                           A3016160
      GO TO (9525,9508,9502,9506),PPFLAG                                A3016162
 9502 IF (CLPRT.EQ.0) GO TO 350                                         A3016164
      I=JRECRD(4)                                                       A3016165
      CALL CFORM('0',DARRAY,1,1)                                        A3016166
      CALL ICONV(I,DARRAY,2,8)                                          A3016168
      CALL CFORM('.',DARRAY,10,1)                                       A3016170
      CALL CFORM(HMACR,DARRAY,14,16)                                    A3016173
      CALL CFORM(HBIGIN , DARRAY,31,6)                                  A3016174
      CALL CPRINT (DARRAY)                                              A3016175
      GOTO 350                                                          A3016176
 9506 IF (CLPRT .EQ. 0) GO TO 350                                       A3016177
      CALL CFORM(HMACR,DARRAY,14,16)                                    A3016178
      CALL CFORM(HENDS,DARRAY,31,4)                                     A3016179
      CALL CPRINT (DARRAY)                                              A3016180
      GOTO 350                                                          A3016182
 9508 CONTINUE                                                          A3016184
C                                                                       A3016186
C     UNSTACK THE RECORD                                                A3016190
C                                                                       A3016200
      IF (J1 .EQ. 0) GO TO 350                                          A3016210
      DO 9520 K=1,J1                                                    A3016220
      RECORD(1)=PPSTAK(K,1)                                             A3016230
      RECORD(2)=PPSTAK(K,2)                                             A3016240
      IRECRD(3)=ZERO                                                    A3016250
      DTEMP = KKSTAK(K,3)                                               A3016251
      NUMWDS = ITEMP(2)                                                 A3016260
      DO 9510 I=1,NUMWDS                                                A3016270
      RECORD(I+3)=PPSTAK(K,I+3)                                         A3016280
 9510 CONTINUE                                                          A3016290
      IF(CLWRT.EQ.1.AND.CPFL(6).EQ.1) CALL APT312                       A3016300
C---     CALL TO OUTPUT FEDRAT TO CLFIL3                                A3016304
      IF(CLWRT.EQ.1.AND.CPFL(5).EQ.1) CALL CNVRT3(CPFL(7))              A3016305
      IF (CLPRT.EQ.1) CALL APT302                                       A3016310
 9520 CONTINUE                                                          A3016320
C---     UNLOAD PP WORDS TO CLFILE DURING INDEX AND COPY                A3016324
      IF(ISTFLG.EQ.1) CALL APT314(NTAPE,NRECC(NTAPE1))                  A3016325
 9525 J1=0                                                              A3016330
      GO TO 350                                                         A3016340
C**   PROCESS THE MACHINE POST PROCESSOR RECORD                         A3016350
C                                                                       A3016360
C**   FLAG USED BY LMCT                                                 A3016370
 9600 IMACHN = K1                                                       A3016380
C                                                                       A3016390
C**   CONTROL SYSTEM NAME IN W(5) .  USED BY A400.                      A3016400
C                                                                       A3016410
      KONSYS(1) = JRECRD(9)                                             A3016420
      KONSYS(2) = JRECRD(10)                                            A3016421
      GO TO 300                                                         A3016430
C                                                                       A3016439
 9800 ICUT=0                                                            A3016440
      IF((IVTFLG.EQ.2.OR.IVTFLG.EQ.4).AND.IVCUT.EQ.0)IVCUT=1            A3016441
      GO TO 9000                                                        A3016442
 9810 ICUT=1                                                            A3016443
      GO TO 9000                                                        A3016444
      END                                                               A3016450
**** SOURCE FILE : M0011535.W02   ***
*
C                                                                       A3020010
C......     FORTRAN SUBROUTINE APT302             1/71   R.N.           A3020020
C  PURPOSE     TO WRITE OUT ON THE VERIFICATION LISTING THE DATA        A3020030
C              BEING PLACED ON CLFILE AND TO OUTPUT ERROR MESSAGES      A3020040
C              OR OTHER INFORMATION HELPFUL TO THE PART PROGRAMMER.     A3020050
C  LINKAGE     CALL APT302                                              A3020060
C  ARGUMENTS   NONE - APT302 WRITES ON THE VERIFICATION LISTING         A3020070
C                     THE INFORMATION STORED IN RECORD.                 A3020080
C  SUBSIDIARIES  APT309,APT331,APT332,FCONV,ICONV,CFORM,CPRINT          A3020090
C                                                                       A3020100
        SUBROUTINE  APT302                                              A3020110
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3020120
C                                                                       A3020130
C     CLPRINT PRINTS THE RECORDS RECEIVED FROM EXFILE                   A3020140
C                                                                       A3020150
C     *****   COMMON-EQUIVALENCE BLOCK VARIABLES  *****                 A3020160
C                                                                       A3020170
      COMMON /EDITOR/ EDITOR(1500)                                      A3020180
C                                                                       A3020190
      DIMENSION AREA1(1500),AREA2(1000),AREA3(250)                      A3020200
      EQUIVALENCE (EDITOR(1500),AREA1(1500),AREA2(1000),AREA3(250))     A3020210
C                                                                       A3020220
      DIMENSION RECORD(256),SRECRD(512),JRECRD(512)                     A3020230
      REAL   SRECRD                                                     A3020240
      EQUIVALENCE (AREA1(1),RECORD(1)),(AREA1(1),JRECRD(1)),            A3020250
     C            (AREA1(1),SRECRD(1))                                  A3020260
      EQUIVALENCE (JRECRD(6),NUMWDS)                                    A3020270
      INTEGER BRANCH                                                    A3020280
      EQUIVALENCE (AREA2(39),BRANCH),(AREA2(94),NUMCLD)                 A3020290
      EQUIVALENCE (AREA2(469),MULTAX)                                   A3020300
C                                                                       A3020335
      INCLUDE 'DARRAY.INC'                                              A3020336
C                                                                       A3020340
      CHARACTER*8 RTAPNO,ATAPNO                                         A3020371
      CHARACTER*12 TAPENO,HCIRC                                         A3020372
      CHARACTER*6 CONTR,CUT,HFINI,GODLTA,START,TESTWD,RECTYP,BLANK,PARNTA3020374
      CHARACTER*2 JBLK,JSBK                                             A3020376
      EQUIVALENCE (RTAPNO,TAPENO)                                       A3020377
      LOGICAL GOFLG                                                     A3020401
C                                                                       A3020403
      DATA GOFLG /.TRUE./                                               A3020404
      DATA HCIRC/' = CIRCLE/  '/                                        A3020410
      DATA CONTR/'CONT. '/                                              A3020420
      DATA IXYZ/0/,KCONT/0/                                             A3020430
      DATA CUT/'CUT   '/,BLANK/'      '/,HFINI/'FINI  '/                A3020432
      DATA GODLTA/'GODLTA'/,START/'START '/,JBLK/'  '/,JSBK/'S '/       A3020434
      DATA TAPENO/'0     /     '/,ATAPNO/'0     / '/                    A3020436
      DATA PARNT/'(    )'/                                              A3020438
C                                                                       A3020440
C.    TAPENO SEQUENCE NO.                                               A3020450
C                                                                       A3020460
      RTAPNO=ATAPNO                                                     A3020461
      I = JRECRD(4)                                                     A3020470
      I1=I/10000                                                        A3020472
      IF(I1.NE.0)CALL ICONV(I1,TAPENO,2,5)                              A3020474
      CALL ICONV (I-I1*10000,TAPENO,8,4)                                A3020480
      DARRAY(1:12) = TAPENO                                             A3020512
      CALL HOLFRM(RECORD(1),RECTYP,1,6,NWD)                             A3020514
      CALL HOLFRM(RECORD(5),TESTWD,1,6,NWD)                             A3020516
C                                                                       A3020520
C.    BRANCH                                                            A3020530
C                                                                       A3020540
      IF(BRANCH.GE.22) GO TO 4000                                       A3020550
      IF(BRANCH.EQ.2) GO TO 2000                                        A3020560
      IF(BRANCH.EQ.6) GO TO 1000                                        A3020570
      IF(BRANCH.EQ.3) GO TO 5000                                        A3020580
      IF(BRANCH.EQ.5) GO TO 6000                                        A3020590
      IF(BRANCH.LE.16) GO TO 4000                                       A3020600
      IF(BRANCH.EQ.17) GO TO 7000                                       A3020610
      IF(BRANCH.EQ.19) GO TO 1500                                       A3020620
      IF(BRANCH.EQ.21) GO TO 3000                                       A3020625
      GO TO 4000                                                        A3020630
C                                                                       A3020640
C.    PRINT LIST                                                        A3020650
C                                                                       A3020660
  100 CALL CPRINT(DARRAY)                                               A3020670
  200 RETURN                                                            A3020680
C                                                                       A3020690
C.    FINI                                                              A3020700
C                                                                       A3020710
 1000 DARRAY(14:19) = HFINI                                             A3020720
      GO TO 100                                                         A3020730
C                                                                       A3020740
C.    ARLEM                                                             A3020750
C                                                                       A3020760
 1500 DARRAY(14:19) = RECTYP                                            A3020770
      GO TO 100                                                         A3020790
C                                                                       A3020800
C                                                                       A3020810
C.    CLDATA RECORDS                                                    A3020820
C                                                                       A3020830
 2000 IF(JRECRD(8).GE.2) GO TO 2500                                     A3020840
      IF (TESTWD.NE.GODLTA) GO TO 2020                                  A3020844
      CALL CFORM('   $$',DARRAY,7,5)                                    A3020845
      GOFLG=.FALSE.                                                     A3020846
 2020 DARRAY(14:19) = TESTWD                                            A3020850
      IF(JRECRD(6) .EQ. 2) GO TO 100                                    A3020870
      CALL CFORM('/',DARRAY,20,1)                                       A3020880
      CALL HOLFRM(RECORD(7),DARRAY,22,8,NWD)                            A3020905
      CALL CFORM (PARNT,DARRAY,28,6)                                    A3020910
      CALL ICONV(JRECRD(16),DARRAY,29,4)                                A3020920
      IF(JRECRD(6).LE.6) GO TO 100                                      A3020930
      DARRAY(34:45) = HCIRC                                             A3020965
      K = 44                                                            A3020970
      DO 2010 I=10,16                                                   A3020980
      CALL FCONV (RECORD(I),DARRAY,K,11,4)                              A3020990
 2010 K=K+11                                                            A3021000
      GO TO 100                                                         A3021010
C                                                                       A3021020
 2500 IF(IXYZ.EQ.0) GO TO 2600                                          A3021030
      CALL CFORM(' ',DARRAY,1,1)                                        A3021040
 2510 IF(KCONT.EQ.0) GO TO 2550                                         A3021050
      DARRAY(14:19) = CONTR                                             A3021075
      CALL CPRINT (DARRAY)                                              A3021080
 2550 IF(NUMCLD.GT.0.AND.GOFLG) GO TO 2800                              A3021090
      GOFLG=.TRUE.                                                      A3021094
      IF(MULTAX.NE.1) GO TO 2560                                        A3021095
      NPLUS = NUMWDS                                                    A3021100
      NADD = 5                                                          A3021110
      INCR = 7                                                          A3021120
      GO TO 2570                                                        A3021130
 2560 NPLUS = NUMWDS+3                                                  A3021140
      NADD = 2                                                          A3021150
      INCR = 4                                                          A3021160
 2570 DO 2580 I=5,NPLUS,INCR                                            A3021170
      K=I+NADD                                                          A3021180
      L=15                                                              A3021190
      DO 2574 J=I,K                                                     A3021200
      IF(DABS(RECORD(J)).LT.100.0) GO TO 2572                           A3021210
      CALL FCONV(RECORD(J),DARRAY,L,17,7)                               A3021220
      GO TO 2573                                                        A3021230
 2572 N=L+6                                                             A3021240
      CALL FCONV(RECORD(J),DARRAY,N,11,7)                               A3021250
 2573 L=L+17                                                            A3021260
 2574 CONTINUE                                                          A3021270
      CALL CPRINT(DARRAY)                                               A3021280
 2580 CONTINUE                                                          A3021290
      L=6                                                               A3021295
 2590 KCONT = 1                                                         A3021300
      IF(JRECRD(2*NPLUS-L).EQ.3) KCONT = 0                              A3021310
      GO TO 200                                                         A3021320
C                                                                       A3021330
C     FIRST TIME                                                        A3021340
 2600 CALL CFORM('X',DARRAY,24,1)                                       A3021350
      CALL CFORM('Y',DARRAY,41,1)                                       A3021360
      CALL CFORM('Z',DARRAY,58,1)                                       A3021370
      IF(MULTAX.NE.1) GO TO 2650                                        A3021380
      CALL CFORM('I',DARRAY,75,1)                                       A3021390
      CALL CFORM('J',DARRAY,92,1)                                       A3021400
      CALL CFORM('K',DARRAY,109,1)                                      A3021410
 2650 CALL CPRINT (DARRAY)                                              A3021420
      IXYZ = 1                                                          A3021430
      GO TO 2510                                                        A3021440
C                                                                       A3021441
C     CLDAT EXTENDED OUTPUT                                             A3021442
 2800 NPLUS=NUMWDS                                                      A3021443
      INCR=4*NUMCLD+1                                                   A3021444
      DO 2840 I=3,NPLUS,INCR                                            A3021445
      M=6                                                               A3021446
      DO 2830 J=2,INCR,4                                                A3021447
      M=M+3                                                             A3021448
      CALL HOLFRM(RECORD(I+J),DARRAY,M,8,NWD)                           A3021449
      M=M+5                                                             A3021450
      DO 2820 K=1,3                                                     A3021451
      L=I+J+K                                                           A3021452
      IF(DABS(RECORD(L)).LT.100.0) GO TO 2810                           A3021453
      CALL FCONV(RECORD(L),DARRAY,M,16,6)                               A3021454
      GO TO 2820                                                        A3021455
 2810 N=M+5                                                             A3021456
      CALL FCONV(RECORD(L),DARRAY,N,11,6)                               A3021457
 2820 M=M+16                                                            A3021458
      IF(M.LT.100)GOTO 2830                                             A3021459
      CALL CPRINT(DARRAY)                                               A3021460
      M=6                                                               A3021461
 2830 CONTINUE                                                          A3021462
      IF(M.NE.6)CALL CPRINT(DARRAY)                                     A3021463
 2840 CONTINUE                                                          A3021464
      L=2*(NPLUS+4-INCR)                                                A3021465
      GO TO 2590                                                        A3021466
C                                                                       A3021467
C     CLDAT/START,INDEX  ; CLDAT/NOMORE,INDEX                           A3021468
 3000 NUMCLD=0                                                          A3021469
C.    IS EXTENDED CLDATA FORMAT GIVEN ?                                 A3021470
      IF (TESTWD.EQ.START )NUMCLD=(NUMWDS-4)/2                          A3021471
      IF(TESTWD(5:6).EQ.JBLK.OR.TESTWD(5:6).EQ.JSBK)NUMCLD=NUMWDS/2     A3021472
C.    POST PROCESSOR COMMAND                                            A3021473
 4000 DARRAY(14:19) = RECTYP                                            A3021474
      IF(JRECRD(6).EQ.2.AND.TESTWD.EQ.BLANK) GO TO 100                  A3021490
      CALL CFORM('/',DARRAY,20,1)                                       A3021500
      J=4                                                               A3021510
      LSAVE=0                                                           A3021520
 4010 K=21                                                              A3021530
 4020 L = JRECRD(2*J)                                                   A3021540
      GO TO (4100,4200,4300,4400,4500),L                                A3021550
C                                                                       A3021560
C.    FLOATING POINT DATA ITEM                                          A3021570
C                                                                       A3021580
 4100 IF(K.GT.109) GO TO 4600                                           A3021590
      M=4                                                               A3021596
      IF (RECORD(J+1).GT.9999.9) M=1                                    A3021598
      CALL FCONV (RECORD(J+1),DARRAY,K,10,M)                            A3021600
      K=K+10                                                            A3021610
      J=J+2                                                             A3021620
      GO TO 4700                                                        A3021630
C                                                                       A3021640
C.    ALPHA NUMERIC DATA ITEM                                           A3021650
 4200 IF(K.GT.111) GO TO 4600                                           A3021660
      CALL HOLFRM (RECORD(J+1),DARRAY,K+1,6,NWD)                        A3021670
      K=K+8                                                             A3021680
      J=J+2                                                             A3021690
      GO TO 4700                                                        A3021700
C                                                                       A3021710
C.    ALPHA NUMERIC DATA ITEM STRING                                    A3021720
C                                                                       A3021730
 4300 L=(JRECRD(2*J+2)-1)*8                                             A3021740
      IF(JRECRD(2*J+2).LE.1) GO TO 4303                                 A3021745
      IF(K+L.GT.119) GO TO 4600                                         A3021750
      CALL HOLFRM (RECORD(J+3),DARRAY,K+1,L,NWD)                        A3021760
 4303 K=K+L+2                                                           A3021770
      J=J+JRECRD(2*J+2)+2                                               A3021780
      IF(BRANCH.EQ.8.OR.BRANCH.EQ.12.OR.BRANCH.EQ.14.OR.                A3021790
     C RECTYP.EQ.CUT)  DARRAY(20:20)=' '                                A3021800
      GO TO 4700                                                        A3021810
C                                                                       A3021820
C.    GEOMETRIC DATA ITEM STRING                                        A3021830
C                                                                       A3021840
 4400 L = JRECRD(2*J+2)                                                 A3021850
 4404 IF(K+11*L.GT.119) GO TO 4650                                      A3021860
 4405 J=J+2                                                             A3021870
      DO 4410 N=1,L                                                     A3021880
      CALL FCONV (RECORD(J),DARRAY,K,10,4)                              A3021890
      K=K+10                                                            A3021900
      J=J+1                                                             A3021910
      IF(N.EQ.L) GO TO 4700                                             A3021920
      CALL CFORM (',',DARRAY,K,1)                                       A3021930
 4410 K=K+1                                                             A3021940
      GO TO 4700                                                        A3021950
C                                                                       A3021960
C.    ERROR                                                             A3021970
C                                                                       A3021980
 4500 CALL APT336(30027,'APT302  ')                                     A3021990
      GO TO 100                                                         A3022000
C                                                                       A3022010
 4600 CALL CPRINT (DARRAY)                                              A3022020
      GO TO 4010                                                        A3022030
 4650 IF(K.EQ.21) GO TO 4660                                            A3022040
      CALL CPRINT (DARRAY)                                              A3022050
      GO TO 4010                                                        A3022060
 4660 LSAVE = L - 9                                                     A3022070
      L = 9                                                             A3022080
      GO TO 4405                                                        A3022090
 4700 IF(J-3.GE.NUMWDS) GO TO 100                                       A3022100
      CALL CFORM (',',DARRAY,K,1)                                       A3022110
      K=K+1                                                             A3022120
      IF(LSAVE.GT.0) GO TO 4720                                         A3022130
      GO TO 4020                                                        A3022140
 4720 CALL CPRINT(DARRAY)                                               A3022150
      K=21                                                              A3022160
      L=LSAVE                                                           A3022170
      LSAVE=0                                                           A3022180
      J=J-2                                                             A3022190
      GO TO 4404                                                        A3022200
C.    AERR                                                              A3022210
C                                                                       A3022220
 5000 CALL APT331                                                       A3022230
      GO TO 200                                                         A3022240
C                                                                       A3022250
C.    DYNDMP                                                            A3022260
C                                                                       A3022270
 6000 CALL APT332                                                       A3022280
      GO TO 200                                                         A3022290
C                                                                       A3022300
C.    GERR                                                              A3022310
C                                                                       A3022320
 7000 CALL APT309                                                       A3022330
      GO TO 200                                                         A3022340
      END                                                               A3022350
**** SOURCE FILE : M0000420.V01   ***
*
C.....FORTRAN SUBROUTINE              APT303                12/67       A3030000
C PURPOSE      TO TRANSFORM THE CANONICAL FORM OF A POINT BY            A3030010
C              A GIVEN MATRIX.                                          A3030020
C LINKAGE      CALL APT303 (RESULT, MATRX, PN)                          A3030030
C ARGUMENTS    RESULT    ARRAY TO CONTAIN THE CANONICAL FORM OF         A3030040
C                        THE RESULTANT POINT                            A3030050
C              MATRX     ARRAY CONTAINING THE INPUT TRANSFORMATION      A3030060
C                        MATRIX                                         A3030070
C              PN        ARRAY CONTAINING THE CANONICAL FORM OF         A3030080
C                        THE INPUT POINT                                A3030090
C SUBSIDIARIES NONE                                                     A3030100
      SUBROUTINE APT303 (RESULT,MATRX,PN)                               A3030110
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            A3030120
C     THIS ROUTINE TRANSFORMS THE CANONICAL FORM OF A POINT             A3030130
C     BY A GIVEN MATRIX                                                 A3030140
      DOUBLE PRECISION MATRX                                            A3030150
      DIMENSION RESULT(3), PN(3), P(3), MATRX(3,4)                      A3030160
      DO 20 I=1,3                                                       A3030170
   20 P(I) =PN(I)                                                       A3030180
      DO 70 I=1,3                                                       A3030190
      RESULT(I)=MATRX(I,4)                                              A3030200
      DO 70 J=1,3                                                       A3030210
      RESULT(I)=RESULT(I)+ P(J)* MATRX(I,J)                             A3030220
   70 CONTINUE                                                          A3030230
      RETURN                                                            A3030240
       END                                                              A3030250
**** SOURCE FILE : M0000421.V01   ***
*
C.....FORTRAN SUBROUTINE              APT304                12/67       A3040000
C PURPOSE      TO TRANSFORM A GIVEN VECTOR BY A GIVEN MATRIX.           A3040010
C LINKAGE      CALL APT304 (RESULT, MATRX, VCTR)                        A3040020
C ARGUMENTS    RESULT    ARRAY TO CONTAIN THE CANONICAL FROM OF         A3040030
C                        THE TRANSFORMED VECTOR                         A3040040
C              MATRX     ARRAY CONTAINING THE GIVEN TRANSFORMA-         A3040050
C                        TION MATRIX (3 X 4)                            A3040060
C              VCTR      ARRAY CONTAINING THE CANONICAL FORM OF         A3040070
C                        THE VECTOR TO BE TRANSFORMED                   A3040080
(uafhcx) 15% 