cat afile02.4
      TM(I)=TE(I)+W1*TA(I)                                              00021900
      TP(I,IS)=TM(I)                                                    00022000
 1108 CONTINUE                                                          00022100
C                                                                       00022110
      BLONGD=2.0D0*W1                                                   00022120
      IF (BLONGD.LT.15.0D0) BLONGD=1.D5                                 00022130
C                                                                       00022140
C             /-Z ADJUSTS SURFACE NORMAL TO POINT TO CUTTER SIDE        00022200
C             /-RC IS THE RADIUS OF CURVATURE AT THE SURFACE POINT.     00022300
C             /-RC1 INITIALLY 4500 INCHES(ENGLISH UNITS)                00022400
      RC(IS)=RC1                                                        00022500
      Z(IS)=ONE                                                         00022600
C                                                                       00022700
C             /-IAFL = 0 IF PS PLANE PERPTO TA,OR DS,CS PLANE LL TA.    00022800
C             /-IAFL = 1 IF SURF LINE ELEMENT LL TA                     00022900
C             /-IAFL = -1 OTHERWISE                                     00023000
C             /-FOLLOW SPECIAL ANALYTIC ROUTE FOR IAFL = 0              00023100
      IF(IAFL(IS).EQ.0) GO TO 202                                       00023200
      IF(IAFL(IS).GT.0) GO TO 1109                                      00023300
C             /-SINCE IAFL IS LT 0, SET TOOL SEG TO FIRST SEG.          00023400
      ITSEG(IS)=IBEGIN                                                  00023500
      GO TO  251                                                        00023600
 1109 CONTINUE                                                          00023700
C             /-IAFL(IS) IS GT 0, SO SET TP TO TOP OF TOOL              00023800
C             /-TOOLHT ARE TOOL TOP COORDS(HT*TA)- RELATED TO SURFACE   00023900
      DO 1111 I=1,3                                                     00024000
 1111 TP(I,IS)=TE(I)+TOOLHT(I,IS)                                       00024100
C                                                                       00024200
  251 CONTINUE                                                          00024300
C             /-INITIAL ENTRY ROUTE,NORMAL CASE. PROBLEM IS TO SET      00024400
C             /-SIGN OF SN(IS) AND HENCE Z(IS) CORRECTLY.               00024500
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.       00024600
C             /-USE TP,TN TO FIND SP,SN,S SO THAT TP+S*TN=SP            00024700
      MODESS=11                                                         00024800
      CALL AJUNDD                                                       00024900
      MODESS=0                                                          00025000
C                                                                       00025100
  252 CONTINUE                                                          00025190
      IAMDCT=1                                                          00025200
C***       BRANCH TO 2999 ON FATAL ERROR                                00025300
       IF(IAERR.NE.0) GO TO 2999                                        00025400
C             /-JTN FLAG IS 1 FOR TN CONTROL OF SURFACE(LIKE CS)        00025500
C             /-JTN FLAG IS SET TO 0 FOR SN CONTROL(LIKE PS,DS)         00025600
      IF(JTN(IS).EQ.0) GO TO 1110                                       00025700
C             /-TN CONTROL CASE, SET TN TO CURRENT SURF NORMAL , GO ON  00025800
      DO 1115 I=1,3                                                     00025900
      TN(I,IS)=SN(I,IS)                                                 00025910
 1115 CONTINUE                                                          00026000
      GO TO 2009                                                        00026100
C                                                                       00026200
 1110 CONTINUE                                                          00026300
C             /-SN CONTROL, SET Z SO Z*SN POINTS TO CUTTER SIDE OF SURF 00026400
      CALL DOTF(Z(IS),TN(1,IS),SN(1,IS))                                00026500
      IF(DABS(Z(IS)).GT.0.000001) GO TO 1112                            00026600
C             /-INNER PRODUCT SMALL, TN AND SN PERPENDICULAR. TRY NEW TN00026700
      DO 1113 I=1,3                                                     00026800
      TN(I,IS)=SN(I,IS)+TN(I,IS)                                        00026900
 1113 CONTINUE                                                          00027000
      CALL VNORM(TN(1,IS),TN(1,IS))                                     00027100
C             /-RESORE Z                                                00027200
      Z(IS)=ONE                                                         00027300
C             /-CALL SURFACE DISTANCE CALC AGAIN                        00027400
      GO TO  251                                                        00027500
C                                                                       00027600
 1112 CONTINUE                                                          00027700
C             /-SET Z SO THAT Z*SN AND TP-SP ARE IN SAME DIRECTION      00027800
      IF(S(IS).NE.ZERO) Z(IS)=S(IS)*Z(IS)                               00027900
      Z(IS)=-DSIGN(ONE,PAST(IS)*Z(IS))                                  00028000
C             /-PAST IS -1 IF ISFTYP=2 (PAST CASE ), 1 OTHERWISE        00028100
C             /-ADJUST SN BY Z AND SET TN TO -SN                        00028200
      DO 1114 I=1,3                                                     00028300
        SN(I,IS)=Z(IS)*SN(I,IS)                                         00028400
        TN(I,IS)=-SN(I,IS)                                              00028410
 1114   CONTINUE                                                        00028500
      GO TO 2009                                                        00028600
C                                                                       00028700
C -------------------------------------------------------               00028800
C             /-NORMAL ENTRY ROUTE. SET FIRST TRIAL TP USING VT.        00028900
C             /-SWITCH TO SPECIAL ANALYTIC IAFL = 0 ROUTES IF NEEDED    00029000
C             /-ALSO USE SPECIAL ROUTE IF CYLINDER LL TA.               00029100
 2012 CONTINUE                                                          00029200
C             /-PLACE TOOL POINT ON THICK ENVELOPE IN DIRECTION OF TN   00029300
      DO 1122 I=1,3                                                     00029400
      TP(I,IS)=VT(I,IS)+TH(IS)*TN(I,IS)+TE(I)                           00029500
 1122 CONTINUE                                                          00029600
C             /-IAFL -1, GENERAL SURF PATH                              00029700
      IF(IAFL(IS).LT.0) GO TO 2009                                      00029800
C             /-IAFL =0, PLANE SURF PERPEN, OR PLANE DRIVE SURF PARLLEL 00029900
      IF(IAFL(IS).EQ.0) GO TO 212                                       00030000
C             /-IAFL +1, SURF ELEMENT PARALLEL TO TA                    00030100
C             /-IF SURFACE TYPE LT 5,(IE PLANE,LINE,CYLIN) GO TO 4000   00030200
      IF(ISFIDN(IS).GE.5) GO TO 2009                                    00030300
C                                                                       00030400
C-------------------------------------------------------                00030500
C             /-SPECIAL U1COMP ROUTE FOR TA LL CYLINDER AXIS.           00030600
C             /-USEFUL IF CUTTER RADIUS NEARLY CYLINDER RADIUS          00030700
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.       00030800
C                                                                       00030900
      MODESS=12                                                         00031000
      CALL AJUNDD                                                       00031100
      MODESS=0                                                          00031200
C                                                                       00031300
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))                        00031400
      DO 1142 I=1,3                                                     00031500
      TEMP(I+3)=CC(I,IS)                                                00031600
 1142 CC(I,IS)=CANON(ICBOT+I)                                           00031700
      CALL U1COMP                                                       00031800
      DO 1143 I=1,3                                                     00031900
 1143 CC(I,IS)=TEMP(I+3)                                                00032000
      GO TO 2038                                                        00032100
C                                                                       00032200
C-------------------------* CALL SURFACE FOR DIRECTED DISTANCE *--------00032300
C             /-OTHERWISE, GO THE GENERAL SURFACE PATH                  00032400
C             /-2ND PHASE OF INITIAL ENTRY TO AMIND(JENT=1)             00032500
C             /-WITH CURRENT TP,TN CALL SURFACE ROUTINE FOR SP,SPL,SN   00032600
C             /-THEN USE CCURV TO FIND RC,CC.  USE CENTER OF CURVATURE C00032700
C             /-TO FIND THE CORRECT SIDE OF THE CUTTER.                 00032800
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.       00032900
 2009 CONTINUE                                                          00033000
      IF(MSSCHK.EQ.1) GO TO 2038                                        00033100
      MODESS=13                                                         00033200
      CALL AJUNDD                                                       00033300
      MODESS=0                                                          00033400
C                                                                       00033500
C***        TERMINATE FOR FATAL ERROR                                   00033600
      IF(IAERR.NE.0) GO TO 2999                                         00033700
C             /-FIND ISIGCR, RC AND CC.  CENTER OF CURV= SP-RC*SN.      00033800
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))                        00033900
C             /-ISIGCR -1 FOR PLANE, 0 NORMAL CASE, 1 IF PREV RC USED   00034000
      IF(ISIGCR(IS).GE.0) GO TO 1116                                    00034100
C             /-SPECIAL CALC OF CC IN PLANE CASE                        00034200
      DO 1117 I=1,3                                                     00034300
        CC(I,IS)=TP(I,IS)-RC(IS)*SN(I,IS)                               00034310
 1117 CONTINUE                                                          00034400
 1116 CONTINUE                                                          00034500
C             /-IF TOOL IS ON THIS SURF, SKIP U1(TOOL SIDE) CALCULATION 00034600
      IF(ITLON(IS).EQ.0) GO TO 338                                      00034700
C             /-DETERMINE THE SIDE OF THE CUTTER TO CONTACT SURFACE     00034800
      CALL U1COMP                                                       00034900
C                                                                       00035000
      IF(IAERR.NE.0) GO TO 2999                                         00035100
      IF(JENT(IS).LE.0) GO TO 1118                                      00035200
C             /-FURTHER ADJUSTMENT NEEDED FOR FIRST AMIND ENTRY         00035300
      IF(JTN(IS).NE.0) GO TO 1118                                       00035400
C             /-SURFACE NORMAL CONTROL, JTN=0                           00035500
      IF(RC(IS).GE.ZERO) GO TO 1118                                     00035600
C             /-RC NEGATIVE  ADJUST U1 IF CC-TE.U1 IS POSITIVE          00035700
      DO 1119 I=1,3                                                     00035800
 1119 TEMP(I)=CC(I,IS)-TE(I)                                            00035900
      CALL DOTF(TEM,U1(1,IS),TEMP)                                      00036000
      IF(TEM(1).LE.ZERO) GO TO 1118                                     00036100
C             /-SET U1 TO OTHER SIDE OF CUTTER                          00036200
      DO 1120 I=1,3                                                     00036300
      U1(I,IS)=-U1(I,IS)                                                00036310
 1120 CONTINUE                                                          00036400
 1118 CONTINUE                                                          00036500
      DO 1121 I=1,3                                                     00036600
 1121 OLDU1(I)=U1(I,IS)                                                 00036700
C                                                                       00036800
C -------------------------------------------------------               00036900
  338 CONTINUE                                                          00037000
      IF(KDYNFL.NE.0) CALL APT238(4)                                    00037100
C              /-DYNDMP(104) --------.                                  00037200
C             /-***** START ITERATIVE LOOP. CALL TLNORM FOR TP,TN **    00037300
C             /-***** CALL AJUNDD FOR SP,SN,S. COMPUTE FLIPCK=TN.SN     00037400
 2038 CONTINUE                                                          00037500
C             /-MAP IS A RESTART FLAG, =0 REVERSE U1 AND TRY AGAIN      00037600
C             /-MAP=1 MEANS RESTART EFFECTIVE, ERROR IS FATAL NOW.      00037700
      MAP=0                                                             00037800
C                                                                       00037900
C             /-TLNORM CALL GETS LINEUP FROM SURF TO TOOL IN U1 DIREC.  00038000
 2712 CONTINUE                                                          00038100
C                                                                       00038102
C.... VW MODIFICATION FOR SITUATION WHEN DISTANCE BETWEEN TOOL          00038104
C     AND SURFACE IS LARGE - ONLY APPLIES TO DS AND PS                  00038106
C                                                                       00038108
      IF (IS.LT.ICS) THEN                                               00038110
        IF (JENT(IS).NE.0) THEN                                         00038120
          IF ((UVDIST.LT.0.4D0).OR.(DIST.LT.BLONGD)) THEN               00038130
            ISTART=0                                                    00038140
          ELSE                                                          00038150
            ISTART=1                                                    00038152
            DO 27121 I=1,3                                              00038154
              TN(I,IS)=SPBOND(I)-TP(I,IS)                               00038156
              SP(I,IS)=SPBOND(I)                                        00038158
27121       CONTINUE                                                    00038160
            CALL VNORM(TN(1,IS),TN(1,IS))                               00038162
            DO 27123 I=1,3                                              00038164
              SN(I,IS)=-TN(I,IS)                                        00038166
27123       CONTINUE                                                    00038168
            IF (S(IS).GT.BLONGD) S(IS)=BLONGD                           00038170
            GOTO 711                                                    00038172
          ENDIF                                                         00038174
        ENDIF                                                           00038176
      ENDIF                                                             00038180
C             /-GENERATE TP ON TOOL SURFACE CLOSE TO CC.                00038200
      CALL TLNORM(U1(1,IS))                                             00038300
C-------------------------* TLNORM CALLS SURF FOR DIRECTED DIST *---    00038400
C             /-PLACE TP OUT ON THICK ENVELOPE OFF TOOL SURF            00038500
      DO 1163 I=1,3                                                     00038600
        TP(I,IS)=TP(I,IS)+TH(IS)*TN(I,IS)                               00038610
 1163 CONTINUE                                                          00038700
C***        TERMINATE ON FATAL ERROR                                    00038800
      IF(IAERR.NE.0) GO TO 2999                                         00038900
      IF(KDYNFL.NE.0) CALL APT238(5)                                    00039000
C              /-DYNDMP(105) --------.                                  00039100
C                                                                       00039200
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.       00039300
      MODESS=14                                                         00039400
      IF(MSSCHK.EQ.0) CALL AJUNDD                                       00039500
      MODESS=0                                                          00039600
C                                                                       00039700
C***        TERMINATE ON FATAL ERROR                                    00039800
      IF(IAERR.NE.0) GO TO 2999                                         00039900
      IF (ISTART.EQ.1) GOTO 711                                         00039910
C             /-CHECK LINEUP BETWEEN TN AND SN.                         00040000
      CALL DOTF(FLIPCK,TN(1,IS),SN(1,IS))                               00040100
C             /-SPECIAL ROUTE. IF FLIPCK WRONG SIGN AFTER 10            00040200
C             /-ITERATIONS,REVERSE SIGN OF U1                           00040300
      IF(IAMDCT.LE.10) GO TO 1123                                       00040400
      TEM(7)=JTN(IS)-0.5                                                00040500
      IF(TEM(7)*FLIPCK.LT.ZERO.AND.MAP.EQ.0) GO TO 710                  00040600
 1123 IF(KDYNFL.NE.0) CALL APT238(6)                                    00040700
C              /-DYNDMP(106) --------.                                  00040800
C             /-FLIPCK TEST. IF TN.SN WELL ALIGNED EXIT FROM LOOP       00040900
C             /-FLIPCK SHOULD BE VERY NEAR 1 FOR CONVERGENCE            00041000
      IF(DABS(FLIPCK).GT.ZLIT1) GO TO 2041                              00041100
C                                                                       00041105
C --- WEAKER CONVERGENCE-TEST                                           00041110
C                                                                       00041115
      IF(DABS(FLIPCK).LE.ZLIT2.OR.DABS(FLIPCK).LE.FLIPAB) GO TO 29      00041120
      IF ((MDIC.LE.0).AND.(((JTN(IS)-.5)*FLIPCK).LT.ZERO)) GO TO 29     00041121
      IF (IPL(IS).LE.0) THEN                                            00041122
        TEMP(1)=TAU(IS)-EPS8(IS)                                        00041123
        IF (RC(IS).GT.ZERO.AND.JTN(IS).NE.0) TEMP(1)=EPS8(IS)           00041124
        IF (RC(IS).LE.ZERO.AND.JTN(IS).EQ.0) TEMP(1)=EPS8(IS)           00041125
        SMOD=S(IS)-TAU2(IS)-TEMP(1)                                     00041126
      ENDIF                                                             00041127
      IF ((FLIPAB.GT.ZLIT2).AND.(ABS(SMOD).GT.ABS(SMODS))) GO TO 29     00041128
C                                                                       00041129
C --- STORE DATA, IF WEAKER CONVERGENCE-TEST IS OK                      00041130
C                                                                       00041135
      FLIPMX = FLIPCK                                                   00041140
      FLIPAB = DABS(FLIPCK)                                             00041145
      RCSAV = RC(IS)                                                    00041150
      SSAV = S(IS)                                                      00041155
      SMODS=SMOD                                                        00041156
      ITSAV = ITSEG(IS)                                                 00041160
      DO 2900 I=1,3                                                     00041165
      TPSAV(I) = TP(I,IS)                                               00041170
      TNSAV(I) = TN(I,IS)                                               00041175
      SPSAV(I) = SP(I,IS)                                               00041180
      SNSAV(I) = SN(I,IS)                                               00041185
      U1SAV(I) = U1(I,IS)                                               00041190
 2900 CONTINUE                                                          00041195
C             /-INCREMENT AMIND COUNT AND TRY AGAIN TO IMPROVE LINEUP   00041200
C                                                                       00041300
   29 CONTINUE                                                          00041400
      IAMDCT=IAMDCT+1                                                   00041500
      IF(IAMDCT.LT.25) GO TO 32                                         00041600
      IF(IAMDCT.GT.25) GO TO 1124                                       00041700
C             /-IAMDCT IS 25, ONE LAST TRY WITH WEAKER CONVERGENCE TEST 00041800
      IF(FLIPAB.EQ.ZERO) GO TO 1124                                     00041900
C                                                                       00041905
      IF (FLIPAB.GT.ZLIT5) THEN                                         00041908
        CONTINUE                                                        00041909
      ELSE IF (FLIPAB.GT.ZLIT2) THEN                                    00041910
C... PRINT WARNING                                                      00041911
        WRITE(MSG,7100) FLIPAB                                          00041912
 7100 FORMAT('*** WARNING *** FLIPAB = ',D12.5,                         00041913
     +       ' AT 3RD (WEAKER) CONVERGENCE TEST IN AMIND')              00041914
        CALL OUTMSG(MSG)                                                00041915
      ELSE                                                              00041916
        GOTO 1124                                                       00041917
      ENDIF                                                             00041918
C                                                                       00041919
C --- RESTORE DATA OF WEAKER CONVERGENCE-TEST                           00041920
C                                                                       00041925
      RC(IS) = RCSAV                                                    00041930
      S(IS) = SSAV                                                      00041935
      ITSEG(IS) = ITSAV                                                 00041940
      DO 2910 I=1,3                                                     00041945
      TP(I,IS) = TPSAV(I)                                               00041950
      TN(I,IS) = TNSAV(I)                                               00041955
      SP(I,IS) = SPSAV(I)                                               00041960
      SN(I,IS) = SNSAV(I)                                               00041965
      U1(I,IS) = U1SAV(I)                                               00041970
 2910 CONTINUE                                                          00041975
      GO TO 2041                                                        00041980
 1124 CONTINUE                                                          00042000
C             /-JMINR IS SET TO 1 IF NO AERR CALL SHOULD BE MADE, 0 OTHE00042100
C***        AMIND ITERATIONS FAILED TO CONVERGE AFTER ALL TRIES.        00042200
      IF(JMINR.NE.1) CALL AERR(26002,'AMIND   ')                        00042300
C             /-JMIN SET TO 1 FOR AMIND FAILURE, 0 OTHERWISE            00042400
      JMIN=1                                                            00042500
      GO TO 2999                                                        00042600
C -------------------------------------------------------               00042700
C             /-FLIPCK TEST FAILS. CALL CCURV, U1COMP, AND NEW          00042800
C             /-ITERATION. FUDGE ROUTE IF TA LL SURF LINE ELEMENT       00042900
C             /-AND IAFL NOT EQUAL TO 1                                 00043000
   32 CONTINUE                                                          00043100
      IF(IAMDCT.LT.10) GO TO 1126                                       00043200
C             /-RC1 USED FOR PROPER UNITS/ IMPLEMENTATION               00043300
      IF(DABS(RC(IS)).NE.RC1/100.D0) GO TO 1126                         00043400
      CALL DOTF(W1,TA,TN(1,IS))                                         00043500
      CALL DOTF(TEM(7),TA,TNL(1,IS))                                    00043600
      IF(DSIGN(ONE,W1).NE.DSIGN(ONE,TEM(7))) GO TO 1126                 00043700
      TEM(7)=DSIGN((100000.D0*RC1/4500.D0),RC(IS))                      00043800
      DO 1127 I=1,3                                                     00043900
        CC(I,IS)=SP(I,IS)-TEM(7)*SN(I,IS)                               00043910
 1127 CONTINUE                                                          00044000
C             /-RETURN TO TLNORM WITH NEW CC AIMING POINT.              00044100
      GO TO 2038                                                        00044200
C                                                                       00044300
 1126 CONTINUE                                                          00044400
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))                        00044500
      IF(ITLON(IS).EQ.0) GO TO 2038                                     00044600
      CALL U1COMP                                                       00044700
C***        TERMINATE ON FATAL ERROR                                    00044800
      IF(IAERR.NE.0) GO TO 2999                                         00044900
C             /-JU1 LOGIC. USE IF U1.OLDU1 .LT. ZERO                    00045000
C             /-JU1 SET TO 1 MEANS U1 SHOULD BE CHKED WITH OLDU1        00045100
      IF(JU1(IS).NE.0) GO TO 2038                                       00045200
      CALL DOTF(TEM,OLDU1,U1(1,IS))                                     00045300
      IF(TEM(1).GE.ZERO) GO TO 2038                                     00045400
C             /-U1 AND OLDU1 CHANGED CUTTER SIDES                       00045500
      CALL DOTF(TEM,SN(1,IS),SNL(1,IS))                                 00045600
      IF(TEM(1).GE.Z9EM1) GO TO 2038                                    00045700
      IF (TEM(1).EQ.ZERO) GOTO 2038                                     00045750
C             /-SURFACE NORMALS CHANGED SIGNIFICANTLY                   00045800
      IF (ICHEKF.EQ.1) GOTO 2038                                        00045850
      DO 1128 I=1,3                                                     00045900
      OLDU1(I)=-U1(I,IS)                                                00046000
      U1(I,IS)=-U1(I,IS)                                                00046100
      TN(I,IS)=-TN(I,IS)                                                00046200
      TP(I,IS)=TP(I,IS)+Z2*TH(IS)*TN(I,IS)                              00046300
 1128 CONTINUE                                                          00046400
C             /-IOP SET TO 1 TO FIND SMALLEST POSITIVE DIRECTED DISTANCE00046500
      IOP(IS)=1                                                         00046600
C             /-BRANCH TO SURFACE DISTANCE CALCULATION FROM HERE.       00046700
      MODESS=15                                                         00046800
      IF(MSSCHK.EQ.0) CALL AJUNDD                                       00046900
      MODESS=0                                                          00047000
C                                                                       00047100
C             /-RESET IOP TO FIND SMALLEST ABSOLUTE DISTANCE            00047200
      IOP(IS)=0                                                         00047300
      DO 1129 I=IS,ISLIM                                                00047400
      TN(I,IS)=-TN(I,IS)                                                00047500
 1129 CONTINUE                                                          00047600
      S(IS)=-S(IS)                                                      00047700
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))                        00047800
      GO TO 2038                                                        00047900
C                                                                       00048000
C             /-IF RADAR USED,DO ANOTHER ITERATION (TE MAY BE OUT)      00048100
 2041 CONTINUE                                                          00048200
C             /-MDIC, COUNT OF NUM OF RADAR TRIALS                      00048300
      IF(MDIC.LE.0) GO TO 1130                                          00048400
C             /-IF CUTTER NOT ON AND NOT A POINT, GO TO 29              00048500
      IF(ITLON(IS)*IPT1.NE.0) GO TO 29                                  00048600
C             /-TOOL-ON OR POINT TOOL CASE                              00048700
C             /-EPS1 IS .1*TAU(INITIALLY .00005)                        00048800
      W1=ZERO                                                           00048900
      DO 1133 I=1,3                                                     00049000
 1133 W1=W1+DABS(TP(I,IS)-TE(I))                                        00049100
      IF(W1.GT.EPS1(IS)) GO TO 29                                       00049200
C             /-IFL1PCK WRONG SIGN, REVERSE U1. SET MAP=1.              00049300
 1130 CONTINUE                                                          00049400
      TEM(7)=JTN(IS)-.5                                                 00049500
      IF(TEM(7)*FLIPCK.GE.ZERO) GO TO 711                               00049600
C***          ERROR IN AMIND - SET JMIN AND RETURN.                     00049700
      IF(MAP.GT.0) JMIN=1                                               00049800
      IF(MAP.GT.0) GO TO 2999                                           00049900
  710 MAP=1                                                             00050000
      DO 1131 I=1,3                                                     00050100
        U1(I,IS)=-U1(I,IS)                                              00050110
 1131 CONTINUE                                                          00050200
C             /-GO BACK AND FIND TOOL TO SURF RELATIONSHIP              00050300
      GO TO 2712                                                        00050400
C                                                                       00050500
C             /-MINIMUM DISTANCE S(IS)O.K.. ADJUST TO CORRECT PART      00050600
C             /-TOLERANCE BAND                                          00050700
  711 CONTINUE                                                          00050800
      JMIN=0                                                            00050900
C             /-IPL=1 FOR PLANE, 0 OTHERWISE                            00051000
      IF(IPL(IS).GT.0) GO TO 1132                                       00051100
C             /-TAU = TOTAL TOLERANCE TAU1-TAU2                         00051200
C             /-EPS8 =EPS1 OR 2*EPS1 WHERE EPS1=.1*TAU                  00051300
C             /-PLACE CUTTER WITHIN 10PC OF TOLERANCE BAND OF LEAST CURV00051400
      TEMP(1)=TAU(IS)-EPS8(IS)                                          00051500
      IF(RC(IS).GT.ZERO.AND.JTN(IS).NE.0) TEMP(1)=EPS8(IS)              00051600
      IF(RC(IS).LE.ZERO.AND.JTN(IS).EQ.0) TEMP(1)=EPS8(IS)              00051700
C             /-TAU2 IS NEGATIVE AND IS INNER TOLERANCE(AWAY FROM CUTTER00051800
      S(IS)=S(IS)-TAU2(IS)-TEMP(1)                                      00051900
C                                                                       00052000
C             /-UPDATE SPK,TPK,SNK ETC. JENT = 0. COMPUTE VT            00052100
C             /-********* EXIT  ROUTE **********.                       00052200
 1132 CONTINUE                                                          00052300
      IF(JENT(IS).EQ.0) GO TO 2046                                      00052400
C                                                                       00052500
C             /-FOR FIRST ENTRY SAVE LAST GOOD VALUES                   00052600
 2044 CONTINUE                                                          00052700
      DO 1134 I=1,3                                                     00052800
      TPK(I,IS)=TP(I,IS)                                                00052900
      SPK(I,IS)=SP(I,IS)                                                00053000
      U1K(I,IS)=U1(I,IS)                                                00053100
      SNK(I,IS)=SN(I,IS)                                                00053200
 1134 CONTINUE                                                          00053300
      IF (ISTART.EQ.0) JENT(IS)=0                                       00053310
C             /-SET ENTRY FLAG TO ZERO, INITIAL ENTRY FINISHED          00053400
      JENT(IS)=0                                                        00053500
C             /-SAVE INDEX TO PERTINENT TOOL SEGMENT                    00053600
      ITSEGK(IS) = ITSEG(IS)                                            00053700
C                                                                       00053800
 2046 CONTINUE                                                          00053900
      MSSCHK=0                                                          00054000
C             /-SAVE DISPLACEMENT VECTOR FROM TE TO CONTACT PT          00054100
      DO 1135 I=1,3                                                     00054200
        VT(I,IS)=TP(I,IS)-TH(IS)*TN(I,IS)-TE(I)                         00054210
 1135 CONTINUE                                                          00054300
      IF(KDYNFL.NE.0) CALL APT238(7)                                    00054400
C              /-DYNDMP(107) --------.                                  00054500
C***       ERROR EXIT PATH AND END OF NORMAL EXIT                       00054600
 2999 CONTINUE                                                          00054700
      ITLON(IS)=ITLON1                                                  00054800
      DO 1136 I=1,3                                                     00054900
 1136 TE(I)=TE1(I)                                                      00055000
      RETURN                                                            00055100
C                                                                       00055200
C                                                                       00055300
C     -------------------------------------------------*                00055400
C             /-IAFL(IS)=0 SPECIAL ANALYTIC ROUTE. INITIAL ENTRY.       00055500
C             /-SURF IS PLANE PERPEN TO TA OR PLANE PARL TO DS,CS       00055600
C             /-CANON(IC+0,+1,+2)=I,J,K NORMAL, AND CN(IC+3)=ORIGIN DIST00055700
  202 CONTINUE                                                          00055800
      DO 1150 I=1,3                                                     00055900
 1150 TN(I,IS)=CANON(ICBOT+I)                                           00056000
      AJENT=JENT(IS)                                                    00056100
      CALL DOTF(TEM,TP(1,IS),CANON(IC))                                 00056200
      SAVE(IS)=ONE                                                      00056300
      IF(JENT(IS).EQ.0) GO TO 204                                       00056400
C             /-CHANGE SIGN OF PLANE NORMAL IF TP IS ON OPPOSITE SIDE   00056500
      IF(PAST(IS)*(CANON(IC+3)-TEM(1)).GE.ZERO) GO TO 204               00056600
      SAVE(IS)=-ONE                                                     00056700
      DO 1154 I=1,3                                                     00056800
        TN(I,IS)=-TN(I,IS)                                              00056810
 1154 CONTINUE                                                          00056900
  204 CONTINUE                                                          00057000
      IF(ITLON(IS).NE.0) GO TO 327                                      00057100
C             /-USE TE FOR TP IF TOOL IS ON SURF                        00057200
      DO 1151 I=1,3                                                     00057300
 1151 TP(I,IS)=TE(I)                                                    00057400
      GO TO 305                                                         00057500
  327 CONTINUE                                                          00057600
C             /-COMPUTE A NEW TOOL POINT                                00057700
      IF(IS.NE.IPS) GO TO 303                                           00057800
      W1=CUTDAT(7)/2.0                                                  00057900
      DO 1152 I=1,3                                                     00058000
        TP(I,IS)=TP(I,IS)+W1*TN(I,IS)                                   00058010
 1152 CONTINUE                                                          00058100
      GO TO 305                                                         00058200
  303 CONTINUE                                                          00058300
C             /-SET TP AT TOP PERIPHERY OF TOOL FOR DS,CS               00058400
      DO 1153 I=1,3                                                     00058500
        TP(I,IS)=TE(I)+TOOLHT(I,IS)+TOOLWD(IS)*TN(I,IS)                 00058510
 1153 CONTINUE                                                          00058600
C             /-FIND SIGNED NORMAL DISTANCE OF TP FROM PLANE USING SAVE.00058700
  305 CALL DOTF(TEM,TP(1,IS),CANON(IC))                                 00058800
      S(IS)=SAVE(IS)*(CANON(IC+3)-TEM(1))                               00058900
C             /-COMPUTE SN,S AND MAYBE U1                               00059000
      IF(JTN(IS).EQ.0) GO TO 208                                        00059100
      Z(IS)=SAVE(IS)                                                    00059200
      DO 1155 I=1,3                                                     00059300
        SN(I,IS)=TN(I,IS)                                               00059400
        U1(I,IS)=TN(I,IS)                                               00059410
 1155 CONTINUE                                                          00059500
      GO TO 209                                                         00059600
  208 Z(IS)=-SAVE(IS)                                                   00059700
      DO 1156 I=1,3                                                     00059800
        SN(I,IS)=-TN(I,IS)                                              00059810
 1156 CONTINUE                                                          00059900
  209 RC(IS)=RC1                                                        00060000
      DO 1157 I=1,3                                                     00060100
        SNL(I,IS)=SN(I,IS)                                              00060110
 1157 CONTINUE                                                          00060200
      ISIGCR(IS)=-1                                                     00060300
C             /-COMPENSATE DISTANCE S BY THICK PARAMETER                00060400
      S(IS)=S(IS)-TH(IS)                                                00060500
C             /-TOOL POINT IS PLACED OUT ON THICK ENVELOPE ARND TOOL    00060600
      DO 1158 I=1,3                                                     00060700
        TP(I,IS)=TP(I,IS)+TH(IS)*TN(I,IS)                               00060710
 1158 CONTINUE                                                          00060800
C                                                                       00060900
  213 CONTINUE                                                          00061000
      DO 1161 I=1,3                                                     00061100
        SP(I,IS)=TP(I,IS)+S(IS)*TN(I,IS)                                00061200
        CC(I,IS)=SP(I,IS)-RC(IS)*SN(I,IS)                               00061210
 1161 CONTINUE                                                          00061300
C             /-RETURN WITH MINOR HOUSEKEEPING                          00061400
      IF(JENT(IS).EQ.0) GO TO 2046                                      00061500
C             /-SAVE SPL FOR THE INTITIAL ENTRY ONLY                    00061600
      DO 1159 I=1,3                                                     00061700
        SPL(I,IS)=SP(I,IS)                                              00061710
 1159 CONTINUE                                                          00061800
C             /-RETURN WITH HOUSEKEEPING - SAVE LAST VALUES(SPK,TPK,..) 00061900
      GO TO 2044                                                        00062000
C                                                                       00062100
C-------------------------------------------------------                00062200
C             /-IAFL(IS)=0 SPECIAL ANALYTIC ROUTE. NORMAL ENTRY.        00062300
  212 CONTINUE                                                          00062400
      IF(JTN(IS).EQ.0) GO TO 307                                        00062500
C             /-TOOL NORMAL CONTROL, GENERATE TP,TN.                    00062600
      CALL DOTF(TEM,TN(1,IS),U1(1,IS))                                  00062700
      IF(TEM(1).LT.ZERO) GO TO 309                                      00062800
      DO 310 I=1,3                                                      00062900
        TN(I,IS)=U1(I,IS)                                               00063000
        TP(I,IS)=TE(I)+VT(I,IS)+TH(IS)*TN(I,IS)                         00063010
  310 CONTINUE                                                          00063100
      GO TO 307                                                         00063200
C                                                                       00063300
  309 CONTINUE                                                          00063400
      Z(IS)=-Z(IS)                                                      00063500
      SAVE(IS)=-SAVE(IS)                                                00063600
      DO 311 I=1,3                                                      00063700
      TN(I,IS)=-U1(I,IS)                                                00063800
      SNL(I,IS)=SN(I,IS)                                                00063900
      SN(I,IS)=-SN(I,IS)                                                00064000
      U1(I,IS)=TN(I,IS)                                                 00064100
      TP(I,IS)=TE(I)+TOOLHT(I,IS)+(TH(IS)+TOOLWD(IS))*TN(I,IS)          00064110
  311 CONTINUE                                                          00064200
C                                                                       00064300
  307 CONTINUE                                                          00064400
      CALL DOTF(TEM,TP(1,IS),CANON(IC))                                 00064500
      S(IS)=SAVE(IS)*(CANON(IC+3)-TEM(1))                               00064600
      DO 312 I=1,3                                                      00064700
        SPL(I,IS)=SP(I,IS)                                              00064710
  312 CONTINUE                                                          00064800
C             /-FINISH UP WITH SP,CC AND RETURN WITH HOUSEKEEPING       00064900
      GO TO 213                                                         00065000
C                                                                       00065100
      END                                                               00065200
**** SOURCE FILE : M0002819.V04   ***
*
C.....FORTRAN SUBROUTINE  ....APT200         8/68                    PH A2000001
C.....FORTRAN SUBROUTINE             APT200...              3/1/68   GK A2000002
      SUBROUTINE APT200 (HMOD,ADRESS,XNTSCT)                            A2000010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2000020
      DIMENSION ADRESS(*)                                               A2000030
C                                                                       A2000040
C                                                                       A2000050
C                                                                       A2000060
C                                                                       A2000070
      INCLUDE 'TOTAL.INC'                                               A2000181
      INCLUDE 'LDEF.INC'                                                A2000235
      INCLUDE 'ISV.INC'                                                 A2000395
      INCLUDE 'IFXCOR.INC'                                              A2000555
      INCLUDE 'KNUMBR.INC'                                              A2000699
C                                                                       A2000700
C     25. COMMON FOR AERR INFORMATION                                   A2000750
C                                                                       A2000755
      COMMON /AERCOM/ IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS                A2000760
      DIMENSION PCTPTS(3,20),PCTPLN(4),ERRPTS(3,3)                      A2000765
C                                                                       A2000770
C                                                                       A2000780
C...  ESTABLISHES CHECK SURFACE PARAMETERS FOR EACH CHECK SURFACE       A2000790
C...  ADVANCE THE CHECK SURFACE COUNTER                                 A2000800
      IF(IAERR.EQ.1) GO TO 1000                                         A2000805
      ICSCNT=ICSCNT+K1                                                  A2000810
      IF(NUMSFS.GE.(ICSCNT+K2)) GO TO 1                                 A2000820
      IAERFG=1                                                          A2000825
      CALL AERR(20001,'APT200  ')                                       A2000830
      GO TO 1000                                                        A2000840
    1 IS=ICS+(ICSCNT-K1)*LSV1                                           A2000850
      CALL APT234(HMOD,ADRESS)                                          A2000860
      IF(IAERR)5,5,1000                                                 A2000870
C...  SET IFL4=1 IF PSTAN,0 IF TANTO                                    A2000880
    5 IF(ISFTYP(IS)-K4)30,10,20                                         A2000890
   10 IFL4(IS)=0                                                        A2000900
      GO TO 30                                                          A2000910
   20 IFL4(IS)=K1                                                       A2000920
C...  SET CS INTERSECTION COUNTER                                       A2000930
   30 IFAR(IS) = XNTSCT                                                 A2000940
      JCS=.TRUE.                                                        A2000950
 1000 CONTINUE                                                          A2000980
      RETURN                                                            A2000981
       END                                                              A2000990
**** SOURCE FILE : M0000852.V02   ***
*
C.....FORTRAN SUBROUTINE             APT232...              4/1/68   GK A2320000
      SUBROUTINE APT232(NUMBER,TOLRNS,TAUS,ONE)                         A2320010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2320020
C                                                                       A2320030
C                                                                       A2320040
C                                                                       A2320050
C                                                                       A2320060
      INCLUDE 'TOTAL.INC'                                               A2320181
      INCLUDE 'SV.INC'                                                  A2320407
      INCLUDE 'ZNUMBR.INC'                                              A2320479
      INCLUDE 'ISV.INC'                                                 A2320593
      INCLUDE 'IFXCOR.INC'                                              A2320713
      INCLUDE 'ISHR18.INC'                                              A2320797
      INCLUDE 'KNUMBR.INC'                                              A2320905
C                                                                       A2321020
      DATA ZLIT1/.02D0/                                                 A2321030
C                                                                       A2321040
C                                                                       A2321050
C                                                                       A2321060
      DIMENSION TOLRNS(4),TAUS(1)                                       A2321070
      IS=IPS                                                            A2321080
      DO 50 I=1,NUMSFS                                                  A2321090
   10 TAUS(IS)=ONE*TOLRNS(I)                                            A2321100
      TAU(IS)=TAU1(IS)-TAU2(IS)                                         A2321110
      EPS1(IS)=Z1EM1*TAU(IS)                                            A2321120
      EPS2(IS)=Z1-EPS1(IS)                                              A2321130
      EPS3(IS)=Z2*EPS1(IS)                                              A2321140
      EPS4(IS)=Z2*TAU(IS)                                               A2321150
      EPS6(IS) = ZLIT1*EPS1(IS)                                         A2321160
      EPS8(IS)=EPS1(IS)                                                 A2321170
      IF(IS-ICS)20,30,30                                                A2321180
   20 IS=IS+LSV                                                         A2321190
      IF(NUMBER-I)10,10,50                                              A2321200
   30 IF(I-NUMBER)40,60,60                                              A2321210
   40 IS=IS+LSV1                                                        A2321220
   50 CONTINUE                                                          A2321230
   60 JENT(IPS) = K1                                                    A2321235
      JENT(IDS) = K1                                                    A2321240
C                                                                       A2321250
C                                                                       A2321251
      RETURN                                                            A2321260
       END                                                              A2321270
**** SOURCE FILE : M0000853.V08   ***
*
C.....FORTRAN SUBROUTINE  ....APT233         8/68                 HG,AR A2330001
C.....FORTRAN SUBROUTINE             APT233...              3/1/68   GK A2330002
      SUBROUTINE APT233                                                 A2330010
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           A2330020
C                                                                       A2330030
C                                                                       A2330040
C                                                                       A2330050
C                                                                       A2330060
      INCLUDE 'TOTAL.INC'                                               A2330171
      INCLUDE 'FXCOR.INC'                                               A2330446
      INCLUDE 'HOLRTH.INC'                                              A2330502
      INCLUDE 'IFXCOR.INC'                                              A2330649
      INCLUDE 'ISHR18.INC'                                              A2330747
      INCLUDE 'KNUMBR.INC'                                              A2330873
C                                                                       A2330922
      DIMENSION IFERM(2)                                                A2330924
      EQUIVALENCE (IFERM,FERMOD)                                        A2330926
      INTEGER BCDF                                                      A2330928
      LOGICAL FIRST                                                     A2330932
      SAVE FIRST,KCLDAT                                                 A2330934
C                                                                       A2330940
      INTEGER Z4E                                                       A2330942
      PARAMETER (Z4E=1308622848)                                        A2330943
C                                                                       A2330944
      DIMENSION KCLDAT(18),DCLDAT(9)                                    A2330946
      EQUIVALENCE (DCLDAT(1),KCLDAT(1))                                 A2330947
      CHARACTER*6 HGDLTA                                                A2330952
C                                                                       A2330956
      COMMON/DSNAME/DSNAME,NAMSUB                                       A2330957
C                                                                       A2330960
C...            SYSTEM I/O FILE NAMES                                   A2330965
C                                                                       A2330970
      INCLUDE 'SYMFIL.INC'                                              A2330977
      DATA FIRST/.TRUE./                                                A2330998
      DATA KCLDAT/0,0,Z4E,0,Z4E,2,Z4E,1,                                A2331002
     C 0,0,Z4E,0,0,0,Z4E,0,Z4E,0/                                       A2331004
      DATA HGDLTA/'GODLTA'/                                             A2331006
      DATA ZLIT1 /.997D0/                                               A2331018
C                                                                       A2331020
      IF (FIRST)THEN                                                    A2331022
        KCLDAT(1) = BCDF('CLDA')                                        A2331024
        KCLDAT(2) = BCDF('TA  ')                                        A2331026
        KCLDAT(9) = BCDF('    ')                                        A2331028
        KCLDAT(10) = KCLDAT(9)                                          A2331032
        KCLDAT(13) = KCLDAT(9)                                          A2331034
        KCLDAT(14) = KCLDAT(9)                                          A2331036
        FIRST=.FALSE.                                                   A2331038
      ENDIF                                                             A2331039
C...  STORES THE CUTTER POSITION (TE) IN TCDAT                          A2331040
C...  CALLED BY SUBROUTINES FROM,GODLTA,AND GOTO                        A2331050
      CALL RECORD(ISEQNO)                                               A2331055
      IFERM(1) = BCDF(MODFER(1:4))                                      A2331057
      IFERM(2) = BCDF(MODFER(5:6))                                      A2331058
      IF(MODFER.NE.HGDLTA)GO TO 10                                      A2331060
      NR=0                                                              A2331063
      KCLDAT(4)=ISEQNO                                                  A2331064
      DCLDAT(5)=FERMOD                                                  A2331065
      CALL EWRITE(EXFILE,NR,KCLDAT,10,IR)                               A2331066
      GO TO 70                                                          A2331068
C...  TI IS THE NORMALIZED CUT VECTOR                                   A2331070
   10 DO 20 J=1,3                                                       A2331080
   20 TEMP(J)=TE(J)-TEK(J)                                              A2331090
      CALL VNORM(TEMP,TI)                                               A2331100
      IF(IER)25,25,50                                                   A2331110
   25 IF(DABS(TI(1)*TA(1)+TI(2)*TA(2)+TI(3)*TA(3))-ZLIT1) 30,30,50      A2331120
C...  IF TI IS NOT IN LINE WITH TA,SAVE IN PMOVE                        A2331130
   30 DO 40 J=1,3                                                       A2331150
   40 PMOVE(J)=TI(J)                                                    A2331160
   50 NR=0                                                              A2331196
      KCLDAT(4)=ISEQNO                                                  A2331198
      KCLDAT(6)=6                                                       A2331199
      DCLDAT(5)=FERMOD                                                  A2331200
      DCLDAT(7)=DSNAME                                                  A2331201
      KCLDAT(16)=NAMSUB                                                 A2331202
      CALL EWRITE(EXFILE,NR,KCLDAT,18,IR)                               A2331203
      KCLDAT(6)=2                                                       A2331204
   70 ICL=K3                                                            A2331205
      CALL ATAPE                                                        A2331210
      RETURN                                                            A2331220
       END                                                              A2331230
**** SOURCE FILE : M0000854.W01   ***
*
C.....FORTRAN SUBROUTINE  ....APT234         8/68                 AR    A2340001
C                                                                       A2340002
      SUBROUTINE APT234 (HMOD,ADRESS)                                   A2340010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2340020
      DIMENSION ADRESS(1000)                                            A2340030
C                                                                       A2340040
C                                                                       A2340050
C                                                                       A2340060
C                                                                       A2340070
      INCLUDE 'TOTAL.INC'                                               A2340181
      INCLUDE 'FXCOR.INC'                                               A2340491
      INCLUDE 'HOLRTH.INC'                                              A2340555
      INCLUDE 'SV.INC'                                                  A2340569
      INCLUDE 'LDEF.INC'                                                A2340859
      INCLUDE 'ISV.INC'                                                 A2341011
      INCLUDE 'IFXCOR.INC'                                              A2341171
      INCLUDE 'ISHR18.INC'                                              A2341283
      INCLUDE 'KNUMBR.INC'                                              A2341427
C                                                                       A2341470
C                                                                       A2341480
C                                                                       A2341490
      LOGICAL CKDEF                                                     A2341500
C                                                                       A2341510
      INCLUDE 'BLANKCOM.INC'                                            A2341520
C                                                                       A2341530
      CHARACTER*8 TEST                                                  A2341535
C                                                                       A2341537
C...  ESTABLISHES SURFACE PARAMETERS FOR PS,DS,CS AND CALCULATES THE    A2341540
C...  INDEX OF CANON FOR THE CANONICAL INFORMATION STORAGE              A2341550
C...  CALLED BY SUBPROGRAMS - APT200,APT201,GO,PSIS                     A2341560
      IF(IAERR.NE.0)GO TO 900                                           A2341564
      IF(CKDEF(ADRESS))GO TO 900                                        A2341565
C...  PRE-SET SURFACE CONDITION FLAGS                                   A2341570
      IPL(IS)=0                                                         A2341580
      LIMFL(IS)=0                                                       A2341590
      IUNFL(IS)=0                                                       A2341600
      PAST(IS)=K1                                                       A2341610
      JENT(IS)=1                                                        A2341615
C...  SET ISFTYP BASED ON HOLERITH CONTENTS OF HMOD                     A2341620
      CALL HOLFRM(HMOD,TEST,1,8,NWD)                                    A2341625
      IF(TEST.EQ.HDS) GO TO 10                                          A2341630
      ISFTYP(IS)=K1                                                     A2341640
      IF(TEST.EQ.HTO)GO TO 10                                           A2341650
      ISFTYP(IS)=K2                                                     A2341660
      IF(TEST.EQ.HPAST)GO TO 60                                         A2341670
      ISFTYP(IS)=K3                                                     A2341680
      IF(TEST.EQ.HON)GO TO 10                                           A2341690
      ISFTYP(IS)=K4                                                     A2341700
      IF(TEST.EQ.HTANTO)GO TO 10                                        A2341710
      ISFTYP(IS)=K8                                                     A2341720
      IF(TEST.EQ.HPSTAN)GO TO 10                                        A2341730
      ISFTYP(IS)=K1                                                     A2341740
C...  SET SURFACE TYPE CODE IN ISFIDN                                   A2341750
   10 ISRFLG=IS/LSV-1                                                   A2341755
      CALL APT202(ADRESS,ISRFLG)                                        A2341756
      CALL UNPACK(ADRESS,ISFIDN(IS),J,K)                                A2341760
      L=(IS-K2)*K10+K1                                                  A2341770
      ICANON(IS)=L                                                      A2341780
      IF(.NOT.REFFLG.AND..NOT.REFMOT) GOTO 88                           A2341784
      KIS = ISFIDN(IS)                                                  A2341786
      IF(KIS.LE.0.OR.KIS.GT.20) GO TO 88                                A2341787
      GO TO(82,82,83,83,84,85,85,85,83,85,88,                           A2341788
     * 88,88,85,88,88,88,88,84,86),KIS                                  A2341790
      GOTO 88                                                           A2341791
   82 IR = 4                                                            A2341792
      GO TO 87                                                          A2341794
   83 IR = 5                                                            A2341796
      GO TO 87                                                          A2341798
   84 IR = 2                                                            A2341800
      GO TO 87                                                          A2341802
   85 IR = 1                                                            A2341804
      GO TO 87                                                          A2341806
   86 IR = 3                                                            A2341808
   87 CALL TRANSM (CANON(L),ADRESS,IR,J,0)                              A2341810
      GO TO 13                                                          A2341812
   88 DO 12 I = 1,J                                                     A2341814
      CANON(L) = ADRESS(I)                                              A2341816
   12 L = L + 1                                                         A2341818
   13 IF(ISFIDN(IS) - K3) 50,55,20                                      A2341820
   20 IF(ISFIDN(IS)-K5)55,55,30                                         A2341830
   30 IF(ISFIDN(IS).EQ.9)GO TO 55                                       A2341840
      IF(ISFIDN(IS).EQ.29.OR.ISFIDN(IS).EQ.30) GO TO 1000               A2341842
      GO TO 1000                                                        A2341850
   50 IPL(IS)=K1                                                        A2341860
C...  SET IUNFL=1 IF UN CAN BE CALCULATED USING AN OFF SURFACE POINT,   A2341870
C...  SET TO 0 OTHERWISE                                                A2341880
   55 IUNFL(IS)=K1                                                      A2341890
 1000 CONTINUE                                                          A2341900
      RETURN                                                            A2341901
C...  SET PAST=-1 IF A CONDITION OF PAST EXISTS, -1 OTHERWISE           A2341910
   60 PAST(IS)=-K1                                                      A2341920
      GO TO 10                                                          A2341930
C     SURFACE NOT CORRECTLY DEFINED                                     A2341940
  900 IAERR=1                                                           A2341950
      GO TO 1000                                                        A2341960
       END                                                              A2341970
**** SOURCE FILE : M0002730.V08   ***
*
C                                                                       A2350001
C.....FORTRAN SUBROUTINE                APT235...            8/1/68  AR A2350002
      SUBROUTINE APT235                                                 A2350010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2350020
C                                                                       A2350030
C                                                                       A2350040
C                                                                       A2350050
C                                                                       A2350060
      INCLUDE 'TOTAL.INC'                                               A2350171
      INCLUDE 'DEF.INC'                                                 A2350281
      INCLUDE 'FXCOR.INC'                                               A2350569
      INCLUDE 'HOLRTH.INC'                                              A2350633
      INCLUDE 'SV.INC'                                                  A2350937
      INCLUDE 'ZNUMBR.INC'                                              A2351033
      INCLUDE 'ISV.INC'                                                 A2351185
      INCLUDE 'IFXCOR.INC'                                              A2351345
      INCLUDE 'ISHR18.INC'                                              A2351457
      INCLUDE 'KNUMBR.INC'                                              A2351601
C                                                                       A2351770
C                                                                       A2351780
C                                                                       A2351790
C                                                                       A2351800
C...            SYSTEM I/O FILE NAMES                                   A2351805
C                                                                       A2351810
      INCLUDE 'SYMFIL.INC'                                              A2351817
C                                                                       A2351835
      INTEGER Z4E                                                       A2351837
      PARAMETER (Z4E=1308622848)                                        A2351838
C                                                                       A2351839
      INTEGER HCLDTA                                                    A2351840
      DIMENSION HCLDTA(32)                                              A2351845
      DIMENSION HCL(16)                                                 A2351846
      DOUBLE PRECISION HCL                                              A2351847
      EQUIVALENCE(HCL(1),HCLDTA(1))                                     A2351848
      DIMENSION IFERM(2)                                                A2351853
      EQUIVALENCE(IFERM,FERMOD)                                         A2351854
      COMMON/DSNAME/DSNAME,NAMSUB                                       A2351855
C                                                                       A2351856
      INCLUDE 'BLANKCOM.INC'                                            A2351860
C                                                                       A2351870
      INTEGER BCDF                                                      A2351872
      LOGICAL FIRST                                                     A2351874
      SAVE FIRST,HCLDTA                                                 A2351876
      CHARACTER*8 HGO                                                   A2351878
      LOGICAL CKDEF,FLAG                                                A2351880
C                                                                       A2351882
      DATA HCLDTA /0,0,Z4E,0,Z4E,6,Z4E,1,                               A2351884
     * 0,0,Z4E,0,0,0,Z4E,0,Z4E,0,                                       A2351886
     * 14*0/                                                            A2351888
      DATA HGO/'GO      '/                                              A2351890
      DATA FIRST/.TRUE./                                                A2351892
C                                                                       A2351900
C                                                                       A2351910
      IF (FIRST)THEN                                                    A2351911
        HCLDTA(1) = BCDF('CLDA')                                        A2351912
        HCLDTA(2) = BCDF('TA  ')                                        A2351913
        HCLDTA(9) = BCDF('    ')                                        A2351914
        HCLDTA(10) = HCLDTA(9)                                          A2351915
        HCLDTA(13) = HCLDTA(9)                                          A2351916
        HCLDTA(14) = HCLDTA(9)                                          A2351917
        FIRST=.FALSE.                                                   A2351918
      ENDIF                                                             A2351919
      FLAG = .FALSE.                                                    A2351920
      NUMSUR=ICSCNT+K2                                                  A2351930
C...  PRINT  IDENTIYING FIRST CUT SEQUENCE RECORD ON EXFILE             A2351950
      CALL RECORD(ISEQNO)                                               A2351960
      HCLDTA(4)=ISEQNO                                                  A2351965
      IFERM(1) = BCDF(MODFER(1:4))                                      A2351967
      IFERM(2) = BCDF(MODFER(5:6))                                      A2351968
      HCL(5)=FERMOD                                                     A2351970
      HCLDTA(12)=ISFTYP(IDS)                                            A2351975
      HCL(7)=DSNAME                                                     A2351980
      HCLDTA(16)=NAMSUB                                                 A2351985
      HCLDTA(18)=ISFIDN(IDS)                                            A2351990
      IF(ISFIDN(IDS).EQ.K4.AND.MODFER.NE.HGO) GO TO 10                  A2351995
      HCLDTA(6)=K6                                                      A2352000
      NR=0                                                              A2352005
      CALL EWRITE(EXFILE,NR,HCLDTA,18,IR)                               A2352010
      GO TO 15                                                          A2352015
   10 HCLDTA(6)=K13                                                     A2352020
      J=ICANON(IDS)                                                     A2352025
      DO 11 I=10,16                                                     A2352030
      HCL(I)=CANON(J)                                                   A2352040
   11 J=J+1                                                             A2352045
      NR=0                                                              A2352050
      CALL EWRITE(EXFILE,NR,HCLDTA,32,IR)                               A2352055
   15 IF(IPSDEF)9,9,8                                                   A2352060
    8 TEMP(1) = TE(3)                                                   A2352070
      TE(3)=Z0                                                          A2352080
      CALL AUTOPS                                                       A2352090
      TE(3) = TEMP(1)                                                   A2352100
    9 J=IPS                                                             A2352110
      L=LSV                                                             A2352120
      DO 1 I = 1,NUMSUR                                                 A2352130
      M=ICANON(J)                                                       A2352140
      IF (CKDEF(CANON(M))) FLAG = .TRUE.                                A2352150
      IF (J-ICS)  2,3,4                                                 A2352220
    2 ITLON(J)=ISFTYP(J)-K3                                             A2352230
      GO TO 5                                                           A2352240
    3 L=LSV1                                                            A2352250
    4 IF(ISFTYP(J)-K4)2,6,7                                             A2352260
    6 ITLON(J)=ITLON(IDS)                                               A2352270
      IF(ITLON(J).NE.0) ITLON(J)=2                                      A2352275
      GO TO 5                                                           A2352280
    7 ITLON(J)=ITLON(IPS)                                               A2352290
      IF(ITLON(J).NE.0) ITLON(J)=3                                      A2352295
      ISFTYP(J)=K4                                                      A2352296
    5 IAFL(J)=-K1                                                       A2352300
    1 J=J+L                                                             A2352310
      IF (FLAG)  CALL AERR(23501,'APT235  ')                            A2352390
      RETURN                                                            A2352400
       END                                                              A2352410
**** SOURCE FILE : M0000856.V03   ***
*
C.....FORTRAN SUBROUTINE             APT236...              4/1/68   GK A2360000
      SUBROUTINE APT236                                                 A2360010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2360020
C                                                                       A2360030
C                                                                       A2360040
C                                                                       A2360050
C                                                                       A2360060
      INCLUDE 'TOTAL.INC'                                               A2360171
      INCLUDE 'FXCOR.INC'                                               A2360481
      INCLUDE 'SV.INC'                                                  A2360777
      INCLUDE 'ISV.INC'                                                 A2360929
      INCLUDE 'IFXCOR.INC'                                              A2361089
      INCLUDE 'ISHR18.INC'                                              A2361201
      INCLUDE 'KNUMBR.INC'                                              A2361345
C                                                                       A2361346
C...  21. ADDCOM BLOCK                                                  A2361352
C                                                                       A2361360
      COMMON/ADDCOM/ ADDCOM                                             A2361368
      DIMENSION ADDCOM(25)                                              A2361376
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            A2361384
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN)               A2361392
C                                                                       A2361400
      DATA ZLIT1,KLIT2/.997D0,11/                                       A2361470
C                                                                       A2361480
C                                                                       A2361490
C                                                                       A2361500
C                                                                       A2361510
C                                                                       A2361520
      DO 1 K = 1,3                                                      A2361530
      INOPS=0                                                           A2361540
      ICSCNT=0                                                          A2361550
      TEMP(K) = TE(K) - TEK(K)                                          A2361560
      TPK(K,IPS) = TP(K,IPS)                                            A2361564
      SPK(K,IPS) = SP(K,IPS)                                            A2361566
      U1K(K,IPS) = U1(K,IPS)                                            A2361568
      SNK(K,IPS) = SN(K,IPS)                                            A2361570
    1 CONTINUE                                                          A2361572
      ITSEGK(IPS) = ITSEG(IPS)                                          A2361574
      CALL VNORM (TEMP,TEMP)                                            A2361576
      IF(IER)2,2,4                                                      A2361580
    2 IF(DABS(TEMP(1)*TA(1)+TEMP(2)*TA(2)+TEMP(3)*TA(3))-ZLIT1) 3,3,4   A2361590
    3 PMOVE(1) = TEMP(1)                                                A2361600
      PMOVE(2)=TEMP(2)                                                  A2361610
      PMOVE(3)=TEMP(3)                                                  A2361620
    4 I=IPS                                                             A2361630
      DO 5 J = 1,NUMSUR                                                 A2361650
      INDIR(I)=0                                                        A2361660
      ISVFL(I)=0                                                        A2361670
      IF (I .GE. ICS)  GO TO 7                                          A2361710
    6 I=I+LSV                                                           A2361720
      GO TO 5                                                           A2361730
    7 I=I+LSV1                                                          A2361740
    5 CONTINUE                                                          A2361750
      RETURN                                                            A2361760
       END                                                              A2361770
**** SOURCE FILE : M0001132.W01   ***
*
C.....FORTRAN SUBROUTINE  ....APT238         8/68                    HG 00000100
C.....FORTRAN SUBROUTINE             APT238...              3/1/68   GK 00000200
      SUBROUTINE APT238 (NUMBER)                                        00000300
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            00000400
C                                                                       00000500
C                                                                       00000600
C                                                                       00000700
C                                                                       00000800
      INCLUDE 'TOTAL.INC'                                               00001901
      INCLUDE 'DSHAR4.INC'                                              00004301
      INCLUDE 'FXCOR.INC'                                               00008101
      INCLUDE 'HOLRTH.INC'                                              00008901
      INCLUDE 'SV.INC'                                                  00012701
      INCLUDE 'ISV.INC'                                                 00014601
      INCLUDE 'IBRKPT.INC'                                              00015000
      INCLUDE 'IFXCOR.INC'                                              00016901
      INCLUDE 'ISHR18.INC'                                              00018301
      INCLUDE 'KNUMBR.INC'                                              00020101
C                                                                       00020102
      N = NUMBER                                                        00020200
      IF(IBRKPT(N)) 2,1,2                                               00020300
    2 KFIX = STRTNO                                                     00020400
      IF(NMPNTS-NUMPT1.LT.KFIX) GO TO 1                                 00020500
      IS01 = IS+1                                                       00020600
      IS02 = IS + 2                                                     00020700
      CALL BAD(-1,0,' ',0)                                              00020800
      NN1=NUMBER/10+1                                                   00020900
      NN2=MOD(NUMBER,10)                                                00021000
      NN1=100*NN1+NN2                                                   00021100
      CALL BAD(1,0,'DYND',NN1)                                          00021200
      CALL BAD(-1,0,'SEQN',ISEQNO)                                      00021300
      GO TO (101,102,103,104,105,106,107,999,999,999,                   00021400
     1       201,202,203,204,205,206,207,208,209,210,                   00021500
     2     211,212,213,214,215,216,217,999,999,999,                     00021600
     3       401,402,403,404,999,999,999,999,999,999,                   00021700
     4       501,502,503,504,505,999,999,999,999,999),N                 00021800
C*101 CALL APT239(1,S(IS),TP(IS),TP(IS01),TP(IS02),TN(IS),TN(IS01),     00021900
C*   C TN(IS02))                                                        00022000
C*    GO TO 1                                                           00022100
C*102 CALL APT239(2,S(IS),SP(IS),SP(IS01),SP(IS02),SN(IS),              00022200
C*   C SN(IS01),SN(IS02))                                               00022300
C*    GO TO 1                                                           00022400
C*103 CALL APT239(3,IS,JENT(IS),JTN(IS),IOPSET(IS),JU1(IS),             00022500
C*   C TE(1),TE(2),TE(3),TA(1),TA(2),TA(3))                             00022600
C*    GO TO 1                                                           00022700
C*104 CALL APT239(4,IS,S(IS),ISIGCR(IS),Z(IS),RC(IS),CC(IS),CC(IS01),   00022800
C*   C CC(IS02),SP(IS),SP(IS01),SP(IS02),SPL(IS),SPL(IS01),SPL(IS02),   00022900
C*   2 SN(IS),SN(IS01),SN(IS02))                                        00023000
C*    GO TO 1                                                           00023100
C*105 CALL APT239 (5,IS,TP(IS),TP(IS01),TP(IS02),TN(IS),                00023200
C*   C TN(IS01),TN(IS02))                                               00023300
C*    GO TO 1                                                           00023400
C*106 CALL APT239(6,IS,S(IS),Z(IS),FLIPCK,IAMDCT,SP(IS),                00023500
C*   C SP(IS01),SP(IS02),SN(IS),SN(IS01),SN(IS02),                      00023600
C*   2 TP(IS),TP(IS01),TP(IS02),TN(IS),TN(IS01),TN(IS02))               00023700
C*    GO TO 1                                                           00023800
C*107 CALL APT239(7,IS,S(IS),TAU1(IS),TAU2(IS),Z(IS),                   00023900
C*   C FLIPCK,IAMDCT,TH(IS),RC(IS),                                     00024000
C*   2 SP(IS),SP(IS01),SP(IS02),SN(IS),SN(IS01),SN(IS02),TP(IS),TP(IS01)00024100
C*   3,TP(IS02),TN(IS),TN(IS01),TN(IS02),CC(IS),CC(IS01),CC(IS02),      00024200
C*   4 VT(IS),VT(IS01),VT(IS02))                                        00024300
C*    GO TO 1                                                           00024400
C*201 CALL APT239(11,TEK(1),TEK(2),TEK(3),TAK(1),TAK(2),TAK(3),         00024500
C*   C TIK(1),TIK(2),TIK(3),SPK(IPS),SPK(IPS+1),SPK(IPS+2),             00024600
C*   2 TPK(IPS),TPK(IPS+1),TPK(IPS+2),SPK(IDS),SPK(IDS+1),SPK(IDS+2),   00024700
C*   3 TPK(IDS),TPK(IDS+1),TPK(IDS+2))                                  00024800
C*    GO TO 1                                                           00024900
C*202 CALL APT239(12,DP,DPI)                                            00025000
C*    GO TO 1                                                           00025100
C*203 CALL APT239(13,IS,CSD(IS),DPI)                                    00025200
C*    GO TO 1                                                           00025300
C*204 CALL APT239(14,DP,CMOVE(1),CMOVE(2),CMOVE(3),TEL(1),TEL(2),TEL(3),00025400
C*   C TAL(1),TAL(2),TAL(3),TE(1),TE(2),TE(3),TA(1),TA(2),TA(3))        00025500
C*    GO TO 1                                                           00025600
C*205 CALL APT239(15,IS,JCR,TE(1),TE(2),TE(3),TA(1),TA(2),TA(3))        00025700
C*    GO TO 1                                                           00025800
C*206 CALL APT239(16,JDR,DP)                                            00025900
C*    GO TO 1                                                           00026000
C*207 CALL APT239(17,IS,JCKR,CSD(IS))                                   00026100
C*    GO TO 1                                                           00026200
C*208 CALL APT239(18,VL,NUMPT1)                                         00026300
C*    GO TO 1                                                           00026400
C*209 CALL APT239(19,JCR,IWS,TEE(IS),TEE(IS01),TEE(IS02))               00026500
C*    GO TO 1                                                           00026600
C*210 CALL APT239(20,IS,S(IS),Z(IS),J23(IS),STCK(IS),STCK1(IS))         00026700
C*    GO TO 1                                                           00026800
C*211 CALL APT239(21,IS,J23(IS),STCK2(IS),STCK(IS),                     00026900
C*   C SN(IS),SN(IS01),SN(IS02))                                        00027000
C*    GO TO 1                                                           00027100
C*212 CALL APT239 (22,IS,JDR,DP,VL)                                     00027200
C*    GO TO 1                                                           00027300
C*213 CALL APT239(23,IS,DP)                                             00027400
C*    GO TO 1                                                           00027500
C*214 CALL APT239(24,IS,JPR,CSD(IS))                                    00027600
C*    GO TO 1                                                           00027700
C*215 CALL APT239(25,IS,ISFTYP(IS),J23(IS),S(IS),Z(IS),STCK(IS),        00027800
C*   C STCK1(IS),STCK2(IS))                                             00027900
C*    GO TO 1                                                           00028000
C*216 CALL APT239(26,ISFTYP(IS),J23(IS),STCK2(IS),STCKN(IS),            00028100
C*   C SN(IS),SN(IS01),SN(IS02),TI(1),TI(2),TI(3))                      00028200
C*    GO TO 1                                                           00028300
C*217 CALL APT239(27,IS,IFAR(IS),TE(1),TE(2),TE(3),TA(1),TA(2),TA(3))   00028400
C*    GO TO 1                                                           00028500
C*401 CALL APT239(31,JPXR,PLND(IS),PLNV(IS),PLNV(IS01),PLNV(IS02),      00028600
C*   C CMOVE(1),CMOVE(2),CMOVE(3))                                      00028700
C*    GO TO 1                                                           00028800
C*402 CALL APT239(32,CPTST(IS),CPLFL(IS),PLND(IS),PLNV(IS),PLNV(IS01),  00028900
C*   C PLNV(IS02))                                                      00029000
C*    GO TO 1                                                           00029100
C*403 CALL APT239(33,IS,PLND1(IS),PLTST(IS))                            00029200
C*    GO TO 1                                                           00029300
C*404 CALL APT239(34,IT,S(IT),ISIGCR(IT),Z(IT),RC(IT),SP(IT),SP(IT+1),  00029400
C*   C SP(IT+2),CC(IT),CC(IT+1),CC(IT+2),SPL(IT),SPL(IT+1),SPL(IT+2),   00029500
C*   2 SN(IT),SN(IT+1),SN(IT+2))                                        00029600
C*    GO TO 1                                                           00029700
C*501 CALL APT239(41,INOPS,NUMSUR,IAUTPS)                               00029800
C*    GO TO 1                                                           00029900
C*502 CALL APT239(42,IS,INDIR(IS))                                      00030000
C*    GO TO 1                                                           00030100
C*503 CALL APT239(43,IS,VNDIR(IS),VNDIR(IS01),VNDIR(IS02),              00030200
C*   C TE(1),TE(2),TE(3))                                               00030300
C*    GO TO 1                                                           00030400
C*504 CALL APT239(44,IS,ISVFL(IS),CSD(IS),SN(IS),SN(IS01),SN(IS02))     00030500
C*999 GO TO 1                                                           00030600
C*505 CALL APT239(45,TE(1),TE(2),TE(3))                                 00030700
C*  1 RETURN                                                            00030800
C*    END                                                               00030900
  101 CONTINUE                                                          00031000
      CALL BAD(1,1,'S   ',S(IS))                                        00031100
      CALL BAD(-1,1,'Z   ',Z(IS))                                       00031200
      CALL BAD(3,1,'TP  ',TP(1,IS))                                     00031300
      CALL BAD(-3,1,'TN  ',TN(1,IS))                                    00031400
      GO TO 1                                                           00031500
  102 CONTINUE                                                          00031600
      CALL BAD(1,1,'S   ',S(IS))                                        00031700
      CALL BAD(-1,1,'Z   ',Z(IS))                                       00031800
      CALL BAD(3,1,'SP  ',SP(1,IS))                                     00031900
      CALL BAD(-3,1,'SN  ',SN(1,IS))                                    00032000
      GO TO 1                                                           00032100
  103 CONTINUE                                                          00032200
      CALL BAD(1,0,'IS  ',IS)                                           00032300
      CALL BAD(1,0,'JENT',JENT(IS))                                     00032400
      CALL BAD(1,0,'JTN ',JTN(IS))                                      00032500
      CALL BAD(1,0,'IOPS',IOPSET(IS))                                   00032600
      CALL BAD(1,0,'JU1 ',JU1(IS))                                      00032700
      CALL BAD(-1,0,'ITLN',ITLON(IS))                                   00032800
      CALL BAD(3,1,'TE  ',TE)                                           00032900
      CALL BAD(-3,1,'TA  ',TA)                                          00033000
      GO TO 1                                                           00033100
  104 CONTINUE                                                          00033200
      CALL BAD(1,0,'IS  ',IS)                                           00033300
      CALL BAD(1,1,'S   ',S(IS))                                        00033400
      CALL BAD(1,0,'ISGC',ISIGCR(IS))                                   00033500
      CALL BAD(1,1,'Z   ',Z(IS))                                        00033600
      CALL BAD(-1,1,'RC  ',RC(IS))                                      00033700
      CALL BAD(3,1,'SP  ',SP(1,IS))                                     00033800
      CALL BAD(-3,1,'SN  ',SN(1,IS))                                    00033900
      CALL BAD(3,1,'SPL ',SPL(1,IS))                                    00034000
      CALL BAD(-3,1,'CC  ',CC(1,IS))                                    00034100
      GO TO 1                                                           00034200
  105 CONTINUE                                                          00034300
      CALL BAD(-1,0,'IS  ',IS)                                          00034400
      CALL BAD(3,1,'TP  ',TP(1,IS))                                     00034500
      CALL BAD(-3,1,'TN  ',TN(1,IS))                                    00034600
      GO TO 1                                                           00034700
  106 CONTINUE                                                          00034800
      CALL BAD(1,0,'IS  ',IS)                                           00034900
      CALL BAD(1,1,'S   ',S(IS))                                        00035000
      CALL BAD(1,1,'Z   ',Z(IS))                                        00035100
      CALL BAD(1,1,'FLCK',FLIPCK)                                       00035200
      CALL BAD(-1,0,'AMCT',IAMDCT)                                      00035300
      CALL BAD(3,1,'SP  ',SP(1,IS))                                     00035400
      CALL BAD(-3,1,'SN  ',SN(1,IS))                                    00035500
      CALL BAD(3,1,'TP  ',TP(1,IS))                                     00035600
      CALL BAD(-3,1,'TN  ',TN(1,IS))                                    00035700
      GO TO 1                                                           00035800
  107 CONTINUE                                                          00035900
      CALL BAD(1,0,'IS  ',IS)                                           00036000
      CALL BAD(1,1,'S   ',S(IS))                                        00036100
      CALL BAD(1,1,'TAU1',TAU1(IS))                                     00036200
      CALL BAD(1,1,'TAU2',TAU2(IS))                                     00036300
      CALL BAD(1,1,'Z   ',Z(IS))                                        00036400
      CALL BAD(-1,1,'FLCK',FLIPCK)                                      00036500
      CALL BAD(1,0,'AMCT',IAMDCT)                                       00036600
      CALL BAD(1,1,'TH  ',TH(IS))                                       00036700
      CALL BAD(-1,1,'RC  ',RC(IS))                                      00036800
      CALL BAD(3,1,'SP  ',SP(1,IS))                                     00036900
      CALL BAD(-3,1,'SN  ',SN(1,IS))                                    00037000
      CALL BAD(3,1,'TP  ',TP(1,IS))                                     00037100
      CALL BAD(-3,1,'TN  ',TN(1,IS))                                    00037200
      CALL BAD(3,1,'CC  ',CC(1,IS))                                     00037300
      CALL BAD(-3,1,'VT  ',VT(1,IS))                                    00037400
      GO TO 1                                                           00037500
  201 CONTINUE                                                          00037600
      CALL BAD(3,1,'TEK ',TEK)                                          00037700
      CALL BAD(-3,1,'TAK ',TAK)                                         00037800
      CALL BAD(3,1,'SPKP',SPK(1,IPS))                                   00037900
      CALL BAD(-3,1,'SPKD',SPK(1,IDS))                                  00038000
      CALL BAD(3,1,'TPKP',TPK(1,IPS))                                   00038100
      CALL BAD(-3,1,'TPK ',TPK(1,IDS))                                  00038200
      CALL BAD(-3,1,'TIK ',TIK)                                         00038300
      GO TO 1                                                           00038400
  202 CONTINUE                                                          00038500
      CALL BAD(1,1,'DP  ',DP)                                           00038600
      CALL BAD(-1,1,'DPI ',DPI)                                         00038700
      GO TO 1                                                           00038800
  203 CONTINUE                                                          00038900
      CALL BAD(1,0,'IS  ',IS)                                           00039000
      CALL BAD(1,1,'CSD ',CSD(IS))                                      00039100
      CALL BAD(-1,1,'DPI ',DPI)                                         00039200
      GO TO 1                                                           00039300
  204 CONTINUE                                                          00039400
      CALL BAD(3,1,'CMOV',CMOVE)                                        00039500
      CALL BAD(-1,1,'DP  ',DP)                                          00039600
      CALL BAD(3,1,'TE  ',TE)                                           00039700
      CALL BAD(-3,1,'TA  ',TA)                                          00039800
      CALL BAD(3,1,'TEL ',TEL)                                          00039900
      CALL BAD(-3,1,'TAL ',TAL)                                         00040000
      GO TO 1                                                           00040100
  205 CONTINUE                                                          00040200
      CALL BAD(1,0,'IS  ',IS)                                           00040300
      CALL BAD(-1,0,'JCR ',JCR)                                         00040400
      CALL BAD(3,1,'TE  ',TE)                                           00040500
      CALL BAD(-3,1,'TA  ',TA)                                          00040600
      GO TO 1                                                           00040700
  206 CONTINUE                                                          00040800
      CALL BAD(1,0,'JDR ',JDR)                                          00040900
      CALL BAD(-1,0,'DP  ',DP)                                          00041000
      GO TO 1                                                           00041100
  207 CONTINUE                                                          00041200
      CALL BAD(1,0,'IS  ',IS)                                           00041300
      CALL BAD(1,0,'JCKR',JCKR)                                         00041400
      CALL BAD(-1,0,'CSD ',CSD(IS))                                     00041500
      GO TO 1                                                           00041600
  208 CONTINUE                                                          00041700
      CALL BAD(1,0,'NMPT',NUMPT1)                                       00041800
      CALL BAD(-1,1,'VL  ',VL)                                          00041900
      GO TO 1                                                           00042000
  209 CONTINUE                                                          00042100
      CALL BAD(1,0,'JCR ',JCR)                                          00042200
      CALL BAD(1,0,'IWS ',IWS)                                          00042300
      CALL BAD(-3,1,'TEE ',TEE(1,IS))                                   00042400
      GO TO 1                                                           00042500
  210 CONTINUE                                                          00042600
      CALL BAD(1,0,'IS  ',IS)                                           00042700
      CALL BAD(1,1,'S   ',S(IS))                                        00042800
      CALL BAD(1,1,'Z   ',Z(IS))                                        00042900
      CALL BAD(1,0,'J23 ',J23(IS))                                      00043000
      CALL BAD(1,1,'STCK',STCK(IS))                                     00043100
      CALL BAD(-1,1,'STK1',STCK1(IS))                                   00043200
      GO TO 1                                                           00043300
  211 CONTINUE                                                          00043400
      CALL BAD(1,0,'IS  ',IS)                                           00043500
      CALL BAD(1,0,'J23 ',J23(IS))                                      00043600
      CALL BAD(1,1,'STK2',STCK2(IS))                                    00043700
      CALL BAD(-1,1,'STCK',STCK(IS))                                    00043800
      CALL BAD(-3,1,'SN  ',SN(1,IS))                                    00043900
      GO TO 1                                                           00044000
  212 CONTINUE                                                          00044100
      CALL BAD(1,0,'IS  ',IS)                                           00044200
      CALL BAD(1,0,'JDR ',JDR)                                          00044300
      CALL BAD(1,1,'DP  ',DP)                                           00044400
      CALL BAD(-1,1,'VL  ',VL)                                          00044500
      GO TO 1                                                           00044600
  213 CONTINUE                                                          00044700
      CALL BAD(1,0,'IS  ',IS)                                           00044800
      CALL BAD(-1,1,'DP  ',DP)                                          00044900
      GO TO 1                                                           00045000
  214 CONTINUE                                                          00045100
      CALL BAD(1,0,'IS  ',IS)                                           00045200
      CALL BAD(1,0,'JPR ',JPR)                                          00045300
      CALL BAD(-1,1,'CSD ',CSD(IS))                                     00045400
      GO TO 1                                                           00045500
  215 CONTINUE                                                          00045600
      CALL BAD(1,0,'IS  ',IS)                                           00045700
      CALL BAD(1,0,'ISFT',ISFTYP(IS))                                   00045800
      CALL BAD(1,0,'J23 ',J23(IS))                                      00045900
      CALL BAD(1,1,'S   ',S(IS))                                        00046000
      CALL BAD(-1,1,'Z   ',Z(IS))                                       00046100
      CALL BAD(1,1,'STCK',STCK(IS))                                     00046200
      CALL BAD(1,1,'STK1',STCK1(IS))                                    00046300
      CALL BAD(-1,1,'STK2',STCK2(IS))                                   00046400
      GO TO 1                                                           00046500
  216 CONTINUE                                                          00046600
      CALL BAD(1,0,'ISFT',ISFTYP(IS))                                   00046700
      CALL BAD(1,0,'J23 ',J23(IS))                                      00046800
      CALL BAD(1,1,'STK2',STCK2(IS))                                    00046900
      CALL BAD(-1,1,'STKN',STCKN(IS))                                   00047000
      CALL BAD(3,1,'SN  ',SN(1,IS))                                     00047100
      CALL BAD(-3,1,'TI  ',TI)                                          00047200
      GO TO 1                                                           00047300
  217 CONTINUE                                                          00047400
      CALL BAD(1,0,'IS  ',IS)                                           00047500
      CALL BAD(-1,0,'IFAR',IFAR(IS))                                    00047600
      CALL BAD(3,1,'TE  ',TE)                                           00047700
      CALL BAD(-3,1,'TA  ',TA)                                          00047800
      GO TO 1                                                           00047900
  401 CONTINUE                                                          00048000
      CALL BAD(1,0,'JPXR',JPXR)                                         00048100
      CALL BAD(-1,1,'PLND',PLND(IS))                                    00048200
      CALL BAD(3,1,'PLNV',PLNV(1,IS))                                   00048300
      CALL BAD(-3,1,'CMOV',CMOVE)                                       00048400
      GO TO 1                                                           00048500
  402 CONTINUE                                                          00048600
      CALL BAD(1,1,'CPTS',CPTST(IS))                                    00048700
      CALL BAD(1,1,'CPLF',CPLFL(IS))                                    00048800
      CALL BAD(1,1,'PLND',PLND(IS))                                     00048900
      CALL BAD(-3,1,'PLNV',PLNV(1,IS))                                  00049000
      GO TO 1                                                           00049100
  403 CONTINUE                                                          00049200
      CALL BAD(1,0,'IS  ',IS)                                           00049300
      CALL BAD(1,1,'PLD1',PLND1(IS))                                    00049400
      CALL BAD(-1,1,'PLTS',PLTST(IS))                                   00049500
      GO TO 1                                                           00049600
  404 CONTINUE                                                          00049700
      CALL BAD(1,0,'IT  ',IT)                                           00049800
      CALL BAD(1,1,'S   ',S(IT))                                        00049900
      CALL BAD(1,0,'ISGC',ISIGCR(IT))                                   00050000
      CALL BAD(1,1,'Z   ',Z(IT))                                        00050100
      CALL BAD(-1,1,'RC  ',RC(IT))                                      00050200
      CALL BAD(3,1,'SP  ',SP(1,IT))                                     00050300
      CALL BAD(-3,1,'SN  ',SN(1,IT))                                    00050400
      CALL BAD(3,1,'SPL ',SPL(1,IT))                                    00050500
      CALL BAD(-3,1,'CC  ',CC(1,IT))                                    00050600
      GO TO 1                                                           00050700
  501 CONTINUE                                                          00050800
      CALL BAD(1,0,'INPS',INOPS)                                        00050900
      CALL BAD(1,0,'NMSR',NUMSUR)                                       00051000
      CALL BAD(-1,0,'IAUT',IAUTPS)                                      00051100
      GO TO 1                                                           00051200
  502 CONTINUE                                                          00051300
      CALL BAD(1,0,'IS  ',IS)                                           00051400
      CALL BAD(-1,0,'INDR',INDIR(IS))                                   00051500
      GO TO 1                                                           00051600
  503 CONTINUE                                                          00051700
      CALL BAD(-1,0,'IS  ',IS)                                          00051800
      CALL BAD(3,1,'VNDR',VNDIR(1,IS))                                  00051900
      CALL BAD(-3,1,'TE  ',TE)                                          00052000
      GO TO 1                                                           00052100
  504 CONTINUE                                                          00052200
      CALL BAD(1,0,'IS  ',IS)                                           00052300
      CALL BAD(1,0,'ISVF',ISVFL(IS))                                    00052400
      CALL BAD(1,1,'CSD ',CSD(IS))                                      00052500
      CALL BAD(-3,1,'SN  ',SN(1,IS))                                    00052600
  999 CONTINUE                                                          00052700
      GO TO 1                                                           00052800
  505 CONTINUE                                                          00052900
      CALL BAD(-3,1,'TE  ',TE)                                          00053000
    1 CONTINUE                                                          00053100
      RETURN                                                            00053200
      END                                                               00053300
**** SOURCE FILE : M0002734.V07   ***
*
C.....FORTRAN SUBROUTINE  ....APT240         8/68                 RN,PH A2400001
C.....FORTRAN SUBROUTINE             APT240...              4/16/68  GK A2400002
C                                                                       A2400010
C              FORTRAN SUBROUTINE APT240 (NUMDIM)                       A2400020
C                                                                       A2400030
C PURPOSE      TO SET THE IAFL FLAG FOR AMIND AND THE NUMDIM FLAG FOR   A2400040
C              APT201. THIS ROUTINE CALLED BY APT201 AND GO.            A2400050
C                FLAG SETTINGS                                          A2400060
C                 IAFL = -1  NORMAL CASE                                A2400070
C                 IAFL = 0   TOOL PERP. TO PS PLANE OR PARL. TO DS OR CSA2400080
C                 IAFL = 1   TA PARLEL SURF. LINE ELEMENT               A2400090
C                 NUMDIM = 0  USE 2D ROURES                             A2400100
C                 NUMDIM = 1  USE 3D ROUTES                             A2400110
C                                                                       A2400120
      SUBROUTINE APT240 (NUMDIM)                                        A2400150
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION(O-Z)            A2400151
C                                                                       A2400240
C                                                                       A2400250
      INCLUDE 'TOTAL.INC'                                               A2400251
      INCLUDE 'FXCOR.INC'                                               A2400541
      INCLUDE 'SV.INC'                                                  A2400837
      INCLUDE 'ZNUMBR.INC'                                              A2400933
      INCLUDE 'ISV.INC'                                                 A2401085
      INCLUDE 'IFXCOR.INC'                                              A2401245
      INCLUDE 'KNUMBR.INC'                                              A2401389
C                                                                       A2401430
C                                                                       A2401440
C    ALIGN J11 ON DOUBLE WORD BOUNDRY.                                  A2401443
      EQUIVALENCE  (J11,REAL8)                                          A2401446
C                                                                       A2401447
      INCLUDE 'BLANKCOM.INC'                                            A2401450
C                                                                       A2401460
      NUMDIM = K0                                                       A2401470
      IF (K2- MANTAX) 22,22,3                                           A2401480
   22 NUMDIM = K1                                                       A2401490
      GO TO 14                                                          A2401500
    3 L = LSV                                                           A2401510
      M = ICS + LSV1*(ICSCNT - K1)                                      A2401520
      N = IPS                                                           A2401530
      IF (ISFIDN(IPS).GT.K2) GO TO 7                                    A2401540
      IC = ICANON(IPS)                                                  A2401550
      CALL DOTF (TEMP,TA,CANON(IC))                                     A2401560
      IF(DABS(TEMP(1)).LT..9999999) GO TO 10                            A2401570
      IAFL(N) = 0                                                       A2401580
      ITSEG(N) = 1                                                      A2401590
   23 IT = ITSEG(N)                                                     A2401600
      TOOLHT(1,N) = TLHITE(IT)*TA(1)                                    A2401610
      TOOLHT(2,N) = TLHITE(IT)*TA(2)                                    A2401620
      TOOLHT(3,N) = TLHITE(IT)*TA(3)                                    A2401630
      TOOLWD(N) = CORRAD(IT)+RI(IT)                                     A2401640
      GO TO 10                                                          A2401650
    7 NUMDIM = K1                                                       A2401660
   10 IF (N.GE.M) GO TO 14                                              A2401670
      N = N+ L                                                          A2401680
      IF (N.EQ.ICS) L = LSV1                                            A2401690
      IC = ICANON(N)                                                    A2401700
      JSW = ISFIDN(N)                                                   A2401710
      IF(JSW.EQ.29.OR.JSW.EQ.30) GO TO 115                              A2401712
      IF((JSW.LE.0).OR.(JSW.GT.15)) GO TO 8010                          A2401720
      GO TO (110,110,111,111,115,112,112,112,115,112,113,115,115,115,   A2401730
     +       115), JSW                                                  A2401740
  110 CALL DOTF (TEMP,TA,CANON(IC))                                     A2401750
      IF(DABS(TEMP(1)).GT..0000001) GO TO 115                           A2401760
      IAFL(N) = 0                                                       A2401770
      GO TO 117                                                         A2401780
  111 CALL DOTF (TEMP,TA,CANON(IC+3))                                   A2401790
      IF (DABS(TEMP(1)).LT..9999999) GO TO 115                          A2401800
  116 IAFL(N) = K1                                                      A2401810
      GO TO 117                                                         A2401820
  115 NUMDIM = K1                                                       A2401830
      GO TO 10                                                          A2401840
  112 NUMDIM = K1                                                       A2401850
      IF(DABS(TA(3)).EQ.Z1) GO TO 116                                   A2401860
      GO TO 10                                                          A2401870
  113 CALL APT094(3,CANON(IC),J11)                                      A2401880
      J11=J11-1                                                         A2401881
      CALL DOTF(TEMP,TA,CANON(J11+8) )                                  A2401882
      IF (DABS(TEMP(1)).LT..9999999) GO TO 115                          A2401890
      NUMDIM = K1                                                       A2401900
      GO TO 116                                                         A2401910
  117 IF (ITLON(N).EQ.0) GO TO 120                                      A2401920
      IF(COSL(7)) 200,300,119                                           A2401930
  200 IAFL(N)=KM1                                                       A2401932
      GO TO 115                                                         A2401934
  300 CONTINUE                                                          A2401936
      IF (TCONT(5).NE.0.)GO TO 122                                      A2401940
      ITSEG(N) = 4                                                      A2401950
      GO TO 23                                                          A2401960
  120 ITSEG(N) = 1                                                      A2401970
      GO TO 23                                                          A2401980
  119 ITSEG(N) = 7                                                      A2401990
      GO TO 23                                                          A2402000
  122 ITSEG(N) = 5                                                      A2402010
      GO TO 23                                                          A2402020
 8010 CALL AERR (20101,'APT240  ')                                      A2402030
   14 RETURN                                                            A2402040
      END                                                               A2402050
**** SOURCE FILE : M0002738.V06   ***
*
C                                                                       ARL20001
C                                                                       ARL20002
C.....FORTRAN SUBROUTINE             ARLM2...               4/8/68   GK ARL20010
      SUBROUTINE ARLM2                                                  ARL20020
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              ARL20030
C                                                                       ARL20040
C                                                                       ARL20050
C                                                                       ARL20060
C                                                                       ARL20070
      EQUIVALENCE  (CCENTR(1),CNRMAL(1))                                ARL20342
      EQUIVALENCE    (ZMOSHN(1),TI(1))                                  ARL20348
      DIMENSION  CNRMAL(3),   ZMOSHN(3)                                 ARL20354
C                                                                       ARL20359
C                                                                       ARL20360
      INCLUDE 'TOTAL.INC'                                               ARL20362
      INCLUDE 'DSHAR5.INC'                                              ARL20364
      INCLUDE 'FXCOR.INC'                                               ARL20577
      INCLUDE 'SV.INC'                                                  ARL20799
      INCLUDE 'ZNUMBR.INC'                                              ARL20871
      INCLUDE 'ISV.INC'                                                 ARL20985
      INCLUDE 'IFXCOR.INC'                                              ARL21105
      INCLUDE 'KNUMBR.INC'                                              ARL21211
C                                                                       ARL21212
C                                                                       ARL21290
      DIMENSION  CANSTO(3), A(3,3), B(3,3)                              ARL21350
      DIMENSION DAXIS(3),CAXIS(3)                                       ARL21355
C                                                                       ARL21356
      INCLUDE 'BLANKCOM.INC'                                            ARL21360
C                                                                       ARL21370
      DOUBLE PRECISION TEMDIF                                           ARL21371
      DATA ZLIT1/.0001D0/                                               ARL21380
      TEK(1) = TE(1)                                                    ARL21390
      TEK(2)=TE(2)                                                      ARL21400
      TEK(3)=TE(3)                                                      ARL21410
      IS=ICS                                                            ARL21420
      I=ICANON(IDS)                                                     ARL21430
      DCENTR(1) = CANON(I)                                              ARL21440
      DCENTR(2)=CANON(I+1)                                              ARL21450
      DCENTR(3) = CANON(I+2)                                            ARL21460
      DAXIS(1)=CANON(I+3)                                               ARL21462
      DAXIS(2)=CANON(I+4)                                               ARL21464
      DAXIS(3)=CANON(I+5)                                               ARL21466
      DRDIUS=CANON(I+6)                                                 ARL21470
      I=ICANON(ICS)                                                     ARL21480
      CCENTR(1) = CANON(I)                                              ARL21490
      CCENTR(2)=CANON(I+1)                                              ARL21500
      CCENTR(3) = CANON(I+2)                                            ARL21510
      CAXIS(1)=CANON(I+3)                                               ARL21512
      CAXIS(2)=CANON(I+4)                                               ARL21514
      CAXIS(3)=CANON(I+5)                                               ARL21516
      CRDIUS=CANON(I+6)                                                 ARL21520
C                                                                       ARL21530
C     PRELIMINARY Z-CORRECTION CALCULATIONS                             ARL21540
C                                                                       ARL21550
      IFROT = 0                                                         ARL21560
      IDONE = 0                                                         ARL21570
      I = ICANON(IPS)                                                   ARL21610
      TEM(1)=TA(1)*CANON(I)+TA(2)*CANON(I+1)+TA(3)*CANON(I+2)           ARL21620
      FLIP=Z1                                                           ARL21640
      IF(TEM(1).LT.Z0)FLIP=-Z1                                          ARL21650
      CANSTO(1)=CANON(I)*FLIP                                           ARL21670
      CANSTO(2) = CANON(I+1)*FLIP                                       ARL21680
      CANSTO(3) = CANON(I+2)*FLIP                                       ARL21690
      DVALUI=TE(1)*CANSTO(1)+TE(2)*CANSTO(2)+TE(3)*CANSTO(3)            ARL21700
      DOPSTA=TA(1)*CANSTO(1)+TA(2)*CANSTO(2)+TA(3)*CANSTO(3)            ARL21710
C                                                                       ARL21730
C     DETERMINE IF ROTATION NECCESSARY. IF SO, ROTATE.                  ARL21740
C                                                                       ARL21750
      IF(DABS(TA(3)).EQ.Z1) GO TO  90                                   ARL21760
      IFROT = 1                                                         ARL21770
C                                                                       ARL21780
C     ROTATION MATRIX  CONSTRUCTION.                                    ARL21790
C                                                                       ARL21800
      SINZTA=DSQRT(TA(1)*TA(1)+TA(2)*TA(2))                             ARL21810
      COSXTA=TA(1)/SINZTA                                               ARL21820
      SINXTA=TA(2)/SINZTA                                               ARL21830
      A(1,1) =TA(3)*COSXTA                                              ARL21840
      A(2,1) =TA(3)*SINXTA                                              ARL21850
      A(3,1) =-SINZTA                                                   ARL21860
      A(1,2) =-SINXTA                                                   ARL21870
      A(2,2) =COSXTA                                                    ARL21880
      A(3,2) =0.0                                                       ARL21890
      A(1,3) =TA(1)                                                     ARL21900
      A(2,3) =TA(2)                                                     ARL21910
      A(3,3) =TA(3)                                                     ARL21920
      DO 10 I=1,3                                                       ARL21930
      DO 10 J=1,3                                                       ARL21940
 10   B(I,J) = A(J,I)                                                   ARL21950
C                                                                       ARL21960
C     ROTATIONS DEPEND ON SURFACE TYPE                                  ARL21970
C                                                                       ARL21980
11    IF(JBR-2)12,14,16                                                 ARL21990
C                                                                       ARL22000
12    CALL ROTAT(CCENTR,A)                                              ARL22010
      IF(ISFIDN(ICS).GT.K2) CALL ROTAT(CAXIS,A)                         ARL22018
      CALL ROTAT(DCENTR,A)                                              ARL22019
      CALL ROTAT(DAXIS,A)                                               ARL22020
      I=ICANON(IDS)                                                     ARL22021
      CANON(I )=DCENTR(1)                                               ARL22022
      CANON(I+1)=DCENTR(2)                                              ARL22023
      CANON(I+2)=DCENTR(3)                                              ARL22024
      CANON(I+3)=DAXIS(1)                                               ARL22025
      CANON(I+4)=DAXIS(2)                                               ARL22026
      CANON(I+5)=DAXIS(3)                                               ARL22027
      CALL ROTAT(TEK,A)                                                 ARL22030
      GO TO 20                                                          ARL22040
C                                                                       ARL22050
14    CALL ROTAT(CCENTR,A)                                              ARL22060
      CALL ROTAT(CAXIS,A)                                               ARL22062
      CALL ROTAT(SN(1,IDS),A)                                           ARL22070
      GO TO 20                                                          ARL22080
C                                                                       ARL22090
16    CALL ROTAT(CNRMAL,A)                                              ARL22100
C                                                                       ARL22110
20    CALL ROTAT(TE,A)                                                  ARL22120
      I=ICANON(ICS)                                                     ARL22121
      CANON(I) = CNRMAL(1)                                              ARL22122
      CANON(I+1) = CNRMAL(2)                                            ARL22123
      CANON(I+2) = CNRMAL(3)                                            ARL22124
      CANON(I+3)=CAXIS(1)                                               ARL22125
      CANON(I+4)=CAXIS(2)                                               ARL22126
      CANON(I+5)=CAXIS(3)                                               ARL22127
      IF(IDONE.NE.1)GO TO 24                                            ARL22130
      ASSIGN 24 TO IRETN                                                ARL22140
      GO TO 1341                                                        ARL22142
24    CALL ROTAT(TI,A)                                                  ARL22150
C                                                                       ARL22160
C     DO NECCESSARY INVERSE ROTATIONS AND Z-CORRECTIONS                 ARL22170
C                                                                       ARL22180
      IF(IDONE.NE.1) GO TO 90                                           ARL22190
      CALL ROTAT(TN(1,ICS),A)                                           ARL22200
      CALL ROTAT(TP(1,ICS),A)                                           ARL22210
      IF(DOPSTA.EQ.Z0)GO TO 1410                                        ARL22220
      PROJ=TN(1,ICS)*CANSTO(1)+TN(2,ICS)*CANSTO(2)+TN(3,ICS)*CANSTO(3)  ARL22230
      PROK=TP(1,ICS)*CANSTO(1)+TP(2,ICS)*CANSTO(2)+TP(3,ICS)*CANSTO(3)  ARL22232
      PROJ=(PROJ-DVALUI)/DOPSTA                                         ARL22234
      PROK=(PROK-DVALUI)/DOPSTA                                         ARL22236
      DO 29 I=1,3                                                       ARL22237
      TN(I,ICS)=TN(I,ICS)+PROJ*(-TA(I))                                 ARL22239
29    TP(I,ICS)=TP(I,ICS)+PROK*(-TA(I))                                 ARL22240
      GO TO 1410                                                        ARL22245
C                                                                       ARL22250
90    TEN=DSQRT(TI(1)*TI(1)+TI(2)*TI(2))                                ARL22260
      ZMOSHN(1)=TI(1)/TEN                                               ARL22270
      ZMOSHN(2)=TI(2)/TEN                                               ARL22280
      ZMOSHN(3)=Z0                                                      ARL22290
C                                                                       ARL22300
C     BEGIN CUTTER OFFSET CALCULATIONS                                  ARL22310
C                                                                       ARL22320
      TEMP(7)=CUTDAT(1)                                                 ARL22330
      IF(ISFTYP(IDS).EQ.K3)TEMP(7)=Z0                                   ARL22340
      JSW=ISFTYP(IS)                                                    ARL22370
      TEMP(20)=IFAR(IS)-K1                                              ARL22380
      RADNO=(IFAR(IS)-K1)/K2                                            ARL22390
      IFAR(IS)=K2-(IFAR(IS)-K2*(IFAR(IS)/K2))                           ARL22400
      GO TO (140,140,170,130),JSW                                       ARL22410
  130 RADNO=TEMP(20)                                                    ARL22420
      OFFSET=TEMP(7)                                                    ARL22430
      GO TO 180                                                         ARL22440
140   OFFSET=CUTDAT(1)                                                  ARL22450
      IF(IFAR(IS).EQ.JSW)OFFSET=-OFFSET                                 ARL22460
      GO TO 180                                                         ARL22470
  170 OFFSET=Z0                                                         ARL22500
  180 IF(JBR-K2)190,810,1310                                            ARL22510
C                                                                       ARL22520
C...  2D ROUTE--CIRCLE DS,CIRCLE OR LINE CS                             ARL22530
C                                                                       ARL22540
190   RZERO(1)=DCENTR(1)-TE(1)                                          ARL22560
      RZERO(2)=DCENTR(2)-TE(2)                                          ARL22570
      RZEROL = DSQRT(RZERO(1)**2+RZERO(2)**2)                           ARL22580
      IF (RZEROL.LE.Z1EM6) GO TO 1410                                   ARL22590
      TEMP(15)=DSIGN(Z1,RZERO(1)*TI(2)-RZERO(2)*TI(1))                  ARL22600
      TEMP(1) = Z1                                                      ARL22610
      TEMP(2)=Z1                                                        ARL22620
      TEMP(5)=DABS(OFFSET)                                              ARL22630
      TEMP(6)=-PAST(IS)*TEMP(15)                                        ARL22640
      IF (RZEROL.GE.DRDIUS) GO TO 250                                   ARL22650
      IF(ISFTYP(IS).EQ.K4)OFFSET=-OFFSET                                ARL22660
      DIF=DRDIUS-TEMP(7)-DABS(TAU2(IDS))                                ARL22680
      TEMDIF=DRDIUS-TEMP(7)                                             ARL22681
      IF(DIF)1380,1380,260                                              ARL22690
  250 DIF=DRDIUS+TEMP(7)+TAU1(IDS)                                      ARL22700
      TEMDIF=DRDIUS+TEMP(7)                                             ARL22701
  260 IF(ISFIDN(IS).GT.K2)GO TO 440                                     ARL22710
C                                                                       ARL22720
C     LINE  CS, CYLINDER DS.                                            ARL22730
C                                                                       ARL22740
      TP(1,IS) = DCENTR(1)                                              ARL22750
      TP(2,IS)=DCENTR(2)                                                ARL22760
      TP(3,IS)=TE(3)                                                    ARL22770
      TN(1,IS)=CNRMAL(1)                                                ARL22780
      TN(2,IS)=CNRMAL(2)                                                ARL22790
      TN(3,IS)=Z0                                                       ARL22800
      ASSIGN 270 TO LRETN                                               ARL22810
      GO TO 1420                                                        ARL22815
270   IF(S(IS).GE.Z0)GO TO 280                                          ARL22820
      S(IS)=-S(IS)                                                      ARL22830
      TN(1,IS)=-TN(1,IS)                                                ARL22840
      TN(2,IS)=-TN(2,IS)                                                ARL22850
  280 IF(ISFTYP(IS).NE.K4)GO TO 300                                     ARL22860
      IF(DABS(S(IS)-DRDIUS)-TAU(IS).GE.Z0)GO TO 1370                    ARL22870
      TEN=S(IS)+OFFSET                                                  ARL22875
      FIPNT(1)=TP(1,IS)+TEN*TN(1,IS)                                    ARL22880
      FIPNT(2)=TP(2,IS)+TEN*TN(2,IS)                                    ARL22890
      GO TO 1030                                                        ARL22900
 300  TEMP(9) = S(IS)+RZERO(1)*TN(1,IS)+RZERO(2)*TN(2,IS)               ARL22910
      IF (TEMP(9).LT.Z0) TEMP(2) = -Z1                                  ARL22920
      TEMP(10)=S(IS)-TEMP(5)-Z1EM5                                      ARL22930
      IF (TEMP(10).GE.DIF) GO TO 1390                                   ARL22940
      IF((TEMP(10)+DIF).LE.Z0)GO TO 1380                                ARL22950
      IF((DIF-S(IS)-TEMP(5)).GT.ZLIT1)GO TO 360                         ARL22960
      RADNO=TEMP(20)                                                    ARL22970
      GO TO 430                                                         ARL22980
  360 IF ((DABS(TEMP(9))-TEMP(5)).GT.Z1EM5) GO TO 420                   ARL22990
      IF (PAST(IS).GE.Z0) GO TO 390                                     ARL23000
      IF ((DABS(TEMP(9))+Z1EM5).GT.TEMP(5)) GO TO 420                   ARL23010
  390 ZDOTC = RZERO(1)*TN(2,IS)-RZERO(2)*TN(1,IS)                       ARL23020
      IF(DABS(ZDOTC)-Z1EM7.GT.Z0) GO TO 410                             ARL23030
      TEMP(1) = PAST(IS)*TEMP(2)                                        ARL23040
      GO TO 420                                                         ARL23050
  410 TEMP(1) = TEMP(2)*TEMP(6)*DSIGN(Z1,ZDOTC)                         ARL23060
  420 TEMP(6)=-TEMP(1)*TEMP(2)*TEMP(15)                                 ARL23070
      IF(IFAR(IS).EQ.K2)TEMP(6)=-TEMP(6)                                ARL23080
  430 TEMP(3)=S(IS)+TEMP(6)*TEMP(15)*PAST(IS)*TEMP(5)                   ARL23100
      TEMP(4)=DSQRT(DABS(TEMDIF**2-TEMP(3)**2))                         ARL23110
      FIPNT(1)=TP(1,IS)+TEMP(3)*TN(1,IS)+TEMP(6)*TEMP(4)*TN(2,IS)       ARL23120
      FIPNT(2)=TP(2,IS)+TEMP(3)*TN(2,IS)-TEMP(6)*TEMP(4)*TN(1,IS)       ARL23130
      GO TO 1030                                                        ARL23140
C                                                                       ARL23150
C     CYLINDER CS, CYLINDER DS.                                         ARL23160
C                                                                       ARL23170
  440 CEND(1) = CCENTR(1) - DCENTR(1)                                   ARL23180
      CEND(2)=CCENTR(2)-DCENTR(2)                                       ARL23190
      CTOCL = DSQRT(CEND(1)**2+CEND(2)**2)                              ARL23200
      IF(CTOCL.LE.Z1EM7) GO TO 1360                                     ARL23210
      CEND(1)=CEND(1)/CTOCL                                             ARL23220
      CEND(2)=CEND(2)/CTOCL                                             ARL23230
      IF(JSW.NE.K4) GO TO 520                                           ARL23240
      IF ((CTOCL-CRDIUS+Z1EM3).GE.DRDIUS) GO TO 800                     ARL23250
      IF (DABS(CTOCL+DRDIUS-CRDIUS).LT.Z1EM3) GO TO 500                 ARL23260
      IF(DABS(CTOCL+CRDIUS-DRDIUS)-Z1EM3) 510,1370,1370                 ARL23270
  500 TEMP(1) = -Z1                                                     ARL23280
510   D=(DRDIUS+OFFSET)*TEMP(1)                                         ARL23285
      FIPNT(1)=DCENTR(1)+D*CEND(1)                                      ARL23290
      FIPNT(2)=DCENTR(2)+D*CEND(2)                                      ARL23300
      GO TO 1030                                                        ARL23310
  520 TEMP(9)=TEMDIF-CTOCL                                              ARL23320
      TEMP(11)=TEMP(5)                                                  ARL23330
      IF(DABS(TEMP(9))-CRDIUS-TEMP(11)) 530,1390,1390                   ARL23340
  530 TEMP(10)=CTOCL-CRDIUS                                             ARL23350
      IF(TEMP(10)+TEMDIF+TEMP(5)+Z1EM5) 1390,1390,540                   ARL23360
  540 IF(DABS(TEMP(10)+TEMDIF).GT.TEMP(11)) GO TO 570                   ARL23370
      IF (TEMP(10).GE.Z0) GO TO 1380                                    ARL23380
      TEMP(1) = -Z1                                                     ARL23390
  570 IF (DABS(CRDIUS-TEMP(9)).GT.TEMP(11)) GO TO 600                   ARL23400
      IF (TEMP(1)) 1380,1380,720                                        ARL23410
  600 IF(DABS(TEMP(10)-TEMDIF).GT.TEMP(11)) GO TO 620                   ARL23420
      IF(TEMP(1)) 1380,1380,720                                         ARL23430
  620 IF(TEMP(1)) 740,720,630                                           ARL23440
 630  TEMP(4)=DSQRT((TE(1)-CCENTR(1))**2+(TE(2)-CCENTR(2))**2)-CRDIUS   ARL23450
      IF (TEMP(4).LT.Z0) TEMP(2) = -Z1                                  ARL23460
      IF(DABS(TEMP(4)).GT.TEMP(11)) GO TO 700                           ARL23470
      ZDOTC = RZERO(1)*CEND(2) - RZERO(2)*CEND(1)                       ARL23480
      IF (ZDOTC.EQ.Z0) GO TO 1380                                       ARL23490
      IF (PAST(IS).GE.Z0) GO TO 690                                     ARL23500
      IF(DABS(TEMP(4))-TEMP(5)+ZLIT1) 690,700,700                       ARL23510
  690 TEMP(1) = TEMP(2)*TEMP(6)*DSIGN(Z1,ZDOTC)                         ARL23520
 700  TEMP(6) =-TEMP(1)*TEMP(2)*TEMP(15)                                ARL23530
      IF(IFAR(IS).EQ.K2)TEMP(6)=-TEMP(6)                                ARL23540
      IF(PAST(IS)*TEMP(15)*TEMP(6))730,1380,750                         ARL23560
  720 RADNO=TEMP(20)                                                    ARL23570
  730 HAFDIA=CRDIUS+TEMP(11)                                            ARL23580
      GO TO 760                                                         ARL23590
  740 RADNO=TEMP(20)                                                    ARL23600
      TEMP(6)=-TEMP(6)                                                  ARL23610
  750 HAFDIA=CRDIUS-TEMP(5)                                             ARL23620
  760 DSMOV=(CTOCL**2+TEMDIF**2-HAFDIA**2)/(Z2*CTOCL)                   ARL23630
      TEMP(1)=TEMDIF**2-DSMOV**2                                        ARL23640
      IF(TEMP(1).GE.Z0) GO TO 790                                       ARL23650
      IER=23908                                                         ARL23660
      GO TO 1400                                                        ARL23670
790   TEN=DSQRT(TEMP(1))*TEMP(6)                                        ARL23680
      FIPNT(1)=DCENTR(1)+DSMOV*CEND(1)+TEN*CEND(2)                      ARL23690
      FIPNT(2)=DCENTR(2)+DSMOV*CEND(2)-TEN*CEND(1)                      ARL23700
      GO TO 1030                                                        ARL23710
  800 IF(CTOCL-CRDIUS-DRDIUS-Z1EM3) 510,510,1370                        ARL23720
C                                                                       ARL23730
C     LINE DS, CYLINDER CS                                              ARL23740
C                                                                       ARL23750
  810 CEND(1) = CCENTR(1) - TE(1)                                       ARL23760
      CEND(2)=CCENTR(2)-TE(2)                                           ARL23770
      CENLEN = DSQRT(CEND(1)**2+CEND(2)**2)                             ARL23780
      S(IS) = CEND(1)*ZMOSHN(1)+CEND(2)*ZMOSHN(2)                       ARL23790
      DSMOV=CEND(1)*SN(1,IDS)+CEND(2)*SN(2,IDS)                         ARL23800
      IF(JSW.EQ.K4) GO TO 950                                           ARL23810
      OFFSET=DABS(OFFSET)                                               ARL23820
      IF(S(IS).LE.Z0)OFFSET=-OFFSET                                     ARL23830
      IF(JSW.EQ.K2)GO TO 900                                            ARL23860
      IF ((CENLEN-OFFSET-CRDIUS).LT.TAU1(IS)) GO TO 880                 ARL23870
      IF(IFAR(IS).EQ.K2)GO TO 880                                       ARL23880
      ZIGN=-Z1                                                          ARL23890
  870 DIF=CRDIUS+DABS(OFFSET)                                           ARL23900
      GO TO 990                                                         ARL23910
  880 ZIGN=Z1                                                           ARL23920
  890 DIF=CRDIUS-DABS(OFFSET)                                           ARL23930
      GO TO 990                                                         ARL23940
  900 IF ((CENLEN+OFFSET-CRDIUS).LT.TAU1(IS)) GO TO 940                 ARL23950
      IF (S(IS).LE.Z0) GO TO 1390                                       ARL23960
      IF(IFAR(IS).EQ.K2) GO TO 940                                      ARL23970
      IF(DABS(DSMOV)+CUTDAT(1)-CRDIUS-TAU2(IS)) 930,930,940             ARL23980
  930 ZIGN=-Z1                                                          ARL23990
      GO TO 890                                                         ARL24000
  940 ZIGN=Z1                                                           ARL24010
      GO TO 870                                                         ARL24020
  950 IF (S(IS).LE.Z0) GO TO 1380                                       ARL24030
      DSMOV=DSMOV+OFFSET                                                ARL24040
      IF (DABS(CRDIUS-DABS(DSMOV+S(IDS))).GT.TAU(IS)) GO TO 1370        ARL24050
      TEN=OFFSET-DSIGN(Z1,DSMOV)*CRDIUS                                 ARL24060
      FIPNT(1)=CCENTR(1)+TEN*SN(1,IDS)                                  ARL24070
      FIPNT(2)=CCENTR(2)+TEN*SN(2,IDS)                                  ARL24080
      GO TO 1300                                                        ARL24090
  990 TEMP(1)=DIF**2-DSMOV**2                                           ARL24100
      IF (TEMP(1)) 1380,1010,1000                                       ARL24110
 1000 S(IS)=S(IS)+ZIGN*DSQRT(TEMP(1))                                   ARL24120
 1010 IF(S(IS)+Z1EM5)1390,1390,1020                                     ARL24130
 1020 FIPNT(1) = TE(1)+S(IS)*ZMOSHN(1)                                  ARL24140
      FIPNT(2) = TE(2)+S(IS)*ZMOSHN(2)                                  ARL24150
      GO TO 1300                                                        ARL24160
C                                                                       ARL24170
C     COMPUTE INTERMEDIATE CUT VECTORS AROUND CYLINDRICAL DS            ARL24180
C                                                                       ARL24190
 1030 DIFOUT=DIF                                                        ARL24200
      RONE=DABS(DIF-TAU(IDS))                                           ARL24210
      COSTH=RONE/RZEROL                                                 ARL24220
      TEMP(1)=Z1-COSTH**2                                               ARL24230
      IF(TEMP(1)+Z1EM5)1350,1350,1050                                   ARL24240
 1050 SINTH = DSQRT(DABS(TEMP(1)))                                      ARL24250
      HCHORD=SINTH*RZEROL                                               ARL24260
      CHORD=Z2*HCHORD                                                   ARL24270
      DNMOT(1)=RZERO(1)/RZEROL                                          ARL24280
      DNMOT(2)=RZERO(2)/RZEROL                                          ARL24290
      ZIGN=Z1                                                           ARL24300
      TANMOT(1)=DNMOT(2)                                                ARL24310
      TANMOT(2)=-DNMOT(1)                                               ARL24320
      IF(TANMOT(1)*TI(1)+TANMOT(2)*TI(2))1070,1080,1080                 ARL24330
 1070 TANMOT(1)=-TANMOT(1)                                              ARL24340
      TANMOT(2)=-TANMOT(2)                                              ARL24350
      ZIGN=-Z1                                                          ARL24360
 1080 TE(1)=TEK(1)+CHORD*(SINTH*DNMOT(1)+COSTH*TANMOT(1))               ARL24370
      TE(2)=TEK(2)+CHORD*(SINTH*DNMOT(2)+COSTH*TANMOT(2))               ARL24380
      D2(1)=TE(1)-TEK(1)                                                ARL24390
      D2(2)=TE(2)-TEK(2)                                                ARL24400
      D2(3)=Z0                                                          ARL24410
      D=DSQRT(D2(1)*D2(1)+D2(2)*D2(2))                                  ARL24420
      IF(D.LE.Z0)GO TO 1095                                             ARL24430
      D2(1)=D2(1)/D                                                     ARL24432
      D2(2)=D2(2)/D                                                     ARL24434
      GO TO 1100                                                        ARL24436
1095  D2(1)=ZMOSHN(1)                                                   ARL24440
      D2(2) = ZMOSHN(2)                                                 ARL24450
      HCHORD=Z0                                                         ARL24460
 1100 TEMP(10) = DSQRT(DIFOUT**2-RONE**2)                               ARL24470
      DELMOT(1)=TEMP(10)-HCHORD                                         ARL24480
      TE(1)=TE(1)+DELMOT(1)*D2(1)                                       ARL24490
      TE(2)=TE(2)+DELMOT(1)*D2(2)                                       ARL24500
      STVEC(1)=FIPNT(1)-DCENTR(1)                                       ARL24510
      STVEC(2)=FIPNT(2)-DCENTR(2)                                       ARL24520
      TEMP(1)=DSQRT(STVEC(1)**2+STVEC(2)**2)                            ARL24530
      TEMP(2)=STVEC(1)/TEMP(1)                                          ARL24540
      TEMP(3)=STVEC(2)/TEMP(1)                                          ARL24550
      IF (RONE.LE.Z1EM5) GO TO 1250                                     ARL24560
      TEMP(1)=TEMP(2)*DNMOT(1)+TEMP(3)*DNMOT(2)                         ARL24570
      TEMP(8) = ZMOSHN(1)*STVEC(1)+ZMOSHN(2)*STVEC(2)                   ARL24580
      IF(DABS(TEMP(1))-Z1EM7.LT.Z0) GO TO 1150                          ARL24590
      TEMP(11)=Z1-TEMP(1)**2                                            ARL24600
      IF (TEMP(11).LT.Z0) TEMP(11) = Z0                                 ARL24610
      ZGAMMA=DATAN(DSQRT(TEMP(11))/TEMP(1))                             ARL24620
      IF(TEMP(1))1160,1190,1190                                         ARL24630
 1150 ZGAMMA= -PI/Z2                                                    ARL24640
 1160 IF(TEMP(8)-Z1EM7) 1180,1180,1170                                  ARL24650
 1170 PSI=-ZGAMMA                                                       ARL24660
      GO TO 1220                                                        ARL24670
 1180 PSI = Z2*PI + ZGAMMA                                              ARL24680
      GO TO 1220                                                        ARL24690
 1190 IF (TEMP(8).LT.Z0) GO TO 1210                                     ARL24700
      PSI = PI - ZGAMMA                                                 ARL24710
      GO TO 1220                                                        ARL24720
 1210 PSI = PI + ZGAMMA                                                 ARL24730
 1220 TEMP(1) = DATAN (TEMP(10)/RONE)                                   ARL24740
      THETA = TEMP(1) + DATAN (SINTH/COSTH)                             ARL24750
      ALPHA = Z2*TEMP(1)                                                ARL24760
      PSI=PSI+Z2*PI*RADNO                                               ARL24770
      IF(PSI-THETA)1230,1240,1240                                       ARL24780
 1230 IF(DSQRT((FIPNT(1)-TEK(1))**2+(FIPNT(2)-TEK(2))**2)-Z2*EPS1(IS))  ARL24790
     1    1260,1300,1300                                                ARL24800
 1240 IF(PSI-THETA-ALPHA)1250,1270,1270                                 ARL24810
 1250 CONTINUE                                                          ARL24820
      ZZ = Z1                                                           ARL24830
      IA = K2                                                           ARL24840
      IB = K1                                                           ARL24850
      IF ((TEMP(2)*DNMOT(1)+TEMP(3)*DNMOT(2))-Z1) 1251,1252,1251        ARL24860
 1251 ZZ = -Z1                                                          ARL24870
      IA = K1                                                           ARL24880
      IB = K2                                                           ARL24890
 1252 CONTINUE                                                          ARL24900
      TEMP(1) = TEMP(2) + ZZ*DNMOT(1)                                   ARL24910
      TEMP(2) = TEMP(3) + ZZ*DNMOT(2)                                   ARL24920
      TEMP(3)=Z0                                                        ARL24930
      CALL VNORM(TEMP(1),TEMP(1))                                       ARL24940
C     CALCULATE TOOL POSITION AFTER FIRST CUT AS BEING MIDWAY BETWEEN   ARL24950
C     STARTING POSITION AND FINAL POINT                                 ARL24960
      TE(1) = DIFOUT*TEMP(IA)+DCENTR(1)                                 ARL24970
      TE(2) = -ZZ*DIFOUT*TEMP(IB)+DCENTR(2)                             ARL24980
      ASSIGN 1300 TO JRETN                                              ARL24985
      IF (IA - K1) 1255,1255,1253                                       ARL24990
 1253 IF (TE(1)*ZMOSHN(1) + TE(2)*ZMOSHN(2)) 1254,1255,1255             ARL25000
 1254 TE(1) = -TE(1)                                                    ARL25010
      TE(2) = -TE(2)                                                    ARL25020
C                                                                       ARL25030
C     INTERMEDIATE TE OUTPUT. INVERSE ROTATE + Z-CORRECT.               ARL25040
C                                                                       ARL25050
1257  TEK(3)=TE(3)                                                      ARL25051
1258  TEK(1)=TE(1)                                                      ARL25052
      TEK(2)=TE(2)                                                      ARL25053
1255  IF(IFROT.EQ.1) CALL ROTAT(TE,B)                                   ARL25060
      ASSIGN 1256 TO IRETN                                              ARL25070
      GO TO 1341                                                        ARL25072
1256  CALL ATAPE                                                        ARL25080
      GO TO JRETN,(1271,1281,1300)                                      ARL25090
 1260 PSI = PSI+Z2*PI                                                   ARL25100
 1270 PSI=PSI-THETA                                                     ARL25110
      ASSIGN 1271 TO JRETN                                              ARL25111
      GO TO 1257                                                        ARL25112
1271  NPTS=(PSI/ALPHA)+Z1                                               ARL25130
      ZNPTS=NPTS                                                        ARL25140
      THETA=Z5EM1*PSI/ZNPTS                                             ARL25150
      COSTH=DCOS(THETA)                                                 ARL25160
      SINTH=DSIN(THETA)                                                 ARL25170
      CHORD=Z2*DIFOUT*SINTH                                             ARL25180
      EL1=CHORD*COSTH                                                   ARL25190
      EL2=CHORD*SINTH                                                   ARL25200
      DNMOT(1)=DCENTR(1)-TEK(1)                                         ARL25210
      DNMOT(2)=DCENTR(2)-TEK(2)                                         ARL25220
      TEMP(1)=DSQRT(DNMOT(1)**2+DNMOT(2)**2)                            ARL25230
      DNMOT(1)=DNMOT(1)/TEMP(1)                                         ARL25240
      DNMOT(2)=DNMOT(2)/TEMP(1)                                         ARL25250
 1280 TANMOT(1)=DNMOT(2)*ZIGN                                           ARL25260
      TANMOT(2)=-DNMOT(1)*ZIGN                                          ARL25270
      DELMOT(1) = EL1*TANMOT(1) + EL2*DNMOT(1)                          ARL25280
      DELMOT(2) = EL1*TANMOT(2) + EL2*DNMOT(2)                          ARL25290
      DNMOT(1)=(DCENTR(1)-TEK(1)-DELMOT(1))/TEMP(1)                     ARL25300
      DNMOT(2)=(DCENTR(2)-TEK(2)-DELMOT(2))/TEMP(1)                     ARL25310
      TE(1)=DCENTR(1)-DIFOUT*DNMOT(1)                                   ARL25320
      TE(2)=DCENTR(2)-DIFOUT*DNMOT(2)                                   ARL25330
      TE(3)=TEK(3)                                                      ARL25331
      NPTS=NPTS-K1                                                      ARL25340
      ASSIGN 1281 TO JRETN                                              ARL25342
      GO TO 1258                                                        ARL25344
C                                                                       ARL25350
C     INTERMEDIATE TE OUTPUT. INVERSE ROTATE + Z-CORRECT.               ARL25360
C                                                                       ARL25370
1281  IF(NPTS-K1)1300,1300,1280                                         ARL25410
 1300 TE(1)=FIPNT(1)                                                    ARL25440
      TE(2)=FIPNT(2)                                                    ARL25450
      TN(3,ICS) = 0.                                                    ARL25460
      IF (ISFIDN(IS).GT.K2) GO TO 1301                                  ARL25470
      TN(1,ICS) = CCENTR(1)                                             ARL25480
      TN(2,ICS) = CCENTR(2)                                             ARL25490
      GO TO 1302                                                        ARL25500
 1301 TN(1,ICS) = CCENTR(1) - TE(1)                                     ARL25510
      TN(2,ICS) = CCENTR(2) - TE(2)                                     ARL25520
      CALL VNORM(TN(1,ICS),TN(1,ICS))                                   ARL25530
 1302 IF (ITLON(ICS)) 1305,1304,1305                                    ARL25540
 1304 TP(1,ICS) = TE(1)                                                 ARL25550
      TP(2,ICS) = TE(2)                                                 ARL25560
      TP(3,ICS) = TE(3)                                                 ARL25570
      GO TO 1306                                                        ARL25580
 1305 TP(1,ICS) = TE(1) + TOOLWD(ICS)*TN(1,ICS)                         ARL25590
      TP(2,ICS) = TE(2) + TOOLWD(ICS)*TN(2,ICS)                         ARL25600
      TP(3,ICS) = TE(3) + TOOLHT(3,ICS)                                 ARL25610
C                                                                       ARL25620
C     SYSTEM INVERSE ROTATION + ZCORRECTION                             ARL25630
C                                                                       ARL25640
 1306 IF(IFROT.EQ.K0) GO TO 1308                                        ARL25650
      IDONE = 1                                                         ARL25660
      DO 1307 I=1,3                                                     ARL25670
      DO 1307 J=1,3                                                     ARL25680
 1307 A(I,J) = B(I,J)                                                   ARL25690
      GO TO 11                                                          ARL25700
1308  ASSIGN 1410 TO IRETN                                              ARL25720
      GO TO 1341                                                        ARL25730
C                                                                       ARL25740
C     LINE DS, LINE CS                                                  ARL25750
C                                                                       ARL25760
1310  TN(1,IS)=ZMOSHN(1)                                                ARL25780
      TN(2,IS)= ZMOSHN(2)                                               ARL25790
      TN(3,IS)= Z0                                                      ARL25800
      TP(1,IS)=TE(1)                                                    ARL25810
      TP(2,IS)=TE(2)                                                    ARL25820
      TP(3,IS)=TE(3)                                                    ARL25830
      ASSIGN 1320 TO LRETN                                              ARL25840
      GO TO 1420                                                        ARL25850
1320  IF(ISFTYP(IS).EQ.K3)GO TO 1010                                    ARL25860
      DINC = CUTDAT(1)/DABS(CNRMAL(1)*ZMOSHN(1)+CNRMAL(2)*ZMOSHN(2))    ARL25870
      IF(ISFTYP(IS).NE.K1) GO TO 1340                                   ARL25880
      S(IS)=S(IS)-DINC                                                  ARL25890
      GO TO 1010                                                        ARL25900
 1340 S(IS)=S(IS)+DINC                                                  ARL25910
      GO TO 1010                                                        ARL25920
1341  IF(DOPSTA.EQ.Z0)GO TO 1345                                        ARL25921
      PROJ=TE(1)*CANSTO(1)+TE(2)*CANSTO(2)+TE(3)*CANSTO(3)              ARL25922
      PROJ=(PROJ-DVALUI)/DOPSTA                                         ARL25923
      TE(1)=TE(1)-PROJ*TA(1)                                            ARL25924
      TE(2)=TE(2)-PROJ*TA(2)                                            ARL25925
      TE(3)=TE(3)-PROJ*TA(3)                                            ARL25926
1345  GO TO IRETN,(24,1256,1410)                                        ARL25927
 1350 IER= 23901                                                        ARL25930
      GO TO 1400                                                        ARL25940
 1360 IER= 23902                                                        ARL25950
      GO TO 1400                                                        ARL25960
 1370 IER= 23903                                                        ARL25970
      GO TO 1400                                                        ARL25980
 1380 IER= 23904                                                        ARL25990
      GO TO 1400                                                        ARL26000
 1390 IER= 23905                                                        ARL26010
 1400 CALL AERR(IER,'ARLM2   ')                                         ARL26020
 1410 ICL=K3                                                            ARL26030
      CALL ATAPE                                                        ARL26040
      GO TO 1470                                                        ARL26050
1420  IC=ICANON(IS)                                                     ARL26060
      IF(ISFIDN(IS).GT.K2)GO TO 1430                                    ARL26070
C                                                                       ARL26080
C     ***PLANES AND LINES***                                            ARL26090
C                                                                       ARL26100
      DK=CANON(IC+3)-CANON(IC)*TP(1,IS)-CANON(IC+1)*TP(2,IS)            ARL26110
     1   -CANON(IC+2)*TP(3,IS)                                          ARL26120
      DOT=CANON(IC)*TN(1,IS)+CANON(IC+1)*TN(2,IS)+CANON(IC+2)*TN(3,IS)  ARL26130
C--- CII UPDATE TO DIAGNOZE NON-PARALLEL DRIVE-CHECK SURFACE            ARL26135
      IF(DABS(DOT).LT.Z1EM7) GO TO 1390                                 ARL26136
      S(IS)=DK/DOT                                                      ARL26140
      GO TO 1460                                                        ARL26150
C                                                                       ARL26160
C     ***CIRCLES AND CYLINDERS***                                       ARL26170
C                                                                       ARL26180
1430  TEM(1)=TP(1,IS)-CANON(IC)                                         ARL26190
      TEM(2)=TP(2,IS)-CANON(IC+1)                                       ARL26200
      DK=DSQRT(TEM(1)*TEM(1)+TEM(2)*TEM(2))                             ARL26220
      IF(DK.GE..0001)GO TO 1440                                         ARL26230
      SNL(1,1)=TN(1,IS)                                                 ARL26240
      SNL(2,1)=TN(2,IS)                                                 ARL26250
      V=1.0                                                             ARL26260
      GO TO 1450                                                        ARL26270
1440  SNL(1,1)=TEM(1)/DK                                                ARL26280
      SNL(2,1)=TEM(2)/DK                                                ARL26290
      DK=-SNL(1,1)*TEM(1)-SNL(2,1)*TEM(2)                               ARL26300
      V=DSIGN(Z1,DK)                                                    ARL26310
1450  SP(1,IS)=V*SNL(1,1)*CANON(IC+6)                                   ARL26320
      SP(2,IS)=V*SNL(2,1)*CANON(IC+6)                                   ARL26330
      S(IS)=(SP(1,IS)-TEM(1))*TN(1,IS)+(SP(2,IS)-TEM(2))*TN(3,IS)       ARL26340
1460  GO TO LRETN,(270,1320)                                            ARL26350
1470  RETURN                                                            ARL26360
      END                                                               ARL26370
**** SOURCE FILE : M0004302.W04   ***
*
C.....FORTRAN SUBROUTINE   ...ARLM3              8/68                PH ARL30001
C.....FORTRAN SUBROUTINE             ARLM3...               4/8/68   GK ARL30002
      SUBROUTINE ARLM3                                                  ARL30010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              ARL30020
C                                                                       ARL30030
C                                                                       ARL30040
C                                                                       ARL30050
C                                                                       ARL30060
      INCLUDE 'TOTAL.INC'                                               ARL30171
      INCLUDE 'DSHAR4.INC'                                              ARL30327
      INCLUDE 'FXCOR.INC'                                               ARL30555
      INCLUDE 'SV.INC'                                                  ARL30777
      INCLUDE 'ZNUMBR.INC'                                              ARL30849
      INCLUDE 'ISV.INC'                                                 ARL30963
      INCLUDE 'IFXCOR.INC'                                              ARL31083
      INCLUDE 'ISHR18.INC'                                              ARL31167
      INCLUDE 'KNUMBR.INC'                                              ARL31275
C                                                                       ARL31276
C...  21. ADDCOM BLOCK                                                  ARL31280
C                                                                       ARL31286
      COMMON/ADDCOM/ ADDCOM                                             ARL31292
      DIMENSION ADDCOM(25),TNSAV(3),TPSAV(3),U1SAV(3)                   ARL31298
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            ARL31304
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),              ARL31310
     2            (ADDCOM(25),KDYNFL)                                   ARL31312
C                                                                       ARL31316
      DIMENSION VTSAV(3),SPSAV(3)                                       ARL31320
      INCLUDE 'CGOUG.INC'                                               ARL31330
C                                                                       ARL31460
      DATA ZLIT1,K11,K14,K17,K20,K21,K22/.125D0,11,14,17,20,21,22/      ARL31470
      DATA ZERO/0.D0/                                                   ARL31471
C                                                                       ARL31480
C        USE RC1SC FOR PROPER UNITS/ IMPLEMENTATION                     ARL31490
      RC1SC = RC1/4500.D0                                               ARL31495
      GFLG=ZERO                                                         ARL31496
      NUMPT1=NMPNTS                                                     ARL31500
      CLNGTH = K0                                                       ARL31502
      JPR1 = K0                                                         ARL31504
      JPR2 = ICSCNT                                                     ARL31506
      ILS1=ICS+(ICSCNT-K1)*LSV1                                         ARL31510
C                  INITIALIZATION FOR EACH CS.                          ARL31515
      DO 100 I=1,3                                                      ARL31520
      TEK(I)=TE(I)                                                      ARL31530
      TEW(I)=TE(I)                                                      ARL31540
  100 TAK(I)=TA(I)                                                      ARL31550
      IF((IPL(IPS).EQ.K0).OR.(IPL(IDS).EQ.K0)) GO TO 130                ARL31560
      IPDPL=K1                                                          ARL31570
      GO TO 140                                                         ARL31580
  130 IPDPL=0                                                           ARL31590
  140 DO 150 I=1,3                                                      ARL31600
C... SAVE PREVIOUS TI VALUE IN TALT                                     ARL31602
      TALT(I)=TI(I)                                                     ARL31604
      TIK(I)=TI(I)                                                      ARL31610
      DO 150 K=ICS,ILS1,LSV1                                            ARL31620
      TN(I,K)=TI(I)                                                     ARL31630
  150 CONTINUE                                                          ARL31640
  160 J12=0                                                             ARL31650
      JAA = K0                                                          ARL31655
      IS=ICS                                                            ARL31660
      J10=K1                                                            ARL31670
      DP=DPMAX                                                          ARL31680
      DPL=DPMAX                                                         ARL31690
      DO 170 I=ICS,ILS1,LSV1                                            ARL31700
      J20(I)=0                                                          ARL31710
      J23(I)=K1                                                         ARL31720
      J50(I)=-IPDPL                                                     ARL31730
      J51(I)=0                                                          ARL31740
      JPH(I)=0                                                          ARL31741
      NOTAN(I) = 0                                                      ARL31745
  170 DPMX1(I)=DPMAX                                                    ARL31750
      INMBR = K11                                                       ARL31760
      ASSIGN 175 TO IRETN                                               ARL31770
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL31780
  175 IF(IPDPL) 180,310,180                                             ARL31790
C                  CALL CHECK FOR CSD. ADJUST DP SO CS NOT PASSED ON    ARL31792
C                  FIRST DP STEP-OUT.                                   ARL31794
  180 CONTINUE                                                          ARL31800
      INMBR = K12                                                       ARL31810
      ASSIGN 190 TO IRETN                                               ARL31820
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL31830
  190 DO 200 L=1,3                                                      ARL31840
  200 TA(L)=TAK(L)                                                      ARL31850
  210 IS=ICS                                                            ARL31860
      JPR2 = -K1                                                        ARL31865
      IWS=IS                                                            ARL31870
      DP1 = Z1E6*RC1SC                                                  ARL31880
  220 IF (ISFTYP(IS) - 99) 221,460,460                                  ARL31890
  221 TE(1) = TEW(1)                                                    ARL31895
      TE(2)=TEW(2)                                                      ARL31900
      TE(3)=TEW(3)                                                      ARL31910
      JPR2 = ICSCNT                                                     ARL31915
      ASSIGN 230 TO IRETN                                               ARL31920
      GO TO 9010                                                        ARL31930
  230 IF (IER.NE.0) THEN                                                ARL31932
C.... OUTPUT WARNING IF NEGATIVE DISTANCE TO CS AT START OF CUT         ARL31934
        INMBR=-24007                                                    ARL31936
        CALL AERR(INMBR,'ARLM3')                                        ARL31938
      ENDIF                                                             ARL31939
      J50(IS)=(J50(IS)+K1)/K2                                           ARL31940
  231 CONTINUE                                                          ARL31950
      IF(Z1*RC1SC-CSD(IS)) 232,238,238                                  ARL31960
  232 IF(IPDPL) 236,260,236                                             ARL31970
  260 IF(DP-CSD(IS)) 234,234,239                                        ARL31980
  234 IF(CSD(IS)-Z2*DP) 235,241,241                                     ARL31990
  235 DP=Z6EM1*CSD(IS)                                                  ARL32000
      GO TO 241                                                         ARL32010
  236 IF(CSD(IS)-DP) 237,237,241                                        ARL32020
  237 DP=Z9EM1*CSD(IS)                                                  ARL32030
      GO TO 241                                                         ARL32040
  238 IF(DABS(CSD(IS))-TAU(IS)) 240,260,260                             ARL32050
  239 DP=CSD(IS)                                                        ARL32057
      GO TO 241                                                         ARL32058
  240 DP=TAU(IS)                                                        ARL32059
  241 GO TO 430                                                         ARL32060
C                  DS AND PS NOT BOTH PLANE. THUS INITIAL STEP-OUT +    ARL32062
C                  CENTR + DELTA FOR INITIAL VALUE DP.                  ARL32064
  310 DO 320 L=1,3                                                      ARL32070
  320 TE(L) = TE(L)+ZLIT1*RC1SC*TI(L)                                   ARL32080
      ASSIGN 330 TO IRETN                                               ARL32090
      GO TO 9020                                                        ARL32100
  330 IF (JCR.EQ.K0) GO TO 350                                          ARL32110
      DP=Z1EM2*DPMAX                                                    ARL32120
      GO TO 180                                                         ARL32130
  350 ASSIGN 360 TO IRETN                                               ARL32140
      GO TO 9030                                                        ARL32150
  360 IF (JDR.NE.K0) GO TO 180                                          ARL32160
      IF(DPL.GT.DPMAX) GO TO 390                                        ARL32170
      DP=DPL                                                            ARL32180
      GOTO 180                                                          ARL32190
C                                                                       ARL32191
  390 DP=DPMAX                                                          ARL32200
      GO TO 180                                                         ARL32210
C                  DO ADJUSTMENT OF DP FOR ALL CS. SET DP TO ITS MIN    ARL32212
C                  VALUE, AND IWS TO THE CORRESPONDING IS.              ARL32214
  430 CONTINUE                                                          ARL32220
      INMBR = K13                                                       ARL32230
      ASSIGN 440 TO IRETN                                               ARL32240
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL32250
  440 IF(DP-DP1)450,460,460                                             ARL32260
  450 IWS=IS                                                            ARL32270
      DP1=DP                                                            ARL32280
  460 IS=IS+LSV1                                                        ARL32290
      IF (ILS1.GE.IS) GO TO 220                                         ARL32300
      IS=IWS                                                            ARL32310
      IF (JPR2)461,462,462                                              ARL32320
 461  INMBR = 24006                                                     ARL32321
      GO TO 9040                                                        ARL32322
C                  SET DPCNT TO 10. (ERROR 801 WHEN 0.0). IF CS NEAR    ARL32323
C                  (J50=1) AND PS,DS NOT BOTH PLANE THEN BRANCH         ARL32324
  462 DPCNT=30.0                                                        ARL32326
      DP=DP1                                                            ARL32330
      IF((J50(IS).GT.K0).AND.(IPDPL.EQ.K0)) GO TO 750                   ARL32340
  490 DO 500 I=1,3                                                      ARL32350
  500 TEL(I)=TE(I)                                                      ARL32360
      IF (IPDPL.NE.K0) GO TO 600                                        ARL32370
      ITSAV=ITSEG(IPS)                                                  ARL32374
      DO 520 I=1,3                                                      ARL32380
      TNSAV(I)=TN(I,IPS)                                                ARL32382
      TPSAV(I)=TP(I,IPS)                                                ARL32384
      U1SAV(I)=U1(I,IPS)                                                ARL32386
      VTSAV(I)=VT(I,IPS)                                                ARL32387
      SPSAV(I)=SP(I,IPS)                                                ARL32388
  520 TES(I)=TEK(I)                                                     ARL32390
C                  ********** MAIN LOOP. STEP-OUT DP. ***************** ARL32395
C                  ***** BRANCH IF DS,PS BOTH PLANE. ELSE CENTR TO **** ARL32396
C                  ***** PS,DS AND THEN DELTA. IF CUT VECTOR TOO   **** ARL32397
C                  ***** LONG (JDR=1),THEN TRY AGAIN WITH SHORTER  **** ARL32398
C                  ***** CUT VECTOR. IF DPCNT=1, FAIL           ******* ARL32399
C                        CODING 580 TO 600 FOR SETTING CS FAR AWAY      ARL32400
 530  DO 540 I=1,3                                                      ARL32405
      TA(I)=TAK(I)                                                      ARL32410
      CMOVE(I)=DP*TIK(I)                                                ARL32420
  540 TE(I)=TES(I)+CMOVE(I)                                             ARL32430
      INMBR = K14                                                       ARL32440
      ASSIGN 550 TO IRETN                                               ARL32450
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL32460
  550 IF (IPDPL.NE.K0) GO TO 1250                                       ARL32470
      ASSIGN560 TO IRETN                                                ARL32480
      GO TO 9020                                                        ARL32490
  560 INMBR = K15                                                       ARL32500
      ASSIGN 565 TO IRETN                                               ARL32510
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL32520
  565 IF (JCR.EQ.K0) GO TO 620                                          ARL32530
      IF(DPCNT.GT.Z1) GO TO 636                                         ARL32535
      INMBR = 24001                                                     ARL32540
      GO TO 9040                                                        ARL32550
  580 J20(IS)=K1                                                        ARL32560
      J21(IS)=K1                                                        ARL32570
      CSD(IS)=Z0                                                        ARL32580
      STCK(IS)=Z1                                                       ARL32590
      JPH(IS) = K1                                                      ARL32592
      DO 590 I=1,3                                                      ARL32600
      TE(I)=TEK(I)                                                      ARL32610
  590 TA(I)=TAK(I)                                                      ARL32620
      J50(IS)=0                                                         ARL32630
      J51(IS)=0                                                         ARL32640
      GO TO 490                                                         ARL32650
  600 DO 610 I=1,3                                                      ARL32660
  610 TES(I)=TE(I)                                                      ARL32670
      GO TO 530                                                         ARL32680
  620 J10=0                                                             ARL32690
      ASSIGN 630 TO IRETN                                               ARL32700
      GO TO 9030                                                        ARL32710
  630 INMBR = K16                                                       ARL32720
      ASSIGN 635 TO IRETN                                               ARL32730
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL32740
  635 IF (JDR.EQ.K0) GO TO 700                                          ARL32750
      IF (DPCNT.EQ.Z1) GO TO 1460                                       ARL32760
  636 DPCNT=DPCNT-Z1                                                    ARL32770
      ITSEG(IPS)=ITSAV                                                  ARL32774
      DO 660 I=1,3                                                      ARL32780
      TP(I,IPS)=TPSAV(I)                                                ARL32782
      TN(I,IPS)=TNSAV(I)                                                ARL32784
      U1(I,IPS)=U1SAV(I)                                                ARL32786
      VT(I,IPS)=VTSAV(I)                                                ARL32787
      SP(I,IPS)=SPSAV(I)                                                ARL32788
  660 CONTINUE                                                          ARL32800
      GO TO 530                                                         ARL32810
C                  CUT VECTOR OKED BY DELTA. COMPUTE NEW TI             ARL32815
  670 IF(TI(1)*TIK(1)+TI(2)*TIK(2)+TI(3)*TIK(3)) 680,730,730            ARL32820
  680 DO 690 I=1,3                                                      ARL32830
  690 TI(I)=-TI(I)                                                      ARL32840
      GO TO 730                                                         ARL32850
  700 CONTINUE                                                          ARL32860
      DO 701 I=1,3                                                      ARL32861
        TALT(I)=TI(I)                                                   ARL32862
  701 CONTINUE                                                          ARL32863
      CALL CROSS (SN(1,IPS),SN(1,IDS),TI)                               ARL32864
      CALL VNORM(TI,TI)                                                 ARL32870
      IF(IER)710,670,710                                                ARL32880
  710 DO 720 I=1,3                                                      ARL32890
  720 TI(I)=TE(I)-TEK(I)                                                ARL32900
      CALL VNORM(TI,TI)                                                 ARL32910
C                  CALL CHECK FOR CSD. IF JCKR = 0, CS NOT NEAR AND TE  ARL32912
C                  IS OUTPUT TO ATAPE. IF JCKR = 1, CS NEAR. THEN SET   ARL32914
C                  TEE TO TE AND DO 3 SURF CENTR,DS,PS,CS.              ARL32916
  730 ASSIGN 740 TO IRETN                                               ARL32920
      GO TO 9010                                                        ARL32930
  740 INMBR = K17                                                       ARL32940
      ASSIGN 745 TO IRETN                                               ARL32950
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL32960
  745 IF (JCKR.EQ.K0) GO TO 840                                         ARL32970
  750 TEE(1,IS)=TE(1)                                                   ARL32980
      TEE(2,IS)=TE(2)                                                   ARL32990
      TEE(3,IS)=TE(3)                                                   ARL33000
      ASSIGN 760 TO IRETN                                               ARL33010
      GO TO 9020                                                        ARL33020
C                  JCR RETURN FROM 3 SURF PS,DS,CS CENTR  HAS 3 VALUES. ARL33022
C                  JCR =-1,RESTART CONDITION. IF GT 1 CS, SET FIRST     ARL33023
C                  CS FAR AWAY. STEP-OUT DP ETC. JCR =2, FALSE TANGENCY.ARL33024
C                  IN THIS CASE IF CENTR MOVE IN TI DIRECTION, RESET    ARL33025
C                  CS FAR AWAY. OTHERWISE IGNORE THIS CENTR MOVE.       ARL33026
C                  IF JCR=0, 3 SURF O.K. GO TO 940.                     ARL33027
  760 IF(JCR-K1)770,940,790                                             ARL33030
  770 IF (ICSCNT.GT.K1) GO TO 830                                       ARL33040
      INMBR = 24002                                                     ARL33050
      GO TO 9040                                                        ARL33060
  790 IF((TE(1)-TEE(1,IS))*TI(1)+(TE(2)-TEE(2,IS))*TI(2)+(TE(3)-        ARL33070
     1  TEE(3,IS))*TI(3)) 800,800,1090                                  ARL33080
  800 S(IS)=Z0                                                          ARL33090
      TE(1)=TEE(1,IS)                                                   ARL33100
      TE(2)=TEE(2,IS)                                                   ARL33110
      TE(3)=TEE(3,IS)                                                   ARL33120
      ISTO=IS                                                           ARL33130
      IS=IPS                                                            ARL33140
      ASSIGN 810 TO IRETN                                               ARL33150
      GO TO 9050                                                        ARL33160
  810 IS=IDS                                                            ARL33170
      ASSIGN 820 TO IRETN                                               ARL33180
      GO TO 9050                                                        ARL33190
  820 IS=ISTO                                                           ARL33200
      GO TO 840                                                         ARL33210
  830 S(IS)=Z5*DP                                                       ARL33220
      GO TO 180                                                         ARL33230
C                  CS NOT REACHED IN DP STEP-OUT. THEREFORE TE OUTPUT.**ARL33232
C                  CHECK NMPNTS AND CLNGTH O.K. UPDATE TEK ETC          ARL33233
  840 ASSIGN 846 TO IRETN                                               ARL33240
      GO TO 9060                                                        ARL33250
  846 DO 847 I = 1,3                                                    ARL33255
  847 TEMP(I) = TE(I) - TEK(I)                                          ARL33256
  848 TEMP(4) =DSQRT(TEMP(1)*TEMP(1)+TEMP(2)*TEMP(2)+TEMP(3)*TEMP(3))   ARL33257
      CLNGTH = CLNGTH + TEMP(4)                                         ARL33258
      IF (ELMAX - CLNGTH) 849,850,850                                   ARL33259
  849 INMBR = 24005                                                     ARL33260
      GO TO 9040                                                        ARL33261
  850 IF (NUMPT1.GT.K0) GO TO 870                                       ARL33262
      INMBR = 24003                                                     ARL33275
      GO TO 9040                                                        ARL33280
  870 NUMPT1=NUMPT1-K1                                                  ARL33290
      INMBR = K18                                                       ARL33300
      ASSIGN 875 TO IRETN                                               ARL33310
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL33320
  875 DO 900 I=1,3                                                      ARL33330
      TEK(I)=TE(I)                                                      ARL33340
      TAK(I)=TA(I)                                                      ARL33350
      TIK(I)=TI(I)                                                      ARL33360
      DO 900 J=IPS,NUMSUR                                               ARL33380
      TPK(I,J)=TP(I,J)                                                  ARL33390
      SPK(I,J)=SP(I,J)                                                  ARL33400
      SNK(I,J)=SN(I,J)                                                  ARL33410
      SK(I,J) = S(J)                                                    ARL33413
      U1K(I,J)=U1(I,J)                                                  ARL33415
  900 CONTINUE                                                          ARL33460
      IPCHNL=IPCHN                                                      ARL33462
      DP1=DP                                                            ARL33470
      ITSEGK(IPS) = ITSEG(IPS)                                          ARL33472
      ITSEGK(IDS) = ITSEG(IDS)                                          ARL33474
      IF (J20(IS).NE.K2) GO TO 920                                      ARL33480
C                  TERMINATING CUT SEQUENCE COMPUTATION. RESTORE SURF   ARL33482
C                  DATA AT TEE POSITION.                                ARL33484
      TE(1)=TEE(1,IS)                                                   ARL33490
      TE(2)=TEE(2,IS)                                                   ARL33500
      TE(3)=TEE(3,IS)                                                   ARL33510
      TA(1)=TAL(1)                                                      ARL33520
      TA(2)=TAL(2)                                                      ARL33530
      TA(3)=TAL(3)                                                      ARL33540
      TP(1,IPS)=PS1                                                     ARL33550
      TP(2,IPS)=PS2                                                     ARL33560
      TP(3,IPS)=PS3                                                     ARL33570
      SN(1,IPS)=PS4                                                     ARL33580
      SN(2,IPS)=PS5                                                     ARL33590
      SN(3,IPS)=PS6                                                     ARL33600
      SP(1,IPS)=PS7                                                     ARL33602
      SP(2,IPS)=PS8                                                     ARL33604
      SP(3,IPS)=PS9                                                     ARL33606
      TP(1,IDS)=DS1                                                     ARL33610
      TP(2,IDS)=DS2                                                     ARL33620
      TP(3,IDS)=DS3                                                     ARL33630
      SN(1,IDS)=DS4                                                     ARL33640
      SN(2,IDS)=DS5                                                     ARL33650
      SN(3,IDS)=DS6                                                     ARL33660
      SP(1,IDS)=DS7                                                     ARL33662
      SP(2,IDS)=DS8                                                     ARL33664
      SP(3,IDS)=DS9                                                     ARL33666
      GO TO 1070                                                        ARL33670
C                  NON-TERMINATING CUT VECTOR. IF MORE THAN ONE CS,     ARL33672
C                  RETURN TO FIND CRITICAL CS.ELSE GO TO DP STEP-OUT.   ARL33674
  920 IS=ICS                                                            ARL33680
      IF (ICSCNT.LE.K1) GO TO 260                                       ARL33690
      TEW(1)=TE(1)                                                      ARL33700
      TEW(2)=TE(2)                                                      ARL33710
      TEW(3)=TE(3)                                                      ARL33720
      GO TO 220                                                         ARL33730
C                  3 SURF CENTR TO PS,DS,CS O.K. IF ANY CS VIOLATED     ARL33732
C                  IN THIS MOVE,INDEX THIS AS CRITICAL CS,AND AGAIN DO  ARL33734
C                  3 SURF CENTR.                                        ARL33736
  940 TEE(1,IS)=TE(1)                                                   ARL33740
      TEE(2,IS)=TE(2)                                                   ARL33750
      TEE(3,IS)=TE(3)                                                   ARL33760
      IWS=IS                                                            ARL33770
      IS=ICS                                                            ARL33780
      INMBR = K19                                                       ARL33790
      ASSIGN 950 TO IRETN                                               ARL33800
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL33810
  950 IF (IS.GT.ILS1) GO TO 1040                                        ARL33820
      IF (IS.EQ.IWS) GO TO 1030                                         ARL33830
      ASSIGN 980 TO IRETN                                               ARL33840
      GO TO 9050                                                        ARL33850
  980 IF (ISFTYP(IS) - K4) 981,1010,981                                 ARL33860
  981 IF (J23(IS).GT.K0) GO TO 1030                                     ARL33870
      STCK(IS)=S(IS)*Z(IS)*STCK1(IS)                                    ARL33880
      INMBR = K20                                                       ARL33890
      ASSIGN 1000 TO IRETN                                              ARL33900
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL33910
 1000 IF(STCK(IS))750,750,1030                                          ARL33920
 1010 IF(J22(IS))1030,1030,1020                                         ARL33930
 1020 IT = IDS                                                          ARL33940
      IF (IFL4(IS)) 1021,1022,1021                                      ARL33942
 1021 IT = IPS                                                          ARL33944
 1022 TEMP(1) = (SP(1,IS)-SP(1,IT))*TN(1,IS)                            ARL33946
     1        + (SP(2,IS)-SP(2,IT))*TN(2,IS)                            ARL33948
     2        + (SP(3,IS)-SP(3,IT))*TN(3,IS)                            ARL33950
      STCKN(IS) = TEMP(1)*(TN(1,IS)*TI(1)+TN(2,IS)*TI(2)+TN(3,IS)*TI(3))ARL33960
      INMBR  = K21                                                      ARL33965
      ASSIGN 1025 TO IRETN                                              ARL33970
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL33980
 1025 IF(STCKN(IS))750,750,1030                                         ARL33990
 1030 IS=IS+LSV1                                                        ARL34000
      GO TO 950                                                         ARL34010
C                  CRITICAL CS INDEXED. COMPUTE TI AND SAVE SURF DATA.  ARL34012
C                  COMPUTE V=TEE - TEK. IF THIS MOVE BACKWARDS,SET      ARL34014
C                  S = 5*DP TO  SET THIS CS FAR AWAY                    ARL34016
 1040 IS=IWS                                                            ARL34020
      TAL(1)=TA(1)                                                      ARL34030
      TAL(2)=TA(2)                                                      ARL34040
      TAL(3)=TA(3)                                                      ARL34050
      CALL CROSS(SN(1,IPS),SN(1,IDS),TIL)                               ARL34060
      CALL VNORM(TIL,TIL)                                               ARL34070
      IF (IER.EQ.K0) GO TO 1060                                         ARL34080
      TIL(1)=TE(1)-TEK(1)                                               ARL34090
      TIL(2)=TE(2)-TEK(2)                                               ARL34100
      TIL(3)=TE(3)-TEK(3)                                               ARL34110
      CALL VNORM(TIL,TIL)                                               ARL34120
 1060 PS1=TP(1,IPS)                                                     ARL34130
      PS2=TP(2,IPS)                                                     ARL34140
      PS3=TP(3,IPS)                                                     ARL34150
      PS4=SN(1,IPS)                                                     ARL34160
      PS5=SN(2,IPS)                                                     ARL34170
      PS6=SN(3,IPS)                                                     ARL34180
      PS7 = SP(1,IPS)                                                   ARL34182
      PS8 = SP(2,IPS)                                                   ARL34184
      PS9 = SP(3,IPS)                                                   ARL34186
      DS1=TP(1,IDS)                                                     ARL34190
      DS2=TP(2,IDS)                                                     ARL34200
      DS3=TP(3,IDS)                                                     ARL34210
      DS4=SN(1,IDS)                                                     ARL34220
      DS5=SN(2,IDS)                                                     ARL34230
      DS6=SN(3,IDS)                                                     ARL34240
      DS7 = SP(1,IDS)                                                   ARL34242
      DS8 = SP(2,IDS)                                                   ARL34244
      DS9 = SP(3,IDS)                                                   ARL34246
 1070 DO 1080 I=1,3                                                     ARL34250
 1080 V(I)=TE(I)-TEK(I)                                                 ARL34260
      AAB = V(1)*TIK(1)+V(2)*TIK(2)+V(3)*TIK(3)                         ARL34262
C     IF(DABS(AAB)- 0.2*TAU(IS))1090,1090,1085                          ARL34270
 1085 IF(AAB)1090,1100,1100                                             ARL34272
 1090 S(IS)=Z5*DP                                                       ARL34280
      GO TO 580                                                         ARL34290
C                  MOVE V FORWARD. REVERSE TN(CS) AND RE-DO 3 SURF      ARL34292
C                  CENTR FOR 'PAST' CASE. TEST IF V O.K. BY DELTA       ARL34294
 1100 VL=DSQRT(V(1)*V(1)+V(2)*V(2)+V(3)*V(3))                           ARL34300
      IF (ISFTYP(IS).EQ.K4) GO TO 1130                                  ARL34310
      IF((TN(1,IS)*(TE(1)-TEK(1))+TN(2,IS)*(TE(2)-TEK(2))+              ARL34320
     1TN(3,IS)*(TE(3)-TEK(3)))*PAST(IS))1120,1130,1130                  ARL34330
 1120 J50(IS)=K1                                                        ARL34340
      J51(IS)=K1                                                        ARL34350
      PLND1(IS)=0                                                       ARL34360
      NOTAN(IS)=0                                                       ARL34365
      TN(1,IS)=-TN(1,IS)                                                ARL34370
      TN(2,IS)=-TN(2,IS)                                                ARL34380
      TN(3,IS)=-TN(3,IS)                                                ARL34390
      GOTO 750                                                          ARL34400
 1130 J10=K1                                                            ARL34410
      ASSIGN 1140 TO IRETN                                              ARL34420
      GO TO 9030                                                        ARL34430
 1140 INMBR = K22                                                       ARL34440
      ASSIGN 1145 TO IRETN                                              ARL34450
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL34460
 1145 IF (JDR.EQ.K0) GO TO 1200                                         ARL34470
C                  MOVE V NOT O.K. BY DELTA. CSD = 1.2*LENGTH V         ARL34472
C                  ADJUST VALUE OF DP. SET J20=2 FOR SPECIAL            ARL34474
C                  CUT SEQUENCE TERMINATING CALCULATIONS.               ARL34476
      CSD(IS) = Z12EM1*VL                                               ARL34480
      IF (DP.GT.CSD(IS)) GO TO 1180                                     ARL34490
      IF (CSD(IS).LT.Z2*DP) DP = Z6EM1*CSD(IS)                          ARL34500
      GO TO 1190                                                        ARL34510
 1180 DP=CSD(IS)                                                        ARL34520
 1190 DPCNT=Z10                                                         ARL34530
      J50(IS)=0                                                         ARL34540
      J51(IS)=0                                                         ARL34550
      J20(IS)=K2                                                        ARL34560
      INMBR = K23                                                       ARL34570
      ASSIGN 490 TO IRETN                                               ARL34580
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL34590
      GO TO 490                                                         ARL34592
C                  MOVE V O.K.. TEST IFAR FOR CORRECT INTERSECTION      ARL34595
 1200 JPR2 = ICSCNT                                                     ARL34600
      IF (IFAR(IS).EQ.K1) GO TO 1420                                    ARL34605
      IFAR(IS)=IFAR(IS)-K1                                              ARL34610
      IF (IPDPL.NE.K0) GO TO 1230                                       ARL34620
      ASSIGN 1220 TO IRETN                                              ARL34630
      GO TO 9060                                                        ARL34640
1220  TV=TI(1)*TIL(1)+TI(2)*TIL(2)+TI(3)*TIL(3)                         ARL34650
      TEMP(1)=DSIGN(Z1,TV)                                              ARL34655
      TI(1)=TEMP(1)*TIL(1)                                              ARL34660
      TI(2)=TEMP(1)*TIL(2)                                              ARL34670
      TI(3)=TEMP(1)*TIL(3)                                              ARL34680
 1230 DO 1240 I=1,3                                                     ARL34690
      TEK(I)=TE(I)                                                      ARL34700
      TAK(I)=TA(I)                                                      ARL34710
 1240 TEW(I)=Z3*TAU(IS)*TI(I)+TE(I)                                     ARL34720
      JAA = K1                                                          ARL34725
      GO TO 140                                                         ARL34730
C                                                                       ARL34732
C                  ********** SPECIAL ROUTE. DS,PS BOTH PLANE,          ARL34734
C                                                                       ARL34736
 1250 ASSIGN 1260 TO IRETN                                              ARL34740
      GO TO 9070                                                        ARL34750
 1260 INMBR = K24                                                       ARL34760
      ASSIGN 1265 TO IRETN                                              ARL34770
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL34780
 1265 IF (JPR) 1280,1270,1266                                           ARL34790
 1266 JPR1 = 0                                                          ARL34792
      GO TO 1290                                                        ARL34794
 1270 TEW(1)=TE(1)                                                      ARL34800
      TEW(2)=TE(2)                                                      ARL34810
      TEW(3)=TE(3)                                                      ARL34820
      GO TO 210                                                         ARL34830
C                                                                       ARL34840
C     FALSE TANGENCY - MOVE AWAY FROM STOPPING POINT.                   ARL34842
C                                                                       ARL34844
 1280 IF (JPR+K2) 1351,1351,1281                                        ARL34846
 1281 IF ((TE(1)-TEW(1))*TI(1)+(TE(2)-TEW(2))*TI(2)+(TE(3)-TEW(3))*TI(3)ARL34848
     1    ) 1352,1352,1282                                              ARL34850
 1282 TE(1) = Z5EM1*RC1SC*TI(1)+TE(1)                                   ARL34852
      TE(2) = Z5EM1*RC1SC*TI(2)+TE(2)                                   ARL34854
      TE(3) = Z5EM1*RC1SC*TI(3)+TE(3)                                   ARL34856
C                                                                       ARL34858
C     IS THIS THE ONLY CHECK SURFACE                                    ARL34860
C                                                                       ARL34870
 1290 IWS=IS                                                            ARL34880
      IS=ICS                                                            ARL34890
 1300 IF(ILS1-IS)1310,1330,1330                                         ARL34900
 1310 IS=IWS                                                            ARL34910
      IF (JPR) 1311,1200,1200                                           ARL34918
C     LOOK FOR TRUE INTERSECTION WITH CHECK SURFACE                     ARL34920
 1311 TEW(1) = TE(1)                                                    ARL34922
      TEW(2) = TE(2)                                                    ARL34924
      TEW(3) = TE(3)                                                    ARL34926
      GO TO 160                                                         ARL34928
 1320 IS=IS+LSV1                                                        ARL34930
      GO TO 1300                                                        ARL34940
 1330 IF (IS-IWS) 1331,1320,1331                                        ARL34950
 1331 IF (ISFTYP(IS)-99)1332,1320,1320                                  ARL34952
 1332 IF (JPR2) 1310,1310,1333                                          ARL34954
 1333 IF (ISFTYP(IS)-K4) 1334,1340,1340                                 ARL34956
 1334 TN(1,IS) = PAST(IS)*TI(1)                                         ARL34958
      TN(2,IS) = PAST(IS)*TI(2)                                         ARL34960
      TN(3,IS) = PAST(IS)*TI(3)                                         ARL34962
 1340 JWR =0                                                            ARL34964
      JENT(IS)=K1                                                       ARL34966
      IOPSET(IS)=0                                                      ARL34968
      JTN(IS) = K1                                                      ARL34970
      JU1(IS) = K1                                                      ARL34972
      JIOPS(IS) = 0                                                     ARL34974
      ASSIGN 1348 TO IRETN                                              ARL34976
      GO TO 9050                                                        ARL34978
 1348 IF (ISFTYP(IS)-K4)1349,1400,1349                                  ARL34980
 1349 IF (J23(IS).GT.K0) GO TO 1320                                     ARL34990
      STCK(IS)=STCK1(IS)*Z(IS)*S(IS)                                    ARL35000
      INMBR = K25                                                       ARL35010
      ASSIGN 1350 TO IRETN                                              ARL35020
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL35030
 1350 IF (STCK(IS).GT.K0) GO TO 1320                                    ARL35032
      GO TO 1380                                                        ARL35033
C     MOVE WAS BACKWARDS - RESTART TWICE THEN GIVE UP                   ARL35034
C                                                                       ARL35035
 1351 JPR1 = JPR1 + K1                                                  ARL35036
      IF (JPR1 - K2) 1270,1353,1352                                     ARL35037
C     THIS SURFACE INVALID - ELIMINATE FROM CONSIDERATION               ARL35038
C                                                                       ARL35039
 1352 ISFTYP(IS) = 99                                                   ARL35040
      JPR1 = 0                                                          ARL35041
      TE(1) = TEK(1)                                                    ARL35042
      TE(2) = TEK(2)                                                    ARL35043
      TE(3) = TEK(3)                                                    ARL35044
      GO TO 1270                                                        ARL35045
 1353 S(IS) = S(IS)+Z2*DP                                               ARL35046
      GO TO 1270                                                        ARL35047
 1380 DO 1390 I=1,3                                                     ARL35050
 1390 TE(I)=TEL(I)                                                      ARL35060
      JPR2 = JPR2 - K1                                                  ARL35065
      DP=Z11EM1*CSD(IS)                                                 ARL35070
      GO TO 1250                                                        ARL35080
 1400 IF(J22(IS))1320,1320,1410                                         ARL35090
 1410 IT = IDS                                                          ARL35100
      IF (IFL4(IS)) 1411,1412,1411                                      ARL35102
 1411 IT = IPS                                                          ARL35104
 1412 TEMP(1) = (SP(1,IS)-SP(1,IT))*TN(1,IS)                            ARL35106
     1         +(SP(2,IS)-SP(2,IT))*TN(2,IS)                            ARL35107
     2         +(SP(3,IS)-SP(3,IT))*TN(3,IS)                            ARL35108
      STCKN(IS)=TEMP(1)*(TN(1,IS)*TI(1)+TN(2,IS)*TI(2)+TN(3,IS)*TI(3))  ARL35110
      INMBR = K26                                                       ARL35120
      ASSIGN 1415 TO IRETN                                              ARL35130
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL35140
 1415 IF(STCKN(IS))1380,1380,1320                                       ARL35150
 1420 CONTINUE                                                          ARL35160
      INMBR = K27                                                       ARL35170
      ASSIGN 1430 TO IRETN                                              ARL35180
      IF (KDYNFL.NE.K0) GO TO 9000                                      ARL35190
 1430 ICL=K3                                                            ARL35200
 1440 ASSIGN 1445 TO IRETN                                              ARL35210
      GO TO 9060                                                        ARL35220
 1445 TEMP(1)=((IS-ICS)/LSV1)+K1                                        ARL35230
 1450 CONTINUE                                                          ARL35240
      RETURN                                                            ARL35241
 1460 INMBR = 24004                                                     ARL35250
      GO TO 9040                                                        ARL35260
C                                                                       ARL35290
C     ALL CALLS EXCEPT THOSE TO VNORM AND CROSS HAVE BEEN PLACED IN THISARL35292
C     SECTION TO MINIMIZE STORAGE REQUIREMENTS OF THE 360               ARL35294
C                                                                       ARL35300
 9000 CALL APT238(INMBR)                                                ARL35310
      GO TO IRETN, (175,190,550,565,635,745,875,950,1000,1025,1145,     ARL35320
     1   440,490,1265,1350,1415,1430)                                   ARL35330
 9010 CALL CHECK                                                        ARL35340
      IF (IAERR.GT.K0) GO TO 1450                                       ARL35350
      GO TO IRETN, (230,740)                                            ARL35360
 9020 CALL CENTR                                                        ARL35370
      IF (IAERR.GT.K0) GO TO 1450                                       ARL35380
      GO TO IRETN, (330,560,760)                                        ARL35390
 9030 CALL DELTA                                                        ARL35400
      IF (IAERR.GT.K0) GO TO 1450                                       ARL35410
      GO TO IRETN, (360,630,1140)                                       ARL35420
 9040 CALL AERR (INMBR,'ARLM3   ')                                      ARL35430
      GO TO 1450                                                        ARL35440
 9050 CALL AMIND                                                        ARL35450
      IF (IAERR.GT.K0) GO TO 1450                                       ARL35460
      GO TO IRETN, (810,820,980,1348)                                   ARL35470
 9060 CALL ATAPE                                                        ARL35480
      GO TO IRETN, (846,850,1220,1445)                                  ARL35490
 9070 CALL PLANE                                                        ARL35500
      IF (IAERR.GT.K0) GO TO 1450                                       ARL35510
      GO TO IRETN, (1260)                                               ARL35520
      END                                                               ARL35530
**** SOURCE FILE : M0000869.V05   ***
*
C...  FORTRAN SUBROUTINE               AUTOPS                           ATPS0000
      SUBROUTINE AUTOPS                                                 ATPS0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              ATPS0020
C                                                                       ATPS0030
C                                                                       ATPS0040
C                                                                       ATPS0050
C                                                                       ATPS0060
      INCLUDE 'TOTAL.INC'                                               ATPS0171
      INCLUDE 'FXCOR.INC'                                               ATPS0481
      INCLUDE 'SV.INC'                                                  ATPS0777
      INCLUDE 'ZNUMBR.INC'                                              ATPS0783
      INCLUDE 'LDEF.INC'                                                ATPS0873
      INCLUDE 'ISV.INC'                                                 ATPS1025
      INCLUDE 'IFXCOR.INC'                                              ATPS1185
      INCLUDE 'KNUMBR.INC'                                              ATPS1329
C                                                                       ATPS1370
C                                                                       ATPS1380
C                                                                       ATPS1390
C                                                                       ATPS1400
      INCLUDE 'BLANKCOM.INC'                                            ATPS1415
C                                                                       ATPS1416
      IF(JDS) CALL APT201(0,'NOCS    ')                                 ATPS1425
      CANON(1)=Z0                                                       ATPS1430
      CANON(2)=Z0                                                       ATPS1440
      CANON(3)=Z1                                                       ATPS1450
      CANON(4)=TE(3)                                                    ATPS1460
      ISFIDN(IPS)=K2                                                    ATPS1470
      ICANON(IPS)=K1                                                    ATPS1480
      ISFTYP(IPS)=K3                                                    ATPS1490
      IUNFL(IPS)=K1                                                     ATPS1500
      IPL(IPS)=K1                                                       ATPS1510
      PAST(IPS)=Z1                                                      ATPS1520
      LIMFL(IPS)=0                                                      ATPS1530
      IPSDEF=0                                                          ATPS1540
      TN(1,IPS)=Z0                                                      ATPS1550
      TN(2,IPS)=Z0                                                      ATPS1560
      TN(3,IPS)=-Z1                                                     ATPS1570
      JENT(IPS) = K1                                                    ATPS1575
      RETURN                                                            ATPS1580
       END                                                              ATPS1590
**** SOURCE FILE : M0000702.W03   ***
*
C                                                                       A2270002
C.....FORTRAN BLOCK DATA ROUTINE  ...APT227      2/69   RC,HG,RN,AR     A2270003
C                                                                       A2270004
C                                                                       A2270005
C                                                                       A2270010
C...  THIS ROUTINE CONTAINS A LISTING OF ALL CDE PACKAGES               A2270020
C...      IN THE EXECUTION COMPLEX EXCEPT:                              A2270030
C...  BLOCKS 4., 5., AND 17. ARE LISTED IN APT228                       A2270040
C...  BLOCKS 6.,16., AND 18. ARE LISTED IN APT229                       A2270050
C...  NOTE.APT228 AND APT229 ARE DUMMY ROUTINES AND                     A2270060
C...  SHOULD NOT BE LINK EDITED                                         A2270070
C                                                                       A2270080
      BLOCK DATA BDA227                                                 A2270090
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              A2270100
      COMMON /APT227/ APT227                                            A2270110
C                                                                       A2270120
C                                                                       A2270130
      INCLUDE 'TOTAL.INC'                                               A2270131
      INCLUDE 'DEF.INC'                                                 A2270132
      INCLUDE 'DSHAR3.INC'                                              A2270133
      INCLUDE 'FXCOR.INC'                                               A2270134
      INCLUDE 'HOLRTH.INC'                                              A2270135
      INCLUDE 'SV.INC'                                                  A2270136
      INCLUDE 'ZNUMBR.INC'                                              A2270137
      INCLUDE 'LDEF.INC'                                                A2270138
      INCLUDE 'ISV.INC'                                                 A2270139
      INCLUDE 'IBRKPT.INC'                                              A2270141
      INCLUDE 'IDEF.INC'                                                A2270142
      INCLUDE 'IFXCOR.INC'                                              A2270143
      INCLUDE 'KNUMBR.INC'                                              A2270144
C                                                                       A2270159
C                                                                       A2270161
C...  21. ADDCOM BLOCK                                                  A2270162
C                                                                       A2270163
      COMMON/ADDCOM/ ADDCOM                                             A2270164
      DIMENSION ADDCOM(25)                                              A2270165
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            A2270166
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),              A2270167
     2            (ADDCOM(25),KDYNFL)                                   A2270168
C                                                                       A2270169
C...  22. TRACE BLOCK                                                   A2270171
      COMMON /TRACFL/TRACFL                                             A2270172
      LOGICAL TRACFL                                                    A2270173
C                                                                       A2270174
C...  23. DSNAME BLOCK                                                  A2270175
C                                                                       A2270176
      COMMON /DSNAME/DSNAME,NAMSUB                                      A2270177
C                                                                       A2270178
C                                                                       A2270179
C     24.   SRFNAM BLOCK                                                A2270181
      COMMON /SRFNAM/ PSNAME,CS1NAM,CS2NAM,IPSSUB,ICS1SB,ICS2SB         A2270182
C                                                                       A2270183
C                                                                       A2270184
C     25.   COMMON FOR AERR INFORMATION                                 A2270185
C                                                                       A2270186
      COMMON /AERCOM/  IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS               A2270187
      DIMENSION  PCTPTS(3,20), PCTPLN(4), ERRPTS(3,3)                   A2270188
C                                                                       A2270189
C                                                                       A2270195
C          29.  COMMON FOR HOLD INFORMATION                             A2270196
C                                                                       A2270197
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            A2270198
C                                                                       A2270199
      INCLUDE 'DARRAY.INC'                                              A2270205
      INCLUDE 'XUNITS.INC'                                              A2270209
C*****   DATA FOR DEF BLOCK   ****************************************  A2270380
C                                                                       A2270390
C                                                                       A2270400
      DATA  A/24*0./, AHOLD/8*0./, C1/70000.D0,7*0./,                   A2270410
C                                                                       A2270420
     1      LN1/40000.D0,4*0./, R/5*0.,1.D0,4*0./, REF/8*0./            A2270440
C                                                                       A2270450
C                                                                       A2270460
C*****   DATA FOR FXCOR BLOCK *******************************           A2270950
C                                                                       A2270955
C** B FXCOR. ARELEM REAL ENVIROMENTAL VARIABLES.                        A2270960
C     EVERY VARIABLE IN THIS BLOCK MUST RETAIN A MINIMUM OF             A2270965
C     7 DECIMAL FIGURES OF RELATIVE SIGNIFICANCE.                       A2270970
C                                                                       A2270975
      DATA AX4/ 3*0./, CAGL/0./, CUTDAT/7*0./, GAMMA/0./,               A2270980
C                                                                       A2270990
     +    HI/0./, PMOVE/3*0./, RA/0./, RC1/4500.D0/,                    A2270991
C                                                                       A2271000
     +    SAGL/0./, SURD/0./,  TA/0.,0.,1.D0/, TAK/3*0./,               A2271010
C                                                                       A2271012
     +    TE/3*0./, TEK/3*0/, TEL/3*0./, TEM/10*0./,                    A2271013
C                                                                       A2271014
     +    TEMP/24*0./, TI/3*0./, TIK/3*0./, TIL/3*0./,                  A2271016
C                                                                       A2271018
     +    TM/3*0./, VTEM/0./, ALP/0./, TAL/3*0./,                       A2271019
C                                                                       A2271020
     +    DPMAX/10./, STRTNO/0./, MODFER/'BLANK'/, TLHIT/5./            A2271040
C        TOOL HT. ALWAYS 5 INCH.                                        A2271050
C                                                                       A2271060
C  ***** DATA FOR NEW TLLDAT BLOCK ************                         A2271061
C                                                                       A2271062
      DATA TLHITE/8*0./, SINL/6*0.,2*-1.D38/, COSL/6*0.,2*1.D38/,       A2271063
C                                                                       A2271064
     +     UMAX/8*0./, RI/8*0./, CORRAD/8*0./,                          A2271065
C                                                                       A2271066
     +     TCONT/6*0.,-1.,1.,-1./, TLINC/9*0./                          A2271067
C                                                                       A2271068
C                                                                       A2271069
C  ***** DATA FOR HOLRTH BLOCK ************************                 A2271170
C                                                                       A2271180
      DATA HPS/'PS    '/, HDS/'DS    '/, HCS/'CS    '/, HLFT/'GOLFT '/, A2271190
C                                                                       A2271200
     +     HRGT/'GORGT '/, HFWD/'GOFWD '/, HBACK/'GOBACK'/,             A2271210
C                                                                       A2271220
     +     HUP/'GOUP  '/, HDOWN/'GODOWN'/, HTO/'TO    '/,               A2271222
C                                                                       A2271224
     +     HPAST/'PAST  '/, HON/'ON    '/, HTANTO/'TANTO '/,            A2271226
C                                                                       A2271228
     +     HPSTAN/'PSTAN '/, HDYNP/'DYNDMP'/, HAERR/'AERR  '/,          A2271230
C                                                                       A2271240
     +     HCLDAT/'CLDATA'/, HGERR/'GERR  '/                            A2271245
C                                                                       A2271250
C *****  DATA FOR SV BLOCK *********************************            A2271650
C                                                                       A2271660
C      EVERY VARIABLE IN THIS BLOCK MUST RETAIN A MINIMUM OF            A2271670
C      7 DECIMAL FIGURES OF RELATIVE SIGNIFICANCE.                      A2271680
C                                                                       A2271690
C      FOR ONE DIMENSIONAL ARRAYS - INDEX INDICATES SURFACE             A2271700
C      FOR TWO DIMENSIONAL ARRAYS - 1ST INDEX INDICATES VECTOR COMPONENTA2271710
C                                   2ND INDES INDICATES SURFACE         A2271720
C      ***** SURFACE *** INDEX *****                                    A2271725
C             GOUGE        1                                            A2271730
C             PART         2                                            A2271740
C             DRIVE        3                                            A2271750
C             CHECK1       4                                            A2271760
C             CHECK2       5                                            A2271770
C                                                                       A2271780
      DATA  CC/15*0./                                                   A2271790
      DATA  EPS1/0.,4*.00005D0/,  EPS2/0.,4*.99995D0/,                  A2271800
     +      EPS3/0.,4*.0001D0/,   EPS4/0.,4*.001D0/,                    A2271810
     +      EPS6/0.,4*1.D-6/,     EPS8/0.,4*.00005D0/                   A2271820
      DATA  PAST/5*0./,       PLND/5*0./,  PLNV/15*0./                  A2271830
      DATA  RC/0.,4*4500.D0/,    S/5*0./,   SAVE/5*0./                  A2271840
      DATA  SFVCT/15*0./,  SLX/15*0./,   SN/15*0./,  SNK/15*0./,        A2271850
     +        SNL/15*0./,   SP/15*0./,  SPK/15*0./,  SPL/15*0./         A2271860
      DATA  TAU/0.,4*.0005D0/,  TAU1/0.,4*.0005D0/,  TAU2/5*0./         A2271870
      DATA  TH/5*0./                                                    A2271880
C                                                                       A2271890
      DATA  TN/3*0., 0.,0.,-1, 1.,0.,0., 1.,0.,0., 0.,0.,-1./           A2271900
      DATA  TOOLHT/15*0./, TOOLWD/5*0./                                 A2271910
      DATA  TP/15*0./, TPK/15*0./,  U1/15*0./, VNDIR/15*0./,            A2271920
     +      VT/15*0./, Z/5*0./, VARBLE/5*0./, U1K/15*0./, SK/15*0./     A2271930
      DATA    COS1/5*0./, CPLFL/5*0./, CPTST/5*0./,   CSD/5*0./,        A2271940
     +      DPLAN/15*0./, DPMX1/5*0./, PLNCS/5*0./, PLND1/5*0./,        A2271950
     +       PLTST/5*0./,  STCK/5*0./, STCKN/5*0./, STCK1/5*0./,        A2271960
     +       STCK2/5*0./,  TEE/15*0./,  TNL/15*0./                      A2271970
C                                                                       A2271980
C                                                                       A2272030
C                                                                       A2272040
C  ***** DATA FOR ZNUMBR BLOCK ************************                 A2272180
C                                                                       A2272190
      DATA    Z0/    0./,     Z1/  1.D0/,    Z2/  2.D0/,   Z3/   3.D0/, A2272200
     1        Z5/  5.D0/,    Z10/ 10.D0/,   Z90/ 90.D0/,  Z1E6/  1.D6/, A2272210
     2     Z1E38/ 1.D19/,  Z5EM1/  .5D0/, Z6EM1/  .6D0/, Z9EM1/  .9D0/, A2272220
     3    Z11EM1/ 1.1D0/, Z12EM1/ 1.2D0/, Z1EM2/ .01D0/, Z1EM3/.001D0/, A2272230
     4     Z1EM5/ 1.D-5/,  Z5EM6/ 5.D-6/, Z1EM6/ 1.D-6/, Z1EM7/ 1.D-7/, A2272235
     5     Z1EM9/ 1.D-9/,  Z1EM1/  .1D0/,   ZM1/ -1.D0/,                A2272240
     6    DEGRAD/  .0174532925D0/,   PI/  3.14159265D0/                 A2272250
C                                                                       A2272260
C                                                                       A2272270
C  ***** DATA FOR LDEF BLOCK **************************                 A2272360
C                                                                       A2272370
      DATA     JCS/.FALSE./,  PRNTON/.FALSE./,  REFFLG/.FALSE./,        A2272380
     +      SUBFLG/.FALSE./,  UNFLAG/.FALSE./,    ZFLAG/.TRUE./,        A2272390
     +         JDS/.FALSE./,  BOUNDF/.FALSE./,  PCHLST/.FALSE./,        A2272395
     +      CANFLG/.FALSE./,  BNDERR/.FALSE./,  TABPRT/.FALSE./,        A2272400
     +      REFMOT/.FALSE./,  ALTMLT/.FALSE./                           A2272405
C                                                                       A2272410
C                                                                       A2272420
C  ***** DATA FOR ISV BLOCK ***************************                 A2273170
C                                                                       A2273180
      DATA  IAFL/0,4*-1/,  ICANON/5*0/, INDEX/5*0/,  INDIR/5*0/,        A2273190
     +      IOP/5*0/,      IOPSET/5*0/, IPL/5*0/,    ISFIDN/5*0/,       A2273200
     +      ISFTYP/5*0/,   ISIGCR/5*0/, ISVFL/5*0/,  ITLON/5*0/,        A2273210
     +      ITSEG/5*0/,    IUNFL/5*0/,  JENT/0,4*1/, JIOPS/5*0/,        A2273220
     +      JTLFLG/5*0/,   JTN/5*0/,    JU1/5*0/,    LIMFL/5*0/,        A2273230
     +      ITSEGK/5*0/                                                 A2273240
      DATA  IFAR/3*0,2*1/, IFL4/5*0/,   J20/5*0/,    J21/5*0/,          A2273242
     +      J22/5*0/,      J23/5*0/,    J50/5*0/,    J51/5*0/,          A2273245
     +      NOTAN/5*0/,    JPH/5*0/                                     A2273250
C                                                                       A2273251
C                                                                       A2273252
C    *** IBRKPT BLOCK DATA ***                                          A2273253
C                                                                       A2273255
      DATA IBRKPT/51*0/                                                 A2273257
C                                                                       A2273259
C    *** KNUMBR BLOCK DATA--EACH VARIABLE NAME IS ITS VALUE (K0=0 ETC.) A2273270
C                                                                       A2273280
      DATA  K0/ 0/,  K1/ 1/,  K2/ 2/,  K3/ 3/,  K4/ 4/,  K5/ 5/,        A2273290
     +      K6/ 6/,  K7/ 7/,  K8/ 8/,  K9/ 9/, K10/10/, K12/12/,        A2273300
     +     K13/13/, K15/15/, K16/16/, K18/18/, K19/19/, K23/23/,        A2273310
     +     K24/24/, K25/25/, K26/26/, K27/27/, K29/29/, K30/30/,        A2273320
     +     K31/31/, K32/32/, K33/33/, K34/34/, K44/44/, K45/45/,        A2273330
     +     K46/46/, K47/47/, K48/48/, K50/50/, K51/51/, K52/52/,        A2273340
     +     K1013/1013/,  K1E4/10000/,    K1E6/1000000/, KM1/-1/         A2273350
C                                                                       A2273360
C                                                                       A2273370
C    *** IDEF BLOCK DATA ***                                            A2273380
C                                                                       A2273390
      DATA LDASIZ/0/,IERROR/0/,SURFAD/4*0/,KWRDSZ/8/,IBLK1/0/           A2273400
C                                                                       A2273410
C                                                                       A2273420
C    *** IFXCOR BLOCK DATA ***                                          A2273430
C                                                                       A2273440
      DATA  IAERR/0/  IAUTPS/0/, IBEGIN/0/,      IC/0/,    ICL/0/,      A2273450
     +        ICS/4/, ICSCNT/0/, ICTDEF/1/,    ICUT/0/,    IDS/3/,      A2273460
     +        IER/0/,    IGO/0/,  IGOTO/1/,   IGOUG/0/,    IGS/1/,      A2273470
     +      INOPS/0/, IPSDEF/1/,    IPS/2/,    IPT1/0/,     IS/0/,      A2273480
     +     ISEQNO/0/,  ISRCH/0/, ISTRUP/0/,      IT/0/, I3DFLG/0/,      A2273490
     +        JBR/0/,    JSW/0/,    LSV/1/,    LSV1/1/, MOTMOD/0/,      A2273500
     +     MULOUT/0/, MANTAX/1/, NMPNTS/400/,  NREC/0/,  NUMAX/0/,      A2273510
     +     NUMCNT/0/,   NUMP/5/, NUMPT1/0/,  NUMSFS/4/, NUMSUR/0/,      A2273520
     +         NW/0/, ICHECK/0/,   ISEG/0/,  NMBSEG/0/,   NWDS/0/,      A2273530
     +       MSAV/0/                                                    A2273540
C                                                                       A2273550
C  ***** DATA FOR ADDCOM BLOCK **************                           A2273910
C                                                                       A2273920
C                                                                       A2273930
      DATA ELMAX/ 200./,CLNGTH/0./,(ADDCOM(I),I=3,22)/20*0./            A2273940
      DATA  IBTFLG /-1/,  JLIN /0/,  KDYNFL /0/                         A2273945
C                                                                       A2273950
C                                                                       A2273960
C  ****  TRACFL BLOCK DATA ******************                           A2274010
C     INITIALIZED FALSE SET TRUE BY FIRST ENTRY INTO APT024.            A2274020
C                                                                       A2274030
      DATA TRACFL/.FALSE./                                              A2274040
C                                                                       A2274050
C                                                                       A2274060
C...  ***** DATA FOR AERR BLOCK ******                                  A2274220
      DATA   IAERFG, NPCTPT, PCTPTS, PCTPLN, ERRPTS / 2*0,  73*0.0 /    A2274230
C                                                                       A2274240
C     ***** DATA FOR HOLD **********                                    A2274250
      DATA JHLDFG,ITHCNT /0,1/                                          A2274290
C                                                                       A2274300
C     *****DATA FOR DARRAY ***********                                  A2274301
C                                                                       A2274302
      DATA DARRAY/'                                                     A2274354
     +                                                                  A2274356
     + '/                                                               A2274358
C---    INITIALIZATION FOR UNITS                                        A2274361
      DATA OLDMOD/'INCHES'/,IOLD/3/,TABEXT/10.0/,SSEXT/10.0/            A2274363
      END                                                               A2274370
**** SOURCE FILE : M0011532.W01   ***
*
C                                                                       M0000100
      BLOCK DATA BDCLDT                                                 M0000200
C                                                                       M0000300
C                                                                       M0000800
      INCLUDE 'CLDT.INC'                                                M0000910
C                                                                       M0001000
      DATA CLDFG,ICLCOD,ICLCNT,ICLINE,ICLBLK,ICLRCD,ICLTAB              M0001100
     *   /.FALSE.,    0,     0,     0,     0,     0, 500*0/             M0001200
      DATA IPTVEC /2,3,5,7,11,13,17,19,23/                              M0001300
      DATA PNTVCT /'TP      ','TA      ','TV      ','PDS     ',         M0001400
     *  'NDS     ','PPS     ','NPS     ','UVPDS   ','UVPPS   '/         M0001500
C                                                                       M0001600
      END                                                               M0001700
**** SOURCE FILE : BLDGOU.ORG   ***
*
C                                                                       00000010
C.... BLOCK DATA PROGRAM TO INITIALIZE COMMON/CGOUG/                    00000020
C                                                                       00000030
      BLOCK DATA BLDGOU                                                 00000040
C                                                                       00000050
      INCLUDE 'CGOUG.INC'                                               00000060
C                                                                       00000070
      DOUBLE PRECISION Z0                                               00000080
      PARAMETER (Z0=0.D0)                                               00000090
C                                                                       00000100
      DATA TALT/3*Z0/,SVGL/Z0/,SHILF/Z0/,GFLG/Z0/,TPG/3*Z0/,SPG/3*Z0/   00000110
C                                                                       00000120
      END                                                               00000130
**** SOURCE FILE : M0001877.V04   ***
*
C.....FORTRAN SUBROUTINE             CCURV ...              3/1/68   GK 00000100
      SUBROUTINE CCURV(ISSTO,SP3,SPL3,SN3)                              00000200
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00000300
C                                                                       00000399
      INCLUDE 'TOTAL.INC'                                               00001301
      INCLUDE 'FXCOR.INC'                                               00004001
      INCLUDE 'SV.INC'                                                  00007301
      INCLUDE 'ISV.INC'                                                 00008901
      INCLUDE 'IFXCOR.INC'                                              00010701
      INCLUDE 'ISHR18.INC'                                              00011901
C                                                                       00012000
      DIMENSION SP3(3),SPL3(3),SN3(3)                                   00012100
      DATA Z1EM3,Z1EM4,Z1EM9,ZERO,Z100/1.D-3,1.D-5,1.D-9,0.D0,100.D0/   00012200
C                                                                       00012300
C             /-INPUT SURFACE PT -SP3, AND NORMAL SN3, AND LAST POINT SP00012400
C             /-ISSTO IS INDEX TO CURRENT SURFACE(2=PART,3=DRIVE ETC)   00012500
C             /-FIND SURFACE CENTER OF CURVATURE AND RADIUS(CC,RC)      00012600
C                                                                       00012700
      IF(IPL(ISSTO).EQ.0) GO TO 1                                       00012800
C             /-PLANAR SURFACE CASE - IPL=1                             00012900
      ISIGCR(ISSTO)=-1                                                  00013000
      GO TO 6                                                           00013100
    1 CONTINUE                                                          00013200
C             /-NON-PLANAR GENERAL CASE                                 00013300
C             /-CHECK FOR SIGNIFICANCE OF SP-SPL                        00013400
C             /-N=0 MEANS SP-SPL IS TOO SMALL FOR CALCULATION           00013500
      N=1                                                               00013600
      DO 2 I=1,3                                                        00013700
      TEMP(I)=SP3(I)-SPL3(I)                                            00013800
      IF(DABS(TEMP(I)).GT.Z1EM3) N=0                                    00013900
    2 CONTINUE                                                          00014000
      IF(N.LE.0) GO TO 3                                                00014100
C             /-SP-SPL INSIGNIFICANT, USE LAST RC                       00014200
      ISIGCR(ISSTO)=1                                                   00014300
      GO TO 6                                                           00014400
    3 CONTINUE                                                          00014500
C             /-NORMAL CASE FOR GENERAL SURFACE                         00014600
      CALL VNORM(TEMP,TEMP(4))                                          00014700
      CALL DOTF(W1,TEMP(4),SN3)                                         00014800
      IF(DABS(W1).GE.Z1EM4) GO TO 4                                     00014900
C             /-SP-SPL ALMOST PERPENDICULAR TO SN . SET RC 45 INCH      00015000
   30 RC(ISSTO)=DSIGN((RC1/Z100),RC(ISSTO))                             00015100
      ISIGCR(ISSTO)=-1                                                  00015200
      GO TO 6                                                           00015300
    4 CONTINUE                                                          00015400
C     CHECK, WHETHER SURFACE IS LOCALLY ALMOST PLANAR                   00015420
      CALL DOTF (W1,TA,SN3)                                             00015440
      IF (DABS(W1).GE.1.D0-Z1EM4.AND.MANTAX.LT.2) GO TO 30              00015450
C             /-GENERAL CASE, CALCULATE R SO THAT (SP-R*SN-SPL)**2=R**2 00015500
C             /-CENTER OF CURV. IS ON SIDE OF SN IF RC NEGATIVE.        00015600
      CALL DOTF(W1,TEMP,SN3)                                            00015700
      CALL DOTF(RC(ISSTO),TEMP,TEMP)                                    00015800
C             /-R=D**2/(2*(D,SN)) WHERE D=SP-SPL                        00015900
      RC(ISSTO)=RC(ISSTO)/(W1+W1)                                       00016000
C             /-SET FLAG TO NORMAL CASE                                 00016100
      ISIGCR(ISSTO)=0                                                   00016200
C             /-COMMON RETURN POINT FOR ALL CASES                       00016300
    6 CONTINUE                                                          00016400
      DO 7 I=1,3                                                        00016600
      CC(I,ISSTO)=SP3(I)-RC(ISSTO)*SN3(I)                               00016700
      IF(DABS(CC(I,ISSTO)).LT.Z1EM9) CC(I,ISSTO)=ZERO                   00016800
    7 CONTINUE                                                          00017000
      RETURN                                                            00017100
      END                                                               00017200
**** SOURCE FILE : M0002742.W07   ***
*
C.....FORTRAN SUBROUTINE  ....CENTR          8/68                    HG CENT0001
C...  FORTRAN SUBROUTINE               CENTR                            CENT0002
      SUBROUTINE CENTR                                                  CENT0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CENT0020
C                                                                       CENT0030
C                                                                       CENT0040
C                                                                       CENT0050
C                                                                       CENT0060
      INCLUDE 'TOTAL.INC'                                               CENT0171
      INCLUDE 'DSHAR4.INC'                                              CENT0369
      INCLUDE 'FXCOR.INC'                                               CENT0673
      INCLUDE 'SV.INC'                                                  CENT0969
      INCLUDE 'ZNUMBR.INC'                                              CENT1065
      INCLUDE 'ISV.INC'                                                 CENT1217
      INCLUDE 'IFXCOR.INC'                                              CENT1377
      INCLUDE 'ISHR18.INC'                                              CENT1489
      INCLUDE 'KNUMBR.INC'                                              CENT1633
C                                                                       CENT1650
C                                                                       CENT1651
C...  21. ADDCOM BLOCK                                                  CENT1652
C                                                                       CENT1653
      COMMON /ADDCOM/ ADDCOM                                            CENT1654
      DIMENSION ADDCOM(25)                                              CENT1655
      EQUIVALENCE (ADDCOM(25),KDYNFL)                                   CENT1656
C                                                                       CENT1657
C                                                                       CENT1660
      INCLUDE 'CHANG.INC'                                               CENT1662
      DIMENSION TEZA(3)                                                 CENT1664
C                                                                       CENT1669
      DIMENSION P(3)                                                    CENT1670
      DIMENSION SAVETE(3),SAVETA(3)                                     CENT1680
C                                                                       CENT1682
      LOGICAL LRET                                                      CENT1684
C                                                                       CENT1686
C                   ACC       FUDGE TERM FOR DISTANCE MEASUREMENTS, SET CENT1690
C                             AT 5.E-6                                  CENT1700
C                  IM       FLAG USED IN ORIENTING TANGENT CS NORMAL    CENT1702
C                           WITH OTHER SURFACE NORMAL.                  CENT1704
C                   PTOL      FRACTION OF TOTAL TOLERANCE BAND ABOUT    CENT1710
C                             PLANES WITHIN WHICH TOOL IS CONSTRAINED   CENT1720
C                             TO LIE. INITIALLY .2, ENLARGED TO 1.0 AS  CENT1730
C                             ITERATION COUNT INCREASES.                CENT1740
C                   SAVETA(3) SAVES TOOL AXIS DURING NOTAN STEP.        CENT1750
C                   SAVETE(3) SAVES TOOL END POSITION DURING NOTAN STEP.CENT1760
C                   SAVES     SAVES DISTANCE TO ALL 3 SURFACES ON ENTRY CENT1770
C                             TO NOTAN STEP.  USED AS A CRITERION FOR   CENT1780
C                             POSSIBLE RESTART FROM ENTRY TO NOTAN.     CENT1790
C                   SMOVE     MAGNITUDE OF SMALLEST VECTOR WHICH CAN BE CENT1800
C                             ADDED TO TOOL END WITHIN SINGLE PRECISION.CENT1810
C                             SET ON ENTRY TO CENTR.   ALL MOVE VECTORS CENT1820
C                             ARE ENLARGED TO THIS SIZE IF NECESSARY    CENT1830
C                   TANANG    CRITERION FOR ESTABLISHING PSEUDO-TANGENCYCENT1840
C                             IS DOT(CHECK SURF NORMAL, OTHER SURF      CENT1850
C                             NORMAL) .GT. TANANG.  SET AT 1-.5*TAU.    CENT1860
C                                                                       CENT1870
C                   PURPOSE   TO ITERATE CUTTER TO DESIRED POSITION     CENT1880
C                             RELATIVE TO 2 OR 3 SURFACES               CENT1890
C                                                                       CENT1900
C-----------------------------------------------------------------------CENT1910
C                                                                       CENT1917
C     MAIN ROUTINE                                                      CENT1920
C...                INITIALIZATIONS                                     CENT1930
C                                                                       CENT1952
      ITINK=0                                                           CENT1954
      ITOLFL=0                                                          CENT1956
      JTKF=0                                                            CENT1958
C                                                                       CENT1962
      DO 1 I=1,3                                                        CENT1964
        TEZA(I)=TE(I)                                                   CENT1966
   1  CONTINUE                                                          CENT1968
C                                       TINKR FAILURE COUNTER           CENT1970
      JTRC=10                                                           CENT1980
C                                       PLANE TOLERANCE LIMIT FACTOR    CENT1990
      PTOL=.2                                                           CENT2000
C                                       PARALLEL SURFACE TOLERANCE      CENT2010
      TANANG=1.-.5*TAU(IS)                                              CENT2020
      IF (TANANG.LT.Z9EM1) TANANG=Z9EM1                                 CENT2022
C                                       EPSILON FOR DISTANCES           CENT2030
      ACC=5.D-6                                                         CENT2040
C                                       MAGNITUDE OF SMALLEST MOVE WHICHCENT2050
C                                       CAN BE MADE IN SINGLE PRECISION CENT2060
      SMOVE=1.D-7*DMAX1(DABS(TE(1)),DABS(TE(2)),DABS(TE(3)))            CENT2070
C                                       CPLAN FLAGS                     CENT2080
      CPLFL(IS)=0.                                                      CENT2090
      CPTST(IS)=0.                                                      CENT2100
C                                                                       CENT2110
C                                                                       CENT2120
C                                                                       CENT2130
C                                                                       CENT2140
C...                SET ITERATION COUNTERS                              CENT2150
C                                                                       CENT2160
C                                       5-AXIS RESTART COUNTER          CENT2170
      JCNT3=25                                                          CENT2180
C                                       NOTAN CPLAN COUNTER             CENT2190
  100 JCNT2=25                                                          CENT2200
C                                       BASIC CMOVE ITERATION COUNTER   CENT2210
      JCNT1=25                                                          CENT2220
C                                                                       CENT2230
C...                CALL 2 SURF IF 2 SURFACE ITERATION                  CENT2240
C                                                                       CENT2250
  105 IF (J51(IS)) 200,200,120                                          CENT2260
C                                                                       CENT2270
C...                CALL TANTO FOR TANGENT CS, OTHERWISE 3 SURF         CENT2280
C                                                                       CENT2290
  120 IF (ISFTYP(IS)-4) 300,400,300                                     CENT2300
C                                                                       CENT2310
C                                       GO TO EXIT                      CENT2320
  130 GO TO 1100                                                        CENT2330
C                                                                       CENT2340
C                                                                       CENT2350
C                                                                       CENT2360
C                                                                       CENT2370
C                                                                       CENT2380
C-----------------------------------------------------------------------CENT2390
C     2 SURF - ITERATE TOOL INTO PART AND DRIVE ONLY                    CENT2400
C                                                                       CENT2410
C                                                                       CENT2420
C                                                                       CENT2430
C...                CALL 2 SURF ITERAT                                  CENT2440
C                                                                       CENT2450
  200 ASSIGN 210 TO J2SURF                                              CENT2460
      GO TO 600                                                         CENT2470
C                                                                       CENT2480
C...                SET FLAG, 2 SURFACE ITERATION SUCCESSFUL            CENT2490
C                                                                       CENT2500
  210 JCR=0                                                             CENT2510
C                                                                       CENT2520
C...                RETURN TO MAIN PROGRAM                              CENT2530
C                                                                       CENT2540
      GO TO 130                                                         CENT2550
C                                                                       CENT2560
C                                                                       CENT2570
C                                                                       CENT2580
C                                                                       CENT2590
C                                                                       CENT2600
C-----------------------------------------------------------------------CENT2610
C     3 SURF - ITERATE TOOL TO PART, DRIVE, AND CHECK SURFACES          CENT2620
C                                                                       CENT2630
C                                                                       CENT2640
C                                                                       CENT2650
C...                FIND PART AND DRIVE SURFACES                        CENT2660
C                                                                       CENT2670
  300 ASSIGN 1000 TO JFPD                                               CENT2680
C                                                                       CENT2690
C...                FIND CHECK SURFACE                                  CENT2700
C                                                                       CENT2710
      ASSIGN  302 TO JFNDCK                                             CENT2720
      GO TO 800                                                         CENT2730
C                                                                       CENT2740
C...                FETCH CHECK DATA                                    CENT2750
C                                                                       CENT2760
C                                       NORMAL                          CENT2770
  302 DO  305 I=1,3                                                     CENT2780
      PLNV(I,IS)=TN(I,IS)                                               CENT2790
  305 CONTINUE                                                          CENT2800
C                                       DISTANCE                        CENT2810
      PLND(IS)=S(IS)                                                    CENT2820
C                                                                       CENT2830
C...                TEST PART AND DRIVE SURFACES                        CENT2840
C                                                                       CENT2850
      ASSIGN 310 TO JTSTPD                                              CENT2860
      GO TO 900                                                         CENT2870
  310 IF (JTOL) 330,330,315                                             CENT2880
C                                                                       CENT2890
C...                BOTH WITHIN LIMIT, CALL TEST CHECK SURF             CENT2900
C                                                                       CENT2910
  315 ASSIGN 320 TO JTSTCK                                              CENT2920
      GO TO 1300                                                        CENT2930
  320 IF (JTOL) 330,330,380                                             CENT2940
C                                                                       CENT2950
C...                TEST IF PSEUDO-TANGENCY ALREADY HANDLED             CENT2960
C                                                                       CENT2970
  330 IF (NOTAN(IS)) 365,340,340                                        CENT2980
C                                                                       CENT2990
C...                TEST IF PSEUDO-TANGENCY HAS DEVELOPED               CENT3000
C                                                                       CENT3010
C                                       TEST CHECK SURF BEYOND STEP     CENT3020
  340 IF (DABS(S(IS))-DP)  350,350,365                                  CENT3030
C                                       TEST SURFACE TANGENCY           CENT3040
  350 DO 360 I= IPS,IDS,LSV                                             CENT3050
      IF (TANANG-DABS( SN(1,IS)*SN(1,I)                                 CENT3060
     1                +SN(2,IS)*SN(2,I)                                 CENT3070
     2                +SN(3,IS)*SN(3,I))) 370,360,360                   CENT3080
  360 CONTINUE                                                          CENT3090
C                                       NO PSEUDO-TAN                   CENT3100
C                                                                       CENT3110
C...                CALL CMOVE AND LOOP                                 CENT3120
C                                                                       CENT3130
  365 ASSIGN 300 TO JCMOVE                                              CENT3140
      GO TO 700                                                         CENT3150
C                                                                       CENT3160
C...                PSEUDO TANGENCY CASE                                CENT3170
C                                                                       CENT3180
C                                       SET FLAG FOR TANGENT SURF       CENT3190
  370 IFL4(IS)=(IDS-I)/LSV                                              CENT3200
C                                       CALL NOTAN AND LOOP             CENT3210
      GO TO 500                                                         CENT3220
C                                                                       CENT3230
C...                SET FLAG, SUCCESSFUL 3-SURF ITERATION               CENT3240
C                                                                       CENT3250
  380 JCR=1                                                             CENT3260
      GO TO 1100                                                        CENT3270
C                                                                       CENT3280
C                                                                       CENT3290
C                                                                       CENT3300
C                                                                       CENT3310
C-----------------------------------------------------------------------CENT3320
C     TANTO -  3 SURFACE ITERATION IN TANTO OR PSTAN CASE               CENT3330
C                                                                       CENT3340
C                                                                       CENT3350
C                                                                       CENT3360
C...                CALL FIND PART AND DRIVE                            CENT3370
C                                                                       CENT3380
  400 CONTINUE                                                          CENT3383
      IF(IFL4(IS).EQ.0.AND.                                             CENT3384
     X   (ISFIDN(IDS).GT.2.OR.ISFIDN(ICS).GT.2)) GO TO 402              CENT3385
      IF(IFL4(IS).EQ.1.AND.                                             CENT3386
     X   (ISFIDN(IPS).GT.2.OR.ISFIDN(ICS).GT.2)) GO TO 402              CENT3387
      IF(ISFIDN(IPS).LE.2) CALL AERR(25009,'CENTR   ')                  CENT3388
  402 IM=-1                                                             CENT3390
      ASSIGN 410 TO JFPD                                                CENT3395
      GO TO 800                                                         CENT3400
C                                                                       CENT3410
C...                CALL FIND CHECK                                     CENT3420
C                                                                       CENT3430
  410 ASSIGN 1400 TO JFNDCK                                             CENT3440
C                                                                       CENT3450
C...                CALL CPLAN SURF                                     CENT3460
C                                                                       CENT3470
      ASSIGN 420 TO JCPLAN                                              CENT3480
      GO TO 1000                                                        CENT3490
C                                                                       CENT3500
C...                TEST WHETHER NORMALS HAVE SAME ORIENTATION          CENT3510
C                                                                       CENT3520
  420 IF (PLNCS(IS)) 430,460,460                                        CENT3530
C                                                                       CENT3540
C...                OPPOSITE, TEST WHETHER TOOL NORMAL ALREADY REVERSED CENT3550
C                                                                       CENT3560
  430 IF (IM) 440,450,450                                               CENT3570
C                                                                       CENT3580
C...                NOT REVERSED, REVERSE AND SET FLAG                  CENT3590
C                                                                       CENT3600
  440 DO 445 I=1,3                                                      CENT3610
      TN(I,IS)=-TN(I,IS)                                                CENT3620
  445 CONTINUE                                                          CENT3630
      IM=0                                                              CENT3640
      GO TO 410                                                         CENT3650
C                                                                       CENT3660
C...                NORMAL REVERSED, TEST WHETHER NORMALS NEAR ORTHOG   CENT3670
C                                                                       CENT3680
  450 IF (DABS(PLNCS(IS))-.01) 455,452,452                              CENT3690
C                                                                       CENT3700
C...                NEAR ORTHOGONAL, ERROR EXIT                         CENT3710
C                                                                       CENT3720
 452  CALL AERR(25008,'CENTR   ')                                       CENT3730
C                                                                       CENT3740
C...                RESET TOOL NORM REVERSAL FLAG                       CENT3750
C                                                                       CENT3760
  455 IM=-1                                                             CENT3770
C                                                                       CENT3780
C...                TEST WHETHER WITHIN 2*TAU OF CPLAN                  CENT3790
C                                                                       CENT3800
  460 IF(DABS (PLND(IS))-EPS4(IS) ) 462,462,464                         CENT3810
C                                                                       CENT3820
C...                WITHIN 2*TAU, TEST WHETHER NORMALS PARALLEL         CENT3830
C                                                                       CENT3840
  4620IF( TANANG-DABS(SN(1,IS)*SN(1,IT)                                 CENT3850
     1               +SN(2,IS)*SN(2,IT)                                 CENT3860
     2               +SN(3,IS)*SN(3,IT))) 480,480,464                   CENT3870
C                                                                       CENT3880
C...                CALL CMOVE, USING CPLAN DATA                        CENT3890
C                                                                       CENT3900
  464 ASSIGN 471 TO JCMOVE                                              CENT3910
      GO TO 700                                                         CENT3920
C                                                                       CENT3930
C...                CALL 2 SURFACE ITERATION AND LOOP                   CENT3940
C                                                                       CENT3950
 471  IM = -1                                                           CENT3960
      IF(KDYNFL.NE.K0) CALL APT238(K31)                                 CENT3961
      ASSIGN 410 TO J2SURF                                              CENT3962
      GO TO 600                                                         CENT3970
C                                                                       CENT3980
C...                NORMALS PARALLEL, CALL TEST CHECK SURF              CENT3990
C                                       RETURN TO MAIN IF IN TOL        CENT4000
  480 ASSIGN 482 TO JTSTCK                                              CENT4010
      GO TO 1300                                                        CENT4020
  482 IF (JTOL) 486,486,483                                             CENT4030
  483 JCR=1                                                             CENT4040
      GO TO 130                                                         CENT4050
C                                                                       CENT4060
C...                NOT WITHIN TOL, TEST WHETHER WITHIN 8*TAU           CENT4070
C                                                                       CENT4080
  486 IF (8.*TAU(IS)-DABS(S(IS))) 488,488,464                           CENT4090
C                                                                       CENT4100
C...                NOT WITHIN 8*TAU, FALSE TANGENCY EXIT               CENT4110
C                                                                       CENT4120
  488 JCR=2                                                             CENT4130
      GO TO 1100                                                        CENT4140
C                                                                       CENT4150
C                                                                       CENT4160
C                                                                       CENT4170
C                                                                       CENT4180
C-----------------------------------------------------------------------CENT4190
C     NOTAN - PSEUDO-TANGENCY CALCULATION                               CENT4200
C                                                                       CENT4210
C                                                                       CENT4230
C                                       FLAG- PSEUDO TANGENCY DONE      CENT4240
  500 NOTAN(IS)=-1                                                      CENT4250
C                                       SAVE CUTTER POSITION FOR        CENT4260
C                                       RESET IF NECESSARY              CENT4270
      DO 502 I=1,3                                                      CENT4280
      SAVETE(I)=TE(I)                                                   CENT4290
      SAVETA(I)=TA(I)                                                   CENT4300
  502 CONTINUE                                                          CENT4310
C                                       CURRENT DISTANCE FROM SURFACES  CENT4320
      SAVES=DABS(S(IS))+DABS(S(IDS))+DABS(S(IPS))                       CENT4330
C                                                                       CENT4340
C...                CALL FIND PART AND DRIVE                            CENT4350
C                                                                       CENT4360
      ASSIGN 510 TO JFPD                                                CENT4370
      GO TO 800                                                         CENT4380
C                                                                       CENT4390
C...                CALL FIND CHECK                                     CENT4400
C                                                                       CENT4410
  510 ASSIGN 1400 TO JFNDCK                                             CENT4420
C                                                                       CENT4430
C...                CALL CPLAN SURF                                     CENT4440
C                                                                       CENT4450
      ASSIGN 520 TO JCPLAN                                              CENT4460
      GO TO 1000                                                        CENT4470
C                                                                       CENT4480
C...                TEST WHETHER WITHIN 2*TAU OF CPLAN                  CENT4490
C                                                                       CENT4500
  520 IF (DABS(PLND(IS))-EPS4(IS))  540,540,530                         CENT4510
C                                                                       CENT4520
C...                                    CALL CMOVE                      CENT4530
C                                                                       CENT4540
  530 ASSIGN 600 TO JCMOVE                                              CENT4550
C                                                                       CENT4560
C...                                    CALL 2 SURF ITERAT              CENT4570
C                                                                       CENT4580
      ASSIGN 531 TO J2SURF                                              CENT4590
      GO TO 700                                                         CENT4600
C                                                                       CENT4610
C...                CALL FIND CHECK                                     CENT4620
C                                                                       CENT4630
  531 ASSIGN 532 TO JFNDCK                                              CENT4640
      GO TO 1000                                                        CENT4650
C                                                                       CENT4660
C...                RESTORE IF MOVED AWAY FROM SURFACES                 CENT4670
C                                                                       CENT4680
  532 IF (DABS(S(IS))-2.0*SAVES) 510,510,535                            CENT4690
  535 DO 537 I=1,3                                                      CENT4700
      TE(I)=SAVETE(I)                                                   CENT4710
      TA(I)=SAVETA(I)                                                   CENT4720
  537 CONTINUE                                                          CENT4730
C                                       RETURN TO 3 SURF                CENT4740
      GO TO 300                                                         CENT4750
C                                                                       CENT4760
C...                TEST WHETHER CHECK SURF WITHIN TOL                  CENT4770
C                                                                       CENT4780
  540 ASSIGN 550 TO JTSTCK                                              CENT4790
      GO TO 1300                                                        CENT4800
  550 IF (JTOL)  555,555,565                                            CENT4810
C                                                                       CENT4820
C...                TEST WHETHER CHECK SURF WITHIN 8*TAU                CENT4830
C                                       RETURN TO 3 SURF IF SO          CENT4840
 555  IF(8*TAU(IS)-DABS(S(IS)))560,560,535                              CENT4850
C                                                                       CENT4860
C...                SET FALSE TANGENCY FLAG AND EXIT                    CENT4870
C                                                                       CENT4880
  560 JCR=2                                                             CENT4890
      GO TO 1100                                                        CENT4900
C                                                                       CENT4910
C...                CALL TEST PART AND DRIVE                            CENT4920
C                                                                       CENT4930
  565 ASSIGN 570 TO JTSTPD                                              CENT4940
      GO TO 900                                                         CENT4950
C                                                                       CENT4960
C...                RETURN TO 3-SURF IF BOTH WITHIN TOL,                CENT4970
C...                FALSE TANGENCY IF NOT                               CENT4980
C                                                                       CENT4990
  570 IF (JTOL) 560,560,300                                             CENT5000
C                                                                       CENT5010
C                                                                       CENT5020
C                                                                       CENT5030
C                                                                       CENT5040
C-----------------------------------------------------------------------CENT5050
C     2 SURF ITERATE - ITERATE TOOL INTO PART AND DRIVE SURFACES        CENT5060
C                                                                       CENT5070
C                                                                       CENT5080
C                                                                       CENT5090
C...                FIND PART AND DRIVE SURFACES                        CENT5100
C                                                                       CENT5110
  600 ASSIGN 900 TO JFPD                                                CENT5120
C                                                                       CENT5130
C...                TEST PART AND DRIVE SURFACES                        CENT5140
C                                                                       CENT5150
      ASSIGN 605 TO JTSTPD                                              CENT5160
      GO TO 800                                                         CENT5170
C                                                                       CENT5180
C...                RETURN IF BOTH WITHIN TOL                           CENT5190
C                                                                       CENT5200
  605 IF (JTOL) 615,615,610                                             CENT5210
C                                       RETURN                          CENT5220
  610 GO TO J2SURF, (210,410,510,531)                                   CENT5230
C                                                                       CENT5240
C...                CREATE PSEUDO CHECK SURFACE NORMAL TO               CENT5250
C...                PART AND DRIVE                                      CENT5260
C                                                                       CENT5270
  615 CALL CROSS(  TN(1,IPS),  TN(1,IDS),PLNV(1,IS))                    CENT5280
      CALL VNORM(PLNV(1,IS),PLNV(1,IS))                                 CENT5290
      PLND(IS)=0.0                                                      CENT5300
C                                                                       CENT5310
C...                CALL CMOVE AND LOOP                                 CENT5320
C                                                                       CENT5330
      ASSIGN 600 TO JCMOVE                                              CENT5340
      GO TO 700                                                         CENT5350
C                                                                       CENT5360
C                                                                       CENT5370
C                                                                       CENT5380
C                                                                       CENT5390
C-----------------------------------------------------------------------CENT5400
C     CMOVE - COMPUTE AND APPLY MOVE VECTOR                             CENT5410
C                                                                       CENT5420
C                                                                       CENT5430
C                                                                       CENT5440
C...                IN CASE OF PLANE PART AND DRIVE SURFACES, MODIFY    CENT5450
C...                DISTANCES TO DIRECT TOOL TOWARD CENTER OF TOLERANCE CENT5460
C...                BAND AS ITERATION COUNT INCREASES                   CENT5470
C                                                                       CENT5480
  700 DO 701 I=IPS,IDS,LSV                                              CENT5490
C                                       SKIP IF SURF NOT A PLANE        CENT5500
      IF (IPL(I)) 705,701,705                                           CENT5510
C                                       ADAUST DIST TOWARD CENTER       CENT5520
  705 S(I)=S(I) - (TAU1(I)+TAU2(I))/2.0 * (PTOL-.2)/.8                  CENT5530
C                                                                       CENT5540
  701 CONTINUE                                                          CENT5550
C.... SPECIAL TREATMENT FOR 2 SURFACE APPROACH WHEN DIST TO             CENT5551
C     ONE SURFACE IS ZERO                                               CENT5552
      IF (J51(IS).EQ.0) THEN                                            CENT5553
        IF (S(IDS).NE.Z0) THEN                                          CENT5554
          CONTINUE                                                      CENT5555
        ELSE                                                            CENT5556
          DO 702 III=1,3                                                CENT5557
            CMOVE(III)=Z9EM1*TN(III,IPS)*S(IPS)                         CENT5558
  702     CONTINUE                                                      CENT5559
          GOTO 720                                                      CENT5560
        ENDIF                                                           CENT5561
      ENDIF                                                             CENT5562
C                                                                       CENT5569
C...                COMPUTE MOVE VECTOR                                 CENT5570
C                                                                       CENT5580
     0CALL GAUSS(  TN(1,IPS),   S(IPS),                                 CENT5590
     1             TN(1,IDS),   S(IDS),                                 CENT5600
     2           PLNV(1,IS),PLND( IS),CMOVE,JPXR)                       CENT5610
C                                                                       CENT5612
C....  DETERMINE MAXIMUM DIST TO SURFACES                               CENT5614
C                                                                       CENT5616
      SIMAX=MAX(ABS(S(IPS)),ABS(S(IDS)),ABS(PLND(IS)))                  CENT5618
C                                                                       CENT5620
      IF (JPXR.NE.0) THEN                                               CENT5630
C.... GAUSS FAILED - COMPUTE CMOVE BY ALTERNATIVE METHODS               CENT5640
        CALL ALTCMV(JPXR,TN,S,IPS,IDS,PLND(IS),PLNV(1,IS),EPS1(IS),     CENT5642
     +              CMOVE,LRET)                                         CENT5644
        JPXR=1                                                          CENT5646
C.... IS TOOL IN TOLERANCE OD CS WHEN PS PARALLEL TO CS                 CENT5647
        IF (LRET) GOTO 380                                              CENT5648
      ENDIF                                                             CENT5649
C                                                                       CENT5750
C...                TEST FOR ITERATION 10, 5, OR 3 OF 3 SURF            CENT5760
C                                                                       CENT5770
  720 IF ( (JCNT1-18)*(JCNT1-9)*(JCNT1-3)+(JCNT1-22) ) 735,725,735      CENT5780
C                                                                       CENT5790
C...                IF SO, WIDEN TOLERANCE LIMIT AND HALVE MOVE         CENT5800
C                                                                       CENT5810
  725 EPS8(IPS)=1.709976*EPS8(IPS)                                      CENT5820
      EPS8(IDS)=1.709976*EPS8(IDS)                                      CENT5830
      EPS8(IS )=1.709976*EPS8(IS )                                      CENT5840
      PTOL     =1.709976*PTOL                                           CENT5850
      DO 730 I=1,3                                                      CENT5860
      CMOVE(I)=.5*CMOVE(I)                                              CENT5870
  730 CONTINUE                                                          CENT5880
C                                                                       CENT5881
C.... ENSURE CMOVE IS LESS THAN LARGEST ACTUAL DISTANCE TO SURFACES     CENT5882
      BCMOV=SQRT(CMOVE(1)*CMOVE(1)+CMOVE(2)*CMOVE(2)                    CENT5883
     +          +CMOVE(3)*CMOVE(3))                                     CENT5884
      IF (BCMOV.GT.SIMAX) THEN                                          CENT5885
        DO 731 IK=1,3                                                   CENT5886
          CMOVE(IK)=SIMAX/BCMOV*CMOVE(IK)                               CENT5887
  731   CONTINUE                                                        CENT5888
      ENDIF                                                             CENT5889
C                                                                       CENT5890
C...                ADD MOVE TO TOOL END                                CENT5900
C                                                                       CENT5910
C                                       FACTOR TO ENLARGE MOVE TO MINIM-CENT5920
C                                       AL SIZE IF NECESSARY            CENT5930
  735 TEMP(1) = DMAX1(Z1,SMOVE/DMAX1(DABS(CMOVE(1)),                    CENT5940
     1                         DABS (CMOVE(2)),                         CENT5950
     2                         DABS (CMOVE(3)) ) )                      CENT5960
C                                       ADD MOVE                        CENT5970
      DO 740 I=1,3                                                      CENT5980
      TE(I)=TE(I)+TEMP(1)*CMOVE(I)                                      CENT5990
  740 CONTINUE                                                          CENT6000
C                                                                       CENT6010
C...                 STEP COUNTER, AND RETURN                           CENT6020
C                                                                       CENT6030
      IF (JCNT1) 750,750,745                                            CENT6040
  745 JCNT1=JCNT1-1                                                     CENT6050
C                                       RETURN                          CENT6060
      GO TO JCMOVE ,(300,600,471)                                       CENT6070
C                                                                       CENT6080
C                                                                       CENT6090
C...                IF COUNTER EXHAUSTED, ISSUE WARNING                 CENT6100
C                                                                       CENT6110
C                                       BRANCH TO ERROR                 CENT6130
  750 GO TO 1600                                                        CENT6140
C                                                                       CENT6150
C                                                                       CENT6160
C                                                                       CENT6170
C-----------------------------------------------------------------------CENT6180
C     FIND PART DRIVE - DETERMINE NORMALS AND DISTANCES FOR PART        CENT6190
C                       AND DRIVE SURFACES                              CENT6200
C                                                                       CENT6210
C                                                                       CENT6220
C                                       SAVE INDEX                      CENT6230
  800 ISSTO=IS                                                          CENT6240
C                                       CALL FOR PART SURFACE           CENT6250
      IS=IPS                                                            CENT6260
      JMINR=1                                                           CENT6265
      CALL AMIND                                                        CENT6270
      IS=ISSTO                                                          CENT6272
      IF(JMIN.EQ.1) GO TO 1600                                          CENT6275
C                                       CALL FOR DRIVE SURFACE          CENT6280
C                                                                       CENT6290
      IS=IDS                                                            CENT6300
      JMINR=1                                                           CENT6305
      CALL AMIND                                                        CENT6310
      IS=ISSTO                                                          CENT6312
      IF(JMIN.EQ. 1) GO TO 1600                                         CENT6315
C                                       RESTORE INDEX                   CENT6320
C                                                                       CENT6330
C                                       RETURN                          CENT6340
      GO TO JFPD,(1000,410,510,900,922)                                 CENT6350
C                                                                       CENT6360
C                                                                       CENT6370
C                                                                       CENT6380
C                                                                       CENT6390
C-----------------------------------------------------------------------CENT6400
C     TEST PART DRIVE - SET JTOL +1 IF BOTH PART AND DRIVE SURFACE      CENT6410
C                       DISTANCES ARE ACCEPTABLE                        CENT6420
C                                                                       CENT6430
C                                                                       CENT6440
C...                CALL TINKR FOR 5-AXIS CASE                          CENT6450
C                                                                       CENT6460
  900 IF (MANTAX-2) 925,910,910                                         CENT6470
  910 IF (ITINK.LE.0) GOTO 925                                          CENT6480
      CALL TINKR                                                        CENT6482
C                                       TEST IF TA MOVED                CENT6490
      IF (JTR)915,921,925                                               CENT6500
  915 JTRC=JTRC-1                                                       CENT6510
      IF (JTRC) 920,925,925                                             CENT6520
C                                       ERROR IF COUNTER EXHAUSTED      CENT6530
 920  CALL AERR(25007,'CENTR   ')                                       CENT6540
C                                       IF SO,REESTABLISH               CENT6550
C                                       FIND PART AND DRIVE             CENT6560
  921 ASSIGN 922 TO JFPD                                                CENT6570
      GO TO 800                                                         CENT6580
C                                       RE-ADJUST AXIS                  CENT6590
  922 IF (ITINK.LE.0) GOTO 925                                          CENT6600
      CALL TINKR                                                        CENT6602
C                                                                       CENT6610
C                                                                       CENT6620
C...                TEST PART AND DRIVE SURFACES                        CENT6630
C                                                                       CENT6640
  925 DO  950  I=IPS,IDS,LSV                                            CENT6650
C                                       TEST WHETHER SURFACE A PLANE    CENT6660
      IF (IPL(I)) 930,930,935                                           CENT6670
C                                       NON-PLANAR                      CENT6680
  930 IF (DABS(S(I))-EPS8(I)) 950,950,965                               CENT6690
C                                       PLANE, TEST WHICH SIDE          CENT6700
  935 IF (S(I)) 940,950,945                                             CENT6710
  940 IF (S(I)-PTOL*TAU2(I)+1.E-6) 965,950,950                          CENT6720
  945 IF (S(I)-PTOL*TAU1(I)-1.E-6) 950,950,965                          CENT6730
  950 CONTINUE                                                          CENT6740
C                                                                       CENT6750
C...                BOTH WITHIN TOLERANCE                               CENT6760
C                                                                       CENT6770
  960 JTOL=1                                                            CENT6780
      GO TO 970                                                         CENT6790
C                                                                       CENT6800
C...                NOT BOTH WITHIN TOL                                 CENT6810
C                                                                       CENT6820
  965 JTOL=-1                                                           CENT6830
C                                                                       CENT6840
C...                RETURN                                              CENT6850
C                                                                       CENT6860
  970 GO TO JTSTPD, (310,570,605)                                       CENT6870
C                                                                       CENT6880
C                                                                       CENT6890
C                                                                       CENT6900
C                                                                       CENT6910
C-----------------------------------------------------------------------CENT6920
C     FIND CHECK - DETERMINE NORMAL AND DISTANCE TO CHECK SURFACE       CENT6930
C                                                                       CENT6940
C                                                                       CENT6950
C                                                                       CENT6960
C...                CALL AMIND FOR CHECK SURFACE                        CENT6970
C                                                                       CENT6980
C                                       RETURN IF AMIND ERROR           CENT6990
 1000 JMINR=1                                                           CENT7000
      CALL AMIND                                                        CENT7010
C                                       RESET RETURN FLAG               CENT7020
      JMINR=0                                                           CENT7030
C                                       BRANCH IF ERROR                 CENT7040
      IF (JMIN) 1010,1010,1600                                          CENT7050
C                                       RETURN                          CENT7060
 1010 GO TO JFNDCK, (1400,302,532)                                      CENT7070
C                                                                       CENT7080
C                                                                       CENT7090
C                                                                       CENT7100
C                                                                       CENT7110
C-----------------------------------------------------------------------CENT7120
C     EXIT - RESET QUANTITIES AND RETURN                                CENT7130
C                                                                       CENT7140
C                                                                       CENT7150
C...                IF 5-AXIS CASE, VERIFY TOOL AXIS SATISFACTORY       CENT7160
C                                                                       CENT7170
 1100 IF(2-MANTAX) 1102,1102,1108                                       CENT7180
C                                                                       CENT7181
 1102 IF (ITINK.EQ.0) THEN                                              CENT7182
        ITINK=1                                                         CENT7183
        GOTO 105                                                        CENT7184
      ELSE IF (ITINK.EQ.-1) THEN                                        CENT7185
        GOTO 1108                                                       CENT7186
      ELSE                                                              CENT7187
C                                       RESET AXIS IF NECESSARY         CENT7190
        CALL TINKR                                                      CENT7200
      ENDIF                                                             CENT7202
C                                       TEST WHETHER AXIS MOVED         CENT7210
      IF (JTR) 1103,1104,1108                                           CENT7220
C                                       TINKR ERROR                     CENT7230
 1103 CALL AERR(25004,'CENTR   ')                                       CENT7240
C                                       AXIS MOVED, INDEX COUNTER       CENT7250
C                                       AND RESTART                     CENT7260
 1104 IF(JCNT3) 1105,1106,1106                                          CENT7270
C                                       COUNTER EXHAUSTED               CENT7280
 1105 CALL AERR(25003,'CENTR   ')                                       CENT7290
C                                                                       CENT7300
 1106 JCNT3=JCNT3-1                                                     CENT7310
      GO TO 100                                                         CENT7320
C                                                                       CENT7330
C...                RESET   3-SURFACE FLAGS AND TOLERANCE BAND LIMITS   CENT7340
C                                                                       CENT7350
 1108 IF (J51(IS)) 1120,1120,1110                                       CENT7360
 1110 J50(IS)=0                                                         CENT7370
      J51(IS)=0                                                         CENT7380
      EPS8(IPS)=EPS1(IPS)                                               CENT7390
      EPS8(IDS)=EPS1(IDS)                                               CENT7400
      EPS8(IS)=EPS1(IS)                                                 CENT7410
      NOTAN(IS)=0                                                       CENT7420
C                                                                       CENT7430
C...                RETURN TO CALLING PROGRAM                           CENT7440
C                                                                       CENT7450
 1120 CONTINUE                                                          CENT7460
C... HAS TE CHANGED                                                     CENT7461
      IF ( (TEZA(1).NE.TE(1)) .OR. (TEZA(2).NE.TE(2)) .OR.              CENT7462
     +     (TEZA(3).NE.TE(3)) ) THEN                                    CENT7463
        JTENEU=1                                                        CENT7464
      ELSE                                                              CENT7465
        JTENEU=0                                                        CENT7466
      ENDIF                                                             CENT7467
      RETURN                                                            CENT7470
C                                                                       CENT7480
C                                                                       CENT7490
C                                                                       CENT7500
C                                                                       CENT7510
C-----------------------------------------------------------------------CENT7520
C     TEST CHECK SURFACE                                                CENT7530
C                                                                       CENT7540
C                                                                       CENT7550
C                                                                       CENT7560
C                                       BRANCH IF SURF A PLANE          CENT7570
 1300 IF (IPL(IS)) 1310,1310,1330                                       CENT7580
C                                       TEST FOR INNER OR OUTER SIDE    CENT7590
 1310 IF (DFLOAT(2*JTN(IS)-1)*RC(IS)*S(IS)) 1315,1350,1320              CENT7600
C                                       INNER SIDE                      CENT7610
 1315 IF (DABS(S(IS))-EPS8(IS)-5.D-6) 1350,1350,1360                    CENT7620
C                                       OUTER SIDE                      CENT7630
 1320 IF (DABS(S(IS))-(TAU(IS)-EPS8(IS)+Z5EM6)) 1350,1350,1360          CENT7640
C                                       PLANE SURFACE                   CENT7650
C                                       TEST INNER OR OUTER             CENT7660
 1330 IF (S(IS)) 1340,1340,1335                                         CENT7670
C                                       INNER                           CENT7680
 1335 IF (S(IS)-ACC-TAU1(IS)) 1350,1350,1360                            CENT7690
C                                       OUTER                           CENT7700
 1340 IF (S(IS)+ACC-TAU2(IS)) 1360,1350,1350                            CENT7710
C                                                                       CENT7720
C...                WITHIN TOLERANCE BAND                               CENT7730
C                                                                       CENT7740
 1350 JTOL=1                                                            CENT7750
      GO TO 1370                                                        CENT7760
C                                                                       CENT7770
C...                NOT WITHIN TOLERANCE BAND                           CENT7780
C                                                                       CENT7790
 1360 JTOL=-1                                                           CENT7800
C                                       RETURN                          CENT7810
 1370 GO TO JTSTCK, (320,482,550)                                       CENT7820
C                                                                       CENT7830
C                                                                       CENT7840
C                                                                       CENT7850
C                                                                       CENT7860
C-----------------------------------------------------------------------CENT7870
C     CPLAN SURF - OBTAIN PSEUDO CHECK SURFACE DATA FROM CPLAN          CENT7880
C                  ROUTINE                                              CENT7890
C                                                                       CENT7900
C                                                                       CENT7910
C                                                                       CENT7920
C                                                                       CENT7930
 1400 CALL CPLAN                                                        CENT7940
      IT=IT                                                             CENT7950
C                                                                       CENT7960
C...                BRANCH IF CPLAN FAILURE                             CENT7970
C                                                                       CENT7980
      IF (JCPR) 1420,1410,1420                                          CENT7990
C                                                                       CENT8000
C...                RETURN                                              CENT8010
C                                                                       CENT8020
 1410 GO TO JCPLAN, (420,520)                                           CENT8030
C                                                                       CENT8040
C...                CPLAN ERROR                                         CENT8050
C                                                                       CENT8060
 1420 CALL AERR(25005,'CENTR   ')                                       CENT8070
C                                                                       CENT8080
C                                                                       CENT8090
C                                                                       CENT8100
C                                                                       CENT8110
C-----------------------------------------------------------------------CENT8120
C     ERROR -                REDUCE STEPSIZE IF POSSIBLE, AND SET       CENT8130
C                            FLAG FOR RESTART                           CENT8140
C                                                                       CENT8150
C                                                                       CENT8160
C                                                                       CENT8170
C                                       BRANCH IF 3 SURFACE CALL        CENT8180
 1600 IF (J51(IS)) 1610,1610,1630                                       CENT8190
C                                       REDUCE STEPSIZE                 CENT8200
 1610 DP=.6*DP                                                          CENT8210
C                                       ERROR IF STEPSIZE .LT. TOLERANCECENT8220
      IF (DP-DABS(TAU(IS))) 1620,1620,1630                              CENT8230
C                                       ERROR ROUTINE                   CENT8240
 1620 CALL AERR(25002,'CENTR   ')                                       CENT8250
C                                       SET FLAG FOR RESTART            CENT8260
 1630 JCR=-1                                                            CENT8270
C                                       BRANCH TO EXIT                  CENT8280
      GO TO 1100                                                        CENT8290
C                                                                       CENT8300
C                                                                       CENT8310
C                                                                       CENT8320
C                                                                       CENT8330
C                                                                       CENT8340
       END                                                              CENT8350
**** SOURCE FILE : M0002746.W04   ***
*
C.....FORTRAN SUBROUTINE  ....CHECK          8/68                 PH,HG CHCK0001
C                                                                       CHCK0002
      SUBROUTINE CHECK                                                  CHCK0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CHCK0020
C                                                                       CHCK0030
C                                                                       CHCK0040
C                                                                       CHCK0050
C                                                                       CHCK0060
      INCLUDE 'TOTAL.INC'                                               CHCK0171
      INCLUDE 'DSHAR4.INC'                                              CHCK0369
      INCLUDE 'FXCOR.INC'                                               CHCK0673
      INCLUDE 'SV.INC'                                                  CHCK0969
      INCLUDE 'ZNUMBR.INC'                                              CHCK1065
      INCLUDE 'ISV.INC'                                                 CHCK1217
      INCLUDE 'IFXCOR.INC'                                              CHCK1377
      INCLUDE 'ISHR18.INC'                                              CHCK1489
      INCLUDE 'KNUMBR.INC'                                              CHCK1633
      INCLUDE 'CHEKFL.INC'                                              CHCK1645
C                                                                       CHCK1650
      DIMENSION TIOLD(3)                                                CHCK1658
      DIMENSION TNHELP(3)                                               CHCK1659
C                                                                       CHCK1660
C                                                                       CHCK1670
C                                                                       CHCK1680
      IF(ISFTYP(IS).GE.K4) GO TO 401                                    CHCK1685
      ITANG=0                                                           CHCK1690
      TEMP(8)=Z10*DPMAX                                                 CHCK1691
      IF (JENT(IS).NE.K1) THEN                                          CHCK1692
        CALL DOTF(DTISN,TI,SN(1,IS))                                    CHCK1693
        IF (ABS(DTISN).LT.0.05D0) THEN                                  CHCK1694
          ITANG=1                                                       CHCK1695
          J21(IS)=K1                                                    CHCK1696
          GOTO 401                                                      CHCK1697
        ENDIF                                                           CHCK1698
      ENDIF                                                             CHCK1699
      TN(1,IS)=PAST(IS)*TI(1)                                           CHCK1700
      TN(2,IS)=PAST(IS)*TI(2)                                           CHCK1710
      TN(3,IS)=PAST(IS)*TI(3)                                           CHCK1720
  401 IF(J20(IS)-K1)1,8,3                                               CHCK1730
    1 JWR=0                                                             CHCK1740
      STCK(IS)=Z1E6                                                     CHCK1750
      CSD(IS)=Z0                                                        CHCK1760
      J20(IS)=K1                                                        CHCK1770
      J21(IS)=K1                                                        CHCK1780
      J22(IS)=0                                                         CHCK1790
      JENT(IS)=K1                                                       CHCK1800
    2 IOPSET(IS)=0                                                      CHCK1810
      JTN(IS)=K1                                                        CHCK1820
      JU1(IS)=K1                                                        CHCK1830
      JIOPS(IS)=0                                                       CHCK1840
      GO TO 9                                                           CHCK1850
    3 IF(TIK(1)*(TEE(1,IS)-TEK(1))+TIK(2)*(TEE(2,IS)-TEK(2))+TIK(3)     CHCK1860
     1*(TEE(3,IS)-TEK(3))-EPS1(IS))4,4,66                               CHCK1870
    4 CALL AERR(-24201,'CHECK   ')                                      CHCK1880
      S(IS)=Z3*DP                                                       CHCK1890
      CSD(IS)=Z0                                                        CHCK1900
      GOTO11                                                            CHCK1910
   66 J21(IS)=0                                                         CHCK1920
      CMOVE(1)=TEE(1,IS)-TEK(1)                                         CHCK1930
      TEMP(1)=TE(1)-TEK(1)                                              CHCK1940
      CMOVE(2)=TEE(2,IS)-TEK(2)                                         CHCK1950
      TEMP(2)=TE(2)-TEK(2)                                              CHCK1960
      CMOVE(3)=TEE(3,IS)-TEK(3)                                         CHCK1970
      TEMP(3)=TE(3)-TEK(3)                                              CHCK1980
      CALL VNORM(CMOVE,TEM)                                             CHCK1990
      CSD(IS)=VTEM                                                      CHCK2000
      CALL VNORM(TEMP,TEMP)                                             CHCK2010
      IF(DABS(ZL).LT.Z1EM9) ZL=Z1EM9                                    CHCK2015
      CSD(IS)=(CSD(IS)-VTEM)*(DPI/ZL)*Z11EM1                            CHCK2020
      IF(CSD(IS)-EPS1(IS))7,7,16                                        CHCK2030
    7 TE(1)=TEE(1,IS)                                                   CHCK2040
      TE(2)=TEE(2,IS)                                                   CHCK2050
      TE(3)=TEE(3,IS)                                                   CHCK2060
      GO TO 18                                                          CHCK2070
 8    IF(ISFTYP(IS)-4)85,84,84                                          CHCK2075
 84   IF(JPH(IS))11,9,11                                                CHCK2076
   85 S(IS) = S(IS) - DP                                                CHCK2080
      IF ((S(IS).LT.Z5).OR.(S(IS).LT.Z5*DP)) GOTO 9                     CHCK2090
 86   IF(TI(1)*TIOLD(1)+TI(2)*TIOLD(2)+TI(3)*TIOLD(3)-0.9)9,11,11       CHCK2092
    9 CONTINUE                                                          CHCK2093
      ITRY=0                                                            CHCK2094
      ICHEKF=1                                                          CHCK2095
  901 DO 98 I=1,3                                                       CHCK2096
        TNHELP(I)=TN(I,IS)                                              CHCK2097
   98 CONTINUE                                                          CHCK2098
      ITRY=ITRY+1                                                       CHCK2099
      JMINR=K1                                                          CHCK2100
   99 CALL AMIND                                                        CHCK2110
      ICHEKF=0                                                          CHCK2112
      JMINR=K0                                                          CHCK2120
      DO 87 I=1,3                                                       CHCK2122
        TIOLD(I) = TI(I)                                                CHCK2124
   87 CONTINUE                                                          CHCK2125
      IF(IAERR)17,91,17                                                 CHCK2130
   91 IF(JMIN)10,19,10                                                  CHCK2140
   10 IF (ITRY.EQ.1) GOTO 901                                           CHCK2141
      S(IS)=Z0                                                          CHCK2150
   11 J21(IS)=0                                                         CHCK2160
   12 IF(CSD(IS)-EPS1(IS))13,15,15                                      CHCK2170
   13 IF(ISTRUP)14,14,16                                                CHCK2180
   14 CSD(IS)=Z2*DPMX1(IS)                                              CHCK2190
   15 IF(STCK(IS).LE.Z0) GOTO 18                                        CHCK2200
      IF ( (ITANG.EQ.K1) .AND. (TEMP(8).LT.DP)                          CHCK2201
     +  .AND.  (STCK(IS).LT.Z2*TAU(IS)) ) GOTO 18                       CHCK2202
   16 JCKR=0                                                            CHCK2210
   17 CONTINUE                                                          CHCK2220
      JPH(IS) = K0                                                      CHCK2224
      RETURN                                                            CHCK2225
   18 J50(IS)=K1                                                        CHCK2230
      J51(IS)=K1                                                        CHCK2240
      PLND1(IS)=Z0                                                      CHCK2250
      NOTAN(IS)=0                                                       CHCK2260
      JCKR=K1                                                           CHCK2270
      GO TO 17                                                          CHCK2280
   19 IF(ISFTYP(IS)-K4)190,22,22                                        CHCK2290
  190 IF(J23(IS))20,21,20                                               CHCK2300
   20 IF(DABS(S(IS)).LT.Z1EM9) GO TO 2001                               CHCK2310
      STCK1(IS)=DSIGN(Z1,Z(IS)*S(IS))                                   CHCK2315
      J23(IS) = 0                                                       CHCK2320
      GO TO 22                                                          CHCK2325
 2001 J20(IS) = 0                                                       CHCK2330
      GO TO 16                                                          CHCK2335
   21 STCK(IS)=STCK1(IS)*Z(IS)*S(IS)                                    CHCK2340
 22   COS1(IS)=TN(1,IS)*TI(1)+TN(2,IS)*TI(2)+TN(3,IS)*TI(3)             CHCK2350
C                                                                       CHCK2355
      IF(ISFTYP(IS)-K2 )23,30,39                                        CHCK2360
   23 IF(COS1(IS))24,25,25                                              CHCK2370
   24 TN(1,IS)=-TN(1,IS)                                                CHCK2380
      TN(2,IS)=-TN(2,IS)                                                CHCK2390
      TN(3,IS)=-TN(3,IS)                                                CHCK2400
      RC(IS)=-RC(IS)                                                    CHCK2402
      J23(IS)=K1                                                        CHCK2410
      GO TO 99                                                          CHCK2420
   25 IF (TAU(IS).GT.S(IS)) GOTO 32                                     CHCK2430
      IF ( (ITANG.EQ.K1).AND.(Z5*TAU(IS).GT.S(IS))) GOTO 32             CHCK2435
   26 IF(COS1(IS))27,28,27                                              CHCK2440
   27 CSD(IS)=DABS(S(IS)/COS1(IS))                                      CHCK2450
      GO TO 29                                                          CHCK2460
   28 CSD(IS)=DABS(S(IS))+TAU(IS)                                       CHCK2470
   29 IF(DP-CSD(IS))11,201,201                                          CHCK2480
  201 IF ( CSD(IS).GT.Z9EM1*DP ) THEN                                   CHCK2481
        IF ( DP.GT.(DPMAX*TAU(IS))) THEN                                CHCK2482
          DP=0.75D0*DP                                                  CHCK2483
          GOTO 11                                                       CHCK2484
        ENDIF                                                           CHCK2485
      ENDIF                                                             CHCK2486
      IF(J50(IS))202,18,18                                              CHCK2490
  202 IF(TAU(IS)-CSD(IS))11,18,18                                       CHCK2500
   30 IF(COS1(IS))31,31,24                                              CHCK2510
   31 IF(TAU(IS)-S(IS)) 32,32,26                                        CHCK2520
   32 IF(J21(IS))301,301,33                                             CHCK2530
  301 IF(IPDPL)15,15,18                                                 CHCK2540
   33 DO 37 K=1,3                                                       CHCK2550
      TEMP(K)=TP(K,IS)                                                  CHCK2570
      TEMP(K+3)=TN(K,IS)                                                CHCK2580
      TP(K,IS)=SP(K,IS)+TAU(IS)*TI(K)                                   CHCK2590
   37 TN(K,IS)=TI(K)                                                    CHCK2600
      IOP(IS)=K1                                                        CHCK2610
      TEMP(7)=S(IS)                                                     CHCK2620
      IF(LIMFL(IS))34,35,34                                             CHCK2630
   34 CALL DDLIM                                                        CHCK2640
      GO TO 36                                                          CHCK2650
   35 ICHEKF=1                                                          CHCK2652
      CALL DDST                                                         CHCK2655
      ICHEKF=0                                                          CHCK2656
   36 DO 361 K=1,3                                                      CHCK2660
      TP(K,IS)=TEMP(K)                                                  CHCK2680
      TN(K,IS)=TEMP(K+3)                                                CHCK2690
  361 CONTINUE                                                          CHCK2720
      IF(IER)38,55,38                                                   CHCK2730
   38 CSD(IS)=0                                                         CHCK2740
      S(IS)=Z5*DP                                                       CHCK2750
      GO TO 12                                                          CHCK2760
   39 IF(K3-ISFTYP(IS))40,23,40                                         CHCK2770
   40 CPTST(IS)=Z0                                                      CHCK2780
      CPLFL(IS)=Z0                                                      CHCK2790
      CALL CPLAN                                                        CHCK2800
      IT=IT                                                             CHCK2810
      IF(JCPR) 41,45,41                                                 CHCK2820
   41 CALL AERR(-24202,'CHECK   ')                                      CHCK2830
      GO TO 11                                                          CHCK2840
   45 IF (PLNCS(IS)) 24,46,46                                           CHCK2850
   46 TEMP(1)=PLNV(1,IS)*TI(1)+PLNV(2,IS)*TI(2)+PLNV(3,IS)*TI(3)        CHCK2860
      IF (TEMP(1)) 47,48,47                                             CHCK2870
   47 CSD(IS) =DABS(PLND(IS)/TEMP(1))                                   CHCK2880
   48 TEMP(1) = (SP(1,IS)-SP(1,IT))*TN(1,IS)                            CHCK2890
     1         +(SP(2,IS)-SP(2,IT))*TN(2,IS)                            CHCK2895
     1         +(SP(3,IS)-SP(3,IT))*TN(3,IS)                            CHCK2900
      TEMP(1) = TEMP(1)*(TN(1,IS)*TI(1)+TN(2,I)*TI(2)+TN(3,IS)*TI(3))   CHCK2910
      IF (J22(IS))607,51,607                                            CHCK2920
  607 STCKN(IS) = STCK2(IS)*TEMP(1)                                     CHCK2930
C                   STPCK IF SURFACE PASSED                             CHCK2940
      IF (STCKN(IS)) 18,6071,6071                                       CHCK2950
C                   STPCK IF SURFACE NEARBY                             CHCK2960
 6071 IF(DABS(PLND(IS)) - Z2*DP) 6072,6072,11                           CHCK2970
 6072 IF(DABS(S(IS))-DP) 18,18,11                                       CHCK2980
   51 STCK2(IS) = TEMP(1)                                               CHCK2990
      IF (STCK2(IS)) 11,502,502                                         CHCK3000
  502 J22(IS) = K1                                                      CHCK3010
      GO TO 11                                                          CHCK3030
   52 IF(CSD(IS)-Z2*DP)53,12,12                                         CHCK3040
   53 DO 54 I=1,3                                                       CHCK3050
      CMOVE(I)=TEMP(8)*TI(I)                                            CHCK3060
   54 TE(I)=TE(I)+CMOVE(I)                                              CHCK3070
      GO TO 18                                                          CHCK3080
   55 CSD(IS)=DABS(TEMP(7)/COS1(IS)+S(IS)+TAU(IS))                      CHCK3090
      TEMP(8)=S(IS)                                                     CHCK3100
      IF(CSD(IS)-Z5*DP)101,102,102                                      CHCK3110
  101 S(IS)=CSD(IS)                                                     CHCK3120
      GO TO 152                                                         CHCK3130
  102 S(IS)=Z5*DP                                                       CHCK3140
  152 IF(S(IS)-DABS(TEMP(7)))153,52,52                                  CHCK3150
  153 S(IS)=DABS(TEMP(7))                                               CHCK3160
      GOTO52                                                            CHCK3170
       END                                                              CHCK3180
**** SOURCE FILE : M0011486.W01   ***
*
C                                                                       M0000100
      SUBROUTINE CLDAT(ARG1,ARG2,ARG3,ARG4)                             M0000200
C                                                                       M0000300
C   PURPOSE: TO CONTROL AND STORE CLDAT PARAMETERS AND INDICATORS.      M0000400
C                                                                       M0000500
C     ICLTAB   (1,X)  INDEX OF THE CLDAT SECTION.                       M0000600
C     ICLTAB   (2,X)  NUMBER OF POINTS IN THE CLDAT SECTION.            M0000700
C     ICLTAB   (3,X)  FORM OF STORAGE ON EXFILE (TP,TA,TV,...).         M0000800
C     ICLTAB   (4,X)  FIRST EXFILE BLOCK  OF THE CLDAT SECTION.         M0000900
C     ICLTAB   (5,X)  FIRST EXFILE RECORD OF THE CLDAT SECTION.         M0001000
C     CLDFG           FLAG TRUE = A CLDAT-SECTION IS OPENED, COUNTING   M0001100
C                     OF THE POINTS IN ATAPE.                           M0001200
C     ICLCNT          POINTER TO THE LAST ICLTAB ENTRY.                 M0001300
C     ICLINE          ICLTAB INDEX.                                     M0001400
C     ICLIDX          ICLTAB INDEX.                                     M0001500
C                                                                       M0001600
C     ICLCOD = ICLTAB   (3,X)    ;   ICLBLK = ICLTAB   (4,X)            M0001700
C     ICLRCD = ICLTAB   (5,X)                                           M0001800
C                                                                       M0001900
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             M0002000
C                                                                       M0002100
C                                                                       M0003000
      INCLUDE 'TOTAL.INC'                                               M0003001
      INCLUDE 'IFXCOR.INC'                                              M0003401
C                                                                       M0003500
      INCLUDE 'CLDT.INC'                                                M0003810
C                                                                       M0003900
      DIMENSION CLREC(14),NARG(8)                                       M0004000
      INTEGER   ARG1,ARG2,ARG3,ARG4,START,CLWRD                         M0004100
      DIMENSION ARG1(*),ARG2(*),ARG3(*),ARG4(*),NPTVCT(2,9),NCLR(2)     M0004200
      EQUIVALENCE (NCLR(1),CLR)                                         M0004300
      INTEGER BCDF                                                      M0004310
      LOGICAL FIRST                                                     M0004320
      SAVE FIRST,START,CLWRD,NORM,NOMO                                  M0004330
C                                                                       M0004340
      DATA ICLDM/100/                                                   M0004400
C                                                                       M0004500
      DATA FIRST/.TRUE./                                                M0004510
C                                                                       M0004520
C                                                                       M0004530
      IF (FIRST) THEN                                                   M0004540
        START = BCDF('STAR')                                            M0004550
        CLWRD = BCDF('CLDA')                                            M0004560
        NORM  = BCDF('NORM')                                            M0004570
        NOMO  = BCDF('NOMO')                                            M0004580
        FIRST = .FALSE.                                                 M0004590
      ENDIF                                                             M0004595
      DO 2 I=1,9                                                        M0004597
      NPTVCT(1,I)=BCDF(PNTVCT(I)(1:4))                                  M0004598
    2 CONTINUE                                                          M0004599
      IF(ARG2(1).NE.CLWRD)GOTO 10                                       M0004600
      ITYP=ARG4(1)                                                      M0004700
      IF(ITYP.EQ.NORM)GOTO 75                                           M0004800
      IF(ITYP.NE.START.AND.ITYP.NE.NOMO)GOTO 5                          M0004900
      GOTO 100                                                          M0005000
C                                                                       M0005100
C CLDAT/TP,TA,TV,...ETC.                                                M0005200
C                                                                       M0005300
    5 ICLCOD=1                                                          M0005400
      J=ITYP                                                            M0005500
      GOTO 85                                                           M0005600
C                                                                       M0005700
   10 IF(ARG1(1).NE.1)GOTO 80                                           M0005800
      NCLR(1)=ARG2(1)                                                   M0005900
      NCLR(2)=ARG2(2)                                                   M0006000
      J=ARG4(1)                                                         M0006100
      IF(ITYP.NE.START) GOTO 50                                         M0006200
C                                                                       M0006300
C CLDAT/START,IDX,.........                                             M0006400
C                                                                       M0006500
      ICLIDX=CLR                                                        M0006600
      DO 20 ICLINE=1,ICLCNT                                             M0006700
      IF(ICLTAB(1,ICLINE).NE.ICLIDX)GOTO 20                             M0006800
C WARNING DIAGNOSTIC 94                                                 M0006900
C MULTIPLE DEFINED CLDAT-SECTION. FORMER SECTION DELETED.               M0007000
      CALL ERROR(94,'CLDAT   ')                                         M0007100
      GOTO 40                                                           M0007200
   20 CONTINUE                                                          M0007300
C IS ICLTAB FILLED ?                                                    M0007400
      IF(ICLCNT.LT.ICLDM)GOTO 30                                        M0007500
C ERROR DIAGNOSTIC 95                                                   M0007600
C ARRAY ICLTAB FILLED. USE A FORMER DEFINED INDEX OR REDIMENSION ARRAY. M0007700
      CALL ERROR(95,'CLDAT   ')                                         M0007800
      GOTO 100                                                          M0007900
   30 ICLCNT=ICLCNT+1                                                   M0008000
      ICLINE =ICLCNT                                                    M0008100
   40 CLDFG=.TRUE.                                                      M0008200
      ICLCOD=1                                                          M0008300
      ICLTAB(1,ICLINE)=ICLIDX                                           M0008400
      ICLTAB(2,ICLINE)=0                                                M0008500
      ICLTAB(3,ICLINE)=ICLCOD                                           M0008600
      ICLTAB(4,ICLINE)=ICLBLK+1                                         M0008700
      ICLTAB(5,ICLINE)=ICLRCD+3                                         M0008800
      NUMCNT=0                                                          M0008900
      IF(J.EQ.0)GOTO 100                                                M0009000
      GOTO 85                                                           M0009100
C                                                                       M0009200
C CLDAT/NOMORE,IDX                                                      M0009300
C                                                                       M0009400
   50 II=CLR                                                            M0009500
C WARNING DIAGNOSTIC 94                                                 M0009600
C CLDAT INDEXES ARE DIFFERENT. FIRST INDEX REMAINS VALID.               M0009700
   70 IF(II.NE.ICLIDX)CALL ERROR(94,'CLDAT   ')                         M0009800
      ICLTAB(2,ICLINE)=ICLTAB(2,ICLINE)+NUMCNT                          M0009900
      CLDFG=.FALSE.                                                     M0010000
C                                                                       M0010100
C CLDAT/NORMAL                                                          M0010200
C                                                                       M0010300
   75 ICLCOD=0                                                          M0010400
      GOTO 100                                                          M0010500
C                                                                       M0010600
   80 IF(ICLCOD.EQ.0)GOTO 100                                           M0010700
      J=ARG2(1)                                                         M0010800
   85 K=ARG4(1)                                                         M0010900
      DO 90 II=1,9                                                      M0011000
      IF(J.NE.NPTVCT(1,II).AND.K.NE.NPTVCT(1,II))GOTO 90                M0011100
      IF(MOD(ICLCOD,IPTVEC(II)).NE.0)ICLCOD=ICLCOD*IPTVEC(II)           M0011200
      IF(CLDFG)ICLTAB(3,ICLINE)=ICLCOD                                  M0011300
   90 CONTINUE                                                          M0011400
C                                                                       M0011500
C OUTPUT CLDAT COMMAND ON EXFILE                                        M0011600
C                                                                       M0011700
  100 CALL APT299(ARG1,ARG2,ARG3,ARG4)                                  M0011800
C                                                                       M0011900
      RETURN                                                            M0012000
      END                                                               M0012100
**** SOURCE FILE : M0011487.V03   ***
*
C                                                                       M0000100
C.....FORTRAN SUBROUTINE     CLDATF                                     M0000200
C                                                                       M0000300
C PURPOSE      TO RETRIEVE THE U OR V COORDINATE OR THE PATCH NUMBER    M0000400
C              OF THE PART OR DRIVE SURFACE OF A PREVIOUS CL DATA       M0000500
C              FROM EXFILE AND STORE IT IN RESULT.                      M0000600
C                                                                       M0000700
C LINKAGE      CALL CLDATF(RESULT,ARG1,ARG2,ARG3)                       M0000800
C                                                                       M0000900
C ARGUMENTS    RESULT  REAL VARIABLE TO CONTAIN THE DESIRED SCALAR.     M0001000
C              ARG1    REAL NUMBER OF CLDAT SECTION.                    M0001100
C              ARG2    INTEGER DESIRED SCALAR NAME.                     M0001200
C              ARG3    REAL NUMBER OF DESIRED POINT.                    M0001300
C                                                                       M0001400
C SUBSIDIARIES TYPE                ENTRY                                M0001500
C              SUBROUTINE          ATAPER                               M0001600
C                                                                       M0001700
      SUBROUTINE CLDATF(RESULT,ARG1,ARG2,ARG3)                          M0001800
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              M0001900
      INTEGER ARG2                                                      M0002000
C                                                                       M0002100
      INCLUDE 'TOTAL.INC'                                               M0002910
C                                                                       M0003000
      DIMENSION P(6),NARG2(6)                                           M0003100
C                                                                       M0003205
      LOGICAL FIRST                                                     M0003210
      INTEGER BCDF                                                      M0003215
      SAVE FIRST,NARG2                                                  M0003220
C                                                                       M0003225
      DATA FIRST/.TRUE./                                                M0003230
C                                                                       M0003235
      IF (FIRST)THEN                                                    M0003240
        NARG2(1) = BCDF('UDS ')                                         M0003245
        NARG2(2) = BCDF('VDS ')                                         M0003250
        NARG2(3) = BCDF('PDS ')                                         M0003255
        NARG2(4) = BCDF('UPS ')                                         M0003260
        NARG2(5) = BCDF('VPS ')                                         M0003265
        NARG2(6) = BCDF('PPS ')                                         M0003270
        FIRST = .FALSE.                                                 M0003275
      ENDIF                                                             M0003280
C                                                                       M0003300
      DO 10 II=1,6                                                      M0003400
      IF(NARG2(II).EQ.ARG2)GOTO 20                                      M0003500
   10 CONTINUE                                                          M0003600
C                                                                       M0003700
   15 CALL ERROR(93,'CLDATF  ')                                         M0003800
      RESULT=0.D0                                                       M0003900
C                                                                       M0004000
      RETURN                                                            M0004100
   20 ITYP =8+II/4                                                      M0004200
      ISCT =ARG1                                                        M0004300
      IPNT =ARG3                                                        M0004400
      CALL ATAPER(P,IPNT,ISCT,ITYP,IEE)                                 M0004500
      IF(IEE.EQ.0)GOTO 30                                               M0004600
      GOTO 15                                                           M0004700
   30 IF(II.GT.3)II=II-3                                                M0004800
      RESULT=P(II)                                                      M0004900
   40 RETURN                                                            M0005000
      END                                                               M0005100
**** SOURCE FILE : M0000712.W02   ***
*
C.....FORTRAN SUBROUTINE             COMP3D...              3/1/68   GK COMP0000
      SUBROUTINE COMP3D                                                 COMP0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              COMP0020
C                                                                       COMP0030
C                                                                       COMP0040
      INCLUDE 'TOTAL.INC'                                               COMP0171
      INCLUDE 'IFXCOR.INC'                                              COMP0334
      INCLUDE 'KNUMBR.INC'                                              COMP0460
C                                                                       COMP0461
C                                                                       COMP0600
      INTEGER PPWORD(2),BCDF                                            COMP0602
      CHARACTER*8 PP1                                                   COMP0604
      DATA PP1/'3DCALC  '/                                              COMP0610
C                                                                       COMP0615
      I3DFLG=1                                                          COMP0620
      PPWORD(1) = BCDF(PP1(1:4))                                        COMP0632
      PPWORD(2) = BCDF(PP1(5:8))                                        COMP0634
C                                                                       COMP0730
      CALL APT299(0,PPWORD,0,0)                                         COMP0750
      RETURN                                                            COMP0760
      END                                                               COMP0770
C                                                                       COMP0780
C                                                                       COMP0790
C                                                                       COMP0800
      SUBROUTINE NDTEST                                                 COMP1010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              COMP1020
C                                                                       COMP1030
C                                                                       COMP1040
      INCLUDE 'TOTAL.INC'                                               COMP1171
      INCLUDE 'IFXCOR.INC'                                              COMP1334
      INCLUDE 'KNUMBR.INC'                                              COMP1460
C                                                                       COMP1461
C                                                                       COMP1600
      INTEGER PPWORD(2),BCDF                                            COMP1602
      CHARACTER*8 PP2                                                   COMP1604
      DATA PP2/'2DCALC  '/                                              COMP1610
C                                                                       COMP1615
      I3DFLG=0                                                          COMP1660
      PPWORD(1) = BCDF(PP2(1:4))                                        COMP1672
      PPWORD(2) = BCDF(PP2(5:8))                                        COMP1674
C                                                                       COMP1730
      CALL APT299(0,PPWORD,0,0)                                         COMP1750
      RETURN                                                            COMP1760
      END                                                               COMP1770
C                                                                       COMP1780
C                                                                       COMP1790
C                                                                       COMP1800
      SUBROUTINE GOUGCK(DONOFF)                                         COMP2010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              COMP2020
C                                                                       COMP2030
C                                                                       COMP2040
      INCLUDE 'TOTAL.INC'                                               COMP2171
      INCLUDE 'IFXCOR.INC'                                              COMP2334
      INCLUDE 'KNUMBR.INC'                                              COMP2460
C                                                                       COMP2461
      INCLUDE 'RMFLGS.INC'                                              COMP2462
C                                                                       COMP2600
      INTEGER PPWORD(2),BCDF                                            COMP2602
      CHARACTER PP3*8,DON*2,TEST*2                                      COMP2604
      DATA PP3/'GOUGCK  '/,DON/'ON'/                                    COMP2610
C                                                                       COMP2615
      CALL HOLFRM(DONOFF,TEST,1,2,NWD)                                  COMP2620
      IF (TEST.EQ.DON) THEN                                             COMP2630
        IGOUG=1                                                         COMP2700
        LGCHK=.TRUE.                                                    COMP2710
      ELSE                                                              COMP2713
        IGOUG=0                                                         COMP2715
        LGCHK=.FALSE.                                                   COMP2717
      ENDIF                                                             COMP2719
                                                                        COMP2722
      PPWORD(1) = BCDF(PP3(1:4))                                        COMP2724
      PPWORD(2) = BCDF(PP3(5:8))                                        COMP2726
C                                                                       COMP2730
      CALL APT299(1,PPWORD,2,DONOFF)                                    COMP2750
      RETURN                                                            COMP2760
      END                                                               COMP2770
**** SOURCE FILE : M0000878.V07   ***
*
C                                                                       CPLN0001
C.....FORTRAN SUBROUTINE             CPLAN....              4/1/68   GK CPLN0002
C                                                                       CPLN0010
      SUBROUTINE CPLAN                                                  CPLN0020
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              CPLN0030
C                                                                       CPLN0040
C                                                                       CPLN0050
C                                                                       CPLN0060
      INCLUDE 'TOTAL.INC'                                               CPLN0171
      INCLUDE 'DSHAR4.INC'                                              CPLN0369
      INCLUDE 'FXCOR.INC'                                               CPLN0673
      INCLUDE 'SV.INC'                                                  CPLN0969
      INCLUDE 'ZNUMBR.INC'                                              CPLN1065
      INCLUDE 'ISV.INC'                                                 CPLN1217
      INCLUDE 'IFXCOR.INC'                                              CPLN1377
      INCLUDE 'ISHR18.INC'                                              CPLN1489
      INCLUDE 'KNUMBR.INC'                                              CPLN1633
      COMMON/ADDCOM/ADDCOM                                              CPLN1634
      DIMENSION ADDCOM(25)                                              CPLN1636
      EQUIVALENCE (ADDCOM( 1),ELMAX ),                                  CPLN1638
     2            (ADDCOM(25),KDYNFL)                                   CPLN1640
C                                                                       CPLN1642
C                                                                       CPLN1650
      INCLUDE 'BLANKCOM.INC'                                            CPLN1652
C                                                                       CPLN1660
C                                                                       CPLN1670
      DATA ZLIT1 / .05D0/                                               CPLN1680
C                                                                       CPLN1690
C                                                                       CPLN1700
      TEMP(20)=RC(IS)                                                   CPLN1710
C                  TEST IF CYLINDER IT SURF,PLANE IS SURF               CPLN1712
C                                                                       CPLN1713
      IF(IPL(IS))10,1010,10                                             CPLN1714
 10   IF(IFL4(IS))20,30,20                                              CPLN1715
 20   IT = IPS                                                          CPLN1716
      GO TO 50                                                          CPLN1717
 30   IT = IDS                                                          CPLN1718
 50   GO TO 3000                                                        CPLN1719
 1010 CALL CROSS (SN(1,IS),SNK(1,IS),TEMP)                              CPLN1720
 1020 CALL VNORM (TEMP,TEMP)                                            CPLN1730
 1030 IF(IER) 1040,1050,1040                                            CPLN1740
 10500TEMP1=TEMP(1)*(SP(1,IS)-SPK(1,IS)) +                              CPLN1750
     1      TEMP(2)*(SP(2,IS)-SPK(2,IS)) +                              CPLN1760
     2      TEMP(3)*(SP(3,IS)-SPK(3,IS))                                CPLN1770
 1060 TEM(1)=SPK(1,IS)+TEMP1*TEMP(1)                                    CPLN1780
      TEM(2)=SPK(2,IS)+TEMP1*TEMP(2)                                    CPLN1790
      TEM(3)=SPK(3,IS)+TEMP1*TEMP(3)                                    CPLN1800
 1090 CALL CCURV(IS,SP(1,IS),TEM,TN(1,IS))                              CPLN1810
 1120 IF(IFL4(IS))1130,1140,1130                                        CPLN1820
 1130 IT = IPS                                                          CPLN1830
      ITT = IDS                                                         CPLN1840
      GO TO 1150                                                        CPLN1850
 1040 RC(IS)=RC1*DSIGN(Z1,RC(IS))                                       CPLN1860
      GO TO 1120                                                        CPLN1870
 1140 IT = IDS                                                          CPLN1880
      ITT = IPS                                                         CPLN1890
 1150 IF(DABS(SP(3,IT)-SPK(3,IT))-Z1EM3) 2,1,1                          CPLN1900
    2 TEM(1)=TI(1)                                                      CPLN1910
      TEM(2)=TI(2)                                                      CPLN1920
      TEM(3)=TI(3)                                                      CPLN1930
      GO TO 5                                                           CPLN1940
    1 CALL CROSS(SN(1,IT),SN(1,ITT),TEM)                                CPLN1950
      CALL VNORM(TEM,TEM)                                               CPLN1960
      IF(IER)2,3,2                                                      CPLN1970
    3 IF(TI(1)*TEM(1)+TI(2)*TEM(2)+TI(3)*TEM(3)) 4,5,5                  CPLN1980
    4 TEM(1)=-TEM(1)                                                    CPLN1990
      TEM(2)=-TEM(2)                                                    CPLN2000
      TEM(3)=-TEM(3)                                                    CPLN2010
    5 ISIS=IS                                                           CPLN2020
      IS=IT                                                             CPLN2030
      TEMP(4)=S(IS)                                                     CPLN2040
      TEMP(1)=TP(1,IS)                                                  CPLN2050
      TEMP(2)=TP(2,IS)                                                  CPLN2060
      TEMP(3)=TP(3,IS)                                                  CPLN2070
      TP(1,IS)=TP(1,IS)  -ZLIT1*TEM(1)                                  CPLN2080
      TP(2,IS)=TP(2,IS)-ZLIT1*TEM(2)                                    CPLN2090
      TP(3,IS)=TP(3,IS)-ZLIT1*TEM(3)                                    CPLN2100
      CALL DDST                                                         CPLN2110
      TEM(1)=TP(1,IS)+S(IS)*TN(1,IS)                                    CPLN2120
      TEM(2)=TP(2,IS)+S(IS)*TN(2,IS)                                    CPLN2130
      TEM(3)=TP(3,IS)+S(IS)*TN(3,IS)                                    CPLN2140
      TP(1,IS)=TEMP(1)                                                  CPLN2150
      TP(2,IS)=TEMP(2)                                                  CPLN2160
      TP(3,IS)=TEMP(3)                                                  CPLN2170
      S(IS)=TEMP(4)                                                     CPLN2180
      IS=ISIS                                                           CPLN2190
 1200 PLNCS(IS) = TN(1,IT)*TN(1,IS)+TN(2,IT)*TN(2,IS)+TN(3,IT)*TN(3,IS) CPLN2200
 1210 IF(EPS2(IS)-DABS(PLNCS(IS))) 1220,1240,1240                       CPLN2210
 1220 IF (CPLFL(IS)) 1250,1230,1250                                     CPLN2220
 1230 DPLAN(1,IS) = TN(1,ITT)                                           CPLN2230
      DPLAN(2,IS) = TN(2,ITT)                                           CPLN2240
      DPLAN(3,IS) = TN(3,ITT)                                           CPLN2250
      GO TO 1250                                                        CPLN2260
 1240 CALL CROSS(TN(1,IS),TN(1,IT),DPLAN(1,IS))                         CPLN2270
 1250 IF (IPL(IT)) 1600,1260,1600                                       CPLN2280
C        USE RC1   FOR PROPER UNITS/ IMPLEMENTATION                     CPLN2285
 1600  IF ( DABS(RC(IS))-RC1 ) 1610,1620,1620                           CPLN2290
 1610 TEMP(1) = TN(1,IT)                                                CPLN2300
      TEMP(2) = TN(2,IT)                                                CPLN2310
      TEMP(3) = TN(3,IT)                                                CPLN2320
      GO TO 1380                                                        CPLN2330
 1620 CPTST(IS)=-Z1                                                     CPLN2340
      PLND(IS)=S(IS)                                                    CPLN2350
      CPLFL(IS)=-Z1                                                     CPLN2360
      PLNV(1,IS)= TN(1,IS)                                              CPLN2370
      PLNV(2,IS)= TN(2,IS)                                              CPLN2380
      PLNV(3,IS)= TN(3,IS)                                              CPLN2390
 9998 JCPR = 0                                                          CPLN2400
 9999 RC(IS)=TEMP(20)                                                   CPLN2410
      IF(KDYNFL.NE.K0) CALL APT238(K31)                                 CPLN2415
      RETURN                                                            CPLN2422
 1260 CALL CCURV(IT,SP(1,IT),TEM,SN(1,IT))                              CPLN2430
      IF (KDYNFL.NE.K0) CALL APT238(K34)                                CPLN2440
 1310  IF ( DABS(RC(IT))-RC1 ) 1320,1600,1600                           CPLN2450
 1320 IF (IPL(IS)) 1340,1330,1340                                       CPLN2460
 1340 CC(1,IS)= CC(1,IT)                                                CPLN2470
      CC(2,IS)= CC(2,IT)                                                CPLN2480
      CC(3,IS)= CC(3,IT)                                                CPLN2490
      TEMP(1) = TN(1,IS)                                                CPLN2500
      TEMP(2) = TN(2,IS)                                                CPLN2510
      TEMP(3) = TN(3,IS)                                                CPLN2520
      GO TO 1380                                                        CPLN2530
 1330  IF ( DABS(RC(IS))-RC1 ) 1370,1340,1340                           CPLN2540
 1370 TEMP(1) = CC(1,IT)-CC(1,IS)                                       CPLN2550
      TEMP(2) = CC(2,IT)-CC(2,IS)                                       CPLN2560
      TEMP(3) = CC(3,IT)-CC(3,IS)                                       CPLN2570
      CALL VNORM(TEMP,TEMP)                                             CPLN2580
      IF(IER)1380,1380,1340                                             CPLN2590
 1380 CALL CROSS(TEMP,DPLAN(1,IS),PLNV(1,IS))                           CPLN2600
      CALL VNORM (PLNV(1,IS),PLNV(1,IS))                                CPLN2610
 1390 IF(IER)1400,1410,1400                                             CPLN2620
C                                                                       CPLN2630
 1400 JCPR = 1                                                          CPLN2640
      GO TO 9999                                                        CPLN2650
C                                                                       CPLN2660
C                  FIND EXTREME POINT ON TOOL IN DIRECTION OF TEMP      CPLN2670
C                                                                       CPLN2680
 1410 ISS = IS                                                          CPLN2690
      IGS = 1                                                           CPLN2700
      IS  = IGS                                                         CPLN2710
      ITS = IT                                                          CPLN2715
C                                                                       CPLN2730
C                  IF TAXIS NORM IT SURF, THEN TP = TE                  CPLN2740
C                                                                       CPLN2750
      IF(MANTAX-2)1460,1415,1417                                        CPLN2760
 1415 IF(IT-IPS)1460,1418,1460                                          CPLN2770
 1417 IF(IT-IDS)1460,1418,1460                                          CPLN2780
 1418 TP(1,IS)  =TE(1)                                                  CPLN2790
      TP(2,IS)=TE(2)                                                    CPLN2800
      TP(3,IS)=TE(3)                                                    CPLN2810
      GO TO 1470                                                        CPLN2820
 1460 CONTINUE                                                          CPLN2830
C                                                                       CPLN2840
      TV=TEMP(1)*TN(1,IT)+TEMP(2)*TN(2,IT)+TEMP(3)*TN(3,IT)             CPLN2850
      TEM(1)=DSIGN(Z1,TV)                                               CPLN2855
      SN(1,IS)  =-TEM(1)*TEMP(1)                                        CPLN2860
      SN(2,IS)=-TEM(1)*TEMP(2)                                          CPLN2870
      SN(3,IS)=-TEM(1)*TEMP(3)                                          CPLN2880
C                  USE TLNORM TO ESTABLISH CORRECT TOOL POINT           CPLN2890
C                                                                       CPLN2900
      RC(IS) = RC1                                                      CPLN2910
      CC(1,IS)=TP(1,IT)-RC(IS)*SN(1,IS)                                 CPLN2920
      CC(2,IS)=TP(2,IT)-RC(IS)*SN(2,IS)                                 CPLN2930
      CC(3,IS)=TP(3,IT)-RC(IS)*SN(3,IS)                                 CPLN2940
      JTN(IS) =Z0                                                       CPLN2950
      CALL U1COMP                                                       CPLN2960
C                                                                       CPLN2961
      ITSEG(IS)=1                                                       CPLN2970
      ITLON(IS)=ITLON(ISS)                                              CPLN2980
      IAFL(IS) =-1                                                      CPLN2990
      JTLFLG(IS)=JTLFLG(ISS)                                            CPLN3000
      IPL(IS) = Z1                                                      CPLN3010
      CALL TLNORM (U1(1,IS))                                            CPLN3020
C                                                                       CPLN3030
C                  COMPUTE MOVE TO BRING THIS TP ON TO THE CPLAN        CPLN3040
C                                                                       CPLN3050
 1470 CONTINUE                                                          CPLN3060
      PLND(ISS) = PLNV(1,ISS)*(CC(1,ISS)-TP(1,IS))                      CPLN3070
     1           +PLNV(2,ISS)*(CC(2,ISS)-TP(2,IS))                      CPLN3075
     2           +PLNV(3,ISS)*(CC(3,ISS)-TP(3,IS))                      CPLN3080
C                                                                       CPLN3090
C                  RETURN                                               CPLN3100
C                                                                       CPLN3110
      IS=ISS                                                            CPLN3120
      IT=ITS                                                            CPLN3130
 1510 CPLFL(IS)=1.0                                                     CPLN3140
 1520 CPTST(IS)=CPTST(IS)+CPLFL(IS)                                     CPLN3150
 1530 IF(CPTST(IS))9998,1520,9998                                       CPLN3160
C                                                                       CPLN3170
C                  SPECIAL ROUTE FOR CYLINDER IT SURF + PLANE IS SURF   CPLN3180
C                  COMPUTE CPLAN POISTION FROM CANONICAL FORMS          CPLN3190
C                                                                       CPLN3200
 3000 IF((ISFIDN(IT).GT.K4).OR.(ISFIDN(IT).LT.K3)) GO TO 1010           CPLN3210
      IC=ICANON(IT)                                                     CPLN3220
      TEMP(7)=CANON(IC+3)                                               CPLN3230
      TEMP(8)=CANON(IC+4)                                               CPLN3240
      TEMP(9)=CANON(IC+5)                                               CPLN3250
      CALL CROSS(TEMP(7),SN(1,IS),PLNV(1,IS))                           CPLN3260
      CALL VNORM(PLNV(1,IS),PLNV(1,IS))                                 CPLN3270
C                                                                       CPLN3280
      CC(1,IS)=CANON(IC)                                                CPLN3290
      CC(2,IS)=CANON(IC+1)                                              CPLN3300
      CC(3,IS)=CANON(IC+2)                                              CPLN3310
      PLNCS(IS)=TN(1,IT)*TN(1,IS)+TN(2,IT)*TN(2,IS)+TN(3,IT)*TN(3,IS)   CPLN3320
      TEMP(1) = TN(1,IS)                                                CPLN3330
      TEMP(2) = TN(2,IS)                                                CPLN3340
      TEMP(3) = TN(3,IS)                                                CPLN3350
      GO TO 1410                                                        CPLN3360
       END                                                              CPLN3370
**** SOURCE FILE : M0000713.V09   ***
*
C.....FORTRAN SUBROUTINE  ....CUT            8/68                 PH,HG CUT00001
C.....FORTRAN SUBROUTINE             CUT   ...              3/1/68   GK CUT00002
      SUBROUTINE CUT                                                    CUT00010
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             CUT00020
C                                                                       CUT00030
C                                                                       CUT00040
C                                                                       CUT00050
C                                                                       CUT00060
      INCLUDE 'TOTAL.INC'                                               CUT00171
      INCLUDE 'HOLRTH.INC'                                              CUT00250
      INCLUDE 'IFXCOR.INC'                                              CUT00397
      INCLUDE 'KNUMBR.INC'                                              CUT00523
C                                                                       CUT00560
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            CUT00565
C                                                                       CUT00570
C                                                                       CUT00630
C                                                                       CUT00640
      CHARACTER*4 PPWORD                                                CUT00642
      CHARACTER*32 MESAGE                                               CUT00643
C...                                                                    CUT00644
      DIMENSION     MSGARY(10)                                          CUT00645
C                                                                       CUT00646
      INTEGER BCDF,IPPWRD(2)                                            CUT00647
C                                                                       CUT00648
      DATA  PPWORD /'CUT '/                                             CUT00655
      DATA  MESAGE /' ...LOCATION WHERE CUT RESUMES..'/                 CUT00660
      IF(JHLDFG.EQ.0) GO TO 1                                           CUT00661
      ITABH(ITHCNT)=6                                                   CUT00662
      ITHCNT=ITHCNT+1                                                   CUT00663
      RETURN                                                            CUT00664
C                                                                       CUT00666
    1 CONTINUE                                                          CUT00667
C...  OUTPUT CUTTER CENTERS ON EXFILE                                   CUT00670
      IF(ICUT)20,20,10                                                  CUT00680
C                                                                       CUT00690
C...     WRITE ON EXFILE A MESSAGE INDICATING START OF CUT SEQUENCE     CUT00692
   10 MSGARY(1)=10                                                      CUT00694
      MSGARY(2)=32                                                      CUT00696
      DO 15 I=1,8                                                       CUT00697
      I4 =I*4                                                           CUT00698
      MSGARY(I+2) = BCDF(MESAGE(I4-3:I4))                               CUT00699
   15 CONTINUE                                                          CUT00701
      IPPWRD(1) = BCDF(PPWORD)                                          CUT00702
      IPPWRD(2) = BCDF('    ')                                          CUT00703
      CALL APT299(1,IPPWRD,27,MSGARY)                                   CUT00706
      ICL=K3                                                            CUT00710
      ICUT=0                                                            CUT00720
      CALL APT233                                                       CUT00730
   20 CONTINUE                                                          CUT00740
      RETURN                                                            CUT00741
       END                                                              CUT00750
C                                                                       CUT00760
C                                                                       CUT00770
C                                                                       CUT00780
      SUBROUTINE CUTH                                                   CUTH0010
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             CUTH0020
C                                                                       CUTH0030
C                                                                       CUTH0040
C                                                                       CUTH0050
C                                                                       CUTH0060
      INCLUDE 'TOTAL.INC'                                               CUTH0171
      INCLUDE 'HOLRTH.INC'                                              CUTH0250
      INCLUDE 'IFXCOR.INC'                                              CUTH0397
      INCLUDE 'KNUMBR.INC'                                              CUTH0523
C                                                                       CUTH0560
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            CUTH0565
C                                                                       CUTH0570
C                                                                       CUTH0630
C                                                                       CUTH0640
      CHARACTER*4 PPWORD                                                CUTH0642
      CHARACTER*32 MESAGE                                               CUTH0643
C...                                                                    CUTH0644
      DIMENSION     MSGARY(10)                                          CUTH0645
C                                                                       CUTH0646
      INTEGER BCDF                                                      CUTH0647
C                                                                       CUTH0648
      DATA  PPWORD /'CUT '/                                             CUTH0655
      DATA  MESAGE /' ...LOCATION WHERE CUT RESUMES..'/                 CUTH0660
C                                                                       CUTH0666
    1 CONTINUE                                                          CUTH0667
C...  OUTPUT CUTTER CENTERS ON EXFILE                                   CUTH0670
      IF(ICUT)20,20,10                                                  CUTH0680
C                                                                       CUTH0690
C...     WRITE ON EXFILE A MESSAGE INDICATING START OF CUT SEQUENCE     CUTH0692
   10 MSGARY(1)=10                                                      CUTH0694
      MSGARY(2)=32                                                      CUTH0696
      DO 15 I=1,8                                                       CUTH0697
      I4 =I*4                                                           CUTH0698
      MSGARY(I+2) = BCDF(MESAGE(I4-3:I4))                               CUTH0699
   15 CONTINUE                                                          CUTH0701
      IPPWRD = BCDF(PPWORD)                                             CUTH0702
      CALL APT299(1,IPPWRD,27,MSGARY)                                   CUTH0706
      ICL=K3                                                            CUTH0710
      ICUT=0                                                            CUTH0720
      CALL APT233                                                       CUTH0730
   20 CONTINUE                                                          CUTH0740
      RETURN                                                            CUTH0741
       END                                                              CUTH0750
**** SOURCE FILE : M0000714.V04   ***
*
C                                                                       DDCY0001
C.....FORTRAN SUBROUTINE             DDCYLN...              4/1/68   GK DDCY0002
      SUBROUTINE DDCYLN(SRFACE)                                         DDCY0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DDCY0020
C                                                                       DDCY0030
C                                                                       DDCY0040
C                                                                       DDCY0050
C                                                                       DDCY0060
      INCLUDE 'TOTAL.INC'                                               DDCY0171
      INCLUDE 'DSHAR4.INC'                                              DDCY0348
      INCLUDE 'FXCOR.INC'                                               DDCY0614
      INCLUDE 'SV.INC'                                                  DDCY0873
      INCLUDE 'ZNUMBR.INC'                                              DDCY0957
      INCLUDE 'IFXCOR.INC'                                              DDCY1097
      INCLUDE 'ISHR18.INC'                                              DDCY1195
      INCLUDE 'KNUMBR.INC'                                              DDCY1321
C                                                                       DDCY1470
C                                                                       DDCY1480
C                                                                       DDCY1490
C                                                                       DDCY1500
      DIMENSION SRFACE(7)                                               DDCY1510
      IER=K0                                                            DDCY1515
      IF(ISTRUP.EQ.5)GO TO 47                                           DDCY1516
      TEM(1)=TN(1,IS)*SRFACE(4)+TN(2,IS)*SRFACE(5)+TN(3,IS)*SRFACE(6)   DDCY1520
      A=TN(1,IS)*TN(1,IS)+TN(2,IS)*TN(2,IS)+TN(3,IS)*TN(3,IS)           DDCY1530
      TEM(2)=TP(1,IS)-SRFACE(1)                                         DDCY1540
      TEM(3)=TP(2,IS)-SRFACE(2)                                         DDCY1550
      TEM(4)=TP(3,IS)-SRFACE(3)                                         DDCY1560
      TEM(5)=TEM(2)*SRFACE(4)+TEM(3)*SRFACE(5)+TEM(4)*SRFACE(6)         DDCY1570
      B=TN(1,IS)*TEM(2)+TN(2,IS)*TEM(3)+TN(3,IS)*TEM(4)                 DDCY1580
      C=TEM(2)*TEM(2)+TEM(3)*TEM(3)+TEM(4)*TEM(4)                       DDCY1590
      A=A-TEM(1)*TEM(1)                                                 DDCY1600
      B=B-TEM(1)*TEM(5)                                                 DDCY1610
C              CHOOSE WELL-CONDITIONED FORMULA                          DDCY1650
      IF(DABS(C).LT.Z1EM9) GO TO 42                                     DDCY1651
      IF(TEM(5)*TEM(5)/C-.9)42,42,44                                    DDCY1652
42    C=C-TEM(5)*TEM(5)-SRFACE(7)*SRFACE(7)                             DDCY1654
      GO TO 46                                                          DDCY1656
   44 CALL CROSS (SRFACE(4),TEM(2),TEM(6))                              DDCY1658
      C=TEM(6)*TEM(6)+TEM(7)*TEM(7)+TEM(8)*TEM(8)-SRFACE(7)*SRFACE(7)   DDCY1660
46    CALL QUAD                                                         DDCY1661
      IF(IER.EQ.1)GO TO 1000                                            DDCY1662
      IF(ISTRUP.EQ.4)GO TO 50                                           DDCY1663
      SPL(1,IS)=SP(1,IS)                                                DDCY1664
      SPL(2,IS)=SP(2,IS)                                                DDCY1665
      SPL(3,IS)=SP(3,IS)                                                DDCY1666
      SNL(1,IS)=SN(1,IS)                                                DDCY1667
      SNL(2,IS)=SN(2,IS)                                                DDCY1668
      SNL(3,IS)=SN(3,IS)                                                DDCY1669
50    SP(1,IS)=TP(1,IS)+S(IS)*TN(1,IS)                                  DDCY1670
      SP(2,IS)=TP(2,IS)+S(IS)*TN(2,IS)                                  DDCY1680
      SP(3,IS)=TP(3,IS)+S(IS)*TN(3,IS)                                  DDCY1690
47    TEM(1)=SP(1,IS)-SRFACE(1)                                         DDCY1700
      TEM(2)=SP(2,IS)-SRFACE(2)                                         DDCY1710
      TEM(3)=SP(3,IS)-SRFACE(3)                                         DDCY1720
      TEM(4)=TEM(1)*SRFACE(4)+TEM(2)*SRFACE(5)+TEM(3)*SRFACE(6)         DDCY1730
      TEM(1)=TEM(1)-TEM(4)*SRFACE(4)                                    DDCY1740
      TEM(2)=TEM(2)-TEM(4)*SRFACE(5)                                    DDCY1750
      TEM(3)=TEM(3)-TEM(4)*SRFACE(6)                                    DDCY1760
      TEM(5)=TEM(1)*TEM(1)+TEM(2)*TEM(2)+TEM(3)*TEM(3)                  DDCY1770
      IF(TEM(5)) 3,3,4                                                  DDCY1780
3     IER=K1                                                            DDCY1790
      GO TO 1000                                                        DDCY1800
4     TEM(5)=DSQRT(TEM(5))                                              DDCY1810
      SN(1,IS)=TEM(1)/TEM(5)                                            DDCY1820
      SN(2,IS)=TEM(2)/TEM(5)                                            DDCY1830
      SN(3,IS)=TEM(3)/TEM(5)                                            DDCY1840
1000  CONTINUE                                                          DDCY1850
      RETURN                                                            DDCY1860
      END                                                               DDCY1870
**** SOURCE FILE : M0000884.ORG   ***
*
C.....FORTRAN SUBROUTINE             DDLIM ...              3/1/68   GK DDLM0000
      SUBROUTINE DDLIM                                                  DDLM0010
C                                                                       DDLM0011
C                                                                       DDLM0012
      RETURN                                                            DDLM0020
       END                                                              DDLM0030
**** SOURCE FILE : M0002828.V04   ***
*
C                                                                       DDPA0001
C                                                                       DDPA0010
      SUBROUTINE DDPARA(U,V)                                            DDPA0020
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DDPA0030
C                                                                       DDPA0040
C                                                                       DDPA0050
C                                                                       DDPA0190
      INCLUDE 'TOTAL.INC'                                               DDPA0191
C...  ALL REFERENCES TO TEMP HAVE BEEN CHANGED TO TEMP1, AS             DDPA0391
C...  TEMP OCCURS IN FXCOR.INC                                          DDPA0392
      INCLUDE 'FXCOR.INC'                                               DDPA0393
      INCLUDE 'SV.INC'                                                  DDPA0651
      INCLUDE 'ZNUMBR.INC'                                              DDPA0771
      INCLUDE 'ISV.INC'                                                 DDPA0961
      INCLUDE 'IFXCOR.INC'                                              DDPA1161
      INCLUDE 'KNUMBR.INC'                                              DDPA1331
C                                                                       DDPA1340
      EQUIVALENCE (TEMP1(11),DIF(1)), (TEMP1(13),DISP(1))               DDPA1350
      EQUIVALENCE  (TEMP1(19),UU), (TEMP1(20),VV)                       DDPA1360
      DIMENSION DERU(3,4),DERV(3,4),DIF(2),P(3),DISP(3)                 DDPA1370
      DIMENSION US(25),VS(25),SPLL(3),SDIF(3),T1(3),T2(3)               DDPA1380
      DIMENSION PDUM(3),PDUM1(3)                                        DDPA1390
      LOGICAL CKDEF                                                     DDPA1400
      DIMENSION IFSTT(4) ,TEMP1(25)                                     DDPA1410
      DATA IFSTT /4*0/                                                  DDPA1420
C                                                                       DDPA1430
C  --------------------------------------------------------------~      DDPA1440
C                                                                       DDPA1450
      Z1EM4=0.00003                                                     DDPA1460
      IDEBUG = 0                                                        DDPA1470
      UU=U                                                              DDPA1480
      VV=V                                                              DDPA1490
      IS2=IS+2                                                          DDPA1500
      IP=IS/80                                                          DDPA1530
      IF ( JENT(IS).EQ.0) IFSTT(IP)=0                                   DDPA1540
      IF (JENT(IS).EQ.1 .AND. IFSTT(IP).EQ.0 ) GO TO 4040               DDPA1550
      MMODE=2                                                           DDPA1560
 4039 MODE=2                                                            DDPA1570
      GO TO 4090                                                        DDPA1580
 4040 MMODE=1                                                           DDPA1590
      IF(CKDEF(U)) CALL AERR(27004,'DDPARA  ')                          DDPA1600
      IF(CKDEF(V)) CALL AERR(27005,'DDPARA  ')                          DDPA1610
      IFSTT(IP) = 1                                                     DDPA1620
      IF ( ISTRUP.EQ.1 .AND. INDIR(IS).EQ.1) GO TO 4039                 DDPA1630
C------MODE=1 MEANS AN SNXP COMPUTATION IS BEING REQUESTED              DDPA1640
C------ COMPUTE THE CLOSEST POINT ON THE TANGENT PLANE TO THE TOOL POINTDDPA1650
      MODE=1                                                            DDPA1660
 4090 CONTINUE                                                          DDPA1670
      TEM(1)=SN(1,IS)                                                   DDPA1680
      TEM(2)=SN(2,IS)                                                   DDPA1690
      TEM(3)=SN(3,IS)                                                   DDPA1700
      TEM(4)=SP(1,IS)                                                   DDPA1710
      TEM(5)=SP(2,IS)                                                   DDPA1720
      TEM(6)=SP(3,IS)                                                   DDPA1730
C------THE FOLLOWING LOOP ATTEMPTS BY AN ITERATIVE TECHNIQUE, TO        DDPA1740
C------FIND THE SURFACE POINT SP AND SURFACE NORMAL SN WHERE THE        DDPA1750
C------TOOL RAY TP,TN INTERSECTS THE SURFACE                            DDPA1760
      LCT=0                                                             DDPA1770
   10 CALL LCLS(UU,VV,SP(1,IS),DERU(1,IP),DERV(1,IP),MMODE)             DDPA1780
C------THE ABOVE CALL INITIATES A LINKAGE OF A PROGRAMMER SUPPLIED      DDPA1860
C------FORTRAN SUBROUTINE WHICH DEFINES THE CURRENT PARAMETRIC          DDPA1870
C------SURFACE.  THE PARAMETER VALUES U,V,W ARE INITIALLY SUPPLIED      DDPA1880
C------FROM THE PART PROGRAM TO GIVE THIS ALGORITHM A GOOD STARTUP      DDPA1890
C------POINT  THE SURFACE PT AND NORMAL CORRESPONDING TO THESE          DDPA1900
C------PARAMETER VALUES ARE RETURNED.  THEREAFTER, THE ROUTINE          DDPA1910
C------MODIFIES THE U V PARAMETER VALUES UNTIL THEY GENERATE A GOOD     DDPA1920
C------SURFACE POINT                                                    DDPA1930
      TEMP1(1) = SP(1,IS) - TP(1,IS)                                    DDPA1940
      TEMP1(2) = SP(2,IS) - TP(2,IS)                                    DDPA1950
      TEMP1(3) = SP(3,IS) - TP(3,IS)                                    DDPA1960
   22 S(IS) = TEMP1(1)*SN(1,IS) + TEMP1(2)*SN(2,IS) + TEMP1(3)*SN(3,IS) DDPA1970
C------IF TOOL POINT AND SURF PT ARE CLOSE THEN MAKE NORMAL EXIT        DDPA1980
      DTEMP = DSQRT( TEMP1(1)**2+TEMP1(2)**2+TEMP1(3)**2 )              DDPA1990
      INORM = 1                                                         DDPA2000
       IF ( DTEMP .LT. Z1EM4 ) GO TO 40                                 DDPA2010
C------ IF IMODE=1 CHECK FOR SUFACE NORMAL ALLIGNMENT WITH TOOL POINT   DDPA2020
      ZANG=SN(1,IS)*TEMP1(1)+SN(2,IS)*TEMP1(2)+SN(3,IS)*TEMP1(3)        DDPA2030
      XANG = DABS(ZANG)/DTEMP                                           DDPA2040
      IF(MODE.EQ.1.AND.DABS(XANG-1.0).LT.Z1EM4) GO TO 40                DDPA2050
      ANG = 1.0 - DABS(S(IS)/DTEMP)                                     DDPA2060
      DEN = TN(1,IS)*SN(1,IS) + TN(2,IS)*SN(2,IS) + TN(3,IS)*SN(3,IS)   DDPA2070
C------IF THE TOOL NORMAL AND SURFACE NORMAL ARE NEARLY PERPENDICULAR   DDPA2080
C------THEN TAKE AN ABNORMAL EXIT                                       DDPA2090
      INORM = 2                                                         DDPA2100
      IF ( MODE .EQ. 2 .AND. DABS(DEN) .LT. Z1EM4 ) GO TO 70            DDPA2110
C------THE FIRST TIME THROUGH, COMPUTE THE INTERSECTION OF THE          DDPA2120
C------TOOL RAY TP,TN AND THE STARTUP SURFACE PLANE                     DDPA2130
      IF ( DABS(DEN) .GT. 1.0D-6) S(IS)=S(IS)/DEN                       DDPA2140
C------IF THE SURFACE POINT IS CLOSE TO THE TOOL RAY, THEN EXIT NORMALLYDDPA2150
      DOT = TEMP1(1)*TN(1,IS) + TEMP1(2)*TN(2,IS) +TEMP1(3)*TN(3,IS)    DDPA2160
      DO 6031 LL=1,3                                                    DDPA2170
 6031 PDUM(LL) = TEMP1(LL) - DOT*TN(LL,IS)                              DDPA2180
      DDUM = DSQRT( PDUM(1)**2 + PDUM(2)**2 + PDUM(3)**2)               DDPA2190
      INORM = 4                                                         DDPA2200
      IF ( MODE .EQ. 2 .AND. DDUM .LT. Z1EM4 ) GO TO 40                 DDPA2210
      IF ( MODE .EQ. 1 ) GO TO 501                                      DDPA2220
C------P IS THE POINT OF INTERSECTION OF TANGENT PLANE AND TOOL RAY     DDPA2230
      P(1) = TP(1,IS) + S(IS)*TN(1,IS)                                  DDPA2240
      P(2) = TP(2,IS) + S(IS)*TN(2,IS)                                  DDPA2250
      P(3) = TP(3,IS) + S(IS)*TN(3,IS)                                  DDPA2260
      GO TO 601                                                         DDPA2270
  501 CONTINUE                                                          DDPA2280
      P(1) = TP(1,IS) +  ZANG*SN(1,IS)                                  DDPA2290
      P(2) = TP(2,IS) +  ZANG*SN(2,IS)                                  DDPA2300
      P(3) = TP(3,IS) +  ZANG*SN(3,IS)                                  DDPA2310
  601 CONTINUE                                                          DDPA2320
      DISP(1) = P(1) - SP(1,IS)                                         DDPA2330
      DISP(2) = P(2) - SP(2,IS)                                         DDPA2340
      DISP(3) = P(3) - SP(3,IS)                                         DDPA2350
C------FIND A CHANGE DU,DV IN U,V SUCH THAT DU*DERU+DV*DERV=DISP        DDPA2360
      DO 5014 L=1,6                                                     DDPA2370
 5014 TEMP1(L)=0                                                        DDPA2380
      DO 5015 L=1,3                                                     DDPA2390
      TEMP1(1) = TEMP1(1) + DERU(L,IP)*DERU(L,IP)                       DDPA2400
      TEMP1(2) = TEMP1(2) + DERU(L,IP)*DERV(L,IP)                       DDPA2410
      TEMP1(3) = TEMP1(3) + DERV(L,IP)*DERV(L,IP)                       DDPA2420
      TEMP1(5) = TEMP1(5) + DISP(L)  *DERU(L,IP)                        DDPA2430
 5015 TEMP1(6) = TEMP1(6) + DISP(L)  *DERV(L,IP)                        DDPA2440
      DO 5016 L=1,6                                                     DDPA2450
      IF ( DABS(TEMP1(L)) .LT. 1.0D-30) TEMP1(L)=0.0                    DDPA2460
 5016 CONTINUE                                                          DDPA2470
      TEMP1(4) = TEMP1(1)*TEMP1(3) - TEMP1(2)**2                        DDPA2480
      IF ( DABS(TEMP1(4)).LT. 1.0D-30 ) GO TO 40                        DDPA2490
      DIF(1) = ( TEMP1(3)*TEMP1(5) - TEMP1(2)*TEMP1(6) )/ TEMP1(4)      DDPA2500
      DIF(2) = ( TEMP1(1)*TEMP1(6) - TEMP1(2)*TEMP1(5) )/ TEMP1(4)      DDPA2510
      TU = UU + DIF(1)                                                  DDPA2520
      TV = VV + DIF(2)                                                  DDPA2530
      IF(MODE.EQ.3) GO TO 3041                                          DDPA2536
C------SAVE THE CURRENT SURFACE NORMAL SINCE LCLS RESETS SN             DDPA2540
      DO 6713 L=1,3                                                     DDPA2550
 6713 T1(L)=SN(L,IS)                                                    DDPA2560
      CALL LCLS(TU,TV,SPLL,PDUM,PDUM1,MMODE)                            DDPA2570
C------RESTORE THE OLD SURFACE NORMAL                                   DDPA2580
      DO 6714 L=1,3                                                     DDPA2590
 6714 SN(L,IS)=T1(L)                                                    DDPA2600
C------AFTER THE FIRST PASS, USE THE LAST SURFACE POINT AND PARA-       DDPA2610
C------BOLIC INTERPOLATION TO ESTIMATE BETTER U,V VALUES                DDPA2620
 3100 CONTINUE                                                          DDPA2630
C------FIRST SETUP THE APPROXIMATING PARABOLA TO THE SURFACE            DDPA2640
      DO 3040 L = 1,3                                                   DDPA2650
 3040 SDIF(L) = SPLL(L) - SP(L,IS)                                      DDPA2660
      CALL VNORM(SDIF,SDIF)                                             DDPA2662
      IF(VTEM.GT.1.0D-12) GO TO 3042                                    DDPA2663
      IFSTT(IP)=3                                                       DDPA2664
      MODE=3                                                            DDPA2665
 3041 UU=TU                                                             DDPA2666
      VV=TV                                                             DDPA2667
      GO TO 10                                                          DDPA2668
 3042 CALL CROSS(SDIF,SN(1,IS),T1)                                      DDPA2670
      CALL CROSS( T1, SN(1,IS), T2)                                     DDPA2680
      CALL VNORM( T2, T2)                                               DDPA2690
C------ T2 IS NOW THE PARABOLIC TANGENT VECTOR                          DDPA2700
      PX = SDIF(1)*T2(1) + SDIF(2)*T2(2) + SDIF(3)*T2(3)                DDPA2710
      PY = SDIF(1)*SN(1,IS) + SDIF(2)*SN(2,IS) + SDIF(3)*SN(3,IS)       DDPA2720
      PCURV = PY/(PX*PX)                                                DDPA2730
C------ THE PARABOLA IS NOW R(S) = SP + S*T2 + S**2*PCURV*SN            DDPA2740
      DO 3050 L=1,3                                                     DDPA2750
 3050 T1(L) = PCURV*SN(L,IS)                                            DDPA2760
C------ NOW CALL FOR THE CLOSEST APPROACH BETWEEN THE PARABOLA AND      DDPA2770
C------AND THE TOOL RAY                                                 DDPA2780
      CALL PARLND( TP(1,IS),TN(1,IS),SP(1,IS),T2,T1,S(IS),PDUM,         DDPA2790
     1           SA,PDUM1,DDUM,MODE,IOP(IS),IFAIL )                     DDPA2800
      IF ( IFAIL .EQ. 1 ) GO TO 70                                      DDPA2860
C------ IF THE TOOL RAY LIES CLOSE TO THE PARABOLA, THEN EXIT NORMALLY  DDPA2870
C------ON RETURN, S(IS) IS THE DISTANCE ALONG THE TOOL NORMAL FROM      DDPA2880
C------TP TO CLOSEST APPROACH TO THE PARABOLA.  SA IS THE PARAMETER     DDPA2890
C------VALUE WHICH DEFINES THE POINT ON THE PARABOLA.  OTHER            DDPA2900
C------VARIABLES RETURNED (PDUM,PDUM1,DDUM) ARE NOT NEEDED HERE         DDPA2910
C------ FROM THIS CONSTRUCT AN ESTIMATED DISPLACEMENT VECTOR            DDPA2920
      DO 3060 L = 1,3                                                   DDPA2930
      DISP(L) = SA*T2(L)                                                DDPA2940
      IF ( DABS(DISP(L)) .LT. 1.0D-30 ) DISP(L)=0.0                     DDPA2950
 3060 CONTINUE                                                          DDPA2960
 4010 CONTINUE                                                          DDPA2970
C------IF DISP IS VERY SMALL, MAKE A NORMAL EXIT                        DDPA2980
      TEMP1(1) = DISP(1)**2 + DISP(2)**2 + DISP(3)**2                   DDPA2990
      TEMP1(1) = DSQRT(TEMP1(1))                                        DDPA3000
      INORM = 5                                                         DDPA3010
      IF(TEMP1(1).LT.1.0D-06) GO TO 40                                  DDPA3020
C------TEST FOR LOOP COUNTER EXCEEDED                                   DDPA3030
      IF( LCT .GT. 24 ) GO TO 70                                        DDPA3040
C------FIND A CHANGE DU,DV IN U,V SUCH THAT DU*DERU+DV*DERV=DISP        DDPA3050
   85 DO 3070 L=1,6                                                     DDPA3060
 3070 TEMP1(L) = 0.                                                     DDPA3070
      DO 3080 L = 1,3                                                   DDPA3080
      TEMP1(1) = TEMP1(1) + DERU(L,IP)*DERU(L,IP)                       DDPA3090
      TEMP1(2) = TEMP1(2) + DERU(L,IP)*DERV(L,IP)                       DDPA3100
      TEMP1(3) = TEMP1(3) + DERV(L,IP)*DERV(L,IP)                       DDPA3110
      TEMP1(5) = TEMP1(5) + DISP(L)  *DERU(L,IP)                        DDPA3120
 3080 TEMP1(6) = TEMP1(6) + DISP(L)  *DERV(L,IP)                        DDPA3130
      DO 3085 L=1,6                                                     DDPA3140
      IF ( DABS(TEMP1(L)) .LT. 1.0D-30) TEMP1(L)=0.0                    DDPA3150
 3085 CONTINUE                                                          DDPA3160
      TEMP1(4) = TEMP1(1)*TEMP1(3) - TEMP1(2)**2                        DDPA3170
      IF ( DABS(TEMP1(4)).LT. 1.0D-30 ) GO TO 40                        DDPA3180
      DIF(1) = ( TEMP1(3)*TEMP1(5) - TEMP1(2)*TEMP1(6) )/ TEMP1(4)      DDPA3190
      DIF(2) = ( TEMP1(1)*TEMP1(6) - TEMP1(2)*TEMP1(5) )/ TEMP1(4)      DDPA3200
      UU = UU + DIF(1)                                                  DDPA3230
      VV = VV + DIF(2)                                                  DDPA3240
      LCT = LCT + 1                                                     DDPA3250
      US(LCT) = UU                                                      DDPA3260
      VS(LCT) = VV                                                      DDPA3270
C------INTRODUCE ARITHMETIC MEANS TO AVOID OSCILLATIONS                 DDPA3280
      IF ( LCT .LT. 9 ) GO TO 250                                       DDPA3290
      UU = 0.                                                           DDPA3300
      VV = 0.                                                           DDPA3310
      DO 260 LL = 9, LCT                                                DDPA3320
      UU = UU + US(LL)                                                  DDPA3330
  260 VV = VV + VS(LL)                                                  DDPA3340
      UU = UU/(LCT-8)                                                   DDPA3350
      VV = VV/(LCT-8)                                                   DDPA3360
  250 CONTINUE                                                          DDPA3370
      GO TO 10                                                          DDPA3380
C------        END OF U,V ITERATIVE LOOP LOGIC                          DDPA3390
   40 IF(MODE.NE.1) GO TO 4050                                          DDPA3400
      IF ( DTEMP .LT. Z1EM4 ) GO TO 4050                                DDPA3410
      TN(1,IS)=SP(1,IS)-TP(1,IS)                                        DDPA3420
      TN(2,IS)=SP(2,IS)-TP(2,IS)                                        DDPA3430
      TN(3,IS)=SP(3,IS)-TP(3,IS)                                        DDPA3440
      S(IS)=DSQRT(TN(1,IS)**2+TN(2,IS)**2+TN(3,IS)**2)                  DDPA3450
      CALL VNORM (TN(1,IS),TN(1,IS) )                                   DDPA3460
 4050 CONTINUE                                                          DDPA3470
   55 SNL(1,IS) = TEM(1)                                                DDPA3480
      SNL(2,IS) = TEM(2)                                                DDPA3490
      SNL(3,IS) = TEM(3)                                                DDPA3500
      SPL(1,IS) = TEM(4)                                                DDPA3510
      SPL(2,IS) = TEM(5)                                                DDPA3520
      SPL(3,IS) = TEM(6)                                                DDPA3530
C------IF STARTUP IS FINISHED , LET U,V ASSUME THE LAST DEFINED         DDPA3540
C------UU,VV VALUES                                                     DDPA3550
      U=UU                                                              DDPA3560
      V=VV                                                              DDPA3570
      IF(IOP(IS).NE.1.OR.S(IS).GE.0.0) GO TO 999                        DDPA3580
C------  ERROR EXIT FOLLOWS                                             DDPA3590
   70 CONTINUE                                                          DDPA3600
C------ IF TOOL NORMAL DIDNOT INTERSECT SURFACE, TRY TO FIND AN SRP     DDPA3610
      IF ( MODE .EQ. 2 ) GO TO 1740                                     DDPA3620
      IER = 1                                                           DDPA3630
  999 CONTINUE                                                          DDPA3640
      JENTL=JENT(IS)                                                    DDPA3650
      RETURN                                                            DDPA3680
 1740 CONTINUE                                                          DDPA3690
      MODE = 1                                                          DDPA3700
      UU = U                                                            DDPA3710
      VV = V                                                            DDPA3720
      GO TO 4090                                                        DDPA3730
      END                                                               DDPA3740
**** SOURCE FILE : DDPARS00.ORG   ***
*
      SUBROUTINE DDPARS(PCANON)                                         00000100
*                                                                       00000200
*  * DDPARS *  VAX-11 FORTRAN 77 VERSION  29.8.86  E.MCLELLAN           00000300
*                                                                       00000400
*  PURPOSE     TO SET THE ADDRESSES OF THE PARAMETERS U AND V           00000500
*              IN THE ARGUMENT LIST FOR A CALL TO DDPARA AND            00000600
*              TO SERVE AS A DISPATCHER BETWEEN DDST AND DDPARA         00000700
*                                                                       00000800
*  CALLING SEQUENCE                                                     00000900
*              CALL DDPARS(PCANON)                                      00001000
*  ARGUMENTS                                                            00001100
*              PCANON   ARRAY CONTAINING THE CANONICAL FORM OF          00001200
*                      A PARAMTRIC SURFACE                              00001300
*                                                                       00001400
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00001500
C                                                                       00001600
C                                                                       00001700
      INCLUDE 'LDEF.INC'                                                00001800
      INCLUDE 'BLANKCOM.INC'                                            00001900
C                                                                       00002000
C                                                                       00002100
      INTEGER XCANON                                                    00002200
      EXTERNAL XCANON                                                   00002300
C                                                                       00002400
      DIMENSION PCANON(10)                                              00002500
C                                                                       00002600
C                                                                       00002700
C.....PICK UP VIRTUAL ADDRESSES OF U AND V FROM PCANON ARRAY            00002800
C                                                                       00002900
      IU=INT(PCANON(2))                                                 00003000
      IV=INT(PCANON(3))                                                 00003100
C                                                                       00003200
C.....CONVERT TO ACTUAL ADDRESSES                                       00003300
C                                                                       00003400
      IF (CANFLG) IU=XCANON(IU)                                         00003500
      U=COM(IU)                                                         00003600
      IF (CANFLG) IV=XCANON(IV)                                         00003700
      V=COM(IV)                                                         00003800
C                                                                       00003900
C.....CALL DDPARA(U,V)                                                  00004000
C                                                                       00004100
      CALL DDPARA(U,V)                                                  00004200
C                                                                       00004300
      RETURN                                                            00004400
      END                                                               00004500
**** SOURCE FILE : M0000887.V04   ***
*
C                                                                       DDPL0001
C.....FORTRAN SUBROUTINE             DDPLAN...              3/1/68   GK DDPL0002
      SUBROUTINE DDPLAN(SRFACE)                                         DDPL0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DDPL0020
C                                                                       DDPL0030
C                                                                       DDPL0040
C                                                                       DDPL0050
C                                                                       DDPL0060
      INCLUDE 'TOTAL.INC'                                               DDPL0171
      INCLUDE 'FXCOR.INC'                                               DDPL0481
      INCLUDE 'SV.INC'                                                  DDPL0777
      INCLUDE 'ZNUMBR.INC'                                              DDPL0873
      INCLUDE 'ISV.INC'                                                 DDPL1025
      INCLUDE 'IFXCOR.INC'                                              DDPL1185
      INCLUDE 'ISHR18.INC'                                              DDPL1297
      INCLUDE 'KNUMBR.INC'                                              DDPL1441
C                                                                       DDPL1480
C                                                                       DDPL1490
C                                                                       DDPL1500
C                                                                       DDPL1510
      DIMENSION SRFACE(4)                                               DDPL1520
      IER=K0                                                            DDPL1530
      IF(ISTRUP.EQ.5)GO TO 5                                            DDPL1540
      S(IS)=SRFACE(4)                                                   DDPL1550
      TEM(1)=TN(1,IS)*SRFACE(1)+TN(2,IS)*SRFACE(2)+TN(3,IS)*SRFACE(3)   DDPL1560
      S(IS)=S(IS)-(TP(1,IS)*SRFACE(1)+TP(2,IS)*SRFACE(2)+               DDPL1570
     1TP(3,IS)*SRFACE(3))                                               DDPL1580
      IF(DABS(TEM(1))-Z1EM7) 3,3,2                                      DDPL1600
    2 S(IS)=S(IS)/TEM(1)                                                DDPL1610
      ADUMY=IOP(IS)                                                     DDPL1620
      IF (IOP(IS).EQ.-1) GOTO 4                                         DDPL1625
      IF(ADUMY*S(IS)) 3,4,4                                             DDPL1630
    3 IER=K1                                                            DDPL1640
      RETURN                                                            DDPL1645
4     IF(ISTRUP.EQ.4)GO TO 6                                            DDPL1650
      SPL(1,IS)=SP(1,IS)                                                DDPL1651
      SPL(2,IS)=SP(2,IS)                                                DDPL1653
      SPL(3,IS)=SP(3,IS)                                                DDPL1655
      SNL(1,IS)=SN(1,IS)                                                DDPL1656
      SNL(2,IS)=SN(2,IS)                                                DDPL1657
      SNL(3,IS)=SN(3,IS)                                                DDPL1658
6     SP(1,IS)=TP(1,IS)+S(IS)*TN(1,IS)                                  DDPL1660
      SP(2,IS)=TP(2,IS)+S(IS)*TN(2,IS)                                  DDPL1665
      SP(3,IS)=TP(3,IS)+S(IS)*TN(3,IS)                                  DDPL1670
5     SN(1,IS)=SRFACE(1)                                                DDPL1690
      SN(2,IS)=SRFACE(2)                                                DDPL1700
      SN(3,IS)=SRFACE(3)                                                DDPL1710
      RETURN                                                            DDPL1720
      END                                                               DDPL1730
**** SOURCE FILE : M0000888.V05   ***
*
C                                                                       DDQD0001
C.....FORTRAN SUBROUTINE             DDQUAD...              3/1/68   GK DDQD0002
      SUBROUTINE DDQUAD(SRFACE)                                         DDQD0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DDQD0020
C                                                                       DDQD0030
C                                                                       DDQD0040
C                                                                       DDQD0050
C                                                                       DDQD0060
      INCLUDE 'TOTAL.INC'                                               DDQD0171
      INCLUDE 'DSHAR4.INC'                                              DDQD0348
      INCLUDE 'FXCOR.INC'                                               DDQD0614
      INCLUDE 'SV.INC'                                                  DDQD0873
      INCLUDE 'ZNUMBR.INC'                                              DDQD0957
      INCLUDE 'ISV.INC'                                                 DDQD0958
      INCLUDE 'IFXCOR.INC'                                              DDQD1097
      INCLUDE 'ISHR18.INC'                                              DDQD1195
C                                                                       DDQD1320
C                                                                       DDQD1330
      DIMENSION SRFACE(10)                                              DDQD1360
      IER=0                                                             DDQD1361
      IF(ISTRUP.EQ.5)GO TO 1015                                         DDQD1362
      IF(JSW.EQ.5.OR.JSW.EQ.9)GO TO 5                                   DDQD1364
      DO 1 I=1,10                                                       DDQD1370
    1 TEM(I)=SRFACE(I)                                                  DDQD1380
      A=Z2*(TEM(6)*TN(3,IS)*TN(1,IS)                                    DDQD1390
     1     +TEM(7)*TN(1,IS)*TN(2,IS)                                    DDQD1392
     2     +TEM(5)*TN(2,IS)*TN(3,IS))                                   DDQD1394
     3     +TN(1,IS)**2*TEM(1)+TN(2,IS)**2*TEM(2)                       DDQD1400
     4     +TN(3,IS)**2*TEM(3)                                          DDQD1402
      B=(TEM(1)*TN(1,IS)+TEM(7)*TN(2,IS)+TEM(6)*TN(3,IS))*TP(1,IS)      DDQD1410
     1 +(TEM(7)*TN(1,IS)+TEM(2)*TN(2,IS)+TEM(5)*TN(3,IS))*TP(2,IS)      DDQD1420
     2 +(TEM(6)*TN(1,IS)+TEM(5)*TN(2,IS)+TEM(3)*TN(3,IS))*TP(3,IS)      DDQD1430
     3 +TN(1,IS)*TEM(8)+TN(2,IS)*TEM(9)+TN(3,IS)*TEM(10)                DDQD1440
      C=Z2*(TEM(6)*TP(3,IS)*TP(1,IS)                                    DDQD1450
     1  +TEM(7)*TP(1,IS)*TP(2,IS)                                       DDQD1452
     2  +TEM(5)*TP(2,IS)*TP(3,IS)                                       DDQD1460
     3  +TP(1,IS)*TEM(8)+TP(2,IS)*TEM(9)+TP(3,IS)*TEM(10))              DDQD1462
     4  +TP(1,IS)**2*TEM(1)+TP(2,IS)**2*TEM(2)                          DDQD1470
     5  +TP(3,IS)**2*TEM(3)+TEM(4)                                      DDQD1472
      GO TO 1000                                                        DDQD1480
5     A=TN(1,IS)*TN(1,IS)+TN(2,IS)*TN(2,IS)+TN(3,IS)*TN(3,IS)           DDQD1490
      TEM(1)=TP(1,IS)-SRFACE(1)                                         DDQD1500
      TEM(2)=TP(2,IS)-SRFACE(2)                                         DDQD1510
      TEM(3)=TP(3,IS)-SRFACE(3)                                         DDQD1520
      B=TEM(1)*TN(1,IS)+TEM(2)*TN(2,IS)+TEM(3)*TN(3,IS)                 DDQD1525
      E=TEM(1)*TEM(1)+TEM(2)*TEM(2)+TEM(3)*TEM(3)                       DDQD1530
      IF(JSW.EQ.9)GO TO 10                                              DDQD1535
      C=E-SRFACE(4)*SRFACE(4)                                           DDQD1540
      GO TO 1000                                                        DDQD1550
10    TEM(4)=SRFACE(7)*SRFACE(7)                                        DDQD1560
      TEM(5)=A                                                          DDQD1570
      A=TN(1,IS)*SRFACE(4)+TN(2,IS)*SRFACE(5)+TN(3,IS)*SRFACE(6)        DDQD1580
      D=TEM(1)*SRFACE(4)+TEM(2)*SRFACE(5)+TEM(3)*SRFACE(6)              DDQD1590
      B=A*D-TEM(4)*B                                                    DDQD1610
      A=A*A-TEM(5)*TEM(4)                                               DDQD1620
      C=D*D-TEM(4)*E                                                    DDQD1630
      CALL QUAD                                                         DDQD1640
      IF(IER)20,20,3000                                                 DDQD1650
20    CONTINUE                                                          DDQD1660
      IF((TEM(1)+S(IS)*TN(1,IS))*SRFACE(4)+(TEM(2)+S(IS)*TN(2,IS))*     DDQD1670
     1SRFACE(5)+(TEM(3)+S(IS)*TN(3,IS))*SRFACE(6))25,25,1011            DDQD1680
C                                                                       DDQD1690
C     **SOLUTION INVALID**                                              DDQD1700
C                                                                       DDQD1710
25    IF(SURD)30,50,40                                                  DDQD1720
30    IF(IOP(IS))40,40,50                                               DDQD1730
40    S(IS)=SURD                                                        DDQD1740
      SURD=Z0                                                           DDQD1750
      GO TO 20                                                          DDQD1760
50    IER=1                                                             DDQD1770
      GO TO 3000                                                        DDQD1780
1000  CALL QUAD                                                         DDQD1790
1010  IF(IER.EQ.1)GO TO 3000                                            DDQD1795
1011  IF(ISTRUP.EQ.4)GO TO 1012                                         DDQD1796
      SPL(1,IS)=SP(1,IS)                                                DDQD1797
      SPL(2,IS)=SP(2,IS)                                                DDQD1798
      SPL(3,IS)=SP(3,IS)                                                DDQD1800
      SNL(1,IS)=SN(1,IS)                                                DDQD1801
      SNL(2,IS)=SN(2,IS)                                                DDQD1802
      SNL(3,IS)=SN(3,IS)                                                DDQD1803
1012  SP(1,IS)=TP(1,IS)+S(IS)*TN(1,IS)                                  DDQD1805
      SP(2,IS)=TP(2,IS)+S(IS)*TN(2,IS)                                  DDQD1808
      SP(3,IS)=TP(3,IS)+S(IS)*TN(3,IS)                                  DDQD1810
1015  IF(JSW.EQ.5.OR.JSW.EQ.9)GO TO 2000                                DDQD1840
      TEM(1)=SRFACE(1)*SP(1,IS)+SRFACE(7)*SP(2,IS)+                     DDQD1850
     1SRFACE(6)*SP(3,IS)+SRFACE(8)                                      DDQD1860
      TEM(2)=SRFACE(7)*SP(1,IS)+SRFACE(2)*SP(2,IS)+                     DDQD1870
     1SRFACE(5)*SP(3,IS)+SRFACE(9)                                      DDQD1880
      TEM(3)=SRFACE(6)*SP(1,IS)+SRFACE(5)*SP(2,IS)+                     DDQD1890
     1SRFACE(3)*SP(3,IS)+SRFACE(10)                                     DDQD1900
      CALL VNORM(TEM,SN(1,IS))                                          DDQD1910
      GO TO 3000                                                        DDQD1920
2000  SN(1,IS)=SP(1,IS)-SRFACE(1)                                       DDQD1930
      SN(2,IS)=SP(2,IS)-SRFACE(2)                                       DDQD1940
      SN(3,IS)=SP(3,IS)-SRFACE(3)                                       DDQD1950
      CALL VNORM(SN(1,IS),SN(1,IS))                                     DDQD1960
      IF(JSW.EQ.5)GO TO 3000                                            DDQD1970
      IF(IER)2002,2002,2009                                             DDQD1980
2009  IER=0                                                             DDQD1990
      SN(1,IS)=-SRFACE(4)                                               DDQD2000
      SN(2,IS)=-SRFACE(5)                                               DDQD2010
      SN(3,IS)=-SRFACE(6)                                               DDQD2020
      GO TO 3000                                                        DDQD2030
2002  TEM(4)=SN(1,IS)*SRFACE(4)+SN(2,IS)*SRFACE(5)+SN(3,IS)*SRFACE(6)   DDQD2040
      TEM(6)=DSQRT(Z1-TEM(4)*TEM(4))                                    DDQD2050
      TEM(7)=DSQRT(Z1-SRFACE(7)*SRFACE(7))                              DDQD2060
      TEM(8)=TEM(4)*SRFACE(7)+TEM(6)*TEM(7)                             DDQD2070
      IF(TEM(8))3000,2005,2005                                          DDQD2080
 2005 SN(1,IS)=(SRFACE(7)*SN(1,IS)-TEM(8)*SRFACE(4))/TEM(6)             DDQD2090
      SN(2,IS)=(SRFACE(7)*SN(2,IS)-TEM(8)*SRFACE(5))/TEM(6)             DDQD2100
      SN(3,IS)=(SRFACE(7)*SN(3,IS)-TEM(8)*SRFACE(6))/TEM(6)             DDQD2110
3000  RETURN                                                            DDQD2120
      END                                                               DDQD2130
**** SOURCE FILE : M0000889.V07   ***
*
C.....FORTRAN SUBROUTINE  ....DDRLSR         8/68                 RN,PH DDRL0001
C...  FORTRAN SUBROUTINE               DDRLSR                           DDRL0002
C                                                                       DDRL0020
C              FORTRAN SUBROUTINE DDRLSR                                DDRL0030
C                                                                       DDRL0040
C PURPOSE      TO CALCULATE THE SCALAR S,GIVEN THE VECTORS TP AND TN,   DDRL0050
C              SUCH THAT TP+S*TN IS A POINT ON THE RULED SURFACE AND    DDRL0060
C              ALSO TO CALCULATE THE SURFACE NORMAL AT THAT POINT       DDRL0070
C                                                                       DDRL0080
C LINKAGE      CALL DDRLSR                                              DDRL0090
C                                                                       DDRL0100
C CALLS        VNORM,CROSS                                              DDRL0110
C                                                                       DDRL0120
C                                                                       DDRL0130
      SUBROUTINE DDRLSR                                                 DDRL0140
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)            DDRL0141
      DOUBLE PRECISION LCANON                                           DDRL0142
C                                                                       DDRL0150
      INCLUDE 'TOTAL.INC'                                               DDRL0261
C...  ALL REFERENCES TO ARRAY R HAVE BEEN CHANGED TO R0,                DDRL0452
C...  BECAUSE R OCCURS IN DSHAR4.INC.                                   DDRL0453
      INCLUDE 'DSHAR4.INC'                                              DDRL0454
      INCLUDE 'FXCOR.INC'                                               DDRL0704
      INCLUDE 'SV.INC'                                                  DDRL0963
      INCLUDE 'ISV.INC'                                                 DDRL1096
      INCLUDE 'IFXCOR.INC'                                              DDRL1236
C                                                                       DDRL1380
C                                                                       DDRL1390
C              COMMON,DIMENSION AND EQUIVALENCE FOR RLDSR               DDRL1400
C                                                                       DDRL1410
      INCLUDE 'BLANKCOM.INC'                                            DDRL1420
C                                                                       DDRL1425
      DIMENSION LCANON(COMSIZ)                                          DDRL1430
      EQUIVALENCE  (CANON(1),P(1),W(1),F(1),PP(1),                      DDRL1440
     /                      WP(1),VP(1),LCANON(1)),                     DDRL1445
     1            (CANON(18),R2(3),R3(6),R0(9),SL(12),ZN(15),ZLAMBD(16),DDRL1450
     2             DELTA(17),IFST(18))                                  DDRL1460
      DIMENSION P(COMSIZ),W(COMSIZ),F(COMSIZ),PP(COMSIZ),WP(COMSIZ),    DDRL1470
     1VP(COMSIZ),ZN(COMSIZ-3),SL(COMSIZ-6),R3(COMSIZ-12),R2(COMSIZ-15), DDRL1480
     2R0(COMSIZ-9),Q1(3),W1(3),V1(3),Q2(3),W2(3),V2(3),D(3),PO(3),DV(3),DDRL1490
     3         DVP(3),E(3),DC(3),DCP(3),SC(3),CP(3),X(3),FC(3),UT1(3),  DDRL1500
     4T1(3),AA(3),BB(3),IFST(COMSIZ),DELTA(COMSIZ-1),ZLAMBD(COMSIZ-2)   DDRL1510
     5   ,S1(3),SPLL(3),SNLL(3)                                         DDRL1515
     6        ,SPLLL(3)                                                 DDRL1516
C              NOTE THIS SUBROUTINE HAS BEEN COPIED FORM THE APT SYSTEM DDRL1520
C                   CURRANT AS OF 9/1/67. NONE OF THE NAMES HAVE BEEN   DDRL1530
C                   CHANGED TO PROTECT THE INNOCENT.                    DDRL1540
C...           (EXCEPT FOR R, AS MENTIONED WITH THE INCLUDE STATEMENTS) DDRL1541
      DIMENSION LCIC(12)                                                DDRL1545
      DOUBLE PRECISION IFST                                             DDRL1546
      COMMON/TRACFL/TRACFL                                              DDRL1550
      LOGICAL TRACFL                                                    DDRL1551
C     INITIALIZE                                                        DDRL1560
C                                                                       DDRL1570
      ILIM = IC+160                                                     DDRL1581
      ICSS = IC                                                         DDRL1600
      IOPS = IOP(IS)                                                    DDRL1620
      I=ICANON(IS)                                                      DDRL1622
      JSW1 = ISFIDN(IS)                                                 DDRL1630
      IOP(IS) = -1                                                      DDRL1640
      IGUESS = 0                                                        DDRL1650
      LOOP = 25                                                         DDRL1660
      EP2 = .00001                                                      DDRL1670
      DO 10 I = 1,3                                                     DDRL1690
      D(I) = TN(I,IS)                                                   DDRL1700
      PO(I) = TP(I,IS)                                                  DDRL1705
      SPLL(I)=SPL(I,IS)                                                 DDRL1706
      SNLL(I)=SNL(I,IS)                                                 DDRL1707
      SPLLL(I) = SP(I,IS)                                               DDRL1708
      SPL(I,IS) = SP(I,IS)                                              DDRL1710
      SNL(I,IS)=SN(I,IS)                                                DDRL1712
 10   CONTINUE                                                          DDRL1713
C                                                                       DDRL1720
C                                                                       DDRL1730
C     COMPUTE VARIABLE SUBSCRIPTS                                       DDRL1740
      DO 11 I=2,12                                                      DDRL1745
   11 LCIC(I)=LCANON(IC+I)+0.1                                          DDRL1747
      LSD=IC+LCIC(2)+4                                                  DDRL1750
      LS1=IC+LCIC(3)                                                    DDRL1760
      LP=IC+LCIC(4)                                                     DDRL1770
      LW=IC+LCIC(5)                                                     DDRL1780
      LV=IC+LCIC(6)                                                     DDRL1790
      LS2=IC+LCIC(7)                                                    DDRL1800
C                                                                       DDRL1810
      JSW2 = LCANON(LS1-1)                                              DDRL1830
      JSW3 = LCANON(LS2-1)                                              DDRL1850
      Q1(1) = P(LP)                                                     DDRL1860
      Q1(2) = P(LP+1)                                                   DDRL1870
      Q1(3) = P(LP+2)                                                   DDRL1880
      W1(1) = W(LW)   - Q1(1)                                           DDRL1890
      W1(2) = W(LW+1) - Q1(2)                                           DDRL1900
      W1(3) = W(LW+2) - Q1(3)                                           DDRL1910
      CALL VNORM (W1,DV)                                                DDRL1920
C                                                                       DDRL1930
C     STORE LENGTH OF W1 IN EP5                                         DDRL1940
C                                                                       DDRL1950
      EP5 = VTEM                                                        DDRL1960
      V1(1) = F(LV)                                                     DDRL1970
      V1(2) = F(LV+1)                                                   DDRL1980
      V1(3) = F(LV+2)                                                   DDRL1990
C                                                                       DDRL1991
C.... FIRST TIME. SET TN                                                DDRL1992
      I=ICANON(IS)                                                      DDRL1994
      IF(IOPS.NE.2) GO TO 12                                            DDRL2000
      D(1) = V1(1)                                                      DDRL2003
      D(2) = V1(2)                                                      DDRL2004
      D(3) = V1(3)                                                      DDRL2005
   12 ICSS2 = LCANON(ICSS+2) + 0.1                                      DDRL2006
C                                                                       DDRL2010
      IF (ICSS2.EQ.5) GOTO 20                                           DDRL2012
      LPP=IC+LCIC(8)                                                    DDRL2020
      LWP=IC+LCIC(9)                                                    DDRL2030
      LVP=IC+LCIC(10)                                                   DDRL2040
      Q2(1) = PP(LPP)                                                   DDRL2050
      Q2(2) = PP(LPP+1)                                                 DDRL2060
      Q2(3) = PP(LPP+2)                                                 DDRL2070
      W2(1) = WP(LWP)   - Q2(1)                                         DDRL2080
      W2(2)=WP(LWP+1)-Q2(2)                                             DDRL2090
      W2(3) = WP(LWP+2) - Q2(3)                                         DDRL2100
      CALL VNORM (W2,DVP)                                               DDRL2110
      EP6 = VTEM                                                        DDRL2120
      V2(1) = VP(LVP)                                                   DDRL2130
      V2(2) = VP(LVP+1)                                                 DDRL2140
      V2(3) = VP(LVP+2)                                                 DDRL2150
      GO TO 30                                                          DDRL2160
   20 CP(1) = PP(LS2)                                                   DDRL2170
      CP(2) = PP(LS2+1)                                                 DDRL2180
      CP(3) = PP(LS2+2)                                                 DDRL2190
      DCP(1) = 0.                                                       DDRL2200
      DCP(2) = 0.                                                       DDRL2210
      DCP(3) = 0.                                                       DDRL2220
   30 IF(IFST(LSD).NE.0.) GO TO 220                                     DDRL2230
      IFST(LSD)=1.0                                                     DDRL2240
   40 LOOP = 25                                                         DDRL2250
      IGUESS = IGUESS + 1                                               DDRL2260
      ZLAMBD(LSD) = 0.5                                                 DDRL2270
      ISFIDN(IS) = JSW1                                                 DDRL2280
      IF(IGUESS.LE.8) GO TO 60                                          DDRL2290
      IER = 1                                                           DDRL2300
   50 TP(1,IS) = PO(1)                                                  DDRL2310
      TP(2,IS) = PO(2)                                                  DDRL2320
      TP(3,IS) = PO(3)                                                  DDRL2330
      TN(1,IS) = D(1)                                                   DDRL2340
      TN(2,IS) = D(2)                                                   DDRL2350
      TN(3,IS) = D(3)                                                   DDRL2360
      ISFIDN(IS) = JSW1                                                 DDRL2365
      IOP(IS) = IOPS                                                    DDRL2370
      IF(IER.EQ.1) GO TO 53                                             DDRL2371
      DO 52 I=1,3                                                       DDRL2372
      SP(I,IS) = TP(I,IS) + S(IS) * TN(I,IS)                            DDRL2373
   52 CONTINUE                                                          DDRL2374
      GO TO 55                                                          DDRL2375
   53 CONTINUE                                                          DDRL2376
      DO 54 I = 1,3                                                     DDRL2377
      SP(I,IS) =SPLLL(I)                                                DDRL2378
      SN(I,IS) =SNL(I,IS)                                               DDRL2379
      SPL(I,IS)=SPLL(I)                                                 DDRL2380
      SNL(I,IS)=SNLL(I)                                                 DDRL2381
   54 CONTINUE                                                          DDRL2382
   55 IC=ICANON(IS)                                                     DDRL2383
      RETURN                                                            DDRL2390
C                                                                       DDRL2400
   60 GO TO (65,70,80,90,100,110,120,130),IGUESS                        DDRL2410
   65 IF(INDIR(IS).EQ.1) GO TO 68                                       DDRL2411
      XDIS1=(PO(1)-P(LP))**2+(PO(2)-P(LP+1))**2+(PO(3)-P(LP+2))**2      DDRL2412
      XDIS2=(PO(1)-W(LW))**2+(PO(2)-W(LW+1))**2+(PO(3)-W(LW+2))**2      DDRL2413
      DELTA(LSD)=0.3                                                    DDRL2415
      IF(XDIS2.LT.XDIS1) DELTA(LSD)=0.7                                 DDRL2417
      GO TO 140                                                         DDRL2418
   68 IGUESS=IGUESS+1                                                   DDRL2419
   70 DELTA(LSD) = .5                                                   DDRL2420
      GO TO 140                                                         DDRL2430
   80 DELTA(LSD) = .999                                                 DDRL2440
      GO TO 140                                                         DDRL2450
   90 DELTA(LSD) = .001                                                 DDRL2460
      GO TO 140                                                         DDRL2470
  100 DELTA(LSD) = .75                                                  DDRL2480
      GO TO 140                                                         DDRL2490
  110 DELTA(LSD) = .25                                                  DDRL2500
      GO TO 140                                                         DDRL2510
  120 DELTA(LSD) =-.2                                                   DDRL2520
      GO TO 140                                                         DDRL2530
  130 DELTA(LSD) = 1.2                                                  DDRL2540
C                                                                       DDRL2550
  140 ICSS2=LCANON(ICSS+2)+0.1                                          DDRL2560
      IF(ICSS2.EQ.5) GO TO 160                                          DDRL2561
C                                                                       DDRL2566
      DO 150 I = 1,3                                                    DDRL2570
      X(I) = Q2(I) + DELTA(LSD)*W2(I)                                   DDRL2580
  150 BB(I) = DVP(I)                                                    DDRL2590
      TN(1,IS)=V2(1)                                                    DDRL2600
      TN(2,IS) = V2(2)                                                  DDRL2610
      TN(3,IS) = V2(3)                                                  DDRL2620
      EP = EP6                                                          DDRL2630
      IC = LS2                                                          DDRL2640
      ISFIDN(IS) = JSW3                                                 DDRL2650
      CALL CROSS (V2,DVP,SC)                                            DDRL2660
      GO TO 180                                                         DDRL2670
C                                                                       DDRL2680
  155 CP(1) = E(1)                                                      DDRL2690
      CP(2) = E(2)                                                      DDRL2700
      CP(3) = E(3)                                                      DDRL2710
      DCP(1) = DC(1)                                                    DDRL2720
      DCP(2) = DC(2)                                                    DDRL2730
      DCP(3) = DC(3)                                                    DDRL2740
C                                                                       DDRL2750
C                                                                       DDRL2760
  160 DO 170 I = 1,3                                                    DDRL2770
      X(I) = Q1(I) + DELTA(LSD)*W1(I)                                   DDRL2780
  170 BB(I) = DV(I)                                                     DDRL2790
      EP = EP5                                                          DDRL2800
      TN(1,IS) = V1(1)                                                  DDRL2802
      TN(2,IS) = V1(2)                                                  DDRL2803
      TN(3,IS) = V1(3)                                                  DDRL2804
      IC = LS1                                                          DDRL2810
      ISFIDN(IS) = JSW2                                                 DDRL2820
      CALL CROSS (V1,DV,SC)                                             DDRL2830
  180 CALL VNORM (SC,FC)                                                DDRL2840
      SIGN1 = VTEM                                                      DDRL2850
      IF (IER.NE.0) GO TO 40                                            DDRL2860
      TP(1,IS) = X(1)                                                   DDRL2870
      TP(2,IS) = X(2)                                                   DDRL2880
      TP(3,IS) = X(3)                                                   DDRL2890
      AA(1) = 0.                                                        DDRL2900
      A = 0.                                                            DDRL2910
      B = 0.                                                            DDRL2912
      C = 0.                                                            DDRL2914
C                                                                       DDRL2920
      JSW = ISFIDN(IS)                                                  DDRL2925
      IV=ISTRUP                                                         DDRL2926
      ISTRUP=4                                                          DDRL2927
      GOTO(250,250,255,255,265,265,265,265,265,265,275,182,280,265),JSW DDRL2930
  250 CALL DDPLAN(CANON(IC))                                            DDRL2940
       GO TO 182                                                        DDRL2950
  255 CALL DDCYLN(CANON(IC))                                            DDRL2960
       GO TO 182                                                        DDRL2970
  265 CALL DDQUAD(CANON(IC))                                            DDRL3000
       GO TO 182                                                        DDRL3010
 275  CALL DDTABC(CANON(IC-1))                                          DDRL3040
       GO TO 182                                                        DDRL3050
  280 CALL POLCON(CANON(IC),2)                                          DDRL3060
182   ISTRUP=IV                                                         DDRL3070
      IF(IER.GT.0)GO TO 40                                              DDRL3071
      E(1) = TP(1,IS) + S(IS)*TN(1,IS)                                  DDRL3080
      E(2) = TP(2,IS) + S(IS)*TN(2,IS)                                  DDRL3090
      E(3) = TP(3,IS) + S(IS)*TN(3,IS)                                  DDRL3100
      SP(1,IS) = E(1)                                                   DDRL3110
      SP(2,IS) = E(2)                                                   DDRL3120
      SP(3,IS) = E(3)                                                   DDRL3130
  184 CALL CROSS (FC,SN(1,IS),UT1)                                      DDRL3260
      CALL VNORM (UT1,T1)                                               DDRL3270
      DOT = T1(1)*BB(1) + T1(2)*BB(2) + T1(3)*BB(3)                     DDRL3280
      IF (DOT.GT.0.) GO TO 190                                          DDRL3290
      SIG = -1.                                                         DDRL3300
      GO TO 200                                                         DDRL3310
  190 SIG = 1.                                                          DDRL3320
  200 CALL CROSS (T1,TN(1,IS),S1)                                       DDRL3330
      CALL VNORM (S1,UT1)                                               DDRL3340
      SIGN2 = VTEM                                                      DDRL3350
      DO 210 I = 1,3                                                    DDRL3360
  210 DC(I) = T1(I)*SIG*SIGN1*EP/SIGN2                                  DDRL3370
      IF(IC.EQ.LS2) GOTO 155                                            DDRL3380
C                                                                       DDRL3390
C   RB AND R2 ARE PARTIAL DERIVATIVES WRT DELTA AND LAMBDA REGSPECTIVELYDDRL3400
C                                                                       DDRL3410
      R3(LSD)   = DC(1) + ZLAMBD(LSD)*(DCP(1)-DC(1))                    DDRL3420
      R3(LSD+1) = DC(2) + ZLAMBD(LSD)*(DCP(2)-DC(2))                    DDRL3430
      R3(LSD+2) = DC(3) + ZLAMBD(LSD)*(DCP(3)-DC(3))                    DDRL3440
      R2(LSD)   = CP(1) - E(1)                                          DDRL3450
      R2(LSD+1) = CP(2) - E(2)                                          DDRL3460
      R2(LSD+2) = CP(3) - E(3)                                          DDRL3470
      CALL VNORM (R3(LSD),ZN(LSD))                                      DDRL3480
      IF (IER.GT.0) GO TO 40                                            DDRL3490
      CALL VNORM (R2(LSD),SL(LSD))                                      DDRL3500
      IF (IER.GT.0) GO TO 40                                            DDRL3510
      CALL CROSS (ZN(LSD),SL(LSD),SC)                                   DDRL3520
      CALL VNORM(SC,ZN(LSD))                                            DDRL3530
C     ZN(LSD) CONTAINS THE SURFACE NORMAL                               DDRL3540
      IF (IER.GT.0) GO TO 40                                            DDRL3570
C                                                                       DDRL3580
C     R0(LSD) CONTAINS THE SURFACE POINT                                DDRL3590
C                                                                       DDRL3600
      R0(LSD)   = E(1) + ZLAMBD(LSD)*R2(LSD)                            DDRL3610
      R0(LSD+1) = E(2) + ZLAMBD(LSD)*R2(LSD+1)                          DDRL3620
      R0(LSD+2) = E(3) + ZLAMBD(LSD)*R2(LSD+2)                          DDRL3630
      ILSD=LSD+2                                                        DDRL3631
C                                                                       DDRL3640
C     TAKE DOT PRODUCT OF TOOL NORMAL AND SURFACE NORMAL                DDRL3650
      IF(IOPS.NE.2) GO TO 220                                           DDRL3651
      X(1)=R0(LSD)-PO(1)                                                DDRL3652
      X(2)=R0(LSD+1)-PO(2)                                              DDRL3653
      X(3)=R0(LSD+2)-PO(3)                                              DDRL3654
      CALL VNORM(X,D)                                                   DDRL3655
      VNDIR(1,IS)=D(1)                                                  DDRL3656
      VNDIR(2,IS)=D(2)                                                  DDRL3657
      VNDIR(3,IS)=D(3)                                                  DDRL3658
      INDIR(IS)=1                                                       DDRL3659
C                                                                       DDRL3660
  220 G = D(1)*ZN(LSD) + D(2)*ZN(LSD+1) + D(3)*ZN(LSD+2)                DDRL3670
      IF (DABS(G).LT..01) GO TO 40                                      DDRL3680
      X(1) = PO(1) - R0(LSD)                                            DDRL3690
      X(2) = PO(2) - R0(LSD+1)                                          DDRL3700
      X(3) = PO(3) - R0(LSD+2)                                          DDRL3710
      XLL = -(X(1)*ZN(LSD)+X(2)*ZN(LSD+1)+X(3)*ZN(LSD+2))/G             DDRL3720
      CALL VNORM(X,AA)                                                  DDRL3730
      X(1) = X(1) + XLL*D(1)                                            DDRL3740
      X(2) = X(2) + XLL*D(2)                                            DDRL3750
      X(3) = X(3) + XLL*D(3)                                            DDRL3760
C                                                                       DDRL3770
C     SUM IS THE DISTANCE BETWEEN THE POINT OF INTERSECTION OF TOOL     DDRL3780
C         NORMAL WITH THE PLANE AND THE SURFACE POINT                   DDRL3790
C     SIGMA IS THE COSINE OF THE ANGLE BETWEEN TOOL NORMAL AND          DDRL3800
C         NORMALIZED (TOOL POINT - SURFACE POINT)                       DDRL3810
C                                                                       DDRL3820
      SUM = DABS(X(1)) + DABS(X(2)) + DABS(X(3))                        DDRL3830
      SIGMA = DABS(AA(1)*D(1) + AA(2)*D(2) + AA(3)*D(3))                DDRL3840
C                                                                       DDRL3850
C     DECLARE CONVERGENCE IF EITHER ANGLE OR DIST. LT. TEST QUANTITIES  DDRL3860
C                                                                       DDRL3870
      IF ((SIGMA.LT..99995).AND.(SUM.GT.EP2)) GO TO 230                 DDRL3880
      IER = 1                                                           DDRL3890
      IF ((IOPS.GT.0).AND.(XLL.LT.0.)) GO TO 50                         DDRL3900
      IER = 0                                                           DDRL3910
      S(IS) = XLL                                                       DDRL3920
      TEM(8) = ZN(LSD)                                                  DDRL3930
      TEM(9) = ZN(LSD+1)                                                DDRL3940
      TEM(10)= ZN(LSD+2)                                                DDRL3950
      SLX(1,IS) = SL(LSD)                                               DDRL3960
      SLX(2,IS) = SL(LSD+1)                                             DDRL3970
      SLX(3,IS) = SL(LSD+2)                                             DDRL3980
      CALL VNORM(TEM(8),SN(1,IS))                                       DDRL3985
      GO TO 50                                                          DDRL3990
C                                                                       DDRL4000
C     UPDATE COUNTERS PICKUP NEW PARAMETERS IF COUNTERS EXHAUSTED       DDRL4010
C                                                                       DDRL4020
  230 LOOP = LOOP - 1                                                   DDRL4030
      IF (LOOP.LE.0) GO TO 40                                           DDRL4040
C                                                                       DDRL4050
C     ALPH AND BETA ARE LINEAR CORRECTIONS TO DELTA AND LAMBDA          DDRL4060
C                                                                       DDRL4070
      CSL = R3(LSD)**2 + R3(LSD+1)**2 + R3(LSD+2)**2                    DDRL4080
      CSM = R3(LSD)*R2(LSD)+R3(LSD+1)*R2(LSD+1)+R3(LSD+2)*R2(LSD+2)     DDRL4090
      CSN = R2(LSD)**2 + R2(LSD+1)**2 + R2(LSD+2)**2                    DDRL4100
      SMA = R3(LSD)*X(1)+R3(LSD+1)*X(2)+R3(LSD+2)*X(3)                  DDRL4110
      SMB = R2(LSD)*X(1)+R2(LSD+1)*X(2)+R2(LSD+2)*X(3)                  DDRL4120
      DELT = CSL*CSN - CSM*CSM                                          DDRL4130
      IF (DELT.LT..00001) GO TO 40                                      DDRL4140
      ALPH = (SMA*CSN - SMB*CSM)/DELT                                   DDRL4150
      BETA = (SMB*CSL - SMA*CSM)/DELT                                   DDRL4160
      DELTA(LSD) = DELTA(LSD) + .8*ALPH                                 DDRL4170
      ZLAMBD(LSD)= ZLAMBD(LSD) + .8*BETA                                DDRL4180
      GO TO 140                                                         DDRL4190
      END                                                               DDRL4200
**** SOURCE FILE : M0002893.V06   ***
*
      SUBROUTINE DDST                                                   00000100
C                                                                       00000110
C              /-DDST FOR DIRECTED DISTANCE TO SURFACE                  00000200
C                                                                       00000310
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00000400
C                                                                       00000499
      INCLUDE 'TOTAL.INC'                                               00001401
      INCLUDE 'DSHAR4.INC'                                              00003301
      INCLUDE 'FXCOR.INC'                                               00006001
      INCLUDE 'SV.INC'                                                  00009301
      INCLUDE 'ISV.INC'                                                 00010901
      INCLUDE 'IFXCOR.INC'                                              00012701
      INCLUDE 'ISHR18.INC'                                              00013901
C                                                                       00013902
C...  21. ADDCOM BLOCK                                                  00014000
      COMMON/ADDCOM/ ADDCOM                                             00014100
      DIMENSION ADDCOM(25)                                              00014200
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            00014300
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),              00014400
     2            (ADDCOM(25),KDYNFL)                                   00014500
C                                                                       00014600
      INCLUDE 'BLANKCOM.INC'                                            00014810
C                                                                       00014820
C              /-ARRAY TO SAVE SP,SN DATA                               00014900
      DIMENSION STEM(6)                                                 00015000
C              /-J11 IS AN INDEX TO THE LOCATION OF LARGE DATA IN CANON 00015100
C              /-J11 MUST BE ON A DOUBLE WORD BOUNDARY PER APT094 REQS. 00015200
      INTEGER J11                                                       00015300
      EQUIVALENCE (REAL8,J11)                                           00015400
C                                                                       00015500
      COMMON/IDDST/IDDST                                                00015600
C                                                                       00015700
      DATA ZERO,ONE/0.0D0,1.0D0/                                        00015800
C                                                                       00015900
C                                                                       00016100
      IDDST=1                                                           00016200
      DO 100 I=1,3                                                      00016400
      STEM(I)=SN(I,IS)                                                  00016500
      STEM(I+3)=SP(I,IS)                                                00016600
  100 CONTINUE                                                          00016800
      A=ZERO                                                            00016810
      B=ZERO                                                            00016820
      C=ZERO                                                            00016830
C                                                                       00017000
C              /-IC IS THE INDEX TO THE INTERNAL CANON FORM OF SURF IS  00018100
      IC=ICANON(IS)                                                     00018200
C              /-JSW IS THE SURFACE NUMERIC TYPE(1 THRU 30)             00018300
      JSW=ISFIDN(IS)                                                    00018400
C             /-SET MODE TO FETCH LARGE DATA FROM EXTERNAL STORAGE.     00018700
      IFETCH=3                                                          00018800
C                                                                       00018900
      GO TO ( 1, 1, 3, 3, 6,  6, 6, 6, 6, 6,                            00019000
     X       11,12,13, 6,15, 99,99,99,99,99,                            00019100
     X       99,99,99,99,99, 99,99,99,29,30), JSW                       00019200
   99 CONTINUE                                                          00019300
C              /-ERROR, JSW INDEX IS OUT OF RANGE                       00019400
      IER=1                                                             00019500
      GO TO 999                                                         00019600
    1 CONTINUE                                                          00019700
      CALL DDPLAN(CANON(IC))                                            00019800
      GO TO 1000                                                        00019900
C                                                                       00020000
    3 CONTINUE                                                          00020100
      CALL DDCYLN(CANON(IC))                                            00020200
      GO TO 1000                                                        00020300
C                                                                       00020400
    6 CONTINUE                                                          00020500
      CALL DDQUAD(CANON(IC))                                            00020600
      GO TO 1000                                                        00020700
C                                                                       00020800
   11 CONTINUE                                                          00020900
      CALL APT094(IFETCH,CANON(IC),J11)                                 00021000
      J11=J11-1                                                         00021100
      CALL DDTABC(CANON(J11))                                           00021200
      GO TO 1000                                                        00021300
C                                                                       00021400
   12 CONTINUE                                                          00021500
      CALL APT094(IFETCH,CANON(IC),J11)                                 00021600
      IC=J11                                                            00021700
      CALL DDRLSR                                                       00021800
      GO TO 1000                                                        00021900
C                                                                       00022000
   13 CONTINUE                                                          00022100
      CALL POLCON(CANON(IC),2)                                          00022200
      GO TO 1000                                                        00022300
C              /-                                                       00022400
   15 CONTINUE                                                          00022500
      CALL DDPARS(CANON(IC))                                            00022600
      GO TO 1000                                                        00022700
C                                                                       00022800
   29 CONTINUE                                                          00022900
      CALL APT094(IFETCH,CANON(IC),J11)                                 00023000
      CALL DDSSRF(CANON(J11))                                           00023100
      GO TO 1000                                                        00023200
C                                                                       00023300
C             /-SYNTHETIC CURVE NOT NOW PROGRAMMED FOR ARELEM           00023400
   30 CONTINUE                                                          00023500
      CALL AERR(26203,'DDST    ')                                       00023600
      GO TO 999                                                         00023700
C                                                                       00023800
 1000 CONTINUE                                                          00023900
C                                                                       00024000
      IF(KDYNFL.NE.0) CALL APT238(1)                                    00024100
C                                                                       00024300
C              /-EXIT POINT FOR DDST ROUTINE                            00024400
C              /-RESTORE SURFACE DATA                                   00024500
      DO 700 I=1,3                                                      00024600
      SN(I,IS)=STEM(I)                                                  00024700
  700 SP(I,IS)=STEM(I+3)                                                00024800
C                                                                       00024900
C                                                                       00025100
  999 CONTINUE                                                          00027700
      IDDST=0                                                           00027800
      RETURN                                                            00027900
      END                                                               00028000
C                                                                       00028100
C                                                                       00028200
C                                                                       00028300
C                                                                       00028400
      SUBROUTINE AJUNDD                                                 00030100
C                                                                       00030110
C              /-AJUNDD FOR DISTANCE AND LINEUP WITH SURFACE.           00030300
C                                                                       00030310
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00030400
C                                                                       00030499
      INCLUDE 'TOTAL.INC'                                               00031401
      INCLUDE 'DSHAR4.INC'                                              00033301
      INCLUDE 'FXCOR.INC'                                               00036001
      INCLUDE 'SV.INC'                                                  00039301
      INCLUDE 'ISV.INC'                                                 00040901
      INCLUDE 'IFXCOR.INC'                                              00042701
      INCLUDE 'ISHR18.INC'                                              00043901
C                                                                       00043902
C...  21. ADDCOM BLOCK                                                  00044000
      COMMON/ADDCOM/ ADDCOM                                             00044100
      DIMENSION ADDCOM(25)                                              00044200
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            00044300
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN),              00044400
     2            (ADDCOM(25),KDYNFL)                                   00044500
C                                                                       00044600
      INCLUDE 'BLANKCOM.INC'                                            00044810
C                                                                       00044820
C              /-ARRAY TO SAVE SP,SN DATA                               00044900
      DIMENSION STEM(6)                                                 00045000
C              /-J11 IS AN INDEX TO THE LOCATION OF LARGE DATA IN CANON 00045100
C              /-J11 MUST BE ON A DOUBLE WORD BOUNDARY PER APT094 REQS. 00045200
      INTEGER J11                                                       00045300
      EQUIVALENCE (REAL8,J11)                                           00045400
C                                                                       00045500
      COMMON/IDDST/IDDST                                                00045600
C                                                                       00045700
      DATA ZERO,ONE/0.0D0,1.0D0/                                        00045800
C                                                                       00045900
C                                                                       00046100
C                                                                       00047000
C              /-GIVEN TP,TN FIND SP,SN,S ON SURFACE                    00047100
C              /-SUCH THAT TP+S*TN=SP                                   00047200
C                                                                       00047300
      IDDST=2                                                           00047600
      MDIC=0                                                            00047700
C                                                                       00047800
  200 CONTINUE                                                          00048000
C              /-IC IS THE INDEX TO THE INTERNAL CANON FORM OF SURF IS  00048100
      IC=ICANON(IS)                                                     00048200
C              /-JSW IS THE SURFACE NUMERIC TYPE(1 THRU 30)             00048300
      JSW=ISFIDN(IS)                                                    00048400
C             /-SET MODE TO FETCH LARGE DATA FROM EXTERNAL STORAGE.     00048700
      IFETCH=3                                                          00048800
C                                                                       00048900
      GO TO ( 1, 1, 3, 3, 6,  6, 6, 6, 6, 6,                            00049000
     X       11,12,13, 6,15, 99,99,99,99,99,                            00049100
     X       99,99,99,99,99, 99,99,99,29,30), JSW                       00049200
   99 CONTINUE                                                          00049300
C              /-ERROR, JSW INDEX IS OUT OF RANGE                       00049400
      IER=1                                                             00049500
      GO TO 999                                                         00049600
    1 CONTINUE                                                          00049700
      CALL DDPLAN(CANON(IC))                                            00049800
      GO TO 1000                                                        00049900
C                                                                       00050000
    3 CONTINUE                                                          00050100
      CALL DDCYLN(CANON(IC))                                            00050200
      GO TO 1000                                                        00050300
C                                                                       00050400
    6 CONTINUE                                                          00050500
      CALL DDQUAD(CANON(IC))                                            00050600
      GO TO 1000                                                        00050700
C                                                                       00050800
   11 CONTINUE                                                          00050900
      CALL APT094(IFETCH,CANON(IC),J11)                                 00051000
      J11=J11-1                                                         00051100
      CALL DDTABC(CANON(J11))                                           00051200
      GO TO 1000                                                        00051300
C                                                                       00051400
   12 CONTINUE                                                          00051500
      CALL APT094(IFETCH,CANON(IC),J11)                                 00051600
      IC=J11                                                            00051700
      CALL DDRLSR                                                       00051800
      GO TO 1000                                                        00051900
C                                                                       00052000
   13 CONTINUE                                                          00052100
      CALL POLCON(CANON(IC),2)                                          00052200
      GO TO 1000                                                        00052300
C              /-                                                       00052400
   15 CONTINUE                                                          00052500
      CALL DDPARS(CANON(IC))                                            00052600
      GO TO 1000                                                        00052700
C                                                                       00052800
   29 CONTINUE                                                          00052900
      CALL APT094(IFETCH,CANON(IC),J11)                                 00053000
      CALL DDSSRF(CANON(J11))                                           00053100
      GO TO 1000                                                        00053200
C                                                                       00053300
C             /-SYNTHETIC CURVE NOT NOW PROGRAMMED FOR ARELEM           00053400
   30 CONTINUE                                                          00053500
      CALL AERR(26203,'AJUNDD  ')                                       00053600
      GO TO 999                                                         00053700
C                                                                       00053800
 1000 CONTINUE                                                          00053900
C                                                                       00054000
      IF(KDYNFL.NE.0) CALL APT238(1)                                    00054100
C                                                                       00054300
      IF(IER.EQ.0) GO TO 810                                            00055400
C              /-CALL RADAR TO GENERATE A NEW TP,TN FOR INTERSECTION    00055500
      CALL RADAR                                                        00055600
C              /-RESTART IF RADAR HAS OBTAINED A GOOD TP,TN             00055700
      IF(IAERR.EQ.0) GO TO 200                                          00055800
C              /-OTHERWISE, TERMINATE WITH THIS IAERR SETTING.          00055900
      GO TO 999                                                         00056000
C                                                                       00056100
  810 CONTINUE                                                          00056200
      IF(KDYNFL.NE.0) CALL APT238(2)                                    00056300
C              /-RADAR EXHAUSTED ALL TRIES                              00056400
      IF(IER.NE.0) CALL AERR(26204,'AJUNDD  ')                          00056500
      IF(JTN(IS).EQ.0) GO TO 820                                        00056600
C              /-ADJUST Z EACH TIME FOR CS, SN,TN SHOULD LIE SAME WAY.  00056700
      CALL DOTF(W1,TN(1,IS),SN(1,IS))                                   00056800
      Z(IS)=ONE                                                         00056900
      IF(W1.LT.ZERO) Z(IS)=-ONE                                         00057000
  820 CONTINUE                                                          00057100
      DO 830 I=1,3                                                      00057200
  830 SN(I,IS)=Z(IS)*SN(I,IS)                                           00057300
C                                                                       00057400
C                                                                       00057500
C              /-EXIT POINT                                             00057600
  999 CONTINUE                                                          00057700
      IDDST=0                                                           00057800
      RETURN                                                            00057900
      END                                                               00058000
**** SOURCE FILE : M0002926.W01   ***
*
C.....FORTRAN SUBROUTINE  ....DDTABC         8/68                    RN DDTB0001
C.....FORTRAN SUBROUTINE             DDTABC...              3/1/68   GK DDTB0002
      SUBROUTINE DDTABC(D)                                              DDTB0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DDTB0020
C                                                                       DDTB0030
C                                                                       DDTB0040
C                                                                       DDTB0050
C                                                                       DDTB0060
      INCLUDE 'TOTAL.INC'                                               DDTB0171
C...  ALL REFERENCES TO ARRAY R, HAVE BEEN CHANGED TO R0,               DDTB0385
C...  BECAUSE R OCCURS IN DSHAR4.INC                                    DDTB0386
      INCLUDE 'DSHAR4.INC'                                              DDTB0387
      INCLUDE 'FXCOR.INC'                                               DDTB0673
      INCLUDE 'SV.INC'                                                  DDTB0969
      INCLUDE 'ZNUMBR.INC'                                              DDTB1065
      INCLUDE 'LDEF.INC'                                                DDTB1097
      INCLUDE 'ISV.INC'                                                 DDTB1257
      INCLUDE 'IFXCOR.INC'                                              DDTB1417
      INCLUDE 'KNUMBR.INC'                                              DDTB1673
C                                                                       DDTB1720
C                                                                       DDTB1730
C                                                                       DDTB1740
      DIMENSION R0(9)                                                   DDTB1742
C                                                                       DDTB1750
      EQUIVALENCE (TEM(1),H2),(TEM(2),G2),(TEM(3),SQ),(TEM(4),A1),      DDTB1760
     1            (TEM(5),B1),(TEM(6),C1),(TEM(7),UP),(TEM(8),VP),      DDTB1770
     2            (TEM(9),UN),(TEM(10),VN)                              DDTB1780
      DIMENSION X(3)                                                    DDTB1790
      EQUIVALENCE (PARAM(4),X(1)),(PARAM(1),SINN),(PARAM(2),COSS)       DDTB1800
      EQUIVALENCE (SEG(3),ACF),(SEG(4),BCF),(SEG(5),CCF)                DDTB1810
      DIMENSION D(*)                                                    DDTB1820
      DIMENSION IITBSG(4)                                               DDTB1821
      DOUBLE PRECISION XA                                               DDTB1822
      DATA IITBSG,ISQLS/5*0/                                            DDTB1823
      DATA ICOUNT/0/                                                    DDTB1830
      DATA ZLIT1,ZLIT2,KLIT3/.2D0,1.D-20,14/                            DDTB1840
C                                                                       DDTB1850
C...  DEFINITIONS OF ARITHMETIC STATEMENT FUNCTIONS                     DDTB1860
C                                                                       DDTB1870
      CUBIC(XA)=((ACF*XA+BCF)*XA+CCF)*XA                                DDTB1890
      CUBC1(XA)=((ACF*XA+BCF)*XA+(CCF-SLOPE))*XA-VINT                   DDTB1900
C                                                                       DDTB1910
C...  INITIALIZE DIRECTED DISTANCE                                      DDTB1920
C                                                                       DDTB1930
C                                                                       DDTB1931
C                                                                       DDTB1940
C                                                                       DDTB1950
C...  TRANSFORM TOOL POINT AND TOOL NORMAL INTO U-V-W COORD. SYSTEM     DDTB1960
C                                                                       DDTB1970
      I=1                                                               DDTB1980
   10 R0(I)=D(I+2)                                                      DDTB1982
      I=I+1                                                             DDTB1984
      IF(I.LT.10) GO TO 10                                              DDTB1986
C                                                                       DDTB1988
C                                                                       DDTB1990
      IER=0                                                             DDTB1991
      S(IS)=1.0D+38                                                     DDTB1992
      UP = R0(1)*TP(1,IS)+R0(2)*TP(2,IS)+R0(3)*TP(3,IS)                 DDTB2000
      VP = R0(4)*TP(1,IS)+R0(5)*TP(2,IS)+R0(6)*TP(3,IS)                 DDTB2010
      WP=R0(7)*TP(1,IS)+R0(8)*TP(2,IS)+R0(9)*TP(3,IS)                   DDTB2015
      UN = R0(1)*TN(1,IS)+R0(2)*TN(2,IS)+R0(3)*TN(3,IS)                 DDTB2020
      VN = R0(4)*TN(1,IS)+R0(5)*TN(2,IS)+R0(6)*TN(3,IS)                 DDTB2030
      UQ=DSQRT(UN**2+VN**2)                                             DDTB2031
      IF(UQ.EQ.0.)GO TO 1002                                            DDTB2032
      UN=UN/UQ                                                          DDTB2033
      VN=VN/UQ                                                          DDTB2034
C                                                                       DDTB2040
C...  CHECK TO SEE IF TOOL NORMAL IS PARALLEL TO AXIS OF TABCYL         DDTB2050
C                                                                       DDTB2060
      IF(DABS(UN)+DABS(VN)-Z1EM6) 1002,1002,600                         DDTB2070
C                                                                       DDTB2080
C...  SET INDEXES AND BEGIN EXAMINING TABCYL SEGMENTS                   DDTB2090
C                                                                       DDTB2100
  600 NWDS=D(12)*7.0+6.0                                                DDTB2110
      I = D(13)                                                         DDTB2120
      IIP=IS-1                                                          DDTB2121
      IF(JENT(IS).EQ.0.AND.ISQLS.EQ.ISEQNO) I=IITBSG(IIP)               DDTB2122
  602 ICHECK = 0                                                        DDTB2130
      NMBSEG=D(12)                                                      DDTB2140
      NMBSEG=NMBSEG-K1                                                  DDTB2150
      DO 1001 L=1,NMBSEG                                                DDTB2160
C                                                                       DDTB2170
C...  STORE CANONICAL INFORMATION FOR SEGMENT IN SEG(K)                 DDTB2180
C                                                                       DDTB2190
 2501 J = I                                                             DDTB2200
      DO 500 K=1,9                                                      DDTB2210
      SEG(K)=D(J)                                                       DDTB2220
  500 J=J+K1                                                            DDTB2230
      SEG(6)=SEG(6)*SEG(5)                                              DDTB2231
      SEG(7)=SEG(7)*SEG(5)                                              DDTB2232
      SEG(5)=-SEG(5)*(SEG(3)*SEG(5)+SEG(4))                             DDTB2233
C                                                                       DDTB2240
C...  TRANSFORM POINTS AND VECTOR INTO U-V COORD. SYSTEM OF SEGMENT     DDTB2250
C                                                                       DDTB2260
      H2=SEG(8)-SEG(1)                                                  DDTB2270
      G2=SEG(9)-SEG(2)                                                  DDTB2280
      SQROOT=DSQRT(H2*H2+G2*G2)                                         DDTB2290
      SINN=G2/SQROOT                                                    DDTB2300
      COSS=H2/SQROOT                                                    DDTB2310
      H2=UP-SEG(1)                                                      DDTB2320
      G2=VP-SEG(2)                                                      DDTB2330
      UPP=H2*COSS+G2*SINN                                               DDTB2340
      VPP=-H2*SINN+G2*COSS                                              DDTB2350
      UNN=UN*COSS+VN*SINN                                               DDTB2360
      VNN=-UN*SINN+VN*COSS                                              DDTB2370
C                                                                       DDTB2380
C...  TEST FOR INTERSECTION OF DIRECTED LINE WITH RECTANGLE             DDTB2390
C...  SURROUNDING TABCYL SEGMENT                                        DDTB2400
C                                                                       DDTB2410
      IF(Z1E6*DABS(UNN)-DABS(VNN)) 603,603,604                          DDTB2420
  603 SLOPE=Z1E6                                                        DDTB2430
      IF(UPP-SQROOT) 4410,4410,1000                                     DDTB2440
 4410 IF(UPP) 1000,4411,4411                                            DDTB2445
 4411 TEM(1)=UPP                                                        DDTB2450
      TEM(2)=SEG(6)                                                     DDTB2452
      GO TO 700                                                         DDTB2456
  604 SLOPE=VNN/UNN                                                     DDTB2460
      IF(DABS(SLOPE)-Z1EM6) 605,605,4419                                DDTB2470
  605 SLOPE=Z0                                                          DDTB2480
      IF(VPP-SEG(6))606,4419,1000                                       DDTB2490
  606 IF(SEG(7)-VPP)4419,4419,1000                                      DDTB2500
C                                                                       DDTB2510
C...  U AND V COORDS. OF INTERSECTION WITH RECTANGLE ARE STORED         DDTB2520
C...  IN TEM AND TEM(2)                                                 DDTB2530
C                                                                       DDTB2540
 4419 TEM(1)=0.                                                         DDTB2550
      M=K7                                                              DDTB2560
      IF(UPP)4420,4420,4429                                             DDTB2570
 4420 TEM(2)=VPP+SLOPE*(TEM(1)-UPP)                                     DDTB2580
 4421 IF(SEG(7)-TEM(2))4426,4424,4432                                   DDTB2590
 4426 IF(SEG(6)-TEM(2))4435,4424,4424                                   DDTB2600
 4435 M=K6                                                              DDTB2610
 4432 TEM(1)=(SEG(M)-VPP)/SLOPE+UPP                                     DDTB2620
C---  CII UPDATE TO ENABLE INTERSEC AT A TAB PT, NIU-APR/75             DDTB2625
      IF(DABS(TEM(1)).LT.5.0D-17)TEM(1)=Z0                              DDTB2626
      IF(-TEM(1)) 4433,4425,1000                                        DDTB2630
 4433 IF(TEM(1)-SQROOT) 4425,4425,1000                                  DDTB2640
 4425 TEM(2)=SEG(M)                                                     DDTB2650
 4424 TEM(3)=DSQRT((TEM(1)-UPP)**2+(TEM(2)-VPP)**2)                     DDTB2660
C                                                                       DDTB2670
C...  IF DIRECTED DISTANCE TO RECTANGLE IS LESS THAN DIR. DIST.         DDTB2680
C...  TO CUBIC OF LAST SEGMENT,GO AHEAD AND CALC. DIR. DIST.            DDTB2690
C...  TO CUBIC FOR THIS SEGMENT                                         DDTB2700
C                                                                       DDTB2710
      IF(TEM(3)-DABS(S(IS))) 4436,1000,1000                             DDTB2720
 4429 IF(UPP-SQROOT)4431,4430,4430                                      DDTB2730
 4431 IF(SEG(7)-VPP)4434,700,4432                                       DDTB2740
 4434 IF(VPP-SEG(6))700,700,4435                                        DDTB2750
 4430 TEM(1)=SQROOT                                                     DDTB2760
      GO TO 4420                                                        DDTB2770
 4436 IF(IOP(IS)) 700,700,4437                                          DDTB2780
 4437 IF(UNN*(UPP-TEM(1))+VNN*(VPP-TEM(2))) 700,700,1000                DDTB2790
C                                                                       DDTB2800
C...  CALC. DIRECTED DISTANCE TO CUBIC OF SEGMENT                       DDTB2810
C                                                                       DDTB2820
C...  J IS SET TO KEEP A RECORD OF THE NUMBER OF INTERSECTIONS WITH     DDTB2830
C...  THE CUBIC                                                         DDTB2840
C                                                                       DDTB2850
  700 J=K1                                                              DDTB2860
      IF(Z1E6-SLOPE)607,607,609                                         DDTB2870
C                                                                       DDTB2880
C...  SOLVE DIRECTLY FOR INTERSECTION WITH VERTICAL LINE                DDTB2890
C                                                                       DDTB2900
  607 X(1)=UPP                                                          DDTB2910
      GO TO 48                                                          DDTB2920
  609 VINT=VPP-SLOPE*UPP                                                DDTB2930
      IF(Z1EM6-DABS(VINT)) 612,618,618                                  DDTB2940
C                                                                       DDTB2950
C...  TEST FOR DEGENERATE CASES OF CUBIC                                DDTB2960
C                                                                       DDTB2970
  612 IF(SEG(3))630,613,630                                             DDTB2980
  613 IF(SEG(4))616,617,616                                             DDTB2990
C                                                                       DDTB3000
C...  DOES DIRECTED LINE CROSS U AXIS WITHIN SEGMENT                    DDTB3010
C                                                                       DDTB3020
  614 IF(VINT*SLOPE)615,635,635                                         DDTB3030
  615 IF (VINT/SLOPE+SQROOT) 635,635,5041                               DDTB3040
C                                                                       DDTB3050
C...  DEGENERATE CUBIC ---- QUADRATIC EQUATION                          DDTB3060
C                                                                       DDTB3070
  616 C1=-VINT                                                          DDTB3080
      A1=SEG(4)                                                         DDTB3090
      B1=SEG(5)-SLOPE                                                   DDTB3100
  622 J = 0                                                             DDTB3110
      GO TO 623                                                         DDTB3120
C                                                                       DDTB3130
C...  DEGENERATE CUBIC ---- LINEAR EQUATION                             DDTB3140
C                                                                       DDTB3150
  617 X(1)=-VINT/SLOPE                                                  DDTB3160
      GO TO 48                                                          DDTB3170
C                                                                       DDTB3180
C...  FACTOR OUT THE ROOT,X=0,AND CREATE THE RESULTING QUADRATIC        DDTB3190
C                                                                       DDTB3199
  699 IF(B1.EQ.0.)GO TO 629                                             DDTB3200
      X(2)=-C1/B1                                                       DDTB3201
      K=K2                                                              DDTB3202
      GO TO 629                                                         DDTB3203
  618 X(1)=0.                                                           DDTB3210
      K=K1                                                              DDTB3215
      C1=SEG(5)-SLOPE                                                   DDTB3220
      B1=SEG(4)                                                         DDTB3230
      IF(DABS(SEG(3)).LT.Z1EM9) GO TO 699                               DDTB3231
  643 A1=SEG(3)                                                         DDTB3240
C                                                                       DDTB3250
C...  SOLVE THE QUADRATIC EQUATION FOR ROOTS                            DDTB3260
C                                                                       DDTB3270
  623 SQ=B1**2-4.0*A1*C1                                                DDTB3280
      IF(DABS(SQ)-Z1EM7) 624,624,625                                    DDTB3290
  624 X(2)=-B1/(Z2*A1)                                                  DDTB3300
C                                                                       DDTB3310
C...  K IS SET TO KEEP A RECORD OF THE NUMBER OF ROOTS                  DDTB3320
C...  OF THE QUADRATIC, 0=0 ROOTS, 2=1 ROOT, 3=2 ROOTS                  DDTB3330
C                                                                       DDTB3340
      K=K2                                                              DDTB3350
      GO TO 629                                                         DDTB3360
  625 IF(SQ)621,621,627                                                 DDTB3370
  621 K=K0                                                              DDTB3380
      GO TO 629                                                         DDTB3390
  627 SQ=-B1-DSIGN(DSQRT(SQ),B1)                                        DDTB3400
      X(2)=Z2*C1/SQ                                                     DDTB3410
      X(3)=  SQ/(Z2*A1)                                                 DDTB3420
      K=K3                                                              DDTB3430
  629 IF(J)614,631,631                                                  DDTB3440
C                                                                       DDTB3450
C...  REJECT ROOTS NOT IN SEGMENT AND UPDATE RECORDS                    DDTB3460
C                                                                       DDTB3470
  631 N=K1                                                              DDTB3480
  750 N=N+K1                                                            DDTB3490
      IF(N-K)751,751,752                                                DDTB3500
  751 IF(X(N).LT.-1.D-5) GO TO 750                                      DDTB3510
      IF(X(N).GT.1.D-5) GO TO 633                                       DDTB3512
      GO TO 634                                                         DDTB3514
  633 IF((X(N)-SQROOT).GT.1.D-5) GO TO 750                              DDTB3520
  634 X(J+1)=X(N)                                                       DDTB3530
      J=J+K1                                                            DDTB3540
      GO TO 750                                                         DDTB3550
  752 IF(J)1000,1000,48                                                 DDTB3560
C                                                                       DDTB3570
C...  TRUE CUBIC, PREPARE TO DETERMINE ROOT                             DDTB3580
C                                                                       DDTB3590
C...  DIFFERENTIATE CUBIC AND SOLVE FOR MAX AND MIN POINTS              DDTB3600
C                                                                       DDTB3610
  630 J=-K1                                                             DDTB3620
  620 A1=Z3*SEG(3)                                                      DDTB3630
      B1=Z2*SEG(4)                                                      DDTB3640
      C1=SEG(5)-SLOPE                                                   DDTB3650
      GO TO 623                                                         DDTB3660
C                                                                       DDTB3670
C...  ELIMINATE MAX AND MIN POINTS NOT IN THE SEGMENT                   DDTB3680
C                                                                       DDTB3690
  635 N=K1                                                              DDTB3700
  753 N=N+K1                                                            DDTB3710
      IF(N-K)754,754,1000                                               DDTB3720
  754 IF(X(N).GT.1.D-5) GO TO 637                                       DDTB3730
      GO TO 753                                                         DDTB3732
  637 IF((X(N)-SQROOT).GT.1.D-5) GO TO 753                              DDTB3740
C                                                                       DDTB3750
C...  LOOK FOR TANGENCY AND MULTIPLE INTERSECTION CASES                 DDTB3760
C                                                                       DDTB3770
  638 TEM(1)=CUBC1(X(N))                                                DDTB3780
      IF(DABS(TEM(1))-Z1EM5) 639,640,640                                DDTB3790
C                                                                       DDTB3800
C...  TANGENCY                                                          DDTB3810
C                                                                       DDTB3820
  639 X(1)=X(N)                                                         DDTB3830
      J=K1                                                              DDTB3840
      GO TO 48                                                          DDTB3850
  641 J=K1                                                              DDTB3860
  642 B1=SEG(3)*X(1)+SEG(4)                                             DDTB3870
      C1=B1*X(1)+SEG(5)-SLOPE                                           DDTB3880
      GO TO 643                                                         DDTB3890
C                                                                       DDTB3900
C...  IS THERE A POSSIBLE MULTIPLE INTERSECTION                         DDTB3910
C                                                                       DDTB3920
  640 IF(VINT*TEM(1)) 753,5041,5041                                     DDTB3930
C                                                                       DDTB3940
C...  CALCULATE VALUE OF X WHICH WILL ASSURE CONVERGENCE TO A ROOT      DDTB3950
C                                                                       DDTB3960
 5041 IF(K-K2)5090,5090,5050                                            DDTB3970
 5090 X(1)=Z5EM1*SQROOT                                                 DDTB3980
      GO TO 5100                                                        DDTB3990
 5050 DO 5060 J=1,2                                                     DDTB4000
 5060 TEM(J)=CUBC1(X(J+1))                                              DDTB4010
      IF(TEM(1)*TEM(2)) 5061,5062,5062                                  DDTB4020
 5061 X(1)=(X(2)+X(3))*Z5EM1                                            DDTB4030
      GO TO 5100                                                        DDTB4040
 5062 IF(DABS(TEM(1))-DABS(TEM(2))) 5063,5064,5064                      DDTB4050
 5063 X(1)=Z12EM1*X(3)-ZLIT1*X(2)                                       DDTB4060
      GO TO 5100                                                        DDTB4070
 5064 X(1)=Z12EM1*X(2)-ZLIT1*X(3)                                       DDTB4080
C                                                                       DDTB4090
C...  ITERATE FOR ROOT OF CUBIC                                         DDTB4100
C                                                                       DDTB4110
 5100 X(1)=DMIN1(DMAX1(X(1),Z0),SQROOT)                                 DDTB4120
      TEM(1)=Z3*SEG(3)                                                  DDTB4130
      TEM(2)=Z2*SEG(4)                                                  DDTB4140
      TEM(3)=SEG(5)-SLOPE                                               DDTB4150
      DO 5200 M=1,100                                                   DDTB4160
      TEM(4)=(TEM(1)*X(1)+ TEM(2))*X(1)+TEM(3)                          DDTB4170
      IF(DABS(TEM(4))-ZLIT2) 4008,4009,4009                             DDTB4180
 4008 X(1)=X(1)+Z1EM6                                                   DDTB4190
      GO TO 5200                                                        DDTB4200
 4009 TEM(4)=CUBC1(X(1))/TEM(4)                                         DDTB4210
C                                                                       DDTB4220
C...  ACCEPT ROOT WHEN CORRECTION TERM IS LESS THAN .000001*X           DDTB4230
C                                                                       DDTB4240
      IF(DABS(TEM(4)).LT.Z1EM6*DABS(X(1))) GO TO 5300                   DDTB4250
 5110 X(1)=X(1)-TEM(4)                                                  DDTB4260
 5200 CONTINUE                                                          DDTB4270
      CALL AERR (-28801,'DDTABC  ')                                     DDTB4280
      GO TO 1000                                                        DDTB4290
C                                                                       DDTB4300
C...  IF THE ROOT IS WITHIN THE SEGMENT,                                DDTB4310
C...  FACTOR OUT THE ROOT X,FOUND BY ITERATION, AND SOLVE               DDTB4320
C...  THE RESULTING QUADRATIC                                           DDTB4330
C                                                                       DDTB4340
 5300 IF(X(1)) 636,641,644                                              DDTB4350
  636 J = 0                                                             DDTB4360
      GO TO 642                                                         DDTB4370
  644 IF(X(1)-SQROOT) 641,641,636                                       DDTB4380
   48 DO 51 K=1,J                                                       DDTB4390
C                                                                       DDTB4400
C...  USING U COORD. OF INTERSECTION POINT,SOLVE CUBIC FOR V COORD.     DDTB4410
C                                                                       DDTB4420
      PARAM(3)=CUBIC(X(K))                                              DDTB4430
C                                                                       DDTB4440
C...  CALCULATE DIR. DIST. TO CUBIC AND TEST AGAINST PRESENT VALUE      DDTB4450
C                                                                       DDTB4460
      TEM(1)=DSQRT((X(K)-UPP)**2+(PARAM(3)-VPP)**2)                     DDTB4470
      IF(TEM(1)-DABS(S(IS))) 49,51,51                                   DDTB4480
   49 TEM(1)=DSIGN(TEM(1),(X(K)-UPP)     *UNN+(PARAM(3)-VPP)*VNN)       DDTB4490
      IF(IOP(IS)) 52,52,50                                              DDTB4500
   50 IF(TEM(1)) 51,52,52                                               DDTB4510
   52 S(IS)=TEM(1)                                                      DDTB4520
C                                                                       DDTB4530
C...  SAVE SUBSCRIPT OF U COORD. OF FIRST POINT OF SEGMENT              DDTB4540
C                                                                       DDTB4550
      ISEG=I                                                            DDTB4560
C                                                                       DDTB4570
C...  SAVE U COORD. OF SURFACE POINT                                    DDTB4580
C                                                                       DDTB4590
      SAVPAR(4)=X(K)                                                    DDTB4600
C                                                                       DDTB4610
C...  SAVE SINN AND COSS FOR SEGMENT AND V COORD. OF SURFACE POINT      DDTB4620
C                                                                       DDTB4630
      DO 53 N=1,3                                                       DDTB4640
   53 SAVPAR(N)=PARAM(N)                                                DDTB4650
      SAVC=SEG(5)                                                       DDTB4651
   51 CONTINUE                                                          DDTB4660
      IF (SUBFLG) GO TO 9000                                            DDTB4670
C                                                                       DDTB4680
C...  SET INDEX TO LOOK AT NEXT SEGMENT OR FIRST SEGMENT                DDTB4690
C                                                                       DDTB4700
 1000 IF (ICHECK) 2010,2020,2000                                        DDTB4710
 2000 I = I - K7                                                        DDTB4720
      GO TO 1001                                                        DDTB4730
 2010 I = I + K7                                                        DDTB4740
      GO TO 1001                                                        DDTB4750
 2020 I=I+K7*L*(K2*MOD(L,K2)-K1)                                        DDTB4760
      IF(I.LT.KLIT3) GOTO 2030                                          DDTB4770
      IF (I.LT.NWDS) GO TO 1001                                         DDTB4780
      ICHECK = 1                                                        DDTB4790
      I=I-K7*L-K7                                                       DDTB4800
      GO TO 1001                                                        DDTB4810
 2030 ICHECK = -1                                                       DDTB4820
      I=I+K7*L+K7                                                       DDTB4830
 1001 CONTINUE                                                          DDTB4840
      IF(DABS(S(IS))-Z1E38) 9000,1002,1002                              DDTB4850
C                                                                       DDTB4860
C...  CALCULATE SURFACE NORMAL IN U-V-W COORD. SYSTEM                   DDTB4870
C                                                                       DDTB4880
 9000 AARG1=(Z3*D(ISEG+2)*SAVPAR(4)+Z2*D(ISEG+3))*SAVPAR(4)+SAVC        DDTB4890
      AARG2 = DATAN(AARG1)                                              DDTB4900
      TEM(3) = Z0 - DSIN(AARG2)                                         DDTB4910
      TEM(5) =  DCOS(AARG2)                                             DDTB4920
      TEM(4) = TEM(3)*SAVPAR(2)-TEM(5)*SAVPAR(1)                        DDTB4930
      TEM(5) = TEM(3)*SAVPAR(1)+TEM(5)*SAVPAR(2)                        DDTB4935
C                                                                       DDTB4940
C...  TRANSFORM SURFACE POINT INTO U-V-W COORD. SYSTEM                  DDTB4950
C                                                                       DDTB4960
      PARAM(1)=SAVPAR(4)*SAVPAR(2)-SAVPAR(3)*SAVPAR(1)+D(ISEG)          DDTB4970
      PARAM(2)=SAVPAR(4)*SAVPAR(1)+SAVPAR(3)*SAVPAR(2)+D(ISEG+1)        DDTB4980
C                                                                       DDTB4990
C...  TRANSFORM SURFACE POINT AND NORMAL INTO X-Y-Z COORD. SYSTEM       DDTB5000
C                                                                       DDTB5010
      J=IS                                                              DDTB5020
      DO 9001 I = 1,3                                                   DDTB5030
      SPL(I,J)=SP(1,J)                                                  DDTB5040
      SNL(I,J)=SN(1,J)                                                  DDTB5050
      SP(I,J)=R0(I)*PARAM(1)+R0(I+3)*PARAM(2)+R0(I+6)*WP                DDTB5060
      TEM(I+7)=R0(I)*TEM(4)+R0(I+3)*TEM(5)                              DDTB5070
      SN(I,J)=TEM(I+7)                                                  DDTB5079
 9001 CONTINUE                                                          DDTB5080
C                                                                       DDTB5090
C...  SAVE SEGMENT INDEX                                                DDTB5100
C                                                                       DDTB5110
      D(13)=ISEG                                                        DDTB5120
      ISQLS=ISEQNO                                                      DDTB5121
      IITBSG(IIP)=ISEG                                                  DDTB5122
C                                                                       DDTB5130
C...  CALCULATE 3D DIRECTED DISTANCE                                    DDTB5140
C                                                                       DDTB5150
      S(IS)=DSIGN(DSQRT((SP(1,IS)-TP(1,IS))**2+(SP(2,IS)-TP(2,IS))**2+  DDTB5160
     1      (SP(3,IS)-TP(3,IS))**2),S(IS))                              DDTB5170
      ICOUNT = ICOUNT + 1                                               DDTB5180
   29 CONTINUE                                                          DDTB5190
      RETURN                                                            DDTB5191
C                                                                       DDTB5200
C...  UNABLE TO FIND DIRECTED DISTANCE                                  DDTB5210
C                                                                       DDTB5220
 1002 IER=K1                                                            DDTB5230
      GO TO 29                                                          DDTB5240
       END                                                              DDTB5250
**** SOURCE FILE : M0000893.W04   ***
*
C.....FORTRAN SUBROUTINE  ....DELTA          8/68                    HG DELT0001
C.....FORTRAN SUBROUTINE              DELTA...              3/27/68  GK DELT0002
      SUBROUTINE DELTA                                                  DELT0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DELT0011
C                                                                       DELT0050
      INCLUDE 'TOTAL.INC'                                               DELT0161
      INCLUDE 'DSHAR4.INC'                                              DELT0338
      INCLUDE 'FXCOR.INC'                                               DELT0604
      INCLUDE 'SV.INC'                                                  DELT0863
      INCLUDE 'ZNUMBR.INC'                                              DELT0947
      INCLUDE 'ISV.INC'                                                 DELT1080
      INCLUDE 'IFXCOR.INC'                                              DELT1220
      INCLUDE 'ISHR18.INC'                                              DELT1318
      INCLUDE 'KNUMBR.INC'                                              DELT1444
C                                                                       DELT1445
C...  21. ADDCOM BLOCK                                                  DELT1450
C                                                                       DELT1457
      COMMON/ADDCOM/ ADDCOM                                             DELT1464
      DIMENSION ADDCOM(25)                                              DELT1471
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            DELT1478
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN)               DELT1485
C                                                                       DELT1492
      INCLUDE 'CGOUG.INC'                                               DELT1502
      INCLUDE 'CHANG.INC'                                               DELT1504
C                                                                       DELT1680
      DATA ZLIT1,ZLIT3/1.D-4,4.D0/                                      DELT1687
C                                                                       DELT1690
      AAP=RC(IPS)                                                       DELT1700
      BAP=RC(IDS)                                                       DELT1710
      STAU1=TAU(IPS)                                                    DELT1720
      STAU2=TAU(IDS)                                                    DELT1730
      KAP=IS                                                            DELT1740
C        USE RC1   FOR PROPER UNITS/ IMPLEMENTATION                     DELT1745
      DPE = 1.D10*RC1/4500.D0                                           DELT1750
      DPI=DP                                                            DELT1760
      J=0                                                               DELT1770
      IF(JLIN-1)101,601,101                                             DELT1780
  601 TAU(IPS)=0.4*TAU(IPS)                                             DELT1790
      TAU (IDS)=0.4*TAU(IDS)                                            DELT1800
C1.2      DO FOR PART SURFACE FIRST                                     DELT1810
  101 IS=IPS                                                            DELT1820
  901 IF(IPL(IS)-1)501,500,501                                          DELT1830
  500 ZL=DSQRT((TE(1)-TEK(1))**2+(TE(2)-TEK(2))**2+(TE(3)-TEK(3))**2)   DELT1840
  570 DP = DPMAX                                                        DELT1850
      GO TO 303                                                         DELT1860
  501 IF(ISFTYP(IS)-3)503,502,503                                       DELT1870
  502 DO 504 I=1,3                                                      DELT1880
      P1(I)=TE(I)                                                       DELT1890
  504 P2(I)=TEK(I)                                                      DELT1900
      GO TO 401                                                         DELT1910
  503 IF(DABS(SN(1,IS)*TA(1)+SN(2,IS)*TA(2)+SN(3,IS)*TA(3))-ZLIT1) 506, DELT1920
     1   506,505                                                        DELT1921
  506 IF(DABS(SNK(1,IS)*TA(1)+SNK(2,IS)*TA(2)+SNK(3,IS)*TA(3))-ZLIT1)   DELT1930
     /     507,507,505                                                  DELT1940
  507 DO 509 I=1,3                                                      DELT1950
      P1(I) = TP(I,IS)                                                  DELT1970
  509 P2(I) = TPK(I,IS)                                                 DELT1980
      GO TO 401                                                         DELT1990
  505 IU=ITSEG(IS)                                                      DELT2000
      IV=ITSEGK(IS)                                                     DELT2010
      IF(TLINC(IU))508,510,508                                          DELT2020
  510 IF(IU-IV)508,512,508                                              DELT2030
  512 IF(U1K(1,IS)*U1(1,IS)+U1K(2,IS)*U1(2,IS)+U1K(3,IS)*U1(3,IS)-.01)  DELT2040
     1     508,513,513                                                  DELT2050
  513 DO 514 I=1,3                                                      DELT2060
      P1(I)=TE (I)+RI(IU)*U1(I,IS)+TLHITE(IU)*TA (I)                    DELT2080
  514 P2(I)=TEK(I)+RI(IV)*U1K(I,IS)+TLHITE(IV)*TAK(I)                   DELT2090
  401 PROD1=0.                                                          DELT2100
      PROD2=0.                                                          DELT2110
      DO 102 I=1,3                                                      DELT2120
      PROD1=PROD1+(P1(I)-TE(I))*TA(I)                                   DELT2130
  102 PROD2=PROD2+(P2(I)-TEK(I))*TAK(I)                                 DELT2140
      ZL=0.                                                             DELT2150
      DO 105 K=1,3                                                      DELT2160
      P1(K)=TE(K)+PROD1*TA(K)                                           DELT2170
      P2(K)=TEK(K)+PROD2*TAK(K)                                         DELT2180
  105 ZL=ZL+(P1(K)-P2(K))**2                                            DELT2190
      IF (J.EQ.0) THEN                                                  DELT2200
C1.4      FIND RC=RADIUS OF CURVATURE ALONG NORMAL AT P1                DELT2220
        CALL CCURV(IS,P1,P2,SN(1,IS))                                   DELT2230
      ELSE                                                              DELT2232
        CALL CCURV(IS,P1,P2,SNK(1,IS))                                  DELT2234
      ENDIF                                                             DELT2236
C                                                                       DELT2240
C...                IF APPARANT PLANE,USE LARGE RADIUS OF CURVATURE     DELT2250
C                                                                       DELT2260
      IF (ISIGCR(IS)-1) 301,1301,301                                    DELT2270
 1301 RC(IS) = DSIGN(RC1,RC(IS))                                        DELT2280
  301 D1=2.*DABS(RC(IS))                                                DELT2290
      GO TO 115                                                         DELT2300
  303 IF(IS-IPS)113,112,113                                             DELT2320
C1.7      STORE RESULTS IN D2A,ZL1, AND RETURN FOR LIKE CALC. FOR DS    DELT2330
  112 DPS=DP                                                            DELT2340
      ZLS=ZL                                                            DELT2350
      IS=IDS                                                            DELT2360
      GOTO 901                                                          DELT2370
C1.8        USE RESULTS OF SURFACE, PS OR DS, HAVING SMALLEST DP        DELT2390
  113 IF(DP-DPS) 516,516,114                                            DELT2400
C1.9      RESTORE PS RESULTS (MOST CONSERVATIVE AFTER ALL)              DELT2410
  114 DP=DPS                                                            DELT2420
      ZL=ZLS                                                            DELT2430
      GO TO 516                                                         DELT2440
  115 ZL=DSQRT(ZL)                                                      DELT2450
      DP=DSQRT(ZLIT3*TAU(IS)*DABS(D1-TAU(IS)))                          DELT2460
      GO TO 303                                                         DELT2470
C1.12     IF BEGINNING CUT VECTOR CANDIDATE BEING TESTED, STORE         DELT2490
C1.12    CURRENT RESULTS (BASED ON NORMALS AT TERMINUS OF CUT VECTOR)   DELT2500
C1.12    AND RETURN FOR CALCULATIONS BASED ON NORMALS AT ORIGIN OF      DELT2510
C1.12    CUT VECTOR                                                     DELT2520
  516 IF(J12-1) 116,117,119                                             DELT2530
  116 DPE=DP                                                            DELT2540
      ZL2=ZL                                                            DELT2550
      J=1                                                               DELT2560
      J12=1                                                             DELT2570
      GO TO 101                                                         DELT2580
C1.14     COMPARE CUT VECTOR LENGHTS BASED ON NORMALS AT ORIGIN AND     DELT2610
C1.14    TERMINUS OF CUT VECTOR.  IF BEGINNING CUT VECTOR CANDIDATE     DELT2620
C1.14    IS UNDER CONSIDERATION DPE IS TOO LARGE--TRANSFER TO C1.15     DELT2630
  117 J12=2                                                             DELT2640
      IF(DP-DPE) 119,119,118                                            DELT2645
C1.15     RESTORE RESULTS BASED ON NORMALS AT TERMINUS                  DELT2650
C1.15    OF CUT VECTOR CANDIDATE                                        DELT2660
  118 DP=DPE                                                            DELT2670
      ZL=ZL2                                                            DELT2680
C                                                                       DELT2690
C1.16     PRESERVE UNTRUNCATED DP FOR USE IN ANOTHER PROGRAM            DELT2700
  119 DPL=DP                                                            DELT2710
C                                                                       DELT2720
C2.1      TRUNCATE DP SO AS TO LIE BETWEEN TAU AND DPMAX                DELT2730
      IF(DP-DPMAX)122,125,121                                           DELT2740
  122 IF(DP-TAU(IS))124,125,125                                         DELT2750
  124 DP=TAU(IS)                                                        DELT2760
      GO TO 125                                                         DELT2770
  121 DP=DPMAX                                                          DELT2780
C                                                                       DELT2790
  125 IF(DP-ZL+TAU(IS))130,151,151                                      DELT2800
  155 IF(DP-.6*DPI+TAU(IS))129,127,127                                  DELT2810
C2.9      CUT VECTOR CANDIDATE MUCH TOO LONG.  REDUCE IT TO .6 OF ITS   DELT2820
C2.9     CURRENT VALUE, SUBMIT TO ONE MORE TEST AND EXIT FAILING        DELT2830
  129 DP=.6*DPI                                                         DELT2840
      GO TO 127                                                         DELT2850
  130 TEMP(1) = DP/ZL                                                   DELT2860
      IF(TEMP(1) - .6) 310,340,320                                      DELT2870
  310 TEMP(1) = .6                                                      DELT2880
  340 IF(DPI - DP) 350,360,360                                          DELT2890
  350 DP = DPI                                                          DELT2900
  360 DP = TEMP(1)*DP                                                   DELT2910
      GO TO 145                                                         DELT2920
  320 IF(.9 - TEMP(1)) 330,340,340                                      DELT2930
  330 TEMP(1) = .9                                                      DELT2940
      GO TO 340                                                         DELT2950
C2.14     REJECT CUT VECTOR CANDIDATE                                   DELT2970
  145 JDR=1                                                             DELT2980
C.... COULD BE ACCEPTED IF                                              DELT2981
C.... CUTTER HAS NOT MOVED SINCE LAST CALL TO CENTR                     DELT2982
      IF (JTENEU.EQ.1) GOTO 160                                         DELT2983
C.... CUT VECTOR LENGTH .LT. TAU                                        DELT2984
      IF (DPI.LT.TAU(IS)) GOTO 160                                      DELT2985
C.... OR CUT VECTOR .LT. 5*TAU AND .LT. HALF LAST ACCEPTED CUT VECTOR   DELT2986
      IF ((DPI.LT.(5.D0*TAU(IS))).AND.(DPI.LT.(.5D0*DPL))) GOTO 160     DELT2987
  201 IS=KAP                                                            DELT2990
      RC(IPS)=AAP                                                       DELT3000
      RC(IDS)=BAP                                                       DELT3010
      TAU(IPS)=STAU1                                                    DELT3020
      TAU(IDS)=STAU2                                                    DELT3030
      RETURN                                                            DELT3040
C                                                                       DELT3050
C                                                                       DELT3060
C         TENTATIVELY ACCEPT CUT VECTOR (MUST PASS GOUGCK YET)          DELT3070
C2.16     CUT DP DOWN TO 2DPI IF IT EXCEEDS THIS NO.  THIS PREVENTS     DELT3080
C2.16    WILD FLUCUATIONS OF THE DP CAUSED BY RAPID CHANGE              DELT3090
C2.16    IN SURFACE CURVATURE ALSO PRESENTS POINT SPACING               DELT3100
C2.16    TO POST PROCESSOR ADAPTABLE TO FEED RATES.                     DELT3110
  151 IF(DP-2.*DPI+TAU(IS))155,155,153                                  DELT3120
  153 DP=2.*DPI                                                         DELT3130
C                                                                       DELT3140
C                                                                       DELT3150
  127 IF(IGOUG)160,160,157                                              DELT3160
  157 CALL GOUGE                                                        DELT3170
C2.22     IF GOUGCK FAILS, REJECT CUT VECTOR AND REDUCE DP TO .75DP     DELT3180
      IF(JGR)159,160,159                                                DELT3190
  159 DP=.75*DPI                                                        DELT3200
      GO TO 145                                                         DELT3210
C                                                                       DELT3220
C2.23     ACCEPT CUT VECTOR CANDIDATE                                   DELT3230
  160 JDR=0                                                             DELT3240
      GO TO 201                                                         DELT3250
  508 ZL=(TP(1,IS)-TPK(1,IS))**2+(TP(2,IS)-TPK(2,IS))**2                DELT3260
     1   +(TP(3,IS)-TPK(3,IS))**2                                       DELT3270
      ZL =DSQRT (ZL)                                                    DELT3280
      IF (J.EQ.0) THEN                                                  DELT3290
        CALL CCURV(IS,SP(1,IS),SPK(1,IS),SN(1,IS))                      DELT3300
      ELSE                                                              DELT3301
        CALL CCURV(IS,SP(1,IS),SPK(1,IS),SNK(1,IS))                     DELT3302
      ENDIF                                                             DELT3303
C                                                                       DELT3310
C...                IF APPARANT PLANE, USE LARGE RADIUS OF CURVATURE    DELT3320
C                                                                       DELT3330
      IF (ISIGCR(IS)-1) 104,1104,104                                    DELT3340
 1104 RC(IS) = DSIGN(RC1,RC(IS))                                        DELT3350
  104 IF(RC(IS))106,107,107                                             DELT3360
  106 IF(JLIN-1)108,109,108                                             DELT3370
  108 RC(IS)=DABS(RC(IS)+TAU2(IS))-TH(IS)                               DELT3380
  110 D1=2.*DABS(RC(IS))                                                DELT3390
      GO TO 120                                                         DELT3400
  107 IF(JLIN-1)111,812,111                                             DELT3410
  111 RC(IS)=RC(IS)+TAU1(IS)+TH(IS)                                     DELT3420
      GO TO 110                                                         DELT3430
  812 RC(IS)=DABS(RC(IS))+.5*(TAU1(IS)+TAU2(IS))+TH(IS)                 DELT3440
      GO TO 110                                                         DELT3450
  109 RC(IS)=DABS(RC(IS))+.5*(TAU1(IS)+TAU2(IS))-TH(IS)                 DELT3460
      GO TO 110                                                         DELT3470
  120 F=1.-(DABS(SK(1,IS)-S(IS)))/(1.8*TAU(IS))                         DELT3480
      DP=DSQRT(ZLIT3*TAU(IS)*DABS(D1-TAU(IS)))                          DELT3490
      DP=F*DP                                                           DELT3500
      TEMP(4) = DSQRT((TE(1)-TEK(1))**2+(TE(2)-TEK(2))**2               DELT3510
     1          + (TE(3)-TEK(3))**2)                                    DELT3511
      GO TO 303                                                         DELT3520
       END                                                              DELT3530
**** SOURCE FILE : M0000894.V07   ***
*
C                                                                       DNTC0001
C.....FORTRAN SUBROUTINES        DNTCUT & DNTCUH  ...       3/1/68   GK DNTC0002
C                                                                       DNTC0003
      SUBROUTINE DNTCUT                                                 DNTC0010
C                                                                       DNTC0011
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DNTC0020
C                                                                       DNTC0030
C                                                                       DNTC0040
C                                                                       DNTC0050
C                                                                       DNTC0060
      INCLUDE 'TOTAL.INC'                                               DNTC0171
      INCLUDE 'IFXCOR.INC'                                              DNTC0334
      INCLUDE 'KNUMBR.INC'                                              DNTC0460
C                                                                       DNTC0461
      INTEGER IPPWRD(2),BCDF                                            DNTC0462
      CHARACTER*8 PPWORD                                                DNTC0470
C                                                                       DNTC0490
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            DNTC0495
C                                                                       DNTC0500
      DATA  PPWORD /'DNTCUT'/                                           DNTC0504
C                                                                       DNTC0506
C                                                                       DNTC0510
      IF(JHLDFG.EQ.0) GO TO 1                                           DNTC0511
      ITABH(ITHCNT)=7                                                   DNTC0512
      ITHCNT=ITHCNT+1                                                   DNTC0513
      RETURN                                                            DNTC0514
C                                                                       DNTC0515
    1 CONTINUE                                                          DNTC0516
C...  DONT OUTPUT CUTTER CENTERS ON CLTAPE                              DNTC0520
      IPPWRD(1)=BCDF(PPWORD(1:4))                                       DNTC0522
      IPPWRD(2)=BCDF(PPWORD(5:8))                                       DNTC0524
      CALL APT299(0,IPPWRD,0,0)                                         DNTC0535
      ICUT=K1                                                           DNTC0540
      RETURN                                                            DNTC0550
       END                                                              DNTC0560
C                                                                       DNTC0570
C                                                                       DNTC0580
C                                                                       DNTC0590
C                                                                       DNTC1001
C.....FORTRAN SUBROUTINE        DNTCUH...                3/1/68   GK    DNTC1002
C                                                                       DNTC1003
      SUBROUTINE DNTCUH                                                 DNTC1010
C                                                                       DNTC1011
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              DNTC1020
C                                                                       DNTC1030
C                                                                       DNTC1040
C                                                                       DNTC1050
C                                                                       DNTC1060
      INCLUDE 'TOTAL.INC'                                               DNTC1171
      INCLUDE 'IFXCOR.INC'                                              DNTC1334
      INCLUDE 'KNUMBR.INC'                                              DNTC1460
C                                                                       DNTC1461
      INTEGER IPPWRD(2),BCDF                                            DNTC1462
      CHARACTER*8 PPWORD                                                DNTC1470
C                                                                       DNTC1490
C                                                                       DNTC1500
      DATA  PPWORD /'DNTCUT'/                                           DNTC1504
C                                                                       DNTC1506
C                                                                       DNTC1510
C...  DONT OUTPUT CUTTER CENTERS ON CLTAPE                              DNTC1520
      IPPWRD(1)=BCDF(PPWORD(1:4))                                       DNTC1522
      IPPWRD(2)=BCDF(PPWORD(5:8))                                       DNTC1524
      CALL APT299(0,IPPWRD,0,0)                                         DNTC1535
      ICUT=K1                                                           DNTC1540
      RETURN                                                            DNTC1550
       END                                                              DNTC1560
**** SOURCE FILE : M0000904.V04   ***
*
C.....FORTRAN SUBROUTINE  ....FROM           8/68                 AR,PH FROM0001
C                                                                       FROM0002
      SUBROUTINE FROM(POINT)                                            FROM0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              FROM0020
C                                                                       FROM0030
C                                                                       FROM0040
C                                                                       FROM0050
C                                                                       FROM0060
      INCLUDE 'TOTAL.INC'                                               FROM0171
      INCLUDE 'FXCOR.INC'                                               FROM0446
      INCLUDE 'IFXCOR.INC'                                              FROM0586
      INCLUDE 'ISHR18.INC'                                              FROM0684
      INCLUDE 'KNUMBR.INC'                                              FROM0810
C                                                                       FROM0860
C                                                                       FROM0870
C                                                                       FROM0880
C                                                                       FROM0890
C...  THE PRESENT TOOL POSITION IS (POINT)                              FROM0900
      DIMENSION POINT(3)                                                FROM0910
      CHARACTER*4 HFROM                                                 FROM0916
      DATA HFROM/'FROM'/                                                FROM0920
      IAERR=0                                                           FROM0922
      IGOTO=0                                                           FROM0930
      CALL TRANSM(TEK,POINT,2,3,0)                                      FROM0940
      DO 10 J = 1,3                                                     FROM0950
   10 TE(J)=TEK(J)                                                      FROM0960
      CALL APT202(POINT,2)                                              FROM0965
C...  SET RECORD TYPE CODE FOR CLTAPE WRITER                            FROM0970
      MODFER=HFROM                                                      FROM0980
      CALL APT233                                                       FROM0990
      RETURN                                                            FROM1000
       END                                                              FROM1010
**** SOURCE FILE : M0000905.W01   ***
*
C.....FORTRAN SUBROUTINE             GAUSS...               4/1/68   GK GAUS0000
      SUBROUTINE GAUSS(VEC1,D1,VEC2,D2,VEC3,D3,PT,IR)                   GAUS0010
      IMPLICIT DOUBLE PRECISION(A-H), DOUBLE PRECISION(O-Z)             GAUS0011
      DIMENSION A(12),ASAV(4),PT(3),VEC1(3),D1(1),VEC2(3),D2(1),VEC3(3),GAUS0020
     1          D3(1),C(3)                                              GAUS0022
      DATA EPS/0.9999D0/,ONE/1.D0/,ZERO/0.D0/                           GAUS0023
                                                                        GAUS0024
C.... CHECK FOR ANY TWO INPUT VECTORS BEING PARALLEL                    GAUS0025
C                                                                       GAUS0026
      CALL DOTF(ERG1,VEC1,VEC2)                                         GAUS0027
      CALL DOTF(ERG2,VEC1,VEC3)                                         GAUS0028
      CALL DOTF(ERG3,VEC2,VEC3)                                         GAUS0029
      IF (ABS(ERG1).GT.EPS) THEN                                        GAUS0030
        IR=12                                                           GAUS0031
        IF (ERG1.LT.ZERO) IR=-12                                        GAUS0032
      ELSE IF (ABS(ERG2).GT.EPS) THEN                                   GAUS0033
        IR=13                                                           GAUS0034
        IF (ERG2.LT.ZERO) IR=-13                                        GAUS0035
      ELSE IF (ABS(ERG3).GT.EPS) THEN                                   GAUS0036
        IR=23                                                           GAUS0037
        IF (ERG3.LT.ZERO) IR=-23                                        GAUS0038
      ELSE                                                              GAUS0039
      DO 7 I = 1,3                                                      GAUS0040
      A(I) = VEC1(I)                                                    GAUS0050
      A(I+4) = VEC2(I)                                                  GAUS0060
    7 A(I+8) = VEC3(I)                                                  GAUS0070
      A(4) = D1(1)                                                      GAUS0080
      A(8) = D2(1)                                                      GAUS0090
      A(12) = D3(1)                                                     GAUS0100
      Q = 0.                                                            GAUS0110
      DO 2 I = 1,3                                                      GAUS0120
      C(I) =DABS(A(4*I-3))                                              GAUS0130
      Q = Q + C(I)                                                      GAUS0140
    2 CONTINUE                                                          GAUS0150
      IF (Q) 2000,2000,3                                                GAUS0160
    3 IF (C(2) - C(1)) 30,30,40                                         GAUS0170
   30 IF (C(3) - C(1)) 70,70,50                                         GAUS0180
   40 IF (C(3) - C(2)) 60,60,50                                         GAUS0190
   50 JMAX = 3                                                          GAUS0200
      GO TO 65                                                          GAUS0210
   60 JMAX = 2                                                          GAUS0220
   65 K = 2**JMAX                                                       GAUS0230
      DO 66 I = 1,4                                                     GAUS0240
      M = I + K                                                         GAUS0250
      ASAV(I) = A(I)                                                    GAUS0260
      A(I) = A(M)                                                       GAUS0270
      A(M) = ASAV(I)                                                    GAUS0280
   66 CONTINUE                                                          GAUS0290
   70 COE5 =A(5)/A(1)                                                   GAUS0300
      COE9 =A(9)/A(1)                                                   GAUS0310
      DO 75 J = 2,4                                                     GAUS0320
      A(J+4) = A(J+4) - COE5*A(J)                                       GAUS0330
      A(J+8) = A(J+8) - COE9*A(J)                                       GAUS0340
   75 CONTINUE                                                          GAUS0350
      C(2) =DABS(A(6))                                                  GAUS0360
      C(3) =DABS(A(10))                                                 GAUS0370
      IF (C(2)+C(3)) 2000,2000,80                                       GAUS0380
   80 IF (C(2)-C(3)) 90,100,100                                         GAUS0390
   90 DO 95 J = 1,4                                                     GAUS0400
      ASAV(J) = A(J+4)                                                  GAUS0410
      A(J+4) = A(J+8)                                                   GAUS0420
      A(J+8) = ASAV(J)                                                  GAUS0430
   95 CONTINUE                                                          GAUS0440
  100 COE10 = A(10)/A(6)                                                GAUS0450
      DO 105 J = 3,4                                                    GAUS0460
  105 A(J+8) = A(J+8) - A(J+4)*COE10                                    GAUS0470
      IF (A(11)) 1050,2000,1050                                         GAUS0480
 1050 PT(3) = A(12)/A(11)                                               GAUS0490
      PT(2) = (A(8)-A(7)*PT(3))/A(6)                                    GAUS0500
      PT(1) = (A(4)-A(3)*PT(3)-A(2)*PT(2))/A(1)                         GAUS0510
      GO TO 2010                                                        GAUS0520
 2000 IR = 1                                                            GAUS0530
      GO TO 2020                                                        GAUS0540
 2010 IR = 0                                                            GAUS0550
      ENDIF                                                             GAUS0555
 2020 RETURN                                                            GAUS0560
      END                                                               GAUS0570
**** SOURCE FILE : M0002768.V08   ***
*
C...  FORTRAN SUBROUTINE     GO2                                        GO200000
      SUBROUTINE GO2(HMOD,ADRESS)                                       GO200010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              GO200020
C                                                                       GO200030
C                                                                       GO200040
C                                                                       GO200050
C                                                                       GO200060
      CHARACTER*2 HGO                                                   GO200070
      DIMENSION ADRESS(*)                                               GO200100
C                                                                       GO200190
      INCLUDE 'TOTAL.INC'                                               GO200191
      INCLUDE 'DSHAR4.INC'                                              GO200518
      INCLUDE 'FXCOR.INC'                                               GO200784
      INCLUDE 'HOLRTH.INC'                                              GO200840
      INCLUDE 'SV.INC'                                                  GO201106
      INCLUDE 'ZNUMBR.INC'                                              GO201190
      INCLUDE 'LDEF.INC'                                                GO201218
      INCLUDE 'ISV.INC'                                                 GO201358
      INCLUDE 'IFXCOR.INC'                                              GO201498
      INCLUDE 'ISHR18.INC'                                              GO201596
      INCLUDE 'KNUMBR.INC'                                              GO201722
C                                                                       GO201840
      COMMON/ADDCOM/ADDCOM                                              GO201842
      DIMENSION ADDCOM(25)                                              GO201843
      EQUIVALENCE (ADDCOM( 1),ELMAX ),                                  GO201844
     2            (ADDCOM(25),KDYNFL)                                   GO201845
C                                                                       GO201846
C                                                                       GO201850
C                                                                       GO201870
C                                                                       GO201880
      INCLUDE 'BLANKCOM.INC'                                            GO201890
C                                                                       GO201900
      DIMENSION CANSAV(4)                                               GO201905
C                                                                       GO201909
      DATA  HGO /'GO'/                                                  GO201910
      DATA ZLIT1,ZLIT2,KLIT3/.0001D0,.9999D0,21/                        GO201911
C                                                                       GO201912
      ICNSAV=K0                                                         GO201913
      ZL=Z1                                                             GO201914
C                                                                       GO201920
C                 SET IAFL FLAG                                         GO201921
C                                                                       GO201922
      NUMDIM = 0                                                        GO201930
      JCS = .FALSE.                                                     GO201940
      IF(IGOTO.EQ.K0)GO TO 1                                            GO201950
      IF(ISRCH.NE.K0)GO TO 9600                                         GO201960
  502 CALL AERR (20202,'GO2     ')                                      GO201990
      GO TO 9100                                                        GO202000
    1 IF(ICSCNT-K1)1101,1101,1102                                       GO202020
 1102 CALL AERR (20203,'GO2     ')                                      GO202030
      GO TO 9100                                                        GO202040
 1101 ISTRUP=K1                                                         GO202050
      DP=-1.0                                                           GO202051
      JENT(IPS) = K1                                                    GO202052
      JENT(IDS) = K1                                                    GO202054
      IS=IDS                                                            GO202060
      CALL APT234 (HMOD,ADRESS)                                         GO202070
      IF(IAERR)503,503,9100                                             GO202090
  503 TEK(1) = TE(1)                                                    GO202100
      TEK(2)=TE(2)                                                      GO202110
      TEK(3)=TE(3)                                                      GO202120
      XDIR = K1                                                         GO202125
      IF (KDYNFL.NE.K0) CALL APT238(41)                                 GO202130
 1000 IF(INOPS)6,6,2                                                    GO202140
    2 IF(ICSCNT)3,3,1020                                                GO202150
    3 NGOSRF=K1                                                         GO202160
      GO TO 7                                                           GO202170
 1020 CALL AERR (20204,'GO2     ')                                      GO202180
      GO TO 9100                                                        GO202190
    6 NGOSRF=ICSCNT+K2                                                  GO202200
    7 MODFER=HGO                                                        GO202210
      CALL APT235                                                       GO202220
      IF(IAERR.GT.K0)GO TO 9100                                         GO202230
      IF(INOPS.NE.K1)GO TO 1610                                         GO202232
      DO 1605 I=1,4                                                     GO202234
 1605 CANSAV(I)=CANON(I)                                                GO202235
      ICNSAV=K1                                                         GO202236
 1610 CALL APT240(NUMDIM)                                               GO202238
      ID=0                                                              GO202240
 1070 IA = K1                                                           GO202250
      IB=K1                                                             GO202260
      TEM1=Z0                                                           GO202270
 1080 ID=ID+K1                                                          GO202280
 1090 IF(NGOSRF-ID)1300,1100,1100                                       GO202290
 1100 IF(ID-K2)1110,1120,1130                                           GO202300
 1110 IS = IDS                                                          GO202310
      GO TO 1140                                                        GO202320
 1120 IS = IPS                                                          GO202330
      GO TO 1140                                                        GO202340
 1130 IS = ICS                                                          GO202350
1140  IF(INDIR(IS).EQ.0.AND.ISFIDN(IS).NE.12)GO TO 1160                 GO202360
 1150 IA=IA+K1                                                          GO202370
      IF (KDYNFL.NE.K0) CALL APT238(42)                                 GO202380
      GO TO 1080                                                        GO202390
 1160 CONTINUE                                                          GO202400
      IF (KDYNFL.NE.K0) CALL APT238(43)                                 GO202410
 1161 IF(ISVFL(IS))9000,1180,1170                                       GO202420
 1170 TI(1) = SFVCT(1,IS)                                               GO202430
      TI(2) = SFVCT(2,IS)                                               GO202440
      TI(3) = SFVCT(3,IS)                                               GO202450
      IF(IS.EQ.ICS) GO TO 1173                                          GO202460
      ISSTO=IS                                                          GO202470
      IS=ICS+1                                                          GO202480
        CALL SVCOPY(ISSTO,IS)                                           GO202485
        CALL ISVCPY(ISSTO,IS)                                           GO202487
 1173 TN(1,IS)=SFVCT(1,IS)                                              GO202540
      TN(2,IS) = SFVCT(2,IS)                                            GO202550
      TN(3,IS) = SFVCT(3,IS)                                            GO202560
      J20(IS)=0                                                         GO202570
      J23(IS)=K1                                                        GO202580
      DP=0.0                                                            GO202581
      ISTRUP=2                                                          GO202582
      CALL CHECK                                                        GO202590
      IF(IAERR)9100,100,9100                                            GO202600
  100 IF(IS.EQ.ICS) GO TO 1175                                          GO202610
        CALL SVCOPY(IS,ISSTO)                                           GO202615
        CALL ISVCPY(IS,ISSTO)                                           GO202617
      IS=ISSTO                                                          GO202670
      IF(TEM3)1240,1210,1240                                            GO202680
 1175 IF(CSD(IS)) 1239,1210,1239                                        GO202681
 1180 IF (IS.EQ.IPS) GO TO 1181                                         GO202682
      IF(INDIR(IDS).EQ.1) GO TO 1182                                    GO202684
      IF(INDIR(ICS).EQ.1) GO TO 1183                                    GO202686
      TN(1,IS)=Z1                                                       GO202688
      TN(2,IS)=Z0                                                       GO202690
      TN(3,IS)=Z0                                                       GO202692
      GO TO 1190                                                        GO202694
 1181 TN(1,IS)=-TA(1)                                                   GO202696
      TN(2,IS)=-TA(2)                                                   GO202698
      TN(3,IS)=-TA(3)                                                   GO202700
      GO TO 1190                                                        GO202702
 1182 K=IDS                                                             GO202704
      GO TO 1184                                                        GO202706
 1183 K=ICS                                                             GO202708
 1184 TN(1,IS)=VNDIR(1,K)                                               GO202710
      TN(2,IS)=VNDIR(2,K)                                               GO202715
      TN(3,IS)=VNDIR(3,K)                                               GO202720
 1190 IOPSET(IS)=0                                                      GO202730
      JENT(IS)=K1                                                       GO202740
      JTN(IS)=0                                                         GO202750
      JU1(IS)=K1                                                        GO202760
      JIOPS(IS)=0                                                       GO202770
      JMINR=K1                                                          GO202772
 1200 CALL AMIND                                                        GO202780
      JMINR=K0                                                          GO202782
      IF(IAERR)9100,1210,9100                                           GO202790
 1210 TEM3=DABS(S(IS))                                                  GO202800
      IF (KDYNFL.NE.K0) CALL APT238(K44)                                GO202810
      GO TO 1240                                                        GO202820
 1239 TEM3=CSD(IS)                                                      GO202830
 1240 IF(TEM1  -DABS(S(IS))) 1250,1250,1260                             GO202840
 1250 TEM1=DABS(S(IS))                                                  GO202850
 1260 GO TO (1080,1310,1270), IB                                        GO202860
 1270 IB=K2                                                             GO202870
      GO TO 1500                                                        GO202880
 1300 ID=0                                                              GO202890
      IB=K2                                                             GO202900
 1310 IA=IA-K1                                                          GO202910
 1320 IF (IA) 9000,2000,1330                                            GO202920
 1330 ID=ID+K1                                                          GO202930
 1340 IF(NGOSRF-ID)9000,1350,1350                                       GO202940
 1350 IF(ID-K2)1360,1370,1380                                           GO202950
 1360 IS = IDS                                                          GO202960
      GO TO 1390                                                        GO202970
 1370 IS = IPS                                                          GO202980
      GO TO 1390                                                        GO202990
 1380 IS = ICS                                                          GO203000
 1390 IF(INDIR(IS)) 9000,1391,1400                                      GO203010
 1391 IF(ISFIDN(IS).NE.12) GO TO 1330                                   GO203011
      VNDIR(1,IS)=Z0                                                    GO203012
      VNDIR(2,IS)=Z0                                                    GO203013
      VNDIR(3,IS)=Z0                                                    GO203014
 1400 DO 1420 K=1,3                                                     GO203020
      TP(  K,IS  )=TE(K)+Z5EM1*CUTDAT(7)*TA(K)+TH(IS)*VNDIR(K,IS)       GO203040
 1420 TN( K,IS   )=VNDIR(K,IS)                                          GO203050
      IOP(IS)=K1                                                        GO203060
      IF(ISFIDN(IS).EQ.12.AND.INDIR(IS).EQ.0) IOP(IS)=K2                GO203061
      CALL DDST                                                         GO203070
      IOP(IS)=K1                                                        GO203073
      IF(IER)1410,1430,1410                                             GO203080
 1410 IB=K3                                                             GO203090
      GO TO 1160                                                        GO203100
 1430 TEM2=S(IS)                                                        GO203110
      IF(ISFTYP(IS)-K3)1445,1440,1445                                   GO203120
 1445 TEM2=TEM2-CUTDAT(1)                                               GO203121
 1440 ISSV=IS                                                           GO203122
      DO 1431 I=1,3                                                     GO203123
C          CHECK FOR ALL SURFACE                                        GO203124
      IF(I.EQ.1) IS=IDS                                                 GO203125
      IF(I.EQ.2) IS=IPS                                                 GO203126
      IF(I.EQ.3.AND.ICSCNT.EQ.0) GO TO 1431                             GO203127
      IF(I.EQ.3) IS=ICS                                                 GO203128
C    IF ALREADY CHECKED SKIP                                            GO203129
 1435 IF(IS.EQ.ISSV) GO TO 1431                                         GO203130
      TEMP(1)=TN(1,IS)                                                  GO203131
      TEMP(2)=TN(2,IS)                                                  GO203132
      TEMP(3)=TN(3,IS)                                                  GO203133
      TEMP(7)=TP(1,IS)                                                  GO203137
      TEMP(8)=TP(2,IS)                                                  GO203138
      TEMP(9)=TP(3,IS)                                                  GO203139
      DO 1436 K=1,3                                                     GO203141
      TP(K,IS)=TE(K)+Z5EM1*CUTDAT(7)*TA(K)+TH(IS)*VNDIR(K,ISSV)         GO203144
 1436 TN(K,IS)=VNDIR(K,ISSV)                                            GO203145
      IOP(IS)=K1                                                        GO203146
      CALL DDST                                                         GO203147
      IF(IER.EQ.1) GO TO 1438                                           GO203148
      TEM3=S(IS)                                                        GO203149
      IF(ISFTYP(IS).NE.K3) TEM3=TEM3-CUTDAT(1)                          GO203150
      IF(TEM3.LT.0.00000001) GO TO 1438                                 GO203151
      IF(TEM3.LT.TEM2) TEM2=TEM3                                        GO203152
 1438 TN(1,IS)=TEMP(1)                                                  GO203153
      TN(2,IS)=TEMP(2)                                                  GO203154
      TN(3,IS)=TEMP(3)                                                  GO203155
      TP(1,IS)=TEMP(7)                                                  GO203158
      TP(2,IS)=TEMP(8)                                                  GO203159
      TP(3,IS)=TEMP(9)                                                  GO203160
 1431 CONTINUE                                                          GO203162
      IS=ISSV                                                           GO203163
      TEMP(5)=TEM2-TAU(IS)                                              GO203164
      TE(1)=TE(1)+TEMP(5)*VNDIR(1,IS)                                   GO203165
      TE(2)=TE(2)+TEMP(5)*VNDIR(2,IS)                                   GO203166
      TE(3)=TE(3)+TEMP(5)*VNDIR(3,IS)                                   GO203170
      IF(INDIR(ICS).EQ.1.OR.ISVFL(ICS).EQ.1.OR.ICSCNT.EQ.0) GO TO 1160  GO203171
      JENT(ICS)=1                                                       GO203172
      JMINR=1                                                           GO203173
      ISSSV=IS                                                          GO203174
      IS=ICS                                                            GO203175
      CALL AMIND                                                        GO203176
      JMINR=0                                                           GO203177
      IS=ISSSV                                                          GO203178
      GOTO 1160                                                         GO203180
 1500 IF(TEM3-TEM1)1510,1510,1520                                       GO203190
C              USE SMALLEST MINIMUM DIST WHICH IS                       GO203192
C              GREATER THAN TWO TOLERANCES                              GO203194
 1510 TEM2 = TEM1                                                       GO203196
      DO 1501 III = IPS,ICS,LSV                                         GO203198
      IF(ISVFL(III).EQ.0) GO TO 1501                                    GO203199
      IF (CSD(III) - Z2*TAU(IS)) 1501,1501,1502                         GO203200
 1502 TEM2 = DMIN1 (TEM2,CSD(III))                                      GO203202
 1501 CONTINUE                                                          GO203204
      GO TO 1440                                                        GO203206
 1511 TEM2 = TEM1                                                       GO203208
      GO TO 1440                                                        GO203210
 1520 IF (TEM3-Z10) 1530,1511,1511                                      GO203220
 1530 TEM2=TEM3                                                         GO203230
      GO TO 1440                                                        GO203240
 2000 IF(NGOSRF-K2)2010,3000,3120                                       GO203250
 2010 IF (INDIR(IDS)) 9000,2030,2020                                    GO203260
 2020 DIR(1) = VNDIR(1,IDS)                                             GO203270
      DIR(2) = VNDIR(2,IDS)                                             GO203280
      DIR(3) = VNDIR(3,IDS)                                             GO203290
      GO TO 2040                                                        GO203300
 2030 DIR(1) = TN(1,IDS)                                                GO203310
      DIR(2) = TN(2,IDS)                                                GO203320
      DIR(3) = TN(3,IDS)                                                GO203330
 2040 IF ( DABS(DIR(3))-ZLIT1) 2050,2050,2060                           GO203332
 2050 PLNV(1,ICS) = DIR(2)                                              GO203335
      PLNV(2,ICS) = -DIR(1)                                             GO203340
      PLNV(3,ICS) = Z0                                                  GO203345
      GO TO 2090                                                        GO203350
 2060 IF ( DABS(DIR(2))-ZLIT1) 2070,2070,2080                           GO203355
 2070 PLNV(1,ICS) = DIR(3)                                              GO203360
      PLNV(2,ICS) = Z0                                                  GO203365
      PLNV(3,ICS) = -DIR(1)                                             GO203370
      GO TO 2090                                                        GO203375
 2080 IF(DABS(DIR(1))-ZLIT1) 2085,2085,2087                             GO203380
 2085 PLNV(1,ICS) = Z0                                                  GO203390
      PLNV(2,ICS) = DIR(3)                                              GO203400
      PLNV(3,ICS) = -DIR(2)                                             GO203410
      GO TO 2090                                                        GO203420
 2087 IF (DABS(DIR(2))-DABS(DIR(3))) 2070,2070,2050                     GO203430
 2090 CALL VNORM (PLNV(1,ICS),PLNV(1,ICS))                              GO203440
      CALL CROSS(DIR(1),PLNV(1,ICS),PLNV(1,IPS))                        GO203442
      CALL VNORM (PLNV(1,IPS),PLNV(1,IPS))                              GO203443
 2110 PLND(IPS)=PLNV(1,IPS)*TEK(1)+PLNV(2,IPS)*TEK(2)+PLNV(3,IPS)*TEK(3)GO203450
      PLND(ICS)=PLNV(1,ICS)*TEK(1)+PLNV(2,ICS)*TEK(2)+PLNV(3,ICS)*TEK(3)GO203460
 2120 ICANON(IPS)=K1                                                    GO203470
      ISFIDN(IPS)=K2                                                    GO203480
      ISFTYP(IPS)=K3                                                    GO203490
      ITLON(IPS)=0                                                      GO203500
      CANON(1)=PLNV(1,IPS)                                              GO203510
      CANON(2)=PLNV(2,IPS)                                              GO203520
      CANON(3)=PLNV(3,IPS)                                              GO203530
      CANON(4)=PLND(IPS)                                                GO203540
      IPL(IPS)=K1                                                       GO203550
      IUNFL(IPS)=K1                                                     GO203560
      JENT(IPS)=K1                                                      GO203570
      JTN(IPS)=0                                                        GO203580
      IOPSET(IPS)=0                                                     GO203590
      JU1(IPS)=K1                                                       GO203600
      JIOPS(IPS)=0                                                      GO203610
      TN(1,IPS)=PLNV(1,IPS)                                             GO203620
      TN(2,IPS)=PLNV(2,IPS)                                             GO203630
      TN(3,IPS)=PLNV(3,IPS)                                             GO203640
      PAST(IPS)=Z1                                                      GO203650
      GO TO 3110                                                        GO203660
 3000 IF (INDIR(IDS)) 9000,3030,3010                                    GO203860
 3010 IF (INDIR(IPS)) 9000,3050,3020                                    GO203870
 3020 J50(ICS)=0                                                        GO203880
      J51(ICS)=0                                                        GO203890
      IS=ICS                                                            GO203900
      CALL CENTR                                                        GO203910
      IF(IAERR)9100,101,9100                                            GO203930
  101 IF (JCR) 3152,9999,3152                                           GO203940
 3030 IF (INDIR(IPS)) 9000,3020,3040                                    GO203950
 3040 IS = IPS                                                          GO203960
      GO TO 3060                                                        GO203970
 3050 IS = IDS                                                          GO203980
 3060 DIR(1) = VNDIR(1,IS)                                              GO203990
      DIR(2) = VNDIR(2,IS)                                              GO204000
      DIR(3) = VNDIR(3,IS)                                              GO204010
      IF(DABS(TN(1,IPS)*TN(1,IDS)+TN(2,IPS)*TN(2,IDS)+TN(3,IPS)*        GO204015
     C TN(3,IDS)).GT.ZLIT1) GO TO 3020                                  GO204016
      CALL CROSS(TN(1,IPS),TN(1,IDS),PLNV(1,ICS))                       GO204020
      CALL VNORM(PLNV(1,ICS),PLNV(1,ICS))                               GO204030
      IF (IER) 3020,3065,3020                                           GO204040
 3065 CALL CROSS(PLNV(1,ICS),DIR,PLNV(1,ICS))                           GO204050
      CALL VNORM(PLNV(1,ICS),PLNV(1,ICS))                               GO204060
      IF(IER) 3020,3070,3020                                            GO204070
 3070 CALL CROSS(PLNV(1,ICS),DIR,PLNV(1,ICS))                           GO204080
 3080 CALL VNORM (PLNV(1,ICS),PLNV(1,ICS))                              GO204090
 3090 IF(IER)3020,4100,3020                                             GO204100
 4100 IF(IPL(IPS))4107,4105,4107                                        GO204110
 4105 IF(IPL(IDS))4108,3020,4108                                        GO204120
 4107 K=IPS                                                             GO204130
      GO TO 4109                                                        GO204140
 4108 K=IDS                                                             GO204150
 4109 IC=ICANON(K)                                                      GO204160
      IF(DABS(PLNV(1,ICS)*CANON(IC)+PLNV(2,ICS)*CANON(IC+1)+            GO204170
     1PLNV(3,ICS)*CANON(IC+2))-ZLIT2)3100,3100,3020                     GO204180
 3100 PLND(ICS)=PLNV(1,ICS)*TEK(1)+PLNV(2,ICS)*TEK(2)+PLNV(3,ICS)*TEK(3)GO204190
 3110 ICANON(ICS) = KLIT3                                               GO204200
      ISFIDN(ICS)=K1                                                    GO204210
      CANON(21)=PLNV(1,ICS)                                             GO204220
      CANON(22)=PLNV(2,ICS)                                             GO204230
      CANON(23)=PLNV(3,ICS)                                             GO204240
      CANON(24)=PLND(ICS)                                               GO204250
      ISFTYP(ICS)=K3                                                    GO204260
      ITLON(ICS)=0                                                      GO204270
      IUNFL(ICS)=K1                                                     GO204280
      IPL(ICS)=K1                                                       GO204290
      JENT(ICS)=K1                                                      GO204300
      JTN(ICS)=0                                                        GO204310
      IOPSET(ICS)=0                                                     GO204320
      JU1(ICS)=K1                                                       GO204330
      TN(1,ICS)=PLNV(1,ICS)                                             GO204340
      TN(2,ICS)=PLNV(2,ICS)                                             GO204350
      TN(3,ICS)=PLNV(3,ICS)                                             GO204360
      JIOPS(ICS)=0                                                      GO204370
      PAST(ICS)=Z1                                                      GO204380
      IAFL(ICS)=KM1                                                     GO204390
      ICSCNT=K1                                                         GO204400
 3120 J50(ICS)=K1                                                       GO204410
      J51(ICS)=K1                                                       GO204420
 3130 IS=ICS                                                            GO204430
 3140 CALL CENTR                                                        GO204440
      IF(IAERR)9100,102,9100                                            GO204460
  102 IF (JCR-K1) 3141,9999,3141                                        GO204470
 3141 IF (NUMSUR-K3) 3020,3150,3150                                     GO204475
C         TRY MOVING TO PS AND DS FIRST                                 GO204476
 3150 IF (XDIR) 3152,3152,3151                                          GO204478
 3151 XDIR = KM1                                                        GO204480
      J50(IS) = 0                                                       GO204482
      J51(IS) = 0                                                       GO204484
      IS = ICS                                                          GO204485
      CALL CENTR                                                        GO204486
      IF(JCR) 3152,1070,3152                                            GO204487
 3152 CALL AERR (20205,'GO2     ')                                      GO204488
      GO TO 9100                                                        GO204490
 9000 CALL AERR (20206,'GO2     ')                                      GO204500
      GO TO 9100                                                        GO204510
 9999 ICL=K3                                                            GO204520
      CALL ATAPE                                                        GO204530
      IF(IAERR)9100,103,9100                                            GO204540
  103 IF (KDYNFL.NE.K0) CALL APT238(45)                                 GO204550
      GO TO 9500                                                        GO204560
 9100 CALL APT236                                                       GO204570
      GO TO 9900                                                        GO204575
 9500 CALL APT236                                                       GO204580
      ISTRUP=0                                                          GO204590
      IF(ISFTYP(IPS).NE.K2) GO TO 9550                                  GO204600
      ISFTYP(IPS)=K1                                                    GO204610
      PAST(IPS)=Z1                                                      GO204620
 9550 IF (ISFTYP(IDS).NE.K2) GO TO 9600                                 GO204630
      ISFTYP(IDS)=K1                                                    GO204640
      PAST(IDS)=Z1                                                      GO204650
 9600 CONTINUE                                                          GO204660
      DO 4112 K = 1,3                                                   GO204661
      TEMP(K) = TE(K) - TEK(K)                                          GO204662
      TPK(K,IPS) = TP(K,IPS)                                            GO204664
      SPK(K,IPS) = SP(K,IPS)                                            GO204665
      U1K(K,IPS) = U1(K,IPS)                                            GO204666
      SNK(K,IPS) = SN(K,IPS)                                            GO204667
 4112 CONTINUE                                                          GO204668
      SK(1,IPS) = S(IPS)                                                GO204669
C                                                                       GO204670
 9900 IF(ICNSAV.NE.K1)GO TO 9990                                        GO204675
      DO 9910 I=1,4                                                     GO204680
 9910 CANON(I)=CANSAV(I)                                                GO204682
 9990 RETURN                                                            GO204685
      END                                                               GO204690
**** SOURCE FILE : M0002750.V06   ***
*
C                                                                       GODL0001
C.....FORTRAN SUBROUTINE             GODLTA...              3/1/68   GK GODL0002
      SUBROUTINE GODLTA(VECTOR,DECMAL)                                  GODL0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              GODL0020
C                                                                       GODL0030
C                                                                       GODL0040
C                                                                       GODL0050
C                                                                       GODL0060
      INCLUDE 'TOTAL.INC'                                               GODL0171
      INCLUDE 'FXCOR.INC'                                               GODL0199
      INCLUDE 'LDEF.INC'                                                GODL0446
      INCLUDE 'IFXCOR.INC'                                              GODL0586
      INCLUDE 'ISHR18.INC'                                              GODL0684
      INCLUDE 'KNUMBR.INC'                                              GODL0810
C                                                                       GODL0860
C                                                                       GODL0870
C     25.   COMMON FOR AERR INFORMATION                                 GODL0875
C                                                                       GODL0876
      COMMON /AERCOM / IAERFG                                           GODL0877
C                                                                       GODL0878
C     23. DSNAME BLOCK                                                  GODL0879
C                                                                       GODL0880
      COMMON/DSNAME/DSNAME,NAMSUB                                       GODL0881
C                                                                       GODL0882
      DIMENSION TASAV(3)                                                GODL0885
      DIMENSION VEC(3)                                                  GODL0886
      INTEGER ITEMP(2),BCDF                                             GODL0887
      EQUIVALENCE (ATEMP,ITEMP(1))                                      GODL0888
C                                                                       GODL0890
C...  CUTTER POSITION IS ADVANCED BY THE VECTOR, OR IS MOVED            GODL0900
C...  (DECMAL) INCHES ALONG THE TOOL AXIS                               GODL0910
      DIMENSION VECTOR(3)                                               GODL0920
      CHARACTER*6 HGDLTA                                                GODL0922
      CHARACTER*4 HGOTO                                                 GODL0924
      DATA HGDLTA,HGOTO/'GODLTA','GOTO'/                                GODL0930
      IF(IAERR.NE.0)GO TO 1000                                          GODL0933
      IF(JDS)CALL APT201(0,'NOCS    ')                                  GODL0935
      IF(IGOTO)1,1,2                                                    GODL0940
    2 IF(ISRCH)3,3,1000                                                 GODL0950
    3 IAERFG=1                                                          GODL0955
      CALL AERR(21301,'GODLTA  ')                                       GODL0960
      IAERR=0                                                           GODL0970
      GO TO 1000                                                        GODL0980
    1 CALL TRANSM(VEC,VECTOR,3,3,0)                                     GODL0984
      DO 10 J = 1,3                                                     GODL0990
      TEK(J)=TE(J)                                                      GODL1000
C...  EITHER DECMAL OR THE VECTOR COMPONENTS WILL BE ZERO               GODL1010
   10 TE(J) = VEC(J) + DECMAL*TA(J)                                     GODL1020
C...  SET RECORD TYPE CODE FOR CLTAPE WRITER                            GODL1030
   50 MODFER=HGDLTA                                                     GODL1040
      DO 55 J=1,3                                                       GODL1042
      TASAV(J)=TA(J)                                                    GODL1044
   55 TA(J)=0.0                                                         GODL1046
      CALL APT233                                                       GODL1050
      DO 60 J=1,3                                                       GODL1052
      TA(J)=TASAV(J)                                                    GODL1053
   60 TE(J)=TEK(J)+TE(J)                                                GODL1054
      MODFER=HGOTO                                                      GODL1055
      ITEMP(1)=BCDF('NONA')                                             GODL1056
      ITEMP(2)=BCDF('ME  ')                                             GODL1057
      DSNAME=ATEMP                                                      GODL1058
      CALL APT233                                                       GODL1059
 1000 CONTINUE                                                          GODL1060
      RETURN                                                            GODL1061
       END                                                              GODL1070
**** SOURCE FILE : M0000913.V05   ***
*
C.....FORTRAN SUBROUTINE  ....GOTO           8/68                 AR,PH GOTO0001
C                                                                       GOTO0002
      SUBROUTINE GOTO(POINT)                                            GOTO0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              GOTO0020
C                                                                       GOTO0030
C                                                                       GOTO0040
C                                                                       GOTO0050
C                                                                       GOTO0060
      INCLUDE 'TOTAL.INC'                                               GOTO0171
      INCLUDE 'FXCOR.INC'                                               GOTO0199
      INCLUDE 'LDEF.INC'                                                GOTO0452
      INCLUDE 'IFXCOR.INC'                                              GOTO0586
      INCLUDE 'ISHR18.INC'                                              GOTO0684
      INCLUDE 'KNUMBR.INC'                                              GOTO0810
C                                                                       GOTO0860
C                                                                       GOTO0870
C                                                                       GOTO0880
C                                                                       GOTO0890
      DIMENSION POINT(3)                                                GOTO0900
      CHARACTER*4 HGOTO                                                 GOTO0904
      DATA HGOTO/'GOTO'/                                                GOTO0910
      IF(JDS) CALL APT201(0,'NOCS    ')                                 GOTO0911
      IAERR=0                                                           GOTO0912
      DO 10 J=1,3                                                       GOTO0920
   10 TEK(J) = TE(J)                                                    GOTO0930
      CALL TRANSM(TE,POINT,2,3,0)                                       GOTO0940
      CALL APT202(POINT,2)                                              GOTO0945
C...  SET RECORD TYPE CODE FOR CLTAPE WRITER                            GOTO0950
      MODFER = HGOTO                                                    GOTO0960
      CALL APT233                                                       GOTO0970
      IGOTO=0                                                           GOTO0980
      RETURN                                                            GOTO0990
       END                                                              GOTO1000
**** SOURCE FILE : M0002775.V06   ***
*
C                                                                       GTPN0001
C...  FORTRAN SUBROUTINE               GOTOPN    3/69      SR           GTPN0002
C                                                                       GTPN0010
C PURPOSE      TO POSITION THE TOOL AS INDICATED BY A                   GTPN0020
C              PATERN MOTION STATEMENT                                  GTPN0030
C                                                                       GTPN0040
C LINKAGE      CALL GOTOPN(PAT,IARG1,IARG2,IARG3,IARG4,OMTLST,AVDLST)   GTPN0050
C                                                                       GTPN0060
C ARGUMENTS    PAT     ARRAY CONTAINING THE I.C.F. OF THE PATERN        GTPN0070
C              IARG1   INTEGER 1 IF INVERS APPLIES, OTHERWISE 0         GTPN0080
C              IARG2   INTEGER 1 IF ZIGZAG APPLIES, OTHERWISE 0         GTPN0090
C              IARG3   INTEGER INDICATING TYPE (OMIT, RETAIN) AND       GTPN0100
C                      NUMBER OF 2-ELEMENT ENTRIES IN OMTLST            GTPN0110
C                      IARG3=0       NEITHER OMIT NOR RETAIN MODIFIER   GTPN0120
C                                    USED                               GTPN0130
C                      0)IARG3)1000  OMTLST CONTAINS POINTS TO BE       GTPN0140
C                                    OMITTED AND                        GTPN0150
C                                    IARG3=NUMBER OF ENTRIES            GTPN0160
C                      1000)IARG3    OMTLST CONTAINS POINTS TO BE       GTPN0170
C                                    RETAINED AND                       GTPN0180
C                                    1000-IARG3=NUMBER OF ENTRIES       GTPN0190
C              IARG4   INTEGER INDICATING NUMBER OF 3-ELEMENT           GTPN0200
C                      ENTRIES IN AVDLST                                GTPN0210
C              OMTLST  ARRAY CONTAINING FIRST AND LAST POINT OF         GTPN0220
C                      EACH OMIT OR RETAIN SEQUENCE                     GTPN0230
C              AVDLST  ARRAY CONTAINING THE OFFSET AND THE FIRST        GTPN0240
C                      AND LAST POINT OF EACH AVOID SEQUENCE            GTPN0250
C                                                                       GTPN0260
C SUBSIDIARIES TYPE                ENTRY                                GTPN0270
C              LOGICAL FUNCTION    CKDEF                                GTPN0280
C              SUBROUTINE          APT094                               GTPN0290
C              SUBROUTINE          APT202                               GTPN0300
C              SUBROUTINE          APT233                               GTPN0310
C              SUBROUTINE          APT299                               GTPN0320
C              SUBROUTINE          ERROR                                GTPN0330
C              SUBROUTINE          NPAT                                 GTPN0340
C                                                                       GTPN0350
      SUBROUTINE GOTOPN(PAT,IARG1,IARG2,IARG3,IARG4,OMTLST,AVDLST)      GTPN0360
C                                                                       GTPN0370
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              GTPN0380
C                                                                       GTPN0390
      INCLUDE 'TOTAL.INC'                                               GTPN0501
      INCLUDE 'FXCOR.INC'                                               GTPN0871
      INCLUDE 'ZNUMBR.INC'                                              GTPN0991
      INCLUDE 'IFXCOR.INC'                                              GTPN1201
      INCLUDE 'KNUMBR.INC'                                              GTPN1381
C                                                                       GTPN1390
      INCLUDE 'BLANKCOM.INC'                                            GTPN1400
C                                                                       GTPN1410
      DOUBLE PRECISION OMTLST                                           GTPN1420
      DIMENSION PAT(2),           OMTLST(2,49),AVDLST(3,34),RES(3)      GTPN1430
C                                                                       GTPN1440
      CHARACTER*4 HGOTO                                                 GTPN1450
      CHARACTER*5 HCYCLE                                                GTPN1452
      CHARACTER*2 HON                                                   GTPN1454
      CHARACTER*6 HNOMOR                                                GTPN1456
      LOGICAL CKDEF                                                     GTPN1470
      DATA HGOTO /'GOTO'/, HCYCLE /'CYCLE'/, HON /'ON'/,                GTPN1473
     1 HNOMOR /'NOMORE'/                                                GTPN1474
C                                                                       GTPN1480
C          MOVE THE EXTERNAL CANONICAL FORM TO BCANON                   GTPN1490
C                                                                       GTPN1500
      IF(CKDEF(PAT))GO TO 999                                           GTPN1510
      CALL APT094(2,PAT,BCANON)                                         GTPN1520
      IF(CKDEF(PAT))GO TO 999                                           GTPN1530
C                                                                       GTPN1540
C          DETERMINE NUMBER OF POINTS IN PATERN                         GTPN1550
C                                                                       GTPN1560
      N=BCANON(4)+Z1EM5                                                 GTPN1570
C                                                                       GTPN1580
C          IF ZIGZAG IS TO APPLY, PATERN MUST BE GRID                   GTPN1590
C                                                                       GTPN1600
      ISVA2=IARG2                                                       GTPN1610
      IF(ISVA2.EQ.K0)GO TO 10                                           GTPN1620
      IF(BCANON(2).EQ.Z3)GO TO 5                                        GTPN1630
      CALL ERROR(45,'GOTOPN  ')                                         GTPN1640
      ISVA2=K0                                                          GTPN1650
      GO TO 10                                                          GTPN1660
C                                                                       GTPN1670
C          DETERMINE NUMBER OF POINTS IN FIRST SIDE OF GRID PATERN      GTPN1680
C                                                                       GTPN1690
    5 NPAT1=BCANON(7)+Z1EM5                                             GTPN1700
C                                                                       GTPN1710
C          IF OMTLST HAS ENTRIES, PUT THEM IN ORDER                     GTPN1720
C                                                                       GTPN1730
   10 ISVA3=IARG3                                                       GTPN1740
      IF(ISVA3.LT.1000)GO TO 11                                         GTPN1750
      ISVA3=-(ISVA3-1000)                                               GTPN1760
   11 IF(ISVA3)12,20,14                                                 GTPN1770
   12 IPARG3=-ISVA3                                                     GTPN1780
      GO TO 16                                                          GTPN1790
   14 IPARG3=ISVA3                                                      GTPN1800
   16 DO 18 I=1,IPARG3                                                  GTPN1810
      IF(OMTLST(1,I).LE.OMTLST(2,I))GO TO 18                            GTPN1820
      TMPSAV=OMTLST(1,I)                                                GTPN1830
      OMTLST(1,I)=OMTLST(2,I)                                           GTPN1840
      OMTLST(2,I)=TMPSAV                                                GTPN1850
   18 CONTINUE                                                          GTPN1860
C                                                                       GTPN1870
C          CHECK FOR AVOID                                              GTPN1880
C                                                                       GTPN1890
   20 IF(IARG4.EQ.K0)GO TO 70                                           GTPN1900
C                                                                       GTPN1910
C          PUT AVDLST ENTRIES IN ORDER                                  GTPN1920
C                                                                       GTPN1930
      DO 60 I=1,IARG4                                                   GTPN1940
      IF(AVDLST(2,I).LT.AVDLST(3,I))GO TO 40                            GTPN1950
      IF(AVDLST(3,I).EQ.Z0)GO TO 22                                     GTPN1960
C                                                                       GTPN1970
C          REVERSE ORDER                                                GTPN1980
C                                                                       GTPN1990
      TMPSAV=AVDLST(2,I)                                                GTPN2000
      AVDLST(2,I)=AVDLST(3,I)                                           GTPN2010
      AVDLST(3,I)=TMPSAV                                                GTPN2020
      GO TO 40                                                          GTPN2030
C                                                                       GTPN2040
C          INSERT AS END POINT THE NEXT NON-OMITTED POINT               GTPN2050
C                                                                       GTPN2060
   22 AVDLST(3,I)=AVDLST(2,I)+Z1                                        GTPN2070
      PT=N                                                              GTPN2080
      IF(ISVA3)24,60,32                                                 GTPN2090
   24 DO 26 J=1,IPARG3                                                  GTPN2100
      IF((AVDLST(3,I).GE.OMTLST(1,J)).AND.(AVDLST(3,I).LE.OMTLST(2,J))) GTPN2110
     1 GO TO 46                                                         GTPN2120
   26 CONTINUE                                                          GTPN2130
      IF(AVDLST(3,I).GE.PT)GO TO 1000                                   GTPN2140
      AVDLST(3,I)=AVDLST(3,I)+Z1                                        GTPN2150
      GO TO 24                                                          GTPN2160
   32 DO 36 J=1,IPARG3                                                  GTPN2170
      IF((AVDLST(3,I).GE.OMTLST(1,J)).AND.(AVDLST(3,I).LE.OMTLST(2,J))) GTPN2180
     1 GO TO 38                                                         GTPN2190
   36 CONTINUE                                                          GTPN2200
      GO TO 54                                                          GTPN2210
   38 IF(AVDLST(3,I).GE.PT)GO TO 1000                                   GTPN2220
      AVDLST(3,I)=AVDLST(3,I)+Z1                                        GTPN2230
      GO TO 32                                                          GTPN2240
C                                                                       GTPN2250
C          CHECK FOR OMITTED FIRST OR END POINT IN AVOID STRING         GTPN2260
C                                                                       GTPN2270
   40 IF(ISVA3)42,60,50                                                 GTPN2280
   42 DO 44 J=1,IPARG3                                                  GTPN2290
      IF((AVDLST(3,I).GE.OMTLST(1,J)).AND.(AVDLST(3,I).LE.OMTLST(2,J))) GTPN2300
     1 GO TO 46                                                         GTPN2310
   44 CONTINUE                                                          GTPN2320
      GO TO 1000                                                        GTPN2330
   46 DO 48 J=1,IPARG3                                                  GTPN2340
      IF((AVDLST(2,I).GE.OMTLST(1,J)).AND.(AVDLST(2,I).LE.OMTLST(2,J))) GTPN2350
     1 GO TO 60                                                         GTPN2360
   48 CONTINUE                                                          GTPN2370
      GO TO 1000                                                        GTPN2380
   50 DO 52 J=1,IPARG3                                                  GTPN2390
      IF((AVDLST(3,I).GE.OMTLST(1,J)).AND.(AVDLST(3,I).LE.OMTLST(2,J))) GTPN2400
     1 GO TO 1000                                                       GTPN2410
   52 CONTINUE                                                          GTPN2420
   54 DO 58 J=1,IPARG3                                                  GTPN2430
      IF((AVDLST(2,I).GE.OMTLST(1,J)).AND.(AVDLST(2,I).LE.OMTLST(2,J))) GTPN2440
     1 GO TO 1000                                                       GTPN2450
   58 CONTINUE                                                          GTPN2455
   60 CONTINUE                                                          GTPN2460
C                                                                       GTPN2470
   70 IAERR=0                                                           GTPN2480
      CALL APT202(PAT,2)                                                GTPN2490
      MODFER=HGOTO                                                      GTPN2500
C                                                                       GTPN2510
C          INITIALIZE FOR AVOID                                         GTPN2520
C                                                                       GTPN2530
      IAVTYP=K1                                                         GTPN2540
      AVDEND=Z0                                                         GTPN2550
      JSAV=K0                                                           GTPN2560
C                                                                       GTPN2570
C                                                                       GTPN2580
  100 DO 900 I=1,N                                                      GTPN2590
      NO=I                                                              GTPN2600
C                                                                       GTPN2610
C          CHECK FOR INVERSE                                            GTPN2620
C                                                                       GTPN2630
      IF(IARG1.EQ.K0)GO TO 105                                          GTPN2640
      NO=N-I+K1                                                         GTPN2650
C                                                                       GTPN2660
C          CHECK FOR ZIGZAG                                             GTPN2670
C                                                                       GTPN2680
  105 IF(ISVA2.EQ.K0)GO TO 110                                          GTPN2690
      NCOL=(NO-K1)/NPAT1                                                GTPN2700
      NCOLMD=MOD(NCOL,K2)                                               GTPN2710
      IF(((NCOLMD.EQ.K1).AND.(IARG1.EQ.K0)).OR.((NCOLMD.EQ.K0).AND.     GTPN2720
     /  (IARG1.EQ.K1))) NO=NPAT1*(K2*NCOL+K1)-NO+K1                     GTPN2730
  110 PT=NO                                                             GTPN2740
C                                                                       GTPN2750
C          CHECK FOR OMIT OR RETAIN                                     GTPN2760
C                                                                       GTPN2770
      IF(ISVA3)140,160,120                                              GTPN2780
C                                                                       GTPN2790
C          OMIT                                                         GTPN2800
C                                                                       GTPN2810
  120 DO 124 J=1,IPARG3                                                 GTPN2820
      IF((PT.GE.OMTLST(1,J)).AND.(PT.LE.OMTLST(2,J)))GO TO 900          GTPN2830
  124 CONTINUE                                                          GTPN2840
      GO TO 160                                                         GTPN2850
C                                                                       GTPN2860
C          RETAIN                                                       GTPN2870
C                                                                       GTPN2880
  140 DO 144 J=1,IPARG3                                                 GTPN2890
      IF((PT.GE.OMTLST(1,J)).AND.(PT.LE.OMTLST(2,J)))GO TO 160          GTPN2900
  144 CONTINUE                                                          GTPN2910
      GO TO 900                                                         GTPN2920
C                                                                       GTPN2930
C          CHECK FOR AVOID                                              GTPN2940
C                                                                       GTPN2950
  160 IF(IARG4.EQ.K0)GO TO 200                                          GTPN2960
C                                                                       GTPN2970
C          AVOID                                                        GTPN2980
C                                                                       GTPN2990
      IF(AVDEND.NE.Z0)GO TO 170                                         GTPN3000
C                                                                       GTPN3010
C          LOOK FOR FIRST POINT                                         GTPN3020
C                                                                       GTPN3030
      DO 164 J=1,IARG4                                                  GTPN3040
      IF(PT.NE.AVDLST(2,J))GO TO 163                                    GTPN3050
      AVDEND=AVDLST(3,J)                                                GTPN3060
  162 JSAV=J                                                            GTPN3070
      AVDUP=AVDLST(1,J)                                                 GTPN3080
      AVDDN=AVDLST(1,J)                                                 GTPN3090
      IAVTYP=K2                                                         GTPN3100
      GO TO 200                                                         GTPN3110
  163 IF(PT.NE.AVDLST(3,J))GO TO 164                                    GTPN3120
      AVDEND=AVDLST(2,J)                                                GTPN3130
      GO TO 162                                                         GTPN3140
  164 CONTINUE                                                          GTPN3150
      GO TO 200                                                         GTPN3160
C                                                                       GTPN3170
C          LOOK FOR END POINT                                           GTPN3180
C                                                                       GTPN3190
  170 IF(PT.EQ.AVDEND)GO TO 180                                         GTPN3200
      IAVTYP=K3                                                         GTPN3210
      GO TO 200                                                         GTPN3220
C                                                                       GTPN3230
C          IS THIS END POINT A FIRST POINT OF NEXT STRING               GTPN3240
C                                                                       GTPN3250
  180 DO 184 J=1,IARG4                                                  GTPN3260
      IF(PT.NE.AVDLST(2,J))GO TO 183                                    GTPN3270
      IF(J.EQ.JSAV)GO TO 184                                            GTPN3280
      AVDEND=AVDLST(3,J)                                                GTPN3290
  182 AVDUP=AVDLST(1,J)                                                 GTPN3300
      IAVTYP=K3                                                         GTPN3310
      GO TO 200                                                         GTPN3320
  183 IF((PT.NE.AVDLST(3,J)).OR.(J.EQ.JSAV))GO TO 184                   GTPN3330
      AVDEND=AVDLST(2,J)                                                GTPN3340
      GO TO 182                                                         GTPN3350
  184 CONTINUE                                                          GTPN3360
      JSAV=K0                                                           GTPN3370
      AVDEND=Z0                                                         GTPN3380
      IAVTYP=K4                                                         GTPN3390
C                                                                       GTPN3400
C          CALL NPAT TO DETERMINE COORDINATES OF POINT                  GTPN3410
C                                                                       GTPN3420
  200 CALL NPAT(RES,NO)                                                 GTPN3430
C                                                                       GTPN3440
C          BRANCH ON IAVTYP                                             GTPN3450
C             1-AVOID DOES NOT APPLY     2-FIRST POINT IN AVOID STRING  GTPN3460
C             3-INTERMEDIATE POINT       4-END POINT                    GTPN3470
C                                                                       GTPN3480
      GO TO(240,240,220,210),IAVTYP                                     GTPN3490
  210 IAVTYP=K1                                                         GTPN3500
  220 DO 224 J=1,3                                                      GTPN3510
      TEK(J)=TE(J)                                                      GTPN3520
  224 TE(J)=RES(J)                                                      GTPN3530
      TE(3)=TE(3)+AVDDN                                                 GTPN3540
      CALL APT233                                                       GTPN3550
      CALL APT299(K1,HCYCLE,K2,HON)                                     GTPN3560
      AVDDN=AVDUP                                                       GTPN3570
  240 DO 244 J=1,3                                                      GTPN3580
      TEK(J)=TE(J)                                                      GTPN3590
  244 TE(J)=RES(J)                                                      GTPN3600
      CALL APT233                                                       GTPN3610
      IF(IAVTYP.EQ.K1)GO TO 900                                         GTPN3620
      CALL APT299(K1,HCYCLE,K2,HNOMOR)                                  GTPN3630
      DO 250 J=1,3                                                      GTPN3640
      TEK(J)=TE(J)                                                      GTPN3650
  250 TE(J)=RES(J)                                                      GTPN3660
      TE(3)=TE(3)+AVDUP                                                 GTPN3670
      CALL APT233                                                       GTPN3680
  900 CONTINUE                                                          GTPN3690
C                                                                       GTPN3700
      IGOTO=0                                                           GTPN3710
C                                                                       GTPN3720
  999 RETURN                                                            GTPN3730
C                                                                       GTPN3740
C          OMIT HAS BEEN APPLIED (OR RETAIN HAS NOT BEEN APPLIED)       GTPN3750
C             TO A FIRST OR AN END POINT OF AN AVOID STRING             GTPN3760
C                                                                       GTPN3770
 1000 CALL ERROR(46,'GOTOPN  ')                                         GTPN3780
      GO TO 999                                                         GTPN3790
C                                                                       GTPN3800
      END                                                               GTPN3810
**** SOURCE FILE : M0000916.V01   ***
*
C                                                                       00000100
C.....FORTRAN SUBROUTINE ...GOUGE          SUPPLIED BY VW  6/88         00000200
C                                                                       00000300
C                         MODIFIED FOR SSV..  E.MCLELLAN                00000400
C                                                                       00000500
      SUBROUTINE GOUGE                                                  00000600
C     VERSION K1 VOM 8.6.86                                             00000700
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00000800
C                                                                       00000900
      INCLUDE 'TOTAL.INC'                                               00001000
      INCLUDE 'DSHAR4.INC'                                              00001100
      INCLUDE 'FXCOR.INC'                                               00001200
      INCLUDE 'SV.INC'                                                  00001300
      INCLUDE 'ISV.INC'                                                 00001400
      INCLUDE 'IFXCOR.INC'                                              00001500
      INCLUDE 'ISHR18.INC'                                              00001600
C                                                                       00001700
      DIMENSION TPSAV(3),TNSAV(3),SPSAV(3),SNSAV(3),U1SAV(3),VTSAV(3)   00001750
      DIMENSION HILF(3)                                                 00001800
C                                                                       00001900
      INCLUDE 'CGOUG.INC'                                               00002000
C                                                                       00002100
      COMMON /MODESS/MODESS,MSSCHK,MSSARL                               00002200
C                                                                       00002300
      DATA ZERO /0.D0/                                                  00002400
C                                                                       00002500
C                                                                       00002600
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 00002700
C+++                                                                    00002800
C+++  KORR  6-GOUGE -2                                                  00002900
C+++                                                                    00003000
      DURCH = RI(6)                                                     00003100
C     INITIALISIERUNG                                                   00003200
      JGR = 0                                                           00003300
      IFLG = GFLG                                                       00003400
C     IF (IABS(IFLG) .GT. 1) STOP ' BETRAG VON GFLG GROESSER 1 '        00003500
      IF (IFLG.GE.0) THEN                                               00003600
C                                                                       00003700
      GFLG = ZERO                                                       00003800
      IS = IPS                                                          00003900
C                                                                       00004000
C     WRITE(6,1006) (TE(I), I=1,3)                                      00004100
C     WRITE(6,1007) (TP(I,IS), I=1,3)                                   00004200
C                                                                       00004300
C      PRINT *, 'GOUGE1:STORE DATA(FLIPMX,RCSAV,TPSAV,....'             00004400
C+++                                                                    00004500
C+++  KORR  6-GOUGE -2 ENDE                                             00004600
C+++                                                                    00004700
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 00004800
C                                                                       00004900
      FLIPMX = FLIPCK                                                   00005000
      FLIPAB = DABS(FLIPCK)                                             00005100
      RCSAV = RC(IS)                                                    00005200
      SSAV = S(IS)                                                      00005300
      ITSAV = ITSEG(IS)                                                 00005400
      DO 2900 I=1,3                                                     00005500
      TPSAV(I) = TP(I,IS)                                               00005600
      TNSAV(I) = TN(I,IS)                                               00005700
      SPSAV(I) = SP(I,IS)                                               00005800
      SNSAV(I) = SN(I,IS)                                               00005900
      U1SAV(I) = U1(I,IS)                                               00006000
      VTSAV(I) = VT(I,IS)                                               00006100
 2900 CONTINUE                                                          00006200
C                                                                       00006300
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 00006400
C+++                                                                    00006500
C+++  KORR  6-GOUGE -3                                                  00006600
C+++                                                                    00006700
CKEINE PRUEFUNG WENN DP SCHON KLEIN                                     00006800
C---  IF (DP .LT. 0.5D0)  GOTO 106                                      00006900
      IF (DP .LT. 2.0D0)  GOTO 106                                      00007000
C                                                                       00007100
C                                                                       00007200
      CALL DOTF(ZAHL, TI, TALT)                                         00007300
C--T--WRITE(6,1003) ZAHL                                                00007400
C      PRINT *, 'GOUGE1 AUFRUF AJUNDD'                                  00007500
      DO 100 I=1,3                                                      00007600
      TP(I,IS) = TE(I) + DURCH           * TI(I)                        00007700
  100 CONTINUE                                                          00007800
C--T--WRITE(6,1008) (TP(I,IS), I=1,3)                                   00008000
      MODESS = 11                                                       00008100
      CALL AJUNDD                                                       00008200
      MODESS = 0                                                        00008300
C     VERLETZUNG DER OBERFLAECHE                                        00008400
      DO 101 I=1,3                                                      00008500
      HILF(I) = SP(I,IS) - TP(I,IS)                                     00008600
  101 CONTINUE                                                          00008700
      CALL DOTF(SHILF, HILF, HILF)                                      00008800
      SHILF = DSQRT(SHILF)                                              00008900
      CALL DOTF(HILF1, HILF, SN(1,IS))                                  00009000
      IF (HILF1 .GT. 0) SHILF = -SHILF                                  00009100
      IF (SHILF .GT. 0) GOTO 103                                        00009200
C---  IF (DABS(SHILF) .LT. 2.0D0*TAU(IS) ) GOTO 106                     00009300
C   WARNUNG AUSGEBEN                                                    00009400
      IF (DABS(SHILF) .LT.10.0D0*TAU(IS) ) GOTO 106                     00009500
C--T--WRITE(6,7015)(TE(I),I=1,3)                                        00009600
 7015 FORMAT(' *** WARNUNG : TE = ', 3(D12.5, 2X),' TOOL SCHNEIDET '    00009700
     1,'FLAECHE')                                                       00009800
      GOTO 106                                                          00009900
C                                                                       00010000
C --- RESTORE DATA                                                      00010100
C                                                                       00010200
  103 CONTINUE                                                          00010300
C     KEIN LOOK AHEAD, WENN DP NICHT GROSS GENUG                        00010400
      IF (DABS(SHILF) .GT. 2.0*TAU(IS)) GOTO 106                        00010500
      IF (DP .LT. 2.0D0)  GOTO 106                                      00010600
C      PRINT *, 'GOUGE1 AUFRUF AJUNDD MIT LOOK AHEAD'                   00010700
      DO 104 I=1,3                                                      00010800
      TP(I,IS) = TE(I) +( DP+DURCH) * TI(I)                             00010900
  104 CONTINUE                                                          00011000
C--T--WRITE(6,1008) (TP(I,IS), I=1,3)                                   00011200
      MODESS = 11                                                       00011300
      CALL AJUNDD                                                       00011400
      MODESS = 0                                                        00011500
C     VERLETZUNG DER OBERFLAECHE                                        00011600
      DO 105 I=1,3                                                      00011700
      HILF(I) = SP(I,IS) - TP(I,IS)                                     00011800
  105 CONTINUE                                                          00011900
      CALL DOTF(SHILF, HILF, HILF)                                      00012000
      SHILF = DSQRT(SHILF)                                              00012100
      CALL DOTF(HILF1, HILF, SN(1,IS))                                  00012200
      IF (HILF1 .GT. 0) SHILF = -SHILF                                  00012300
      IF (SHILF .GT. 0) GOTO 106                                        00012400
      IF (DABS(SHILF) .LT. 1.5D1*TAU(IS) ) GOTO 106                     00012500
C--   IF (DABS(SHILF) .LT. 2.5D1*TAU(IS) ) GOTO 106                     00012600
C ZUSAETZLICHES KRITERIUM                                               00012700
      GFLG  = 1.D0                                                      00012800
      JGR = -1                                                          00012900
C+++                                                                    00013000
C+++  KORR  6-GOUGE -3 ENDE                                             00013100
C+++                                                                    00013200
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 00013300
C                                                                       00013400
  106 CONTINUE                                                          00013500
C      PRINT *, 'GOUGE1 RESTORE DATA , GFLG = ', GFLG                   00013600
      RC(IS) = RCSAV                                                    00013700
      S(IS) = SSAV                                                      00013800
      ITSEG(IS) = ITSAV                                                 00013900
      DO 2910 I=1,3                                                     00014000
      TP(I,IS) = TPSAV(I)                                               00014100
      TN(I,IS) = TNSAV(I)                                               00014200
      SP(I,IS) = SPSAV(I)                                               00014300
      SN(I,IS) = SNSAV(I)                                               00014400
      U1(I,IS) = U1SAV(I)                                               00014500
      VT(I,IS) = VTSAV(I)                                               00014600
 2910 CONTINUE                                                          00014700
C                                                                       00014800
      ELSE                                                              00014900
        GFLG = ZERO                                                     00015000
      ENDIF                                                             00015100
C                                                                       00015200
 1000 FORMAT(' GOUGE1 : IGOUG = ', I1)                                  00015300
 1001 FORMAT(' GOUGE1 : IS = ',I3, ' IPS = ', I3, ' IDS = ',I3          00015400
     1      ,' RC(IPS) = ', D12.5, ' RC(IDS) = ', D12.5 )               00015500
 1002 FORMAT(' GOUGE1 : TI  = ', 3(D12.5),/                             00015600
     1       ' GOUGE1: TIK = ', 3(D12.5),/                              00015700
     2       ' GOUGE1: GFLG= ',   D12.5)                                00015800
 1003 FORMAT(' GOUGE1: TI . TIK =', D12.5)                              00015900
 1004 FORMAT(' GOUGE1: HALBER C.DURCHMESSER:TLLDAT,CUTDAT)',2(D12.5),2X)00016000
 1006 FORMAT(' GOUGE1: TE =', 3(D12.5,2X))                              00016100
 1007 FORMAT(' GOUGE1: TP =', 3(D12.5,2X))                              00016200
 1008 FORMAT(' GOUGE1: TPNEU =', 3(D12.5,2X))                           00016300
      END                                                               00016400
**** SOURCE FILE : M0002754.V09   ***
*
C                                                                       INDP0001
C.....FORTRAN SUBROUTINE             INDIRP...              3/1/68   GK INDP0002
      SUBROUTINE INDIRP(SRFC,PNT)                                       INDP0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              INDP0020
C                                                                       INDP0030
C                                                                       INDP0040
C                                                                       INDP0050
C                                                                       INDP0060
      INCLUDE 'TOTAL.INC'                                               INDP0171
      INCLUDE 'FXCOR.INC'                                               INDP0481
      INCLUDE 'HOLRTH.INC'                                              INDP0545
      INCLUDE 'SV.INC'                                                  INDP0849
      INCLUDE 'ISV.INC'                                                 INDP1001
      INCLUDE 'IFXCOR.INC'                                              INDP1161
      INCLUDE 'ISHR18.INC'                                              INDP1273
      INCLUDE 'KNUMBR.INC'                                              INDP1417
C                                                                       INDP1452
      CHARACTER*8 TEST                                                  INDP1454
      INTEGER IHDS(2),BCDF                                              INDP1456
      EQUIVALENCE(IHDS,VALHDS)                                          INDP1458
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            INDP1461
      COMMON /HSAVE/ SAVEH(50)                                          INDP1462
      EQUIVALENCE (SAVEH(32),SRFACE),(SAVEH(33),POINT(1))               INDP1463
C                                                                       INDP1470
C     25. COMMON FOR AERR INFORMATION                                   INDP1472
C                                                                       INDP1474
      COMMON /AERCOM/ IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS                INDP1476
      DIMENSION PCTPTS(3,20),PCTPLN(4),ERRPTS(3,3)                      INDP1480
C                                                                       INDP1490
C...  NEW DIRECTION OF MOTION IS FROM PRESENT TOOL POSITION TO POINT    INDP1500
C...  STORE DIRECTION VECTORS FOR DS,PS,CS AS REQUIRED                  INDP1510
      DIMENSION POINT(3)                                                INDP1520
      DIMENSION PNT(3)                                                  INDP1521
C                                                                       INDP1530
      SRFACE=SRFC                                                       INDP1531
C                                                                       INDP1532
      CALL TRANSM(POINT,PNT,2,3,0)                                      INDP1533
      IF(JHLDFG.EQ.0) GO TO 501                                         INDP1534
      ITABH(ITHCNT)=12                                                  INDP1535
      ITHCNT=ITHCNT+1                                                   INDP1536
      RETURN                                                            INDP1537
C                                                                       INDP1538
  501 CONTINUE                                                          INDP1539
C                                                                       INDP1540
      IF(IGOTO)1,1,2                                                    INDP1550
    2 IF(ISRCH)40,40,1000                                               INDP1560
    1 TEMP(1)=SRFACE                                                    INDP1570
    3 K=IDS                                                             INDP1580
      CALL HOLFRM(TEMP(1),TEST,1,8,NWD)                                 INDP1585
      IF(HDS.EQ.TEST) GO TO 5                                           INDP1590
      K=IPS                                                             INDP1600
      IF(HPS.EQ.TEST) GO TO 5                                           INDP1610
      K=ICS                                                             INDP1620
      IF(HCS.NE.TEST) GO TO 50                                          INDP1630
    5 DO 10 I=1,3                                                       INDP1640
      VNDIR(I,K)=POINT(I)-TE(I)                                         INDP1650
   10 CONTINUE                                                          INDP1660
      CALL VNORM(VNDIR(1,K),VNDIR(1,K))                                 INDP1670
      IF(IER)25,25,20                                                   INDP1680
   20 IAERFG=1                                                          INDP1690
      CALL AERR(20901,'INDIRP  ')                                       INDP1695
      GO TO 45                                                          INDP1700
   25 INDIR(K)=K1                                                       INDP1710
C...  IF DS,TELL AMIND VNDIR IS ALREADY THE FORWARD DIRECTION           INDP1720
      IF(HDS.NE.TEST) GO TO 1000                                        INDP1730
   30 DO 35 I=1,3                                                       INDP1740
      TI(I)=VNDIR(I,K)                                                  INDP1750
      TEK(I)=TE(I)-TI(I)                                                INDP1760
   35 CONTINUE                                                          INDP1770
 1000 CONTINUE                                                          INDP1780
      RETURN                                                            INDP1781
C...  DIRECTION OF MOTION GIVEN WITHOUT A STARTING POINT GIVEN          INDP1790
   40 IAERFG=1                                                          INDP1800
      CALL AERR(20902,'INDIRP  ')                                       INDP1805
   45 IAERR=0                                                           INDP1810
      GO TO 1000                                                        INDP1820
C...  WARNING-CANNOT DETERMINE SURFACE TYPE. DS ASSUMED                 INDP1830
   50 CALL AERR(-20903,'INDIRP  ')                                      INDP1840
      IHDS(1) = BCDF(HDS(1:4))                                          INDP1842
      IHDS(2) = BCDF(HDS(5:8))                                          INDP1844
      TEMP(1)=VALHDS                                                    INDP1850
      GO TO 3                                                           INDP1860
       END                                                              INDP1870
C                                                                       INDP1880
C                                                                       INDP1890
C                                                                       INDP1900
      SUBROUTINE INDRPH(SRFC,PNT)                                       INDP2010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              INDP2020
C                                                                       INDP2030
C                                                                       INDP2040
C                                                                       INDP2050
C                                                                       INDP2060
      INCLUDE 'TOTAL.INC'                                               INDP2171
      INCLUDE 'FXCOR.INC'                                               INDP2481
      INCLUDE 'HOLRTH.INC'                                              INDP2545
      INCLUDE 'SV.INC'                                                  INDP2849
      INCLUDE 'ISV.INC'                                                 INDP3001
      INCLUDE 'IFXCOR.INC'                                              INDP3161
      INCLUDE 'ISHR18.INC'                                              INDP3273
      INCLUDE 'KNUMBR.INC'                                              INDP3417
C                                                                       INDP3452
      CHARACTER*8 TEST                                                  INDP3454
      INTEGER IHDS(2),BCDF                                              INDP3456
      EQUIVALENCE(IHDS,VALHDS)                                          INDP3458
      COMMON /HSAVE/ SAVEH(50)                                          INDP3462
      EQUIVALENCE (SAVEH(32),SRFACE),(SAVEH(33),POINT(1))               INDP3463
C                                                                       INDP3470
C     25. COMMON FOR AERR INFORMATION                                   INDP3472
C                                                                       INDP3474
      COMMON /AERCOM/ IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS                INDP3476
      DIMENSION PCTPTS(3,20),PCTPLN(4),ERRPTS(3,3)                      INDP3480
C                                                                       INDP3490
C...  NEW DIRECTION OF MOTION IS FROM PRESENT TOOL POSITION TO POINT    INDP3500
C...  STORE DIRECTION VECTORS FOR DS,PS,CS AS REQUIRED                  INDP3510
      DIMENSION POINT(3)                                                INDP3520
      DIMENSION PNT(3)                                                  INDP3521
C                                                                       INDP3530
C                                                                       INDP3532
C                                                                       INDP3540
      IF(IGOTO)1,1,2                                                    INDP3550
    2 IF(ISRCH)40,40,1000                                               INDP3560
    1 TEMP(1)=SRFACE                                                    INDP3570
    3 K=IDS                                                             INDP3580
      CALL HOLFRM(TEMP(1),TEST,1,8,NWD)                                 INDP3585
      IF(HDS.EQ.TEST) GO TO 5                                           INDP3590
      K=IPS                                                             INDP3600
      IF(HPS.EQ.TEST) GO TO 5                                           INDP3610
      K=ICS                                                             INDP3620
      IF(HCS.NE.TEST) GO TO 50                                          INDP3630
    5 DO 10 I=1,3                                                       INDP3640
      VNDIR(I,K)=POINT(I)-TE(I)                                         INDP3650
   10 CONTINUE                                                          INDP3660
      CALL VNORM(VNDIR(1,K),VNDIR(1,K))                                 INDP3670
      IF(IER)25,25,20                                                   INDP3680
   20 IAERFG=1                                                          INDP3690
      CALL AERR(20901,'INDRPH  ')                                       INDP3695
      GO TO 45                                                          INDP3700
   25 INDIR(K)=K1                                                       INDP3710
C...  IF DS,TELL AMIND VNDIR IS ALREADY THE FORWARD DIRECTION           INDP3720
      IF(HDS.NE.TEST) GO TO 1000                                        INDP3730
   30 DO 35 I=1,3                                                       INDP3740
      TI(I)=VNDIR(I,K)                                                  INDP3750
      TEK(I)=TE(I)-TI(I)                                                INDP3760
   35 CONTINUE                                                          INDP3770
 1000 CONTINUE                                                          INDP3780
      RETURN                                                            INDP3781
C...  DIRECTION OF MOTION GIVEN WITHOUT A STARTING POINT GIVEN          INDP3790
   40 IAERFG=1                                                          INDP3800
      CALL AERR(20902,'INDRPH  ')                                       INDP3805
   45 IAERR=0                                                           INDP3810
      GO TO 1000                                                        INDP3820
C...  WARNING-CANNOT DETERMINE SURFACE TYPE. DS ASSUMED                 INDP3830
   50 CALL AERR(-20903,'INDRPH  ')                                      INDP3840
      IHDS(1) = BCDF(HDS(1:4))                                          INDP3842
      IHDS(2) = BCDF(HDS(5:8))                                          INDP3844
      TEMP(1)=VALHDS                                                    INDP3850
      GO TO 3                                                           INDP3860
       END                                                              INDP3870
**** SOURCE FILE : M0002758.V07   ***
*
C                                                                       INDV0001
C.....FORTRAN SUBROUTINE             INDIRV...              3/1/68   GK INDV0002
      SUBROUTINE INDIRV(SRFC,VCT)                                       INDV0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              INDV0020
C                                                                       INDV0030
C                                                                       INDV0040
C                                                                       INDV0050
C                                                                       INDV0060
      INCLUDE 'TOTAL.INC'                                               INDV0171
      INCLUDE 'FXCOR.INC'                                               INDV0481
      INCLUDE 'HOLRTH.INC'                                              INDV0545
      INCLUDE 'SV.INC'                                                  INDV0849
      INCLUDE 'ISV.INC'                                                 INDV1001
      INCLUDE 'IFXCOR.INC'                                              INDV1161
      INCLUDE 'ISHR18.INC'                                              INDV1273
      INCLUDE 'KNUMBR.INC'                                              INDV1417
C                                                                       INDV1418
C...  25. COMMON FOR AERR INFORMATION                                   INDV1420
C                                                                       INDV1425
      COMMON /AERCOM/ IAERFG                                            INDV1430
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            INDV1431
      COMMON /HSAVE/ SAVEH(50)                                          INDV1432
      EQUIVALENCE (SAVEH(28),SRFACE),(SAVEH(29),VECTOR(1))              INDV1433
      DIMENSION VCT(3)                                                  INDV1440
C                                                                       INDV1460
      CHARACTER*8 TEST                                                  INDV1462
      INTEGER IHDS(2),BCDF                                              INDV1464
      EQUIVALENCE (IHDS,VALHDS)                                         INDV1466
C                                                                       INDV1470
C                                                                       INDV1480
C                                                                       INDV1490
C...  NEW DIRECTION OF MOTION IS ALONG VECTOR                           INDV1500
C...  STORE DIRECTION VECTORS FOR DS,PS,CS AS REQUIRED                  INDV1510
      DIMENSION VECTOR(3)                                               INDV1520
      SRFACE=SRFC                                                       INDV1521
C                                                                       INDV1522
      CALL TRANSM(VECTOR,VCT,3,3,0)                                     INDV1523
      IF(JHLDFG.EQ.0) GO TO 501                                         INDV1524
      ITABH(ITHCNT)=11                                                  INDV1525
      ITHCNT=ITHCNT+1                                                   INDV1526
      RETURN                                                            INDV1527
  501 CONTINUE                                                          INDV1529
      IF(IGOTO)1,1,2                                                    INDV1530
    2 IF(ISRCH)40,40,1000                                               INDV1540
    1 TEMP(1)=SRFACE                                                    INDV1550
    3 K=IDS                                                             INDV1560
      CALL HOLFRM(TEMP(1),TEST,1,8,NWD)                                 INDV1565
      IF(HDS.EQ.TEST) GO TO 5                                           INDV1570
      K=IPS                                                             INDV1580
      IF(HPS.EQ.TEST) GO TO 5                                           INDV1590
      K=ICS                                                             INDV1600
      IF(HCS.NE.TEST) GO TO 50                                          INDV1610
    5 DO 10 I=1,3                                                       INDV1620
      VNDIR(I,K)=VECTOR(I)                                              INDV1630
   10 CONTINUE                                                          INDV1640
      CALL VNORM(VNDIR(1,K),VNDIR(1,K))                                 INDV1650
      IF(IER)25,25,20                                                   INDV1660
   20 IAERFG=1                                                          INDV1665
      CALL AERR(21001,'INDIRV  ')                                       INDV1670
      GO TO 45                                                          INDV1680
   25 INDIR(K)=K1                                                       INDV1690
C...  IF DS,TELL AMIND VNDIR IS ALREADY THE FORWARD DIRECTION           INDV1700
      IF(HDS.NE.TEST) GO TO 1000                                        INDV1710
   30 DO 35 I=1,3                                                       INDV1720
      TI(I)=VNDIR(I,K)                                                  INDV1730
      TEK(I)=TE(I)-TI(I)                                                INDV1740
   35 CONTINUE                                                          INDV1750
 1000 CONTINUE                                                          INDV1760
      RETURN                                                            INDV1761
   40 IAERFG=1                                                          INDV1765
      CALL AERR(21002,'INDIRV  ')                                       INDV1770
   45 IAERR=0                                                           INDV1780
      GO TO 1000                                                        INDV1790
   50 CALL AERR(-21003,'INDIRV  ')                                      INDV1800
      IHDS(1) = BCDF(HDS(1:4))                                          INDV1802
      IHDS(2) = BCDF(HDS(5:8))                                          INDV1804
      TEMP(1)=VALHDS                                                    INDV1810
      GO TO 3                                                           INDV1820
       END                                                              INDV1830
C                                                                       INDV1840
C                                                                       INDV1850
C                                                                       INDV1860
      SUBROUTINE INDRVH(SRFC,VCT)                                       INDV2010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              INDV2020
C                                                                       INDV2030
C                                                                       INDV2040
C                                                                       INDV2050
C                                                                       INDV2060
      INCLUDE 'TOTAL.INC'                                               INDV2171
      INCLUDE 'FXCOR.INC'                                               INDV2481
      INCLUDE 'HOLRTH.INC'                                              INDV2545
      INCLUDE 'SV.INC'                                                  INDV2849
      INCLUDE 'ISV.INC'                                                 INDV3001
      INCLUDE 'IFXCOR.INC'                                              INDV3161
      INCLUDE 'ISHR18.INC'                                              INDV3273
      INCLUDE 'KNUMBR.INC'                                              INDV3417
C                                                                       INDV3418
C...  25. COMMON FOR AERR INFORMATION                                   INDV3420
C                                                                       INDV3425
      COMMON /AERCOM/ IAERFG                                            INDV3430
      COMMON /HSAVE/ SAVEH(50)                                          INDV3432
      EQUIVALENCE (SAVEH(28),SRFACE),(SAVEH(29),VECTOR(1))              INDV3433
      DIMENSION VCT(3)                                                  INDV3440
C                                                                       INDV3460
      CHARACTER*8 TEST                                                  INDV3462
      INTEGER IHDS(2),BCDF                                              INDV3464
      EQUIVALENCE (IHDS,VALHDS)                                         INDV3466
C                                                                       INDV3470
C                                                                       INDV3480
C                                                                       INDV3490
C...  NEW DIRECTION OF MOTION IS ALONG VECTOR                           INDV3500
C...  STORE DIRECTION VECTORS FOR DS,PS,CS AS REQUIRED                  INDV3510
      DIMENSION VECTOR(3)                                               INDV3520
C                                                                       INDV3522
      IF(IGOTO)1,1,2                                                    INDV3530
    2 IF(ISRCH)40,40,1000                                               INDV3540
    1 TEMP(1)=SRFACE                                                    INDV3550
    3 K=IDS                                                             INDV3560
      CALL HOLFRM(TEMP(1),TEST,1,8,NWD)                                 INDV3565
      IF(HDS.EQ.TEST) GO TO 5                                           INDV3570
      K=IPS                                                             INDV3580
      IF(HPS.EQ.TEST) GO TO 5                                           INDV3590
      K=ICS                                                             INDV3600
      IF(HCS.NE.TEST) GO TO 50                                          INDV3610
    5 DO 10 I=1,3                                                       INDV3620
      VNDIR(I,K)=VECTOR(I)                                              INDV3630
   10 CONTINUE                                                          INDV3640
      CALL VNORM(VNDIR(1,K),VNDIR(1,K))                                 INDV3650
      IF(IER)25,25,20                                                   INDV3660
   20 IAERFG=1                                                          INDV3665
      CALL AERR(21001,'INDRVH  ')                                       INDV3670
      GO TO 45                                                          INDV3680
   25 INDIR(K)=K1                                                       INDV3690
C...  IF DS,TELL AMIND VNDIR IS ALREADY THE FORWARD DIRECTION           INDV3700
      IF(HDS.NE.TEST) GO TO 1000                                        INDV3710
   30 DO 35 I=1,3                                                       INDV3720
      TI(I)=VNDIR(I,K)                                                  INDV3730
      TEK(I)=TE(I)-TI(I)                                                INDV3740
   35 CONTINUE                                                          INDV3750
 1000 CONTINUE                                                          INDV3760
      RETURN                                                            INDV3761
   40 IAERFG=1                                                          INDV3765
      CALL AERR(21002,'INDRHV  ')                                       INDV3770
   45 IAERR=0                                                           INDV3780
      GO TO 1000                                                        INDV3790
   50 CALL AERR(-21003,'INDRVH  ')                                      INDV3800
      IHDS(1) = BCDF(HDS(1:4))                                          INDV3802
      IHDS(2) = BCDF(HDS(5:8))                                          INDV3804
      TEMP(1)=VALHDS                                                    INDV3810
      GO TO 3                                                           INDV3820
       END                                                              INDV3830
**** SOURCE FILE : ISVCPY00.ORG   ***
*
      SUBROUTINE ISVCPY(I,J)                                            00000100
C                                                                       00000200
      INCLUDE 'ISV.INC'                                                 00000300
C                                                                       00000400
      IAFL(J) = IAFL(I)                                                 00000500
      ICANON(J) = ICANON(I)                                             00000600
      INDEX(J) = INDEX(I)                                               00000700
      INDIR(J) = INDIR(I)                                               00000800
      IOP(J) = IOP(I)                                                   00000900
      IOPSET(J) = IOPSET(I)                                             00001000
      IPL(J) = IPL(I)                                                   00001100
      ISFIDN(J) = ISFIDN(I)                                             00001200
      ISFTYP(J) = ISFTYP(I)                                             00001300
      ISIGCR(J) = ISIGCR(I)                                             00001400
      ISVFL(J) = ISVFL(I)                                               00001500
      ITLON(J) = ITLON(I)                                               00001600
      ITSEG(J) = ITSEG(I)                                               00001700
      IUNFL(J) = IUNFL(I)                                               00001800
      JENT(J) = JENT(I)                                                 00001900
      JIOPS(J) = JIOPS(I)                                               00002000
      JTLFLG(J) = JTLFLG(I)                                             00002100
      JTN(J) = JTN(I)                                                   00002200
      JU1(J) = JU1(I)                                                   00002300
      LIMFL(J) = LIMFL(I)                                               00002400
      ITSEGK(J) = ITSEGK(I)                                             00002500
C                                                                       00002600
      RETURN                                                            00002700
      END                                                               00002800
**** SOURCE FILE : M0002840.V05   ***
*
CCCCCCCCC                                                               LCLS0010
C....    FORTRAN SUBROUTINE ....  LCLS             RC  4/70             LCLS0020
C                                                                       LCLS0030
      SUBROUTINE LCLS(U,V,SSP,DDERU,DDERV,MMODE)                        LCLS0040
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              LCLS0050
C                                                                       LCLS0053
C...CALLS TO PARCHK & FCN HAVE BEEN COMMENTED OUT AS THE PARSRF         LCLS0054
C....FACILITY IS NOT PROVIDED.   24/9/86.   E.MCLELLAN.                 LCLS0055
C                                                                       LCLS0060
      INCLUDE 'TOTAL.INC'                                               LCLS0171
      INCLUDE 'SV.INC'                                                  LCLS0441
      INCLUDE 'ZNUMBR.INC'                                              LCLS0561
      INCLUDE 'IFXCOR.INC'                                              LCLS0761
      INCLUDE 'KNUMBR.INC'                                              LCLS0941
      INCLUDE 'BLANKCOM.INC'                                            LCLS0950
C                                                                       LCLS0960
      DIMENSION SSP(3),DDERU(3),DDERV(3),R2(3),R3(3)                    LCLS0970
      DATA DD/0.0D0/                                                    LCLS0980
C                                                                       LCLS0990
C  --------------------------------------------------------------~      LCLS1000
C                                                                       LCLS1010
      IF(MMODE.NE.1) GO TO 5                                            LCLS1012
C      CALL PARCHK(CANON(IC),KER)                                       LCLS1014
      IF(KER.EQ.1) CALL AERR(27003,'LCLS    ')                          LCLS1016
    5 CONTINUE                                                          LCLS1018
C------MM=1  DERIV CASE.  MM=0  NODER CASE.                             LCLS1020
 4000 MM=CANON(IC+3)                                                    LCLS1030
      IF(MM.EQ.0) GO TO 10                                              LCLS1040
C      CALL FCN (CANON(IC),U,V,SSP,DDERU,DDERV,W1,W2,W3,W4,W5,W6)       LCLS1050
      IF(MMODE.EQ.1) GO TO 1000                                         LCLS1060
 2000 CONTINUE                                                          LCLS1070
      GO TO 60                                                          LCLS1080
C                                                                       LCLS1090
   10 DINCX=0.0001                                                      LCLS1100
C------COMPUTE THE SURFACE POINT                                        LCLS1110
C      CALL FCN (CANON(IC),U,V,SSP,DDERU,DDERV,W1,W2,W3,W4,W5,W6)       LCLS1120
      IF(MMODE.EQ.1) GO TO 1000                                         LCLS1130
 3000 CONTINUE                                                          LCLS1140
C------COMPUTE THE PARTIAL DERIVATIVE WITH RESPECT TO U                 LCLS1150
      U4=U+DINCX                                                        LCLS1160
C      CALL FCN (CANON(IC),U4,V,R3,DDERU,DDERV,W1,W2,W3,W4,W5,W6)       LCLS1170
      U2=U-DINCX                                                        LCLS1180
C      CALL FCN (CANON(IC),U2,V,R2,DDERU,DDERV,W1,W2,W3,W4,W5,W6)       LCLS1190
      DO 20 I=1,3                                                       LCLS1200
   20 DDERU(I)=(R3(I)-R2(I))/(2*DINCX)                                  LCLS1210
C------COMPUTE THE PARTIAL WITH RESPECT TO V                            LCLS1220
      V1=V+DINCX                                                        LCLS1230
C      CALL FCN (CANON(IC),U,V1,R3,DDERV,DDERV,W1,W2,W3,W4,W5,W6)       LCLS1240
      V2=V-DINCX                                                        LCLS1250
C      CALL FCN (CANON(IC),U,V2,R2,DDERV,DDERV,W1,W2,W3,W4,W5,W6)       LCLS1260
      DO 30 I=1,3                                                       LCLS1270
   30 DDERV(I)=(R3(I)-R2(I))/(2*DINCX)                                  LCLS1280
C                                                                       LCLS1290
   60 CALL CROSS(DDERU(1),DDERV(1),SN(1,IS))                            LCLS1300
      CALL VNORM(SN(1,IS),SN(1,IS))                                     LCLS1310
      IF(IER.EQ.1) CALL AERR(27002,'LCLS    ')                          LCLS1320
      RETURN                                                            LCLS1330
 1000 KKK=1                                                             LCLS1340
      IF(DDERU(1).EQ.DD.AND.DDERU(2).EQ.DD.AND.DDERU(3).EQ.DD.AND.      LCLS1350
     C   DDERV(1).EQ.DD.AND.DDERV(2).EQ.DD.AND.DDERV(3).EQ.DD) KKK=0    LCLS1360
      IF(MM.EQ.1.AND.KKK.EQ.1) GO TO 2000                               LCLS1370
      IF(MM.EQ.0.AND.KKK.EQ.0) GO TO 3000                               LCLS1380
      CALL AERR(-27001,'LCLS    ')                                      LCLS1390
      CANON(IC+3)=KKK                                                   LCLS1400
      GO TO 4000                                                        LCLS1410
      END                                                               LCLS1420
**** SOURCE FILE : M0001137.V05   ***
*



C                                                                       00000100
C                                                                       00000200
C.....FORTRAN SUBROUTINES          MAXDP & MAXDPH            4/1/68   GK00000300
C                                                                       00000310
C                                                                       00000320
      SUBROUTINE MAXDP(DCML,ELNGTH)                                     00000400
C                                                                       00000410
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00000500
C                                                                       00000600
C                                                                       00005500
      INCLUDE 'FXCOR.INC'                                               00005501
C                                                                       00005502
C...  21. ADDCOM BLOCK                                                  00005600
C                                                                       00005700
      COMMON/ADDCOM/ ADDCOM                                             00005800
      DIMENSION ADDCOM(25)                                              00005900
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            00006000
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN)               00006100
C                                                                       00006200
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            00006300
      COMMON /HSAVE/ SAVEH(50)                                          00006400
      EQUIVALENCE (SAVEH(26),DECMAL),(SAVEH(27),ELNGH)                  00006500
C                                                                       00006600
      COMMON/MODESS/MODESS,MSSCHK,MSSARL                                00006700
C                                                                       00006800
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC                                   00006900
      CHARACTER*8 PPWORD                                                00006910
      INTEGER IPPWRD(2),BCDF                                            00006912
      DATA  PPWORD /'MAXDP '/                                           00007000
C                                                                       00007100
      DATA Z2,Z3,Z4,SMAL/2.D0,3.D0,4.D0,1.D-12/                         00007200
C                                                                       00007300
      DECMAL=DCML                                                       00007400
      ELNGH=ELNGTH                                                      00007500
      IF(JHLDFG.EQ.0) GO TO 1                                           00007600
C             /-IF JHLDFG IS NOT ZERO, ARELEM IS SEARCHING FOR A CHECK  00007700
C             /-SURFACE.  INTERVENING COMMANDS NOT TO BE EXECUTED YET.  00007800
      ITABH(ITHCNT)=10                                                  00007900
      ITHCNT=ITHCNT+1                                                   00008000
      RETURN                                                            00008100
                                                                        00008210
    1 CONTINUE                                                          00008300
C                                                                       00008400
C             /-SPECIAL FLAG FOR SS ARELEM MODE AND DEBUGGING LEVEL PRIN00008500
C             /-MAXDP/-K,L WHERE -K IS -2 OR LESS AND IBUG=L            00008600
      IF(DECMAL.GT.-Z2) GO TO 200                                       00008700
C             /-SET SWITCH FOR SS SPECIAL ARELEM(ON FOR-2, OFF FOR -3)  00008800
      IF(DABS(DECMAL+Z2).LT.SMAL) MSSARL=1                              00008900
      IF(DABS(DECMAL+Z3).LT.SMAL) MSSARL=0                              00009000
C             /-SET VALUE OF IBUG FROM SECOND ARGUMENT IF DECMAL=-4     00009100
      IF(DABS(DECMAL+Z4).LT.SMAL) IBUG=ELNGH                            00009200
C             /-OMIT WRITING A MAXDP RECORD FOR THESE CASES             00009300
      GO TO 100                                                         00009400
C                                                                       00009500
  200 CONTINUE                                                          00009600
      IPPWRD(1)=BCDF(PPWORD(1:4))                                       00009610
      IPPWRD(2)=BCDF(PPWORD(5:8))                                       00009620
C...  USE THIS MAXIMUM STEP IN ALL ARITHMETIC CALCULATIONS              00009700
      IF (ELNGH) 30,30,10                                               00009800
   10 ELMAX = ELNGH                                                     00009900
      KK=2                                                              00010000
   20 DPMAX = DECMAL                                                    00010100
      GO TO 70                                                          00010200
C                                                                       00010300
   30 KK=1                                                              00010400
      IF (DECMAL) 50,40,20                                              00010500
   40 JLIN=0                                                            00010600
      GO TO 70                                                          00010700
C                                                                       00010800
C...     THE COMMAND MAXDP/-1 IS NOT IMPLEMENTED                        00010900
   50 IF (DECMAL+1.) 60,70,40                                           00011000
   60 IF(DECMAL+1.1.GT.0.0) JLIN=1                                      00011100
C                                                                       00011200
   70 CALL APT299(KK,IPPWRD,1,DECMAL)                                   00011300
      IF (KK .EQ. 1) GO TO 100                                          00011400
      CALL APT299(1,ELNGH,0,0)                                          00011500
C                                                                       00011600
  100 RETURN                                                            00011700
      END                                                               00011800
C                                                                       00011900
C                                                                       00011910
C                                                                       00011920
C                                                                       00011930
C                                                                       00020100
C                                                                       00020200
C.....FORTRAN SUBROUTINE            MAXDPH...               4/1/68   GK 00020300
C                                                                       00020310
      SUBROUTINE MAXDPH(DCML,ELNGTH)                                    00020400
C                                                                       00020410
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00020500
C                                                                       00020600
      INCLUDE 'TOTAL.INC'                                               00021701
      INCLUDE 'FXCOR.INC'                                               00025501
C                                                                       00025502
C...  21. ADDCOM BLOCK                                                  00025600
C                                                                       00025700
      COMMON/ADDCOM/ ADDCOM                                             00025800
      DIMENSION ADDCOM(25)                                              00025900
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            00026000
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN)               00026100
C                                                                       00026200
      COMMON /HSAVE/ SAVEH(50)                                          00026400
      EQUIVALENCE (SAVEH(26),DECMAL),(SAVEH(27),ELNGH)                  00026500
C                                                                       00026600
      COMMON/MODESS/MODESS,MSSCHK,MSSARL                                00026700
C                                                                       00026800
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC                                   00026900
      CHARACTER*8 PPWORD                                                00026910
      INTEGER IPPWRD(2),BCDF                                            00026912
      DATA  PPWORD /'MAXDP '/                                           00027000
C                                                                       00027100
      DATA Z2,Z3,Z4,SMAL/2.D0,3.D0,4.D0,1.D-12/                         00027200
C                                                                       00027300
C                                                                       00028400
C             /-SPECIAL FLAG FOR SS ARELEM MODE AND DEBUGGING LEVEL PRIN00028500
C             /-MAXDP/-K,L WHERE -K IS -2 OR LESS AND IBUG=L            00028600
      IF(DECMAL.GT.-Z2) GO TO 200                                       00028700
C             /-SET SWITCH FOR SS SPECIAL ARELEM(ON FOR-2, OFF FOR -3)  00028800
      IF(DABS(DECMAL+Z2).LT.SMAL) MSSARL=1                              00028900
      IF(DABS(DECMAL+Z3).LT.SMAL) MSSARL=0                              00029000
C             /-SET VALUE OF IBUG FROM SECOND ARGUMENT IF DECMAL=-4     00029100
      IF(DABS(DECMAL+Z4).LT.SMAL) IBUG=ELNGH                            00029200
C             /-OMIT WRITING A MAXDP RECORD FOR THESE CASES             00029300
      GO TO 100                                                         00029400
C                                                                       00029500
  200 CONTINUE                                                          00029600
      IPPWRD(1)=BCDF(PPWORD(1:4))                                       00029610
      IPPWRD(2)=BCDF(PPWORD(5:8))                                       00029620
C...  USE THIS MAXIMUM STEP IN ALL ARITHMETIC CALCULATIONS              00029700
      IF (ELNGH) 30,30,10                                               00029800
   10 ELMAX = ELNGH                                                     00029900
      KK=2                                                              00030000
   20 DPMAX = DECMAL                                                    00030100
      GO TO 70                                                          00030200
C                                                                       00030300
   30 KK=1                                                              00030400
      IF (DECMAL) 50,40,20                                              00030500
   40 JLIN=0                                                            00030600
      GO TO 70                                                          00030700
C                                                                       00030800
C...     THE COMMAND MAXDP/-1 IS NOT IMPLEMENTED                        00030900
   50 IF (DECMAL+1.) 60,70,40                                           00031000
   60 IF(DECMAL+1.1.GT.0.0) JLIN=1                                      00031100
C                                                                       00031200
   70 CALL APT299(KK,IPPWRD,1,DECMAL)                                   00031300
      IF (KK .EQ. 1) GO TO 100                                          00031400
      CALL APT299(1,ELNGH,0,0)                                          00031500
C                                                                       00031600
  100 RETURN                                                            00031700
      END                                                               00031800
**** SOURCE FILE : M0001497.V03   ***
*
C.....FORTRAN SUBROUTINE                MULTAX...            8/1/68  AR MLTX0000
      SUBROUTINE MULTAX(DONOFF)                                         MLTX0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              MLTX0020
C                                                                       MLTX0030
C                                                                       MLTX0040
C                                                                       MLTX0050
C                                                                       MLTX0060
      INCLUDE 'TOTAL.INC'                                               MLTX0171
      INCLUDE 'IFXCOR.INC'                                              MLTX0292
C                                                                       MLTX0480
C                                                                       MLTX0490
      CHARACTER DOFF*4,TEST*4                                           MLTX0492
      INTEGER BCDF,PPWORD(2)                                            MLTX0493
      DATA  DOFF/'OFF '/                                                MLTX0495
C                                                                       MLTX0500
C                                                                       MLTX0510
C...  ALL CUTTER CENTERS WILL BE OUTPUT WITH TOOL AXIS VECTORS          MLTX0530
C IF DONOFF .NE. 'OFF'                                                  MLTX0532
      PPWORD(1) = BCDF('MULT')                                          MLTX0536
      PPWORD(2) = BCDF('AX  ')                                          MLTX0538
C                                                                       MLTX0540
      CALL APT299(1,PPWORD,2,DONOFF)                                    MLTX0542
      MULOUT=1                                                          MLTX0550
      CALL HOLFRM(DONOFF,TEST,1,4,NWD)                                  MLTX0552
      IF(TEST.EQ.DOFF) MULOUT=0                                         MLTX0555
      RETURN                                                            MLTX0560
       END                                                              MLTX0570
**** SOURCE FILE : M0000937.V02   ***
*
C.....FORTRAN SUBROUTINE             NOPS....               4/1/68   GK NOPS0000
      SUBROUTINE NOPS                                                   NOPS0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              NOPS0020
C                                                                       NOPS0030
C                                                                       NOPS0040
C                                                                       NOPS0050
C                                                                       NOPS0060
      INCLUDE 'TOTAL.INC'                                               NOPS0171
      INCLUDE 'ISV.INC'                                                 NOPS0273
      INCLUDE 'IFXCOR.INC'                                              NOPS0353
      INCLUDE 'KNUMBR.INC'                                              NOPS0425
C                                                                       NOPS0480
C                                                                       NOPS0490
C                                                                       NOPS0500
      IF(IAERR.NE.0)GO TO 10                                            NOPS0510
C...  NO PS IS TO BE USED FOR THE STARTUP                               NOPS0520
      INOPS=K1                                                          NOPS0530
      IAUTPS = 0                                                        NOPS0531
      JENT(IPS) = K1                                                    NOPS0534
   10 RETURN                                                            NOPS0540
       END                                                              NOPS0550
**** SOURCE FILE : M0000940.V04   ***
*
C.....FORTRAN SUBROUTINE             NUMPTS...              3/1/68   GK NUMP0000
      SUBROUTINE NUMPTS(XNUMBR)                                         NUMP0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              NUMP0020
C                                                                       NUMP0030
C                                                                       NUMP0040
C                                                                       NUMP0050
C                                                                       NUMP0060
      INCLUDE 'TOTAL.INC'                                               NUMP0171
      INCLUDE 'IFXCOR.INC'                                              NUMP0315
C                                                                       NUMP0316
      INTEGER IPPWRD(2),BCDF                                            NUMP0322
      CHARACTER*8 PPWORD                                                NUMP0324
      DATA  PPWORD /'NUMPTS'/                                           NUMP0330
C                                                                       NUMP0340
C                                                                       NUMP0350
C                                                                       NUMP0360
C...  USE THIS AS THE MAXIMUM NUMBER OF CUTTER CENTERS ON ONE           NUMP0380
C...  ELEMENTARY CUT SEQUENCE                                           NUMP0390
      IPPWRD(1)=BCDF(PPWORD(1:4))                                       NUMP0392
      IPPWRD(2)=BCDF(PPWORD(5:8))                                       NUMP0394
      CALL APT299(1,IPPWRD,1,XNUMBR)                                    NUMP0400
      NMPNTS=XNUMBR                                                     NUMP0410
      RETURN                                                            NUMP0420
       END                                                              NUMP0430
**** SOURCE FILE : M0000647.V01   ***
*
C                                                                       00000020
      SUBROUTINE PARLND(P,R,A,B,C,T,S,MODE)                             00000040
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000060
C-- MODULAR   PURPOSE IS TO COMPUTE THE CLOSEST APPROACH BETWEEN A      00000080
C--  PARABOLA IN SPACE AND A SPACE POINT, LINE OR HALF RAY.             00000100
C--  INPUT' POINT P AND TOOL RAY R( BOTH VECTORS)                       00000120
C--          VECTOR COEFFICIENTS OF PARABOLA A,B AND C (EQUATION IS     00000140
C--            ( A+ B*S +C*S**2 )                                       00000160
C--          CONTROL VARIABLE  IS MODE.  =-1 MEANS SHORTEST             00000180
C--          DISTANCE FROM FULL LINE,  =0 MEANS SHORTEST DISTANCE       00000200
C--          FROM POINT AND =1 MEANS SHORTEST DISTANCE FROM HALF LINE.  00000220
C--                                                                     00000240
C--  OUTPUT'  NUMBERS T(FOR LINE) AND S(FOR PARABOLA) WHICH GENERATE THE00000260
C--           SOLUTION POINTS ON THE TOOL RAY(P+T*R) AND CURVE(A+       00000280
C--           B*S+C*S**2) RESPECTIVELY.                                 00000300
      DIMENSION P(3),R(3),A(3),B(3),C(3),Z(3)                           00000320
      D1=A(1)-P(1)                                                      00000360
      D2=A(2)-P(2)                                                      00000380
      D3=A(3)-P(3)                                                      00000400
      DB=D1*B(1)+D2*B(2)+D3*B(3)                                        00000420
      BSQ=B(1)*B(1)+B(2)*B(2)+B(3)*B(3)                                 00000440
      DC=D1*C(1)+D2*C(2)+D3*C(3)                                        00000460
      BC=B(1)*C(1)+B(2)*C(2)+B(3)*C(3)                                  00000480
      CSQ=C(1)*C(1)+C(2)*C(2)+C(3)*C(3)                                 00000500
      DSQ=D1*D1+D2*D2+D3*D3                                             00000520
      X1=DB                                                             00000540
      X2=BSQ+DC+DC                                                      00000560
      X3=3.0*BC                                                         00000580
      X4=CSQ+CSQ                                                        00000600
      IF(MODE) 20,30,20                                                 00000620
   20 RSQ=R(1)*R(1)+R(2)*R(2)+R(3)*R(3)                                 00000640
      BR=B(1)*R(1)+B(2)*R(2)+B(3)*R(3)                                  00000660
      CR=C(1)*R(1)+C(2)*R(2)+C(3)*R(3)                                  00000680
      DR=D1*R(1)+D2*R(2)+D3*R(3)                                        00000700
      X1=X1-DR*BR/RSQ                                                   00000720
      X2=X2-(BR*BR+2.0*DR*CR)/RSQ                                       00000740
      X3=X3-3.0*BR*CR/RSQ                                               00000760
      X4=X4-2.0*CR*CR/RSQ                                               00000780
   30 CONTINUE                                                          00000800
      CALL GCUBIC(X4,X3,X2,X1,Z,NZ)                                     00000820
      IF(NZ.GT.1) GO TO 40                                              00000840
      S=Z(1)                                                            00000860
      T=0                                                               00000880
      IF(MODE.EQ.0) RETURN                                              00000900
      T=(DR+S*(BR+S*CR))/RSQ                                            00000920
      RETURN                                                            00000940
   40 IF(MODE) 100,200,100                                              00000960
  100 DST=99999999.0                                                    00000980
      DO 110 I=1,NZ                                                     00001000
      SCUR=Z(I)                                                         00001020
      TCUR=(DR+SCUR*(BR+SCUR*CR))/RSQ                                   00001040
      IF(TCUR.LT.0.0.AND.MODE.EQ.1) GO TO 110                           00001060
C-----X1=DSQ+SCUR*(DB+DB+SCUR*(DC+DC+BSQ+SCUR*(BC+BC+SCUR*CSQ)))        00001080
C-----X2=DR+SCUR*(BR+SCUR*CR)                                           00001100
C-----TEMP=X1-TCUR*(X2+X2-TCUR*RSQ)                                     00001120
      TEMP=1.0-SCUR                                                     00001160
      TEMP=DABS(TEMP)                                                   00001180
C------  DISRCIMINATE AGAINST A NEGATIVE SCUR                           00001181
      IF(SCUR.LT.0) TEMP=10*TEMP                                        00001182
      IF(TEMP.GT.DST) GO TO 110                                         00001200
      DST=TEMP                                                          00001220
      S=SCUR                                                            00001240
      T=TCUR                                                            00001260
  110 CONTINUE                                                          00001280
      RETURN                                                            00001300
  200 DST=9999999.0                                                     00001320
      DO 210 I=1,NZ                                                     00001340
      SCUR=Z(I)                                                         00001360
      TEMP=DSQ+SCUR*(DB+DB+SCUR*(DC+DC+BSQ+SCUR*(BC+BC+SCUR*CSQ)))      00001380
      IF(TEMP.GT.DST) GO TO 210                                         00001400
      DST=TEMP                                                          00001420
      S=SCUR                                                            00001440
  210 CONTINUE                                                          00001460
      T=0                                                               00001480
      RETURN                                                            00001500
      END                                                               00001520
**** SOURCE FILE : M0002852.V04   ***
*
C.....FORTRAN SUBROUTINE  ....PLANE          8/68                    PH PLAN0001
C.....FORTRAN SUBROUTINE             PLANE....              4/1/68   GK PLAN0002
      SUBROUTINE PLANE                                                  PLAN0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              PLAN0020
C                                                                       PLAN0030
C                                                                       PLAN0040
C                                                                       PLAN0050
C                                                                       PLAN0060
      INCLUDE 'TOTAL.INC'                                               PLAN0171
      INCLUDE 'DSHAR4.INC'                                              PLAN0348
      INCLUDE 'FXCOR.INC'                                               PLAN0614
      INCLUDE 'SV.INC'                                                  PLAN0873
      INCLUDE 'ZNUMBR.INC'                                              PLAN0957
      INCLUDE 'ISV.INC'                                                 PLAN1090
      INCLUDE 'IFXCOR.INC'                                              PLAN1230
      INCLUDE 'ISHR18.INC'                                              PLAN1328
      INCLUDE 'KNUMBR.INC'                                              PLAN1454
C                                                                       PLAN1455
C...  21. ADDCOM BLOCK                                                  PLAN1460
C                                                                       PLAN1467
      COMMON/ADDCOM/ ADDCOM                                             PLAN1474
      DIMENSION ADDCOM(25)                                              PLAN1481
      EQUIVALENCE (ADDCOM( 1),ELMAX ),  (ADDCOM( 2),CLNGTH),            PLAN1488
     1            (ADDCOM(23),IBTFLG),  (ADDCOM(24),JLIN)               PLAN1495
C                                                                       PLAN1502
C                                                                       PLAN1650
C                                                                       PLAN1660
      DATA ZLIT1/3.5D0/                                                 PLAN1670
C                                                                       PLAN1680
      J = IDS                                                           PLAN1690
      IF (IFL4(IS)) 3,4,3                                               PLAN1691
    3 J = IPS                                                           PLAN1692
    4 DO 41 I = 1,3                                                     PLAN1693
      TP(I,J) = TP(I,J) + CMOVE(I)                                      PLAN1694
      SP(I,J) = SP(I,J) + CMOVE(I)                                      PLAN1695
   41 CONTINUE                                                          PLAN1696
    9 CALL CHECK                                                        PLAN1700
      IF(IAERR)16,91,16                                                 PLAN1710
   91 IF(JCKR)1,14,1                                                    PLAN1720
    1 CALL CENTR                                                        PLAN1730
      IF(IAERR)16,92,16                                                 PLAN1740
   92 IF(JCR)2,10,11                                                    PLAN1750
    2 CALL AERR(-24401,'PLANE   ')                                      PLAN1760
      ISFTYP(IS) = 99                                                   PLAN1762
      GO TO 15                                                          PLAN1764
   12 J21(IS)=K1                                                        PLAN1770
      JPR = -K2                                                         PLAN1775
      TE(1)=TEL(1)                                                      PLAN1780
      TE(2)=TEL(2)                                                      PLAN1790
      TE(3)=TEL(3)                                                      PLAN1800
      S(IS)=Z3*DP                                                       PLAN1810
      IF (ICSCNT - K1) 16,16,30                                         PLAN1820
   30 STCK(IS)=Z1E6                                                     PLAN1830
      DP=DPMAX                                                          PLAN1840
      S(IS)=ZLIT1*DP                                                    PLAN1850
      CSD(IS)=Z11EM1*DP                                                 PLAN1860
      GO TO 16                                                          PLAN1870
   10 CALL AERR (24402,'PLANE   ')                                      PLAN1980
      GO TO 16                                                          PLAN1990
   11 IF((TE(1)-TEK(1))*TI(1)+(TE(2)-TEK(2))*TI(2)+(TE(3)-TEK(3)        PLAN2000
     1)*TI(3))12,13,13                                                  PLAN2010
   13 IF(JCR-K1)21,20,21                                                PLAN2020
   21 JPR=KM1                                                           PLAN2030
      GO TO 16                                                          PLAN2040
   20 JPR=K1                                                            PLAN2050
      GO TO 16                                                          PLAN2060
   14 NUMPT1=NUMPT1-K1                                                  PLAN2070
      CLNGTH = CLNGTH + DPMAX                                           PLAN2072
      IF (ELMAX - CLNGTH) 19,19,18                                      PLAN2074
   19 CALL AERR(24404,'PLANE   ')                                       PLAN2076
   18 IF (NUMPT1 - K1) 15,17,15                                         PLAN2080
   15 JPR=0                                                             PLAN2090
   16 CONTINUE                                                          PLAN2100
      RETURN                                                            PLAN2101
   17 CALL AERR (24403,'PLANE   ')                                      PLAN2110
      GO TO 16                                                          PLAN2120
       END                                                              PLAN2130
**** SOURCE FILE : M0002779.V09   ***
*
C                                                                       PCKT0001
C                                                                       PCKT0002
C.....FORTRAN SUBROUTINE           POCKET        2/69      SR,RL        PCKT0005
      SUBROUTINE POCKET(RADF,OFSC,OFSF,FRONE,FRTWO,FRTHRE,              PCKT0010
     C   OVRD,PTYP,NCOR,CRR)                                            PCKT0020
      IMPLICIT DOUBLE PRECISION (A-H), DOUBLE PRECISION (O-Z)           PCKT0030
C                                                                       PCKT0040
C                                                                       PCKT0070
      INCLUDE 'TOTAL.INC'                                               PCKT0151
      INCLUDE 'DSHAR5.INC'                                              PCKT0346
      INCLUDE 'FXCOR.INC'                                               PCKT0598
      INCLUDE 'ZNUMBR.INC'                                              PCKT0682
      INCLUDE 'IFXCOR.INC'                                              PCKT0822
      INCLUDE 'KNUMBR.INC'                                              PCKT0948
C                                                                       PCKT1030
C                                                                       PCKT1040
C...            SYSTEM I/O FILE NAMES                                   PCKT1050
C                                                                       PCKT1060
      INCLUDE 'SYMFIL.INC'                                              PCKT1075
C                                                                       PCKT1084
      INCLUDE 'BLANKCOM.INC'                                            PCKT1085
C                                                                       PCKT1086
      DOUBLE PRECISION SRF(4)                                           PCKT1087
      EQUIVALENCE (COM(1),SRF(1))                                       PCKT1088
C                                                                       PCKT1160
C...  DIMENSION FOR POCKET                                              PCKT1170
      DIMENSION XI(3,22),Q(3,21),U(3,21),W(3,20),BL(20),QQ(63),WW(60),  PCKT1180
     1XIPRIM(3,21),VPRIM(3,20),UPRIM(3,20),T(3),WD(3),Y(3),PTINT(3),    PCKT1190
     2CTEMP(3,20),CROSTO(3),UCRSTO(3),TCRSTO(3),KTAB(20),COR(3,20)      PCKT1200
      DIMENSION CRR(3,20)                                               PCKT1205
      EQUIVALENCE (Q(1,1),QQ(1)),(W(1,1),WW(1))                         PCKT1210
      DIMENSION KCLDAT(10)                                              PCKT1211
      DIMENSION E(3),F(3)                                               PCKT1212
      INTEGER BCDF,IPOCKT(2),IFDRT(2)                                   PCKT1214
      LOGICAL FIRST                                                     PCKT1215
      SAVE FIRST,KCLDAT,IPOCKT,IFDRT                                    PCKT1216
      EQUIVALENCE (HPOCKT,IPOCKT(1)),(HFDRT,IFDRT(1))                   PCKT1218
      INTEGER Z4E                                                       PCKT1222
      PARAMETER (Z4E=1308622848)                                        PCKT1224
      LOGICAL SR1,SR2,SR3,SR4,SR5                                       PCKT1240
      LOGICAL CKDEF                                                     PCKT1242
      LOGICAL  FPTFLG                                                   PCKT1250
      LOGICAL  FPFLG                                                    PCKT1260
      DATA KCLDAT /0,0,Z4E,0,Z4E,2,                                     PCKT1263
     C   Z4E,1,0,0/                                                     PCKT1264
      DATA FIRST/.TRUE./                                                PCKT1265
      DATA Z5EM4, Z5EM3, Z1EM4 / 5.D-4, 5.D-3, 1.D-4 /                  PCKT1267
C                                                                       PCKT1270
      CALL TAPOP(POFILE,-1)                                             PCKT1271
      RADEFF=RADF                                                       PCKT1272
      OFSETC=OFSC                                                       PCKT1273
      OFSETF=OFSF                                                       PCKT1274
      OVRIDE=OVRD                                                       PCKT1275
      PTTYPE=PTYP                                                       PCKT1276
      NC=NCOR                                                           PCKT1277
      IF (FIRST)THEN                                                    PCKT1278
        KCLDAT(1) = BCDF('CLDA')                                        PCKT1279
        KCLDAT(2) = BCDF('TA  ')                                        PCKT1281
        KCLDAT(9) = BCDF('GOTO')                                        PCKT1282
        KCLDAT(10) = BCDF('    ')                                       PCKT1283
        IPOCKT(1) = BCDF('POCK')                                        PCKT1284
        IPOCKT(2) = BCDF('ET  ')                                        PCKT1285
        IFDRT(1) = BCDF('FEDR')                                         PCKT1286
        IFDRT(2) = BCDF('AT  ')                                         PCKT1287
        FIRST =.FALSE.                                                  PCKT1288
      ENDIF                                                             PCKT1289
C...WRITE POCKET HEADER RECORD                                          PCKT1291
      CALL APT299(K0,HPOCKT,K0,K0)                                      PCKT1292
      NCORIG=NC                                                         PCKT1310
      CUTRAD=CUTDAT(1)                                                  PCKT1320
      SR1=.FALSE.                                                       PCKT1330
      SR2=.FALSE.                                                       PCKT1340
      SR3=.FALSE.                                                       PCKT1350
      SR4=.FALSE.                                                       PCKT1360
      SR5=.FALSE.                                                       PCKT1370
      NWD=1                                                             PCKT1380
      DO 4 I=1,NCOR                                                     PCKT1382
      IF(CKDEF(CRR(1,I))) GO TO 5                                       PCKT1383
    4 CONTINUE                                                          PCKT1384
      GO TO 4002                                                        PCKT1385
C   AN INPUT POINT IS UNDEFINED                                         PCKT1386
    5 CALL ERROR(3506)                                                  PCKT1388
      GO TO 993                                                         PCKT1390
 4002 IF(PTTYPE.LT.1.1) GO TO 4003                                      PCKT1392
      PTTYPE = PTTYPE - 2.0                                             PCKT1394
      DO 4001 I=1,NCOR                                                  PCKT1396
      TEMPD = TA(1)*SRF(1)+TA(2)*SRF(2)+TA(3)*SRF(3)                    PCKT1398
      RMDA = SRF(4)-(CRR(1,I)*SRF(1)+CRR(2,I)*SRF(2)+CRR(3,I)*SRF(3))   PCKT1400
      IF(DABS(TEMPD).LT.Z1EM4) GO TO 50                                 PCKT1402
      RMDA = RMDA/TEMPD                                                 PCKT1404
      COR(1,I) = CRR(1,I)+RMDA*TA(1)                                    PCKT1406
      COR(2,I) = CRR(2,I) + RMDA*TA(2)                                  PCKT1408
      COR(3,I) = CRR(3,I) + RMDA*TA(3)                                  PCKT1410
 4001 CONTINUE                                                          PCKT1412
      GO TO 6                                                           PCKT1414
 4003 DO 4004 I=1,NCOR                                                  PCKT1416
      COR(1,I) = CRR(1,I)                                               PCKT1418
      COR(2,I) = CRR(2,I)                                               PCKT1420
 4004 COR(3,I) = CRR(3,I)                                               PCKT1422
    6 IF(RADEFF) 1903,1903,2903                                         PCKT1424
 1903 RADEFF = Z5EM1*OFSETC*CUTRAD                                      PCKT1426
 2903 KALC = K0                                                         PCKT1428
      MOVE = K1                                                         PCKT1430
      INIT = K1                                                         PCKT1432
      DELDST=Z0                                                         PCKT1440
      GO TO 1904                                                        PCKT1450
  904 NC=NCUTBK                                                         PCKT1460
      PTTYPE=Z0                                                         PCKT1470
 1904 DO 905 J=1,NC                                                     PCKT1480
      DO 905 I=1,3                                                      PCKT1490
  905 XI(I,J+1)=COR(I,J)                                                PCKT1500
      DO 906 I=1,3                                                      PCKT1510
      XI(I,1)=COR(I,NC)                                                 PCKT1520
  906 XI(I,NC+2)=COR(I,1)                                               PCKT1530
      NPLUS1=NC+1                                                       PCKT1540
      NLESS1=NC-1                                                       PCKT1550
      DO 908 J=1,NPLUS1                                                 PCKT1560
      ADDEM1=Z0                                                         PCKT1570
      DO 907 I=1,3                                                      PCKT1580
      Q(I,J)=XI(I,J+1)-XI(I,J)                                          PCKT1590
  907 ADDEM1=(Q(I,J))**2+ADDEM1                                         PCKT1600
      DO 908 I=1,3                                                      PCKT1610
  908 U(I,J)=Q(I,J)/DSQRT(ADDEM1)                                       PCKT1620
      IF(INIT)9907,9907,1907                                            PCKT1630
 1907 CONTINUE                                                          PCKT1640
      DO 2906 J=1,NC                                                    PCKT1650
      DO 1906 I=1,3                                                     PCKT1660
      IF(DABS(XI(I,J)-COR(I,J))-Z5EM4)1906,1906,2906                    PCKT1670
 1906 CONTINUE                                                          PCKT1680
      CALL AERR(3501,'POCKET  ')                                        PCKT1690
 2906 CONTINUE                                                          PCKT1700
      DO 4906 J=1,NC                                                    PCKT1710
      DO 3906 I=1,3                                                     PCKT1720
      IF(DABS(U(I,J+1)-U(I,J))-Z5EM4)3906,3906,4906                     PCKT1730
 3906 CONTINUE                                                          PCKT1740
      CALL AERR(3502,'POCKET  ')                                        PCKT1750
 4906 CONTINUE                                                          PCKT1760
      ICRSTO=K1                                                         PCKT1770
      DO 6907 J=1,NC                                                    PCKT1780
      CROSTO(1)=-U(1,J)                                                 PCKT1790
      CROSTO(2)=-U(2,J)                                                 PCKT1800
      CROSTO(3)=-U(3,J)                                                 PCKT1810
      CALL CROSS(CROSTO ,U(1,J+1),CROSTO)                               PCKT1820
      CALL VNORM(CROSTO,UCRSTO)                                         PCKT1830
      IF(ICRSTO) 4907,4907,2907                                         PCKT1840
 2907 DO 3907 I=1,3                                                     PCKT1850
 3907 TCRSTO(I)=UCRSTO(I)                                               PCKT1860
      ICRSTO=K0                                                         PCKT1870
      GO TO 6907                                                        PCKT1880
 4907 DO 5907 I=1,3                                                     PCKT1890
      IF(DABS(UCRSTO(I)-TCRSTO(I))-Z5EM4)5907,5907,7907                 PCKT1900
 5907 CONTINUE                                                          PCKT1910
 6907 CONTINUE                                                          PCKT1920
C...  ADJUST POCKET VERTICES IF POCKET BOTTOM IS CANTED                 PCKT1930
C      WITH RESPECT TO TOOL AXIS AND VERTICIES DESCRIBE ACTUAL          PCKT1940
C     POCKET BOUNDARIES.                                                PCKT1950
      X1=DABS(TA(1)*TCRSTO(1)+TA(2)*TCRSTO(2)                           PCKT1960
     1  +TA(3)*TCRSTO(3))                                               PCKT1970
      IF(X1-.2D0)50,50,55                                               PCKT1980
   50 CALL AERR(3507,'POCKET  ')                                        PCKT1990
   55 IF(X1-.9999D0)65,60,60                                            PCKT2000
   60 INIT=-K1                                                          PCKT2010
   65 IF(INIT)9907,60,70                                                PCKT2020
   70 IF(PTTYPE)50,60,75                                                PCKT2030
  75  INIT=K0                                                           PCKT2040
      PTTYPE=Z0                                                         PCKT2050
      DO 200 J=1,NC                                                     PCKT2060
      ADDEM1 = TA(1)*U(1,J)+TA(2)*U(2,J)+TA(3)*U(3,J)                   PCKT2070
      ADDEM2 =     TA(1)*U(1,J+1)+    TA(2)*U(2,J+1)+    TA(3)*U(3,J+1) PCKT2080
      DO 100 I=1,3                                                      PCKT2090
      QQ(I)=U(I,J)-TA(I)*ADDEM1                                         PCKT2100
  100 WW(I)=U(I,J+1)-TA(I)*ADDEM2                                       PCKT2110
      CALL VNORM(QQ,QQ)                                                 PCKT2120
      CALL VNORM(WW,WW)                                                 PCKT2130
      T(1)=WW(1)-QQ(1)                                                  PCKT2140
      T(2)=WW(2)-QQ(2)                                                  PCKT2150
      T(3)=WW(3)-QQ(3)                                                  PCKT2160
      CALL VNORM(T,T)                                                   PCKT2170
      ALPHA=DSQRT(CUTRAD**2/(1.-(T(1)*WW(1)+T(2)*WW(2)+T(3)*WW(3))**2)) PCKT2180
      Y(1) = ALPHA*T(1)                                                 PCKT2190
      Y(2) = ALPHA*T(2)                                                 PCKT2200
      Y(3) = ALPHA*T(3)                                                 PCKT2210
      ALPHA = Y(1)*TCRSTO(1)+Y(2)*TCRSTO(2)+Y(3)*TCRSTO(3)              PCKT2220
      DO 200 I=1,3                                                      PCKT2230
  200 COR(I,J)=COR(I,J)+Y(I)-ALPHA*TA(I)/X1                             PCKT2240
      GO TO 1904                                                        PCKT2250
 7907 DO 5906 I=1,3                                                     PCKT2260
      IF(DABS(DABS(UCRSTO(I))-DABS(TCRSTO(I)))-Z5EM4)5906,5906,6906     PCKT2270
 5906 CONTINUE                                                          PCKT2280
      CALL AERR(3504,'POCKET  ')                                        PCKT2290
 6906 CALL AERR(3503,'POCKET  ')                                        PCKT2300
 9907 IF(OVRIDE) 909,1908,909                                           PCKT2310
 1908 SPHIO2=Z1                                                         PCKT2320
      DO 4908 J=1,NC                                                    PCKT2330
      ADDEM1=Z0                                                         PCKT2340
      DO 2908 I=1,3                                                     PCKT2350
 2908 ADDEM1=-U(I,J)*U(I,J+1)+ADDEM1                                    PCKT2360
      DUMMY=DSQRT((Z1-ADDEM1)/Z2)                                       PCKT2370
      IF(DUMMY-SPHIO2) 3908,4908,4908                                   PCKT2380
 3908 SPHIO2=DUMMY                                                      PCKT2390
 4908 CONTINUE                                                          PCKT2400
      DUMMY=RADEFF/CUTRAD*(Z1+SPHIO2)                                   PCKT2410
      IF(OFSETC-DUMMY) 6908,6908,5908                                   PCKT2420
 5908 OFSETC=DUMMY                                                      PCKT2430
 6908 IF(OFSETF-DUMMY) 8908,8908,7908                                   PCKT2440
 7908 OFSETF=DUMMY                                                      PCKT2450
 8908 IF(.NOT.SR5) GO TO 909                                            PCKT2460
      SR5 = .FALSE.                                                     PCKT2470
 9908 OFCSTO=OFSETC                                                     PCKT2480
      OFFSTO=OFSETF                                                     PCKT2490
      DUMMY=Z2*RADEFF/CUTRAD*SPHIO2                                     PCKT2500
      IF(OFSETC-DUMMY) 4909,4909,2909                                   PCKT2510
 2909 OFSETC=DUMMY                                                      PCKT2520
      IF(OFSETF-DUMMY) 4909,4909,3909                                   PCKT2530
 3909 OFSETF=DUMMY                                                      PCKT2540
 4909 SR5=.TRUE.                                                        PCKT2550
  909 DO 911  J=1,NC                                                    PCKT2560
      DO 1909 I=1,3                                                     PCKT2570
 1909 W(I,J)=U(I,J+1)-U(I,J)                                            PCKT2580
      ADDEM1=Z0                                                         PCKT2590
      ADDEM2=Z0                                                         PCKT2600
      DO 910 I=1,3                                                      PCKT2610
      ADDEM1=W(I,J)*U(I,J+1)+ADDEM1                                     PCKT2620
  910 ADDEM2=W(I,J)*W(I,J)+ADDEM2                                       PCKT2630
  911 BL(J)=DSQRT(ADDEM2-ADDEM1**2)                                     PCKT2640
      DIST=PTTYPE*CUTRAD                                                PCKT2650
      GO TO 4915                                                        PCKT2660
  912 MOVE=K2                                                           PCKT2670
      GO TO 1913                                                        PCKT2680
  913 MOVE=K3                                                           PCKT2690
 1913 DELDST=Z5EM1*OFSETF*CUTRAD                                        PCKT2700
      GO TO 2914                                                        PCKT2710
  914 MOVE=K4                                                           PCKT2720
 1914 DELDST=Z5EM1*OFSETC*CUTRAD                                        PCKT2730
 2914 DIST=DIST+DELDST                                                  PCKT2740
  915 IF(KALC) 1915,1915,2915                                           PCKT2750
 1915 KALC=K1                                                           PCKT2760
      GO TO 3915                                                        PCKT2770
 2915 KALC=K0                                                           PCKT2780
C     EXIT IF ZERO DIAM. CUTTER                                         PCKT2790
 3915  IF(CUTRAD) 987,987,3916                                          PCKT2800
 3916 IF (.NOT. SR5) GO TO 4915                                         PCKT2810
 5915 OFSETC=OFCSTO                                                     PCKT2820
      OFSETF=OFFSTO                                                     PCKT2830
 4915 DO 916 J=1,NC                                                     PCKT2840
      DO 916 I=1,3                                                      PCKT2850
  916 XIPRIM(I,J)=COR(I,J)+DIST/BL(J)*W(I,J)                            PCKT2860
      DO 917 I=1,3                                                      PCKT2870
  917 XIPRIM(I,NC+1)=XIPRIM(I,1)                                        PCKT2880
      DO 919 J=1,NC                                                     PCKT2890
      ADDEM1=Z0                                                         PCKT2900
      DO 918 I=1,3                                                      PCKT2910
      VPRIM(I,J)=XIPRIM(I,J+1)-XIPRIM(I,J)                              PCKT2920
  918 ADDEM1=(VPRIM(I,J))**2+ADDEM1                                     PCKT2930
      DO 919 I=1,3                                                      PCKT2940
  919 UPRIM(I,J)=VPRIM(I,J)/DSQRT(ADDEM1)                               PCKT2950
C     COLLAPSE TESTS                                                    PCKT2960
  920 DO 7260 J=1,NC                                                    PCKT2970
      KTAB(J) = K0                                                      PCKT2980
      DO 7260 I=1,3                                                     PCKT2990
      IF(DABS(U(I,J+1)-UPRIM(I,J))-Z5EM3)7260,7260,7250                 PCKT3000
 7250 KTAB(J) = K1                                                      PCKT3010
 7260 CONTINUE                                                          PCKT3020
 7270 NCUTBK = NC                                                       PCKT3030
      KUTBAC = K0                                                       PCKT3040
      KOLAPS = K0                                                       PCKT3050
      PHITMP=Z1                                                         PCKT3060
      DO 942 J=1,NC                                                     PCKT3070
      IF(KTAB(J)) 921,921,934                                           PCKT3080
  921 IF (.NOT. SR2 )  GO TO 927                                        PCKT3090
      SR2 = .FALSE.                                                     PCKT3100
  922  IF (KUTBAC-J+1)924,923,924                                       PCKT3110
  923 JSAVE=J                                                           PCKT3120
      KOLAPS=K0                                                         PCKT3130
      GO TO 942                                                         PCKT3140
  924 INTER=K1                                                          PCKT3150
      KONE=J-KOLAPS-1                                                   PCKT3160
      KTWO=J                                                            PCKT3170
      GO TO 1940                                                        PCKT3180
  925 DO 926 I=1,3                                                      PCKT3190
      JDUMMY=J-KUTBAC                                                   PCKT3200
  926 CTEMP(I,JDUMMY)=PTINT(I)                                          PCKT3210
      KOLAPS=K0                                                         PCKT3220
      GO TO 929                                                         PCKT3230
  927 DO 928 I=1,3                                                      PCKT3240
      JDUMMY=J-KUTBAC                                                   PCKT3250
  928 CTEMP(I,JDUMMY)=XIPRIM(I,J)                                       PCKT3260
  929 IF(J-NC) 942,930,930                                              PCKT3270
  930 IF ( .NOT. SR3 )  GO TO 942                                       PCKT3280
      SR3 = .FALSE.                                                     PCKT3290
  931 INTER=K2                                                          PCKT3300
      KONE = J                                                          PCKT3310
      KTWO = JSAVE                                                      PCKT3320
      GO TO 1940                                                        PCKT3330
  932 DO 933 I=1,3                                                      PCKT3340
  933 CTEMP(I,1)=PTINT(I)                                               PCKT3350
      GO TO 942                                                         PCKT3360
  934 NCUTBK=NCUTBK-1                                                   PCKT3370
      KUTBAC=KUTBAC+1                                                   PCKT3380
      KOLAPS=KOLAPS+1                                                   PCKT3390
      SR2=.TRUE.                                                        PCKT3400
      IF(J-1) 935,935,936                                               PCKT3410
  935 SR3=.TRUE.                                                        PCKT3420
      GO TO 942                                                         PCKT3430
  936 IF(J-NC) 942,1936,1936                                            PCKT3440
 1936 IF(MOVE.EQ.1.AND.NCUTBK.LE.2) CALL AERR(3510,'POCKET  ')          PCKT3450
      IF(NCUTBK-2) 2936,2936,937                                        PCKT3455
 2936 MOVE=K5                                                           PCKT3460
      IF(KALC) 3936,3936,982                                            PCKT3470
  937 IF ( .NOT. SR3 )  GO TO 940                                       PCKT3520
      SR3 = .FALSE.                                                     PCKT3530
  938 KTWO = JSAVE                                                      PCKT3540
  939 INTER=K2                                                          PCKT3550
      KONE = J-KOLAPS                                                   PCKT3560
      GO TO 1940                                                        PCKT3570
  940 KTWO=K1                                                           PCKT3580
      GO TO 939                                                         PCKT3590
C...  CALCULATE INTERSECTION OF NON-COLLAPSING SIDES                    PCKT3600
 1940  ITEST=K1                                                         PCKT3610
       KT1=KONE                                                         PCKT3620
       KT2=KTWO                                                         PCKT3630
 2040  COSVA=  UPRIM(1,KT1)*UPRIM(1,KT2) +                              PCKT3640
     1         UPRIM(2,KT1)*UPRIM(2,KT2) +                              PCKT3650
     2         UPRIM(3,KT1)*UPRIM(3,KT2)                                PCKT3660
      ADDEM2=DSQRT(DABS((Z1+COSVA)/Z2))                                 PCKT3670
      IF(ADDEM2-PHITMP) 2060,2080,2080                                  PCKT3680
 2060 PHITMP = ADDEM2                                                   PCKT3690
 2080 SIN2VA=Z1-COSVA**2                                                PCKT3700
      IF(SIN2VA-Z1EM4) 2140,2140,2340                                   PCKT3710
C...  SIDES ARE NEARLY PARALLEL - TAKE AVERAGE OF TWO VERTICES          PCKT3720
 2140 DO 2240 L=1,3                                                     PCKT3730
 2240 PTINT(L)=(XIPRIM(L,KONE+1)+ XIPRIM(L,KTWO))/Z2                    PCKT3740
      GO TO 8941                                                        PCKT3750
C...  SIDES INTERSECT - COMPUTE INTERSECTION                            PCKT3760
 2340 ALPHA=Z0                                                          PCKT3770
      DO 2440 L=1,3                                                     PCKT3780
 2440 ALPHA = ALPHA + (XIPRIM(L,KT2)-XIPRIM(L,KT1))*                    PCKT3790
     1                (UPRIM(L,KT1)-UPRIM(L,KT2)*COSVA)                 PCKT3800
      ALPHA = ALPHA/SIN2VA                                              PCKT3810
      ADDEM1=Z0                                                         PCKT3820
      DO 2540 L=1,3                                                     PCKT3830
 2540 ADDEM1 = ADDEM1 + (XIPRIM(L,KT1+1)-XIPRIM(L,KT1))**2              PCKT3840
      ADDEM1 = DSQRT(ADDEM1)                                            PCKT3850
      GO TO (2640,2740,3040,3340,3540,3840), ITEST                      PCKT3860
 2640 IF(ALPHA) 2650,2140,3140                                          PCKT3870
 2650 KT1 = KT1-K1                                                      PCKT3880
      IF(KT1) 2680,2680,2660                                            PCKT3890
 2660 IF(KTAB(KT1)) 2670,2670,2650                                      PCKT3900
 2670 ITEST = K2                                                        PCKT3910
      GO TO 2040                                                        PCKT3920
 2680 KT1 = NC                                                          PCKT3930
 2690 IF(KTAB(KT1)) 2670,2670,2700                                      PCKT3940
 2700 KT1 = KT1-K1                                                      PCKT3950
      IF(KT1-KT2) 2140,2140,2690                                        PCKT3960
 2740 IF(ALPHA) 2140,2140,2840                                          PCKT3970
 2840 IF(ALPHA-ADDEM1) 2940,2940,2140                                   PCKT3980
 2940 KT2 = KT1                                                         PCKT3990
      KT1 = KTWO                                                        PCKT4000
      ITEST=K3                                                          PCKT4010
      GO TO 2340                                                        PCKT4020
 3040 IF(ALPHA) 2140,2140,3050                                          PCKT4030
 3050 IF(ALPHA-ADDEM1) 3060,3060,2140                                   PCKT4040
C...  SIDE OUTSIDE POLYGON-PLACE SIDE IN COLLAPSE CONDITION             PCKT4050
 3060 KTAB(KONE) = K1                                                   PCKT4060
      GO TO 3870                                                        PCKT4070
 3140 IF(ALPHA-ADDEM1) 3240,2140,2140                                   PCKT4080
 3240 KT1 = KTWO                                                        PCKT4090
      KT2 = KONE                                                        PCKT4100
      ITEST = K4                                                        PCKT4110
      GO TO 2340                                                        PCKT4120
 3340 IF(ALPHA) 2140,2140,3350                                          PCKT4130
 3350 IF(ALPHA-ADDEM1) 5940,5940,3440                                   PCKT4140
 3440 KT1 = KT2                                                         PCKT4150
      KT2 = KTWO                                                        PCKT4160
 3450 KT2 = KT2+K1                                                      PCKT4170
      IF(KT2-NC) 3460,3460,3480                                         PCKT4180
 3460 IF(KTAB(KT2)) 3470,3470,3450                                      PCKT4190
 3470 ITEST = K5                                                        PCKT4200
      GO TO 2040                                                        PCKT4210
 3480 KT2 = K1                                                          PCKT4220
 3490 IF(KTAB(KT2)) 3470,3470,3510                                      PCKT4230
 3510 KT2 = KT2+K1                                                      PCKT4240
      IF(KT2-KT1-K1) 3490,2140,2140                                     PCKT4250
 3540 IF(ALPHA) 2140,2140,3640                                          PCKT4260
 3640 IF(ALPHA-ADDEM1) 3740,3740,2140                                   PCKT4270
 3740 KT1 = KT2                                                         PCKT4280
      KT2 = KONE                                                        PCKT4290
      ITEST = K6                                                        PCKT4300
      GO TO 2340                                                        PCKT4310
 3840 IF(ALPHA) 2140,2140,3850                                          PCKT4320
 3850 IF(ALPHA-ADDEM1) 3860,3860,2140                                   PCKT4330
C...  SIDE OUTSIDE POLYGON-PLACE SIDE IN COLLAPSE CONDITION             PCKT4340
 3860 KTAB(KTWO) = K1                                                   PCKT4350
 3870 SR2 = .FALSE.                                                     PCKT4360
 3880 SR3 = .FALSE.                                                     PCKT4370
      GO TO 7270                                                        PCKT4380
 5940 DO 6040 L=1,3                                                     PCKT4390
 6040 PTINT(L) = XIPRIM(L,KT1)+ALPHA*UPRIM(L,KT1)                       PCKT4400
 8941 GO TO (925,932),INTER                                             PCKT4410
  942 CONTINUE                                                          PCKT4420
      IF(NC-NCUTBK) 944,944,1942                                        PCKT4430
 1942 IF(KALC) 8942,2942,8942                                           PCKT4440
 2942 IF(OVRIDE) 3942,5942,3942                                         PCKT4450
 8942 IF(OVRIDE) 3942,9941,3942                                         PCKT4460
 9941 SR5=.TRUE.                                                        PCKT4470
 3942 DO 4942 J=1,NCUTBK                                                PCKT4480
      DO 4942 I=1,3                                                     PCKT4490
 4942 COR(I,J)=CTEMP(I,J)                                               PCKT4500
      GO TO 904                                                         PCKT4510
 5942 IF ( .NOT. SR5 ) GO TO 6942                                       PCKT4520
      SR5 = .FALSE.                                                     PCKT4530
  943 IF ( .NOT. SR4 )  GO TO 6942                                      PCKT4540
      SR4 = .FALSE.                                                     PCKT4550
      GO TO 3942                                                        PCKT4560
 6942 IF(PHITMP-SPHIO2) 7942,3942,3942                                  PCKT4570
 7942 SPHIO2=PHITMP                                                     PCKT4580
      DUMMY=RADEFF/CUTRAD*(Z1+SPHIO2)                                   PCKT4590
      IF(OFSETC-DUMMY) 2943,2943,9942                                   PCKT4600
 9942 OFCSTO=DUMMY                                                      PCKT4610
      IF(OFSETF-DUMMY) 3943,3943,1943                                   PCKT4620
 1943 OFFSTO=DUMMY                                                      PCKT4630
      GO TO 4943                                                        PCKT4640
 2943 OFCSTO=OFSETC                                                     PCKT4650
 3943 OFFSTO=OFSETF                                                     PCKT4660
 4943 DUMMY=Z2*RADEFF/CUTRAD*SPHIO2                                     PCKT4670
      IF(OFSETC-DUMMY) 3942,3942,5943                                   PCKT4680
 5943 OFSETC=DUMMY                                                      PCKT4690
      IF(OFSETF-DUMMY) 7943,7943,6943                                   PCKT4700
 6943 OFSETF=DUMMY                                                      PCKT4710
 7943 SR5=.TRUE.                                                        PCKT4720
      SR4=.TRUE.                                                        PCKT4730
      DIST=DIST-DELDST                                                  PCKT4740
      KALC=K1                                                           PCKT4750
      GO TO (2915,1913,1913,1914,1914),MOVE                             PCKT4760
  944 IF(KALC) 946,945,946                                              PCKT4770
  945 SR1=.FALSE.                                                       PCKT4780
      SR2=.FALSE.                                                       PCKT4790
      SR3=.FALSE.                                                       PCKT4800
      SR4=.FALSE.                                                       PCKT4810
      SR5=.FALSE.                                                       PCKT4820
C     COVERAGE TESTS                                                    PCKT4830
  946 RTEST=Z2*RADEFF                                                   PCKT4840
      KOVER=K2                                                          PCKT4850
      GO TO 949                                                         PCKT4860
  947 RTEST=RADEFF                                                      PCKT4870
      KOVER=K1                                                          PCKT4880
  949 DO 968 J=1,NC                                                     PCKT4890
      DO 965 L=2,NLESS1                                                 PCKT4900
      K=J+L                                                             PCKT4910
      IF(K-NC) 951,951,950                                              PCKT4920
  950 K=K-NC                                                            PCKT4930
  951 GO TO (952,954),KOVER                                             PCKT4940
  952 DO 953 I=1,3                                                      PCKT4950
  953 Y(I)=XIPRIM(I,K)-XIPRIM(I,J+1)                                    PCKT4960
  954 DO 955 I=1,3                                                      PCKT4970
  955 T(I)=XIPRIM(I,K)-XIPRIM(I,J)                                      PCKT4980
      ADDEM1=Z0                                                         PCKT4990
      ADDEM2=Z0                                                         PCKT5000
      DO 956 I=1,3                                                      PCKT5010
      ADDEM1=T(I)*UPRIM(I,J)+ADDEM1                                     PCKT5020
  956 ADDEM2=T(I)*T(I)+ADDEM2                                           PCKT5030
      DCOV=DSQRT(ADDEM2-ADDEM1**2)                                      PCKT5040
      IF(DCOV-RTEST) 957,957,968                                        PCKT5050
  957 GO TO (958,965),KOVER                                             PCKT5060
  958 ADDEM1=Z0                                                         PCKT5070
      DO 959 I=1,3                                                      PCKT5080
  959 ADDEM1=Y(I)*(-UPRIM(I,J))+ADDEM1                                  PCKT5090
      IF(ADDEM1) 960,965,962                                            PCKT5100
  960 ADDEM1=Z0                                                         PCKT5110
      DO 961 I=1,3                                                      PCKT5120
  961 ADDEM1=Y(I)*Y(I)+ADDEM1                                           PCKT5130
      ADDEM2=DSQRT(ADDEM1)                                              PCKT5140
      IF(ADDEM2-RTEST) 965,965,968                                      PCKT5150
  962 ADDEM1=Z0                                                         PCKT5160
      DO 963 I=1,3                                                      PCKT5170
  963 ADDEM1=T(I)*UPRIM(I,J)+ADDEM1                                     PCKT5180
      IF(ADDEM1) 964,965,965                                            PCKT5190
  964 ADDEM1=DSQRT(ADDEM2)                                              PCKT5200
      IF(ADDEM1-RTEST) 965,965,968                                      PCKT5210
  965 CONTINUE                                                          PCKT5220
      MOVE=K5                                                           PCKT5230
      GO TO (969,967),KOVER                                             PCKT5240
  967 IF(KALC) 980,980,947                                              PCKT5250
  968 CONTINUE                                                          PCKT5260
      GO TO (980,1968),KOVER                                            PCKT5270
 1968 IF(KALC) 980,980,982                                              PCKT5280
  969 ADDEM1=Z0                                                         PCKT5290
      ADDEM2=Z0                                                         PCKT5300
      DO 970 I=1,3                                                      PCKT5310
      ADDEM1=(XIPRIM(I,J)-XIPRIM(I,1))**2+ADDEM1                        PCKT5320
  970 ADDEM2=(XIPRIM(I,J+1)-XIPRIM(I,1))**2+ADDEM2                      PCKT5330
      IF(DSQRT(DABS(ADDEM1))-DSQRT(DABS(ADDEM2))) 971,971,974           PCKT5340
  971 DO 972 I=1,3                                                      PCKT5350
      WD(I)=XIPRIM(I,J)                                                 PCKT5360
  972 XIPRIM(I,1)=XIPRIM(I,J+1)                                         PCKT5370
  973 J=K2                                                              PCKT5380
      NUM=K2                                                            PCKT5390
      GO TO 985                                                         PCKT5400
  974 DO 975 I=1,3                                                      PCKT5410
      WD(I)=XIPRIM(I,J+1)                                               PCKT5420
  975 XIPRIM(I,1)=XIPRIM(I,J)                                           PCKT5430
      GO TO 973                                                         PCKT5440
 3936 DO 4937 J=1,NC                                                    PCKT5442
      DO 4936 I=1,3                                                     PCKT5444
 4936 XIPRIM(I,J)=CTEMP(I,J)                                            PCKT5446
 4937 CONTINUE                                                          PCKT5448
  980 NUM=NPLUS1                                                        PCKT5450
      J=K1                                                              PCKT5460
      GO TO 983                                                         PCKT5470
  981 J=NUM-1                                                           PCKT5480
      NUM=J                                                             PCKT5490
      IF(J) 982,982,983                                                 PCKT5500
  982 GO TO (912,913,914,1914,987),MOVE                                 PCKT5510
  983 DO 984 I=1,3                                                      PCKT5520
  984 WD(I)=XIPRIM(I,J)                                                 PCKT5530
  985 NWD=0                                                             PCKT5540
      CALL AWRITE(POFILE,NWD,WD,6,IR)                                   PCKT5545
 2986 NWD=NWD+1                                                         PCKT5550
      NWDMAX = NWD                                                      PCKT5560
      GO TO 981                                                         PCKT5570
C........INVERT ORDER OF POINTS ON FILE AND OUTPUT TO EXFILE            PCKT5580
C       INSERTING PROPER FEEDRATES                                      PCKT5590
C                                                                       PCKT5600
C                                                                       PCKT5610
C...POCKET MUST GENERATE AT LEAST 3 POINTS                              PCKT5620
  987 IF(NWD.LT.K3) CALL AERR(3510,'POCKET  ')                          PCKT5630
      CALL RECORD (ISEQNO)                                              PCKT5635
C...SET FINAL POINT INDICATOR FOR CLDATA RECORD WRITER                  PCKT5640
      ICL = K3                                                          PCKT5650
C...SET PLUNGE FEEDRATE                                                 PCKT5660
      FEEDRT = FRONE                                                    PCKT5670
C...SET FIRST POINT FLAG TRUE                                           PCKT5680
      FPTFLG = .TRUE.                                                   PCKT5690
C                                                                       PCKT5700
      FPFLG = .FALSE.                                                   PCKT5710
      IF(NWDMAX.EQ.NCORIG+K2) FPFLG = .TRUE.                            PCKT5715
C...  WRITE A FEEDRATE RECORD ON EXFILE                                 PCKT5720
  992 CALL APT299(K1,HFDRT,K1,FEEDRT)                                   PCKT5730
      KCLDAT(4)=ISEQNO                                                  PCKT5735
      NR=0                                                              PCKT5736
      CALL EWRITE(EXFILE,NR,KCLDAT,10,IR)                               PCKT5737
C                                                                       PCKT5740
C...WAS LAST POINT PROCESSED....                                        PCKT5750
  993 IF(NWD.LE.K1) GO TO 9999                                          PCKT5760
C.... NO                                                                PCKT5770
C...WILL FINISH PASS BE COMPLETED WITH NEXT POINT...                    PCKT5780
      IF(NWD.EQ.K2) GO TO 996                                           PCKT5790
C.... NO                                                                PCKT5800
C...SKIP NEXT TEST IF FINISH PASS STARTED                               PCKT5810
      IF (FPFLG) GO TO 998                                              PCKT5820
C...IS IT TIME FOR FINISH PASS...                                       PCKT5830
      IF (NWD.EQ. (NCORIG+K2))GO TO 995                                 PCKT5840
C.... NO                                                                PCKT5850
C...WILLCLEANOUT PASS BE COMPLETED WITH NEXT POINT...                   PCKT5860
  998 IF(NWD.EQ.(NCORIG+K3))GO TO 996                                   PCKT5870
C.... NO                                                                PCKT5880
C...PRODUCE NEXT POINT                                                  PCKT5890
  994 IF(NWD.EQ.NWDMAX) GO TO 997                                       PCKT5900
C                                                                       PCKT5910
  997 NWD = NWD - 1                                                     PCKT5920
      CALL AREAD(POFILE,NWD,TE,6,IR)                                    PCKT5930
      CALL ATAPE                                                        PCKT5940
C                                                                       PCKT5950
C...SET INTERMEDIATE POINT INDICATOR FOR ATAPE (CLDATA RECORD WRITER)   PCKT5960
      ICL = K2                                                          PCKT5970
C...CHECK FIRST POINT FLAG                                              PCKT5980
      IF (.NOT.FPTFLG) GO TO 993                                        PCKT5990
C...FLAG TRUE ...SET FALSE , AND PREPARE FOR POCKET CLEANOUT            PCKT6000
      FPTFLG = .FALSE.                                                  PCKT6010
      FEEDRT = FRTWO                                                    PCKT6020
      IF(NWD.LE.K2)          GO TO 995                                  PCKT6030
      IF(NWD.GT.(NCORIG+K1)) GO TO 992                                  PCKT6040
C...SET FINAL FEEDRATE                                                  PCKT6050
  995 FEEDRT = FRTHRE                                                   PCKT6060
      FPFLG = .TRUE.                                                    PCKT6070
      GO TO 992                                                         PCKT6080
C...SET FINAL POINT INDICATOR FOR ATAPE                                 PCKT6090
  996 ICL = K3                                                          PCKT6100
      GO TO 994                                                         PCKT6110
 9999 CONTINUE                                                          PCKT6112
      RETURN                                                            PCKT6114
       END                                                              PCKT6120
**** SOURCE FILE : M0000948.ORG   ***
*
C.....FORTRAN SUBROUTINE             POLCON...              3/1/68   GK POLC0000
      SUBROUTINE POLCON(SRFACE,NUMBER)                                  POLC0010
      RETURN                                                            POLC0020
       END                                                              POLC0030
**** SOURCE FILE : M0000950.V03   ***
*
C.....FORTRAN SUBROUTINE             PSIS.....              3/1/68   GK PSIS0000
      SUBROUTINE PSIS   (HMOD,ADRESS)                                   PSIS0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              PSIS0020
C                                                                       PSIS0030
C                                                                       PSIS0040
C                                                                       PSIS0050
C                                                                       PSIS0060
      DIMENSION ADRESS(*)                                               PSIS0100
C                                                                       PSIS0190
C                                                                       PSIS0200
      INCLUDE 'TOTAL.INC'                                               PSIS0201
      INCLUDE 'IFXCOR.INC'                                              PSIS0344
      INCLUDE 'KNUMBR.INC'                                              PSIS0470
C                                                                       PSIS0490
C                                                                       PSIS0500
C                                                                       PSIS0510
C                                                                       PSIS0520
C...  ESTABLISHES PART SURFACE PARAMETERS                               PSIS0530
      IPSDEF=0                                                          PSIS0550
      IS=IPS                                                            PSIS0560
      CALL APT234(HMOD,ADRESS)                                          PSIS0570
      RETURN                                                            PSIS0580
       END                                                              PSIS0590
**** SOURCE FILE : M0000955.V02   ***
*
C.....FORTRAN SUBROUTINE             QUAD.....              4/1/68   GK QUAD0000
      SUBROUTINE QUAD                                                   QUAD0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              QUAD0020
C                                                                       QUAD0030
C                                                                       QUAD0040
C                                                                       QUAD0050
C                                                                       QUAD0060
      INCLUDE 'TOTAL.INC'                                               QUAD0171
      INCLUDE 'DSHAR4.INC'                                              QUAD0369
      INCLUDE 'FXCOR.INC'                                               QUAD0673
      INCLUDE 'SV.INC'                                                  QUAD0969
      INCLUDE 'ZNUMBR.INC'                                              QUAD1065
      INCLUDE 'ISV.INC'                                                 QUAD1217
      INCLUDE 'IFXCOR.INC'                                              QUAD1377
      INCLUDE 'KNUMBR.INC'                                              QUAD1521
C                                                                       QUAD1540
C                                                                       QUAD1550
C                                                                       QUAD1560
C                                                                       QUAD1570
C   S(IS) IS PRIMARY ROOT IF EXTANT.  SURD IS SECONDARY IF EXTANT.      QUAD1580
      SURD=Z0                                                           QUAD1590
      IF(DABS(A).GT.Z1EM7) GO TO 100                                    QUAD1600
      IF(DABS(B).GT.Z1EM7) GO TO 30                                     QUAD1610
   20 IER=K1                                                            QUAD1620
      GO TO 999                                                         QUAD1630
C   EQUATION IS LINEAR                                                  QUAD1640
   30 S(IS)=-Z5EM1*C/B                                                  QUAD1650
   40 IF(DABS(S(IS))-Z1EM7) 70,70,50                                    QUAD1660
 50   IF(IOP(IS))60,80,60                                               QUAD1670
   60 IF(S(IS))130,130,80                                               QUAD1680
   70 S(IS)=Z0                                                          QUAD1690
   80 IER=0                                                             QUAD1700
  999 CONTINUE                                                          QUAD1701
      RETURN                                                            QUAD1710
C   EQUATION IS QUADRATIC                                               QUAD1720
  100 SURD=B*B-A*C                                                      QUAD1730
      IF(DABS(SURD).GT.Z1EM7) GO TO 110                                 QUAD1740
C   ROOTS ARE EQUAL                                                     QUAD1750
      SURD=-B/A                                                         QUAD1760
      S(IS)=SURD                                                        QUAD1770
      GO TO 40                                                          QUAD1780
  110 IF(SURD)20,20,120                                                 QUAD1790
C   ROOTS ARE REAL, UNEQUAL.                                            QUAD1800
  120 SURD=-B-DSIGN(DSQRT(SURD),B)                                      QUAD1810
      S(IS)=C/SURD                                                      QUAD1820
      SURD=SURD/A                                                       QUAD1830
C   THUS SURD ABSOLUTELY LARGER THAN S(IS)                              QUAD1840
      GO TO 40                                                          QUAD1850
 130  IF(SURD)135,135,140                                               QUAD1860
 135  IF(IOP(IS))80,80,20                                               QUAD1863
C   LEAST POSITIVE ROOT REQUIRED.  S(IS) NEG, SURD POS, SO EXCHANGE.    QUAD1870
  140 HOLD=SURD                                                         QUAD1880
      SURD=S(IS)                                                        QUAD1890
      S(IS)=HOLD                                                        QUAD1900
      GO TO 80                                                          QUAD1910
       END                                                              QUAD1920
**** SOURCE FILE : M0002894.V04   ***
*
C.....FORTRAN SUBROUTINE           RADAR           AR       5/1/68      00000100
      SUBROUTINE RADAR                                                  00000200
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00000300
C                                                                       00000399
      INCLUDE 'TOTAL.INC'                                               00001301
      INCLUDE 'DSHAR4.INC'                                              00003201
      INCLUDE 'FXCOR.INC'                                               00005901
      INCLUDE 'SV.INC'                                                  00009201
      INCLUDE 'ISV.INC'                                                 00010801
      INCLUDE 'IFXCOR.INC'                                              00012601
      INCLUDE 'ISHR18.INC'                                              00013801
C                                                                       00013900
      INCLUDE 'BLANKCOM.INC'                                            00014000
C                                                                       00014100
      DIMENSION CRDR(3),AXIS1(3),AXIS2(3),AXIS3(3)                      00014200
      DIMENSION RADANG(5)                                               00014300
      DATA RADANG/.5255D0, .1309D0, 1.0472D0, 1.5707D0, .7854D0/        00014400
CC                 30 DEGS   7.5       60       90         45 DEGS      00014500
C                                                                       00014600
      DATA KN/9/                                                        00014800
      DATA ZERO,ONE,ZLIT1/0.0D0,1.0D0,0.8D0/                            00014900
C                                                                       00015000
C              /-PURPOSE OF RADAR IS TO MAKE ADDITIONAL TP,TN TO PIERCE 00015100
C              /-SURFACE AFTER ONE CANDIDATE TP,TN FAILED.              00015200
  100 CONTINUE                                                          00015500
C              /-MDIC IS THE COUNT OF RADAR TRIES WITHOUT SUCCESS       00015600
      MDIC=MDIC+1                                                       00015700
      IF(MDIC.EQ.KN) GO TO 130                                          00015800
      IF(MDIC.GT.KN) GO TO 200                                          00015900
C             /-MDIC IS LES THAN KN, PRELIMINARY RESTART ATTEMPTS.      00016000
C              /-FIRST ATTEMPT IS TO MOVE TP TOWARD LAST GOOD SP        00016100
C              /-IF JENT IS 1 AND IAMDCT 0 NO SP IS AVAILABLE           00016200
      IF(IAMDCT.LT.JENT(IS)) GO TO 130                                  00016300
C              /-TP LIES ONE HALF OF THE WAY BETWEEN TP AND SP          00016400
      DO 125 I=1,3                                                      00016500
      TP(I,IS)=TP(I,IS)+0.6*(SP(I,IS)-TP(I,IS))                         00016600
  125 CONTINUE                                                          00016610
      GO TO 999                                                         00016700
C                                                                       00016800
C              /-CONSTRUCT SURFACE NORMAL THRU EXT TP POINT AND USE THIS00016900
C              /-NORMAL FOR A NEW TN IF POSSIBLE                        00017000
  130 CONTINUE                                                          00017100
      MDIC=KN                                                           00017200
      IF(IUNFL(IS).LE.0) GO TO 100                                      00017300
      DO 134 I=1,3                                                      00017400
      SP(I,IS)=TP(I,IS)                                                 00017410
  134 CONTINUE                                                          00017500
C              /-CALL DIRECTED DISTANCE ROUTINE FOR SURF WITH UNIT NORMA00017600
C              /- THRU EXTERIOR POINT CAPABILITY                        00017700
      IC=ICANON(IS)                                                     00017800
      JSW=ISFIDN(IS)                                                    00017900
      ISTSAV=ISTRUP                                                     00018000
C             /-SET ISTRUP TO 5 FOR SPECIAL CALCULATION IN DD ROUTINES  00018100
      ISTRUP=5                                                          00018200
      GO TO(1,1,3,3,6, 6,6,6,6,6, 139,139,139,6,139),JSW                00018300
C                                                                       00018400
  139 CONTINUE                                                          00018500
      ISTRUP=ISTSAV                                                     00018600
      IF(IER.GT.0) GO TO 100                                            00018700
C              /-USE SN FOR NEW TN                                      00018800
      W1=ONE                                                            00018900
      IF(JTN(IS).EQ.0) W1=-ONE                                          00019000
      DO 140 I=1,3                                                      00019100
      TN(I,IS)=W1*SN(I,IS)                                              00019110
  140 CONTINUE                                                          00019200
      GO TO 999                                                         00019300
C                                                                       00019400
    1 CALL DDPLAN(CANON(IC))                                            00019500
      GO TO 139                                                         00019600
    3 CALL DDCYLN(CANON(IC))                                            00019700
      GO TO 139                                                         00019800
    6 CALL DDQUAD(CANON(IC))                                            00019900
      GO TO 139                                                         00020000
C                                                                       00020100
C              /-SEARCH PATTERN - SEND TOOL RAYS IN CONICAL LAYERS      00020200
C              /-AROUND LAST GOOD TN.                                   00020300
  200 CONTINUE                                                          00020400
      IF(MDIC.LE.KN+28) GO TO 210                                       00020500
C              /-RADAR FAILED IN KN+28 TRIES SO TERMINATE               00020600
      CALL AERR(26803,'RADAR   ')                                       00020700
      GO TO 999                                                         00020800
C                                                                       00020900
  210 CONTINUE                                                          00021000
      JMDIC=MDIC-KN                                                     00021100
      IF(JMDIC.NE.1) GO TO 220                                          00021200
C              /-SET UP BASE SYSTEM OF ORTHONORMAL VECTORS              00021300
C              /-FIRST DETERMINE IF TN CAN BE USED                      00021400
      CALL VNORM(TN(1,IS),TN(1,IS))                                     00021500
      IF(IER.LE.0) GO TO 230                                            00021600
C              /-NO GOOD TOOL NORMAL, RADAR TERMINATES                  00021700
      CALL AERR(26802,'RADAR   ')                                       00021800
      GO TO 999                                                         00021900
C                                                                       00022000
  230 CONTINUE                                                          00022100
C              /-CONSTRUCT COORDINATE SYSTEM AROUND TN                  00022200
      DO 231 I=1,3                                                      00022300
      AXIS1(I)=TN(I,IS)                                                 00022400
  231 AXIS2(I)=ZERO                                                     00022500
      W1=DABS(AXIS1(1))                                                 00022600
      IF(W1.LT.ZLIT1) AXIS2(1)=ONE                                      00022700
      IF(W1.GE.ZLIT1) AXIS2(2)=ONE                                      00022800
      CALL CROSS(AXIS1,AXIS2,AXIS2)                                     00022900
      CALL VNORM(AXIS2,AXIS2)                                           00023000
      CALL CROSS(AXIS1,AXIS2,AXIS3)                                     00023100
C                                                                       00023200
  220 CONTINUE                                                          00023300
C              /-INDEX TO CONICAL ANGLE AROUND TN                       00023400
      ILAYER=(JMDIC-1)/8+1                                              00023500
C              /-DETERMINE MULTIPLE OF SWIVEL ANGLE WITHIN THIS CONE    00023600
      ISWIV=JMDIC-(ILAYER-1)*8-1                                        00023700
      ASWIV=ISWIV*RADANG(5)                                             00023800
      CRDR(1)=DCOS(RADANG(ILAYER))                                      00023900
      W1=DSIN(RADANG(ILAYER))                                           00024000
      CRDR(2)=DCOS(ASWIV)*W1                                            00024100
      CRDR(3)=DSIN(ASWIV)*W1                                            00024200
C              /-DETERMINE TN WITHIN CONICAL LAYER                      00024300
      DO 240 I=1,3                                                      00024400
      TN(I,IS)=CRDR(1)*AXIS1(I)+CRDR(2)*AXIS2(I)+CRDR(3)*AXIS3(I)       00024500
  240 CONTINUE                                                          00024600
C                                                                       00024700
      CALL VNORM(TN(1,IS),TN(1,IS))                                     00024800
      IF(IER.GT.0) GO TO 100                                            00024900
C                                                                       00025000
  999 CONTINUE                                                          00025100
      RETURN                                                            00025200
      END                                                               00025300
**** SOURCE FILE : M0002864.V06   ***
*
C                                                                       SRFV0001
C.....FORTRAN SUBROUTINE             SRFVCT...              3/1/68   GK SRFV0002
      SUBROUTINE SRFVCT(SRFACE,VECTOR)                                  SRFV0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              SRFV0020
C                                                                       SRFV0030
C                                                                       SRFV0040
C                                                                       SRFV0050
C                                                                       SRFV0060
      INCLUDE 'TOTAL.INC'                                               SRFV0171
      INCLUDE 'FXCOR.INC'                                               SRFV0481
      INCLUDE 'HOLRTH.INC'                                              SRFV0545
      INCLUDE 'SV.INC'                                                  SRFV0849
      INCLUDE 'ISV.INC'                                                 SRFV1001
      INCLUDE 'IFXCOR.INC'                                              SRFV1161
      INCLUDE 'ISHR18.INC'                                              SRFV1273
      INCLUDE 'KNUMBR.INC'                                              SRFV1417
C                                                                       SRFV1418
C     25. COMMON FOR AERR INFORMATION                                   SRFV1460
C                                                                       SRFV1465
      COMMON /AERCOM/ IAERFG,NPCTPT,PCTPTS,PCTPLN,ERRPTS                SRFV1470
      DIMENSION PCTPTS(3,20),PCTPLN(4),ERRPTS(3,3)                      SRFV1475
C                                                                       SRFV1480
      CHARACTER*8 TEST                                                  SRFV1482
      INTEGER IHDS(2),BCDF                                              SRFV1484
      EQUIVALENCE (IHDS,VALHDS)                                         SRFV1486
C                                                                       SRFV1490
C...  NEW DIRECTION OF MOTION IS ALONG VECTOR                           SRFV1500
C...  STORE DIRECTION VECTORS FOR DS,PS,CS AS REQUIRED                  SRFV1510
      DIMENSION VECTOR(3)                                               SRFV1520
      TEMP(1)=SRFACE                                                    SRFV1530
    3 K=IDS                                                             SRFV1540
      CALL HOLFRM(TEMP(1),TEST,1,8,NWD)                                 SRFV1545
      IF(HDS.EQ.TEST) GO TO 5                                           SRFV1550
      K=IPS                                                             SRFV1560
      IF(HPS.EQ.TEST) GO TO 5                                           SRFV1570
      K=ICS                                                             SRFV1580
      IF(HCS.NE.TEST) GO TO 50                                          SRFV1590
    5 DO 10 I=1,3                                                       SRFV1600
      SFVCT(1,K)=VECTOR(I)                                              SRFV1610
   10 CONTINUE                                                          SRFV1620
      CALL TRANSM (SFVCT(1,K),VECTOR,3,3,0)                             SRFV1622
      CALL VNORM(SFVCT(1,K),SFVCT(1,K))                                 SRFV1630
      IF(IER)30,30,20                                                   SRFV1640
   30 ISVFL(K)=K1                                                       SRFV1650
 1000 CONTINUE                                                          SRFV1660
      RETURN                                                            SRFV1661
   20 IAERFG=1                                                          SRFV1670
      CALL AERR(21101,'SRFVCT  ')                                       SRFV1675
      IAERR=0                                                           SRFV1680
      GO TO 1000                                                        SRFV1690
   50 CALL AERR(-21102,'SRFVCT  ')                                      SRFV1700
      IHDS(1) = BCDF(HDS(1:4))                                          SRFV1702
      IHDS(2) = BCDF(HDS(5:8))                                          SRFV1704
      TEMP(1)=VALHDS                                                    SRFV1710
      GO TO 3                                                           SRFV1720
       END                                                              SRFV1730
**** SOURCE FILE : SVCOPY00.ORG   ***
*
      SUBROUTINE SVCOPY(I,J)                                            00000100
C                                                                       00000200
      INCLUDE 'SV.INC'                                                  00000300
C                                                                       00000400
      DO 10 K=1,3                                                       00000500
      CC(K,J) = CC(K,I)                                                 00000600
      PLNV(K,J) = PLNV(K,I)                                             00000700
      SFVCT(K,J) = SFVCT(K,I)                                           00000800
      SLX(K,J) = SLX(K,I)                                               00000900
      SN(K,J) = SN(K,I)                                                 00001000
      SNK(K,J) = SNK(K,I)                                               00001100
      SNL(K,J) = SNL(K,I)                                               00001200
      SP(K,J) = SP(K,I)                                                 00001300
      SPK(K,J) = SPK(K,I)                                               00001400
      SPL(K,J) = SPL(K,I)                                               00001500
      TN(K,J) = TN(K,I)                                                 00001600
      TOOLHT(K,J) = TOOLHT(K,I)                                         00001700
      TP(K,J) = TP(K,I)                                                 00001800
      TPK(K,J) = TPK(K,I)                                               00001900
      U1(K,J) = U1(K,I)                                                 00002000
      VNDIR(K,J) = VNDIR(K,I)                                           00002100
      VT(K,J) = VT(K,I)                                                 00002200
      U1K(K,J) = U1K(K,I)                                               00002300
      SK(K,J) = SK(K,I)                                                 00002400
10      CONTINUE                                                        00002500
                                                                        00002600
      EPS1(J) = EPS1(I)                                                 00002700
      EPS2(J) = EPS2(I)                                                 00002800
      EPS3(J) = EPS3(I)                                                 00002900
      EPS4(J) = EPS4(I)                                                 00003000
      EPS6(J) = EPS6(I)                                                 00003100
      EPS8(J) = EPS8(I)                                                 00003200
      PAST(J) = PAST(I)                                                 00003300
      PLND(J) = PLND(I)                                                 00003400
      RC(J) = RC(I)                                                     00003500
      S(J) = S(I)                                                       00003600
      SAVE(J) = SAVE(I)                                                 00003700
      TAU(J) = TAU(I)                                                   00003800
      TAU1(J) = TAU1(I)                                                 00003900
      TAU2(J) = TAU2(I)                                                 00004000
      TH(J) = TH(I)                                                     00004100
      TOOLWD(J) = TOOLWD(I)                                             00004200
      Z(J) = Z(I)                                                       00004300
      VARBLE(J) = VARBLE(I)                                             00004400
C                                                                       00004500
      RETURN                                                            00004600
      END                                                               00004700
                                                                        00004800
**** SOURCE FILE : M0002868.W01   ***
*
C.....FORTRAN SUBROUTINES      THICK & THICKH                 8/68   PH THCK0001
C.....FORTRAN SUBROUTINES      THICK & THICKH               4/1/68   GK THCK0002
C                                                                       THCK0003
      SUBROUTINE THICK(NMBR,THK)                                        THCK0010
C                                                                       THCK0011
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              THCK0020
C                                                                       THCK0030
C                                                                       THCK0040
C                                                                       THCK0050
C                                                                       THCK0060
      INCLUDE 'TOTAL.INC'                                               THCK0171
      INCLUDE 'SV.INC'                                                  THCK0417
      INCLUDE 'ISV.INC'                                                 THCK0531
      INCLUDE 'IFXCOR.INC'                                              THCK0651
      INCLUDE 'ISHR18.INC'                                              THCK0735
      INCLUDE 'KNUMBR.INC'                                              THCK0843
      INCLUDE 'ZNUMBR.INC'                                              THCK0844
C                                                                       THCK0845
      CHARACTER*8 PPWORD                                                THCK0920
      INTEGER IPPWRD(2),BCDF                                            THCK0925
      DATA  PPWORD /'THICK '/                                           THCK0930
C                                                                       THCK0940
      COMMON/HOLD/JHLDFG,ITHCNT,ITABH(100)                              THCK0941
      COMMON/HSAVE/SAVEH(50)                                            THCK0942
      EQUIVALENCE(SAVEH(36),NUMBER),(SAVEH(37),THKNES(1))               THCK0943
      DIMENSION THK(4)                                                  THCK0944
C                                                                       THCK0950
C                                                                       THCK0960
C...  APPLY THE SPECIFIED DECIMAL NUMBERS AS THICKNESSES TO THE         THCK0970
C...  PART,DRIVE AND CHECK SURFACES RESPECTIVELY                        THCK0980
      DIMENSION THKNES(4)                                               THCK0990
      NUMBER=NMBR                                                       THCK0991
      DO 500 I=1,4                                                      THCK0992
  500 THKNES(I)=THK(I)                                                  THCK0993
      IF(JHLDFG.EQ.0) GO TO 501                                         THCK0994
      ITABH(ITHCNT)=13                                                  THCK0995
      ITHCNT=ITHCNT+1                                                   THCK0996
      RETURN                                                            THCK0997
C                                                                       THCK0998
  501 CONTINUE                                                          THCK0999
      IF(NUMBER.GT.NUMSFS) GO TO 40                                     THCK1000
    5 IS=IPS                                                            THCK1010
      DO 30 I=K1,NUMSFS                                                 THCK1020
      IF(I .LE. NUMBER)GO TO 6                                          THCK1022
C     IF I IS GREATER THAN NUMBER, THEN STUFF REMAINING SURFACES WITH   THCK1023
C     LAST THICK VALUE    IE   THKNES(NUMBER)                           THCK1024
      TH(IS)=THKNES(NUMBER)                                             THCK1026
      GO TO 7                                                           THCK1028
    6 TH(IS)=THKNES(I)                                                  THCK1030
    7 IF(IS-ICS)10,20,20                                                THCK1040
   10 IS=IS+LSV                                                         THCK1050
      GO TO 30                                                          THCK1060
   20 IS=IS+LSV1                                                        THCK1070
   30 CONTINUE                                                          THCK1080
      JENT(IDS) = K1                                                    THCK1082
      JENT(IPS) = K1                                                    THCK1084
      GO TO 42                                                          THCK1090
C                                                                       THCK1095
   40 CALL AERR(-22701,'THICK   ')                                      THCK1100
      NUMBER=NUMSFS                                                     THCK1110
      GO TO 5                                                           THCK1120
C                                                                       THCK1130
C...     OUTPUT PART PROGRAM COMMAND ON EXFILE                          THCK1140
   42 IPPWRD(1)=BCDF(PPWORD(1:4))                                       THCK1145
      IPPWRD(2)=BCDF(PPWORD(5:8))                                       THCK1146
      CALL APT299(NUMBER,IPPWRD,1,THKNES(1))                            THCK1147
      IF (NUMBER .LE. 1) GO TO 60                                       THCK1150
      KK=1                                                              THCK1155
      DO 50  J=2,NUMBER,2                                               THCK1160
        IF (J .NE. NUMBER) THEN                                         THCK1165
          CALL APT299(1,THKNES(J),1,THKNES(J+1))                        THCK1170
        ELSE                                                            THCK1175
          CALL APT299(1,THKNES(J),0,Z0)                                 THCK1180
        ENDIF                                                           THCK1182
   50 CONTINUE                                                          THCK1185
C                                                                       THCK1190
   60 RETURN                                                            THCK1195
      END                                                               THCK1200
C                                                                       THCK1210
C                                                                       THCK1220
C                                                                       THCK1230
C                                                                       THCK1240
C.....FORTRAN SUBROUTINE  ....THICKH          8/68                    PHTHKH0001
C.....FORTRAN SUBROUTINE             THICKH....              4/1/68   GKTHKH0002
C                                                                       THKH0003
      SUBROUTINE THICKH                                                 THKH0010
C                                                                       THKH0011
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              THKH0020
C                                                                       THKH0030
C                                                                       THKH0040
C                                                                       THKH0050
C                                                                       THKH0060
      INCLUDE 'TOTAL.INC'                                               THKH0171
      INCLUDE 'SV.INC'                                                  THKH0417
      INCLUDE 'ISV.INC'                                                 THKH0531
      INCLUDE 'IFXCOR.INC'                                              THKH0651
      INCLUDE 'ISHR18.INC'                                              THKH0735
      INCLUDE 'KNUMBR.INC'                                              THKH0843
      INCLUDE 'ZNUMBR.INC'                                              THKH0844
C                                                                       THKH0845
      CHARACTER*8 PPWORD                                                THKH0920
      INTEGER IPPWRD(2),BCDF                                            THKH0925
      DATA  PPWORD /'THICK '/                                           THKH0930
C                                                                       THKH0940
      COMMON/HSAVE/SAVEH(50)                                            THKH0942
      EQUIVALENCE(SAVEH(36),NUMBER),(SAVEH(37),THKNES(1))               THKH0943
      DIMENSION THK(4)                                                  THKH0944
C                                                                       THKH0950
C                                                                       THKH0960
C...  APPLY THE SPECIFIED DECIMAL NUMBERS AS THICKNESSES TO THE         THKH0970
C...  PART,DRIVE AND CHECK SURFACES RESPECTIVELY                        THKH0980
      DIMENSION THKNES(4)                                               THKH0990
C                                                                       THKH0991
      IF(NUMBER.GT.NUMSFS) GO TO 40                                     THKH1000
    5 IS=IPS                                                            THKH1010
      DO 30 I=K1,NUMSFS                                                 THKH1020
      IF(I .LE. NUMBER)GO TO 6                                          THKH1022
C     IF I IS GREATER THAN NUMBER, THEN STUFF REMAINING SURFACES WITH   THKH1023
C     LAST THICK VALUE    IE   THKNES(NUMBER)                           THKH1024
      TH(IS)=THKNES(NUMBER)                                             THKH1026
      GO TO 7                                                           THKH1028
    6 TH(IS)=THKNES(I)                                                  THKH1030
    7 IF(IS-ICS)10,20,20                                                THKH1040
   10 IS=IS+LSV                                                         THKH1050
      GO TO 30                                                          THKH1060
   20 IS=IS+LSV1                                                        THKH1070
   30 CONTINUE                                                          THKH1080
      JENT(IDS) = K1                                                    THKH1082
      JENT(IPS) = K1                                                    THKH1084
      GO TO 42                                                          THKH1090
C                                                                       THKH1095
   40 CALL AERR(-22701,'THICKH  ')                                      THKH1100
      NUMBER=NUMSFS                                                     THKH1110
      GO TO 5                                                           THKH1120
C                                                                       THKH1130
C...     OUTPUT PART PROGRAM COMMAND ON EXFILE                          THKH1140
   42 IPPWRD(1)=BCDF(PPWORD(1:4))                                       THKH1145
      IPPWRD(2)=BCDF(PPWORD(5:8))                                       THKH1146
      CALL APT299(NUMBER,IPPWRD,1,THKNES(1))                            THKH1147
      IF (NUMBER .LE. 1) GO TO 60                                       THKH1150
      KK=1                                                              THKH1155
      DO 50  J=2,NUMBER,2                                               THKH1160
        IF (J .NE. NUMBER) THEN                                         THKH1165
          CALL APT299(1,THKNES(J),1,THKNES(J+1))                        THKH1170
        ELSE                                                            THKH1175
          CALL APT299(1,THKNES(J),0,Z0)                                 THKH1180
        ENDIF                                                           THKH1182
   50 CONTINUE                                                          THKH1185
C                                                                       THKH1190
   60 RETURN                                                            THKH1195
      END                                                               THKH1200
**** SOURCE FILE : M0000733.W01   ***
*
C                                                                       TINK0001
C.....FORTRAN SUBROUTINE             TINKR....              4/1/68   GK TINK0002
      SUBROUTINE TINKR                                                  TINK0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              TINK0020
C                                                                       TINK0030
C                                                                       TINK0040
C                                                                       TINK0050
C                                                                       TINK0060
      INCLUDE 'TOTAL.INC'                                               TINK0171
      INCLUDE 'DSHAR4.INC'                                              TINK0369
      INCLUDE 'FXCOR.INC'                                               TINK0673
      INCLUDE 'SV.INC'                                                  TINK0969
      INCLUDE 'ZNUMBR.INC'                                              TINK1065
      INCLUDE 'ISV.INC'                                                 TINK1217
      INCLUDE 'IFXCOR.INC'                                              TINK1377
      INCLUDE 'ISHR18.INC'                                              TINK1489
      INCLUDE 'KNUMBR.INC'                                              TINK1633
C                                                                       TINK1650
C                                                                       TINK1660
C                                                                       TINK1670
      DATA ZLIT1/.999999D0/                                             TINK1680
C                                                                       TINK1690
C...  NOTE- IN THIS PROGRAM BOTH ITL AND ITT ARE PROGRAM VARIABLES      TINK1691
C           AND DO NOT APPEAR IN COMMON                                 TINK1692
      JTR = 1                                                           TINK1700
      IPS = IPS                                                         TINK1710
      IDS = IDS                                                         TINK1720
C...     MULTAX = 1 - FIXED TA, MULTAX = 2 - PS CONTROL, MULTAX = 3     TINK1730
C...     DS CONTROL.                                                    TINK1740
      ITL  = IDS                                                        TINK1750
      ITT = IPS                                                         TINK1760
      IF (MANTAX - 2) 350,10,20                                         TINK1770
   10 ITL  = IPS                                                        TINK1780
      ITT = IDS                                                         TINK1790
C...     NUMAX = 0 - 4-AXIS, NUMAX = 1 - 5-AXIS, NUMAX = 2 -            TINK1800
C...     RULED SURFACE, NUMAX = 3 - NEW SURFACE, NUMAX = 4 -            TINK1810
C...     PIVOT POINT                                                    TINK1820
   20 I = NUMAX + 1                                                     TINK1830
      GO TO (230,30,270,40,320),I                                       TINK1840
   30 AX4(1)= TN(1,ITT)                                                 TINK1850
      AX4(2)= TN(2,ITT)                                                 TINK1860
      AX4(3)= TN(3,ITT)                                                 TINK1870
C...     AX4 IS NORMAL TO SECONDARY SURFACE.                            TINK1880
C...     TEMP(7) IS NORMAL TO PLANE OF AX4 AND TN(ITL).                 TINK1890
   40 CALL CROSS(AX4,TN(1,ITL),TEMP(7))                                 TINK1900
      CALL VNORM(TEMP(7),TEMP(7))                                       TINK1910
      IF (IER) 50,60,50                                                 TINK1920
C...     NORMALS COINCIDE - LET TEMP(7) = TI                            TINK1930
   50 TEMP(7) = TI(1)                                                   TINK1940
      TEMP(8) = TI(2)                                                   TINK1950
      TEMP(9) = TI(3)                                                   TINK1960
C...     TEMP IS X-AXIS OF PLANE OF NEW TOOL AXIS.                      TINK1970
   60 CALL CROSS (TN(1,ITL),TEMP(7),TEMP)                               TINK1980
      CALL VNORM (TEMP,TEMP)                                            TINK1990
      IF (IER) 340,70,340                                               TINK2000
C...     TEMP(10),TEMP(11) ARE SIN AND COS OF LEAD-LAG ANGLE            TINK2010
   70 TEMP(10)=DSIN(ALP)                                                TINK2020
      TEMP(11)=DCOS(ALP)                                                TINK2030
      IF (TEMP(7)*TI(1) +TEMP(8)*TI(2) +TEMP(9)*TI(3)) 80,90,90         TINK2040
   80 TEMP(10) = -TEMP(10)                                              TINK2050
C...     ROTATE PLANE OF CALCULATION - TEMP(4) IS Y-AXIS OF TA PLANE    TINK2060
   90 DO 100 I=1,3                                                      TINK2070
  100 TEMP(I+3) = TEMP(10)*TEMP(I+6) + TEMP(11) *TN(I,ITL)              TINK2090
      CALL VNORM (TEMP(4),TEMP(4))                                      TINK2100
C                                                                       TINK2110
C     COMPUTE NEW TA W/O ANY MODIFICATIONS = T7                         TINK2120
C                                                                       TINK2130
  105 DO 110 I = 1, 3                                                   TINK2140
  110 TEMP(I+6)= - SAGL * TEMP(I) - CAGL * TEMP(I+3)                    TINK2150
      CALL VNORM(TEMP(7),TEMP(7))                                       TINK2160
      IF(IER) 340, 120, 340                                             TINK2170
C                                                                       TINK2180
C     DOT NEW TA AND OLD TA = T12                                       TINK2190
C                                                                       TINK2200
  120 TEMP(12)=TEMP(7)*TA(1) + TEMP(8)*TA(2) + TEMP(9)*TA(3)            TINK2210
C                                                                       TINK2220
C     IF DOT .LT. 0 REVERSE NEW TA                                      TINK2230
C                                                                       TINK2240
      IF(TEMP(12)) 121, 125, 125                                        TINK2250
  121 TEMP(7) = - TEMP(7)                                               TINK2260
      TEMP(8) = - TEMP(8)                                               TINK2270
      TEMP(9) = - TEMP(9)                                               TINK2280
      TEMP(12) = - TEMP(12)                                             TINK2290
C                                                                       TINK2300
C6    IF DOT .GT. .999995 SET JTKF = 1 + RETURN                         TINK2310
C                                                                       TINK2320
  125 IF(TEMP(12)-ZLIT1) 135,130,130                                    TINK2330
  130 JTKF = 1                                                          TINK2340
      GO TO 350                                                         TINK2350
C                                                                       TINK2360
  135 IF(JCNT1 + JCNT3 - 45) 136,136,138                                TINK2370
  136 KDB = KDB + 1                                                     TINK2380
      TDB = KDB                                                         TINK2390
      DO 137 I = 1,3                                                    TINK2400
      TEMP(12) = TA(I)                                                  TINK2410
      TA(I)=(TDB*TEMP(I+6)+TA(I))/(TDB+1.0)                             TINK2420
  137 TEMP(I+6) = TEMP(12)                                              TINK2430
      CALL VNORM(TA,TA)                                                 TINK2440
      GO TO 140                                                         TINK2450
  138 DO 1385 I = 1, 3                                                  TINK2460
      TEMP(12) = TA(I)                                                  TINK2470
      TA(I) = TEMP(I+6)                                                 TINK2480
 1385 TEMP(I+6) = TEMP(12)                                              TINK2490
 1388 KDB = 0                                                           TINK2500
  140 JTR = 0                                                           TINK2510
  145 IF (NUMAX-4) 150,350,150                                          TINK2520
C...     ROTATE TOOL ABOUT CONTACT POINT OF CONTROLLING SURFACE         TINK2530
C...     DETERMINE INITIAL ORIENTATION OF TE TO TA.                     TINK2540
C...     TEMP(4) IS PERP. TO PLANE OF OLD TA,TE,AND TP(ITL)             TINK2550
  150 TEMP(1) = TE(1) - TP(1,ITL) + TH(ITL)*TN(1,ITL)                   TINK2560
      TEMP(2) = TE(2) - TP(2,ITL) + TH(ITL)*TN(2,ITL)                   TINK2570
      TEMP(3) = TE(3) - TP(3,ITL) + TH(ITL)*TN(3,ITL)                   TINK2580
      CALL CROSS (TEMP(7),TEMP,TEMP(4))                                 TINK2590
      CALL VNORM (TEMP(4),TEMP(4))                                      TINK2600
      IF (IER) 350,160,350                                              TINK2610
C                                                                       TINK2620
C...     TEMP IS PERP. TO NEW TA IN PLANE OF TN(ITL)                    TINK2621
  160 CALL CROSS (TN(1,ITL),TA,TEMP)                                    TINK2630
      CALL CROSS (TA,TEMP,TEMP)                                         TINK2640
  170 CALL VNORM (TEMP,TEMP)                                            TINK2650
      IF (IER) 180,190,180                                              TINK2660
  180 CALL CROSS (TEMP(7),TEMP(4),TEMP)                                 TINK2670
      CALL VNORM ( TEMP , TEMP )                                        TINK2680
C...     CALCULATE VECTOR IN PLANE OF TA AND TEMP WHICH WILL BE         TINK2690
C...     FROM TP(ITL) TO NEW TE. RA, HI ARE COORDINATES OF RING.        TINK2700
  190 DO 200 I=1,3                                                      TINK2710
  200 TEMP(I+9) = RA*TEMP(I) - HI*TA(I)                                 TINK2720
C...     TEMP(13) IS PERP. TO PLANE OF NEW TA,TP(ITL), AND NEW TE.      TINK2730
C...     ORIENTATION OF TEMP(4) AND TEMP(13) MUST BE SAME.              TINK2740
      CALL CROSS (TA,TEMP(10),TEMP(13))                                 TINK2750
      TEMP(14)=TEMP(4)*TEMP(13)+TEMP(5)*TEMP(14)+TEMP(6)*TEMP(15)       TINK2760
      IF (TEMP(14)) 210,220,220                                         TINK2770
  210 DO 215 I = 1, 3                                                   TINK2780
  215 TEMP(I+9) = - (RA*TEMP(I) + HI*TA(I))                             TINK2790
  220 TE(1)=TEMP(10)+TP(1,ITL)                                          TINK2800
      TE(2) = TEMP(11) +TP(2,ITL)                                       TINK2810
      TE(3) = TEMP(12) +TP(3,ITL)                                       TINK2820
      GO TO 350                                                         TINK2830
C                                                                       TINK2840
C...     4-AXIS CASE - TA MUST LIE IN PLANE PERP. TO AX4                TINK2850
C        TEMP IS X-AXIS OF PLANE OF NEW TA.                             TINK2860
  230 CALL CROSS (TN(1,ITL),AX4,TEMP)                                   TINK2870
      CALL VNORM (TEMP,TEMP)                                            TINK2880
      IF (IER) 350,240,350                                              TINK2890
C...     TEMP MUST BE IN DIRECTION OF TN(ITT).                          TINK2900
  240 TEMP(10)= TN(1,ITT)*TEMP(1) +TN(2,ITT)*TEMP(2) +TN(3,ITT)*TEMP(3) TINK2910
      IF (TEMP(10)) 250,260,260                                         TINK2920
  250 TEMP(1)=-TEMP(1)                                                  TINK2930
      TEMP(2) =-TEMP(2)                                                 TINK2940
      TEMP(3) =-TEMP(3)                                                 TINK2950
C...     TEMP(4) IS X-AXIS IN PLANE OF NEW TA.                          TINK2960
  260 CALL CROSS (AX4,TEMP,TEMP(4))                                     TINK2970
      CALL VNORM (TEMP(4),TEMP(4))                                      TINK2980
      IF (IER) 340,105,340                                              TINK2990
C...     RULED SURFACE.                                                 TINK3000
C        TA WILL BE PARALLEL TO RULING.                                 TINK3010
  270 DO 280 I = 1, 3                                                   TINK3020
  280 TEMP(I+6) = SLX(I,ITL)                                            TINK3040
      GO TO 120                                                         TINK3050
C...     PIVOT POINT - AXIS WILL PASS THRU POINT AX4, ROTATE AROUND TE. TINK3060
  320 DO 330 I=1,3                                                      TINK3070
      TEMP(I+6) =TA(I)                                                  TINK3080
  330 TA(I) = AX4(I) - TE(I)                                            TINK3090
      CALL VNORM(TA,TA)                                                 TINK3100
      IF (IER) 335,120,335                                              TINK3110
  335 DO 336 I=1,3                                                      TINK3120
  336 TA(I) = TEMP(I+6)                                                 TINK3130
      GO TO 350                                                         TINK3140
  340 JTR = -1                                                          TINK3150
  350 CONTINUE                                                          TINK3160
      RETURN                                                            TINK3170
       END                                                              TINK3180
**** SOURCE FILE : M0002872.W01   ***
*
C.....FORTRAN SUBROUTINE  ....TLAXIS         8/68                    PH TLAX0001
C                                                                       TLAX0002
      SUBROUTINE TLAXIS(NUMBER,NPRD,PARAM)                              TLAX0010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              TLAX0020
C                                                                       TLAX0030
C                                                                       TLAX0040
C                                                                       TLAX0050
C                                                                       TLAX0060
      INCLUDE 'TOTAL.INC'                                               TLAX0171
      INCLUDE 'FXCOR.INC'                                               TLAX0446
      INCLUDE 'ZNUMBR.INC'                                              TLAX0530
      INCLUDE 'ISV.INC'                                                 TLAX0663
      INCLUDE 'IFXCOR.INC'                                              TLAX0803
      INCLUDE 'ISHR18.INC'                                              TLAX0901
      INCLUDE 'KNUMBR.INC'                                              TLAX1027
C                                                                       TLAX1028
      INCLUDE 'GLFLGS.INC'                                              TLAX1135
C                                                                       TLAX1136
C...   COMMON BLOCK FOR AERR INFORMATION                                TLAX1140
C                                                                       TLAX1150
      COMMON/AERCOM/IAERFG                                              TLAX1160
C                                                                       TLAX1161
C...  COMMON FOR >PLOTFT/GOLOFT<                                        TLAX1162
C                                                                       TLAX1163
      DIMENSION IPLGO(26),COSAL(10),SINAL(10),CUTY(10),CUTX(10),CUTL(10)TLAX1164
      DIMENSION ICSEG(10),NLIOCI(10)                                    TLAX1165
      DIMENSION VTA(3)                                                  TLAX1166
C                                                                       TLAX1167
      COMMON/PLGOL/IPLGO,JCSEG,NCSEG,ICSEG,NLIOCI,                      TLAX1168
     +             COSAL,SINAL,CUTY,CUTX,CUTL,VTA                       TLAX1169
C                                                                       TLAX1170
      DIMENSION PARAM(9)                                                TLAX1180
      CHARACTER*6 TEST,DS,HLAG                                          TLAX1181
      DATA DS/'DS    '/,HLAG/'LAG   '/                                  TLAX1185
C                                                                       TLAX1202
C...     IF MULTAX HAS NOT BEEN SPECIFIED ISSUE WARNING DIAGNOSTIC      TLAX1204
      IF (MULOUT .NE. 1) CALL AERR(-22300,'TLAXIS  ')                   TLAX1206
C                                                                       TLAX1208
      JTLFLG(IPS)=0                                                     TLAX1210
      JTLFLG(IDS)=0                                                     TLAX1220
      IPRD=NPRD/100                                                     TLAX1230
      NPRD=NPRD-IPRD*100                                                TLAX1232
      IAUTAG=0                                                          TLAX1234
      MOTDIR=0                                                          TLAX1236
      IF (NPRD.NE.9) RINGFG=.FALSE.                                     TLAX1238
      IP2=2                                                             TLAX1239
    1 IF (NPRD.LT.5) IP2=IP2-1                                          TLAX1240
C            1   2   3   4  5  6  7  8  9 10 11  12  13  14  15         TLAX1241
      GOTO(201,202,203,204,72,15,50,20,10,75,30,212,213,214,215,        TLAX1250
C           16  17  18  19  20  21  22                                  TLAX1255
     *     216,217,218,218,220,220,222),NPRD                            TLAX1260
C                                                                       TLAX1270
C     **TLAXIS/1**                                                      TLAX1280
C                                                                       TLAX1290
   10 IF (PARAM(1).NE.Z1)GOTO 150                                       TLAX1295
      MANTAX=K1                                                         TLAX1300
      GO TO 140                                                         TLAX1310
C                                                                       TLAX1320
C     **TLAXIS/NORMPS**                                                 TLAX1330
C                                                                       TLAX1340
15    MANTAX=K2                                                         TLAX1350
      GAMMA=K0                                                          TLAX1360
      GO TO 28                                                          TLAX1370
C                                                                       TLAX1380
C     **TLAXIS/NORMDS**                                                 TLAX1390
C                                                                       TLAX1400
20    MANTAX=K3                                                         TLAX1410
      GAMMA=PI                                                          TLAX1420
C     **SET VALUES FOR NUMAX,RA & HI FOR TLAXIS/NORMPS & TLAXIS/NORMDS**TLAX1430
28    NUMAX=K1                                                          TLAX1440
      ALP=Z0                                                            TLAX1445
      RA=Z0                                                             TLAX1450
      HI=Z0                                                             TLAX1460
      GO TO 110                                                         TLAX1470
C                                                                       TLAX1480
C     **TLAXIS/PARLEL,1 OR TLAXIS/PARLEL,2 **                           TLAX1490
C                                                                       TLAX1500
30    IF(PARAM(2).LE.Z0.OR.PARAM(2).GT.Z2)GO TO 150                     TLAX1515
      GAMMA=Z0                                                          TLAX1516
  31  II=7                                                              TLAX1520
C     **IF BETA IS GREATER THAN 0,SET RA&HI AT UPPER LINE SEGMENT**     TLAX1530
      IF(CUTDAT(6).GT.Z1EM7)GO TO 40                                    TLAX1540
C     **SET RA&HI AT INTERSECTION OF UPPER&LOWER LINE SEGMENTS**        TLAX1550
      II=6                                                              TLAX1560
C     **IF CORNER RADIUS IS GREATER THAN 0,RA=XH&HI=YH**                TLAX1570
      IF(CUTDAT(2).GT.Z0)II=5                                           TLAX1580
C     **IF BETA IS NEGATIVE,SET RA&HI AT EXTREMITY OF CORNER CIRCLE**   TLAX1590
      IF(CUTDAT(6).LT.Z0)GO TO 45                                       TLAX1600
40    RA=RI(II)                                                         TLAX1610
      HI=TLHITE(II)                                                     TLAX1620
      GO TO 48                                                          TLAX1630
45    RA=CUTDAT(3)+CUTDAT(2)                                            TLAX1640
      HI=CUTDAT(4)                                                      TLAX1650
48    MANTAX=K3                                                         TLAX1660
      IF(PARAM(2).EQ.Z1)MANTAX=K2                                       TLAX1665
      NUMAX=IP2                                                         TLAX1670
      IF (NUMBER.EQ.9)GOTO 96                                           TLAX1680
      ALP=Z0                                                            TLAX1690
      AX4(1)=Z0                                                         TLAX1700
      AX4(2)=Z0                                                         TLAX1710
      AX4(3)=Z0                                                         TLAX1720
      GO TO 110                                                         TLAX1730
C                                                                       TLAX1760
C     **TLAXIS/V OR TLAXIS/I,J,K**                                      TLAX1770
C                                                                       TLAX1780
50    MANTAX=K1                                                         TLAX1790
      CALL TRANSM(TA,PARAM,3,3,0)                                       TLAX1800
      CALL VNORM(TA,TA)                                                 TLAX1810
      GO TO 140                                                         TLAX1830
C                                                                       TLAX1840
C     **TLAXIS/A,B,RA,HI **                                             TLAX1850
C     **TLAXIS/PARLEL,1,RA,HI OR TLAXIS/PARLEL,2,RA,HI**                TLAX1860
C     **TLAXIS/A,B,RA,HI,GAMMA,I,J,K**                                  TLAX1863
C     **TLAXIS/A,B,RA,HI,GAMMA,I,J,K,ALPHA**                            TLAX1865
C                                                                       TLAX1870
72    IF(PARAM(1).EQ.Z0.OR.PARAM(1).GE.4.0)GO TO 150                    TLAX1890
      IF(PARAM(2).GT.K4)GO TO 150                                       TLAX1900
      GO TO 80                                                          TLAX1910
   75 IF(PARAM(2).GE.Z3) GO TO 150                                      TLAX1920
   76 PARAM(1)=PARAM(2)+Z1                                              TLAX1922
C...                                                                    TLAX1926
   80 IF (NUMBER .GE. 9) GOTO 95                                        TLAX1928
      DO 90 I=NUMBER,8                                                  TLAX1930
90    PARAM(I+1)=Z0                                                     TLAX1940
   95 CONTINUE                                                          TLAX1945
100   MANTAX=PARAM(1)                                                   TLAX1950
      NUMAX=IP2                                                         TLAX1960
      RA=PARAM(3)                                                       TLAX1970
      HI=PARAM(4)                                                       TLAX1980
      GAMMA=DEGRAD*PARAM(5)                                             TLAX1990
   96 ALP=-DEGRAD*PARAM(9)                                              TLAX2000
      AX4(1)=PARAM(6)                                                   TLAX2010
      AX4(2)=PARAM(7)                                                   TLAX2020
      AX4(3)=PARAM(8)                                                   TLAX2030
      RINGFG=.TRUE.                                                     TLAX2032
      IF (SQRT(AX4(1)*AX4(1)+AX4(2)*AX4(2)+AX4(3)*AX4(3)).GT.1.D-10)    TLAX2033
     *          CALL VNORM(AX4,AX4)                                     TLAX2034
C                                                                       TLAX2040
C     **EXIT ROUTES**                                                   TLAX2050
C                                                                       TLAX2060
110   TLHITE(8)=HI                                                      TLAX2070
      RI(8)=RA                                                          TLAX2080
      SAGL=DSIN(GAMMA)                                                  TLAX2090
      CAGL=DCOS(GAMMA)                                                  TLAX2100
      IF(MANTAX-K2)140,120,130                                          TLAX2110
120   JTLFLG(IPS)=K1                                                    TLAX2120
      GO TO 140                                                         TLAX2130
130   JTLFLG(IDS)=K1                                                    TLAX2140
140   RETURN                                                            TLAX2150
C                                                                       TLAX2160
C     **ERROR-INVALID TLAXIS FORMAT**                                   TLAX2170
C                                                                       TLAX2180
  150 IAERFG=1                                                          TLAX2190
      CALL AERR(22301,'TLAXIS  ')                                       TLAX2195
      RETURN                                                            TLAX2200
C       NO CUTTER DEFINED TO COMPUTE DISC RADIUS RA OR DISC HIGHT HI.   TLAX2210
  160 IAERFG=1                                                          TLAX2220
      CALL AERR(22219,'TLAXIS  ')                                       TLAX2230
      RETURN                                                            TLAX2240
C                                                                       TLAX2250
C      NEW TLAXIS FORMATS INSTALLED AT 10.12.84                         TLAX2260
C                                                                       TLAX2270
C 201 **TLAXIS/ATANGL,PS,GAMMA,RADIUS,RA,HIGHT,HI**                     TLAX2280
C 212 **TLAXIS/PARLEL,DS,RADIUS,RA,HIGHT,HI**                           TLAX2290
C                                                                       TLAX2300
  201 PARAM(5)=180.D0-PARAM(5)                                          TLAX2310
  212 PARAM(1)=Z1                                                       TLAX2320
      CALL HOLFRM(PARAM(2),TEST,1,6,NWD)                                TLAX2325
      IF(TEST.EQ.DS)PARAM(1)=Z2                                         TLAX2330
      PARAM(2)=PARAM(1)                                                 TLAX2340
      GOTO 76                                                           TLAX2350
C                                                                       TLAX2360
C 204 **TLAXIS/ATANGL,DS,GAMMA**                                        TLAX2370
C 215 **TLAXIS/PARLEL,PS OR TLAXIS/PARLEL,DS **                         TLAX2380
C                                                                       TLAX2390
  204 GAMMA=(180.D0-PARAM(5))*DEGRAD                                    TLAX2400
  215 PARAM(1)=Z1                                                       TLAX2420
      CALL HOLFRM(PARAM(2),TEST,1,6,NWD)                                TLAX2425
      IF(TEST.EQ.DS)PARAM(1)=Z2                                         TLAX2430
      PARAM(2)=PARAM(1)                                                 TLAX2440
      GOTO 31                                                           TLAX2450
C                                                                       TLAX2460
C 202 **TLAXIS/ATANGL,DS,GAMMA,RADIUS,RA**                              TLAX2470
C 213 **TLAXIS/PARLEL,PS,RADIUS,RA**                                    TLAX2480
C                                                                       TLAX2490
  202 PARAM(5)=180.D0-PARAM(5)                                          TLAX2500
  213 PARAM(4)=Z0                                                       TLAX2510
      IF(NCSEG.EQ.0)GOTO 160                                            TLAX2520
      DO 313 I=1,NCSEG                                                  TLAX2530
      IF(NLIOCI(I).EQ.1)GOTO 311                                        TLAX2540
      IF(CUTL(I).EQ.0.D0)GOTO 313                                       TLAX2550
C           COMPUTATION OF SEGMENT AND RADIUS ON CIRCLE                 TLAX2560
      SERA=CUTX(I)+CUTL(I)*SINAL(I)                                     TLAX2570
      IF(SERA.LT.PARAM(3))GOTO 313                                      TLAX2580
C           COMPUTATION OF HI                                           TLAX2590
      PARAM(4)=CUTY(I)-SQRT(CUTL(I)*CUTL(I)-(PARAM(3)-CUTX(I))**2)      TLAX2600
      GOTO 212                                                          TLAX2610
C           COMPUTATION OF SEGMENT AND RADIUS ON LINE                   TLAX2620
  311 SERA=CUTX(I)+CUTL(I)*COSAL(I)                                     TLAX2630
      IF(SERA.LT.PARAM(3))GOTO 313                                      TLAX2640
C           COMPUTATION OF HI                                           TLAX2650
      IF(DABS(COSAL(I)).LT.1.D-8)GOTO 312                               TLAX2660
      PARAM(4)=CUTY(I)+(PARAM(3)-CUTX(I))*SINAL(I)/COSAL(I)             TLAX2670
      GOTO 212                                                          TLAX2680
  312 PARAM(4)=CUTY(I)+CUTL(I)                                          TLAX2690
      GOTO 212                                                          TLAX2700
  313 CONTINUE                                                          TLAX2710
      PARAM(4)=CUTY(NCSEG)                                              TLAX2720
      GOTO 212                                                          TLAX2730
C                                                                       TLAX2740
C 203 **TLAXIS/ATANGL,DS,GAMMA,HIGHT,HI**                               TLAX2750
C 214 **TLAXIS/PARLEL,PS,HIGHT,HI**                                     TLAX2760
C                                                                       TLAX2770
  203 PARAM(5)=180.D0-PARAM(5)                                          TLAX2780
  214 PARAM(3)=Z0                                                       TLAX2790
      IF(NCSEG.EQ.0)GOTO 160                                            TLAX2800
      DO 315 I=1,NCSEG                                                  TLAX2810
      IF(NLIOCI(I).EQ.1)GOTO 314                                        TLAX2820
      IF(CUTL(I).EQ.0.D0)GOTO 315                                       TLAX2830
C           COMPUTATION OF SEGMENT AND HEIGHT ON CIRCLE                 TLAX2840
      SEHI=CUTY(I)-CUTL(I)*COSAL(I)                                     TLAX2850
      IF(SEHI.LT.PARAM(4))GOTO 315                                      TLAX2860
C           COMPUTATION OF RA                                           TLAX2870
      PARAM(3)=SQRT(CUTL(I)*CUTL(I)-(PARAM(4)-CUTY(I))**2)+CUTX(I)      TLAX2880
      GOTO 212                                                          TLAX2890
C           COMPUTATION OF SEGMENT AND HEIGHT ON LINE                   TLAX2900
  314 SEHI=CUTY(I)+CUTL(I)*SINAL(I)                                     TLAX2910
      IF(SEHI.LT.PARAM(4))GOTO 315                                      TLAX2920
C           COMPUTATION OF RA                                           TLAX2930
      IF(ABS(SINAL(I)).LT.1.D-8)GOTO 316                                TLAX2940
      PARAM(3)=CUTX(I)+(PARAM(4)-CUTY(I))*COSAL(I)/SINAL(I)             TLAX2950
      GOTO 212                                                          TLAX2960
  316 PARAM(3)=CUTX(I)+CUTL(I)                                          TLAX2970
      GOTO 212                                                          TLAX2980
  315 CONTINUE                                                          TLAX2990
      PARAM(3)=CUTX(NCSEG)                                              TLAX3000
      GOTO 212                                                          TLAX3010
C                                     LAG                               TLAX3020
C 216 **TLAXIS/ATANGL,........,CUTANG,LEAD,ALPHA                        TLAX3030
C 217 **TLAXIS/ATANGL,........,CUTANG,ALPHA                             TLAX3040
C                                                                       TLAX3050
  216 CALL HOLFRM(PARAM(NUMBER-1),TEST,1,6,NWD)                         TLAX3060
      IF(TEST.EQ.HLAG)PARAM(NUMBER)=-PARAM(NUMBER)                      TLAX3065
  217 PARAM(9)=PARAM(NUMBER)                                            TLAX3070
      DO 317 I=6,8                                                      TLAX3080
  317 PARAM(I)=Z0                                                       TLAX3090
      NUMBER=9                                                          TLAX3100
      GOTO 331                                                          TLAX3110
C                                     LAG                               TLAX3120
C 218 **TLAXIS/ATANGL,........,CUTANG,LEAD,AUTO                         TLAX3130
C 219 **TLAXIS/ATANGL,........,CUTANG,AUTO                              TLAX3140
C                                                                       TLAX3150
  218 IAUTAG=1                                                          TLAX3160
      CALL HOLFRM(PARAM(NUMBER-1),TEST,1,6,NWD)                         TLAX3165
      IF(TEST.EQ.HLAG)IAUTAG=-1                                         TLAX3170
      GOTO 330                                                          TLAX3180
C                                     LINE                              TLAX3190
C 220 **TLAXIS/ATANGL,........,PARLEL,PLANE                             TLAX3200
C 221 **TLAXIS/ATANGL,........,PERPTO,VECTOR                            TLAX3210
C                                                                       TLAX3220
  220 NUMBER=9                                                          TLAX3230
      PARAM(9)=Z0                                                       TLAX3240
      IP2=IP2-1                                                         TLAX3250
      GOTO 331                                                          TLAX3260
C                                                                       TLAX3270
C 222 **TLAXIS/ATANGL,........,MOTDIR                                   TLAX3280
C                                                                       TLAX3290
  222 MOTDIR=1                                                          TLAX3300
      IP2=IP2-1                                                         TLAX3310
C                                                                       TLAX3320
  330 NUMBER=5                                                          TLAX3330
  331 NPRD=IPRD                                                         TLAX3340
      GOTO 1                                                            TLAX3350
C                                                                       TLAX3360
      END                                                               TLAX3370
**** SOURCE FILE : M0000971.V03   ***
*
C                                                                       TLFT0010
C...FORTRAN SUBROUTINES TLLFT,TLRGT,TLON,TLONPS,TLOFPS... 5/9/72        TLFT0020
C                                                                       TLFT0021
C                                                                       TLFT0022
      SUBROUTINE TLLFT                                                  TLFT0030
C                                                                       TLFT0031
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TLFT0040
C                                                                       TLFT0050
C                                                                       TLFT0060
C                                                                       TLFT0070
C                                                                       TLFT0080
      INCLUDE 'TOTAL.INC'                                               TLFT0191
      INCLUDE 'LDEF.INC'                                                TLFT0251
      INCLUDE 'ISV.INC'                                                 TLFT0451
      INCLUDE 'IFXCOR.INC'                                              TLFT0651
C                                                                       TLFT0652
C.... TOOL IS LEFT OF DS                                                TLFT0660
C                                                                       TLFT0670
      I = 1                                                             TLFT0680
      J = 1                                                             TLFT0690
      K = 1                                                             TLFT0700
      L = IDS                                                           TLFT0710
C                                                                       TLFT0730
C                                                                       TLFT1060
      MOTMOD = I                                                        TLFT1070
      ISFTYP(L) = J                                                     TLFT1080
      IF(ITLON(L).EQ.K) GO TO 10                                        TLFT1090
      ITLON(L) = K                                                      TLFT1100
      JENT(L) = 1                                                       TLFT1110
   10 RETURN                                                            TLFT1120
      END                                                               TLFT1130
C                                                                       TLFT1140
C                                                                       TLFT1150
C                                                                       TLFT1160
C                                                                       TLFT1170
C                                                                       TLFT2010
      SUBROUTINE TLRGT                                                  TLFT2030
C                                                                       TLFT2031
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TLFT2040
C                                                                       TLFT2050
C                                                                       TLFT2060
C                                                                       TLFT2070
C                                                                       TLFT2080
      INCLUDE 'TOTAL.INC'                                               TLFT2191
      INCLUDE 'LDEF.INC'                                                TLFT2251
      INCLUDE 'ISV.INC'                                                 TLFT2451
      INCLUDE 'IFXCOR.INC'                                              TLFT2651
C                                                                       TLFT2652
C                                                                       TLFT2730
C.... TOOL IS RIGHT OF DS                                               TLFT2740
C                                                                       TLFT2750
      I = 2                                                             TLFT2770
      J = 1                                                             TLFT2780
      K = 1                                                             TLFT2790
      L = IDS                                                           TLFT2800
C                                                                       TLFT2820
C                                                                       TLFT3060
      MOTMOD = I                                                        TLFT3070
      ISFTYP(L) = J                                                     TLFT3080
      IF(ITLON(L).EQ.K) GO TO 10                                        TLFT3090
      ITLON(L) = K                                                      TLFT3100
      JENT(L) = 1                                                       TLFT3110
   10 RETURN                                                            TLFT3120
      END                                                               TLFT3130
C                                                                       TLFT3140
C                                                                       TLFT3150
C                                                                       TLFT3160
C                                                                       TLFT3170
C                                                                       TLFT4010
      SUBROUTINE TLON                                                   TLFT4030
C                                                                       TLFT4031
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TLFT4040
C                                                                       TLFT4050
C                                                                       TLFT4060
C                                                                       TLFT4070
C                                                                       TLFT4080
      INCLUDE 'TOTAL.INC'                                               TLFT4191
      INCLUDE 'LDEF.INC'                                                TLFT4251
      INCLUDE 'ISV.INC'                                                 TLFT4451
      INCLUDE 'IFXCOR.INC'                                              TLFT4651
C                                                                       TLFT4652
C                                                                       TLFT4820
C.... TOOL END IS ON DS                                                 TLFT4830
C                                                                       TLFT4841
      I = 3                                                             TLFT4850
      J = 3                                                             TLFT4860
      K = 0                                                             TLFT4870
      L = IDS                                                           TLFT4880
C                                                                       TLFT4900
C                                                                       TLFT5060
      MOTMOD = I                                                        TLFT5070
      ISFTYP(L) = J                                                     TLFT5080
      IF(ITLON(L).EQ.K) GO TO 10                                        TLFT5090
      ITLON(L) = K                                                      TLFT5100
      JENT(L) = 1                                                       TLFT5110
   10 RETURN                                                            TLFT5120
      END                                                               TLFT5130
C                                                                       TLFT5140
C                                                                       TLFT5150
C                                                                       TLFT5160
C                                                                       TLFT5170
C                                                                       TLFT6010
      SUBROUTINE TLONPS                                                 TLFT6030
C                                                                       TLFT6031
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TLFT6040
C                                                                       TLFT6050
C                                                                       TLFT6060
C                                                                       TLFT6070
C                                                                       TLFT6080
      INCLUDE 'TOTAL.INC'                                               TLFT6191
      INCLUDE 'LDEF.INC'                                                TLFT6251
      INCLUDE 'ISV.INC'                                                 TLFT6451
      INCLUDE 'IFXCOR.INC'                                              TLFT6651
C                                                                       TLFT6652
C                                                                       TLFT6900
C.... TOOL END IS ON PS                                                 TLFT6910
C                                                                       TLFT6920
      J = 3                                                             TLFT6940
      K = 0                                                             TLFT6950
      L = IPS                                                           TLFT6960
C                                                                       TLFT6980
C                                                                       TLFT7060
      ISFTYP(L) = J                                                     TLFT7080
      IF(ITLON(L).EQ.K) GO TO 10                                        TLFT7090
      ITLON(L) = K                                                      TLFT7100
      JENT(L) = 1                                                       TLFT7110
   10 RETURN                                                            TLFT7120
      END                                                               TLFT7130
C                                                                       TLFT7140
C                                                                       TLFT7150
C                                                                       TLFT7160
C                                                                       TLFT7170
C                                                                       TLFT8010
      SUBROUTINE TLOFPS                                                 TLFT8030
C                                                                       TLFT8031
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TLFT8040
C                                                                       TLFT8050
C                                                                       TLFT8060
C                                                                       TLFT8070
C                                                                       TLFT8080
      INCLUDE 'TOTAL.INC'                                               TLFT8191
      INCLUDE 'LDEF.INC'                                                TLFT8251
      INCLUDE 'ISV.INC'                                                 TLFT8451
      INCLUDE 'IFXCOR.INC'                                              TLFT8651
C                                                                       TLFT8652
C                                                                       TLFT8980
C.... TOOL IS TANGENT TO PS                                             TLFT8990
C                                                                       TLFT9000
      J = 1                                                             TLFT9020
      K = 1                                                             TLFT9030
      L = IPS                                                           TLFT9040
C                                                                       TLFT9060
C                                                                       TLFT9061
      ISFTYP(L) = J                                                     TLFT9080
      IF(ITLON(L).EQ.K) GO TO 10                                        TLFT9090
      ITLON(L) = K                                                      TLFT9100
      JENT(L) = 1                                                       TLFT9110
   10 RETURN                                                            TLFT9120
      END                                                               TLFT9130
C                                                                       TLFT9140
C                                                                       TLFT9150
C                                                                       TLFT9160
C                                                                       TLFT9170
**** SOURCE FILE : M0002898.W06   ***
*
C.....FORTRAN SUBROUTINE  ....TLNORM         8/68                 PH,HG 00000100
C..... FORTRAN SUBROUTINE            TLNORM...              4/8/68   GK 00000200
      SUBROUTINE TLNORM(U1VAR)                                          00000300
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             00000400
C                                                                       00000500
C                                                                       00000600
C                                                                       00000700
C                                                                       00000800
      INCLUDE 'TOTAL.INC'                                               00001901
      INCLUDE 'DSHAR4.INC'                                              00004301
      INCLUDE 'FXCOR.INC'                                               00008101
      INCLUDE 'SV.INC'                                                  00011801
      INCLUDE 'ISV.INC'                                                 00013701
      INCLUDE 'IFXCOR.INC'                                              00015701
      INCLUDE 'ZNUMBR.INC'                                              00015702
C                                                                       00017050
      INCLUDE 'BLANKCOM.INC'                                            00017200
      INCLUDE 'CHEKFL.INC'                                              00017400
C                                                                       00017700
      DIMENSION U1VAR(3),TNOLD(3),TPOLD(3),SNOLD(3),SPOLD(3)            00017800
C                                                                       00017900
      COMMON/MODESS/MODESS,MSSCHK,MSSARL                                00018000
C                                                                       00018100
      DIMENSION TPSPDF(3)                                               00018200
C                                                                       00018210
      DATA ZBIG/1.D30/,Z4/4.D0/,Z3EM4/3.D-4/,Z5EM3/5.D-3/,Z5EM4/5.D-4/  00018220
      DATA Z700,Z9999,Z995,ZBIG2/700.D0,0.9999D0,.995D0,1.D20/          00018230
      DATA ZERO,ONE/0.0D0,1.0D0/                                        00018240
C                                                                       00018250
C-----------------------------------------------------------            00018300
C             /-JFIND IS -1 WHEN AT LEAST ONE TOOL SEG HAS LINED UP     00018600
C             /-WITH THE CENTER OF CURVATURE                            00018700
C             /-IBB=-1 FOR 1ST PASS THRU TLNORM, =0 ON SECOND PASS      00018800
      JFIND=1                                                           00018900
      IBB=-1                                                            00019000
  805 CONTINUE                                                          00019100
C              /-IT IS TOOL SEGMENT INDEX  =1 AT TIP,2,3,4 ETC          00019200
C              /-IT=7 IS LAST SEGMENT, =8 IS DISC. IBEGIN IS FIRST      00019300
C              /-SIGNIFICANT TOOL SEGMENT.                              00019400
      IT=IBEGIN                                                         00019500
      DO 12 I=1,3                                                       00019600
   12 UVEC(I)=U1VAR(I)                                                  00019700
C                                                                       00019800
      IF(MSSCHK.EQ.1) GO TO 3029                                        00019900
C-----------------------------------------------------------            00020000
C              /-TEST FOR ROUTE                                         00020100
C                                                                       00020200
C              /-ITLON IS 0 IF TOOL ON SURF, 1 OTHERWISE                00020300
      IF(ITLON(IS).EQ.0) GO TO 1                                        00020400
C              /-IAFL=-1, GENERAL SURF, 0 PLANE PERP TO TA, 1 CYL LL TA 00020500
C              /-JTLFLG=0 FOR NORMAL CUTTER, =1 FOR DISC TYPE.          00020600
C                                                                       00020700
      IW=IAFL(IS)+JTLFLG(IS)                                            00020800
C              /-IAFL,JTLFLG = 0,1,  1,1,  OR 1,0                       00020900
      IF(IW.GT.0) GO TO 401                                             00021000
C              /-IAFL,JTLFLG = -1,1, 0,0                                00021100
      IF(IW.EQ.0) GO TO 404                                             00021200
C              /-IAFL=-1,JTLFLG=0                                       00021300
      IF(IPT1.NE.0) GO TO 84                                            00021400
      GO TO 1                                                           00021500
C                                                                       00021600
C              /-TA LL TO SURFACE ELEMENT                               00021700
C                                                                       00021800
  401 CONTINUE                                                          00021900
      DO 402 I=1,3                                                      00022000
      TP(I,IS)=TE(I)+TOOLWD(IS)*UVEC(I)+TOOLHT(I,IS)                    00022100
      TN(I,IS)=UVEC(I)                                                  00022200
  402 CONTINUE                                                          00022300
C              /-TP,TN FOUND, RETURN TO CALLING PROGRAM                 00022400
      GO TO 9999                                                        00022500
C              /-CASE OF POINT CUTTER                                   00022600
    1 CONTINUE                                                          00022700
C              /-TEMP(1) IS +OR-1 TO SELECT CUTTER SIDE                 00022800
C              /-TEMP(2) IS 0 OR 1                                      00022900
      TEMP(2)=ZERO                                                      00023000
      DO 21 I=1,3                                                       00023100
   21 TP(I,IS)=TE(I)                                                    00023200
      ITSEG(IS)=1                                                       00023300
      GO TO 408                                                         00023400
C                                                                       00023500
C-----------------------------------------------------------            00023600
C                                                                       00023700
C              /-TLON, POINT TOOL, 5-AXIS RING ROUTES                   00023800
  404 CONTINUE                                                          00023900
      IF(RI(8).EQ.ZERO) GO TO 406                                       00024000
      TEMP(1)=-ONE                                                      00024100
      TEMP(2)=ONE                                                       00024200
      GO TO 407                                                         00024300
  406 CONTINUE                                                          00024400
      TEMP(2)=ZERO                                                      00024500
  407 CONTINUE                                                          00024600
      DO 405 I=1,3                                                      00024700
  405 TP(I,IS)=TE(I)+TLHITE(8)*TA(I)+TEMP(1)*RI(8)*UVEC(I)              00024800
      ITSEG(IS)=8                                                       00024900
  408 CONTINUE                                                          00025000
      DO 2 I=1,3                                                        00025100
      TN(I,IS)=CC(I,IS)-TP(I,IS)                                        00025110
    2 CONTINUE                                                          00025200
C              /-LL MAY BE 3,4 OR 5                                     00025300
      LL=TEMP(1)*TEMP(2)+Z4                                             00025400
      CALL VNORM(TN(1,IS),TN(1,IS))                                     00025500
      IF(IER.EQ.0) GO TO 8                                              00025600
C**** ERROR EXIT, TN CANNOT BE FOUND                                    00025700
    3 CONTINUE                                                          00025800
      IF(TEMP(2).GT.ZERO) GO TO 410                                     00025900
      CALL AERR(26601,'TLNORM  ')                                       00026000
      GO TO 9999                                                        00026100
C                                                                       00026200
  410 TEMP(LL)=-ONE                                                     00026300
C                                                                       00026400
  417 CONTINUE                                                          00026500
      IF(TEMP(1).GE.ZERO) GO TO 418                                     00026600
      DO 503 I=1,3                                                      00026700
      TEMP(I+5)=TN(I,IS)                                                00026800
  503 TEMP(I+8)=TP(I,IS)                                                00026900
      TEMP(1)=ONE                                                       00027000
      GO TO 407                                                         00027100
C                                                                       00027200
  418 CONTINUE                                                          00027300
      IF(TEMP(5).GE.TEMP(3)) GO TO 505                                  00027400
C              /-TEMP(5) IS LT TEMP(3)                                  00027500
      DO 506 I=1,3                                                      00027600
      TN(I,IS)=TEMP(I+5)                                                00027700
      TP(I,IS)=TEMP(I+8)                                                00027800
  506 CONTINUE                                                          00027900
  505 CONTINUE                                                          00028000
C              /-JTLFLG NE 1 MEANS IGNORE DISC CUTTER                   00028100
      IF(JTLFLG(IS).NE.1) GO TO 9999                                    00028200
      IF(IPL(IS).NE.1) GO TO 9999                                       00028300
C              /-PLANAR SURFACE CASE                                    00028400
      CALL DOTF(W1,TA,SN(1,IS))                                         00028500
      IF(DABS(W1).LT.Z995) GO TO 9999                                   00028600
C              /-SN AND TA ARE CLOSE, LOOK FURTHER                      00028700
      IF(JTN(IS).GT.0) GO TO 9999                                       00028800
C              /-SURFACE IS DS OR PS, CONTINUE                          00028900
      GO TO 413                                                         00029000
C                                                                       00029100
    8 CONTINUE                                                          00029200
      IF(TEMP(2).GT.ZERO) GO TO 412                                     00029300
C              /-TEMP(2) IS LE ZERO                                     00029400
      IF(JTN(IS).GT.0) GO TO 414                                        00029500
  413 CONTINUE                                                          00029600
C              /-JTN(IS) IS ZERO, NORMAL PS OR DS SURFACE               00029700
      CALL DOTF(W1,SN(1,IS),TN(1,IS))                                   00029800
C              /- WHEN TN AND SN ARE OPPOSED, FINISH                    00029900
      IF(W1.LE.ZERO) GO TO 9999                                         00030000
C              /-ELSE CHECK FURTHER                                     00030100
      GO TO 340                                                         00030200
  414 CONTINUE                                                          00030300
C              /-JTN NOT ZERO, CHECK SURFACE, TN CONTROL                00030400
      CALL DOTF(W1,TN(1,IS),TNL(1,IS))                                  00030500
C              /-LAST TWO TNS ALIGNED, THEN QUIT                        00030600
      IF(W1.GT.ZERO) GO TO 9999                                         00030700
      IF(W1.LT.ZERO) GO TO 340                                          00030800
C              /-CHECK FURTHER IF TN PERPEN TO TNL                      00030900
      CALL DOTF(W1,TN(1,IS),SN(1,IS))                                   00031000
      IF(W1.GE.ZERO) GO TO 9999                                         00031100
  340 CONTINUE                                                          00031200
C              /-REVERSE TN AND THEN TERMINATE                          00031300
      DO 341 I=1,3                                                      00031400
      TN(I,IS)=-TN(I,IS)                                                00031410
  341 CONTINUE                                                          00031500
      GO TO 9999                                                        00031600
C                                                                       00031700
  412 CONTINUE                                                          00031800
      CALL DOTF(W1,TN(1,IS),UVEC)                                       00031900
      IF(TEMP(1)*W1.GE.ZERO) GO TO 502                                  00032000
C              /-REVERSE TN                                             00032100
      DO 501 I=1,3                                                      00032200
      TN(I,IS)=-TN(I,IS)                                                00032210
  501 CONTINUE                                                          00032300
  502 CONTINUE                                                          00032400
      IF(JTN(IS).LE.0) CALL DOTF(W1,TN(1,IS),SN(1,IS))                  00032500
      IF(JTN(IS).LE.0) TEMP(LL)=-W1                                     00032600
      IF(JTN(IS).GT.0) CALL DOTF(TEMP(LL),TN(1,IS),TNL(1,IS))           00032700
      GO TO 417                                                         00032800
C-----------------------------------------------------------            00032900
C                                                                       00033000
C              /-START NORMAL ROUTE. SPECIAL PATH FOR END TOOL          00033100
C                                                                       00033200
   84 CONTINUE                                                          00033300
      TCONT(8)=-ONE                                                     00033400
      NNN=1                                                             00033500
      IF(JTN(IS).EQ.0) IT=ITSEG(IS)                                     00033600
C.... CONSIDER PRECEDING AS WELL AS CURRENT AND FOLLOWING TOOL SEGMENTS 00033630
      IF (IT.GE.4) IT=IT-2                                              00033650
      CENDIS=ZBIG                                                       00033700
      WFL1=ZERO                                                         00033750
      IT=IT-NNN                                                         00033800
C                                                                       00033900
C              /-INCREMENT TOOL SEGMENT, TRY AGAIN                      00034000
 2000 CONTINUE                                                          00034100
      IT=IT+NNN                                                         00034200
C              /-TCONT=0 MEANS SEGMENT INSIGNIFICANT                    00034300
      IF(TCONT(IT).EQ.ZERO) GO TO 2000                                  00034400
C              /-TCONT=-1 MEANS ALL SEGS OF TOOL DONE, SELECT TN.       00034500
      IF(TCONT(IT).GE.ZERO) GO TO 700                                   00034600
C                                                                       00034700
C              /-END OF TOOL.  ONLY ONE POSSIBLE TN.                    00034800
C                                                                       00034900
      IF(JFIND.LE.0) GO TO 9999                                         00035000
      TEMP(1)=2*JTN(IS)-1                                               00035100
      DO 8223 I=1,3                                                     00035200
      TN(I,IS)=TEMP(1)*SN(I,IS)                                         00035210
 8223 CONTINUE                                                          00035300
      CALL DOTF(COM1,TA,TN(1,IS))                                       00035400
      COM1=-COM1                                                        00035500
      COM4=DSQRT(ONE-COM1**2)                                           00035600
      IF(COM4.LE.Z1EM3.AND.COM1.GE.ZERO) GO TO 605                      00035700
      IF(COM4.LT.Z1EM3.AND.COM1.LT.ZERO) GO TO 604                      00035800
      TANGL=COM1/COM4                                                   00035900
      IT=IBEGIN                                                         00036000
  704 CONTINUE                                                          00036100
C              /-TCONT LT ZERO MEANS THIS IS LAST TOOL SEGMENT          00036200
      IF(TCONT(IT).LT.ZERO) GO TO 3                                     00036300
C              /-TCONT GT ZERO MEANS THIS IS ORDINARY TOOL SEGMENT      00036400
      IF(TCONT(IT).GT.ZERO) GO TO 706                                   00036500
C              /-TCONT EQ ZERO MEANS INSIGNIFICANT TOOL SEGMENT         00036600
  705 CONTINUE                                                          00036700
      IT=IT+1                                                           00036800
      GO TO 704                                                         00036900
  706 CONTINUE                                                          00037000
      IF(TLINC(IT).NE.ZERO) GO TO 705                                   00037100
      IF(TANGL.LT.TANHI(IT)) GO TO 705                                  00037200
      DO 709 I=1,3                                                      00037300
  709 TP(I,IS)=TE(I)+TLHITE(IT)*TA(I)+RI(IT)*UVEC(I)+CORRAD(IT)*TN(I,IS)00037500
      GO TO 9999                                                        00037600
C                                                                       00037700
  700 CONTINUE                                                          00037800
C              /-CONTINUE SEARCH                                        00037900
      DO 15 I=1,3                                                       00038000
      REFPNT(I)=TE(I)+RI(IT)*UVEC(I)+TLHITE(IT)*TA(I)                   00038100
      OGLE(I)=CC(I,IS)-REFPNT(I)                                        00038200
   15 CONTINUE                                                          00038300
      CALL VNORM(OGLE,U2)                                               00038400
C              /-IF OGLE, CANDIDATE TN, IS SMALL, TRY NXT SEG           00038500
      IF(IER.GT.0) GO TO 2000                                           00038600
C              /-IF SURFACE IS PLANAR, USE NORMAL RATHER THAN CC        00038700
      IF(IPL(IS).LT.1) GO TO 155                                        00038800
      DO 153 I=1,3                                                      00038900
      OGLE(I)=-RC(IS)*SN(I,IS)                                          00039000
      U2(I)=-DSIGN(ONE,RC(IS))*SN(I,IS)                                 00039100
  153 CONTINUE                                                          00039200
C                                                                       00039300
  155 CONTINUE                                                          00039400
      IF(TLINC(IT).EQ.ZERO) GO TO 16                                    00039500
      CORRAD(IT)=ZERO                                                   00039600
      DO 41 I=1,3                                                       00039700
      U2(I)=COSL(IT)*UVEC(I)+SINL(IT)*TA(I)                             00039800
   41 CORRAD(IT)=CORRAD(IT)+OGLE(I)*U2(I)                               00039900
C              /-IF CORNER RADIUS IS SMALL, GO TO NEXT SEG              00040000
      IF(CORRAD(IT).LT.-Z3EM4) GO TO 2000                               00040100
C              /-OTHERWISE, GO TO PLANE CALC                            00040200
C              /-IF SURF IS A PLANE, TN MUST BE LL TO TOOL SEG          00040300
   43 CONTINUE                                                          00040400
      IF(IPL(IS).LE.0) GO TO 643                                        00040500
      IF(CORRAD(IT).GE.Z5EM3) GO TO 2000                                00040600
      CORRAD(IT)=ZERO                                                   00040700
      GO TO 44                                                          00040800
  643 CONTINUE                                                          00040900
      IF(CORRAD(IT).GE.UMAX(IT)+Z5EM4) GO TO 2000                       00041000
   44 CONTINUE                                                          00041100
C              /-COSL IS HORIZONTAL AND SINL VERTICAL COMP OF LINEAR SEG00041200
      DO 45 I=1,3                                                       00041300
   45 ZLNORM(I)=SINL(IT)*UVEC(I)-COSL(IT)*TA(I)                         00041400
      GO TO 31                                                          00041500
C                                                                       00041600
   16 CONTINUE                                                          00041700
      CALL DOTF(COM1,OGLE,TA)                                           00041800
      CALL DOTF(COM4,OGLE,OGLE)                                         00041900
      COM4=COM4-COM1**2                                                 00042000
      TEMP(1)=ONE                                                       00042100
      IF(IT.EQ.7) TEMP(1)=-ONE                                          00042200
      TANGL=TEMP(1)*ZBIG                                                00042300
      IF(COM4.GT.ZERO) GO TO 19                                         00042400
      DO 50 I=1,3                                                       00042500
   50 U2(I)=-TEMP(1)*TA(I)                                              00042600
      ITRY=1                                                            00042650
      GO TO 25                                                          00042700
C                                                                       00042800
   19 CONTINUE                                                          00042900
      COM4=DSQRT(COM4)                                                  00043000
      TANGL=-ZBIG                                                       00043100
      IF(COM1.LT.Z700*COM4) TANGL=-COM1/COM4                            00043200
      CALL DOTF(W1,UVEC,OGLE)                                           00043300
      ITRY=0                                                            00043350
 1900 CONTINUE                                                          00043370
      IF(W1.GE.ZERO) GO TO 25                                           00043400
C              /-REVERSE SIDE OF CUTTER                                 00043500
      TANGL=-TANGL                                                      00043600
      DO 24 I=1,3                                                       00043700
   24 U2(I)=-U2(I)                                                      00043800
C-----------------------------------------------------------            00043900
C              /-RESUME NORMAL PATH. COMPUTE ZLPNT,ZLNORM               00044000
C                                                                       00044100
   25 CONTINUE                                                          00044200
C              /- TANHI.LT.TANGL.LT.TANLO IS CRITERIA FOR VALID TN      00044300
      IF ((TANLO(IT).GE.TANGL).AND.(TANHI(IT).LE.TANGL)) THEN           00044400
        DO 30 I=1,3                                                     00044410
          ZLNORM(I)=U2(I)                                               00044420
   30   CONTINUE                                                        00044430
      ELSE                                                              00044450
        IF (TANLO(IT).LT.TANGL) THEN                                    00044460
C              /-TN CONTROL, SEARCH BACKWARDS ON TOOL                   00044500
          IF(JTN(IS).NE.0) NNN=-1                                       00044600
        ENDIF                                                           00044700
C                                                                       00044800
        IF (ITRY.EQ.1) GOTO 2000                                        00045220
        IF ((ICHEKF.NE.1).AND.(ABS(W1).GT.0.05D0)) GOTO 2000            00045230
        IF (ABS(W1).GT.10.D0) GOTO 2000                                 00045250
        ITRY=1                                                          00045260
        W1=-W1                                                          00045270
        GOTO 1900                                                       00045280
      ENDIF                                                             00045290
C                                                                       00045300
   31 CONTINUE                                                          00045400
      DO 32 I=1,3                                                       00045500
   32 ZLPNT(I)=REFPNT(I)+CORRAD(IT)*U2(I)                               00045600
      IF(JTN(IS).LE.0) GO TO 237                                        00045700
C                                                                       00045800
C                                                                       00045900
C              /-NORMAL PATH. TN CONTROL                                00046000
C                                                                       00046100
      CALL DOTF(W1,TNL(1,IS),ZLNORM)                                    00046200
C             /-TN.TNL POSITIVE, ACCEPT CURRENT TP,TN - RETURN          00046300
      IF(W1.GE.ZERO) GO TO 9998                                         00046400
      IF (IBB.LT.0) THEN                                                00046410
        W11=W1                                                          00046420
      ELSE                                                              00046430
        IF (W11.GT.W1) THEN                                             00046440
          GOTO 8021                                                     00046441
        ELSE                                                            00046442
          IF (W1.GT.-0.08D0) THEN                                       00046443
            CALL ERROR(-26002,'TLNORM')                                 00046444
            GO TO 9998                                                  00046445
          ENDIF                                                         00046446
        ENDIF                                                           00046447
      ENDIF                                                             00046450
      CALL DOTF(AM,ZLNORM,TA)                                           00046500
      IF(DABS(AM).LE.Z9999) GO TO 802                                   00046600
      IF(JTN(IS).EQ.0) GO TO 603                                        00046700
      DO 601 I=1,3                                                      00046800
  601 TN(I,IS)=-ZLNORM(I)                                               00046900
      IF(AM.GT.ZERO) GO TO 605                                          00047000
C              /-AM IS LE ZERO                                          00047100
      GO TO 604                                                         00047200
C                                                                       00047300
  802 CONTINUE                                                          00047400
C             /-IBB =0 MEANS 2ND TIME THRU TLNORM, SO FAIL HERE.        00047500
      IF(IBB.GE.0) GO TO 804                                            00047600
C             /-RESTART MODE, SWITCH TO OTHER SIDE CUTTER, THEN RESTART 00047700
 8021 IBB=0                                                             00047800
      ITSEG(IS)=IBEGIN                                                  00047900
      DO 803 I=1,3                                                      00048000
  803 U1VAR(I)=-U1VAR(I)                                                00048100
C             /-BRANCH BACK TO START OF TLNORM, BEGIN AGAIN             00048200
      GO TO 805                                                         00048300
  804 CONTINUE                                                          00048400
C*****                                                                  00048500
      CALL AERR(26602,'TLNORM  ')                                       00048600
  603 CONTINUE                                                          00048700
C             /-SET REFERENCE TP AT TOP OF TOOL                         00048800
      IF(IT.EQ.7) GO TO 605                                             00048900
  604 CONTINUE                                                          00049000
      IT=7                                                              00049100
      ITSEG(IS)=7                                                       00049200
      DO 3604 I=1,3                                                     00049300
 3604 TP(I,IS)=TE(I)+TLHITE(IT)*TA(I)+RI(IT)*U1(I,IS)                   00049400
      GO TO 9999                                                        00049500
C                                                                       00049600
  605 CONTINUE                                                          00049700
      ITSEG(IS)=IBEGIN                                                  00049800
      DO 3603 I=1,3                                                     00049900
 3603 TP(I,IS)=TE(I)                                                    00050000
      GO TO 9999                                                        00050100
C              /-SELECT CORRECT TN FROM MULTIPLE TN'S.                  00050200
C              /-TEMPORARILY REPLACE TP,TN WITH NEW TP,TN CANDIDATE     00050300
  237 CONTINUE                                                          00050400
      DO 34 I=1,3                                                       00050500
      SNOLD(I)=SN(I,IS)                                                 00050700
      SPOLD(I)=SP(I,IS)                                                 00050800
      TNOLD(I)=TN(I,IS)                                                 00050900
      TPOLD(I)=TP(I,IS)                                                 00051000
      TN(I,IS)=ZLNORM(I)                                                00051100
      TP(I,IS)=ZLPNT(I)                                                 00051200
   34 CONTINUE                                                          00051300
      IF(IS.EQ.1) GO TO 7003                                            00051400
      IF(ISFIDN(IS).EQ.29.OR.ISFIDN(IS).EQ.30) GO TO 7003               00051500
C              /-                                                       00051600
      CALL DDST                                                         00051700
C              /-                                                       00051800
      IF(IER.EQ.0) GO TO 7004                                           00051900
 7003 S(IS)=ZBIG2                                                       00052000
 7004 CONTINUE                                                          00052100
      DO 4029 I=1,3                                                     00052200
      SN(I,IS)=SNOLD(I)                                                 00052400
      SP(I,IS)=SPOLD(I)                                                 00052500
      TN(I,IS)=TNOLD(I)                                                 00052600
      TP(I,IS)=TPOLD(I)                                                 00052700
 4029 CONTINUE                                                          00052800
      S(IS)=DABS(S(IS))                                                 00052900
C                                                                       00053000
      IF(CENDIS.LT.S(IS)) GO TO 2000                                    00053100
C.... SELECT TN WHOS DIRECTION COINCIDES BEST WITH LAST SN              00053110
C.... IE. WHOSE ABS VALUE OF TN.SN IS MAXIMAL                           00053112
      CALL DOTF(WFL2,SN(1,IS),ZLNORM)                                   00053120
      IF (ABS(WFL2).LE.ABS(WFL1)) GOTO 2000                             00053130
      WFL1=WFL2                                                         00053140
C              /-NEW DISTANCE TO SURFACE LESS, SET JFIND TO SEARCH TOOL 00053200
C             /-SET JFIND TO -1 TO SHOW A VALID DIST HAS BEEN FOUND     00053300
      JFIND=-1                                                          00053400
      CENDIS=S(IS)                                                      00053500
C                                                                       00053600
C              /-UPDATE TP,TN AND EXIT IF JFIND =1.                     00053700
 9998 CONTINUE                                                          00053800
      ITSEG(IS)=IT                                                      00053900
      DO 9222 I=1,3                                                     00054000
      TP(I,IS)=ZLPNT(I)                                                 00054100
      TN(I,IS)=ZLNORM(I)                                                00054200
 9222 CONTINUE                                                          00054300
C             /-JFIND -1, SO CONTINUE SEARCHING FOR BETTER TOOL SEG     00054400
      IF(JFIND.LT.0) GO TO 2000                                         00054500
C****                                                                   00054600
 9999 CONTINUE                                                          00054700
      RETURN                                                            00054800
C************************************************************           00054900
C-----------------------------------------------------------            00055000
C                                                                       00055100
 3029 CONTINUE                                                          00055200
C--------  SPECIAL TREATMENT OF A BALL CUTTER BY SSURF                  00055300
C              /-RADIUS OF BALL EQUALS HALF DIAMETER OF TOOL            00055400
      RRR=CUTDAT(2)                                                     00055500
C              /-TOOL ON OR POINT TOOL MEANS RRR IS ZERO                00055600
      IF(ITLON(IS)*IPT1.EQ.0) RRR=ZERO                                  00055700
C              /-ISFTYP 1=TO, 2=PAST, 3=ON, 4=TANTO 8=PSTAN             00055800
      IF(ISFTYP(IS).EQ.3) RRR=ZERO                                      00055900
C              /-GENERATE POINT AT CENTER OF BALL OR TIP OF TOOL        00056000
      DO 3030 I=1,3                                                     00056100
      TP(I,IS)=TE(I)+RRR*TA(I)                                          00056200
 3030 SPL(I,IS)=SP(I,IS)                                                00056300
C             /-BRANCH TO DD ROUTINE TO ESTABLISH TOOL/SURF RELATION    00056400
      MODESS=21                                                         00056500
      CALL AJUNDD                                                       00056600
      MODESS=0                                                          00056700
C                                                                       00056800
C             /-COMPUTE RELEVANT POINT ON TOOL SURFACE                  00056900
      W1=ONE                                                            00057000
      IF(JTN(IS).EQ.0) W1=-W1                                           00057100
C             /-MODIFY TN FOR TN CONTROL SO THAT TN.TI IS POSITIVE      00057200
      IF(JTN(IS).EQ.0) GO TO 3032                                       00057300
C             /-MEASURE THE ANGLE BETWEEN TN AND TI                     00057400
      CALL DOTF(W2,SN(1,IS),TI)                                         00057500
      W2=W2*W1*PAST(IS)                                                 00057600
      IF(W2.GE.ZERO) GO TO 3032                                         00057700
C             /-ALTER THE SIGN OF Z AND SN TO MAKE TN.TI.PAST POSITIVE  00057800
      Z(IS)=-Z(IS)                                                      00057900
      DO 3034 I=1,3                                                     00058000
      SN(I,IS)=-SN(I,IS)                                                00058010
 3034 CONTINUE                                                          00058100
 3032 CONTINUE                                                          00058200
      DO 3033 I=1,3                                                     00058300
      TN(I,IS)=W1*SN(I,IS)                                              00058400
      TP(I,IS)=TP(I,IS)+RRR*TN(I,IS)                                    00058500
      TPSPDF(I)=SP(I,IS)-(TP(I,IS)+TH(IS)*TN(I,IS))                     00058600
 3033 CONTINUE                                                          00058700
C             /-DISTANCE MEASURED FROM RELEVANT TP TO SP IN TN DIRECTION00058800
      CALL DOTF(S(IS),TPSPDF,TN(1,IS))                                  00058900
      CALL CCURV(IS,SP(1,IS),SPL(1,IS),SN(1,IS))                        00059000
      ITSEG(IS)=4                                                       00059100
      IF(DABS(RRR).LT.Z5EM4) ITSEG(IS)=1                                00059200
      CALL DOTF(W1,TN(1,IS),TA)                                         00059300
      DO 3035 I=1,3                                                     00059400
 3035 U1VAR(I)=TN(I,IS)-W1*TA(I)                                        00059500
      CALL VNORM(U1VAR,U1VAR)                                           00059600
      IER=0                                                             00059700
      RETURN                                                            00059800
      END                                                               00059900
**** SOURCE FILE : M0000735.W01   ***
*
C.....FORTRAN SUBROUTINES  TOLER,INTOL,OUTTOL,TOLERH,INTOLH, & OUTTOH   TOLR0010
C                                                                       TOLR0011
C                                                                       TOLR0012
C.....FORTRAN SUBROUTINE             TOLER....              3/1/68   GK TOLR0020
      SUBROUTINE TOLER(NMBR,TLRNS)                                      TOLR0030
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TOLR0040
C                                                                       TOLR0050
C                                                                       TOLR0060
C                                                                       TOLR0070
C                                                                       TOLR0080
      INCLUDE 'TOTAL.INC'                                               TOLR0191
      INCLUDE 'SV.INC'                                                  TOLR0581
      INCLUDE 'ZNUMBR.INC'                                              TOLR0701
      INCLUDE 'IFXCOR.INC'                                              TOLR0901
      INCLUDE 'ISHR18.INC'                                              TOLR1041
      INCLUDE 'KNUMBR.INC'                                              TOLR1221
C                                                                       TOLR1222
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            TOLR1230
      COMMON /HSAVE/ SAVEH(50)                                          TOLR1240
      DIMENSION TOLRNS(4)                                               TOLR1250
      EQUIVALENCE  (SAVEH( 1),TOLRNS(1)),(SAVEH(5),NUMBER)              TOLR1260
      DIMENSION TLRNS(4)                                                TOLR1270
      CHARACTER*6 PPWORD                                                TOLR1276
      DIMENSION PPWORD(3),ITHVAL(3),IPPWRD(2)                           TOLR1290
      INTEGER BCDF                                                      TOLR1295
C                                                                       TOLR1296
      DATA PPWORD/'INTOL ','OUTTOL','TOLER '/                           TOLR1300
      DATA ITHVAL/  8     ,  9     ,  4     /                           TOLR1310
C                                                                       TOLR1320
      ICASE=3                                                           TOLR1330
C                                                                       TOLR1350
      DO 5 I=1,4                                                        TOLR1440
    5 TOLRNS(I)=TLRNS(I)                                                TOLR1450
      NUMBER=NMBR                                                       TOLR1460
      IF(JHLDFG.EQ.0) GO TO 300                                         TOLR1470
      ITABH(ITHCNT)=ITHVAL(ICASE)                                       TOLR1480
      ITHCNT=ITHCNT+1                                                   TOLR1490
  999 RETURN                                                            TOLR1500
C                                                                       TOLR1510
C                                                                       TOLR1650
C---    OUTTOL, MAX DEVIATION ZERO ON SIDE AWAY FROM CUTTER             TOLR1660
  300 CONTINUE                                                          TOLR1670
      DO 350 I=1,NUMSFS                                                 TOLR1680
      TAU2(I)=Z0                                                        TOLR1690
  350 CONTINUE                                                          TOLR1750
C                                                                       TOLR1752
      CALL APT232(NUMBER,TOLRNS,TAU1,Z1)                                TOLR1810
C                                                                       TOLR1816
C---    OUTPUT PART PROGRAM COMMAND ON EXFILE                           TOLR1890
C                                                                       TOLR1900
      IPPWRD(1)=BCDF(PPWORD(ICASE)(1:4))                                TOLR1912
      IPPWRD(2)=BCDF(PPWORD(ICASE)(5:6))                                TOLR1914
      CALL APT299(NUMBER,IPPWRD,1,TOLRNS(1))                            TOLR1920
      IF(NUMBER.LE.1) GO TO 999                                         TOLR1930
      DO 30 J=2,NUMBER,2                                                TOLR1950
       IF(J.NE.NUMBER) THEN                                             TOLR1960
         CALL APT299(1,TOLRNS(J),1,TOLRNS(J+1))                         TOLR1970
       ELSE                                                             TOLR1980
         CALL APT299(1,TOLRNS(J),0,Z0)                                  TOLR1990
       ENDIF                                                            TOLR1995
   30 CONTINUE                                                          TOLR2000
      GO TO 999                                                         TOLR2010
      END                                                               TOLR2020
C                                                                       TOLR2040
C                                                                       TOLR2050
C                                                                       TOLR2060
C                                                                       TOLR2070
C.....FORTRAN SUBROUTINE  ....INTOL          8/68                    PH TOLR3010
C.....FORTRAN SUBROUTINE             INTOL....              3/1/68   GK TOLR3020
      SUBROUTINE INTOL(NMBR,TLRNS)                                      TOLR3030
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TOLR3040
C                                                                       TOLR3050
C                                                                       TOLR3060
C                                                                       TOLR3070
C                                                                       TOLR3080
      INCLUDE 'TOTAL.INC'                                               TOLR3191
      INCLUDE 'SV.INC'                                                  TOLR3581
      INCLUDE 'ZNUMBR.INC'                                              TOLR3701
      INCLUDE 'IFXCOR.INC'                                              TOLR3901
      INCLUDE 'ISHR18.INC'                                              TOLR4041
      INCLUDE 'KNUMBR.INC'                                              TOLR4221
C                                                                       TOLR4222
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            TOLR4230
      COMMON /HSAVE/ SAVEH(50)                                          TOLR4240
      DIMENSION TOLRNS(4)                                               TOLR4250
      EQUIVALENCE  (SAVEH( 1),TOLRNS(1)),(SAVEH(5),NUMBER)              TOLR4260
      DIMENSION TLRNS(4)                                                TOLR4270
      CHARACTER*6 PPWORD                                                TOLR4276
      DIMENSION PPWORD(3),ITHVAL(3),IPPWRD(2)                           TOLR4290
      INTEGER BCDF                                                      TOLR4295
C                                                                       TOLR4296
      DATA PPWORD/'INTOL ','OUTTOL','TOLER '/                           TOLR4300
      DATA ITHVAL/  8     ,  9     ,  4     /                           TOLR4310
C                                                                       TOLR4320
C                                                                       TOLR4350
      ICASE=1                                                           TOLR4370
C                                                                       TOLR4390
      DO 5 I=1,4                                                        TOLR4440
    5 TOLRNS(I)=TLRNS(I)                                                TOLR4450
      NUMBER=NMBR                                                       TOLR4460
      IF(JHLDFG.EQ.0) GO TO 100                                         TOLR4470
      ITABH(ITHCNT)=ITHVAL(ICASE)                                       TOLR4480
      ITHCNT=ITHCNT+1                                                   TOLR4490
  999 RETURN                                                            TOLR4500
C                                                                       TOLR4510
C                                                                       TOLR4550
C---    INTOL, MAX DEVIATION SPECFD ON SIDE OF SURF AWAY FROM CUTTER    TOLR4830
  100 CONTINUE                                                          TOLR4840
      IF(IBTFLG.GE.0) GO TO 110                                         TOLR4850
      IBTFLG=0                                                          TOLR4860
      TAU1(1)=Z0                                                        TOLR4870
  110 CALL APT232(NUMBER,TOLRNS,TAU2,-Z1)                               TOLR4880
C---    OUTPUT PART PROGRAM COMMAND ON EXFILE                           TOLR4890
C                                                                       TOLR4900
  400 CONTINUE                                                          TOLR4910
      IPPWRD(1)=BCDF(PPWORD(ICASE)(1:4))                                TOLR4912
      IPPWRD(2)=BCDF(PPWORD(ICASE)(5:6))                                TOLR4914
      CALL APT299(NUMBER,IPPWRD,1,TOLRNS(1))                            TOLR4920
      IF(NUMBER.LE.1) GO TO 999                                         TOLR4930
      DO 30 J=2,NUMBER,2                                                TOLR4950
       IF(J.NE.NUMBER) THEN                                             TOLR4960
         CALL APT299(1,TOLRNS(J),1,TOLRNS(J+1))                         TOLR4970
       ELSE                                                             TOLR4980
         CALL APT299(1,TOLRNS(J),0,Z0)                                  TOLR4990
       ENDIF                                                            TOLR4995
   30 CONTINUE                                                          TOLR5000
      GO TO 999                                                         TOLR5010
      END                                                               TOLR5020
C                                                                       TOLR5040
C                                                                       TOLR5050
C                                                                       TOLR5060
C                                                                       TOLR5070
C.....FORTRAN SUBROUTINE  ....OUTTOL         8/68                    PH TOLR6010
C.....FORTRAN SUBROUTINE            OUTTOL....              3/1/68   GK TOLR6020
      SUBROUTINE OUTTOL(NMBR,TLRNS)                                     TOLR6030
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TOLR6040
C                                                                       TOLR6050
C                                                                       TOLR6060
C                                                                       TOLR6070
C                                                                       TOLR6080
      INCLUDE 'TOTAL.INC'                                               TOLR6191
      INCLUDE 'SV.INC'                                                  TOLR6581
      INCLUDE 'ZNUMBR.INC'                                              TOLR6701
      INCLUDE 'IFXCOR.INC'                                              TOLR6901
      INCLUDE 'ISHR18.INC'                                              TOLR7041
      INCLUDE 'KNUMBR.INC'                                              TOLR7221
C                                                                       TOLR7222
      COMMON /HOLD/ JHLDFG,ITHCNT,ITABH(100)                            TOLR7230
      COMMON /HSAVE/ SAVEH(50)                                          TOLR7240
      DIMENSION TOLRNS(4)                                               TOLR7250
      EQUIVALENCE  (SAVEH( 1),TOLRNS(1)),(SAVEH(5),NUMBER)              TOLR7260
      DIMENSION TLRNS(4)                                                TOLR7270
      CHARACTER*6 PPWORD                                                TOLR7276
      DIMENSION PPWORD(3),ITHVAL(3),IPPWRD(2)                           TOLR7290
      INTEGER BCDF                                                      TOLR7295
C                                                                       TOLR7296
      DATA PPWORD/'INTOL ','OUTTOL','TOLER '/                           TOLR7300
      DATA ITHVAL/  8     ,  9     ,  4     /                           TOLR7310
C                                                                       TOLR7320
C                                                                       TOLR7350
C                                                                       TOLR7390
      ICASE=2                                                           TOLR7410
C                                                                       TOLR7420
      DO 5 I=1,4                                                        TOLR7440
    5 TOLRNS(I)=TLRNS(I)                                                TOLR7450
      NUMBER=NMBR                                                       TOLR7460
      IF(JHLDFG.EQ.0) GO TO 200                                         TOLR7470
      ITABH(ITHCNT)=ITHVAL(ICASE)                                       TOLR7480
      ITHCNT=ITHCNT+1                                                   TOLR7490
  999 RETURN                                                            TOLR7500
C                                                                       TOLR7510
C                                                                       TOLR7550
C---    OUTTOL, MAXDEVIATION SPECIFD ON CUTTER SIDE OF SURFACE          TOLR7770
  200 CONTINUE                                                          TOLR7780
      IF(IBTFLG.LT.0) IBTFLG=0                                          TOLR7790
  210 CONTINUE                                                          TOLR7800
      CALL APT232(NUMBER,TOLRNS,TAU1,Z1)                                TOLR7810
C                                                                       TOLR7900
      IPPWRD(1)=BCDF(PPWORD(ICASE)(1:4))                                TOLR7912
      IPPWRD(2)=BCDF(PPWORD(ICASE)(5:6))                                TOLR7914
      CALL APT299(NUMBER,IPPWRD,1,TOLRNS(1))                            TOLR7920
      IF(NUMBER.LE.1) GO TO 999                                         TOLR7930
      DO 30 J=2,NUMBER,2                                                TOLR7950
       IF(J.NE.NUMBER) THEN                                             TOLR7960
         CALL APT299(1,TOLRNS(J),1,TOLRNS(J+1))                         TOLR7970
       ELSE                                                             TOLR7980
         CALL APT299(1,TOLRNS(J),0,Z0)                                  TOLR7990
       ENDIF                                                            TOLR7995
   30 CONTINUE                                                          TOLR8000
      GO TO 999                                                         TOLR8010
      END                                                               TOLR8020
C                                                                       TOLR8040
C                                                                       TOLR8050
C                                                                       TOLR8060
C                                                                       TOLR8070
C.....FORTRAN SUBROUTINE  ....TOLERH         8/68                    PH TOLZ0010
C.....FORTRAN SUBROUTINE             TOLERH....             3/1/68   GK TOLZ0020
      SUBROUTINE TOLERH(NMBR,TLRNS)                                     TOLZ0030
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TOLZ0040
C                                                                       TOLZ0050
C                                                                       TOLZ0060
C                                                                       TOLZ0070
C                                                                       TOLZ0080
      INCLUDE 'TOTAL.INC'                                               TOLZ0191
      INCLUDE 'SV.INC'                                                  TOLZ0581
      INCLUDE 'ZNUMBR.INC'                                              TOLZ0701
      INCLUDE 'IFXCOR.INC'                                              TOLZ0901
      INCLUDE 'ISHR18.INC'                                              TOLZ1041
      INCLUDE 'KNUMBR.INC'                                              TOLZ1221
C                                                                       TOLZ1222
      COMMON /HSAVE/ SAVEH(50)                                          TOLZ1240
      DIMENSION TOLRNS(4)                                               TOLZ1250
      EQUIVALENCE  (SAVEH( 1),TOLRNS(1)),(SAVEH(5),NUMBER)              TOLZ1260
      CHARACTER*6 PPWORD                                                TOLZ1276
      DIMENSION PPWORD(3),IPPWRD(2)                                     TOLZ1290
      INTEGER BCDF                                                      TOLZ1295
C                                                                       TOLZ1296
      DATA PPWORD/'INTOL ','OUTTOL','TOLER '/                           TOLZ1300
C                                                                       TOLZ1320
C                                                                       TOLZ1350
C                                                                       TOLZ1390
      ICASE=3                                                           TOLZ1530
C                                                                       TOLZ1590
C                                                                       TOLZ1630
C                                                                       TOLZ1650
C---    OUTTOL, MAX DEVIATION ZERO ON SIDE AWAY FROM CUTTER             TOLZ1660
      DO 350 I=1,NUMSFS                                                 TOLZ1680
      TAU2(I)=Z0                                                        TOLZ1690
  350 CONTINUE                                                          TOLZ1750
C                                                                       TOLZ1756
      CALL APT232(NUMBER,TOLRNS,TAU1,Z1)                                TOLZ1810
C                                                                       TOLZ1900
      IPPWRD(1)=BCDF(PPWORD(ICASE)(1:4))                                TOLZ1912
      IPPWRD(2)=BCDF(PPWORD(ICASE)(5:6))                                TOLZ1914
      CALL APT299(NUMBER,IPPWRD,1,TOLRNS(1))                            TOLZ1920
      IF(NUMBER.LE.1) GO TO 999                                         TOLZ1930
      DO 30 J=2,NUMBER,2                                                TOLZ1950
       IF(J.NE.NUMBER) THEN                                             TOLZ1960
         CALL APT299(1,TOLRNS(J),1,TOLRNS(J+1))                         TOLZ1970
       ELSE                                                             TOLZ1980
         CALL APT299(1,TOLRNS(J),0,Z0)                                  TOLZ1990
       ENDIF                                                            TOLZ1995
   30 CONTINUE                                                          TOLZ2000
  999 RETURN                                                            TOLZ2012
      END                                                               TOLZ2020
C                                                                       TOLZ2040
C                                                                       TOLZ2050
C                                                                       TOLZ2060
C                                                                       TOLZ2070
C.....FORTRAN SUBROUTINE  ....INTOLH         8/68                    PH TOLZ3010
C.....FORTRAN SUBROUTINE             INTOLH...              3/1/68   GK TOLZ3020
      SUBROUTINE INTOLH(NMBR,TLRNS)                                     TOLZ3030
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TOLZ3040
C                                                                       TOLZ3050
C                                                                       TOLZ3060
C                                                                       TOLZ3070
      INCLUDE 'TOTAL.INC'                                               TOLZ3191
      INCLUDE 'SV.INC'                                                  TOLZ3581
      INCLUDE 'ZNUMBR.INC'                                              TOLZ3701
      INCLUDE 'IFXCOR.INC'                                              TOLZ3901
      INCLUDE 'ISHR18.INC'                                              TOLZ4041
      INCLUDE 'KNUMBR.INC'                                              TOLZ4221
C                                                                       TOLZ4222
      COMMON /HSAVE/ SAVEH(50)                                          TOLZ4240
      DIMENSION TOLRNS(4)                                               TOLZ4250
      EQUIVALENCE  (SAVEH( 1),TOLRNS(1)),(SAVEH(5),NUMBER)              TOLZ4260
      CHARACTER*6 PPWORD                                                TOLZ4276
      DIMENSION PPWORD(3),IPPWRD(2)                                     TOLZ4290
      INTEGER BCDF                                                      TOLZ4295
C                                                                       TOLZ4296
      DATA PPWORD/'INTOL ','OUTTOL','TOLER '/                           TOLZ4300
C                                                                       TOLZ4320
C                                                                       TOLZ4420
C                                                                       TOLZ4550
      ICASE=1                                                           TOLZ4570
C                                                                       TOLZ4590
C                                                                       TOLZ4630
C---    INTOL, MAX DEVIATION SPECFD ON SIDE OF SURF AWAY FROM CUTTER    TOLZ4830
  100 CONTINUE                                                          TOLZ4840
      IF(IBTFLG.GE.0) GO TO 110                                         TOLZ4850
      IBTFLG=0                                                          TOLZ4860
      TAU1(1)=Z0                                                        TOLZ4870
  110 CALL APT232(NUMBER,TOLRNS,TAU2,-Z1)                               TOLZ4880
C---    OUTPUT PART PROGRAM COMMAND ON EXFILE                           TOLZ4890
C                                                                       TOLZ4900
  400 CONTINUE                                                          TOLZ4910
      IPPWRD(1)=BCDF(PPWORD(ICASE)(1:4))                                TOLZ4912
      IPPWRD(2)=BCDF(PPWORD(ICASE)(5:6))                                TOLZ4914
      CALL APT299(NUMBER,IPPWRD,1,TOLRNS(1))                            TOLZ4920
      IF(NUMBER.LE.1) GO TO 999                                         TOLZ4930
      DO 30 J=2,NUMBER,2                                                TOLZ4950
       IF(J.NE.NUMBER) THEN                                             TOLZ4960
         CALL APT299(1,TOLRNS(J),1,TOLRNS(J+1))                         TOLZ4970
       ELSE                                                             TOLZ4980
         CALL APT299(1,TOLRNS(J),0,Z0)                                  TOLZ4990
       ENDIF                                                            TOLZ4995
   30 CONTINUE                                                          TOLZ5000
  999 RETURN                                                            TOLZ5012
      END                                                               TOLZ5020
C                                                                       TOLZ5040
C                                                                       TOLZ5050
C                                                                       TOLZ5060
C                                                                       TOLZ5070
C.....FORTRAN SUBROUTINE  ....OUTTOH         8/68                    PH TOLZ6010
C.....FORTRAN SUBROUTINE            OUTTOH....              3/1/68   GK TOLZ6020
      SUBROUTINE OUTTOH(NMBR,TLRNS)                                     TOLZ6030
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             TOLZ6040
C                                                                       TOLZ6050
C                                                                       TOLZ6060
C                                                                       TOLZ6070
C                                                                       TOLZ6080
      INCLUDE 'TOTAL.INC'                                               TOLZ6191
      INCLUDE 'SV.INC'                                                  TOLZ6581
      INCLUDE 'ZNUMBR.INC'                                              TOLZ6701
      INCLUDE 'IFXCOR.INC'                                              TOLZ6901
      INCLUDE 'ISHR18.INC'                                              TOLZ7041
      INCLUDE 'KNUMBR.INC'                                              TOLZ7221
C                                                                       TOLZ7222
      COMMON /HSAVE/ SAVEH(50)                                          TOLZ7240
      DIMENSION TOLRNS(4)                                               TOLZ7250
      EQUIVALENCE  (SAVEH( 1),TOLRNS(1)),(SAVEH(5),NUMBER)              TOLZ7260
      CHARACTER*6 PPWORD                                                TOLZ7276
      DIMENSION PPWORD(3),IPPWRD(2)                                     TOLZ7290
      INTEGER BCDF                                                      TOLZ7295
C                                                                       TOLZ7296
      DATA PPWORD/'INTOL ','OUTTOL','TOLER '/                           TOLZ7300
C                                                                       TOLZ7320
C                                                                       TOLZ7350
C                                                                       TOLZ7590
      ICASE=2                                                           TOLZ7610
C                                                                       TOLZ7650
C---    OUTTOL, MAXDEVIATION SPECIFD ON CUTTER SIDE OF SURFACE          TOLZ7770
  200 CONTINUE                                                          TOLZ7780
      IF(IBTFLG.LT.0) IBTFLG=0                                          TOLZ7790
  210 CONTINUE                                                          TOLZ7800
      CALL APT232(NUMBER,TOLRNS,TAU1,Z1)                                TOLZ7810
C                                                                       TOLZ7900
      IPPWRD(1)=BCDF(PPWORD(ICASE)(1:4))                                TOLZ7912
      IPPWRD(2)=BCDF(PPWORD(ICASE)(5:6))                                TOLZ7914
      CALL APT299(NUMBER,IPPWRD,1,TOLRNS(1))                            TOLZ7920
      IF(NUMBER.LE.1) GO TO 999                                         TOLZ7930
      DO 30 J=2,NUMBER,2                                                TOLZ7950
       IF(J.NE.NUMBER) THEN                                             TOLZ7960
         CALL APT299(1,TOLRNS(J),1,TOLRNS(J+1))                         TOLZ7970
       ELSE                                                             TOLZ7980
         CALL APT299(1,TOLRNS(J),0,Z0)                                  TOLZ7990
       ENDIF                                                            TOLZ7995
   30 CONTINUE                                                          TOLZ8000
  999 RETURN                                                            TOLZ8012
      END                                                               TOLZ8020
**** SOURCE FILE : M0002930.V03   ***
*
C.....FORTRAN SUBROUTINE             U1COMP...              3/1/68   GK 00000100
      SUBROUTINE U1COMP                                                 00000200
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION(O-Z)             00000300
C                                                                       00000399
      INCLUDE 'TOTAL.INC'                                               00001301
      INCLUDE 'FXCOR.INC'                                               00004001
      INCLUDE 'SV.INC'                                                  00007301
      INCLUDE 'ISV.INC'                                                 00008901
      INCLUDE 'IFXCOR.INC'                                              00010701
      INCLUDE 'ISHR18.INC'                                              00011901
C                                                                       00011902
C             /-COMPUTE UNIT VECTOR U1 PERPENDICULAR TO TA TO SELECT    00012000
C             /-PROPER SIDE OF CUTTER                                   00012100
C             /-U1 SHOULD POINT OUTWARD FROM TA                         00012200
C             /-CURRENT CENTER OF CURVATURE CC IS THE PRIMARY INPUT.    00012300
C                                                                       00012400
      DATA ZLIT1,ZLIT2,ZLIT3,ZERO,ONE/.9D-4,1.D-10,.1D-3,0.D0,1.D0/     00012500
C                                                                       00012600
      DO 1 I=1,3                                                        00012900
      TEMP(I)=CC(I,IS)-TE(I)                                            00013000
    1 CONTINUE                                                          00013100
      CALL DOTF(W1,TEMP,TA)                                             00013200
C             /-INTIAL U1 POINTS FROM TA OUTWARD TO CC                  00013300
      DO 2 I=1,3                                                        00013400
    2 U1(I,IS)=TEMP(I)-W1*TA(I)                                         00013500
      CALL VNORM(U1(1,IS),U1(1,IS))                                     00013600
C             /-FIRST U1 POINTS DIRECTLY FROM CC TOWARD TOOL AXIS       00013700
      IF(IER.NE.0) GO TO 3                                              00013800
C              /-U1 SHOULD BE PERPENDICULAR TO TA IN NORMAL CASE        00013900
      CALL DOTF(W1,TA,U1(1,IS))                                         00014000
      IF(DABS(W1).LT.ZLIT3) GO TO 18                                    00014100
C                                                                       00014200
C             /-U1 TOO SMALL, SELECT ANOTHER U1                         00014300
    3 CONTINUE                                                          00014400
      IF(DABS(TA(3)).GE.ZLIT1) GO TO 4                                  00014500
C             /-K OF TOOL AXIS TOO SMALL, GIVE U1 A K COMPONENT         00014600
      U1(1,IS)=ZERO                                                     00014700
      U1(2,IS)=ZERO                                                     00014800
      U1(3,IS)=ONE                                                      00014900
      GO TO 18                                                          00015000
    4 CONTINUE                                                          00015100
      W1=TA(1)**2+TA(2)**2                                              00015200
      IF(DABS(W1).GE.ZLIT2) GO TO 5                                     00015300
C             /-TA IS INSIGNIFICANT, SET U1 IN I DIRECTION              00015400
      U1(1,IS)=ONE                                                      00015500
      U1(2,IS)=ZERO                                                     00015600
      U1(3,IS)=ZERO                                                     00015700
      GO TO 18                                                          00015800
    5 CONTINUE                                                          00015900
      TEMP(1)=TA(1)                                                     00016000
      TEMP(2)=TA(2)                                                     00016100
      TEMP(3)=-W1/TA(3)                                                 00016200
      CALL VNORM(TEMP,U1(1,IS))                                         00016300
      IF(IER.EQ.0) GO TO 18                                             00016400
C             /-U1 IS NOT COMPUTABLE DUE TO POORLY CONDITIONED TA       00016500
      CALL AERR(26401,'U1COMP  ')                                       00016600
      GO TO 999                                                         00016700
C                                                                       00016800
   18 CONTINUE                                                          00016900
C             /-U1 NOW SET, MODIFY SIGN DEPENDING ON TOOL TO SURF RELAT 00017000
      CALL DOTF(W1,U1(1,IS),SN(1,IS))                                   00017100
C             /-U1 OPPOSED TO SN FOR SN CONTROL                         00017200
      IF(W1.LT.ZLIT3.AND.JTN(IS).EQ.0) GO TO 999                        00017300
C             /-U1 AGREES WITH SN(AND TN) FOR TN CONTROL                00017400
      IF(W1.GE.ZERO.AND.JTN(IS).NE.0) GO TO 999                         00017500
C             /-REVERSE SIGN OF U1                                      00017600
      DO 12 I=1,3                                                       00017700
      U1(I,IS)=-U1(I,IS)                                                00017710
   12 CONTINUE                                                          00017800
  999 CONTINUE                                                          00017900
      RETURN                                                            00018000
      END                                                               00018100
**** MODULE = SSGEOM ****
**** SOURCE FILE : M0001869.W01   ***
*
      SUBROUTINE APT107(A,ARG1,ARG2,ARG3)                               00000100
C---     MAIN ROUTINE FOR DEFINITION OF SCULPTURED SURFACES             00000200
C---     INPUT CONSISTS OF THREE ARGUMENTS ARG1,ARG2,ARG3               00000300
C---     ARG1 CONTAINS THE FIRST MINOR WORD IN THE SSURF DEFINITION     00000400
C---     THAT IS, ARG1 CONTAINS HOLLERITH SMESH IN SSURF/SMESH STATEMENT00000500
C---     ARG2 IS CURRENTLY UNUSED                                       00000600
C---     ARG3 CONTAINS THE SURFACE SUB-TYPE. FOR EXAMPLE,               00000700
C---     FOR SSURF/SMESH,XYPLAN, ARG3 CONTAINS HOLLERITH FOR XYPLAN.    00000800
C---     THE REMAINING ARGUMENTS ARE PASSED IN BLANK COMMON BEGINNING   00000900
C---     FROM LOCATION 41 ON.  THE FIRST 8 WORDS CONTAIN SUMMARY        00001000
C---     DATA AND LOCATIONS 49 ON CONTAIN A CODED STREAM OF NUMBERS     00001100
C---     REPRESENTING THE PART PROGRAMMERS INPUT.  MOST DATA IS         00001200
C---     IN COUPLET FORM - PRECEEDED BY ITS APT4 CODE VALUE AND         00001300
C---     THEN ITS NUMBERICAL CANON FORM.  FOR EXAMPLE, THE MINOR        00001400
C---     WORD CLW IS REPRESENTED BY THE INTEGER CODE 58. AND THEN       00001500
C---     BY ITS HOLLERITH FORM.  A POINT WOULD BE REPRESENTED BY        00001600
C---     ITS GEOMETRIC CLASS CODE (19.) AND THEN BY ITS THREE NUMERICAL 00001700
C---     VALUES.  ONE EXCEPTION IS THE WORD SPLINE WHICH IS CURRENTLY   00001800
C---     PASSED IN A SINGLE WORD AS HOLLERITH DATA.                     00001900
C---     WITH THE HELP OF THE AUXILIARY BUFFER ARRAY SSPAD, THIS        00002000
C---     INPUT DATA IS REPLACED BY A PROCESSED SSURF CANON FORM IN      00002100
C---     BLANK COMMON FROM LOCATION 41 ON.  THIS FORM IS SAVED          00002200
C---     ON AN EXTERNAL FILE BY MEANS OF A CALL TO APT094               00002300
C---     AN INTERNAL TWO-WORD CANON FORM CONTAINING THE SURFACE         00002400
C---     SEQUENTIAL IDENTIFICATION NUMBER AND SIZE IS INSERTED          00002500
C---     IN THE ARRAY A WHICH IS THE FIRST INPUT ARGUMENT.              00002600
C                                                                       00002700
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00002800
C                                                                       00002900
      INCLUDE 'TOTAL.INC'                                               00004101
      INCLUDE 'LDEF.INC'                                                00004801
C                                                                       00004900
      LOGICAL CKDEF                                                     00004940
      COMMON/ADDCOM/ADDCOM                                              00005000
      DIMENSION ADDCOM(25)                                              00005100
      EQUIVALENCE (ADDCOM(1),ELMAX),(ADDCOM(25),KDYNFL)                 00005200
      INCLUDE 'SSPAD.INC'                                               00005310
C                                                                       00005400
      INCLUDE 'BLANKCOM.INC'                                            00005510
C                                                                       00005600
      DIMENSION A(*),SNN(49),SOUT(48),TY(3),KTY(5),KTW(5)               00005700
      EQUIVALENCE (SNN(1),SCAN(1)), (SOUT(1),SCAN(50))                  00005800
C                                                                       00005900
      COMMON/MAXLDA/MAXLDA                                              00006000
C                                                                       00006100
      DIMENSION PA(3),PB(3),XMATRX(12)                                  00006110
      CHARACTER*6 IMESH,IPLUS,IMINUS,IXYZ,IXY,IYZ,IZX,ISPLIN,IPNVE,     00006120
     C   IPLGN,IPNSON,GENCUR,RULED,REVOL                                00006130
      CHARACTER*6 CTRAN(5)                                              00006140
      CHARACTER*6 COMBIN,TRAF,CROS                                      00006144
      COMMON/SSPRT/SSPRT,SSTEST                                         00006150
      LOGICAL SSPRT,SSTEST                                              00006160
      INTEGER IZAL1(12),IZAL2(3),IZAL3(3),IZAL4(13),IZAL5(4),           00006170
     1 IZAL6(8),IZAL7(20),IZAL8(4),IZAL9(1),IZA10(10),IZA11(6)          00006171
      CHARACTER*16 SSNAME                                               00006180
      CHARACTER*8 RNAM1,RNAM2,RNAM3,RNAM4,RNAM5,RNAM6,RNAM7,            00006181
     1 RNAM8,RNAM9,RNA10,RNA11,RNAMA,RNAME                              00006182
      CHARACTER*6 TEST1,TEST2,TEST3,TEST                                00006186
C                                                                       00006200
C---     SAVE AREA FOR HEADER OF INPUT CANON FORM                       00006300
      DIMENSION ASAV(10)                                                00006400
C                                                                       00006500
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC                                   00006600
C                                                                       00006700
C---  SOME MINOR WORD CODE NUMBERS FOLLOW                               00006800
      DATA VAXIS/146./                                                  00006900
      DATA VPOINT/19./                                                  00007000
      DATA VVECTO/20./                                                  00007100
      DATA VSCALA/21./                                                  00007200
      DATA VCLW/58./                                                    00007300
      DATA VCCLW/59./                                                   00007400
      DATA VMINUS/41./                                                  00007410
      DATA VPLUS/42./                                                   00007420
      DATA RULED,REVOL/'RULED ','REVOLV'/                               00007500
      DATA IMESH/'SMESH '/                                              00007900
      DATA IPLUS/'PLUS  '/                                              00008000
      DATA IMINUS/'MINUS '/                                             00008100
      DATA IXYZ/'XYZ   '/                                               00008200
      DATA IXY/'XYPLAN'/                                                00008300
      DATA IYZ/'YZPLAN'/                                                00008400
      DATA IZX/'ZXPLAN'/                                                00008500
      DATA ISPLIN/'SPLINE'/                                             00008600
      DATA IPNVE/'PNTVEC'/                                              00008700
      DATA IPLGN/'POLYGN'/                                              00008800
      DATA IPNSON/'PNTSON'/                                             00008900
      DATA GENCUR/'GENCUR'/                                             00009000
      DATA COMBIN/'COMBIN'/                                             00009100
      DATA TRAF/'TRFORM'/                                               00009101
      DATA SMAL,ZERO/1.0D-10,0.0D0/                                     00009200
      DATA CTRAN/'TRANSL','XYROT ','YZROT ','ZXROT ','SCALE '/          00009212
      DATA NCTRAN/5/                                                    00009214
      DATA CROS/'CROSS '/                                               00009216
      DATA SSNAME/'        '/                                           00009235
      DATA    RNAM1   /'APT107  '/, RNAM2   /'PNTSON  '/,               00009239
     *          RNAM3   /'CTRANS  '/, RNAM4   /'MESH    '/,             00009240
     *          RNAM5   /'REVOLV  '/, RNAM6   /'SRFCOM  '/,             00009241
     *          RNAM7   /'GENCRV  '/, RNAM8   /'DISEG   '/,             00009242
     *          RNAM9   /'COMPTW  '/, RNA10   /'SSPLIN  '/,             00009243
     *          RNA11   /'SMOOTH  '/,                                   00009244
     *          RNAMA   /'APT107??'/, RNAME   /'        '/              00009245
      DATA   IMAX1 /12/, IZAL1                                          00009246
     *                    / 5001, 5002, 5003, 5004, 5005, 5006,         00009247
     *                      5007, 5371, 5373, 5374, 5375, 5376/         00009248
      DATA   IMAX2 / 3/, IZAL2                                          00009249
     *                    / 5391, 5392, 5393/                           00009250
      DATA   IMAX3 / 3/, IZAL3                                          00009251
     *                    / 5377, 5378, 5379/                           00009252
      DATA   IMAX4 /13/, IZAL4                                          00009253
     *                    / 5210, 5211, 5212, 5213, 5214, 5215,         00009254
     *                      5216, 5217, 5218, 5219, 5220, 5222,         00009255
     *                      5300/                                       00009256
      DATA   IMAX5 / 4/, IZAL5                                          00009257
     *                    / 5352, 5354, 5355, 5356/                     00009258
      DATA   IMAX6 / 8/, IZAL6                                          00009259
     *                    / 5011, 5012, 5013, 5014,                     00009260
     *                      5015, 5016, 5017,-5019/                     00009261
      DATA   IMAX7 /20/, IZAL7                                          00009262
     *                    / 5025, 5026, 5027, 5028, 5029,               00009263
     *                      5030, 5031, 5032, 5033, 5034,               00009264
     *                      5035, 5036, 5037, 5038, 5039,               00009265
     *                      5040, 5041, 5043, 5044, 5045/               00009266
      DATA   IMAX8 / 4/, IZAL8                                          00009267
     *                    / 5021, 5022, 5023, 5024/                     00009268
      DATA   IMAX9 / 1/, IZAL9                                          00009269
     *                    / 5396/                                       00009270
      DATA   IMA10 /10/, IZA10                                          00009271
     *                    / 5901, 5902, 5903, 5904, 5905,               00009272
     *                      5906, 5907, 5908, 5909, 5910/               00009273
      DATA   IMA11 / 6/, IZA11                                          00009274
     *                    / 5921, 5922, 5923, 5924, 5925,               00009275
     *                      5934/                                       00009276
C                                                                       00009300
C---     FIRST PRESERVE THE INPUT HEADER TABLE                          00009400
      DO  1050 I=1,10                                                   00009500
 1050 ASAV(I)=SSCAN(I)                                                  00009600
C                                                                       00009700
C---     SET TEST1, TEST2 & TEST3 TO BE CHARACTER EQUIVALENTS OF ARG1,  00009730
C---     ARG2 & ARG3 (WHICH DO NOT CHANGE)                              00009740
      CALL HOLFRM(ARG1,TEST1,1,6,NWD)                                   00009750
      CALL HOLFRM(ARG2,TEST2,1,6,NWD)                                   00009760
      CALL HOLFRM(ARG3,TEST3,1,6,NWD)                                   00009770
C                                                                       00009780
C---     SET AUXILIARY FLAG FOR LEVEL OF PRINT                          00009800
      ISPRNT=2                                                          00009900
      IF(SSTEST) ISPRNT=1                                               00010000
      IF(.NOT.SSPRT) ISPRNT=0                                           00010100
      IF(TEST2.NE.TRAF) GO TO 9                                         00010101
      L=SSCAN(5)-12-1                                                   00010102
      DO 7 I=1,12                                                       00010103
      XMATRX(I)=SSCAN(L+I)                                              00010106
 7    CONTINUE                                                          00010107
      ASAV(5)=ASAV(5)-14.                                               00010108
      SSCAN(5)=SSCAN(5)-14.                                             00010109
  9    CONTINUE                                                         00010110
C---                                                                    00010200
      IER=0                                                             00011000
      IRULE=0                                                           00011100
      IERROR=0                                                          00011200
C---     HEADER  * PATCH *                                              00011300
      CALL HOLFRM(A(3),SSNAME,1,8,NWD)                                  00011400
      CALL CFORM('        ',SSNAME,8,8)                                 00011410
      CALL UNPACK(A(1),MODE,ISIZE,ISUB)                                 00011420
      IF(ISUB.LT.1) GOTO 8                                              00011430
      CALL HOLFRM(A(ISUB*ISIZE+ISUB),SSNAME,1,8,NWD)                    00011440
      CALL CFORM(' (     )',SSNAME,8,8)                                 00011450
      CALL ICONV(ISUB,SSNAME,10,4)                                      00011460
    8 CONTINUE                                                          00011470
C---     CHECK FOR SURFACE TYPE                                         00011500
      IF(TEST1.EQ.GENCUR) GO TO 4000                                    00011600
      IF(TEST1.EQ.COMBIN) GO TO 5000                                    00011700
      SSCAN(5)=1.0                                                      00011800
      IF(TEST1.EQ.RULED.OR.TEST1.EQ.REVOL) GO TO 2500                   00011900
C---     CHECK IF DEFN IS CURVE BY CURVE GENERAL TRANSFORM              00011910
      DO 6 I=1,NCTRAN                                                   00011912
      KCTRX=I                                                           00011914
      IF(TEST1.EQ.CTRAN(I)) GO TO 2600                                  00011916
    6 CONTINUE                                                          00011918
C---      KCTRX=0 MEANS TRANSFORM IS NOT CURVE BY CURVE TYPE.           00011920
      KCTRX=0                                                           00011922
      IF(TEST1.EQ.IMESH) GO TO 1000                                     00012000
      IF(TEST3.EQ.IPNVE) SSCAN(6)=1.0                                   00012100
      IF(TEST3.EQ.IPLGN) SSCAN(6)=2.0                                   00012200
      IF(TEST3.EQ.IPNSON) SSCAN(6)=3.0                                  00012300
      IF((TEST3.EQ.IPLUS).OR.(TEST3.EQ.IMINUS)) SSCAN(6)=1.0            00012400
      SSCAN(7)=1.0                                                      00012500
      CALL HOLFRM(SSCAN(9),TEST,1,6,NWD)                                00012560
      IF(TEST.EQ.IMINUS) SSCAN(7)=-1.0                                  00012600
      IF (TEST.EQ.IMINUS) SSCAN(9)=VMINUS                               00012610
      IF (TEST.EQ.IPLUS) SSCAN(9)=VPLUS                                 00012620
      SSCAN(4)=SSCAN(3)                                                 00012700
      NPH=SSCAN(4)                                                      00012800
      SS2=49.0*SSCAN(4)                                                 00012900
      SSCAN(3)=4.0*SSCAN(4)                                             00013000
      SSCAN(8)=10.+SS2+SSCAN(3)+SSCAN(4)*6.0                            00013100
      NN=NPH*6+10                                                       00013200
      IF(SSCAN(6).NE.1.0) GO TO 200                                     00013300
      GO TO 100                                                         00013400
C                                                                       00013500
C---     POINTER TABLE   * PATCH *                                      00013600
   10 CONTINUE                                                          00013700
      NN=NPH*6+10                                                       00013800
      TEMP=NN+1.0                                                       00013900
      AK=0.                                                             00014000
      DO 20 I=11,NN,6                                                   00014100
      SSCAN(I)=4.0                                                      00014200
      SSCAN(I+1)=4.0                                                    00014300
      SSCAN(I+2)=4.0                                                    00014400
      SSCAN(I+3)=1.0                                                    00014500
      SSCAN(I+4)=TEMP+49.0*AK                                           00014600
      SSCAN(I+5)=TEMP+SS2+4.0*AK                                        00014700
      AK=AK+1.                                                          00014800
   20 CONTINUE                                                          00014900
      GO TO 3000                                                        00015000
C                                                                       00015100
C---      VALUE TABLE   * PATCH *                                       00015200
C---      *  PNTVEC *                                                   00015300
  100 CONTINUE                                                          00015400
      K=0                                                               00015500
      M=10                                                              00015600
      J1=9                                                              00015700
      DO 120 L=1,NPH                                                    00015800
      DO 110 I=1,16                                                     00015900
      J=M+3*K                                                           00016000
      SNN(I)=SSCAN(J)                                                   00016100
      SNN(I+16)=SSCAN(J+1)                                              00016200
      SNN(I+32)=SSCAN(J+2)                                              00016300
      K=K+1                                                             00016400
  110 CONTINUE                                                          00016500
      M=M+1                                                             00016600
      DO 111 JA=1,48                                                    00016700
      JJ=J1+JA                                                          00016800
      SSCAN(JJ)=SNN(JA)                                                 00016900
  111 CONTINUE                                                          00017000
      J1=J1+49                                                          00017100
      SSCAN(J1)=1.0                                                     00017200
  120 CONTINUE                                                          00017300
  121 NN=NPH*6+10                                                       00017400
      LNGTH=49*NPH+NN                                                   00017500
      KLNGTH=49*NPH+9                                                   00017600
      DO 125 L=1,NPH                                                    00017700
      KBEGIN=KLNGTH-49*L                                                00017800
      LBEGIN=LNGTH-49*L                                                 00017900
      DO 123 I=1,49                                                     00018000
      IB=KBEGIN+I                                                       00018100
  123 SNN(I)=SSCAN(IB)                                                  00018200
      DO 124 I=1,49                                                     00018300
      IA=LBEGIN+I                                                       00018400
      NN=NN+1                                                           00018500
      SSCAN(IA)=SNN(I)                                                  00018600
  124 CONTINUE                                                          00018700
  125 CONTINUE                                                          00018800
      GO TO 10                                                          00018900
C---      * BEZIER POLYGN * PONTSON *                                   00019000
  200 J=0                                                               00019100
      II=9                                                              00019200
      DO 230 N=1,NPH                                                    00019300
      DO 210 I=1,48                                                     00019400
      SNN(I)=SSCAN(II+I)                                                00019500
  210 CONTINUE                                                          00019600
      IF(SSCAN(6).EQ.2.0) CALL BEZIER(SNN,SOUT,IER)                     00019700
      IF(SSCAN(6).EQ.3.0) CALL PNTSON(SNN,SOUT,KTY,KTW,IER)             00019800
      IF(IER.NE.0) GO TO 9996                                           00019900
      DO 220 J=1,48                                                     00020000
      I1=II+J                                                           00020100
      SSCAN(I1)=SOUT(J)                                                 00020200
  220 CONTINUE                                                          00020300
      II=II+49                                                          00020400
      SSCAN(II)=1.0                                                     00020500
  230 CONTINUE                                                          00020600
      GO TO 121                                                         00020700
C---      HEADER  * MESH *                                              00020800
 1000 CONTINUE                                                          00020900
      SSCAN(5)=2.0                                                      00021000
      SSCAN(7)=1.0                                                      00021100
      SSCAN(9)=SSCAN(3)                                                 00021200
      SSCAN(10)=SSCAN(4)                                                00021300
      IF((SSCAN(9).EQ.2.0).OR.(SSCAN(10).EQ.2.0)) IRULE=1               00021400
      SSCAN(4)=(SSCAN(9)-1.0)*(SSCAN(10)-1.0)                           00021500
      NPH=SSCAN(4)                                                      00021600
      SSCAN(3)=SSCAN(4)*4.0                                             00021700
      IF((TEST3.EQ.IXYZ).OR.(TEST3.EQ.ISPLIN)) GO TO 1010               00021800
      VL=21.                                                            00021900
      IF (IRULE.EQ.1) VL=25.                                            00022000
      SS2=SSCAN(4)*VL                                                   00022100
      IF(TEST3.EQ.IXY) GO TO 1001                                       00022200
      IF(TEST3.EQ.IYZ) GO TO 1002                                       00022300
      IF(TEST3.EQ.IZX) GO TO 1003                                       00022400
      IERROR=5001                                                       00022500
      GO TO 9996                                                        00022600
 1001 SSCAN(6)=1.0                                                      00022700
      TY(1)=2.0                                                         00022800
      TY(2)=2.0                                                         00022900
      TY(3)=3.0                                                         00023000
      IF(IRULE.EQ.1) TY(3)=4.0                                          00023100
      GO TO 1020                                                        00023200
 1002 SSCAN(6)=2.0                                                      00023300
      TY(1)=3.0                                                         00023400
      IF(IRULE.EQ.1) TY(1)=4.0                                          00023500
      TY(2)=2.0                                                         00023600
      TY(3)=2.0                                                         00023700
      GO TO 1020                                                        00023800
 1003 SSCAN(6)=3.0                                                      00023900
      TY(1)=2.0                                                         00024000
      TY(2)=3.0                                                         00024100
      IF(IRULE.EQ.1) TY(2)=4.0                                          00024200
      TY(3)=2.0                                                         00024300
      GO TO 1020                                                        00024400
 1010 SSCAN(6)=4.0                                                      00024500
      TY(1)=3.0                                                         00024600
      TY(2)=3.0                                                         00024700
      TY(3)=3.0                                                         00024800
      VL=37.                                                            00024900
      IF(IRULE.EQ.1) GO TO 1011                                         00025000
      SS2=NPH*VL                                                        00025100
      GO TO 1020                                                        00025200
 1011 TY(1)=4.0                                                         00025300
      TY(2)=4.0                                                         00025400
      TY(3)=4.0                                                         00025500
      VL=49.                                                            00025600
      SS2=SSCAN(4)*VL                                                   00025700
 1020 SSCAN(8)=10.+SS2+SSCAN(3)+NPH*6.0                                 00025800
C                                                                       00025900
      CALL MESH(IERROR,IER,ITW,SSNAME,ASAV)                             00026000
      IF(IERROR.GT.0) GO TO 9996                                        00026100
      IF (ITW .NE. 0 .OR.  IRULE .NE.1) GO TO 2200                      00026200
      IRULE=0                                                           00026300
      IF (TY(1).EQ.4.) TY(1)=3.                                         00026400
      IF (TY(2).EQ.4.) TY(2)=3.                                         00026500
      IF (TY(3).EQ.4.) TY(3)=3.                                         00026600
      IF (VL.EQ.49.) VL=37.                                             00026700
      IF (VL.EQ.25.) VL=21.                                             00026800
      SS2=SSCAN(4)*VL                                                   00026900
      SSCAN(8)=10.+SS2+SSCAN(3)+SSCAN(4)*6.                             00027000
 2200 CONTINUE                                                          00027100
C---      POINTER TABLE  *  MESH *                                      00027200
      NN=NPH*6+10                                                       00027300
      AK=0.                                                             00027400
      TEMP=NN+1.0                                                       00027500
      DO 1030 I=11,NN,6                                                 00027600
      SSCAN(I)=TY(1)                                                    00027700
      SSCAN(I+1)=TY(2)                                                  00027800
      SSCAN(I+2)=TY(3)                                                  00027900
      SSCAN(I+3)=1.0                                                    00028000
      SSCAN(I+4)=TEMP+VL*AK                                             00028100
      SSCAN(I+5)=TEMP+SS2+4.0*AK                                        00028200
      AK=AK+1.                                                          00028300
 1030 CONTINUE                                                          00028400
      M=SSCAN(8)                                                        00028500
      GO TO 3000                                                        00028600
C                                                                       00028700
C---  REVOLV AND RULED PROCESSING FOLLOWS                               00028800
 2500 CONTINUE                                                          00028900
      NBASE=40                                                          00029000
      NSIZE=CANON(NBASE+5)                                              00029100
      NCUR=NBASE+10                                                     00029200
C---     CHECK FOR AVAILABLE SPACE FOR THIS SYNTHETIC CURVE             00029300
      N=CANON(NCUR+1)                                                   00029400
C****    NOT ENOUGH SPACE IN BUFFER TO LOAD THIS CURVE                  00029500
      IRR=1                                                             00029600
      IF(N.GT.NSCNMX) GO TO 9997                                        00029700
C                                                                       00029800
      JMODE=2                                                           00029900
      IF(CKDEF(CANON(NCUR))) GO TO 9997                                 00030000
      CALL APT094(JMODE,CANON(NCUR),SCAN)                               00030100
C****     HAS THE CURVE BEEN SUCCESSFULLY RETRIEVED                     00030200
      IRR=2                                                             00030300
      IF(CKDEF(CANON(NCUR))) GO TO 9997                                 00030400
      NCUR=NCUR+2                                                       00030500
C****     THE WORD AXIS MUST BE NEXT                                    00030600
      IRR=3                                                             00030700
      IF(CANON(NCUR).NE.VAXIS) GO TO 9997                               00030800
      NCUR=NCUR+2                                                       00030900
      IF(TEST1.EQ.RULED) GO TO 2540                                     00031000
C****     CHECK FOR CORRECT GEOMETRIC DEFINITION OF AXIS                00031100
      IRR=4                                                             00031200
      IF(CANON(NCUR).NE.VPOINT) GO TO 9997                              00031300
      IF(CANON(NCUR+4).NE.VPOINT.AND.CANON(NCUR+4).NE.VVECTO) GO TO 999700031400
      DUM=0.                                                            00031500
      IF(CANON(NCUR+4).EQ.VVECTO) DUM=1.                                00031600
      DO 2510 I=1,3                                                     00031700
      PA(I)=CANON(NCUR+I)                                               00031800
 2510 PB(I)=DUM*PA(I)+CANON(NCUR+4+I)                                   00031900
      NCUR=NCUR+8                                                       00032000
C****     THE NEXT INPUT SHOULD BE ANGULAR SPAN                         00032100
      IRR=5                                                             00032200
      IF(CANON(NCUR).NE.VCLW.AND.CANON(NCUR).NE.VCCLW) GO TO 9997       00032300
      IF(CANON(NCUR).EQ.VCLW) ICCLW=1                                   00032400
      IF(CANON(NCUR).EQ.VCCLW) ICCLW=-1                                 00032500
      NCUR=NCUR+2                                                       00032600
C****     TWO ANGLES SHOULD FOLLOW                                      00032700
      IRR=6                                                             00032800
      IF(CANON(NCUR).NE.VSCALA.OR.CANON(NCUR+2).NE.VSCALA) GO TO 9997   00032900
      ANGA=CANON(NCUR+1)                                                00033000
      ANGB=CANON(NCUR+3)                                                00033100
      GO TO 2550                                                        00033200
C--- CYLINDRICAL PROCESSING                                             00033300
 2540 CONTINUE                                                          00033400
      IF(CANON(NCUR).EQ.VVECTO) GO TO 2560                              00033500
C****     ARGUMENTS MUST BE ONE VECTOR OR TWO POINTS                    00033600
      IRR=7                                                             00033700
      IF(CANON(NCUR).NE.VPOINT. OR.CANON(NCUR+4).NE.VPOINT) GO TO 9997  00033800
      DO 2570 I=1,3                                                     00033900
      PA(I)=CANON(NCUR+I)                                               00034000
 2570 PB(I)=CANON(NCUR+4+I)                                             00034100
      GO TO 2580                                                        00034200
 2560 CONTINUE                                                          00034300
      DO 2590 I=1,3                                                     00034400
      PA(I)=0.0                                                         00034500
 2590 PB(I)=CANON(NCUR+I)                                               00034600
C---    SET SPECIAL VALUES FOR CCLW INPUT                               00034700
 2580 CONTINUE                                                          00034800
      ICCLW=0                                                           00034900
      ANGA=0.                                                           00035000
      ANGB=90.                                                          00035100
 2550 CONTINUE                                                          00035200
C                                                                       00035300
C---   CONDUCT MAIN ANALYTIC PROCESSING FOR SURFACE                     00035400
      CALL REVOLV(SCAN,PA,PB,ANGA,ANGB,ICCLW,IRR,SSCAN)                 00035500
      IF(IRR.EQ.0) GO TO 3000                                           00035600
C                                                                       00035700
      IRR=IRR+350                                                       00035800
      GO TO 9997                                                        00035900
C                                                                       00035910
C---      CURVE BY CURVE TRANSFORM TYPE                                 00035912
 2600 CONTINUE                                                          00035914
C---      FIRST FETCH BOTH CURVES AND LOAD INTO SCAN ARRAY              00035916
      NBASE=40                                                          00035918
      NCUR=NBASE+10                                                     00035920
      N=CANON(NCUR+1)                                                   00035922
C****    NOT ENOUGH SPACE TO FETCH CURVE                                00035924
      IRR=1                                                             00035926
      IF(N.GT.NSCNMX) GO TO 2699                                        00035928
      JMODE=2                                                           00035930
C****    CURVE NOT DEFINED                                              00035932
      IF(CKDEF(CANON(NCUR))) GO TO 2699                                 00035934
      JMODE=2                                                           00035936
      CALL APT094(JMODE,CANON(NCUR),SCAN(1))                            00035938
C****    CURVE COULD NOT BE FETCHED                                     00035940
      IRR=3                                                             00035942
      IF(JMODE.NE.2) GO TO 2699                                         00035944
C****    THE WORD CROSS MUST BE NEXT                                    00035946
      CALL HOLFRM(CANON(NCUR+3),TEST,1,6,NWD)                           00035947
      IF(TEST.NE.CROS) GO TO 2699                                       00035948
C---     LOAD THE CROSS CURVE NEXT                                      00035950
      LOCC=SCAN(12)+1.                                                  00035952
C****    THERE IS NOT ENOUGH SPACE TO LOAD THE CROSS CURVE              00035954
      N=CANON(NCUR+5)                                                   00035956
      IRR=4                                                             00035958
      IF(N+LOCC.GT.NSCNMX) GO TO 2699                                   00035960
C****    CURVE NOT DEFINED                                              00035962
      IRR=5                                                             00035964
      IF(CKDEF(CANON(NCUR+4))) GO TO 2699                               00035966
      JMODE=2                                                           00035968
      CALL APT094(JMODE,CANON(NCUR+4),SCAN(LOCC))                       00035970
C****    FAILURE IN ATTEMPT TO FETCH CROSS CURVE                        00035972
      IRR=6                                                             00035974
      IF(JMODE.NE.2) GO TO 2699                                         00035976
C---      CURVES ARE READY, CALL TO GENERATE SURFACE                    00035978
      CALL CTRANS(SCAN(1),SCAN(LOCC),KCTRX,MAXLDA,SSCAN(1),IRR)         00035980
      IF(IRR.EQ.0) GO TO 3000                                           00035982
      IRR=IRR+6                                                         00035984
C---     COMMON ERROR JUNCTION FOR CURVE BY CURVE TRANSFORMS            00035986
 2699 IRR=IRR+370                                                       00035988
      GO TO 9997                                                        00035990
C                                                                       00035992
C                                                                       00036000
C---     PROCESSING FOR GENCUR TYPE SURFACE FOLLOWS.                    00036100
C                                                                       00036200
 4000 CONTINUE                                                          00036300
      CALL GENCRV(A,ARG1,ARG2,ARG3,IERROR)                              00036400
C---     FILL IN UNDETERMINED HEADER ITEMS                              00036500
C---     SIZE OF THE TOPOLOGY TABLE IS 4*NUMBER OF PATCHES              00036600
      SSCAN(3)=4.*SSCAN(4)                                              00036700
C---     SET SUBCLASS TO GENCUR SURFACE                                 00036800
      SSCAN(6)=6.                                                       00036900
C---     TOTAL SIZE OF SURFACE IS SUM OF HEADER, POINTERS,              00037000
C---     VALUE TABLE AND TOPOLOGY TABLE                                 00037100
      SSCAN(8)=SSCAN(2)+SSCAN(3)+10.+6.*SSCAN(4)                        00037200
      IF(IERROR.NE.0) GO TO 9996                                        00037300
      GO TO 3000                                                        00037400
C                                                                       00037500
C---     PROCESS SSURF/COMBIN                                           00037600
 5000 CONTINUE                                                          00037700
      CALL SRFCOM(ISPRNT,IRR)                                           00037800
      IF(IRR.NE.0) GO TO 9995                                           00037900
      A(2)=SSCAN(8)                                                     00038000
C---     BYPASS CALL TO TOPGEN, SINCE TOPOLOGY TABLE HAS BEEN GENERATED 00038100
      GO TO 3002                                                        00038200
C                                                                       00038300
C---     FINAL PROCESSING FOR ALL SURFACE TYPES                         00038400
 3000 CONTINUE                                                          00038500
      A(2)=SSCAN(8)                                                     00038600
      NTOT=SSCAN(8)                                                     00038700
      DO 3001 I=1,NTOT                                                  00038800
      IF(DABS(SSCAN(I)).LT.SMAL) SSCAN(I)=ZERO                          00038900
 3001 CONTINUE                                                          00039000
C                                                                       00039100
      CALL TOPGEN(SSCAN(1))                                             00039200
C---     ADJUST TYPE POINTER FOR GENCUR CASE                            00039300
C--- IN THE REVOLV,RULED CASE THE SURFACE IS TREATED AS A PATCH TYPE    00039400
C--- FOR TOPOLOGY TABLE GENERATION AND SUBSEQUENTLY AS A SIMPLE MESH    00039500
      IF(TEST1.NE.REVOL.AND.TEST1.NE.RULED.AND.KCTRX.EQ.0)              00039810
     X      GO TO 3006                                                  00039820
      SSCAN(5)=2.0                                                      00039830
      GO TO 3007                                                        00039840
 3006 CONTINUE                                                          00039850
      IF(TEST1.NE.GENCUR) SSCAN(2)=SS2                                  00039860
 3007 CONTINUE                                                          00039870
C                                                                       00039900
      IF(.NOT.SSPRT) GO TO 3002                                         00040000
      IF(TEST1.EQ.GENCUR) GO TO 3002                                    00040100
      IF(TEST2.EQ.TRAF) GO TO 3002                                      00040110
      CALL SSPICT(SSCAN(1),SSNAME,ISPRNT)                               00040200
C                                                                       00040300
 3002  IF(TEST2.EQ.TRAF) GO TO 3004                                     00040400
 3005  JMODE=1                                                          00040500
      CALL APT094(JMODE,A(1),SSCAN(1))                                  00040600
      IRR=0                                                             00040700
      IF(JMODE.NE.1) GO TO 9997                                         00040800
C                                                                       00040900
C----                                                                   00041000
      IF(TEST1.NE.GENCUR) GO TO 3003                                    00041100
      IF(.NOT.SSPRT) GO TO 3003                                         00041101
      CALL SSPICT(SSCAN(1),SSNAME,ISPRNT)                               00041200
       GO TO 3003                                                       00041201
 3004  CALL SSTRA(XMATRX(1),A(1),SSCAN(1),ISPRNT)                       00041202
      IF(TEST1.EQ.GENCUR) GO TO 3003                                    00041203
       GO TO 3005                                                       00041204
 3003 CONTINUE                                                          00041300
C                                                                       00041400
      IF(IBUG.NE.11) GO TO 5011                                         00041500
C---     LIST SURFACE CANON FORM FOR DEBUGGING PURPOSES                 00041600
      NTOT=SSCAN(8)                                                     00041700
      CALL BAD(-NTOT,1,'CAN ',SSCAN)                                    00041800
 5011 CONTINUE                                                          00041900
      GO TO 9999                                                        00042000
C ERROR JUNCTION OF SRFCOM, NO WARNING POSSIBLE !!!!                    00042100
 9995 IRR=IABS(IRR)+10                                                  00042200
 9997 IERROR=5000+IRR                                                   00042300
 9996 RNAME=RNAMA                                                       00042400
      DO 8001 IL1=1,IMAX1                                               00042500
 8001 IF (IERROR.EQ.IZAL1(IL1)) RNAME=RNAM1                             00042510
      DO 8002 IL2=1,IMAX2                                               00042520
 8002 IF (IERROR.EQ.IZAL2(IL2)) RNAME=RNAM2                             00042530
      DO 8003 IL3=1,IMAX3                                               00042540
 8003 IF (IERROR.EQ.IZAL3(IL3)) RNAME=RNAM3                             00042550
      DO 8004 IL4=1,IMAX4                                               00042560
 8004 IF (IERROR.EQ.IZAL4(IL4)) RNAME=RNAM4                             00042570
      DO 8005 IL5=1,IMAX5                                               00042580
 8005 IF (IERROR.EQ.IZAL5(IL5)) RNAME=RNAM5                             00042585
      DO 8006 IL6=1,IMAX6                                               00042586
 8006 IF (IERROR.EQ.IZAL6(IL6)) RNAME=RNAM6                             00042587
      DO 8007 IL7=1,IMAX7                                               00042589
 8007 IF (IERROR.EQ.IZAL7(IL7)) RNAME=RNAM7                             00042590
      DO 8008 IL8=1,IMAX8                                               00042591
 8008 IF (IERROR.EQ.IZAL8(IL8)) RNAME=RNAM8                             00042592
      DO 8009 IL9=1,IMAX9                                               00042593
 8009 IF (IERROR.EQ.IZAL9(IL9)) RNAME=RNAM9                             00042594
      DO 8010 I10=1,IMA10                                               00042595
 8010 IF (IERROR.EQ.IZA10(I10)) RNAME=RNA10                             00042596
      DO 8011 I11=1,IMA11                                               00042597
 8011 IF (IERROR.EQ.IZA11(I11)) RNAME=RNA11                             00042598
      CALL ERROR(IERROR,RNAME)                                          00042599
 9998 CONTINUE                                                          00042600
      CALL UNDEF(A(1))                                                  00042700
C                                                                       00042800
 9999 CONTINUE                                                          00042900
      RETURN                                                            00043000
      END                                                               00043100
**** SOURCE FILE : M0004345.V14   ***
*
      SUBROUTINE APT108(A,A1,A2,A3)                                     00000100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000200
C---  PURPOSE  IS TO ACCEPT PART PROGRAMMERS INPUT FOR THE DEFINITION   00000300
C---  OF A SYNTHETIC CURVE AND PROCESS THIS  INTO  COONS RATIONAL       00000400
C---   PARAMETRIC CUBIC SEGMENTS.  THE PROCESSED DATA BASE IS THEN      00000500
C---   DISPLAYED ON THE VLFILE(SPRINT) AND SAVED(APT094) AS A LARGE DATA00000600
C---  DATA ARRAY.                                                       00000700
C---   A(3) INPUT  CONTAINS 1 AND 2 THE INTERNAL CANON FORM OF THE      00000800
C---               SYNTHETIC CURVE .  A(3) IS THE PP NAME               00000900
C---   BLANK COMMON CANON(41 THRU ... ) CONTAINS THE PART PROGRAMMERS   00001000
C---           INPUT STREAM                                             00001100
C---  SC IS THE WORK ARRAY WHICH IS USED TO BUILD UP THE ANALYTIC DEFIN 00001200
C---               ITION OF THE CURVE                                   00001300
C                                                                       00001400
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC                                   00001500
C                                                                       00001599
      INCLUDE 'TOTAL.INC'                                               00001901
C                                                                       00002000
C                                                                       00002100
      DIMENSION A(*)                                                    00002200
C                                                                       00002310
      INCLUDE 'BLANKCOM.INC'                                            00002320
C                                                                       00002330
C---     SC(4,6,31) HOLDS BASIC CURVE, REST HOLDS FLOW EDITED INPUT     00002400
C                                                                       00002500
      INCLUDE 'SSPAD.INC'                                               00002610
      DIMENSION SC(4,6,32)                                              00002700
      EQUIVALENCE (SCAN(1),SC(1,1,1))                                   00002800
C                                                                       00002900
      DIMENSION XMATRX(12)                                              00003000
C                                                                       00003100
      DIMENSION SCI(72),SCB(24),SCV0(24),SCV1(24),SCV2(24)              00003200
      EQUIVALENCE (SCI(1),SC(1,1,1)),(SCB(1),SC(1,1,4)),                00003300
     * (SCV0(1),SC(1,1,5)),(SCV1(1),SC(1,1,6)),(SCV2(1),SC(1,1,7))      00003400
C                                                                       00003500
      LOGICAL CKDEF                                                     00003600
      INCLUDE 'SYMFIL.INC'                                              00003610
      COMMON/SSPRT/SSPRT,SSTEST                                         00003620
      LOGICAL SSPRT,SSTEST                                              00003630
      INTEGER IZAL1(9),IZAL2(5),IZAL3(10),IZAL4(6)                      00003640
      CHARACTER*8 RNAM1,RNAM2,RNAM3,RNAM4,RNAMA,RNAME,BLA,SUBSC         00003650
      CHARACTER*6 CURSEG,SPLINE,COMBIN,END,TRAF,TEST,TEST1,TEST2        00003660
      CHARACTER*16 SCNAME                                               00003670
C                                                                       00003700
      DOUBLE PRECISION LENGTH,LIMIT,NORMAL                              00003800
C                                                                       00003890
C---     THE FOLLOWING ARRAY IS SHARED FOR PRINTING                     00003900
      INCLUDE 'DARRAY.INC'                                              00004020
C                                                                       00004030
      DATA MAXNOP/30/                                                   00004100
      DATA NHD/1/                                                       00004200
      DATA POINT /19./                                                  00004300
      DATA VECTOR/20./                                                  00004400
      DATA AREAL /21./                                                  00004500
      DATA TANSPL/136./                                                 00004600
      DATA CRSSPL/137./                                                 00004700
      DATA NORMAL/013./                                                 00004800
      DATA WEIGHT/138./                                                 00004900
      DATA LIMIT /139./                                                 00005000
      DATA CURSEG/'CURSEG'/                                             00005200
      DATA SPLINE/'SPLINE'/                                             00005300
      DATA COMBIN/'COMBIN'/                                             00005400
      DATA END/'END   '/                                                00006200
      DATA TRAF/'TRFORM'/                                               00006300
      DATA ZERO,ONE,SMAL,BIG/0.0D0, 1.0D0, 1.0D-7, 99999999.0D0/        00006400
      DATA SMAL1,SMAL2/1.D-5,1.D-3/                                     00006500
      DATA SUBSC/' (     )'/                                            00006700
C                                                                       00006800
      DATA BLA/'        '/                                              00006831
C                                                                       00006852
      DATA    RNAM1   /'APT108  '/,RNAM2   /'SCURV   '/,                00006854
     *          RNAM3   /'SSPLIN  '/,RNAM4   /'SMOOTH  '/,              00006855
     *          RNAMA   /'APT108??'/,RNAME   /'        '/               00006856
      DATA IMAX1/ 9/, IZAL1                                             00006858
     *                    / 5121, 5122, 5123, 5124, 5125,               00006860
     *                      5126, 5127, 5128, 5129/                     00006862
      DATA IMAX2/ 5/, IZAL2                                             00006864
     *                    / 5751, 5752, 5760, 5770, 5771/               00006866
      DATA IMAX3/10/, IZAL3                                             00006868
     *                    / 5901, 5902, 5903, 5904, 5905,               00006870
     *                      5906, 5907, 5908, 5909, 5910/               00006872
      DATA IMAX4/ 6/, IZAL4                                             00006874
     *                    / 5921, 5922, 5923, 5924, 5925,               00006876
     *                      5926/                                       00006878
C                                                                       00006900
      CALL HOLFRM(A(3),SCNAME,1,8,NWD)                                  00007000
      SCNAME(9:16)=BLA                                                  00007050
C---     IF SUBSCRIPT IS BIGGER  THAN ONE, ONLY SUBCRIPT IS SHOWN       00007100
      CALL UNPACK(A(1),MODE,ISIZE,ISUB)                                 00007200
      IF(ISUB.LT.1)GOTO 8                                               00007300
      SCNAME(9:16)=SUBSC                                                00007350
      CALL ICONV(ISUB,SCNAME,10,4)                                      00007400
      CALL HOLFRM(A(ISUB*ISIZE+ISUB),SCNAME,1,8,NWD)                    00007430
    8 CONTINUE                                                          00007460
      NP=0                                                              00007500
      NH=41                                                             00007600
      NHD1=NHD+1                                                        00007800
      NSIZE=CANON(NH+4)+39                                              00007900
      NSZSAV=NSIZE                                                      00008000
      M1=MAXNOP+NHD                                                     00008100
      NS=NH+8                                                           00008200
C                                                                       00008210
C...SET TEST1 & TEST2 TO BE CHARACTER EQUIVALENTS OF A1 & A2.           00008220
      CALL HOLFRM(A1,TEST1,1,6,NWD)                                     00008230
      CALL HOLFRM(A2,TEST2,1,6,NWD)                                     00008240
C                                                                       00008300
C---      FETCH THE TRFORM MATRIX IF PRESENT AND THEN TRUNCATE          00008400
C---      THE LENGTH OF INPUT DATA TO IGNORE THE TRAILING MATRIX        00008500
      IF(TEST2.NE.TRAF) GO TO 9                                         00008600
      L=CANON(45)-12-1+40                                               00008700
      DO 7 I=1,12                                                       00008800
      XMATRX(I)=CANON(L+I)                                              00008900
    7 CONTINUE                                                          00009000
      NSIZE=NSIZE-14                                                    00009100
      NSZSAV=NSIZE                                                      00009200
    9 CONTINUE                                                          00009300
C                                                                       00009400
C---      SCAN INPUT STREAM FOR FLOW/SEG DATA.  IF FOUND IFLSEG=1 ELSE 000009500
      CALL FLOSEG(NSIZE,NSZSAV,1,IFLSEG,IRR)                            00009600
      IF(IRR.NE.0) GO TO 995                                            00009700
C                                                                       00009800
C                                                                       00009900
C---    NOW REDUCE SIZE PARAMETER SINCE ALL FLOW/SEGMENT                00010000
C---     INFORMATION HAS BEEN STORED IN THE STEMP BUFFER                00010100
      NSIZE=NSZSAV                                                      00010200
C                                                                       00010300
C                                                                       00010400
C---     NORMAL PHYSICAL SHAPE OF CURVE IS PROCESSED NOW                00010500
C--------------------------------------------------------               00010600
C---     BRANCH TO SPECIAL PROCESSING FOR MODE COMBINE.                 00010700
      IF(TEST1.EQ.COMBIN) GO TO 3000                                    00010800
C                                                                       00010900
C----     SCAN AND ORGANIZE INPUT DATA FOR SPLINE OR CURSEG DEFN.       00011000
C--- INITIALIZE THE SCRATCH PAD AREA FOR A CURVE                        00011100
      DO 1 L=1,M1                                                       00011200
      DO 2 K=1,6                                                        00011300
      DO 2 J=1,4                                                        00011400
    2 SC(J,K,L)=ZERO                                                    00011500
      IF(L.GT.NHD) SC(1,5,L)=ONE                                        00011600
      IF(L.GT.NHD) SC(2,5,L)=ZERO                                       00011700
    1 CONTINUE                                                          00011800
C****  FIRST WORD MUST BE SPLINE OR CURSEG                              00011900
      SC(2,1,1)=NHD                                                     00012000
      IRR=1                                                             00012100
      CALL HOLFRM(CANON(NS),TEST,1,6,NWD)                               00012190
      IF(TEST.NE.SPLINE.AND.TEST.NE.CURSEG) GO TO 998                   00012200
      IF(TEST.EQ.SPLINE) SC(3,1,1)=2.0                                  00012300
      IF(TEST.EQ.CURSEG) SC(3,1,1)=3.0                                  00012400
      NS=NS+1                                                           00012500
C                                                                       00012600
   10 CONTINUE                                                          00012700
      T=CANON(NS)                                                       00012800
      CALL HOLFRM(T,TEST,1,6,NWD)                                       00012890
      IF(TEST.EQ.END.OR.NS.GT.NSIZE) GO TO 1000                         00012900
      IF(T.EQ.POINT) GO TO 100                                          00013000
      IF(T.EQ.TANSPL.OR.T.EQ.CRSSPL.OR.T.EQ.NORMAL) GO TO 200           00013100
      IF(T.EQ.WEIGHT) GO TO 300                                         00013200
      IF(T.EQ.LIMIT) GO TO 400                                          00013300
C****  ILLEGAL TERM IN INPUT STREAM                                     00013400
      IRR=2                                                             00013500
      GO TO 998                                                         00013600
C---   PROCESS AN INPUT POINT                                           00013700
  100 CONTINUE                                                          00013800
      NP=NP+1                                                           00013900
      IRR=3                                                             00014000
      IF(NP.GT.MAXNOP) GO TO 998                                        00014100
      DO 110 L=1,3                                                      00014200
  110 SC(L,1,NP+NHD)=CANON(NS+L)                                        00014300
      NS=NS+4                                                           00014400
C                                                                       00014500
      GO TO 10                                                          00014600
C---  PROCESS VECTOR CONSTRAINTS                                        00014700
  200 CONTINUE                                                          00014800
C****  IF NO POINTS HAVE BEEN ENTERED, QUIT                             00014900
      IRR=4                                                             00015000
      IF(NP.EQ.0) GO TO 998                                             00015100
      K=2                                                               00015200
      IF(T.EQ.CRSSPL) K=3                                               00015300
      IF(T.EQ.NORMAL) K=4                                               00015400
C***   GEOMETRIC ENTRY SHOULD BE A VECTOR                               00015500
      IRR=5                                                             00015600
      IF(CANON(NS+2).NE.VECTOR) GO TO 998                               00015700
      DO 210 L=1,3                                                      00015800
  210 SC(L,K,NP+NHD)=CANON(NS+L+2)                                      00015900
      SC(4,K,NP+NHD)=ONE                                                00016000
      NS=NS+6                                                           00016100
C                                                                       00016200
      GO TO 10                                                          00016300
  300 CONTINUE                                                          00016400
C****  GEOMETRIC ARGUMENT MUST BE REAL                                  00016500
      IRR=6                                                             00016600
      IF(CANON(NS+2).NE.AREAL) GO TO 998                                00016700
      WT=DMAX1(SMAL,CANON(NS+3))                                        00016800
      WT=DMIN1(ONE,WT)                                                  00016900
      SC(1,5,NP+NHD)=WT                                                 00017000
      NS=NS+4                                                           00017100
C                                                                       00017200
      IF(NP.GT.0) GO TO 10                                              00017300
C---   IF WEIGHT COMES BEFORE THE FIRST POINT, THIS WEIGHT IS APPLIED   00017400
C---  TO ALL POINTS                                                     00017500
      DO 350 I=NHD1,M1                                                  00017600
  350 SC(1,5,I)=WT                                                      00017700
C                                                                       00017800
      GO TO 10                                                          00017900
C---  PROCESS INPUT LIMIT CONSTRAINT                                    00018000
  400 CONTINUE                                                          00018100
C****  GEOMETRIC ARGUMENT MUST BE REAL                                  00018200
      IRR=6                                                             00018300
      IF(CANON(NS+2).NE.AREAL) GO TO 998                                00018400
      AL=DMAX1(ZERO,CANON(NS+3))                                        00018500
      AL=DMIN1(BIG,AL)                                                  00018600
      SC(2,5,NHD+NP)=AL                                                 00018700
      NS=NS+4                                                           00018800
C                                                                       00018900
      IF(NP.GT.0) GO TO 10                                              00019000
      DO 450 I=NHD1,M1                                                  00019100
  450 SC(2,5,I)=AL                                                      00019200
C                                                                       00019300
      GO TO 10                                                          00019400
C---   INPUT HAS BEEN FORMALLY LOADED INTO THE SC ARRAY                 00019500
C---  NOW CALL FOR ANALYTIC PROCESSING                                  00019600
 1000 CONTINUE                                                          00019700
      SC(4,1,1)=NP                                                      00019800
C                                                                       00019900
      IF(SSPRT.AND.SSTEST) CALL SCPICT(SC,SCNAME,0)                     00020000
C                                                                       00020100
      CALL SCURV(SC,IRR)                                                00020200
      IF(IRR.NE.0) IERROR=IRR                                           00020300
      IF(IRR.NE.0) GO TO 996                                            00020400
C                                                                       00020500
C---   MOVE THE CURVE DATA FROM THE SCRATCH AREA TO BLANK COMMON        00020600
      KKC=40                                                            00020700
      NPPLUS=NP+SC(2,1,1)                                               00020800
      DO 9020 K=1,NPPLUS                                                00020900
      DO 9020 J=1,6                                                     00021000
      DO 9020 I=1,4                                                     00021100
      KKC=KKC+1                                                         00021200
 9020 CANON(KKC)=SC(I,J,K)                                              00021300
C                                                                       00021400
      GO TO 9000                                                        00021500
C                                                                       00021600
C---      FETCH ALL CURVES FROM A SCURV/COMBIN COMMAND                  00021700
C---      NOTE LOGIC FOR TREATMENT OF CONFLICTING CRSSPL AND NORMAL     00021800
C---      CONSTRAINT VECTORS AT CURVE JUNCTIONS.                        00021900
 3000 NP=CANON(NH+3)                                                    00022000
      K=0                                                               00022100
      DO 3100 I=NS,NSIZE                                                00022200
      K=K+1                                                             00022300
 3100 SCI(K)=CANON(I)                                                   00022400
      NS=NH                                                             00022500
      I=1                                                               00022600
      NBLK=0                                                            00022700
 4000 II=2*I-1                                                          00022800
      JMODE=2                                                           00022900
      IRR=7                                                             00023000
      IF(CKDEF(SCI(II))) GO TO 998                                      00023100
C                                                                       00023200
C---     READ IN THE NEXT CURVE FROM THE INPUT STREAM.                  00023300
C                                                                       00023400
      CALL APT094(JMODE,SCI(II),CANON(NS))                              00023500
C****                                                                   00023600
C****    CURVES WITH A FLOW RATE CANNOT BE COMBINED YET                 00023700
C***      AT MOST ONE FLOW CURVE CAN BE COMBINED AT PRESENT             00023800
      IF(I.GT.1.AND.CANON(NS+2).GT.9.0) GO TO 998                       00023900
      NS1=NS                                                            00024200
      NS2=NS+24                                                         00024300
      NBLK1=CANON(NS+3)                                                 00024400
      NBLK=NBLK+NBLK1                                                   00024500
      NS=NBLK1*24+NS                                                    00024600
      IF(I.EQ.1) GO TO 3200                                             00024700
C                                                                       00024800
      CALL CNCURV(ZERO,CANON(NS2),SCV1,1)                               00024900
      SCV2(1)=DABS(SCV1(1)-SCV0(1))                                     00025000
      SCV2(2)=DABS(SCV1(2)-SCV0(2))                                     00025100
      SCV2(3)=DABS(SCV1(3)-SCV0(3))                                     00025200
      DDMAX=DMAX1(SCV2(1),SCV2(2),SCV2(3))                              00025300
C****                                                                   00025400
      IRR=8                                                             00025500
      IF(DDMAX.GT.SMAL1) GO TO 998                                      00025600
      IF(DDMAX.LT.SMAL) GO TO 3300                                      00025700
      DDMAX=CANON(NS2+12)                                               00025800
      CANON(NS2)=SCV0(1)*DDMAX                                          00025900
      CANON(NS2+4)=SCV0(2)*DDMAX                                        00026000
      CANON(NS2+8)=SCV0(3)*DDMAX                                        00026100
 3300 DDMAX=DABS(SCV0(13)*SCV1(13)+SCV0(14)*SCV1(14)                    00026200
     *   +SCV0(15)*SCV1(15)-ONE)                                        00026300
C****                                                                   00026400
      IRR=9                                                             00026500
      IF(DDMAX.GT.SMAL2) GO TO 998                                      00026600
C                                                                       00026700
 3400 DO 3600 J=20,24,4                                                 00026800
      IF(DABS(SCB(J)).GT.SMAL) GO TO 3600                               00026900
      IF(DABS(CANON(NS1+J-1)).LT.SMAL) GO TO 3600                       00027000
      DO 3500 K=1,4                                                     00027100
 3500 SCB(J+K-4)=CANON(NS1+J+K-5)                                       00027200
 3600 CONTINUE                                                          00027300
      DO 3700 K=1,24                                                    00027400
 3700 CANON(NS1+K-1)=SCB(K)                                             00027500
 3200 I=I+1                                                             00028400
      IF(I.GT.NP) GO TO 3800                                            00028500
      DO 3900 K=1,24                                                    00028600
 3900 SCB(K)=CANON(NS+K-1)                                              00028700
      CALL CNCURV(ONE,SCB,SCV0,1)                                       00028800
      GO TO 4000                                                        00028900
C                                                                       00029000
 3800 CANON(NH+3)=NBLK                                                  00029100
      CANON(NH+2)=4.                                                    00029200
C                                                                       00029300
C---     NORMAL PHYSICAL SHAPE OF CURVE HAS NOW BEEN GENERATED          00029700
C---     FLOW/SEGMENTATION PROCESSING NOW FOLLOWS.                      00029800
C                                                                       00029900
 9000 CONTINUE                                                          00030000
      CANON(NH+4)=CANON(NH+1)*24.+ONE                                   00030100
C---     NOW ZERO OUT PART OF THE HEADER TABLE CAREFULLY                00030200
      NN=10                                                             00030300
      DO 1005 I=1,NN                                                    00030400
      CANON(NH+I+5)=ZERO                                                00030500
 1005 CONTINUE                                                          00030600
C                                                                       00030700
C---     IF NO FLOW INPUT IS AVAILABLE, SAVE THE CURVE DATA             00030800
C---     ON AN EXTERNAL FILE                                            00030900
      IF(IFLSEG.EQ.0) GO TO 9010                                        00031000
C                                                                       00031100
      CALL FLOSEG(NSIZE,NSZSAV,2,IFLSEG,IRR)                            00031200
      IF(IRR.NE.0) GO TO 995                                            00031300
C                                                                       00031400
C                                                                       00031500
 9010 CONTINUE                                                          00031600
C---     SAVE SURFACE ON EXTERNAL FILE                                  00031700
C---      FIRST SAVE THE SIZE OF THE ARRAY IN THE INTERNAL FORM         00031800
C                                                                       00031900
      CANON(NH+4)=CANON(NH+1)*24.+ONE                                   00032000
      IF(CANON(NH+7).LT.SMAL) CANON(NH+11)=(CANON(NH+1)+CANON(NH+3))*24.00032100
      IF(CANON(NH+7).LT.SMAL) CANON(NH+12)=ONE                          00032200
C                                                                       00032300
      A(2)=CANON(NH+11)                                                 00032400
 6100 CONTINUE                                                          00032410
C                                                                       00032500
C   BESTIMMUNG DER APT-RECORD-NR.                                       00032520
      IREC=-5                                                           00032540
      CALL TAPOP(AXFILE,IREC)                                           00032560
      CANON(NH)=IREC                                                    00032580
      ISPRNT=2                                                          00032600
      IF(SSTEST) ISPRNT=3                                               00032700
      IF(SSPRT) CALL SCPICT(CANON(NH),SCNAME,ISPRNT)                    00032800
      IF(TEST2.EQ.TRAF)CALL SCTRA(XMATRX(1),A(1),CANON(NH),ISPRNT)      00032900
      KKMODE=1                                                          00033000
      CALL APT094(KKMODE,A,CANON(NH))                                   00033100
      IRR=0                                                             00033200
C                                                                       00033300
C---     SET THE MODE FOR LEVEL OF VERIFICATION PRINT                   00033400
      GO TO 9999                                                        00033500
C                                                                       00033600
C****    AREA OF CODE TO HANDLE MOST ERROR MESSAGES AND TERMINATIONS    00033700
  998 CONTINUE                                                          00033800
      IERROR=5120+IRR                                                   00034000
  996 RNAME=RNAMA                                                       00034010
      DO 7001 IL1=1,IMAX1                                               00034020
 7001 IF (IERROR.EQ.IZAL1(IL1)) RNAME=RNAM1                             00034030
      DO 7002 IL2=1,IMAX2                                               00034040
 7002 IF (IERROR.EQ.IZAL2(IL2)) RNAME=RNAM2                             00034050
      DO 7003 IL3=1,IMAX3                                               00034052
 7003 IF (IERROR.EQ.IZAL3(IL3)) RNAME=RNAM3                             00034054
      DO 7004 IL4=1,IMAX4                                               00034056
 7004 IF (IERROR.EQ.IZAL4(IL4)) RNAME=RNAM4                             00034058
      CALL ERROR(IERROR,RNAME)                                          00034100
      IF(IRR.EQ.9) GOTO 3400                                            00034150
      IF(TEST1.EQ.COMBIN) GO TO  995                                    00034200
C                                                                       00034300
      IF(SSPRT.AND.SSTEST) CALL SCPICT(SC,SCNAME,1)                     00034400
  995 CONTINUE                                                          00034500
      CALL UNDEF(A(1))                                                  00034600
C                                                                       00034800
C****    TERMINATION OF ERROR HANDLING CODE                             00035200
C                                                                       00035300
C---    QUIT PROCESSING HERE                                            00035400
 9999 CONTINUE                                                          00035500
C                                                                       00035600
      IF(IBUG.NE.11) GO TO 9711                                         00035700
C---      DUMP THE ENTIRE SCURV ARRAY                                   00035800
      NTOP=CANON(NH+11)+NH-1                                            00035900
      NBOT=NH                                                           00036000
      DO 9712 I=NBOT,NTOP,4                                             00036100
      IF(MOD(I-NBOT,24).EQ.0) CALL BAD(-1,0,' ',0)                      00036200
      CALL BAD(-4,1,'CANN',CANON(I))                                    00036300
 9712 CONTINUE                                                          00036400
 9711 CONTINUE                                                          00036500
C                                                                       00036600
      RETURN                                                            00036700
      END                                                               00036800
**** SOURCE FILE : M0001030.V01   ***
*
      SUBROUTINE ADER(DIF,TA,TB,A,B,U,MODE,AREA)                        00000100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00000200
C---      PURPOSE IS TO COMPUTE TENSION AND FIRST AND SECOND            00000300
C---      PARTIAL DERIVATIVES OF TENSION WITH RESPECT TO A AND B        00000400
C---      INPUT CONSISTS OF THE FOLLOWING                               00000500
C---      CHORD VECTOR DIF OF PARAMETRIC CUBIC                          00000600
C---      FIRST TANGENT A*TA AND LAST TANGENT VECTOR B*TB               00000700
C---      U=PARAMETRIC VALUE AT WHICH TO EVALUATE TENSION               00000800
C---      MODE=1 ON FIRST ENTRY -- SETUP SOME INVARIANT VALUES          00000900
C---      MODE=0 ON SUBSEQUENT ENTRIES.                                 00001000
C---      OUTPUT IS PLACED IN AREA (1 - 6) AS FOLLOWS.                  00001100
C---      AREA(1) = K*K*DS WHERE K=CURVATURE AND DS=RATE OF CHANGE      00001200
C---      OF ARC LENGTH WITH RESPECT TO COONS PARAMETER U.              00001300
C---      AREA(2)= PARTIAL WRT A OF AREA(1)                             00001400
C---      AREA(3)= PARTIAL WRT B OF AREA(1)                             00001500
C---      AREA(4)= PARTIAL WRT TO A TWICE OF AREA(1)                    00001600
C---      AREA(5)= PARTIAL WRT TO A AND B OF AREA(1)                    00001700
C---      AREA(6)= PARTIAL WRT TO B TWICE OF AREA(1)                    00001800
C                                                                       00001900
      DIMENSION AREA(6),DIF(3),TA(3),TB(3)                              00002000
      DIMENSION TAB(3),TAD(3),TBD(3),CA(3),CB(3)                        00002100
      DIMENSION CV(16),CURV(16)                                         00002200
C                                                                       00002300
      DATA ZERO,ONE,BIG,SMAL/0.0D0,1.0D0,1.0D+8,1.0D-8/                 00002400
C                                                                       00002500
      IF(MODE.EQ.0) GO TO 100                                           00002600
C---IF MODE IS 1 THIS IS FIRST PASS THRU ADER                           00002700
C---COMPUTE INVARIANT DATA FOR THIS AND SUBSEQUENT CALLS                00002800
C---SET UP COONS CANNON FORM OF CURV                                    00002900
      DO 10 I=1,3                                                       00003000
      I1=4*(I-1)+1                                                      00003100
      CURV(I1)=ZERO                                                     00003200
      CURV(I1+1)=DIF(I)                                                 00003300
      CURV(I1+2)=A*TA(I)                                                00003400
      CURV(I1+3)=B*TB(I)                                                00003500
   10 CONTINUE                                                          00003600
      DO 20 I=1,2                                                       00003700
      CURV(12+I)=ONE                                                    00003800
   20 CURV(14+I)=ZERO                                                   00003900
      CALL CROSS(TA,TB,TAB)                                             00004000
      CALL CROSS(TA,DIF,TAD)                                            00004100
      CALL CROSS(TB,DIF,TBD)                                            00004200
C                                                                       00004300
  100 CONTINUE                                                          00004400
C---COMPUTE COEFFICIENTS OF DR X DDR WHERE DR X DDR=                    00004500
C---  XG*A*B*TAB + XH * A * TAD + XK * B * TBD                          00004600
      XG=-2.+6.*U-6.*U**2                                               00004700
      XH=6.*(ONE-U)**2                                                  00004800
      XK=-6.*U**2                                                       00004900
C---COMPUTE CURVE COEFFICIENTS                                          00005000
      CALL CNCURV(U,CURV,CV,2)                                          00005100
C                                                                       00005200
      CALL CROSS(CV(5),CV(9),CV(13))                                    00005300
C---COMPUTE DERIVATIVE FRAGMENTS OF DR X DDR                            00005400
      DO 120 I=1,3                                                      00005500
      CA(I)=B*TB(I)*XG+DIF(I)*XH                                        00005600
      CB(I)=-A*TA(I)*XG+DIF(I)*XK                                       00005700
  120 CONTINUE                                                          00005800
      CALL CROSS(TA,CA,CA)                                              00005900
      CALL CROSS(TB,CB,CB)                                              00006000
C---COMPUTE ALL PARTIAL DERIVATIVES OF (DR X DDR )**2 WRT A NND B       00006100
      X=VDOTF(CV(13),CV(13))                                            00006200
      XA=2.*VDOTF(CV(13),CA)                                            00006300
      XB=2.*VDOTF(CV(13),CB)                                            00006400
      XAA=2.*VDOTF(CA,CA)                                               00006500
      XAB=2.*(VDOTF(CA,CB)+VDOTF(CV(13),TAB)*XG)                        00006600
      XBB=2.*VDOTF(CB,CB)                                               00006700
C                                                                       00006800
C---NEXT COMPUTE ALL PARTIAL DERIVATIVES OF (DR**2)**(-5/2)             00006900
      DRSQ=VDOTF(CV(5),CV(5))                                           00007000
      DRSQ=DMIN1(BIG,DRSQ)                                              00007100
      DRSQ=DMAX1(SMAL,DRSQ)                                             00007200
      RECIP=1./DSQRT(DRSQ)                                              00007300
      Y=RECIP**5                                                        00007400
      FAC=5.*RECIP**7                                                   00007500
      QA=1.-4.*U+3.*U**2                                                00007600
      QB=-2.*U+3.*U**2                                                  00007700
      DO 130 I=1,3                                                      00007800
      CA(I)=TA(I)*QA                                                    00007900
      CB(I)=TB(I)*QB                                                    00008000
  130 CONTINUE                                                          00008100
C---COMPUTE INPUT DOT PRODUCTS                                          00008200
      CALL DOTF(RPRA,CV(5),CA)                                          00008300
      CALL DOTF(RPRB,CV(5),CB)                                          00008400
      CALL DOTF(RARB,CA,CB)                                             00008500
      CALL DOTF(RASQ,CA,CA)                                             00008600
      CALL DOTF(RBSQ,CB,CB)                                             00008700
      YA=-FAC*RPRA                                                      00008800
      YB=-FAC*RPRB                                                      00008900
C---COMPUTE SECOND ORDER PARTIALS OF Y WRT A AND B                      00009000
      YAA=FAC*(7.*RPRA**2/DRSQ-RASQ)                                    00009100
      YBB=FAC*(7.*RPRB**2/DRSQ-RBSQ)                                    00009200
      YAB=FAC*(7.*RPRA*RPRB/DRSQ-RARB)                                  00009300
C                                                                       00009400
C---COMPUTE PARTIALS OF X*Y WRT TO A AND B AND RETURN                   00009500
      AREA(1)=X*Y                                                       00009600
      AREA(2)=XA*Y+X*YA                                                 00009700
      AREA(3)=XB*Y+X*YB                                                 00009800
      AREA(4)=XAA*Y+2.*XA*YA+2.*X*YAA                                   00009900
      AREA(6)=XBB*Y+2.*XB*YB+2.*X*YBB                                   00010000
      AREA(5)=XAB*Y+XA*YB+XB*YA+X*YAB                                   00010100
C                                                                       00010200
      RETURN                                                            00010300
      END                                                               00010400
**** SOURCE FILE : M0002659.V03   ***
*
      SUBROUTINE ANGDER(CV,P,AN,DER,MODE,IRR)                           00000100
C---     PURPOSE IS TO CALCULATE RATES OF CHANGE OF ANGLE FROM          00000200
C---     POINT P TO CURVE AT POINT CV.                                  00000300
C     INPUT CV POINT, FIRST DERIVATIVE, SECOND DERIVATIVE OF CURVE      00000400
C     INPUT P=CENTRAL POINT FROM WHICH ANGLE IS CALCULATED              00000500
C     INPUT AN(OPTIONAL) IS A PLANAR NORMAL IN CASE ANGLE IS            00000600
C            TO BE MEASURED IN A PLANE.                                 00000700
C     INPUT MODE IS 0 ON FIRST CALL, NON-ZERO ON OTHER CALLS.           00000800
C     OUTPUT DER ARRAY CONTAINING CURRENT ANGLE AND RATES OF CHANGE     00000900
C     OUTPUT IRR NON ZERO ON OUTPUT INDICATES AN ERROR.                 00001000
C                                                                       00001100
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00001200
      DIMENSION CV(16),P(3),AN(3),DER(3)                                00001300
      DIMENSION T(3),V(3),VP(3),VPP(3)                                  00001400
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC                                   00001600
      DATA ZERO,ONE,SMAL,VSMAL/0.0D0,1.0D0,1.0D-6,1.0D-20/              00001640
C                                                                       00001700
      IF(MODE.NE.0) GO TO 100                                           00001800
C---     FIRST CHECK AN - NORMALIZE IF NOT ZERO.                        00001900
      W=DSQRT(AN(1)*AN(1)+AN(2)*AN(2)+AN(3)*AN(3))                      00002000
      IF(W.GT.SMAL) GO TO 20                                            00002100
C---     ZERO OUT AN COMPLETELY                                         00002200
      AN(1)=ZERO                                                        00002300
      AN(2)=ZERO                                                        00002400
      AN(3)=ZERO                                                        00002500
      WN=ZERO                                                           00002600
      GO TO 30                                                          00002700
   20 CONTINUE                                                          00002800
C---     NORMALIZE AN                                                   00002900
      AN(1)=AN(1)/W                                                     00003000
      AN(2)=AN(2)/W                                                     00003100
      AN(3)=AN(3)/W                                                     00003200
      WN=(CV(1)-P(1))*AN(1)+(CV(2)-P(2))*AN(2)+(CV(3)-P(3))*AN(3)       00003300
   30 CONTINUE                                                          00003400
      W=ZERO                                                            00003500
      DO 25 I=1,3                                                       00003600
      W=W+(CV(I)-P(I))**2                                               00003700
   25 CONTINUE                                                          00003800
      W=DSQRT(W)                                                        00003900
      IRR=19                                                            00004000
      IF(W.LT.SMAL) GO TO 999                                           00004100
      W=ZERO                                                            00004200
      DO 40 I=1,3                                                       00004300
      T(I)=(CV(I)-P(I))-WN*AN(I)                                        00004400
      W=W+T(I)*T(I)                                                     00004500
   40 CONTINUE                                                          00004600
      W=DSQRT(W)                                                        00004700
      IRR=11                                                            00004800
      IF(W.LT.SMAL) GO TO 999                                           00004900
C---      T IS THE BASE VECTOR FOR MEASURING ANGLE                      00005000
      T(1)=T(1)/W                                                       00005100
      T(2)=T(2)/W                                                       00005200
      T(3)=T(3)/W                                                       00005300
  100 CONTINUE                                                          00005400
C                                                                       00005500
C---     NOW COMPUTE ANGLE W AND DERIVATIVES FROM GENERAL FORMULA       00005600
C---     COS(ANGLE)=(V,T)/DSQRT(V,V) WHERE V=CV-(CV-P,AN)AN.            00005700
C                                                                       00005800
      C=ZERO                                                            00005900
      CP=ZERO                                                           00006000
      CPP=ZERO                                                          00006100
      DO 110 I=1,3                                                      00006200
      C=C+(CV(I)-P(I))*AN(I)                                            00006300
      CP=CP+CV(I+4)*AN(I)                                               00006400
      CPP=CPP+CV(I+8)*AN(I)                                             00006500
  110 CONTINUE                                                          00006600
      DO 120 I=1,3                                                      00006700
      V(I)=CV(I)-P(I)-C*AN(I)                                           00006800
      VP(I)=CV(I+4)-CP*AN(I)                                            00006900
      VPP(I)=CV(I+8)-CPP*AN(I)                                          00007000
  120 CONTINUE                                                          00007100
C---     CALCULATE NECESSARY INNER PRODUCTS                             00007200
      VV=ZERO                                                           00007300
      VT=ZERO                                                           00007400
      VVP=ZERO                                                          00007500
      VVPP=ZERO                                                         00007600
      VPT=ZERO                                                          00007700
      VPPT=ZERO                                                         00007800
      VPVP=ZERO                                                         00007900
C                                                                       00008000
      DO 130 I=1,3                                                      00008100
      VV=VV+V(I)*V(I)                                                   00008200
      VVP=VVP+V(I)*VP(I)                                                00008300
      VVPP=VVPP+V(I)*VPP(I)                                             00008400
      VT=VT+V(I)*T(I)                                                   00008500
      VPT=VPT+VP(I)*T(I)                                                00008600
      VPPT=VPPT+VPP(I)*T(I)                                             00008700
      VPVP=VPVP+VP(I)*VP(I)                                             00008800
  130 CONTINUE                                                          00008900
C---     NOW CALCULATE RATES OF CHANGE OF W=1/DSQRT(V,V)                00009000
      W=DSQRT(VV)                                                       00009100
      IRR=12                                                            00009200
      IF(W.LT.SMAL) GO TO 999                                           00009300
      W=ONE/W                                                           00009400
      W3=W*W*W                                                          00009500
      WP=-VVP*W3                                                        00009600
      WPP=3.*W3*W*W*VVP*VVP                                             00009700
      WPP=WPP-W3*(VPVP+VVPP)                                            00009800
      C=VT*W                                                            00009900
      C=DMIN1(C,ONE)                                                    00010000
      C=DMAX1(C,-ONE)                                                   00010100
      DER(1)=DARCOS(C)                                                  00010200
      SS=DSIN(DER(1))+VSMAL                                             00010300
      IF(DABS(SS).GT.SMAL) GO TO 140                                    00010400
C---      DEGENERATE CASE, USE LHOSPITALS RULE.                         00010500
      DER(2)=-(VPPT*W+2.0*VPT*WP+VT*WPP)/C                              00010600
      DER(2)=DABS(DER(2))                                               00010700
      DER(2)=DSQRT(DER(2))                                              00010800
C---      THE FOLLOWING IS A ROUGH CUT AT SECOND DERIVATIVE.            00010900
      DER(3)=3.0*(VPPT*WP+VPT*WPP)                                      00011000
      DER(3)=(SS*DER(2)**3-DER(3))/(2.*C*(DER(2)+VSMAL))                00011100
      GO TO 150                                                         00011200
  140 CONTINUE                                                          00011300
      DER(2)=-(VPT*W+VT*WP)/SS+VSMAL                                    00011400
      DER(3)=VPPT*W+2.0*VPT*WP+VT*WPP+VT*W*(DER(2))**2                  00011500
      DER(3)=-(DER(3))/SS                                               00011600
  150 CONTINUE                                                          00011700
      IRR=0                                                             00011800
  999 CONTINUE                                                          00011900
      IF(IBUG.NE.11) GO TO 997                                          00012000
      CALL BAD(-3,1,'DER ',DER)                                         00012100
  997 CONTINUE                                                          00012200
      RETURN                                                            00012300
      END                                                               00012400
**** SOURCE FILE : M0001031.V03   ***
*
      SUBROUTINE ANGSEG(C,FL,TOLR,NUM,NUMAX,IRR,P,AN)                   00000100
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               00000200
C---     PURPOSE IS TO REPARAMETERIZE A COONS RATIONAL CUBIC ARC        00000300
C---     C BASED ON PROPORTION OF ANGLE FROM A CENTRAL POINT P.         00000400
C---     THE ANGLE WILL BE MEASURED IN A PLANE THRU P WITH NORMAL       00000500
C---     VECTOR AN IF AN IS NON-ZERO.                                   00000600
C---     INPUT C=COONS RATIONAL PARAMETRIC COEFFICIENTS                 00000700
C---     INPUT TOLR=TOLERANCE FACTOR FOR FLOW RATE FIT(DEFAULT=.001)    00000800
C---     INPUT P=CENTRAL POINT FOR CALCULATION OF ANGULAR FLOW          00000900
C---     INPUT AN=OPTIONAL NORMAL VECTOR FOR MEASUREMENT OF ANGLE       00001000
C---           IN A SPECIFIED PLANE. AN=(0,0,0) FOR NO PLANE.           00001100
C---     OUTPUT FL=STRING OF CUBICS REPRESENTING NEW FLOW RATE          00001200
C---            THESE CUBICS EXPRESS COONS PARAMETER AS A FUNCTION OF AN00001300
C---     OUTPUT NUM=NUMBER OF CUBICS+1 WHICH DETERMINE FLOW RATE.       00001400
C---     OUTPUT IRR=0 FOR NO ERROR, NON-ZERO FOR ERROR                  00001500
C---     INPUT NUMAX=MAXIMUM NUMBER OF CUBICS PERMITTED IN FL ARRAY.    00001600
C                                                                       00001700
      DIMENSION C(16),FL(4,1),P(3),AN(3)                                00001800
      DIMENSION CV(16),DER(3)                                           00001900
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC                                   00002000
      DATA ZERO,ONE,SMAL,VSMAL,HALF/0.0D0,1.0D0,1.0D-6,1.0D-30,0.5D0/   00002100
      NOW=1                                                             00002200
      ANGLEN=ZERO                                                       00002300
      UNOW=ZERO                                                         00002400
      CALL CNCURV(UNOW,C,CV,1)                                          00002500
C---     COMPUTE RATES OF CHANGE OF ANGLE WRT COONS AND INVERT.         00002600
      CALL ANGDER(CV,P,AN,DER,0,IRR)                                    00002700
      IF(IRR.NE.0) GO TO 999                                            00002800
      FL(1,NOW)=DER(1)+VSMAL                                            00002900
      FL(2,NOW)=UNOW                                                    00003000
      FL(3,NOW)=ONE/DER(2)                                              00003100
      FL(4,NOW)=-DER(3)/DER(2)**3                                       00003200
C                                                                       00003300
      CNOW=FL(1,NOW)                                                    00003400
      UNX=.76                                                           00003500
   40 CONTINUE                                                          00003600
      ICHK=1                                                            00003700
   50 CONTINUE                                                          00003800
      CALL CNCURV(UNX,C,CV,1)                                           00003900
      NX=NOW+1                                                          00004000
C---     COMPUTE RATES OF CHANGE OF ANGLE WRT COONS AND INVERT.         00004100
      CALL ANGDER(CV,P,AN,DER,1,IRR)                                    00004200
      IF(IRR.NE.0) GO TO 999                                            00004300
      FL(1,NX)=DER(1)+VSMAL                                             00004400
      FL(2,NX)=UNX                                                      00004500
      FL(3,NX)=ONE/DER(2)                                               00004600
      FL(4,NX)=-DER(3)/DER(2)**3                                        00004700
C                                                                       00004800
C---     FIRST CHECK ACCURACY OF SPLINE REPRESENTATION                  00004900
      DEL1=FL(1,NX)-CNOW                                                00005000
      DEL2=3.*(FL(2,NX)-FL(2,NOW))*(FL(4,NX)+FL(4,NOW))                 00005100
      DV=FL(4,NX)*(2.*FL(3,NOW)+FL(3,NX))+FL(4,NOW)*(FL(3,NOW)+2.*      00005200
     X   FL(3,NX))                                                      00005300
      IF(DABS(DV).LT.VSMAL) GO TO 59                                    00005310
      DEL2=DEL2/DV                                                      00005400
C---     IF SECOND DERIVATIVES VANISH, ANOTHER FORMULA IS NEEDED        00005500
      GO TO 60                                                          00005600
   59 CONTINUE                                                          00005610
      DEL2=ZERO                                                         00005700
      IF(DABS(FL(3,NOW)).GT.VSMAL*SMAL) DEL2=ONE/FL(3,NOW)              00005800
      IF(DABS(FL(3,NX)).GT.VSMAL*SMAL) DEL2=DEL2+ONE/FL(3,NX)           00005810
      IRR=10                                                            00005820
      IF(DEL2.EQ.ZERO) GO TO 999                                        00005830
   60 CONTINUE                                                          00005900
C                                                                       00006000
C---     COMPARE ACCURACY OF ACTUAL AND ESTIMATED CHORD LENGTH.         00006100
      DIF=(DEL2-DEL1)/DEL1                                              00006900
      IF(IBUG.NE.11) GO TO 22                                           00006910
      CALL BAD(-4,1,'FLNW',FL(1,NOW))                                   00006920
      CALL BAD(-4,1,'FLNX',FL(1,NX))                                    00006930
      CALL BAD(1,1,'DEL1',DEL1)                                         00006940
      CALL BAD(1,1,'DEL2',DEL2)                                         00006950
      CALL BAD(-1,1,'DIF ',DIF)                                         00006960
   22 CONTINUE                                                          00006970
      IF(DABS(DIF).GT.TOLR) GO TO 100                                   00007000
C---     ACCURACY IS ACCEPTABLE, IS SPLINE ALSO INCREASING THO.         00007100
      IF(FL(2,NX).LE.FL(2,NOW)) GO TO 100                               00007200
      IF(FL(3,NOW).LT.ZERO) GO TO 100                                   00007300
      IF(FL(3,NX).LT.ZERO) GO TO 100                                    00007400
C---     NOW CHECK FOR A MAX OR MIN WITHIN THE INTERVAL                 00007500
      A=FL(3,NOW)*DEL1                                                  00007600
      B=FL(3,NX)*DEL1                                                   00007700
      AA=3.*(B+A-2.*(FL(2,NX)-FL(2,NOW)))+VSMAL                         00007800
      BB=2.*(3.*(FL(2,NX)-FL(2,NOW))-2.*A-B)                            00007900
      CC=A                                                              00008000
      DISC=BB*BB-4.*AA*CC                                               00008100
      IF(IBUG.NE.11) GO TO 33                                           00008200
      CALL BAD(-1,0,' ',0)                                              00008300
      CALL BAD(1,1,'AA  ',AA)                                           00008700
      CALL BAD(1,1,'BB  ',BB)                                           00008800
      CALL BAD(1,1,'CC  ',CC)                                           00008900
      CALL BAD(-1,1,'DISC',DISC)                                        00009000
   33 CONTINUE                                                          00009100
      IF(DISC.LT.ZERO) GO TO 90                                         00009200
      DISC=DSQRT(DISC)                                                  00009300
      R=(-BB-DISC)/(2.*AA)                                              00009400
      IF(DABS(R-HALF).LT.HALF) GO TO 100                                00009500
      R=(-BB+DISC)/(2.*AA)                                              00009600
      IF(DABS(R-HALF).LT.HALF) GO TO 100                                00009700
   90 CONTINUE                                                          00009800
C---     FUNCTION MEETS ALL CRITERIA, SO GO AFTER THE NXT ARC           00009900
      NOW=NOW+1                                                         00010000
      CNOW=FL(1,NOW)                                                    00010100
      FL(1,NOW)=DEL2+ANGLEN                                             00010200
      ANGLEN=ANGLEN+DEL2                                                00010300
      UDEL=UNX-UNOW                                                     00010400
      UNOW=UNX                                                          00010500
      UNX=UNOW+4.0*UDEL                                                 00010600
      UNX=DMIN1(ONE,UNX)                                                00010700
      IF(UNOW.GT.ONE-SMAL) GO TO 500                                    00010800
      IRR=8                                                             00010900
      IF(NOW.GT.NUMAX-2) GO TO 999                                      00011000
      GO TO 40                                                          00011100
C---     DECREASE UNX AND TRY AGAIN                                     00011200
  100 CONTINUE                                                          00011300
C---      RECOVER SECOND DERIVATIVE FOR FIRST POINT                     00011400
      IF(UNOW.GT.SMAL) GO TO 110                                        00011500
      HDEL=(FL(1,NX)-FL(1,NOW))/2.0                                     00011600
      HDEL2=(HDEL*HDEL)/2.0                                             00011700
      FL(4,NOW)=(FL(2,NX)-FL(2,NOW)-HDEL*(FL(3,NOW)+FL(3,NX))           00011800
     X           +HDEL2*FL(4,NX))/HDEL2                                 00011900
  110 CONTINUE                                                          00012000
      UNX=(UNOW+UNX)*HALF                                               00012100
      ICHK=ICHK+1                                                       00012200
      IRR=9                                                             00012300
      IF(ICHK.GT.10) GO TO 999                                          00012400
      GO TO 50                                                          00012500
C                                                                       00012600
  500 CONTINUE                                                          00012700
      IRR=0                                                             00012800
      FL(2,NOW)=ONE                                                     00012900
C---     TRANSLATE FLOW RATES TO ORIGIN                                 00013000
      NUM=NOW                                                           00013100
      DIF=FL(1,1)                                                       00013200
      DO 510 I=1,NUM                                                    00013300
      FL(1,I)=FL(1,I)-DIF                                               00013400
  510 CONTINUE                                                          00013500
  999 CONTINUE                                                          00013600
      NUM=NOW                                                           00013700
      RETURN                                                            00013800
      END                                                               00013900
**** SOURCE FILE : M0004508.W01   ***
*
      SUBROUTINE APT109(A1,II,A2,A3,A4,A5,A6,A7)                        00000010
      IMPLICIT DOUBLE PRECISION(A-H),DOUBLE PRECISION(O-Z)              00000020
C---- THIS ROUTINE HANDLES THE GEOMETRIC CONSTRUCTION RELATED WITH      00000030
C---- SCULPTURED SURFACE AND CURVE                                      00000040
C---- ARGUMENTS LIST APT109(A1,II,A2,A3,A4,A5,A6,A7)                    00000050
C----    AUFRUFPARAMETER:                                               00000060
C----   II    A2    A3    A4     A5     A6    A7                        00000070
C=====================================================                  00000080
C----   PUNKT/VEKTOR MITTELS PARAMETER AUF SYNTHETISCHER KURVE          00000090
C----             PNT                                                   00000100
C----             TANSPL   FLOW              NOUNIT                     00000110
C----   2, SCURV ,CRSSPL ,PARAM,  T   ,  S  , UNIT                      00000120
C----             NORMAL                                                00000130
C----             BINORM                                                00000140
C=====================================================                  00000150
C----   PUNKT/VECTOR ALS SCHNITTPUNKT ZWISCHEN EBENE UND KURVE          00000160
C----             PNT                                                   00000170
C----             TANSPL        LINE         NOUNIT                     00000180
C----   3, SCURV ,CRSSPL ,-----,PLANE ,POINT, UNIT                      00000190
C----             NORMAL                                                00000200
C----             BINORM                                                00000210
C=====================================================                  00000220
C----   PUNKT/VECTOR MITTELS PARAMETER AUF SKULPTURIERTER FLAECHE       00000230
C----             PNT                                                   00000240
C----             TANSPL                     NOUNIT                     00000250
C----   4, SSURF ,CRSSPL ,  U  ,  V   ,  P  , UNIT                      00000260
C----             NORMAL                                                00000270
C=====================================================                  00000280
C----   PUNKT/VECTOR IN DER NAEHE EINES PUNKTES AUF S.-FLAECHE          00000290
C----             PNT                                                   00000300
C----             TANSPL                     NOUNIT                     00000310
C----   5, SSURF ,CRSSPL ,POINT,------,-----, UNIT                      00000320
C----             NORMAL                                                00000330
C=====================================================                  00000340
C----   PUNKT/VECTOR  AM SCHNITTP. ZWISCHEN DER GERADEN DURCH DIE BEIDEN00000350
C----   PUNKTE UND DER S.-FLAECHE,NAECHSTLIEGEND ZUM 1. PUNKT           00000360
C----             PNT                                                   00000370
C----             TANSPL                     NOUNIT                     00000380
C----   6, SSURF ,CRSSPL ,POINT,------,POINT, UNIT                      00000390
C----             NORMAL                                                00000400
C=====================================================                  00000410
C---- PUNKT/VECTOR  AM SCHNITTP. ZWISCHEN DER GERADEN DURCH PUNKT       00000420
C---- ENTLANG VEKTOR UND DER S.-FLAECHE,NAECHSTLIEGEND ZUM PUNKT        00000430
C----             PNT                                                   00000440
C----             TANSPL                     NOUNIT                     00000450
C----   7, SSURF ,CRSSPL ,POINT,VECTOR,-----, UNIT                      00000460
C----             NORMAL                                                00000470
C=====================================================                  00000480
C---- PUNKT/VECTOR  AM SCHNITTP. ZWISCHEN DER GERADEN DURCH 1. PUNKT    00000490
C---- ENTLANG VEKTOR UND DER S.-FLAECHE,NAECHSTLIEGEND ZUM PUNKT,       00000500
C---- DER DURCH PROJEKTION DES 2. PUNKTES AUF DIEGERADE ENTSTEHT        00000510
C----             PNT                                                   00000520
C----             TANSPL                     NOUNIT                     00000530
C----   8, SSURF ,CRSSPL ,POINT,VECTOR,POINT, UNIT                      00000540
C----             NORMAL                                                00000550
C=====================================================                  00000560
C                                                                       00000570
C  DIE AUFRUF-PARAMETER HABEN SOWEIT SIE SICH NICHT SELBST ERKLAEREN    00000580
C  FOLGENDE BEDEUTUNG:                                                  00000590
C                                                                       00000600
C                                                                       00000610
C    PNT    : IST EQUIVALENT MIT 0.0D0 UND SOLL SIGNALISIEREN,          00000620
C              DASS DAS ERGEBNIS EIN PUNKT SEIN SOLL                    00000630
C    NOUNIT : IST EQUIVALENT MIT 0.0D0 UND BEDEUTET, DASS DAS ERGEBNIS  00000640
C              NICHT NORMALISIERT WERDEN SOLL                           00000650
C    T      : KURVENPARAMETER                                           00000660
C    S      : KURVENSEGMENTNUMMER                                       00000670
C    U,V    : FLAECHENPARAMETER                                         00000680
C    P      : FLAECHEN-BLATT-NUMMER                                     00000690
C    -------: PARAMETER OHNE RELEVANZ                                   00000700
C                                                                       00000710
C                                                                       00000720
C                                                                       00000730
      INCLUDE 'TOTAL.INC'                                               00000871
      INCLUDE 'DEF.INC'                                                 00000981
      INCLUDE 'DSHAR3.INC'                                              00001081
      INCLUDE 'ZNUMBR.INC'                                              00001201
      INCLUDE 'LDEF.INC'                                                00001241
      INCLUDE 'IDEF.INC'                                                00001341
      INCLUDE 'ISHR16.INC'                                              00001411
      INCLUDE 'KNUMBR.INC'                                              00001591
C                                                                       00001592
      DIMENSION A1(*),A2(4),A3(2),A4(2),A5(2),A6(2),A7(2)               00001600
      DIMENSION A4I(3),A5I(4),A6I(3)                                    00001610
      DIMENSION EA(3),FA(4),FB(4),ROOT(2,30),TPP(3)                     00001620
      DIMENSION SSDUM(3),SPV(32),IFLAG(4),PATCH(64),ITOP(6,4)           00001630
       DIMENSION TP(3),TN(3),SP(32),SN(3),SLX(3),JJJ(2),I2(2)           00001640
      CHARACTER*8 TANSPL,CRSSPL,BINORM,FLOW,XNORM,UNIT,PARAM,TEST       00001642
      LOGICAL CKDEF                                                     00001660
C                                                                       00001671
      INCLUDE 'BLANKCOM.INC'                                            00001672
C                                                                       00001673
      EQUIVALENCE (SMAL1,Z1EM3), (AA,JJJ(1))                            00001690
      INTEGER IXNORM(2)                                                 00001694
      EQUIVALENCE (IXNORM(1),XNORM1)                                    00001696
C                                                                       00001740
C    SPEICHERINDEX (KK) FUER ENTSPRECHENDEN ERGEBNISPLATZ               00001750
C IN SPV BEI SCURV UND SSURF                                            00001760
      INTEGER ISPVC(5),ISPVS(4)                                         00001770
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC                                   00001775
C  UEBERGABECOMMON FUER --PARMF--                                       00001780
      COMMON/PARMFC/UA,VA,PNUM,UT,US,FNAM                               00001790
      DATA TANSPL,CRSSPL,BINORM/'TANSPL  ','CRSSPL  ','BINORM  '/       00001792
      DATA FLOW,XNORM/'FLOW    ','NORMAL  '/                            00001794
      DATA IXNORM/2,0/                                                  00001795
      DATA UNIT,PARAM/'UNIT    ','PARAM   '/                            00001796
      DATA ISPVC/1,5,17,29,0/,ISPVS/1,5,9,25/                           00001798
C                                                                       00001799
      FNAM=0.D0                                                         00001800
      GOTO (400,400,401,400,401,401,401,401),II                         00001810
      GOTO 400                                                          00001820
  401 CALL UNPACK(A2(1),MOD1,ISIZE,ISUB)                                00001830
      FNAM=A2(ISIZE+1)                                                  00001840
      IF(ISUB.GE.1)FNAM=A2(ISUB*ISIZE+ISUB)                             00001850
  400 CONTINUE                                                          00001860
C                                                                       00001870
C   KONTROLL OB GEOMETRIEDEFINITIONEN IN ORDNUNG                        00001880
C                                                                       00001890
      GOTO (5158,510,510,510,501,501,501,501),II                        00001900
      GOTO 5158                                                         00001910
  501 IF(CKDEF(A4))GOTO 5157                                            00001920
      CALL TRANSF(A4I,A4,2,3,0)                                         00001930
  510 GOTO (5158,520,511,520,520,520,511,511),II                        00001940
  511 IF(CKDEF(A5))GOTO 5157                                            00001950
      MO=3                                                              00001960
      IF(II.EQ.3)MO=4                                                   00001970
      CALL TRANSF(A5I,A5,MO,MO,0)                                       00001980
  520 GOTO (5158,530,521,530,530,521,530,521),II                        00001990
  521 IF(CKDEF(A6))GOTO 5157                                            00002000
      CALL TRANSF(A6I,A6,2,3,0)                                         00002010
C    KONTROLLE DER SYNTHETISCHEN OBERFLAECHE                            00002020
  530 IF(CKDEF(A2))GOTO 5157                                            00002030
C                                                                       00002040
C    ABFRAGE DER ERGEBNISART (PUNKT/TANSPL/CRSSPL/NORMAL/BINORM)        00002050
C                                                                       00002060
      IA=1                                                              00002070
      IF(A3(1).EQ.0.0D0 )GOTO 540                                       00002080
      IA=2                                                              00002090
      CALL HOLFRM(A3(1),TEST,1,8,NWD)                                   00002092
      IF(TEST.EQ.TANSPL)GOTO 540                                        00002100
      IA=3                                                              00002110
      IF(TEST.EQ.CRSSPL)GOTO 540                                        00002120
      IA=4                                                              00002130
      IF(A3(1).EQ.XNORM1)GOTO 540                                       00002140
      IF(ABS(A3(1)-2.D0).LE.Z1EM6)GOTO 540                              00002145
      IF(TEST.EQ.XNORM )GOTO 540                                        00002150
      IA=5                                                              00002160
      IF(TEST.EQ.BINORM)GOTO 540                                        00002170
      GOTO 5158                                                         00002180
C                                                                       00002190
C   ABFRAGE AUF PARAM ODER FLOW                                         00002200
C                                                                       00002210
  540 IP=0                                                              00002220
      IF(II.NE.2)GOTO 550                                               00002230
      IP=1                                                              00002240
      CALL HOLFRM(A4(1),TEST,1,8,NWD)                                   00002242
      IF(TEST.EQ.PARAM)GOTO 550                                         00002250
      IP=2                                                              00002260
      IF(TEST.EQ.FLOW )GOTO 550                                         00002270
      GOTO 5158                                                         00002280
C                                                                       00002290
C    ABFRAGE AUF UNIT                                                   00002300
C                                                                       00002310
  550 IU=0                                                              00002320
      IF(A7(1).EQ.0.0D0 )GOTO 560                                       00002330
      IU=1                                                              00002340
      CALL HOLFRM(A7(1),TEST,1,8,NWD)                                   00002342
      IF(TEST.EQ.UNIT  )GOTO 560                                        00002350
      GOTO 5158                                                         00002360
C                                                                       00002370
C     FEHLERAUSGAENGE                                                   00002380
C                                                                       00002390
C     FEHLER 5153 : BLATTNUMMER DER SSURF IST FALSCH                    00002400
 5153 IERROR=5153                                                       00002410
 5150 UNFLAG=.TRUE.                                                     00002420
      CALL DEFEXT(A1)                                                   00002430
      RETURN                                                            00002440
C     FEHLER 5154 : PARAMETERANGABE IST NICHT KORREKT                   00002450
C5154 IERROR=5154                                                       00002460
C     GOTO 5150                                                         00002470
C     FEHLER 5155 : VEKTORLAENGE IST FUER DIE NORMALISIERUNG ZU KLEIN   00002480
 5155 IERROR=5155                                                       00002490
      GOTO 5150                                                         00002500
C     FEHLER 5156 : SCHNITTPUNKT KANN NICHT DEFINIERT WERDEN            00002510
 5156 IERROR=5156                                                       00002520
      GOTO 5150                                                         00002530
C     FEHLER 5157 : EINGEGEBENE GEOMETRIE IST NICHT VORHER DEFINIERT    00002540
 5157 IERROR=5157                                                       00002550
      GOTO 5150                                                         00002560
C     FEHLER 5158 : DEFINITIONSFEHLER                                   00002570
 5158 IERROR=5158                                                       00002580
      GOTO 5150                                                         00002590
C     FEHLER 5159 : SPEZIFIZIERTER VEKTOR ODER PUNKT EXISTIERT NICHT    00002600
 5159 IERROR=5159                                                       00002610
      GOTO 5150                                                         00002620
C                                                                       00002630
  560 CONTINUE                                                          00002640
C    SCURV ODER SSURF  WIRD GEHOLT                                      00002650
C                                                                       00002660
      SSDUM(1)=A2(1)                                                    00002670
      SSDUM(2)=A2(2)                                                    00002680
      SSDUM(3)=A2(3)                                                    00002690
      IMODE=3                                                           00002700
      CALL APT094(IMODE,SSDUM,J11)                                      00002710
      IF(CKDEF(SSDUM(1))) GOTO 5157                                     00002720
      J11=J11-41                                                        00002730
C                                                                       00002740
C  PARAMETER-UEBERTRAGUNG IN ABHAENGIGKEIT VON DER AUFGABE              00002750
C                                                                       00002760
      GOTO( 5158,572,573,574,575,576,577,578),II                        00002770
C                                                                       00002780
C PUNKT/VECTOR MITTELS PARAMETER AUS SCURV                              00002790
C                                                                       00002800
  572 U=A5(1)                                                           00002810
      I=A6(1)                                                           00002820
C   UMSPEICHERINDEX FUER SPV                                            00002830
  581 KK=ISPVC(IA)                                                      00002840
C   STEUERUNG FUER ROUTINE CURFLO                                       00002850
      MM=1                                                              00002880
      IF(IA.LT.3)GOTO 580                                               00002890
      MM=2                                                              00002900
      GOTO 580                                                          00002910
C                                                                       00002920
C  PUNKT/VEKTOR AM DURCHSTOSSPUNKT SCURV/EBENE                          00002930
C                                                                       00002940
  573 DO 301 MN=1,3                                                     00002950
      EA(MN)=A6I(MN)                                                    00002960
  301 FA(MN)=A5I(MN)                                                    00002970
      FA(4)=-A5I(4)                                                     00002980
      GOTO 581                                                          00002990
C                                                                       00003000
C  PUNKT/VECTOR MITTELS PARAMETER AUS SSURF                             00003010
C                                                                       00003020
  574 PA01=A4(1)                                                        00003030
      PB01=A5(1)                                                        00003040
      PC01=A6(1)                                                        00003050
      MPATCH=CAN(J11+4)                                                 00003060
      MESH=CAN(J11+5)                                                   00003070
      IF(DABS(PC01).GT.SMAL1) GOTO 2250                                 00003080
      NSPL=CAN(J11+9)-1.                                                00003090
      NPNT=CAN(J11+10)-1.                                               00003100
      IPA01=PA01                                                        00003110
      IPB01=PB01                                                        00003120
      IF(IPA01.LT.NPNT) GOTO 2110                                       00003130
      IPA01=NPNT-1                                                      00003140
 2130 PU01=PA01-IPA01                                                   00003150
 2140 IF(IPB01.LT.NSPL) GOTO 2120                                       00003160
      IPB01=NSPL-1                                                      00003170
 2150 PV01=PB01-IPB01                                                   00003180
 2160 NPATCH=IPB01*NPNT+IPA01+1                                         00003190
      GOTO 2310                                                         00003200
 2110 IF(IPA01.GE.0) GOTO 2130                                          00003210
      IPA01=0                                                           00003220
      PU01=PA01                                                         00003230
      GOTO 2140                                                         00003240
 2120 IF(IPB01.GE.0) GOTO 2150                                          00003250
      IPB01=0                                                           00003260
      PV01=PB01                                                         00003270
      GOTO 2160                                                         00003280
 2250 IF(PC01.LT.0.D0) GOTO 5153                                        00003290
      IPC01=PC01                                                        00003300
      IF((IPC01.GT.MPATCH).OR.(IPC01.LE.0)) GOTO 5153                   00003310
      PU01=PA01                                                         00003320
      PV01=PB01                                                         00003330
      NPATCH=IPC01                                                      00003340
 2310 CONTINUE                                                          00003350
      CALL LODPCH(CAN(J11+1),PATCH,IFLAG,ITOP,NPATCH,1)                 00003360
C                                                                       00003370
      KK=ISPVS(IA)                                                      00003380
C       STEUERUNG FUER ROUTINE CNSURF                                   00003390
      MM=0                                                              00003400
      IF(IA.EQ.1)GOTO 580                                               00003410
      MM=1                                                              00003420
      GOTO 580                                                          00003430
C                                                                       00003440
C    PUNKT/VEKTOR IN DER NAEHE EINES PUNKTES AUF DER SSURF              00003450
C                                                                       00003460
  575 TP(1)=A4I(1)                                                      00003470
      TP(2)=A4I(2)                                                      00003480
      TP(3)=A4I(3)                                                      00003490
      TN(1)=0.0                                                         00003500
      TN(2)=0.0                                                         00003510
      TN(3)=1.0                                                         00003520
      MODE=0                                                            00003530
  585 KK=ISPVS(IA)                                                      00003540
      GOTO 580                                                          00003550
C                                                                       00003560
C   PUNKT/VEKTOR AUF GERADEN (DURCH 2 PUNKTE) UND SSURF                 00003570
C                                                                       00003580
  576 DO  584 MN=1,3                                                    00003590
      TP(MN)=A4I(MN)                                                    00003600
      TN(MN)=A6I(MN)-A4I(MN)                                            00003610
  584 CONTINUE                                                          00003620
      MODE=-1                                                           00003630
      GOTO 585                                                          00003640
C                                                                       00003650
C    PUNKT/VECTOR AUF GERADEN (DURCH PUNKT,ENTLANG VEKTOR) UND SSURF    00003660
C                                                                       00003670
  577 DO  583 MN=1,3                                                    00003680
      TP(MN)=A4I(MN)                                                    00003690
      TN(MN)=A5I(MN)                                                    00003700
  583 CONTINUE                                                          00003710
      MODE=-1                                                           00003720
      GOTO 585                                                          00003730
C                                                                       00003740
C    PUNKT/VEKTOR AUF GERADEN (PUNKT,VECTOR),NAHE EINEM PUNKT,AUF SSURF 00003750
C                                                                       00003760
  578 DO  582 MN=1,3                                                    00003770
      TN(MN)=A5I(MN)                                                    00003780
      TP(MN)=A6I(MN)                                                    00003790
      TPP(MN)=A4I(MN)                                                   00003800
      TP(MN)=TP(MN)-TPP(MN)                                             00003810
  582 CONTINUE                                                          00003820
      DD=DSQRT(TN(1)*TN(1)+TN(2)*TN(2)+TN(3)*TN(3))                     00003830
      IF(DD.LT.SMAL1)GOTO 5155                                          00003840
      DDD=(TP(1)*TN(1)+TP(2)*TN(2)+TN(3)*TP(3))                         00003850
      DDD=DDD/DD                                                        00003860
      TP(1)=DDD*(TN(1)/DD)+TPP(1)                                       00003870
      TP(2)=DDD*(TN(2)/DD)+TPP(2)                                       00003880
      TP(3)=DDD*(TN(3)/DD)+TPP(3)                                       00003890
      MODE=-1                                                           00003900
      GOTO 585                                                          00003910
C                                                                       00003920
C===================================================================    00003930
C    DURCHFUEHRUNG DER AUFGABEN                                         00003940
C===================================================================    00003950
C                                                                       00003960
  580 GOTO(5158,2000,3000,4000,6000,6000,6000,6000),II                  00003970
C                                                                       00003980
C  PUNKT/VEKTOR MITTELS PARAMETER AUS SCURV                             00003990
 2000 CONTINUE                                                          00004000
C  AUF ALLE FAELLE AUSSPEICHERN DER 'ANZAHL FLOW-SEGMENTE'              00004010
      NMAX=CAN(J11+8)                                                   00004020
      IF(IP.EQ.2)GOTO 2100                                              00004030
C  BEI PARAM-INTERPOLATION WIRD CAN(J11+8) VORUEBERGEHEND 0.0D0         00004040
      CAN(J11+8)=0.0D0                                                  00004050
 2100 CALL CURFLO(U,CAN(J11+1),SPV,MM,I)                                00004060
C  NMAX WIRD WIEDER EINGESETZT                                          00004070
      CAN(J11+8)=NMAX                                                   00004080
C   VERZWEIGUN NACH ERGEBNISART                                         00004090
      GOTO(2200,2200,2300,2300,2400),IA                                 00004100
 2200 A1(1)=SPV(KK)                                                     00004110
      A1(2)=SPV(KK+1)                                                   00004120
      A1(3)=SPV(KK+2)                                                   00004130
      IF(IA.EQ.1)GOTO 9100                                              00004140
      GOTO 9200                                                         00004150
C   GUELTIGKEITS ABFRAGE BEI CRSSPL U. NORMAL                           00004160
 2300 IF(SPV(20).NE.1.0D0)GOTO 5159                                     00004170
      GOTO 2200                                                         00004180
C   BERECHNUNG DER BINORMALEN                                           00004190
 2400 CALL CROSS(SPV(5),SPV(9),A1(1))                                   00004200
      GOTO 9200                                                         00004210
C                                                                       00004220
C   PUNKT/VECTOR AUF EBENE UND SCURV  (DURCHSTOSSGEOMETRIE)             00004230
C                                                                       00004240
 3000 MBLK=CAN(J11+4)                                                   00004250
      KK1=0                                                             00004260
      NBLK=1                                                            00004270
C   BERECHNUNG BEI DER ANFANGSTANGENTE (AUSSERHALB LIEGENDER PUNKT)     00004271
      CALL CNCURV(0.D0,CAN(J11+25),SPV,1)                               00004272
      AB=FA(1)*SPV(1)+FA(2)*SPV(2)+FA(3)*SPV(3)+FA(4)                   00004273
      AC=FA(1)*SPV(5)+FA(2)*SPV(6)+FA(3)*SPV(7)                         00004274
      IF(DABS(AC).LT.1.D-6) GOTO 370                                    00004275
      XYZ=-AB/AC                                                        00004276
      IF(XYZ.GT.1.D-5) GOTO 370                                         00004277
C   PUNKT GEFUNDEN                                                      00004278
      KK1=KK1+1                                                         00004279
      ROOT(1,KK1)=J11+25                                                00004280
      ROOT(2,KK1)=XYZ                                                   00004281
  370 NBLK01=NBLK*24+J11+1                                              00004288
      DO 320 NSPL=1,4                                                   00004290
  320 SPV(NSPL)=0.                                                      00004300
      DO 330 NPNT=1,4                                                   00004310
      MN=(NPNT-1)*4                                                     00004320
      DO 331 NSPL=1,4                                                   00004330
  331 FB(NSPL)=CAN(NBLK01+MN+NSPL-1)                                    00004340
      SPV(1)=SPV(1)+FA(NPNT)*(2*FB(1)-2*FB(2)+FB(3)+FB(4))              00004350
      SPV(2)=SPV(2)+FA(NPNT)*(-3*FB(1)+3*FB(2)-2*FB(3)-FB(4))           00004360
      SPV(3)=SPV(3)+FA(NPNT)*FB(3)                                      00004370
  330 SPV(4)=SPV(4)+FA(NPNT)*FB(1)                                      00004380
      CALL GCUBIC(SPV(1),SPV(2),SPV(3),SPV(4),FB,MN)                    00004390
      IF(MN.EQ.0) GOTO 380                                              00004400
      DO 340 NSPL=1,MN                                                  00004410
      XYZ=FB(NSPL)                                                      00004420
      IF((XYZ.GE.-1.D-5).AND.(XYZ.LT.1.00001D0)) THEN                   00004430
        KK1=KK1+1                                                       00004432
        ROOT(1,KK1)=NBLK01                                              00004433
        ROOT(2,KK1)=FB(NSPL)                                            00004434
      END IF                                                            00004436
C                                                                       00004440
C                                                                       00004450
C                                                                       00004460
  340 CONTINUE                                                          00004470
  380 NBLK=NBLK+1                                                       00004480
      IF(NBLK.GT.MBLK) GOTO 360                                         00004490
      GOTO 370                                                          00004500
C   BERECHNUNG BEI DER ENDTANGENTE (AUSSERHALB LIEGENDER PUNKT)         00004541
  360 CALL CNCURV(1.D0,CAN(NBLK01),SPV,1)                               00004542
      AB=FA(1)*SPV(1)+FA(2)*SPV(2)+FA(3)*SPV(3)+FA(4)                   00004543
      AC=FA(1)*SPV(5)+FA(2)*SPV(6)+FA(3)*SPV(7)                         00004544
      IF(DABS(AC).LT.1.D-6) GOTO 361                                    00004545
      XYZ=-AB/AC+1.D0                                                   00004546
      IF(XYZ.LT..99999D0) GOTO 361                                      00004547
C   PUNKT GEFUNDEN                                                      00004548
      KK1=KK1+1                                                         00004549
      ROOT(1,KK1)=NBLK01                                                00004550
      ROOT(2,KK1)=XYZ                                                   00004551
  361 IF(KK1.EQ.0) GOTO 5156                                            00004558
      MN=1                                                              00004560
  335 NBLK01=ROOT(1,MN)                                                 00004570
      CALL CNCURV(ROOT(2,MN),CAN(NBLK01),SPV,1)                         00004580
      DDIST1=(SPV(1)-EA(1))**2+(SPV(2)-EA(2))**2+(SPV(3)-EA(3))**2      00004590
      IF(MN.NE.1) GOTO 315                                              00004600
  325 A1(1)=SPV(1)                                                      00004610
      A1(2)=SPV(2)                                                      00004620
      A1(3)=SPV(3)                                                      00004630
      UT=ROOT(2,MN)                                                     00004640
      IS=(ROOT(1,MN)-J11)/24.D0                                         00004650
      US=IS                                                             00004655
      DDIST=DDIST1                                                      00004660
  345 MN=MN+1                                                           00004670
      IF(MN.GT.KK1) GOTO 3100                                           00004680
      GOTO 335                                                          00004690
  315 IF(DDIST.GT.DDIST1) GOTO 325                                      00004700
      GOTO 345                                                          00004710
C  DURCHSTOSSPUNKT GEFUNDEN                                             00004720
 3100 IF(IA.EQ.1)GOTO 9100                                              00004730
C VEKTOR WIRD GEWUENSCHT:INTERPOLATION DES VEKTORS WIRD VORBEREITET     00004740
      IP=1                                                              00004750
      U=UT                                                              00004760
      NBLK01=US*24.D0+1.D0+J11                                          00004770
      I=US                                                              00004780
      GOTO 2000                                                         00004790
C                                                                       00004800
C  PUNKT/VEKTOR MITTELS PARAMETER AUS SSURF                             00004810
C                                                                       00004820
 4000 CALL CNSURF(PU01,PV01,PATCH,SPV,IFLAG,MM)                         00004830
      GOTO 2200                                                         00004840
C                                                                       00004850
C   PUNKT/VEKTOR AM ANNAEHERUNGS- O. DURCHSTOSS-PUNKT AUF SSURF         00004860
C                                                                       00004870
 6000 DD=DSQRT(TN(1)*TN(1)+TN(2)*TN(2)+TN(3)*TN(3))                     00004880
      IF(DD.LT.SMAL1)GOTO 5155                                          00004890
      TN(1)=TN(1)/DD                                                    00004900
      TN(2)=TN(2)/DD                                                    00004910
      TN(3)=TN(3)/DD                                                    00004920
      IFLG=0                                                            00004925
 5489 IDEBUG=IBUG                                                       00004930
      CALL LODINT(CAN(J11+1),PATCH,UST,VST,TP,TN,IFLAG,                 00004940
     1   ITOP,IPNUM,MODE)                                               00004950
      IF(IDEBUG.LE.0) GO TO 5487                                        00004962
      CALL BAD(1,0,'A109',IPNUM)                                        00004963
      CALL BAD(1,1,'UST ',UST)                                          00004964
      CALL BAD(-1,1,'VST ',VST)                                         00004965
 5487 CALL SQRCUT(Z5EM1,Z5EM1,UST,VST,UU,VV,ICKBN)                      00004966
      UST=Z5EM1+0.9999D0*(UU-Z5EM1)                                     00004967
      VST=Z5EM1+0.9999D0*(VV-Z5EM1)                                     00004968
C...CALL PCHPRC WITH LAST PARAMETER .TRUE. FOR GEOMETRIC CONSTRUCTION   00004969
      CALL PCHPRC(CAN(J11+1),PATCH,UST,VST,TP,TN,UA,VA,                 00004970
     1  SPV,SN,SLX,IFLAG,ITOP,IPNUM,MODE,IDEBUG,IRR,.TRUE.)             00004980
      PNUM=IPNUM                                                        00004990
      IF(SPV(KK+3).EQ.0.0D0)GOTO 5159                                   00005000
      IF(IFLG.NE.0) GO TO 5494                                          00005002
      IFLG=1                                                            00005003
      DO 5490 MN=1,3                                                    00005004
 5490 TPP(MN)=SPV(MN)-TP(MN)                                            00005005
      CALL DOTV(DDD,TPP,TPP)                                            00005006
      DDD=DDD-.1D0                                                      00005007
      CALL DOTV(DD,TPP,TN)                                              00005008
      IF(DD.LT.0.0) GO TO 5492                                          00005009
C---      POINT IS SAME DIRECTION AS VECTOR                             00005010
      DO 5491 MN=1,3                                                    00005011
 5491 TP(MN)=TP(MN)+DDD*TN(MN)                                          00005012
      GO TO 5489                                                        00005013
 5492 DO 5493 MN=1,3                                                    00005014
 5493 TP(MN)=TP(MN)-DDD*TN(MN)                                          00005015
      GO TO 5489                                                        00005016
 5494 CONTINUE                                                          00005017
      GOTO 2200                                                         00005018
C                                                                       00005020
C=======================================================================00005030
C                                                                       00005040
C    ABGESANG                                                           00005050
 9100 CALL TRANSF(P,A1,K2,K3,KM1)                                       00005060
      CALL DEFEXT(A1)                                                   00005070
      RETURN                                                            00005080
 9200 IF(IU.EQ.0)GOTO 9250                                              00005090
      DISTAN=DSQRT(A1(1)*A1(1)+A1(2)*A1(2)+A1(3)*A1(3))                 00005100
      IF(DISTAN.LT.SMAL1) GO TO 5155                                    00005110
      A1(1)=A1(1)/DISTAN                                                00005120
      A1(2)=A1(2)/DISTAN                                                00005130
      A1(3)=A1(3)/DISTAN                                                00005140
C    FALLS NOTWENDIG TRANSFORMIEREN UND ZURUECK                         00005150
 9250 CALL APT078(A1,KM1)                                               00005160
      CALL DEFEXT(A1)                                                   00005170
      RETURN                                                            00005180
      END                                                               00005190
**** SOURCE FILE : M0001909.W01   ***
*
      SUBROUTINE ARCSEG(C,FL,TOLR,NUM,NUMAX,IRR)                        00000100
C---     INPUT  C A RATIONAL PARAMETRIC CUBIC CURVE SEGMENT             00000200
C---     INPUT  NUMAX THE MAXIMUM NUMBER OF FLO RATE SPLINES ALLWD      00000300
C---    INPUT  TOLR THE TOLERANCE TO BE USED IN FITTING(.001 NORMAL)    00000400
C---    OUTPUT IRR ERROR FLAG, ZERO IS CORRECT, NONZERO IS ERROR.       00000500
C---     OUTPUT NUM  NUMBER OF FLOW SPLINES GENERATED                   00000600
C---     OUTPUT FL(4,NUM) 4-POSITION FLOW FUNCTIONS CREATED.            00000700
C---            FL(1,I) IS THE ACCUMULATED ARC LENGTH                   00000800
C---            FL(2,I) IS THE CORRESPONDING COONS PARAMETER            00000900
C---            FL(3,I) IS THE RATE OF CHANGE OF COONS PARAM            00001000
C---            FL(4,I) IS THE SECOND DERIVATIVE OF COON'S PARAMETER    00001100
C                                                                       00001200
C---     PURPOSE IS GENERATE A CUBIC SEGMENT WITH ARC AS FLOW RATE.     00001300
C                                                                       00001400
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)                                00001500
      DIMENSION C(16),FL(4,NUMAX),CV(16),SARC(3)                        00001600
      COMMON/IBUGG/IBUG,IPCOLC,IPCOMC                                   00001800
C   HILFSSPEICHER FUER 5 ZWISCHENPUNKTE                                 00001820
      DOUBLE PRECISION CVV(4,5)                                         00001840
      DATA ZERO,ONE,HALF,SMAL,VSMAL/0.0D0,1.0D0,0.5D0,1.0D-6,1.0D-30/   00001850
C---     NOW=CURRENT ACCEPTED POINT, NX=NEXT CADIDATE POINT             00001900
C---     ALGORITHM PROCEEDS BY SUBDIVIDING REMAINING ARC BY TWO         00002000
C---     UNTIL A SATISFACTORY PARAMETERIZATION OF A SUBARC IS OBTAINED  00002100
      NOW=1                                                             00002200
      ARCLEN=ZERO                                                       00002300
      UNOW=ZERO                                                         00002400
      CALL CNCURV(UNOW,C,CV,1)                                          00002500
C---     DETERMINE RATES OF CHANGE AT THIS POINT                        00002600
      A=DSQRT(CV(5)**2+CV(6)**2+CV(7)**2)+VSMAL                         00002700
      B=(CV(5)*CV(9)+CV(6)*CV(10)+CV(7)*CV(11))/A                       00002800
C---     LOAD THE KEY VALUES FOR THE STARTING POINT                     00002900
      FL(1,NOW)=ARCLEN                                                  00003000
      FL(2,NOW)=UNOW                                                    00003100
      FL(3,NOW)=ONE/A                                                   00003200
      FL(4,NOW)=-B/(A**3)                                               00003300
      UNX=.76                                                           00003400
C   'FLOW,ARC,...'  KORREKTOR BEI GERADEN 'SPLINE/CURSEG'-BOEGEN        00003402
      IF(C(13).NE.ONE.OR.C(14).NE.ONE.OR.C(15).NE.ZERO.                 00003404
     *   OR.C(16).NE.ZERO)GOTO 45                                       00003406
      IF(DABS(C( 2)-C( 1)-C( 3)).GT.SMAL.OR.                            00003408
     *               DABS(C( 3)-C( 4)).GT.SMAL)GOTO 45                  00003410
      IF(DABS(C( 6)-C( 5)-C( 7)).GT.SMAL.OR.                            00003412
     *               DABS(C( 7)-C( 8)).GT.SMAL)GOTO 45                  00003414
      IF(DABS(C(10)-C( 9)-C(11)).GT.SMAL.OR.                            00003416
     *               DABS(C(11)-C(12)).GT.SMAL)GOTO 45                  00003418
      GOTO 49                                                           00003420
C   UNTERSUCHUNG AUF ANNAEHERND GERADEN BOEGEN                          00003422
   45 DO 46 J=1,5                                                       00003424
      U=J                                                               00003426
      U=(U-1.D0)/4.D0                                                   00003428
   46 CALL CNCURV(U,C,CVV(1,J),0)                                       00003430
C BERECHNUNG DER DISTANZEN                                              00003432
      DO 47 J=1,5                                                       00003434
      J1=J                                                              00003436
      J2=J+1                                                            00003438
      IF(J.NE.5)GOTO 48                                                 00003440
      J1=1                                                              00003442
      J2=5                                                              00003444
   48 CVV(4,J)=DSQRT((CVV(1,J2)-CVV(1,J1))**2                           00003446
     *              +(CVV(2,J2)-CVV(2,J1))**2                           00003448
     *              +(CVV(3,J2)-CVV(3,J1))**2)                          00003450
   47 CONTINUE                                                          00003451
      A1=CVV(4,1)+CVV(4,2)+CVV(4,3)+CVV(4,4)                            00003452
      TOLRI=(A1-CVV(4,5))/CVV(4,5)                                      00003453
      IF(DABS(TOLRI).GT.TOLR)GO TO 50                                   00003454
      A2=CVV(4,5)/4.D0                                                  00003455
      DO 42 J=1,4                                                       00003456
      IF(DABS((CVV(4,J)-A2)/A2).GT.TOLR) GOTO 50                        00003457
   42 CONTINUE                                                          00003458
C    TESTDRUCKE  ***************                                        00003460
      CALL BAD(-1,1,'TOLI',TOLRI)                                       00003462
      CALL BAD( 1,1,'TOLR',TOLR)                                        00003464
      CALL BAD( 1,1,'A   ',A   )                                        00003466
      CALL BAD( 1,1,'A1  ',A1  )                                        00003468
      CALL BAD(-1,1,'B   ',B   )                                        00003470
      A=A1                                                              00003472
   49 IRR=22                                                            00003474
      NOW=2                                                             00003476
      FL(1,2)=A-VSMAL                                                   00003478
      FL(2,2)=ONE                                                       00003480
      FL(3,1)=ONE/FL(1,2)                                               00003482
      FL(3,2)=FL(3,1)                                                   00003484
      FL(4,1)=ZERO                                                      00003486
      FL(4,2)=FL(4,1)                                                   00003488
      IF(NOW.GT.NUMAX-2)GOTO 999                                        00003490
      GOTO 500                                                          00003492
C---                                                                    00003500
   50 CONTINUE                                                          00003600
      ICHK=1                                                            00003700
   60 CONTINUE                                                          00003800
      CALL CNCURV(UNX,C,CV,1)                                           00003900
      NX=NOW+1                                                          00004000
C---     DETERMINE RATES OF CHANGE AT THIS POINT                        00004100
      A=DSQRT(CV(5)**2+CV(6)**2+CV(7)**2)+VSMAL                         00004200
      B=(CV(5)*CV(9)+CV(6)*CV(10)+CV(7)*CV(11))/A                       00004300
C---     LOAD THE KEY VALUES                                            00004400
      FL(1,NX)=ARCLEN                                                   00004500
(uafhcx) 11% 